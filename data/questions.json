"{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read 2 variables, named A and B and make the sum of these two variables, assigning its result to the variable X. Print X as shown below. Print endline after the result otherwise you will get \\u201cPresentation Error\\u201d.\\n\",\n    \"id\": 1001,\n    \"input\": \"The input file will contain 2 integer numbers.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Extremely Basic\",\n    \"output\": \"Print the letter X (uppercase) with a blank space before and after the equal signal followed by the value of X, according to the following example.   Obs.: don't forget the endline after all.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"The formula to calculate the area of a circumference is defined as A = \\u03c0 . R2. Considering to this problem that \\u03c0 = 3.14159:\\n                \\n                    Calculate the area using the formula given in the problem description.\",\n    \"id\": 1002,\n    \"input\": \"\\t\\t\\t\\t\\t\\tThe input contains a value of floating point (double precision), that is the variable R.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Area of a Circle\",\n    \"output\": \"Present the message \\\"A=\\\" followed by the value of the variable, as in the example bellow, with four places after the decimal point. Use all double precision variables. Like all the problems, don't forget to print the end of line after the result, otherwise you will receive \\\"Presentation Error\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read two integer values, in this case, the variables A and B. After this, calculate the sum between them and assign it to the variable SOMA. Write the value of this variable.\",\n    \"id\": 1003,\n    \"input\": \"The input file contains 2 integer numbers.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Simple Sum\",\n    \"output\": \"Print the variable SOMA with all the capital letters, with a blank space before and after the equal signal followed by the corresponding value to the sum of A and B. Like all the problems, don't forget to print the end of line, otherwise you will receive \\\"Presentation Error\\\"\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead two integer values. After this, calculate the product between them and store the result in a variable named PROD. Print the result like the example below. Do not forget to print the end of line after the result, otherwise you will receive \\u201cPresentation Error\\u201d.\",\n    \"id\": 1004,\n    \"input\": \"\\tThe input file contains 2 integer numbers.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Simple Product\",\n    \"output\": \"\\tPrint PROD according to the following example, with a blank space before and after the equal signal.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read two floating points' values of double precision A and B, corresponding to two student's grades. After this, calculate the student's average, considering that grade A has weight 3.5 and B has weight 7.5. Each grade can be from zero to ten, always with one digit after the decimal point. Don\\u2019t forget to print the end of line after the result, otherwise you will receive \\u201cPresentation Error\\u201d. Don\\u2019t forget the space before and after the equal sign.\",\n    \"id\": 1005,\n    \"input\": \"The input file contains 2 floating points' values with one digit after the decimal point.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Average 1\",\n    \"output\": \"Print MEDIA(average in Portuguese) according to the following example, with 5 digits after the decimal point and with a blank space before and after the equal signal.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read three values (variables A, B and C), which are the three student's grades. Then, calculate the average, considering that grade A has weight 2, grade B has weight 3 and the grade C has weight 5. Consider that each grade can go from 0 to 10.0, always with one decimal place.\",\n    \"id\": 1006,\n    \"input\": \"The input file contains 3 values of floating points with one digit after the decimal point.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Average 2\",\n    \"output\": \"Print MEDIA(average in Portuguese) according to the following example, with a blank space before and after the equal signal.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read four integer values named A, B, C and D. Calculate and print the difference of product A and B by the product of C and D (A * B - C * D).\",\n    \"id\": 1007,\n    \"input\": \"The input file contains 4 integer values.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Difference\",\n    \"output\": \"Print DIFERENCA (DIFFERENCE in Portuguese) with all the capital letters, according to the following example, with a blank space before and after the equal signal.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write a program that reads an employee's number, his/her worked hours number in a month and the amount he received per hour. Print the employee's number and salary that he/she will receive at end of the month, with two decimal places.\\n                \\n                \\n                \\n                    Don\\u2019t forget to print the line's end after the result, otherwise you will receive \\u201cPresentation Error\\u201d.\\n                    Don\\u2019t forget the space before and after the equal signal and after the U$.\\n\",\n    \"id\": 1008,\n    \"input\": \"The input file contains 2 integer numbers and 1 value of floating point, representing the number, worked hours amount and the amount the employee receives per worked hour.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Salary\",\n    \"output\": \"Print the number and the employee's salary, according to the given example, with a blank space before and after the equal signal.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Make a program that reads a seller's name, his/her fixed salary and the sale's total made by himself/herself in the month (in money). Considering that this seller receives 15% over all products sold, write the final salary (total) of this seller at the end of the month , with two decimal places.\\n                \\n                    - Don\\u2019t forget to print the line's end after the result, otherwise you will receive \\u201cPresentation Error\\u201d.\\n                    - Don\\u2019t forget the blank spaces.\",\n    \"id\": 1009,\n    \"input\": \"The input file contains a text (employee's first name), and two double precision values, that are the seller's salary  and the total value sold by him/her.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Salary with Bonus\",\n    \"output\": \"Print the seller's total salary, according to the given example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"In this problem, the task is to read a code of a product 1, the number of units of product 1, the price for one unit of product 1, the code of a product 2, the number of units of product 2 and the price for one unit of product 2. After this, calculate and show the amount to be paid.\",\n    \"id\": 1010,\n    \"input\": \"The input file contains two lines of data. In each line there will be 3 values: two integers and a floating value with 2 digits after the decimal point.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Simple Calculate\",\n    \"output\": \"The output file must be a message like the following example where \\\"Valor a pagar\\\" means Value to Pay. Remember the space after \\\":\\\" and after \\\"R$\\\" symbol. The value must be presented with 2 digits after the point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"Make a program that calculates and shows the volume of a sphere being provided the value of its radius (R) . The formula to calculate the volume is: (4/3) * pi * R3. Consider (assign) for pi the value 3.14159.\\n\\nTip: Use (4/3.0) or (4.0/3) in your formula, because some languages (including C++) assume that the division's result between two integers is another integer. :)\",\n    \"id\": 1011,\n    \"input\": \"\\tThe input contains a value of floating point (double precision).\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Sphere\",\n    \"output\": \"\\tThe output must be a message \\\"VOLUME\\\" like the following example with a space before and after the equal signal. The value must be presented with 3 digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tMake a program that reads three floating point values: A, B and C. Then, calculate and show:\\n\\t\\t\\t\\ta) the area of the rectangled triangle that has base A and height C.\\n\\t\\t\\t\\tb) the area of the radius's circle C. (pi = 3.14159) \\n\\t\\t\\t\\tc) the area of the trapezium which has A and B by base, and C by height.\\n\\t\\t\\t\\td) the area of \\u200b\\u200bthe square that has side B.\\n\\t\\t\\t\\te) the area of the rectangle that has sides A and B. \\n\\t\\t\\t\\t\\t\",\n    \"id\": 1012,\n    \"input\": \"\\t\\t\\t\\t\\tThe input file contains three double values with one digit after the decimal point.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Area\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output file must contain 5 lines of data. Each line corresponds to one of the areas described above, always with a corresponding message (in Portuguese) and one space between the two points and the value. The value calculated must be presented with 3 digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Make a program that reads 3 integer values and present the greatest one followed by the message \\\"eh o maior\\\". Use the following formula:\\t\\n\",\n    \"id\": 1013,\n    \"input\": \"The input file contains 3 integer values.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"The Greatest\",\n    \"output\": \"Print the greatest of these three values followed by a space and the message \\u201ceh o maior\\u201d.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Calculate a car's average consumption being provided the total distance traveled (in Km) and the spent fuel total (in liters).\",\n    \"id\": 1014,\n    \"input\": \"The input file contains two values: one integer value X  representing the total distance (in Km) and the second one is a floating point number Y\\u00a0  representing the spent fuel total, with a digit after the decimal point.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Consumption\",\n    \"output\": \"Present a value that represents the average consumption of a car with 3 digits after the decimal point, followed by the message \\\"km/l\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read the four values corresponding to the x and y axes of two points in the plane, p1 (x1, y1) and p2 (x2, y2) and calculate the distance between them, showing four decimal places after the comma, according to the formula:\\n                \\n                    Distance =\",\n    \"id\": 1015,\n    \"input\": \"The input file contains two lines of data. The first one contains two double values:\\u00a0x1 y1 and the second one also contains two double values with one digit after the decimal point: x2 y2.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Distance Between Two Points\",\n    \"output\": \"Calculate and print the distance value using the provided formula, with 4 digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\n                    \\tTwo cars (X and Y) leave in the same direction. The car X leaves with a constant speed of 60 km/h and the car Y leaves with a constant speed of 90 km / h.\\n\\n\\t\\t\\t\\t In one hour (60 minutes) the car Y can get a distance of 30 kilometers from the X car, in other words, it can get away one kilometer for each 2 minutes.\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t Read the distance (in km) and calculate how long it takes (in minutes) for the car Y to take this distance in relation to the other car.\",\n    \"id\": 1016,\n    \"input\": \"\\tThe input file contains 1 integer value.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Distance\",\n    \"output\": \"\\tPrint the necessary time followed by the message \\\"minutos\\\" that means minutes in Portuguese.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tLittle John wants to calculate and show the amount of spent fuel liters on a trip, using a car that does 12 Km/L. For this, he would like you to help him through a simple program. To perform the calculation, you have to read spent time (in hours) and the same average speed (km/h). In this way, you can get distance and then, calculate how many liters would be needed. Show the value with three decimal places after the point.\",\n    \"id\": 1017,\n    \"input\": \"\\tThe input file contains two integers. The first one is the spent time in the trip (in hours). The second one is the average speed during the trip (in Km/h).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Fuel Spent\",\n    \"output\": \"\\tPrint how many liters would be needed to do this trip, with three digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"In this problem you have to read an integer value and calculate the smallest possible number of banknotes in which the value may be decomposed. The possible banknotes are 100, 50, 20, 10, 5, 2 e 1. Print the read value and the list of banknotes.\",\n    \"id\": 1018,\n    \"input\": \"The input file contains an integer value N (0 < N < 1000000).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Banknotes\",\n    \"output\": \"Print the read number and the minimum quantity of each necessary banknotes in Portuguese language, as the given example. Do not forget to print the end of line after each line, otherwise you will receive \\u201cPresentation Error\\u201d.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an integer value, which is the duration in seconds of a certain event in a factory, and inform it expressed in hours:minutes:seconds.\",\n    \"id\": 1019,\n    \"input\": \"The input file contains an integer N.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Time Conversion\",\n    \"output\": \"Print the read time in the input file (seconds) converted in hours:minutes:seconds like the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an integer value corresponding to a person's age (in days) and print it in years, months and days, followed by its respective message \\u201cano(s)\\u201d, \\u201cmes(es)\\u201d, \\u201cdia(s)\\u201d.\\n\\t\\n\\tNote: only to facilitate the calculation, consider the whole year with 365 days and 30 days every month. In the cases of test there will never be a situation that allows 12 months and some days, like 360, 363 or 364. This is just an exercise for the purpose of testing simple mathematical reasoning.\",\n    \"id\": 1020,\n    \"input\": \"\\tThe input file contains 1 integer value.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Age in Days\",\n    \"output\": \"\\t\\t\\t\\t\\t\\tPrint the output, like the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead a value of floating point with two decimal places. This represents a monetary value. After this, calculate the smallest possible number of  notes and coins on which the value can be decomposed. The considered notes are of 100, 50, 20, 10, 5, 2. The possible coins are of 1, 0.50, 0.25, 0.10, 0.05 and 0.01. Print the message \\u201cNOTAS:\\u201d followed by the list of notes and the message \\u201cMOEDAS:\\u201d followed by the list of coins.\",\n    \"id\": 1021,\n    \"input\": \"\\tThe input file contains a value of floating point N (0 \\u2264 N \\u2264 1000000.00).\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Banknotes and Coins\",\n    \"output\": \"\\tPrint the minimum quantity of banknotes and coins necessary to change the initial value, as the given example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tYou were invited to do a little job for your Mathematic teacher. The job is to read a Mathematic expression in format of two rational numbers (numerator / denominator) and present the result of the operation. Each operand or operator is separated by a blank space. The input sequence (each line) must respect the following format: number, (\\u2018/\\u2019 char), number, operation char (\\u2018/\\u2019, \\u2018*\\u2019, \\u2018+\\u2019, \\u2018-\\u2018), number, (\\u2018/\\u2019 char), number. The answer must be presented followed by \\u2018=\\u2019 operator and the simplified answer. If the answer can\\u2019t be simplified, it must be repeated after a \\u2018=\\u2019 operator. \\n    \\t\\n\\tConsidering N1 and D1 as numerator and denominator of the first fraction, follow the orientation about how to do each one of these 4 operations:\\n    \\n\\tSum: (N1*D2 + N2*D1) / (D1*D2)\\n\\tSubtraction: (N1*D2 - N2*D1) / (D1*D2)\\n\\tMultiplication: (N1*N2) / (D1*D2)\\n\\tDivision: (N1/D1) / (N2/D2), that means (N1*D2)/(N2*D1)\",\n    \"id\": 1022,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several cases of test. The first value is an integer N (1 \\u2264 N \\u2264 1*104), indicating the amount of cases of test that must be read. Each case of test contains a rational value X (1 \\u2264 X \\u2264 1000), an operation (-, +, * or /) and another rational value Y (1 \\u2264 Y \\u2264 1000).\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"TDA Rational\",\n    \"output\": \"\\t\\t\\t\\t\\t\\tThe output must be a rational number, followed by a \\u201c=\\u201c sign and another rational number, that is the simplification of the first value. In case of the first value can\\u2019t be simplified, the same value must be repeated after the \\u2018=\\u2019 sign.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\tYou have been asked to build a simple encryption program. This program should be able to send coded messages \\n\\twithout someone been able to read them. The process is very simple. It is divided into two parts. \\n\\tFirst, each uppercase or lowercase letter must be shifted three positions to the right, according to the ASCII table: letter 'a' should become letter 'd', letter 'y' must become the character '|' and so on. Second, each line must be reversed. After being reversed, all characters from the half on (truncated) \\n\\tmust be moved one position to the left in ASCII. In this case, 'b' becomes 'a' and 'a' becomes '`'. \\n\\tFor example, if the resulting word of the first part is \\\"tesla\\\", the letters \\\"sla\\\" should be moved one position to the left. However, if the \\n\\tresulting word of the first part is \\\"t#$A\\\", the letters \\\"$A\\\" are to be displaced.\",\n    \"id\": 1024,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains a number of cases of test. The first line of each case of test contains an integer N (1 \\u2264 N \\u2264 1 * 10\\u2074), \\n\\tindicating the number of lines the problem should encrypt. The following N lines contain M characters each M (1 \\u2264 \\n\\tM \\u2264 1 * 10\\u00b3).\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Encryption\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each input, you must present the encrypted message.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Monirul Hasan Tomal, SEU \\u00a0 Bangladesh\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tRaju and Meena love to play with Marbles. They have a lot of marbles with numbers written on them. In the beginning, Raju would place the marbles one after another in ascending order of the numbers written on them. Then, Meena would ask Raju to find the first marble with a certain number. She would count 1...2...3. Raju gets one point for correct answer, and Meena gets the point if Raju fails. After some fixed number of attempts, the game ends and the player with maximum points wins. Today it's your chance to play as Raju. Being a smart kid, you have in your advantage the computer. But don't underestimate Meena, she wrote a program to keep track how much time you're taking to give all the answers. So now you have to write a program, which will help you in your role as Raju.\",\n    \"id\": 1025,\n    \"input\": \"\\t\\t\\t\\t\\tThere can be multiple test cases. The total number of test cases is less than 65. Each test case consists begins with 2 integers: N the number of marbles and Q the number of queries Meena would make. The next N lines would contain the numbers written on the N marbles. These marble numbers will not come in any particular order. Following Q lines will have Q queries. Be assured, none of the input numbers are greater than 10000 and none of them are negative.\\n\\tInput is terminated by a test case where N = 0 and Q = 0.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Where is the Marble?\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case output there must be a serial number of the test case. For each query, write one line of output. The format of this line will depend on whether the number is consulted or not written in one of the marbles. The two different formats are described below:\\n\\t'x found at y', if the first marble with number x was found at position y. Positions are numbered 1, 2,..., N.\\n\\t'x not found', if the marble with number x is not present.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\n\\t\\tBy Monirul Hasan Tomal, SEU  Bangladesh\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t6+9=15 seems okay. But how come 4+6=2?\\n\\t\\n\\tLook at, Mofiz worked hard throughout his Digital Logic course, but when he was asked to implement a 32 bit adder for the laboratory exam, he did some mistake in the design part. After scavenging the design for half an hour, he found his flaw!! He was doing bitwise addition but his carry bit always had zero output. Thus,\\n\\t\\n\\t4\\u00a0 = 00000000 00000000 00000000 00000100\\n\\t+6 = 00000000 00000000 00000000 00000110\\n\\t----------------------------------------\\n\\t2\\u00a0 = 00000000 00000000 00000000 00000010\\n\\t\\n\\tIt\\u2019s a good thing that he finally found his mistake, but it was too late. Considering his effort throughout the course, the instructor gave him one more chance. Mofiz had to write an efficient program that would take 2 unsigned 32 bit decimal numbers as input, and produce an unsigned 32 bit decimal number as the output adding in the same way as his circuit does.\\n\\n\\t\",\n    \"id\": 1026,\n    \"input\": \"\\tIn each input line there will be a pair of integer separated by a single space. Input ends at EOF.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"To Carry or not to Carry\",\n    \"output\": \"\\tFor each input line, the program must provide  an output's line: the value after adding the two numbers in the \\\"Mofiz way\\\".\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tBy Monirul Hasan Tomal, Southeast University  Bangladesh\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tThe task is simple. Through some critical points in 2D, you have to draw a wave like curve. Your goal is to include as many points as possible.\\n\\n\\t\\n\\t\\tThere will be an imaginary line  y = a, which we call the major axis for the curve.\\n\\t\\t\\n\\t\\n\\t\\tAll the points on the curve should have different x coordinates. Their y coordinates should be of form a-1 or a+1.\\n\\n\\n\\t\\n\\tTwo consecutive points on the curve should have a difference of 2 in their y coordinate.\",\n    \"id\": 1027,\n    \"input\": \"\\tThere will be no more than 222 test cases. Each test case starts with an integer N, the number of points in the test case. In the next N lines, there will be N pair of integers giving the x and y coordinate of the points. There will be no more than 1000 points in each test case. All coordinates are integers -- they'd fit in a signed 2 byte integer data type. The data must be read of default input.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Critical Wave\",\n    \"output\": \"\\tFor each test case print a number -- the maximum number of critical points that can be included in a curve drawn from the given points.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tBy Neilor Tonin, URI  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\n\\t\\n\\tRichard and Vicent are crazy about football collectable cards. In their spare time, they arrange a way of playing some game involving such cards. Both also have the habit of exchanging the repeated cards with their friends, and one day they thought about a different game. They called all their friends and proposed the following: with the cards in hand, each one tried to make an exchange with his closest friend following this simple rule: each one must count how many cards he owned. After this, they had to split these cards into stacks, all of it with the same size, as large as it was possible for both players. Then, each one choose one of the friend's card stacks to receive. For example, if Richard and Vincent would change the cards with respectively 8 and 12 cards each, both must put his cards in stacks of four cards (Richard would have two stacks and Vincent had three stacks), and both choose a stack from his friend to receive it.\",\n    \"id\": 1028,\n    \"input\": \"\\tThe first input line contains a single integer N (1 \\u2264 N \\u2264 3000), indicating the number of test cases. Each test case contains two integer numbers F1 (1 \\u2264 F1 \\u2264 1000) and F2 (1 \\u2264 F2 \\u2264 1000)\\u00a0 indicating, respectly, the among of collectable cards that Richard and Vicent have to change.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Collectable Cards\",\n    \"output\": \"\\tFor each test case there will be an integer number at the output, representing the maximum size of the stack of cards which can be exchanged between two players.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Sometimes when you are a Computer Science student, you\\u2019ll see an exercise or  a problem involving the Fibonacci sequence. This sequence has the first two values 0 (zero) and 1 (one) and each next value will always be the sum of the two preceding numbers. By definition, the formula to find any Fibonacci number is:\\n                    \\n                        fib(0) = 0\\n                        fib(1) = 1\\n                        fib(n) = fib(n-1) + fib(n-2);\\n                    One way of finding Fibonacci numbers is by recursive calls. This is illustrated below, presenting the tree of derivation when we calculate fib(4), i.e. the fifth value of this sequence:\\n                  \\n                    \\n                \\n                In this way,\\n                \\n                    \\n                        fib(4) = 1+0+1+1+0 = 3\\n                    \\n                        8 recursive calls were done.\\n\",\n    \"id\": 1029,\n    \"input\": \"The first input line contains a single integer N, indicating the number of test cases. Each test case contains an integer number X (1 \\u2264 X \\u2264 39) .\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Fibonacci, How Many Calls?\",\n    \"output\": \"For each test case we will have an output line, in the following format:  fib(n) = num_calls calls = result, where num_calls is the number of recursive calls, always with a space before and after the equal sign, as shown below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The Josephus' problem is known because of the Flavius Josephus' legend, a Jewish historian living in the 1st century. According to Josephus' account of the siege of Yodfat, he and his 40 comrade soldiers were trapped in a cave, the exit of which one was blocked by Romans. They chose suicide over capture and decided that they would form a circle and start killing themselves skipping three in three. Josephus says that, by luck or maybe by the hand of God, he remained the last and gave up to the Romans.\\u201d\",\n    \"id\": 1030,\n    \"input\": \"There are NC (1 \\u2264 NC \\u2264 30 ) test cases. \\n                    In each input test case there will be a pair of positive integer numbers n (1 \\u2264 n \\u2264 10000 ) and k (1 \\u2264 k \\u2264 1000). The number n represents the quantity of people in the circle, numbered from 1 to n. The number k represents the size of step between two men in the circle.\\n                    Follow an example with 5 men and step 2: In this example the remaining element is 3.\\n                    \\n                \\n                The data must be read from standard input.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Flavious Josephus Legend\",\n    \"output\": \"For each test case we will have an output line, presenting in the following format: Case n: m always with a space before n and m.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tUnknown Author\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tDuring a power crisis in New Zealand last winter (caused by a shortage of rain and hence low levels in the hydro dams), a contingency scheme was developed to turn off the power to areas of the country in a systematic, totally fair, manner. The country was divided up into N regions (Auckland was region number 1, and Wellington number 13). A number, m, would be picked `at random', and the power would first be turned off in region 1 (clearly the fairest starting point) and then in every m'th region after that, wrapping around to 1 after N, and ignoring regions already turned off. For example, if N = 17 and m = 5, power would be turned off to the regions in the order: 1,6,11,16,5,12,2,9,17,10,4,15,14,3,8,13,7.\\n\\tThe problem is that it is clearly fairest to turn off the region of Wellington by last(after all, that is where the Electricity headquarters are), so for a given N, the `random' number m needs to be carefully chosen so that region 13 is the last region selected.\\n\\tWrite a program that will read in the number of regions and then determine the smallest number m that will ensure that Wellington (region 13) can function while the rest of the country is blacked out.\",\n    \"id\": 1031,\n    \"input\": \"\\tInput will consist of a series of lines, each line containing the number of regions N (13 \\u2264 N \\u2264 100 ). The file will be terminated by a line consisting of a single 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Power Crisis\",\n    \"output\": \"\\tOutput will consist of a series of lines, one for each line of the input. Each line will consist of the number m according to the above scheme.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tUnknown Author\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe Joseph\\u2019s problem is notoriously known. For those who are not familiar with the problem, among people numbered 1,2\\u2026n, standing in circle every mth is going to be executed and only the life of the last remaining person will be saved. Joseph was smart enough to choose the position of the last remaining person, thus saving his life to give the message about the incident.\\n\\tAlthough many good programmers have been saved since Joseph spread out this information, Joseph\\u2019s cousin introduced a new variant of the malignant game. This insane character is known for its barbarian ideas and wishes to clean up the world from silly programmers. We had to infiltrate some agents of the ACM in order to know the process in this new mortal game.\\n\\tIn order to save yourself from this evil practice, you must develop a tool capable of predicting which person will be saved.\\n\\tThe Destructive Process\\n\\tThe persons are eliminated in a very peculiar order; m is a dynamical variable, which each time takes a different value corresponding to the prime numbers\\u2019 succession (2,3,5,7\\u2026). So in order to kill the ith person, Joseph\\u2019s cousin counts up to the ith prime.\",\n    \"id\": 1032,\n    \"input\": \"\\t\\u00a0It consists of separated lines containing n [1..3501], and finishes with a 0.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Joseph\\u2019s Cousin\",\n    \"output\": \"\\tThe output will consist in separated lines containing the person's position which the life will be saved.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Monirul Hasan Tomal, Southeast University  Bangladesh\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tThe Fibonacci number is defined by the following recurrence:\\n\\n\\t\\n\\t\\tfib(0) = 0\\n\\t\\n\\t\\tfib(1) = 1\\n\\t\\n\\t\\tfib(n) = fib(n-1)+fib(n-2)\\n\\n\\n\\tBut we're not interested in the Fibonacci numbers here. We would like to know how many calls does it take to evaluate the n Fibonacci number if we follow the given recurrence. Since the numbers are going to be quite large, we'd like to make the job a bit easy for you. We'd only need the last digit of the number of calls, when this number is represented in base b.\",\n    \"id\": 1033,\n    \"input\": \"\\tInput consists of several test cases. For each test there will be two integers n (0 \\u2264 n < (263 - 1)) and b (1 < b \\u2264 10000). Input is terminated by a test case where n=0 and b=0, you must not process this test case.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"How Many Calls?\",\n    \"output\": \"\\tFor each test case, print the number of test case first. Then print n, b and the last digit (in base b) of the number of calls. There should be a single space between the two numbers of a line. Note that the last digit has to be represented in decimal number system.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es, USP, USP  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Every year, artists from around the world came to the city, where they make giant ice sculptures. The city becomes an open sky art gallery, since the sculptures are exposed in the street for weeks, without melting. This is because the average winter temperature in Harbin (time that will occur at the end of the world ICPC) is -20 degrees.\\n                    \\n                    The first step to make the sculpture is to assemble a large block of ice with the size requested by the artist. The blocks are cut from the glaciers of Harbin in blocks of standard height and depth, and several different lengths. The artist can determine the length he wishes his block of ice and the sculpture can begin to be carved.\\n                    \\n                    The lengths of the available blocks are {a1; a2; ...;\\u00a0 aN} and wished length by the artist is M. The block with length = 1 is widely used, for this reason he always appears in the list of available blocks. Your task is to find the minimum number of blocks such that the sum of their lengths is M.\",\n    \"id\": 1034,\n    \"input\": \"In the first input line there is an integer T indicating the number of test cases. Each test case contains two positive integer numbers N (1 \\u2264 N \\u2264 25) and M (1 \\u2264 M \\u2264 1000000). The number N represents the quantity of block types and the all size wished by the artist, respectively. The next line contains a1; a2; ...; aN integers, where (1 \\u2264 ai \\u2264 100) for all i (1,2,...N) separated by a blank space.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Ice Statues Festival\",\n    \"output\": \"For each test case, print the minimum needed blocks to get a block with M length.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read 4 integer values A, B, C and D. Then if B is greater than C and D is greater than A and if the sum of C and D is greater than the sum of A and B and if C and D were positives values and if A is even, write the message \\u201cValores aceitos\\u201d (Accepted values). Otherwise, write the message \\u201cValores nao aceitos\\u201d (Values not accepted).\",\n    \"id\": 1035,\n    \"input\": \"Four integer numbers A, B, C and D.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Selection Test 1\",\n    \"output\": \"Show the corresponding message after the validation of the values\\u200b\\u200b.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\t\\tRead 3 floating-point numbers. After, print the roots of bhaskara\\u2019s formula. If it's impossible to calculate the roots because a division by zero or a square root of a negative number, presents the message \\u201cImpossivel calcular\\u201d.\",\n    \"id\": 1036,\n    \"input\": \"\\t\\t\\t\\t\\t\\tRead 3 floating-point numbers A, B and C.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Bhaskara's Formula\",\n    \"output\": \"\\t\\t\\t\\t\\t\\tPrint the result with 5 digits after the decimal point or the message if it is impossible to calculate.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"You must make a program that read a float-point number and print a message saying in which of following intervals the number belongs: [0,25] (25,50], (50,75], (75,100]. If the read number is less than zero or greather than 100, the program must print the message \\u201cFora de intervalo\\u201d that means \\\"Out of Interval\\\".\\n                    \\n                    The symbol '(' represents greather than. For example:\\n                    [0,25] indicates numbers between 0 and 25.0000, including both.\\n                    (25,50] indicates numbers greather than 25 (25.00001) up to 50.0000000.\",\n    \"id\": 1037,\n    \"input\": \"The input file contains a floating-point number.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Interval\",\n    \"output\": \"The output must be a message like following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tUsing the following table, write a program that reads a code and the amount of an item. After, print the value to pay. This is a very simple program with the only intention of practice\\nof selection commands.\\n\\n\\t\\n\\n\\t\",\n    \"id\": 1038,\n    \"input\": \"\\tThe input file contains two integer numbers X and Y. X is the product code and Y is the quantity of this item according to the above table.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Snack\",\n    \"output\": \"\\tThe output must be a message \\\"Total: R$ \\\" followed by the total value to be paid, with 2 digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy M\\u00e1rcio Oshiro\\u00a0 Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\tNowadays a fire flower isn\\u2019t a thing considered strange for many young people. This is because a famous video game popularized this type of flower. In this game the protagonist gained superpowers by touching a fire flower, going to shoot small fireballs to defeat his enemies.\\n    \\n\\tHowever, it was already said about fire flowers a long time ago. In Polish mythology, fire flowers are flowers of great mystical power guarded by evil spirits. She had this name because it was so bright that was impossible to look at her directly. Who got such flower possessed the ability to read the other people's minds, finding hidden treasures and repel all evil.\\n    \\n\\tTo get a fire flower, one person should look for it in a forest before midnight on the eve of Kupaly Noc. Exactly at midnight, she flourished. To harvest it would be necessary to draw a circle around her. It seems an easy task, however, the evil spirits that guard the flower of all try to distract anyone trying to pick the flower. If the person failed when trying to draw a circle around the flower, would have his life sacrificed.\\n    \\n\\tGiven two circles, one designed by an ambitious fire flowers hunter and another representing the area of the flower, your task is to determine if the hunter dies or becomes rich with his conquest.\",\n    \"id\": 1039,\n    \"input\": \"\\tThe input contains many instances and ends with end of file (EOF). Each instance consists in a line with six integers: R1 (1 \\u2264 R1)\\u00a0, X1(|X1|), Y1(|Y1|), R2 (R2 \\u2264 1000), X2(|X2|), Y2 (Y2 \\u2264 1000).\\n\\t\\n\\tThe circle drawn by the hunter has radius R1 and center (X1; Y1). The circle that represents the flower area have radius R2 e center (X2; Y2).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Fire Flowers\",\n    \"output\": \"\\tFor each test case we will have a line of output, containing \\u201cMORTO\\u201d (dead) or \\u201cRICO\\u201d (rich) if the hunt can pick the flower.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read four numbers (N1, N2, N3, N4), which one with 1 digit after the decimal point, corresponding to 4 scores obtained by a student. Calculate the average with weights 2, 3, 4 e 1 respectively, for these 4 scores and print the message \\\"Media: \\\" (Average), followed by the calculated result. If the average was 7.0 or more, print the message \\\"Aluno aprovado.\\\" (Approved Student). If the average was less than 5.0, print the message: \\\"Aluno reprovado.\\\" (Reproved Student). If the average was between 5.0 and 6.9, including these, the program must print the message \\\"Aluno em exame.\\\" (In exam student).\\n                \\n                    In case of exam, read one more score. Print the message \\\"Nota do exame: \\\" (Exam score) followed by the \\n                    typed score. Recalculate the average (sum the exam score with the previous calculated average and divide by 2) \\n                    and print the message \\u201cAluno aprovado.\\u201d (Approved student) in case of average 5.0 or more) \\n                    or \\\"Aluno reprovado.\\\" (Reproved student) in case of average 4.9 or less. For these 2 cases (approved or reproved after the exam) print the message \\\"Media final: \\\" (Final average) followed by the final average for this student in the last line.\\n\",\n    \"id\": 1040,\n    \"input\": \"The input contains four floating point numbers that represent the students' grades.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Average 3\",\n    \"output\": \"Print all the answers with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write an algorithm that reads two floating values (x and y), which should represent the coordinates of a point in a plane. Next, determine which quadrant the point belongs, or if you are over one of the Cartesian axes or the origin (x = y = 0).\\n                \\n                    \\n                \\n                    If the point is at the origin, write the message \\\"Origem\\\".\\n                \\n                    If the point is over X axis write \\\"Eixo X\\\", else if the point is over Y axis write \\\"Eixo Y\\\".\",\n    \"id\": 1041,\n    \"input\": \"The input contains the coordinates of a point.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Coordinates of a Point\",\n    \"output\": \"The output should display the quadrant in which the point is.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read three integers and sort them in ascending order. After, print these values in ascending order, a blank line and then the values in the sequence as they were readed.\",\n    \"id\": 1042,\n    \"input\": \"The input contains three integer numbers.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Simple Sort\",\n    \"output\": \"Present the output as requested above.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead three point floating values (A, B and C) and verify if is possible to make a triangle with them. If it is possible, calculate the perimeter of the triangle and print the message:\\n\\n\\tPerimetro = XX.X\\n\\n\\tIf it is not possible, calculate the area of the trapezium which basis A and B and C as height, and print the message:\\n\\n\\tArea = XX.X\",\n    \"id\": 1043,\n    \"input\": \"\\tThe input file has tree floating point numbers.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Triangle\",\n    \"output\": \"\\tPrint the result with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead two nteger values (A and B). After, the program should print the message \\\"Sao Multiplos\\\" (are multiples) or \\\"Nao sao Multiplos\\\" (aren\\u2019t multiples), corresponding to the read values.\",\n    \"id\": 1044,\n    \"input\": \"\\tThe input has two integer numbers.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Multiples\",\n    \"output\": \"\\tPrint the relative message to the input as stated above.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead 3 double numbers (A, B and C) representing the sides of a triangle and arrange them in decreasing order, so that the side A is the biggest of the three sides. Next, determine the type of triangle that they can make, based on the following cases always writing an appropriate message:\\n\\t\\n\\n\\t\\n\\t\\tif A \\u2265 B + C, write the message: NAO FORMA TRIANGULO\\n\\t\\n\\t\\tif A2 = B2 + C2, write the message: TRIANGULO RETANGULO\\n\\t\\n\\t\\tif A2 > B2 + C2, write the message: TRIANGULO OBTUSANGULO\\n\\t\\n\\t\\tif A2 < B2 + C2, write the message: TRIANGULO ACUTANGULO\\n\\t\\n\\t\\tif the three sides are the same size, write the message: TRIANGULO EQUILATERO\\n\\t\\n\\t\\tif only two sides are the same and the third one is different, write the message: TRIANGULO ISOSCELES\",\n    \"id\": 1045,\n    \"input\": \"\\tThe input contains three double numbers, A (0 < A) , B (0 < B) and C (0 < C).\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Triangle Types\",\n    \"output\": \"\\tPrint all the classifications of the triangle presented in the input.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read the start time and end time of a game, in hours. Then calculate the duration of the game, knowing that the game can begin in a day and finish in another day, with a maximum duration of 24 hours. The message must be printed in portuguese \\u201cO JOGO DUROU X HORA(S)\\u201d that means \\u201cTHE GAME LASTED X HOUR(S)\\u201d\",\n    \"id\": 1046,\n    \"input\": \"Two integer numbers representing the start and end time of a game.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Game Time\",\n    \"output\": \"Print the duration of the game as in the sample output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead the start time and end time of a game, in hours and minutes (initial hour, initial minute, final hour, final minute). Then print the duration of the game, knowing that the game can begin in a day and finish in another day,\\n\\n\\tObs.: With a maximum game time of 24 hours and the minimum game time of 1 minute.\",\n    \"id\": 1047,\n    \"input\": \"\\tFour integer numbers representing the start and end time of the game.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Game Time with Minutes\",\n    \"output\": \"\\tPrint the duration of the game in hours and minutes, in this format: \\u201cO JOGO DUROU XXX HORA(S) E YYY MINUTO(S)\\u201d . Which means: the game lasted XXX hour(s) and YYY minutes.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"The company ABC decided to give a salary increase to its employees, according to the following table:\\n                \\n                \\n                    \\n                        \\n                                \\n                                    \\n                                        Salary\\n                                         Readjustment Rate\\n                                    \\n                                \\n                                \\n                                    \\n                                        \\n                                            \\n                                                    0 - 400.00\\n                                                    400.01 - 800.00\\n                                                    800.01 - 1200.00\\n                                                    1200.01 - 2000.00\\n                                                    Above 2000.00\\n                                        \\n                                        \\n                                            \\n                                                15%\\n                                                12%\\n                                                10%\\n                                                7%\\n                                                4%\\n                                        \\n                                    \\n                                \\n                             \\n                        \\n                    \\n                    \\n                    Read the employee's salary, calculate and print the new employee's salary, as well the money earned and the increase percentual obtained by the employee, with corresponding messages in Portuguese, as the below example.\",\n    \"id\": 1048,\n    \"input\": \"The input contains only a floating-point number, with 2 digits after the decimal point.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Salary Increase\",\n    \"output\": \"Print 3 messages followed by the corresponding numbers (see example) informing the new salary, the among of money earned and the percentual obtained by the employee. Note:\\n                    Novo salario:\\u00a0 means \\\"New Salary\\\"\\n                    Reajuste ganho: means \\\"Money earned\\\"\\n                    Em percentual: means \\\"In percentage\\\"\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t                   In this problem, your job is to read three Portuguese words. These words define an animal according to the table below, from left to right. After, print the chosen animal defined by these three words.\\n                    \\n\\n\",\n    \"id\": 1049,\n    \"input\": \"\\tThe input contains 3 words, one by line, that will be used to identify the animal, according to the above table, with all letters in lowercase.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Animal\",\n    \"output\": \"\\tPrint the animal name according to the given input.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an integer number that is the code number for phone dialing. Then, print the destination according to the following table:\\n                \\n                \\n                    \\n                \\n                    If the input number isn\\u2019t found in the above table, the output must be:\\n                    DDD nao cadastrado\\n                    That means \\u201cDDD not found\\u201d in Portuguese language.\",\n    \"id\": 1050,\n    \"input\": \"The input consists in a unique integer number.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"DDD\",\n    \"output\": \"Print the city name corresponding to the input DDD. Print DDD nao cadastrado if doesn't exist corresponding DDD to the typed number.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t By Neilor Tonin, URI  Brasil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tIn an imaginary country called Lisarb, all the people are very happy to pay their taxes because they know that doesn\\u2019t exist corrupt politicians and the taxes are used to benefit the population, without any misappropriation. The currency of this country is Rombus, whose symbol is R$.\\n    \\n\\tRead a value with 2 digits after the decimal point, equivalent to the salary of a Lisarb inhabitant. Then print the due value that this person must pay of taxes, according to the table below.\\n\\n\\t\\n\\n\\tRemember, if the salary is R$ 3,002.00 for example, the rate of 8% is only over R$ 1,000.00, because the salary from R$ 0.00 to R$ 2,000.00 is tax free. In the follow example, the total rate is 8% over R$ 1000.00 + 18% over R$ 2.00, resulting in R$ 80.36 at all. The answer must be printed with 2 digits after the decimal point.\",\n    \"id\": 1051,\n    \"input\": \"\\tThe input contains only a float-point number, with 2 digits after the decimal point.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Taxes\",\n    \"output\": \"\\tPrint the message \\\"R$\\\" followed by a blank space and the total tax to be payed, with two digits after the decimal point. If the value is up to 2000, print the message \\\"Isento\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an integer number between 1 and 12, including. Corresponding to this number, \\n                    you must print the month of the year, in english, with the first letter in uppercase.\",\n    \"id\": 1052,\n    \"input\": \"The input contains only an integer number.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Month\",\n    \"output\": \"Print the name of the month according to the input number, with the first letter in uppercase.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Sohel Hafiz  Bangladesh*\",\n    \"category\": \"Graph\",\n    \"description\": \"A simple task!! You will be given the end points of some line segments. Just draw them. Too easy, right???\\n                    \\n                    You decide to challenge yourself and thus plan to add some constraints.\\n                    1] Start from the end point of any line segment.\\n                    2] Do not lift your pen off the paper.\\n                    3] You can go over a line more than once.\\n                    4] Do not draw any line other than the ones mentioned.\\n                    5] You can only change direction at integer coordinates of x & y.\\n                    6] Use the least amount of ink needed.\\n                    \\n                    You need 1 unit of ink to draw one unit of line. Distances between successive points are 1 unit.\\n                    \\n                    So Distance (A1 to B1) = 1 unit and Distance (A1 to A2) = 1 unit.\",\n    \"id\": 1053,\n    \"input\": \"The first line of input is an integer T(T<20) that indicates the total number of test cases. Each case starts with an integer N(N<10). Then N lines follow, each describing a line segment. A line segment is defined by two points YY1X1 Y2X2. Y1 and Y2 will be from [A,E]. X1 and X2  will be from [1,5]. The first sample is taken from the figure above. So look at the sample for exact format.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Continuous Drawing\",\n    \"output\": \"For each case, output the case number followed by the total amount of ink requried with 2 digits after the decimal point. If the lines can\\u2019t be drawn without lifting the pen then print ~x( instead.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tBy Sohel Hafiz  Bangladesh*\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tWith the increased use of pesticides, the local streams and rivers have become so contaminated that it has become almost impossible for the aquatic animals to survive.\\n    \\n\\tFrog Fred is on the left bank of such a river. N rocks are arranged in a straight line from the left bank to the right bank. The distance between the left and the right bank is D meters. There are rocks of two sizes. The bigger ones can withstand any weight but the smaller ones start to drown as soon as any mass is placed on it. Fred has to go to the right bank where he has to collect a gift and return to the left bank where his home is situated.\\n    \\n\\tHe can land on every small rock at most one time, but can use the bigger ones as many times as he likes. He can never touch the polluted water as it is extremely contaminated. Can you plan the itinerary so that the maximum distance of a single leap is minimized?\",\n    \"id\": 1054,\n    \"input\": \"\\tThe first line of input is an integer T ( T < 100 ) that indicates the number of test cases. Each case starts with a line containing two integers N (0 \\u2264 N \\u2264 100 ) and D ( 1 \\u2264 D \\u2264 1000000000 ). The next line gives the description of the N stones. Each stone is defined by S-M. S indicates the type Big(B) or Small(S) and M ( 0 < M < D ) determines the distance of that stone from the left bank. The stones will be given in increasing order of M.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Dynamic Frog\",\n    \"output\": \"\\tFor every case, print the case number followed by the minimized maximum leap.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Sohel Hafiz  Bangladesh*\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tYou will be given n integers  A1A2A3...An. Find a permutation of these n integers so that summation of the absolute differences between adjacent elements is maximized.\\n    \\n\\tSuppose n = 4 and the given integers are  4 2 1 5. The permutation  2 5 1 4 yields the maximum summation.\\n\\tFor this permutation sum = abs(2-5) + abs(5-1) + abs(1-4) = 3+4+3 = 10.\\n    \\n\\tOf all the 24 permutations, you won\\u2019t get any summation whose value exceeds 10. We will call this value, 10, the elegant permuted sum.\",\n    \"id\": 1055,\n    \"input\": \"\\tThe first line of input is an integer T (T  < 100) that represents the number of test cases. Each case consists of a line that starts with n (1 < n < 51) followed by n non-negative integers separated by a single space. None of the elements of the given permutation will exceed 1000.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Elegant Permuted Sum\",\n    \"output\": \"\\tFor each case, show the case number followed by the elegant permuted summation.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Sohel Hafiz  Bangladesh*\",\n    \"category\": \"Graph\",\n    \"description\": \"You will be given two sets of integers. Let\\u2019s call them set A and set B. Set A contains n elements and set B contains m elements. You have to remove k1 elements from set A and k2 elements from set B so that of the remaining values no integer in set B is a multiple of any integer in set A. k1 should be in the range [0,n] and k2 in the range [0,m].\\n                    \\n                    You have to find the value of (k1+k2) such that (k1+k2) is as low as possible.\\n                    \\n                    P is a multiple of Q if there is some integer K such that P = K * Q.\\n                    \\n                    Suppose set A is {2,3,4,5} and set B is {6,7,8,9}. By removing 2 and 3 from A and 8 from B, we get the sets {4,5} and {6,7,9}. Here none of the integers 6, 7 or 9 is a multiple of 4 or 5.\\n                    \\n                    So for this case the answer is 3 (2 from set A and 1 from set B).\",\n    \"id\": 1056,\n    \"input\": \"The first line of input is an integer T (T < 50) that determine the number of test cases. Each case consists of two lines. The first line starts with n followed by n integers. The second line starts with m followed by m integers. Both n and m will be in the range [1,100]. All the elements of the two sets will fit in 32 bit signed integer.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Factors and Multiples\",\n    \"output\": \"For each case, show the case number followed by the answer.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Sohel Hafiz  Bangladesh*\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tYou are playing a computer game in which three robots (Aneed, Ben and Cindy) are trapped in a labyrinth. Initially all three are \\nsituated in three different locations in the maze. There are three outlets through which the robots have to exit. As expected, \\nthere are several obstacles in the maze and the robots can't go through them.  \\n  \\t\\n    \\nThe maze can be modeled as a square grid with NxN. cells. The robots are placed on three different cells into the maze. You \\ncan command them to move. A single command will be activated for the three robots simultaneously. A robot will move to a \\nnew position if it is an empty cell within the maze or it is one of the target cells, otherwise the command will be ignored for \\nthat robot. Your task is to command them such a way that all of them are on three exit cells (in any order). \\n\\t\\n    \\n\\tA move consists of one of the following\\t(Each move takes 1 unit of time):\\n\\tMove North - The robots move one cell north.\\n\\tMove East  - The robots move one cell east.\\n\\tMove South - The robots move one cell south.\\n\\tMove West  - The robots move one cell west.\\n    \\n\\tEach cell consists of one of the following characters:\\n\\tA \\u2013 Initial position of Aneed\\n\\tB \\u2013 Initial position of Ben\\n\\tC \\u2013 Initial position of Cindy\\n\\t. \\u2013 An empty cell\\n\\t# - An obstacle\\n\\tX \\u2013 A target cell\\n    \\n\\tAssume that for every maze each of the letters (A B C) will appear exactly once and the letter X will appear exactly 3 times.\",\n    \"id\": 1057,\n    \"input\": \"\\tThe first line of input is an integer, T (T < 50), that indicates the number of test cases. Each case starts with an integer N (2 < N < 10).\\u00a0 Each of the next N lines contain N characters each that fills up the maze.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Going Together\",\n    \"output\": \"\\tFor each case, output the case number followed by the minimum time required. If it is impossible to move them as described, print \\u2018trapped\\u2019 instead of the time. Note that the first case corresponds to the above picture.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tBy Sohel Hafiz  Bangladesh*\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tA common technique used by invading armies is to surround a city instead of directly entering it. The armies divided themselves into platoons having bases in a circular fashion around the city. To take internal control of the city, platoons are grouped in three to cover triangular regions. It is a policy of the General to ensure that there are no two triangular regions overlap. Unfortunately, the process is more complicated because there are two types of armies in the invading force. The two different armies are known as Red Army and Black Army. A platoon consists of one type of army. While the Black Army has clear intention to serve the General but the Red ones might betray if they get an opportunity. It is decided that every triangular group will consist of at most one Red Army Platoon so that the Red ones don\\u2019t dominate in any assignment..\\n    \\n\\tSuppose we have 6 platoons (4 black and 2 red) as shown in the following figure:\\n\\t\\n\\t\\n\\t    \\n\\tSince there are 6 platoons, we can form 2 groups ( 6 / 3 = 2 ). There are two possible arrangements for this configuration.\\n\\t\\n\\t\\n\\t\\n\\t\\n\\tProblem: You will be given the number of platoons and their colors. You have to find out the number of possible configurations such that every platoon is part of exactly one group and also meets the above restrictions.\",\n    \"id\": 1058,\n    \"input\": \"\\tThe first line of input is an integer T (T<100) that indicates the number of test cases. Each case consists of two lines. The first line is an integer P (2 < P < 40 and P is a multiple of 3). P represents the number of platoons. Next line consists of a string of size P. Each character of the string is either \\u2018R\\u2019 or \\u2018B\\u2019. The string gives the position of the platoons in clockwise order. \\u2018R\\u2019 indicates red and \\u2018B\\u2019 indicates black. The starting position is arbitrarily chosen. So, the example above may be represented by any of the following: \\u2018RBBBRB\\u2019, \\u2018BBBRBR\\u2019, \\u2018BBRBRB\\u2019, \\u2018BRBRBB\\u2019, \\u2018RBRBBB\\u2019 or \\u2018BRBBBR\\u2019.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Independent Attacking Zones\",\n    \"output\": \"\\tFor each case, show the case number followed by the number of valid configurations.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that prints all even numbers between 1 and 100, including them if it is the case.\",\n    \"id\": 1059,\n    \"input\": \"\\tIn this extremely simple problem there is no input.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Even Numbers\",\n    \"output\": \"\\tPrint all even numbers between 1 and 100, including them, one by row.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that reads 6 numbers. These numbers will only be positive or negative (disregard null values). Print the total number of positive numbers.\",\n    \"id\": 1060,\n    \"input\": \"\\tSix numbers, positive and/or negative.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Positive Numbers\",\n    \"output\": \"\\tPrint a message with the total number of positive numbers.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tPeter is organizing an event in his University. The event will be in April month, beginning and finishing within April month. The problem is: Peter wants to calculate the event duration in seconds, knowing obviously the begin and the end time of the event.\\n    \\n\\tYou know that the event can take from few seconds to some days, so, you must help Peter to compute the total time corresponding to duration of the event.\",\n    \"id\": 1061,\n    \"input\": \"\\tThe first line of the input contains information about the beginning day of the event in the format: \\u201cDia xx\\u201d. The next line contains the start time of the event in the format presented in the sample input. Follow 2 input lines with same format, corresponding to the end of the event.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Event Time\",\n    \"output\": \"\\tYour program must print the following output, one information by line, considering that if any information is null for example, the number 0 must be printed in place of W, X, Y or Z:\\n\\t\\n\\tW dia(s)\\n\\tX hora(s)\\n\\tY minuto(s)\\n\\tZ segundo(s)\\n\\t\\n\\tObs: Consider that the event of the test case have the minimum duration of one minute. \\u201cdia\\u201d means day, \\u201chora\\u201d means hour, \\u201cminuto\\u201d means minute and \\u201cSegundo\\u201d means second in Portuguese.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tUnknown Author\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tThere is a famous railway station in PopPush City. Country there is incredibly hilly. The station was built in last century. Unfortunately, the funds were extremely limited that time. It was possible to establish only a surface track. Moreover, it turned out that the station could be only a dead-end one (see picture) and due to lack of available space it could have only one track.\\n\\t\\n\\t\\n\\tThe local tradition is that every train arriving from the direction A continues in the direction B with coaches reorganized in some way. Assume that the train arriving from the direction A has N <= 1000 coaches numbered in increasing order 1,2, \\u2026, N. The chief for train reorganizations must know whether it is possible to marshal coaches continuing in the direction B so that their order will be a1, a2, an. Help him and write a program that decides whether it is possible to get the required order of coaches.\\n    \\n\\tYou can assume that single coaches can be disconnected from the train before they enter the station and that they can move themselves until they are on the track in the direction B. You can also suppose that at any time there can be located as many coaches as necessary in the station. But once a coach has entered the station it cannot return to the track in the direction A and also once it has left the station in the direction B it cannot return back to the station.\",\n    \"id\": 1062,\n    \"input\": \"\\tThe input file consists of blocks of lines. Each block except the last describes one train and possibly more requirements for its reorganization. In the first line of the block there is the integer N described above. In each of the next lines of the block there is a permutation of 1,2, \\u2026, N. The last line of the block contains just 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Rails\",\n    \"output\": \"\\tThe output file contains the lines corresponding to the lines with permutations in the input file. A line of the output file contains Yes if it is possible to marshal the coaches in the order required on the corresponding line of the input file. Otherwise it contains No. In addition, there is one empty line after the lines corresponding to one block of the input file. There is no line in the output file corresponding to the last ``null'' block of the input file.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tDo you remember the railway station of PopPush City? If you don\\u2019t know \\nabout or only to remember, exist a railway station in an incredible hilly country.\\n In addition, the station was built in last century and\\n unfortunately, funds were extremely limited that time. It was possible \\nto establish only a surface track. Moreover, it turned out that the \\nstation could be only a dead-end one (see picture) and due to lack of \\navailable space it could have only one track.\\n\\n\\n\\t\\n\\n\\tEvery wagon arriving from the direction A continues in the direction B,\\n reorganized in some way at the station. You can assume that every \\nsingle wagon can be disconnected from the train before it enter the \\nstation and that they can move themselves until they are on the track in\\n the direction B to be connected in the other locomotive. You can also \\nsuppose that at any time there can be located as many wagons as \\nnecessary in the station. But once a wagon has entered the station it \\ncannot return to the track in the direction A and also once it has left \\nthe station in the direction B it cannot return back to the station.\\n\\n\\n\\tAll the wagons are identified by letters from a to z,\\n all in lowercase. This means 26 wagons, at the maximum. The chief for \\ntrain reorganizations must know what sequence of movements is needed to \\nachieve a desired output order to continue going from station to B \\ndirection. The movements into the station and out of the station are described by the \\nletters I and R (Insert and Remove \\nrespectely). Using the figure example, the input e,t,d,a and the desired\\n output d,a,t,e, result in the movements I,I,I,R,I,R,R,R\",\n    \"id\": 1063,\n    \"input\": \"\\tThe input consists of many test cases, where each one is a set of three\\n lines. The first line is an integer number that represents the number of\\n wagons. The second line contains the input sequence and a third line \\npresents the desired output sequence. The last line of the input \\ncontains just 0, indicating the end of input.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Rails Again... Tracing Movements\",\n    \"output\": \"\\tThe output file contains the lines corresponding to the number of test cases. Each line contain a sequence of I and R needed to produce the output. If it\\u2019s impossible ge nerate the I/R sequence, the message \\\"Impossible\\\" must be printed.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead 6 values that can be floating point numbers. After, print how many of them were positive. In the next line, print the average of all positive values typed, with one digit after the decimal point.\",\n    \"id\": 1064,\n    \"input\": \"\\tThe input consist in 6 numbers that can be integer or floating point values. At least one number will be positive.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Positives and Average\",\n    \"output\": \"\\tThe first output value is the amount of positive numbers. The next line should show the average of the positive values \\u200btyped.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tMake a program that reads five integer values. Count how many\\u00a0of these values \\u200b\\u200bare even and\\u00a0 print this information like the following example.\",\n    \"id\": 1065,\n    \"input\": \"\\tThe input will be 5 integer values.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Even Between five Numbers\",\n    \"output\": \"\\tPrint a message like the following example with all letters in lowercase, indicating how many even numbers were typed.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tMake a program that reads five integer values. Count how many \\u00a0 of these values are even, odd, positive and negative. Print these information like following example.\",\n    \"id\": 1066,\n    \"input\": \"\\tThe input will be 5 integer values.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Even, Odd, Positive and Negative\",\n    \"output\": \"\\tPrint a message like the following example with all letters in lowercase, indicating how many\\u00a0of these values \\u200b\\u200bare even, odd, positive and negative.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an integer value X (1 <= X <= 1000).\\u00a0 Then print the odd numbers from 1 to X, each one in a line, including X  if is the case.\",\n    \"id\": 1067,\n    \"input\": \"The input will be an integer value.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Odd Numbers\",\n    \"output\": \"Print all odd values between 1 and X, including X if is the case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tConsidering an expression with parenthesis, print a message informing if the among of parenthesis is correct or incorrect, without considering the rest of the expression. Example:\\n\\t\\n\\ta+(b*c)-2-a\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 is correct\\n\\t(a+b*(2-c)-2+a)*2\\u00a0 is correct\\n    \\n\\twhen\\n    \\n\\t(a*b-(2+c)\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 is incorrect\\n\\t2*(3-a))\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 is incorrect\\n\\t)3+b*(2-c)(\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 is incorrect\\n    \\n\\t\\n\\tResuming, all closing parenthesis must have an open parenthesis and it's not possible a closing parenthesis without a previous open parenthesis, and the quantity of closing and open parenthesis must be the same.\",\n    \"id\": 1068,\n    \"input\": \"\\tThe input file contains N expressions (1 <= N <= 10000), each one with up to 1000 characters.\\u00a0\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Parenthesis Balance I\",\n    \"output\": \"\\tThe output must be correct or incorrect for each test case according with above rules.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"John is working in a diamond mine, trying to extract the highest number of diamond \\\"<>\\\". He must exclude all sand particles found \\\".\\\" in this process and after a diamond can be extracted, new diamonds can be formed. If he has as an input. <... << .. >> ....> .... >>>. three diamonds are formed. The first is taken from <..> resulting. <... <> ....> .... >>>. The second diamond is then removed, leaving. <.......> .... >>>. The third diamond is then removed, leaving at the end ..... >>>. without the possibility of extracting new diamonds.\",\n    \"id\": 1069,\n    \"input\": \"Read an integer N that is the number of test cases. Then follows N lines each up to 1000 characters, including \\\"<\\\" ,\\\">\\\" and \\\".\\\"\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Diamonds and Sand\",\n    \"output\": \"You must print the amount of diamonds that can be extrated in each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an integer value X and print the 6 consecutive odd numbers from X, a value per line, including X if it is the case.\",\n    \"id\": 1070,\n    \"input\": \"\\tThe input will be a positive integer value.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Six Odd Numbers\",\n    \"output\": \"\\tThe output will be a sequence of six odd numbers.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead two integer values X and Y. Print the sum of all odd values between them.\",\n    \"id\": 1071,\n    \"input\": \"\\tThe input file contain two integer values.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Sum of Consecutive Odd Numbers I\",\n    \"output\": \"\\tThe program must print an integer number. This number is the sum off all odd values between both input values that must fit in an integer number.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an integer N. This N will be the number of integer numbers X that will be read.\\n                \\n                    Print how many these numbers X are in the interval [10,20] and how many values are out of this interval.\\n                    \\u00a0\",\n    \"id\": 1072,\n    \"input\": \"The first line of input is an integer N (N < 10000), that indicates the total number of test cases.\\n                    Each case is an integer number X (-107 < X < 107).\\n                    \\n                    \\u00a0\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Interval 2\",\n    \"output\": \"For each test case, print how many numbers are in and how many values are out of the interval.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an integer N. Print the square of each one of the even values from 1 to N including N if it is the case.\",\n    \"id\": 1073,\n    \"input\": \"The input contains an integer N (5 < N < 2000).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Even Square\",\n    \"output\": \"Print the square of each one of the even values from 1 to N, as the given example.\\n   Be carefull! Some language automaticly print 1e+006 instead 1000000. Please configure your program to print the correct format setting the output precision.   \\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an integer value N. After, read these N values and print a message for each value saying if this value is odd, even, positive or negative. In case of zero (0), although the correct description would be \\\"EVEN NULL\\\", because by definition zero is even, your program must print only \\\"NULL\\\", without quotes. \\n\",\n    \"id\": 1074,\n    \"input\": \"\\tThe first line of input is an integer N (N < 10000), that indicates the total number of test cases. Each case is a integer number X (-107 < X <107)..\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Even or Odd\",\n    \"output\": \"\\tFor each test case, print a corresponding message, according to the below example. All messages must be printed in uppercase letters and always will have one space between two words in the same line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an integer N. Print all numbers between 1 and 10000, which divided by N will give the rest = 2.\",\n    \"id\": 1075,\n    \"input\": \"\\tThe input is an integer N (N < 10000)\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Remaining 2\",\n    \"output\": \"\\tPrint all numbers between 1 and 10000, which divided by n will give the rest = 2, one per line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Peter loves to draw mazes, and recently he had an idea: which would be the minimum of pen movements needed to draw a maze, always beginning and finishing at the same position? To make the game more interesting, Peter decided that it is not allowed to lift the pen from the paper. The templates for construction of the maze are always square,  3 x 3, 4 x 4, 5 x 5 up to a maximum of 7 x 7.\\n                    \\n                    \\n                    For each example, Peter will specify where the drawing must start and your task is to determine the amount of movements required to draw the Peter's maze. Peter remembers that you do not have to worry about cycles, because there will be no cycles in any of the test cases. However, a test case can have an input 4 1 and another input  1 4. This means two lines connecting these same two nodes. Anyway it will make no difference in the drawing of the labyrinth because the amount of movement should be the same. \\n                    \\n                    \\n                    See the examples below, In the maze(4 x 4), Peter wants to begin in the node 0, draw all lines and return to node 0. For this, the minimum of possible moves is 30. In the maze B (3 x 3), Pedro begins in the node 1, draws all lines and returns to node 1. In this case, he needs 10 movements to make this drawing. \\n                    \\n                \\n\",\n    \"id\": 1076,\n    \"input\": \"The first input line contains an integer T (T < 100)  that represents the number of test cases. Each test case begin with a line containing an integer N ( N < X2, where X  is the size of the maze that can be from 3 up to 7). This N  is the node where the drawing must start and also finish. In the next input line there are two informationsV  and A  that respectively represents the amount of vertices and edges of the maze. Follow A  lines, each one indicating a line segment that Peter must plot to draw the desired maze.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Design Labirints\",\n    \"output\": \"The output should contain one integer for each test case. This number is the amount of movement of pen that must be made to draw the desired maze, considering that the start and end are always from the same point (node) that can not lift the pen from the paper.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"The teacher asked you to write a program that convert an infix expression to a postfix expression. Like you know, the terms in and pos are according with the operators position. The program will have to handle only with the binary operators +, -, *, /, ^. parenthesis, letters and numbers. An example would be an expression like:\\n                    (A*B+2*C^3)/2*A. The program must convert this expression (infix) to the posfix expression: AB*2C3^*+2/A*\\n                    All expressions of the test cases are expressions with valid sintax.\",\n    \"id\": 1077,\n    \"input\": \"The first line of input is an integer N (N < 1000), that indicates the total number of test cases. Each case is a valid expression in the infix format.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Infix to Posfix\",\n    \"output\": \"For each test case, print the expression converted to posfix expression.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an integer N (2 < N < 1000). Print the multiplication table of N.\\n\\t1 x N = N\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 2 x N = 2N\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 ...\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 10 x N = 10N\\n\\t\\u00a0\",\n    \"id\": 1078,\n    \"input\": \"\\tThe input is an integer N (1 < N < 1000).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Multiplication Table\",\n    \"output\": \"\\tPrint the multiplication table of N., like the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an integer N, which represents the number of following test cases.\\n                    Each test case consists of three floating-point numbers, each one with \\n                    one digit after the decimal point. Print the weighted average for each \\n                    of these sets of three numbers, considering that the first number has \\n                    weight 2, the second number has weight 3 and the third number has weight\\n                    5.\",\n    \"id\": 1079,\n    \"input\": \"The input file contains an integer number N in the first line. Each N following line is a test case with three float-point numbers, each one with one digit after the decimal point.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Weighted Averages\",\n    \"output\": \"For each test case, print the weighted average according with below example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read 100 integer numbers. Print the highest read value and the input position.\",\n    \"id\": 1080,\n    \"input\": \"The input file contains 100 distinct positive integer numbers.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Highest and Position\",\n    \"output\": \"Print the highest number read and the input position of this value, according to the given example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tIn graphs, the PathR function is well-known. It's called dfs or dfsr. It means a recursive deph-searching in nodes of a graph, using backtracking. The task here is, from an input graph, generate the hierarquie design of the searched nodes. To help you, is given the PathR procedure, listed above.\\n    \\n\\n\\t\",\n    \"id\": 1081,\n    \"input\": \"\\tThe input file contains many test cases. The first line of the input file contains an integer N\\u00a0 that represents the quantity of test cases that follows. Each one of N test cases contains, in the first line, two informations:  (1 \\u2264 V \\u2264 20) and E (1 \\u2264 E \\u2264 20), that are respectively the amount of vertices and edges of the graph. Follow E lines containing informations over all of the edges of this graph.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"DFSr - Depth Hierarchy\",\n    \"output\": \"\\tFor each test case, an output must be printed that represents a depth search for all nodes, with respect of the hierarquie of each of them. The character b means a blank space. See the follewing example:\\n\\tbb0-2 pathR(G,2)\\n\\tbbbb2-1 pathR(G,1)\\n\\tbbbb2-4 pathR(G,4)\\n\\tbbbbbb4-1\\n\\t\\n\\tAnd so on...\\n\\tObs.: The program should print a blank line after each test case, even after the last test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Based on these three definitions:\\n                    \\n                    Connected graph: A graph G (V, E) is connected if for each pair of nodes u and v there is a path between u and v. A graph with only one component is a connected graph.\\n                    \\n                    Disconnected graph: A graph G (V, E) is disconnected if it is formed by two or more connected components.\\n                    \\n                    Connected component: Connected components of a graph are connected subgraphs of this graph.\\n                    \\n                    The following graph has 3 connected components. The first one is formed by nodes a, b, c. The second one is formed only by d node and the third component is formed by nodes e and f.\\n                \\n                    \\n                    \\n                \\n                    Based on these concepts, where each input has identification of each one of the vertices, edges and the links between the nodes by the edges, list all connected components that exist in the graph, according to the given input.\",\n    \"id\": 1082,\n    \"input\": \"The first line of input file contains an integer N that represents the number of test cases that follows. \\n                    Each test case contains two numbers V and E, respectively the number of Vertices and Edges of the graph. Follow E lines, each one representing one of the edges that connect such vertex. Each vertex is represented by a lowercase letter of the alphabet. This mean 26 vertex at maximum (a-z). Each graph has at least one connected component.\\n                    \\n                    \\n                    Obs: The vertex of each test case always begin with 'a'. This mean that a test case with 3 vertex has the vertex \\n                    'a', 'b' and 'c'.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Connected Components\",\n    \"output\": \"For each test case, print the message Case #n: indicating the number of test case (as shown below). Follow the vertex of each segment, a segment per line, separated by commas (including a comma at the end of the line). Finishing the test case a message must be printed indicating the number of connected components of the graph. Every test case must have a blank line printed at the end, including the last one.\\n                \\n                Important: the vertices must be printed in ascending order and if exist path from a to b means that exist path from b to a.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\t\\tOne of the most interesting use of stack is in evaluation of a mathematical expression. We can, through the stack, do the lexical analysis of the expression (indicating whether a valid expression has an invalid operand -a symbol which is not present in the table of operators or a symbol which is not present in the table of operands) and also the parsing. The parsing may indicate that it is missing one or more brackets, leaving one or more brackets, leaving the operator, two successive operands, etc.. The task here is to determine whether an expression is correct or is not correct.\\n\\t\\t\\t\\t\\t\",\n    \"id\": 1083,\n    \"input\": \"\\t\\t\\t\\t\\t\\tIn the input, are valid:\\n\\t\\t\\t\\t\\t\\ta) Operands: all uppercase and lowercase letters ('a'..'z', 'A'..'Z') and numbers (0...9).\\n\\t\\t\\t\\t\\t\\tb) Parenthesis.\\n\\t\\t\\t\\t\\t\\tc) Operators: all following operators in the priority table shown below are accepted:\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tOperator\\n\\t\\t\\t\\t\\t\\t\\tPriority\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t^\\n\\t\\t\\t\\t\\t\\t\\t\\t6\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t*,/\\n\\t\\t\\t\\t\\t\\t\\t\\t5\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t+,-\\n\\t\\t\\t\\t\\t\\t\\t\\t4\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t>,<,=,#,\\n\\t\\t\\t\\t\\t\\t\\t\\t3\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ( . )\\n\\t\\t\\t\\t\\t\\t\\t\\t2\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\tOR ( | )\\n\\t\\t\\t\\t\\t\\t\\t\\t1\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tTo make your job a little easier, you must use the point like AND (.) e the pipe like OR ( | ).\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tIt won't be allowed expressions with unary operators. Example: 4 * -2\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tThe end of input is determined by the end of file EOF().\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"LEXSIM - Sintatic and Lexical Avaliator\",\n    \"output\": \"\\t\\t\\t\\t\\t\\tAs output, for each input expression should be generated a line indicating the result of processing. If the expression is correct, it should be transformed to the form posfix. If not possible, messages should be printed indicating Lexical Error or Syntax Error, in this order.\\n\\t\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By F\\u00e1bio Dias Moreira  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Juliano is a fan of the TV show Erasing and Winning, where participants are selected in a draw and receive money for taking part in the show.\\n                In the show, the presenter writes a number of N digits on a board. Then the participant must erase exactly D digits from the number on the board; the number formed by the remaining digits is the value of the money prize for the participant.\\n                Juliano was finally selected to take part in the show, and asked you to write a program that, give the number the presenter wrote on the board, and the number of digits Juliano must erase, determines the highest value of the prize he can win.\",\n    \"id\": 1084,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N and D (1 \\u2264 D < N \\u2264 105) indicating respectively the number of digits of the number the presenter wrote in the board and the number of digits that must be erased. The next line contains the number the presenter wrote; the number does not start with a zero.\\n                The end of input is indicated by a line containing only two zeros, separated by a space.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Erasing and Winning\",\n    \"output\": \"For each test case in the input your program must produce one single line in the output, containing the highest prize Juliano can win.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Pedro Demasi  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"John and Mary are brothers, and are enthusiastic about their courses on foreign languages. Each one is taking several language courses. When they get home they comment about grammar, vocabulary, culture of the different countries and so on. In one of those conversations they realized that some words are common to more than one language, even though the words may have different meanings in the languages. For example, the word \\\"amigo\\\" exists in Portuguese and Spanish and has the same meaning, while \\\"date\\\" is a word that exists in English and French and may have different meanings, since \\\"date\\\" is also a fruit, besides meaning a calendar date. On the other hand, \\\"red\\\" in Spanish is a network, while in English it is a color.\\n                    Thrilled by these findings, the brothers decided to write in a notepad all words in common they could think of, associating each word to a pair of languages. Observant and smart, John proposed a challenge to Mary: given one language to start and one language to finish, write down a sequence of words such that the first word is included in the vocabulary of the start language, and the last word is included in the vocabulary of the finish language. Two adjacent words in the sequence must be in the vocabulary of the same language. For example, if the start language is Portuguese and the finish language is French, Mary could write the sequence \\\"amigo actual date\\\" (Portuguese/Spanish, Spanish/English, English/French).\\n                    To John's surprise, Mary solved the problem rather easily. Annoyed by his sister's success, he decided to make the problem more difficult: Mary must find a solution in which the sequence has the smallest number of letters in total (not counting spaces between words), and, besides, two consecutive words must not have the same initial letter.\\n                    Note that the previous solution is now invalid, as \\\"amigo\\\" and \\\"actual\\\" share the same initial letter. It is possible, however, to find another solution, \\\"amigo red date\\\", with a total length equal to 12.\\n                    John did an extensive research on the Internet and compiled an enormous list of words, and challenged Mary to solve the problem. As there may be more than one solution, he asked her to answer if there is a solution, and in that case to answer the number of letters in the best solution. Can you help Mary?\",\n    \"id\": 1085,\n    \"input\": \"The input contains several test cases. The first line of a test case contains one integer M (1 \\u2264 M \\u2264 2000), representing the total number of words compiled by John. The second line contains two distinct strings O and D, separated by one space, indicating respectively the start language and the finish language. Each of the next M lines contains three strings I1, I2 and P, separated by one space, representing respectively two languages and one word in common between both languages (I1 and I2 arealways distinct). All strings will have length at least 1 and at most 50, and will be composed of lower case letters only. The same pair of languages may have several words associated to it, but a word P will be never repeated in a test case.\\n                    The end of input is indicated by a line containing only one zero.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Babel\",\n    \"output\": \"\\t                   For each test case in the input, your program must print a line with a single integer, the length of the shortest sequence that satisfies John's restrictions, or the word \\\"impossivel\\\" (lowercase, meaning \\\"impossible\\\" in Portuguese) in case it is not possible.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\tBy Ricardo Anido\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe Tingua Social Club is building its new ballroom. The club members wish to have the floor covered with wood planks, as they consider this to be the best for dancing. A lumberyard from the region donated a large quantity of good quality wooden planks to be used in the ballroom. The donated planks have all the same width, but have different lengths.\\n\\n\\n\\tThe ballroom is a rectangle of dimensions N x M meters. The planks must be placed juxtaposed, so that no plank superposes another, and the whole floor must be covered. They must be aligned, lengthwise, to one of the sides of the ballroom, and all planks must be parallel. The club members do not want too many joints in the floor, and therefore if a plank is not long enough to cover the distance between two opposite sides of the ballroom, it can be joined to at most one other plank to complete the distance. Furthermore, the chief-carpenter has a great respect for all woods, and would rather not seeing any plank. Therefore, he wants to know if it is possible to cover the floor with the set of planks donated, observing the restrictions described; in case it is possible, the chief-carpenter wish knowing the smallest number of planks he can use.\\n\\n\\t\\n\\n\\tThe figure below depicts two possible ways to cover the floor of a ballroom with dimensions 4 x 5 meters for a set of ten donated planks, with 100 cm width, and lengths 1, 2, 2, 2, 2, 3, 3, 4, 4 and 5 meters.\",\n    \"id\": 1086,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains two integers N and M indicating the dimensions, in meters, of the ballroom (1 \\u2264 N,M \\u2264 104). The second line contains one integer L representing the planks width, in centimeters (1 \\u2264 L \\u2264 100). The third line contains one integer K, indicating the number of planks donated (1 \\u2264 K \\u2264 105). The fourth line contains K integers Xi, separated by spaces, representing the length, in meters, of one plank (1 \\u2264 Xi \\u2264 104 for 1 \\u2264 i \\u2264 K). The end of input is indicated by a line containing only two zeros, separated by one space.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Club Ballroom\",\n    \"output\": \"\\tFor each one of the test cases in the input, your program must print one single line, containing one integer, the smallest number of planks needed to cover the whole floor, satisfying the restrictions established. If it is not possible to cover the whole floor satisfying the restrictions established, print one line with the word \\\"impossivel\\\" (which means impossible in Portuguese).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy F\\u00e1bio Dias Moreira\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe game of Chess has several pieces with curious movements. One of them is the Queen, which can move any number of squares in any direction: in the same line, in the same column or in any of the diagonals, as illustrated by the figure below (black dots represent positions the queen may reach in one move):\\n\\n\\t \\n\\n\\tThe great Chess Master Kary Gasparov invented a new type of chess problem: given the position of a queen in an empty standard chess board (that is, an 8 x 8 board) how many moves are needed so that she reaches another given square in the board?\\n\\n\\n\\tKary found the solution for some of those problems, but is having a difficult time to solve some others, and therefore he has asked that you write a program to solve this type of problem.\",\n    \"id\": 1087,\n    \"input\": \"\\tThe input contains several test cases. The only line of each test case contains four integers X1, Y1, X2 and Y2 (1 \\u2264 X1, Y1, X2, Y2 \\u2264 8). The queen starts in the square with coordinates (X1, Y1), and must finish at the square with coordinates (X2, Y2). In the chessboard, columns are numbered from 1 to 8, from left ro right; lines are also numbered from 1 to 8, from top to bottom. The coordinates of a square in line X and column Y are (X, Y).\\n\\n\\n\\tThe end of input is indicated by a line containing four zeros, separated by spaces.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Queen\",\n    \"output\": \"\\tFor each test case in the input your program must print a single line, containing an integer, indicating the smallest number of moves needed for the queen to reach the new position.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cl\\u00e1udio L. Lucchesi \\u00a0Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Andrea, Carlos and Marcelo are close friends and spend their weekends by the swimming pool. While Andrea gets a suntan, both friends play Bubbles. Andrea, a very smart computer scientist, has already told them that she does not understand why they spend so much time playing a game so simple.\\n\\n                Using her laptop, Carlos and Marcelo generate a random integer N and a sequence, also random, which is a permutation from 1, 2, ..., N.\\n\\n                The game then begins. The players play by turns, and at each turn a player makes a move. Marcelo is always the first to play.A move consists of choosing one pair of consecutive elements that are out of order in the sequence, and swapping both elements. For example, given the sequence 1, 5, 3, 4, 2, a player may swap 3 and 5 or 4 and 2, but cannot swap 3 and 4 nor 5 and 2. Continuing with the example, if the player decides to swap 5 and 3, the new sequence will be 1, 3, 5, 4, 2.\\n                \\n                Sooner or later, the sequence will be sorted. The player that cannot make a move loses. Andrea, with disdain, always says that it would be simpler to play Odd or Even, to the same effect. Your mission, in case you decide to accept it, is to determine who wins the game, given the initial permutation P.\",\n    \"id\": 1088,\n    \"input\": \"The input contains several test cases. Each test case is composed of a single line, in which all integers are separated by one space. Each line contains an integer N (2 \\u2264 N \\u2264 105), followed by the initial sequence P = (X1, X2, ...,XN) of N distinct integers, with 1 \\u2264 Xi \\u2264 N for 1 \\u2264 i \\u2264 N.\\n\\n                The end of input is indicated by a line containing only one zero.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Bubbles and Buckets\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing the name of the winner, equal to Carlos or Marcelo.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\tBy Ricardo Anido\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tA musical loop is a small section of music composed to be played continuously (that is, the section is played again when it reaches the end), in a seamless way. Loops are used in many styles of popular music (hip hop, techno, etc), as well in computer games, especially casual games on the Internet.\\n\\n\\tLoops may be digitalized for example using PCM (Pulse Code Modulation), a technique for representing analog signals used extensively in digital audio. In PCM, the magnitude of the signal is sampled at regular intervals, and the values sampled are stored in sequence. To produce the sound for the sampled data, the procedure is applied in reverse (demodulation).\\n\\n\\tFernanda works for a game software house, and composed a beautiful musical loop, coded in PCM. Analyzing the waveform of her loop in audio editing software, Fernanda became curious when she noticed the number of \\\"peaks\\\". A peak in a waveform is the value of a sample that represents a local maximum or minimum. The figure below illustrates (a) a waveform and (b) the loop formed with this waveform, containing 48 peaks.\\n\\n\\t\\n\\n\\tFernandinha is a dear friend of yours. She has asked your help to determine how many peaks exist in her musical loop.\",\n    \"id\": 1089,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains one integer N, representing the number of samples in the musical loop composed by Fernanda (2 \\u2264 N \\u2264 104). The second line contains N integers Hi, separated by spaces, representing the sequence of magnitudes sampled (-104 \\u2264 Hi \\u2264 104 for 1 \\u2264 i \\u2264 N, H1 \\u2260 HN and Hi \\u2260 Hi+1 for 1 \\u2264 i < N). Notice that H1 follows HN when the loop is played.\\n\\n\\tThe end of the input is indicated by a line that contains only one zero.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Musical Loop\",\n    \"output\": \"\\tFor each test case in the input your program must print a single line, containing one integer, the number of peaks that exist in the musical loop.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy F\\u00e1bio Dias Moreira\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tSet is a game of cards in which each card may have one, two or three figures. All figures in one given card are equal. Figures may be circles, squares or triangles. Each card, therefore, has two characteristics: the number of figures and the type of figure. A set is a group of three cards such that, for each characteristic (number and figure), either the three cards are equal or the three cards are different.\\n\\n\\tFor example, in the figure below, (a) is a valid set, since all cards have the same figure type and all of them have a different number of figures. In the example (b), both the type of figures and the number of figures are different, making also a valid set. On the other hand, (c) is not a valid set, as the last two cards have the same figure, which is different from the figure in the first card.\\n\\n\\n\\t\\n\\n\\n\\tThe objective of the game is to form the largest number of sets with the cards that are on the table. Once a set is formed, the three cards are removed from the game.\\n\\n\\tWhen there are few cards on the table, it is easy to determine the largest number of sets that can be formed; however, when there are many cards on the table the number of combinations is too high. A friend wants to practice for the Set World Championship, and has asked you to write a program to calculate the largest number of sets that may be formed with a given group of cards.\",\n    \"id\": 1090,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains an integer N (3 \\u2264 N \\u2264 3 x 104), indicating the number of cards on the table. Each of the next N lines contains the description of one card.\\n\\n\\tThe description of one card is given by two words, separated by one space. The first word is:\\n\\n\\t\\n\\t\\t\\\"um\\\" (means one in Portuguese); or\\n\\t\\n\\t\\t\\\"dois\\\" (means two in Portuguese); or\\n\\t\\n\\t\\t\\\"tres\\\" (means three in Portuguese)\\n\\n\\n\\tindicating the number of figures in the card. The second word is\\n\\n\\t\\n\\t\\t\\\"circulo\\\" or \\\"circulos\\\" (means circle in Portuguese); or\\n\\t\\n\\t\\t\\\"quadrado\\\" or \\\"quadrados\\\" (means square in Portuguese); or\\n\\t\\n\\t\\t\\\"triangulo\\\" or \\\"triangulos\\\" (means triangle in Portuguese)\\n\\n\\n\\tindicating the type of figure in the card. The end of input is indicated by a line containing only one zero.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Set\",\n    \"output\": \"\\tFor each test case in the input, your program must print a single line, containing one integer, indicating the largest number of sets that can be formed with the given cards.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Ricardo Anido\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tAfter centuries of hostilities and skirmishes between the four nations living in the land generally known as Nlogonia, and years of negotiations involving diplomats, politicians and the armed forces of all interested parties, with mediation by UN, NATO, G7 and SBC, it was at last agreed by all the way to end the dispute, dividing the land into four independent territories.\\n\\n\\tIt was agreed that one point, called division point, with coordinates established in the negotiations, would define the country division, in the following way. Two lines, both containing the division point, one in the North-South direction and one in the East-West direction, would be drawn on the map, dividing the land into four new countries. Starting from the Western-most, Northern-most quadrant, in clockwise direction, the new countries will be called Northwestern Nlogonia, Northeastern Nlogonia, Southeastern Nlogonia and Southwestern Nlogonia.\\n\\n\\t \\n\\n\\tThe UN determined that a page in the Internet should exist so that the inhabitants could check in which of the countries their homes are. You have been hired to help implementing the system.\",\n    \"id\": 1091,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains one integer K indicating the number of queries that will be made (0 < K \\u2264 103). The second line of a test case contains two integers N and M representing the coordinates of the division point (-104 < N, M < 104). Each of the K following lines contains two integers X and Y representing the coordinates of a residence (-104 \\u2264 X, Y \\u2264 104).\\n\\n\\tThe end of input is indicated by a line containing only the number zero.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Division of Nlogonia\",\n    \"output\": \"\\tFor each test case in the input, your program must print one line containing:\\n\\n\\t\\n\\t\\tthe word divisa (means border in Portuguese) if the residence is on one of the border lines (North-South or East-West);\\n\\t\\n\\t\\tNO (means NW in Portuguese) if the residence is in Northwestern Nlogonia;\\n\\t\\n\\t\\tNE if the residence is in Northeastern Nlogonia;\\n\\t\\n\\t\\tSE if the residence is in Southeastern Nlogonia;\\n\\t\\n\\t\\tSO (means SW in Portuguese) if the residence is in Southwestern Nlogonia.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Ricardo Anido\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe problem of determining the longest increasing sub-sequence in a list of numbers is already a classic in programming competitions. Despite this fact, that is the problem you must solve here. But, in order to avoid having you yawning while solving the problem, we introduced a small change: the list of numbers will be given as a bidimensional matrix, and the increasing sequence must be \\\"embedded\\\" in a submatrix of the original matrix.\\n\\n\\tLet's define the problem more precisely. The linearization of a bidimensional matrix is the concatenation of its lines, from the first to the last. A submatrix is a rectangular region of a bidimensional matrix (with sides paralel to the sides of the matrix). The size of a submatrix is its number of elements. You must write a program that, given a matrix of integers, determines the largest submatrix such that, when linearized, results in an increasing sequence. The figure below shows some examples of submatrices of largest size which contain increasing sequences. Notice that more than one such a submatrix may exist in a given matrix.\\n\\n\\t\",\n    \"id\": 1092,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains two integers N and M indicating the matrix dimensions (1 \\u2264 N, M \\u2264 600). Each one of the next N lines contains M integers, separated by a space, describing the elements of the matrix. Element Xi,j of the matrix is the j-th integer of the i-th line in the input (-106 \\u2264 Xi,j \\u2264 106).\\n\\n\\tThe end of input is indicated by a line containing only two zeros, separated by a space.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Longest Increasing Sub-sequence\",\n    \"output\": \"\\tFor each test case in the input, your program must print one single line, containing the size of the largest sub-matrix that, when linearized, results in an increasing sequence.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Pedro Demasi\\u00a0\\u00a0Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tFelipinho is thrilled with his new RPG game, about wars between clans of vampires. In this game he plays a vampire that repeatedly comes into combat against vampires from other clans. Such battles are won or lost based on some characteristics of the opponents, with the help of a standard six-faced dice. For simplicity, we will consider only the fight between two vampires, Vampire 1 and Vampire 2. Each vampire has a vital energy (denoted respectively by EV1 and EV2). Besides, an attack force AT and a damage capacity D are also given.\\n\\n\\tThe combat is fought in turns, in the following way. At each turn, the dice is rolled; if the result value is less than or equal to AT, Vampire 1 wins the turn, otherwise Vampire 2 wins. The winner then sucks the value D from the loser\\\\'s vital energy. That is, D points are subtracted from the loser's vital energy and added to the winner's vital energy. The combat continues until one of the fighters has EV less than or equal to zero.\\n\\n\\tFor example, suppose EV1=7, EV2=5, AT=2 and D=4. The dice is rolled and the result value is 3. Then, Vampire 2 wins the turn, and therefore 4 points are subtracted from EV1 and added to EV2. The new values for the vital energies would be EV1=3 and EV2=9. Notice that, if in the next turn Vampire 2 wins again, the combat ends. The values of AT and D are constant throughout the combat; only EV1 and EV2 vary.\\n\\n\\tDespite loving the game, Felipinho thinks that the combats are too long, and suspects that, given the initial values of EV1, EV2, AT and D, it is possible to determine the probability of one of the players winning the combat, and that could help shorten the combat time. Felipinho has asked your help to verify his suspicion.\",\n    \"id\": 1093,\n    \"input\": \"\\tThe input contains several test cases. Each test case is given in one single line, containing four integers EV1, EV2, AT and D separated by spaces (1 \\u2264 EV1, EV2 \\u2264 10, 1 \\u2264 AT \\u2264 5 and 1 \\u2264 D \\u2264 10). The end of input is indicated by one line containing only four zeros, separated by spaces.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Vampires\",\n    \"output\": \"\\tFor each test case in the input, your program must print a single line. The line must contain a real number representing, in terms of percentages, the probability that Vampire 1 wins the combat. The result must be printed as a real number with exactly one decimal figure.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tMaria has just started as graduate student in a medical school and she's needing your help to organize a laboratory experiment which she is responsible about. She wants to know, at the end of the year, how many animals were used in this laboratory and the percentage of each type of animal is used at all.\\n    \\n\\tThis laboratory uses in particular three types of animals: frogs, rats and rabbits. To obtain this information, it knows exactly the number of experiments that were performed, the type and quantity of each animal is used in each experiment.\",\n    \"id\": 1094,\n    \"input\": \"\\tThe first line of input contains an integer N indicating the number of test cases that follows. Each test case contains an integer Amount (1 \\u2264 Amount \\u2264 15) which represents the amount of animal used and a character Type ('C', 'R' or 'S'), indicating the type of animal:\\n\\t- C: Coelho (rabbit in portuguese)\\n\\t- R: Rato (rat\\u00a0 in portuguese)\\n\\t- S: Sapo (frog in portuguese)\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Experiments\",\n    \"output\": \"\\tPrint the total of animals used, the total of each type of animal and the percentual of each one in relation of the total of animals used. The percentual must be printed with 2 digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tMake a program that prints the sequence like the following example.\",\n    \"id\": 1095,\n    \"input\": \"\\tThis problem doesn't have input.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Sequence IJ 1\",\n    \"output\": \"\\tPrint the sequence like the example below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tMake a program that prints the sequence like the following exemple.\",\n    \"id\": 1096,\n    \"input\": \"\\tThis problem doesn't have input.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Sequence IJ 2\",\n    \"output\": \"\\tPrint the sequence like the example below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tMake a program that prints the sequence like the following exemple.\",\n    \"id\": 1097,\n    \"input\": \"\\tThis problem doesn't have input.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Sequence IJ 3\",\n    \"output\": \"\\tPrint the sequence like the example below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tMake a program that prints the sequence like the following example.\",\n    \"id\": 1098,\n    \"input\": \"\\tThis problem doesn't have input.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Sequence IJ 4\",\n    \"output\": \"\\tPrint the sequence like the example below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an integer N that is the number of test cases. Each test case is a line containing two integer numbers X and Y. Print the sum of all odd values between them, not including X and Y.\",\n    \"id\": 1099,\n    \"input\": \"\\tThe first line of input is an integer N that is the number of test cases that follow. Each test case is a line containing two integer X and Y.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Sum of Consecutive Odd Numbers II\",\n    \"output\": \"\\tPrint the sum of all odd numbers between X and Y.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Unknown Author\",\n    \"category\": \"Graph\",\n    \"description\": \"Peter is doing a research on the Traveling Knight Problem (TKP) where you have to find the shortest closed tour of knight moves that visits each square of a given set of n squares on a chessboard exactly once. He thinks that the most difficult part of the problem is determining the smallest number of knight moves between two given squares and that, once you have accomplished this, finding the tour would be easy.\\n                \\n                Of course you know that it is vice versa. So you must offer him a program that solves the \\\"difficult\\\" part.\\n                \\n                Your job is to write a program that takes two squares a and b as input and then determines the number of knight moves on a shortest route from a to b.\\n\\n\",\n    \"id\": 1100,\n    \"input\": \"The input file will contain one or more test cases. Each test case consists of one line containing two squares separated by one space. A square is a string consisting of a letter (a-h) representing the column and a digit (1-8) representing the row on the chessboard. See the figure above.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Knight Moves\",\n    \"output\": \"For each test case, print one line saying\\\"To get from xx to yy takes n knight moves.\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an undetermined number of pairs values M and N (stop when any of these values is less or equal to zero). For each pair, print the sequence from the smallest to the biggest (including both) and the sum of consecutive integers between them (including both).\",\n    \"id\": 1101,\n    \"input\": \"The input file contains pairs of integer values M and N. The last line of the file contains a number zero or negative, or both.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Sequence of Numbers and Sum\",\n    \"output\": \"For each pair of numbers, print the sequence from the smallest to the biggest and the sum of these values, as shown below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\tSince the King of Nlogonia built, decades ago, an enormous protecting wall around the whole kingdom, its inhabitants have lived safely. The wall is massive, extremely reinforced, and has the format of a circle, enclosing all the King's domains.\\n\\n\\tHowever, in recent weeks inhabitants of Nlogonia are upset. There are rumors that scientists from Quadradonia, a barbaric nation in Nlogonia's neighborhood, have developed a lethal weapon, capable of blowing away anything on its reach.\\n\\n\\tThe new weapon is a cannon that emits a beam of protons that spread with an angle from the cannon's mouth. The beam's direction is determined by an angle , measured counterclockwise from the x axis. The figure below illustrates (a) an example of an atack, (b) what would remain from Nlogonia and (c) the area that would be destroyed.\\n\\n\\t\\n\\n\\tGiven the cannon's coordinates, the beam's direction and spread angle, as well as the coordinate of the wall's center and radius, you must write a program to calculate the area of Nlogonia that will be destroyed.\",\n    \"id\": 1102,\n    \"input\": \"\\tThe input contains several test cases. Each test case is composed by two lines. The first line contains three integers X, Y, R, with (X, Y) representing the coordinates of the protection wall's center (0 \\u2264 X \\u2264 1000 and 0 \\u2264 Y \\u2264 1000), and radius (1\\u2264R\\u2264100). The second line contains four integers P, Q, A and T, with (P, Q) representing the cannon's coordinates(0\\u2264P\\u22641000 and 0\\u2264Q\\u22641000), A representing the beam's direction, in degrees (0\\u2264A\\u2264359), and T representing the spread angle, also in degrees(1\\u2264T\\u2264179). The angle A is measured counter-clockwise from the x axis, and the cannon is always outside the protecting wall.\\n\\n\\tThe end of input is indicated by a line which contains three zeros, separated by single spaces.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Deadly Atack\",\n    \"output\": \"\\tFor each test case in the input, your program should print a single line, containing a real number, written with a precision of one decimal place, indicating the area of Nlogonia that would be destroyed by the atack.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Daniela is a nurse in a large hospital, which causes her working shifts to constantly change. To make it worse, she has deep sleep, and a big difficulty to wake up using alarm clocks.\\n                \\n                Recently she got a digital clock as a gift, with several different options of alarm sounds, and she hopes that it might help solve her problem. But lately, she's been very tired and wants to enjoy every single moment of rest. So she carries her new clock to every place she goes, and whenever she has some spare time, she tries to sleep, setting her alarm clock to the time when she needs to wake up. But, with so much anxiety to sleep, she ends up with some difficulty to fall asleep and enjoy some rest.\\n                \\n                A problem that has been tormenting her is to know how many minutes of sleep she would have if she felt asleep immediately and woken up when the alarm clock ringed. But she is not very good with numbers, and asked you for help to write a program that, given the current time and the alarm time, find out the number of minutes she could sleep.\",\n    \"id\": 1103,\n    \"input\": \"The input contains several test cases. Each test case is described in one line, containing four integers H1, M1, H2 and M2, with H1 : M1 representing the current hour and minute, and H2:M2 representing the time (hour and minute) when the alarm clock is set to ring (0\\u2264H1\\u226423, 0\\u2264M1\\u226459, 0\\u2264H2\\u226423, 0\\u2264M2 \\u226459).\\n                \\n                The end of the input is indicated by a line containing only four zeros, separated by blank spaces.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Alarm Clock\",\n    \"output\": \"For each test case, your program must print one line, containing a single integer, indicating the number of minutes Daniela has to sleep.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Alice and Betty collect Pok\\u00b4mon cards. The cards are printed for a game that imitates the battle system of one of the most popular videogames in history, but Alice and Betty are too young to actually play the game, and are only interested in the actual cards. To make it easier, we'll assume each card has a unique identifier, given as an integer number.\\n                \\n                    Both girls have a set of cards, and, like most girls their age, like to trade the cards they have. They obviously don't care about identical cards they both have, and they don't want to receive repeated cards in the trade. Besides, the cards are traded in a single operation: Alice gives Betty N distinct cards and receives back other N distinct cards.\\n                \\n                    The girls want to know what is the maximum number of cards they can trade. For instance, if Alice has cards {1, 1, 2, 3, 5, 7, 8, 8, 9, 15} and Betty has cards {2, 2, 2, 3, 4, 6, 10, 11, 11}, they can trade at most four cards.\\n                \\n                    Write a program that given the sets of cards owned by Alice and Betty, determines the maximum number of cards they can trade.\",\n    \"id\": 1104,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers A and B, separated by a blank space, indicating respectively the number of cards Alice and Betty have (1 \\u2264 A \\u2264 104 and 1 \\u2264 B \\u2264 104). The second line contains A space-separated integers Xi, each indicating one of Alice\\\\'s cards(1 \\u2264 Xi \\u2264 105). The third line contains B integers Yi separated by whitespaces, each number indicating one of Betty's cards(1 \\u2264 Yi \\u2264 105). Alice and Betty's cards are listed in non-descending order.\\n                \\n                    The end of input is indicated by a line containing only two zeros, separated by a blank space.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Exchanging Cards\",\n    \"output\": \"For each test case, your program should print a single line, containing an integer number, indicating the maximum number of cards Alice and Betty can trade.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The most recent economic crisis was partly caused by the manner in which banks made loans to people unable to repay them and resold such loans to other banks as debentures. Obviously, when people failed to repay their loans, the whole system collapsed.\\n                \\n                \\n                    The crisis was so deep that it affected countries all over the world, including Nlogonia, where the honored prime minister Man Dashuva ordered the Central Bank chairman to come up with a solution. He came up with a brilliant idea: if all banks could liquidate its debentures only with its own monetary reserves, all banks would survive and the crisis would be averted.\\n                \\n                    However, with the elevated number of debentures and banks involved, this was an extremely complicated task, so he asked for your help in writing a program that, given the banks and the debentures printed by them, determines if it is possible that all banks pay back their debts using only their monetary reserves and credits.\",\n    \"id\": 1105,\n    \"input\": \"The input consists of several test cases. The first line of each test case contains two integers B and N, indicating the number of banks (1 \\u2264 B \\u2264 20) and the number of debentures printed by the banks (1 \\u2264 N \\u2264 20). The banks are identified by integers between 1 and B. The second line contains B integers Ri separated by spaces, indicating the monetary reserves of each one of the B banks (0 \\u2264 Ri \\u2264 104, for 1 \\u2264 i \\u2264 B). The N following lines contain each one three integers separated by spaces: an integer D, indicating the debtor bank (1 \\u2264 D \\u2264 B), an integer C , indicating the creditor bank (1 \\u2264 C \\u2264 B e D \\u2260 C) and an integer V, indicating the debenture value (1 \\u2264 V \\u2264 104).\\n                \\n                    The end of input is indicated by a line containing only two zeros, separated by spaces.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Sub-prime\",\n    \"output\": \"For each test case, your program should print a single line, containing a single character: 'S', if it is possible to liquidate all debentures without a bailout from the Central Bank of Nlogonia, or 'N' if a bailout is necessary.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Dragster racing is not very popular in Brazil, but it attracts crowds in the USA. The fans enjoy seeing cars racing at speeds up to 250 mph, even if only for a few seconds. Many competitors are amateur mechanics that just attached rockets and other contraptions to create ultra-fast cars.\\n                \\n                    Dragster competitions are elimination tournaments, where each confrontation consists of two competitors racing side by side and only one of them being declared the winner (the fastest one, obviously). The winners are then rematched into new races, until only one competitor remains - which is declared the winner.\\n                \\n                    Rubens is an experienced pilot, with a racing career in several categories, including Formula 1. However, after facing some difficulties, he decided to dedicate himself to dragster racing. Using his vast experience from Formula 1, he can, observing the competitors, tell what is the probability each one would prevail during a race between any pair of them.\\n                \\n                    Even though Rubens is a good pilot, he\\\\'s not very good in math nor computing, so he asked your help to write a program that, given the probabilities computed by Rubens for all races between each pair of pilots, and the description of the tournament structure, determines his proability of winning the tournament.\",\n    \"id\": 1106,\n    \"input\": \"The input consists of several test cases. The first line of a test case contains a single integer N, indicating the number of competitors in this tournament (2\\u2264N\\u2264300). In the tournament descripton, each competitor is identified by an integer from 1 to N, and the races are identified by integers from N + 1 to 2 x N - 1. Rubens is always identified by the number 1. The N next lines describe the probability matrix computed by Rubens. The i-th line contains N real numbers M[i, j] separated by spaces(0 \\u2264 M[i, j] \\u2264 1, for 1 \\u2264 i \\u2264 N and 1 \\u2264 j \\u2264 N). Each matrix entry M[i, j] indicates the probability of competitor i winning a race against competitor j (0.001 \\u2264 M[i, j] \\u2264 0.999 and M[i, j] + M[j, i] = 1 fori \\u2260 j , e M[i, j] = 0 for i = j).\\n                \\n                    The probabilities will always be given with three decimal places. Each one of the next N - 1 lines contains two integers A, B, describing a race. A and B are race or competitor identifiers(1 \\u2264 A \\u2264 2 x N - 1 and 1 \\u2264 B \\u2264 2 x N - 1). The first of these lines describes race N + 1, the next line describes race N + 2, and so on. When a race identifier k appears in the input as A, that means the winner of race k will run against B; similarly, when a race identifier k appears as B, the winner of race k will run against A.\\n                \\n                    The end of input is indicated by a line containing a single zero.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Dragster\",\n    \"output\": \"For each test case inthe input, your program should print a single line, containing a single real number, with six decimal places precision, indicating the probability of Rubens winning the tournament.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tSince its invention, in 1958, the laser has been used in a huge variety of applications, like electronic equipment, cirurgical instruments, weapons, and much more.\\n\\n\\t\\n\\n\\tThe image above shows a diagram of an equipment to sculpt, with a laser, a block of some solid material. In the figure we can see a laser emitter that moves horizontally to the right and left with a constant speed. When the emitter is turned on when moving, a specific width layer is removed from the block, being vaporized by the laser.\\n\\n\\n\\tThe image below illustrates the process of sculpting with a laser, showing an example of (a) a block, with a height of 5 mm and a length of 8 mm, at the start of the process, (b) the format that we want the sculpted block to be, and (c) the sequence of layer removals during the process, considering that in each step, a layer with 1 mm of width is removed. In the first step, the piece numbered 1 is removed; in the second, the one numbered with 2; and so it goes on. During the process of sculpting, the laser was turned on 7 times, in total, once for each removed piece of the block.\\n\\n\\t\\n\\n\\tWrite a program that, given the height and the length of the block, and its final format, find out the total number of times the laser must be turned on.\",\n    \"id\": 1107,\n    \"input\": \"\\tThe input contains several test cases. Each test case is composed by two lines. The first line of a test case contains two integers A and C, separated by a blank space, indicating, respectively, the height (1 \\u2264 A \\u2264 104) and the length (1 \\u2264 C \\u2264 104) of the block to be sculpted, in milimeters. The second line contains C integers Xi, each one indicating the final height, in milimeters of the block between the positions i and i + 1 through the length (0 \\u2264 Xi \\u2264 A, for 0 \\u2264 i \\u2264 C - 1). Consider that on each step, a layer of width 1 mm is removed on the parts of the block where the laser is turned on.\\n\\n\\tThe end of the input is indicated by a line that contains only two zeros, separated by a blank space.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Laser Sculpture\",\n    \"output\": \"\\tFor each test case, your program must print a single line, containing an integer, indicating the number of times that the laser must be turned on to sculpt the block in the indicated format.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"A new telephony company intends to offer services of residential telephone in your city. The phones will be residential, but the company will use mobile tecnology, with transmitter towers, to avoid the expenses of building a cable network throughout the city.\\n                \\n                \\n                    The power of the equipment installed in a tower defines the tower\\\\'s cover radius (which, in turn, defines the cover area of the tower, since the city is perfeclty flat). The cost of the equipment installed in each tower is directly proportional to its power, and therefore to its cover radius.\\n                \\n                \\n                    The company decided that exactly two towers will be used. The same type of equipment will be installed in both towers; that is, both towers will have the same cover radius. Since the company wants to offer its services to all homes in the city, the cover radius of both towers, together, must cover all homes. Additionally, to minimize the cost, the cover radius of the towers must be the minimum as possible. The figure below shows two possible configurations of cover radius for the two towers in a city with ten homes. Both (a) and (b) cover all homes, but (b) is the one that uses the minimum possible cover radius.\\n                \\n                    \\n                \\n                    Given the position of each home in the city, you must write a program to determine the smallest cover radius for the towers, so that all homes in the city are covered.\",\n    \"id\": 1108,\n    \"input\": \"The input contains several test cases. Each test case is composed by two lines. The first line of a test case contains an integer N, the number of homes in the city (3 \\u2264 N \\u2264 40). Each of the following N lines contains two integers X and Y, separated by a single space (0 \\u2264 X \\u2264 104 and 0 \\u2264 Y \\u2264 104), representing the position of a home. Each home has a different position.\\n                \\n                    The end of input is indicated by a line containing only one zero.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Towers for Mobile Telephony\",\n    \"output\": \"For each test case in the input your program must print a single line, containing a real number, written with two digits after the decimal point, indicating the smallest cover radius to be used in both towers.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\tBy Leonardo Alt  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tFor the first time the Skyrim Free School of Mathematics, Philosophy and Linguistics will host the Regular Expressions (regex) Contest (RegExCon). The contest happens this way: participants compete always against 1 opponent. One wins, one loses. Only one will remain, the champion. In one dispute both participants receive a list with several regular expressions and for each regex the participants must calculate if several given words are recognized or not by the regex.\\n\\n\\tAs a member of the School you are participating, and want to win. So, to guarantee your victory, you have to write a program to solve the problem and let it executing in your Cool Stuff Calculator Machine at home. As a mage, expert in Alteration and Illusion, you can easily control your machine with your mind, so you can use your program while in the contest. It's forbidden to use magic in the contest, but coincidentally the Winterhold School will host some Mage Congress, so you don't need to worry, use your magic.\\n\\n\\tA regular expression is used to describe a language (a set of words). Consider that the alphabet of all languages in this problem is {a, b}.\\n\\n\\tA regex R is valid if:\\n\\t1) R is \\u201ca\\u201d or \\u201cb\\u201d;\\n\\t2) R is \\u201c(P.S)\\u201d where P and S are regular expressions;\\n\\t3) R is \\u201c(P|S)\\u201d where P and S are regular expressions;\\n\\t4) R is \\u201c(P*)\\u201d where P is a regular expression;\\n\\n\\tRegular expressions can be nested. There is no ternary operation with operators \\u201c.\\u201d and \\u201c|\\u201d, neither binary operation with operator \\u201c*\\u201d. Words always start with \\u201c(\\u201c and finish with \\u201c)\\u201d. Set L of words recognized by R is formed following next rules:\\n\\t1) If R is \\u201c(a)\\u201d, L = {a};\\n\\t2) If R is \\u201c(b)\\u201d, L = {b};\\n\\t3) If R is \\u201c(P.S)\\u201d, L = all words that can be obtained from a concatenation of words p and s, where p is recognized by P and s by S;\\n\\t4) If R is \\u201c(P|S)\\u201d, L = union of the sets of words recognized by P and S;\\n\\t5) If R is \\u201c(P*)\\u201d, R recognizes the concatenation of 0 or more words recognized by P.\",\n    \"id\": 1109,\n    \"input\": \"\\tInput file contains several test cases. First line of a test case contains a regex (defined before) (0 < size of regex < 150) . Next line contain an integer P (1 \\u2264 P \\u2264 100). Each one of the next P lines contains a word (size of word < 50) formed by 'a's and 'b's that represents the following question: \\u201cIs this word recognized by the given regex?\\u201d.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Cheating on the Contest\",\n    \"output\": \"\\tFor each question described before, answer \\u201cY\\u201d (no quotes) if the answer is \\u201cyes\\u201d or \\u201cN\\u201d (no quotes) if the answer is \\u201cnot\\u201d. At the end of each test case print a blank line, including the last one.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Folklore, adapted by Piotr Rudnicki  Canada\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tGiven in an ordered deck of n cards numbered 1 to n with card 1 at the top and card n at the bottom. The following operation is performed as long as there are at least two cards in the deck:\\n\\n\\tThrow away the top card and move the card that is now on the top of the deck to the bottom of the deck.\\n\\n\\tYour task is to find the sequence of discarded cards and the last, remaining card.\\n\\n\\tEach line of input (except the last) contains a number n\\u00a0\\u2264\\u00a050. The last line contains 0 and this line should not be processed. For each number from the input produce two lines of output. The first line presents the sequence of discarded cards, the second line reports the last remaining card.\",\n    \"id\": 1110,\n    \"input\": \"\\tThe input file contains a non determinated number of lines. Each line contains an integer number. The last line contain the number zero (0).\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Throwing Cards Away\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print two lines.  \\n\\tThe first line presents the sequence of discarded cards, each number separated by a comma ',' and one blank space. The second line reports the last remaining card. No line will have leading or trailing spaces. See the sample for the expected format.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Leonardo Alt\\u00a0 Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tThe city of Desrugenstein is a complete mess. Looking at the map, it seems organized, since it was created in a square grid form, but there is no directions standard. Each corner says the directions you can go from there (north, south, west, east). The mayor Daniel Snake is headstrong and lazy enough to let everything as it is and forbid any change attempt. Unable to do much, the Master Spiritual Counselor of Desrugenstein, Giordano Marfyn, asked you, Spiritual Counselor Level XVII of Desrugenstein, lead programmer of Desrugenstein, to write a program to calculate the cost of going from a corner (x, y) to another corner (z, w), considering the messy streets.\",\n    \"id\": 1111,\n    \"input\": \"\\tThe input file contains several test cases. First line of each test case contains an integer N (1 \\u2264 N \\u2264 10) that represents height and width of the grid that maps the city (a N x N grid). The input file ends with N = 0, and it should not be processed. Each one of the next N lines represents a street of the city, starting from the further north (N \\u2013 1) until the further south. In each one of these lines there are 4*N integers, 4 for each corner: A (north) B (south) C (west) D (east). Each one is 0 if it is not possible to go on the respective direction, or 1 if it is possible.\\n\\n\\tAfter the city map, your program should read an integer P (1 \\u2264 P \\u2264 100). Next P lines contain 4 integers each, x0 y0 x1 y1 representing the question: \\u201cWhat is the minimum cost to go from corner (x0 , y0) to corner (x1 , y1)?\\u201d. The cost to go from a corner to the nearest corner in any direction is 1.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Desrugenstein\",\n    \"output\": \"\\tFor each question, answer \\u201cImpossible\\u201d if there is no valid (respecting corners directions) path between the corners, or the minimum cost, if there is(are) path(s). Print a blank line after each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Leonardo Alt\\u00a0 Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tConan is an important member of the Desrugenstein Athletic Club, which has a football professional team. Conan is the responsible for the the home matches field's grass. In 2048 years of history, DAC's field has always been in perfect conditions for the matches, thanks to Conan. He already earned many prizes for that. The most important was the \\u201cGolden Grass\\u201d, prize won 1024 times by Conan.\\n\\n\\tTomorrow CAD will play (and host) the Universal Football Championship finals. The match will be at home, so Conan went to check the grass state and repair if necessary. When he arrived there, he despaired when he saw many schweisen in the field, spoiling the grass!!\\n\\n\\tNow Conan needs your help to calculate how much money he will spend buying deswevileutssen to kill all the schweisen. Each deswevileutssen kills one schweisen. Conan can send you messages of two types: saying he found some schweisen, or asking how much he will spend to kill certain schweisen.\",\n    \"id\": 1112,\n    \"input\": \"\\tInput contains several test cases. First line of a test case contains 3 integers X (\\u2264 1000), Y (\\u2264 1000) and P (\\u2264 10) representing, respectively, field's size (X, Y) and the price for each deswevileutssen. Next line contains an integer Q (\\u2264 10000). Next Q lines represent messages from Conan to you, and they are in one of the following two forms:\\n\\n\\t- A N X Y - \\u201cI found N (\\u2264 10) schweisen at (X,Y) - (0 \\u2264 X < Width), (0 \\u2264 Y < Height)\\u201d\\n\\n\\t- P X Y Z W \\u2013 \\u201cHow much money do I need to kill every schweisen inside the rectangular area from (X, Y) to (Z, W)?\\u201d\\n\\n\\n\\tConsider that in the beginning no schweisen was seen.\\n\\n\\n\\tInput ends when X, Y and P = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Schweisen\",\n    \"output\": \"\\tFor each message of type \\u201cP\\u201d, print the answer for the question. Leave a blank line after each test case.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an undetermined number of pairs of integer values. Write a message for each pair indicating if this two numbers are in ascending or descending order.\",\n    \"id\": 1113,\n    \"input\": \"\\tThe input file contains several test cases. Each test case contains two integer numbers X and Y. The input will finished when X = Y.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Ascending and Descending\",\n    \"output\": \"\\tFor each test case print \\u201cCrescente\\u201d, if the values X and Y are in ascending order, otherwise print \\u201cDecrescente\\u201d.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that keep reading a password until it is valid. For each wrong password read, write the message \\\"Senha inv\\u00e1lida\\\". When the password is typed correctly print the message \\\"Acesso Permitido\\\" and finished the program. The correct password is the number 2002.\",\n    \"id\": 1114,\n    \"input\": \"\\tThe input file contains several tests cases. Each test case contains only an integer number.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Fixed Password\",\n    \"output\": \"\\tFor each number read print a message corresponding to the description of the problem.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program to read the coordinates (X, Y) of an indeterminate number of points in Cartesian system. For each point write the quadrant to which it belongs. The program finish when at least one of two coordinates is NULL (in this situation without writing any message).\",\n    \"id\": 1115,\n    \"input\": \"\\tThe input contains several tests cases. Each test case contains two integer numbers.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Quadrant\",\n    \"output\": \"\\tFor each test case, print the corresponding quadrant which these coordinates belong, as in the example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write a program that read two numbers X and Y and print the result of dividing the X by Y. If it's not possible, print the message \\\"divisao impossivel\\\".\",\n    \"id\": 1116,\n    \"input\": \"The input contains an integer number N. This N is the quantity of pairs of integer numbers X and Y read (dividend and divisor).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Dividing X by Y\",\n    \"output\": \"For each test case print the result of this division with one digit after the decimal point, or \\u201cdivisao impossivel\\u201d if it isn't possible to perform the calculation.\\n\\t\\t\\t\\t\\tObs.: Be carefull. The division between two integers in some languages generates another integer. Use cast:)\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that reads two scores of a student. Calculate and print the average of these scores. Your program must accept just valid scores [0..10]. Each score must be validated separately.\",\n    \"id\": 1117,\n    \"input\": \"\\tThe input file contains many floating-point numbers\\u200b\\u200b, positive or negative. The program execution will be finished after the input of two valid scores.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Score Validation\",\n    \"output\": \"\\tWhen an invalid score is read, you should print the message \\\"nota invalida\\\".\\n\\tAfter the input of two valid scores, the message \\\"media = \\\" must be printed followed by the average of the student. The average must be printed with 2 numbers after the decimal point.\\n\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write an program to read two scores of a student. Calculate and print the semester average.\\n                The program must accept only valid scores (a score must fit in the range [0.10]). Each score must be validated separately.\\n\\n                The program must print a message \\\"novo c\\u00e1lculo (1-sim 2-nao)\\\" that means \\\"new calculate (1-yes 2-no)\\\". After, the input will be (1 or 2). 1 means a new calculation, 2 means that the execution must be finished.\",\n    \"id\": 1118,\n    \"input\": \"The input file contains several positive or negative floating-point (double) values\\u200b. After the input of 2 valid scores, an integer number X will be read. Your program must stop when X = 2.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Several Scores with Validation\",\n    \"output\": \"If an invalid score is read, must be printed the message \\\"nota inv\\u00e1lida\\\". When two valid scores are read, the message \\\"media = \\\" must be printed folowed by the average between these 2 scores. The message \\\"novo c\\u00e1lculo (1-sim 2-nao)\\\" must be printed after reading X. This message should be displayed again if the standard input number for X is less than 1 or greater than 2, as example below.\\n                \\n                The output average must be printed with 2 digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tUnknown Author\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tIn a serious attempt to downsize (reduce) the dole queue, The New National Green Labour Rhinoceros Party has decided on the following strategy. Every day all dole applicants will be placed in a large circle, facing inwards. Someone is arbitrarily chosen as number 1, and the rest are numbered counter-clockwise up to N (who will be standing on 1's left). Starting from 1 and moving counter-clockwise, one labour official counts off k applicants, while another official starts from N and moves clockwise, counting m applicants. The two who are chosen are then sent off for retraining; if both officials pick the same person she (he) is sent off to become a politician. Each official then starts counting again at the next available person and the process continues until no-one is left. Note that the two victims (sorry, trainees) leave the ring simultaneously, so it is possible for one official to count a person already selected by the other official.\",\n    \"id\": 1119,\n    \"input\": \"\\tWrite a program that will successively read in (in that order) the three numbers (N, k and m; k, m > 0, 0 < N < 20) and determine the order in which the applicants are sent off for retraining. Each set of three numbers will be on a separate line and the end of data will be signalled by three zeroes (0 0 0).\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Dole Queue\",\n    \"output\": \"\\tFor each triplet, output a single line of numbers specifying the order in which people are chosen. Each number should be in a field of 3 characters. For pairs of numbers list the person chosen by the counter-clockwise official first. Separate successive pairs (or singletons) by commas (but there should not be a trailing comma).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Strings\",\n    \"description\": \"For years, all contracts of the Association of Contracts for Modernization (ACM) were typed using an old typewriter machine.\\n                    \\n                    Recently Mr. Miranda, one of the accountants of the ACM, realized that the machine had a failure in one, and only one, numerical digit. More specifically, the flawed digit, when typed, is not printed on the sheet, as if the corresponding key was not pressed. He realized that this could have changed the numerical representation of contract values. Worried about accounting, Mr. Miranda wants to know, from the original values agreed for the contracts (which he kept in handwritten notes) which values are actually represented in the contracts. For example, if the failed digit in the machine is 5, an agreed value of 1500 would be represented in the corresponding contract as 100, because the digit 5 would not be printed. Note that Mr. Miranda wants to know the numeric value represented in the contract, ie, in the same machine, the number 5000 corresponds to the numeric value 0, not 000 (as it actually appears in the contract).\",\n    \"id\": 1120,\n    \"input\": \"The input consists of several test cases, each in one line. Each line contains two integersD and N (1 \\u2264 D \\u2264 9, 1 \\u2264 N < 10100 ), representing, respectively, the digit that has failed in the machine and the number that was originally agreed for the contract (which can be very large because of hiperinflation).\\n                    \\n                    The last test case is followed by a line which contains only two zeros separated by white space.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Contract Revision\",\n    \"output\": \"For each test case in the input your program must print one line containing a single integer, the numeric value represented in the contract.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"One of the favorite sports in RoboLand is the Robots Rally. This rally is practiced in a giant rectangular arena of square cells with dimensions N rows by M columns. Some cells are empty, some contain a sticker for the World Footbal Cup Album (much appreciated by artificial intelligences in RoboLand) and some are occupied by pillars which support the roof of the arena. During the rally the robots can occupy any cell in the arena, except those containing pillars, since they block the robot movement. The path of the robot in the arena during the rally is determined by a sequence of instructions. Each instruction is represented by one of the following characters: 'D', 'E' and 'F', meaning, respectively, \\\"turn 90 degrees to the right\\\", \\\"turn 90 degrees to the left\\\" and \\\"move forward one cell\\\". Robots start the rally in some initial position in the arena and follow closely the sequence of instructions given (after all, they are robots!). Whenever a robot occupies a cell that contains a Cup sticker he collects it. Stickers are not replaced, that is, each scticker can be collected only once. When a robot tries to move into a cell which contains a pillar he stalls, remaining in the cell where he was, with the same orientation. The same happens when a robot tries to leave the arena.\\n                \\n                Given the map of the arena, describing the position of pillars and sctickers, and the sequence of instructions of a robot, you must write a program to determine the number of stickers collected by the robot.\",\n    \"id\": 1121,\n    \"input\": \"The input contains several test cases. The first line of a test case contains three integers N, M and S (1 \\u2264 N, M \\u2264 100, 1 \\u2264 S \\u2264 5 \\u00d7 104 ), separated by white spaces, indicating respectively the number of rows, the number of columns of the arena and the number of instructions to the robot. Each of the following N lines describes a cell line of the arena and contains a string with M characters. The first line to appear in the description of the arena is the one more to the North, the first column to appear in description of a cell line of the arena is the one more to the West.\\n                    \\n                    Each cell in the arena is described by one of the following characters:\\n                \\n                    \\n                        \\u00a0\\u00a0\\u00a0 `.' -- normal cell;\\n                    \\n                        \\u00a0\\u00a0\\u00a0 `*' -- cell which contains a sticker;\\n                    \\n                        \\u00a0\\u00a0\\u00a0 `#' -- cell which contains a pillar;\\n                    \\n                        \\u00a0\\u00a0\\u00a0 `N', `S', `L', `O' -- cell where the robot starts the rally (only one in the arena). The letter represents the initial robot orientation (North, South, East and West, respectively).\\n                \\n                \\n                    \\n                    The last line in the input contains a sequence of S characters among `D', `E' and `F', representing the instructions to the robot.\\n                    \\n                    The last test case is followed by a line which contains only three numbers zero separated by a blank space.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Sticker Collector Robot\",\n    \"output\": \"For each rally described in the input your program must print a single line containing a single integer indicating the number of stickers that the robot collected during the rally.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe FCC (Foundation for Combating Corruption) dismantled a major corruption scheme in Nlogonia. During the operation, several account books, with notes documenting the illicit transactions carried out by the scheme, were seized by FCC agents.\\n\\t\\n\\tEach page on the account books contains some transactions (income or expense, in nilogos, the local currency of Nlog\\u00f4nia, whose symbol is N$) and the cash flow resulting from transactions on that page. For example, if a page recorded the following transactions: an income of N$ 7, an income of N$ 2, an expense of N$ 3, an income of N$ 1 and an expense of N$ 11, the cash flow on that page would be 7 + 2 - 3 + 1 - 11 = -4.\\n\\t\\n\\tHowever, to obstruct the work of the police, the offenders did not record in their account books the type of each transaction (income or expense). In the example above, the page would contain only the numbers 7, 2, 3, 1 and 11 (with no indication whether they were income or expense transactions). The cash flow for each page, however, was always recorded normally, with the signal (in this case, -4).\\n\\t\\n\\tTo guarantee that the offenders are convicted, prosecutors must be able to determine with certainty whether each transaction is an income or an expense. In the example above, transaction N$ 7 was certainly an income, and transaction N$ 11 was certainly an expense. But we cannot say anything about transactions N$ 2, N$ 3, and N$ 1. Transactions N$ 2 and N$ 1 could have been income and in this case transaction N$ 3 would have been an expense; or N$ 1 and N$ 2 could have been expenses and in this case transaction N$ 3 would be an income.\\n\\t\\n\\tMany account books have a relatively large number of pages, with many transactions, making it is difficult for the police to process all the information. Therefore, they need a program that performs the task efficiently.\",\n    \"id\": 1122,\n    \"input\": \"\\tThe input consists of several test cases. The first line of a test case contains two integers N and F, indicating the number of transactions on the page (2 \\u2264 N \\u2264 40) and cash flow for this page (\\u221216000 \\u2264 F \\u2264 16000).. Each of the following N lines contains an integer Ti indicating the value of the i-th transaction (1 \\u2264 Ti \\u2264 1000).\\n\\t\\n\\tThe last test case is followed by a line containing only two numbers zero separated by a space.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Account Book\",\n    \"output\": \"\\tFor each input test cases your program must print a single line with N characters. The i-th character must be '+', if it is possible determine with certainty that the i-th transaction is an income, '-', if it is possible to determine with certainty that the i-th operation is an expense, and '?', if it is impossible to determine with certainty the type of transaction. If the cash flow recorded in the page cannot be obtained from the transactions recorded in the page, your program must print a single line containing the character '*'.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tThe road system of a country connects all N cities so that it is possible to travel between any pair of cities using existing roads. Each road connects two different cities, is two-way and one has exactly one toll booth (a toll is paid for both directions of traffic). Roads intersect only in a city and no pair of cities is interconnected by two or more roads.\\n\\n    Dias Transport offers a one-day parcel delivery service between cities. Each parcel must be transported from a city A to another city B. The management of Dias Transport defines, for each parcel, a service route, consisting of C cities and C - 1 roads: the first city on the service route is the origin of the parcel, the final city is the destination of the parcel. The service route never passes twice through the same city, and the vehicle chosen to deliver a parcel can only travel by the service route defined.\\n    \\n    \\n\\tOne day, however, a vehicle broke down and was taken for repairs in a city that was not among the cities in its service route. The management of Dias Transport wants to know which is the lowest total cost, in terms of tolls, for delivering the parcel (that is, to take the vehicle from the city it was repaired to the destination city), but with an additional constraint: if at some point the vehicle reaches one of the cities that make up its service route, it should go back to following its service route.\",\n    \"id\": 1123,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contais four integers N, M, C and K (4 \\u2264 N \\u2264 250, 3 \\u2264 M \\u2264 N\\u00d7(N\\u22121)/2, 2 \\u2264 C \\u2264 N\\u22121 and C \\u2264 K \\u2264 N\\u22121), representing, respectively, the number of cities, the number of roads, the number of cities in the service route and the city where the vehicle was taken for repair. The cities are identified by integers from 0 to N - 1. The service route is 0, 1,..., C - 1, that the origin is 0, from 0 goes to 1, from 1 to 2 and so on, until the destination C - 1. The next M lines describe the road system. Each of those lines describes one road and contains three integers U, V and P (0 \\u2264 U, V \\u2264 N\\u22121, U \\u2260 V, 0 \\u2264 P \\u2264 250),indicating that there exists a road connecting cities U and V with a toll of cost P.\\n    \\n\\tThe last test case is followed by a line containing four zeros separated by blank spaces.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Route Change\",\n    \"output\": \"\\tFor each test case, your program should print a single line, containing a single integer, the minimum total toll cost for the vehicle to reach the destination city.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\tThe FCC (Factory of Cylinders of Carbon) manufactures various types of cylinders of carbon. FCC is installed on the tenth floor of a building, and uses the several building's elevators to transport the cylinders. For security, the cylinders must be transported in the upright position, and since they are heavy, at most two cylinders can be transported in a single elevator ride. The elevators have the shape of a parallelepiped and their height is always greater than the height of the cylinders.\\n\\t\\n\\tTo minimize the number of elevator trips to transport the cylinders, the FCC wants, whenever possible, to put two cylinders in the elevator. The figure below illustrates, schematically (top view) a case where this is possible (a), and a case where this is not possible (b):\\n\\t\\n\\t  \\n\\t\\n\\t\\n\\tAs there is a very large amount of elevators and types of cylinders, FCC hired you to write a program that, given the dimensions of the elevator and of the two cylinders, determines whether it is possible to put the two cylinders in the elevator.\",\n    \"id\": 1124,\n    \"input\": \"\\tThe input contains several test cases. The first and only line of each test case contains four integers L, C, R1 e R2,, separated by blanks, indicating the width (1 \\u2264 L \\u2264 100) and the length (1 \\u2264 C \\u2264 100) of the elevator and the radius of the cylinders (1 \\u2264 R1, R2 \\u2264 100).\\n\\t\\n\\tThe last test case is followed by a line containing four zeros separated by blanks.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Elevator\",\n    \"output\": \"\\tFor each test case your program should print a single line with a single character, `S' if you can put the two cylinders in the elevator and `N' otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe Formula 1 season consists of a series of races, known as Grand Prix, organized by the International Federation of Automobile (FIA). The results of each Grand Prix are combined to determine Pilots\\\\' World Championship. More specifically, for each race some points are distributed to pilots, depending on their classification in the race. At the end of the season, the pilot who has earned the most points is declared the World Champion.\\n\\t\\n\\tFormula 1 organizers change constantly the competition rules, aiming to provide more excitement to fans. One rule modified for the 2010 season was the distribution of points in each Grand Prix. Since 2003, the scoring rule rewarded the top eight pilots, according to the following table:\\n\\t\\n    \\n\\t\\n\\t\\n\\tThat is, the winning driver received 10 points, second place received 8 points, and so on. In the 2010 season the top ten will receive points, obeying the following table:\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\tThe change in the scoring system led to much speculation about what would have been the effect to the World Championship in the past if the new score had been used. For example, would Lewis Hamilton have been champion in 2008, considering he and Felipe Massa were separated by just one point? To end the speculation, FIA hired you to write a program that, given the results of each race of a season determines the World Champion for different scoring systems.\",\n    \"id\": 1125,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains two integers G and P separated by a blank space, indicating the number of Grand Prix (1 \\u2264 G \\u2264 100) and the number of pilots (1 \\u2264 P \\u2264 100).. Pilots are identified by integers from 1 to P. Each of the following G lines indicates the result of a race, and contains Q integers separated by spaces. On each line, the (i)-th number indicates the order of arrival of pilot i in the race (the first number indicates the order of arrival of a pilot 1 in that race, the second number indicates the order of arrival of pilot 2 in that race and so on). The next line contains a single integer S indicating the number of scoring systems (1 \\u2264 S \\u2264 10), After that, each of the following lines S contains a description of a scoring system. The description of a scoring system begins with an integerK (1 \\u2264 K \\u2264 P), indicating the last finishing order to receive points, followed by a blank space, followed by e K integers k0, k1, ... , kn\\u22121 (1 \\u2264 ki \\u2264 100) separated by spaces, indicating the number of points to be assigned (the first integer indicates the points for first place, the second integer indicates the points for second place and so on).\\n\\tThe last test case is followed by a line containing only two zeros separated by a blank space.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Formula 1\",\n    \"output\": \"\\tFor each scoring system in the input your program must print one line, containing the identifier of the World Champion. If more than one pilot are World Champions (ie, if there is a tie), the line must contain all World Champions, in increasing order of identifier, separated by a space.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\tA long time ago, in a galaxy far, far away, there was an empire that dominated all others. A rebel alliance, unhappy with this situation, decided to fight these forces, with the objective of restoring democracy and peace for all nations.\\n\\t\\n\\tCaptain Cael, one of the rebel commanders, is sailing through space with his space cruiser, when he suddenly detects the presence of a ship of the Empire (according to the aesthetic standards of the time, all ships are tetrahedra). After a moment of surprise, Cael realizes he is in firing range and may place a cannon at any point of his ship.\\n\\t\\n\\tAs the power of his gun is fixed, Cael wants to position the cannon so that the distance traveled by the energy beam to the Empire\\\\'s ship is minimal, to maximize the damage. Therefore, he asked that you, sub-master Cin Talig, compute the shortest distance between the rebel spacecraft and the spacecraft of the Empire.\",\n    \"id\": 1126,\n    \"input\": \"\\tThe input contains several test cases. The first line of the input contains an integer T, indicating the number of test cases. Each of the T test cases consists of eight lines, each line describing the coordinate of a vertex of a ship. The first four lines describe the vertices of the rebel spacecraft, the following four lines describe the vertices of the spacecraft of the Empire.\\n\\t\\n\\tEach coordinate description is a line containing three integers X, Y, Z indicating the coordinate of the vertex in space (\\u2212103 \\u2264 X \\u2264 103, \\u2212103 \\u2264 Y \\u2264 103, \\u2212103 \\u2264 Z \\u2264 103). The four corners of each ship always define a tetrahedron of nonzero volume, and the two ships are always disjoint.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Star War\",\n    \"output\": \"\\tFor each test case in the input your program must print a line containing a single number, printed with precision of two decimal digits, indicating the minimum distance between the two spacecrafts. The distance between the two ships is always greater than zero.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe musical notes are the basic units of Western music. Each note is associated with a frequency. Two notes for which the fundamental frequencies have a ratio of power of 2 (one is half of the other, one is double of the other, etc..) are perceived as very similar. Therefore, any notes with that kind of relationship are given the same name, as described below.\\n\\t\\n\\tThere are twelve basic notes in a sequence of increasing frequency, each note separated from the previous note by the same distance in the musical scale (this distance is called a semitone). Seven of these twelve notes are represented by letters of the alphabet (A, B, C, D, E, F and G). The table below shows the distance, in semitones, between the notes. \\n\\n\\t\\tNotice that there are five notes that are not represented by letters of the alphabet: the notes between A and B, between C and D, between D and E, betwen F and G and between G and A.\\n\\t\\n\\tNotes can be modified by two accidentals, called sharp and flat, represented respectively by the symbols `#' and `b'. A sharp raises the note a semitone, a flat lowers the note a semitone. A note with an accidental is denoted by the name of the note followed by the accidental symbol. Notice that with this scheme we can represent all twelve notes.\\n\\t\\n\\tThe figure below illustrates the name of the notes in accordance with the scheme described above, in a fragment of a piano keyboard.\\n\\t\\n\\t\\n\\n\\tA melody can be represented by a sequence of notes. For example,\\n\\t\\n\\tA \\u00a0 A \\u00a0 D \\u00a0 C# \\u00a0 C# \\u00a0 D \\u00a0 E \\u00a0 E \\u00a0 E \\u00a0 F# \\u00a0 A \\u00a0 D \\u00a0 G# \\u00a0 A\\n\\t\\n\\tis a well known melody. Note however that as the distances between the semitones are always equal, the same melody can be written starting with another note (we say that the melody is in another key):\\n\\t\\n\\tB \\u00a0 B \\u00a0 E \\u00a0 D# \\u00a0 D# \\u00a0 E \\u00a0 Gb \\u00a0 Gb \\u00a0 Gb \\u00a0 G# \\u00a0 B \\u00a0 E \\u00a0 A# \\u00a0 B\\n\\t\\n\\tYour neighbor is a famous composer who suspects someone has plagiarized one of her songs. She asked your help to write a program that, given the sequence of notes of the melody in her song, and the sequence of notes of a suspicious snippet of melody, determines if the suspicious snippet occurs, in some key, in her song.\",\n    \"id\": 1127,\n    \"input\": \"\\tThe input consists of several test cases. The first line of a test case contains two integers M and T (1 \\u2264 M \\u2264 100000, 1 \\u2264 T \\u2264 10000, T \\u2264 M ), indicating the number of notes in the song suspected of having been plagiarized and in the suspect snippet. Each of the next two lines contains M and T notes, respectively, indicating the notes of the song and of the suspect snippet.\\n\\t\\n\\tNotes in each line are separated by one space; each note is one among `A', `B', `C', `D', `E', `F' or `G', possibly followed by an accidental sign: `#' for sharp or `b' for flat.\\n\\t\\n\\tThe last test case is followed by a line containing only two zeros separated by a blank space.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Musical Plagiarism\",\n    \"output\": \"\\tFor each test case your program must print a single line containing one character, `S' in case the song has been plagiarized by the text, or `N' in case the song has not been plagiarized by the text.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tIn a certain city there are N intersections connected by one-way and two-way streets. It is a modern city, and several of the streets have tunnels or overpasses. Evidently it must be possible to travel between any two intersections. More precisely given two intersections V and W it must be possible to travel from V to W and from W to V.\\n\\t\\n\\tYour task is to write a program that reads a description of the city street system and determines whether the requirement of connectedness is satisfied or not.\",\n    \"id\": 1128,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains two integers N and M, separated by a space, indicating the number of intersections (2 \\u2264 N \\u2264 2000) and number of streets (2 \\u2264 M \\u2264 N(N\\u22121)/2). The next M lines describe the city street system, with each line describing one street. A street description consists of three integers V, W and P, separated by a blank space, where V and W are distinct identifiers for intersections (1 \\u2264 V, W \\u2264 N , V \\u2260 W ) and P can be 1 or 2; if P = 1 the street is one-way, and traffic goes from V to W; if P = 2 then the street is two-way and links V and W. A pair of intersections is connected by at most one street.\\n\\t\\n\\tThe last test case is followed by a line that contains only two zero numbers separated by a blank space.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Come and Go\",\n    \"output\": \"\\tFor each test case your program should print a single line containing an integer G, where G is equal to one if the condition of connectedness is satisfied, and G is zero otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tProfessor John decided to apply only multiple-choice tests to his students. In each test, each question will have five alternatives (A, B, C, D and E), and the teacher will distribute one answer sheet for each student. At the end of the test, the answer sheets will be scanned and processed digitally to obtain the test score for each student. Initially, he asked a nephew, who knows computer programming, to write a program to extract the alternatives marked by the students in the answer sheets. The nephew wrote a good piece of software, but he couldn't finish it because he needs to study for the ICPC contest.\\n\\t\\n\\n\\tDuring processing, the answer sheets are scanned in gray levels between 0 (full black) and 255 (total white). After detecting the position for the five rectangles corresponding to each of the alternatives of a question, the software calculates the average pixel gray level for each rectangle, returning an integer value corresponding to each alternative. If the rectangle was filled properly the average value is zero (all black). If the rectangle was left blank the average value is 255 (white total). Thus, ideally, if the average values for each alternative of a question are (255, 0, 255, 255, 255), we know that the student has marked alternative B for that question. However, as answer sheets are processed individually, the average gray level for a completely filled rectangle is not necessarily 0 (may be higher), and the value for a rectangle not filled is not necessarily 255 (may be less). Professor John determined that rectangle average gray levels would be divided into two classes: those with values equal or lower to 127 are considered black and those with values higher than 127 will be considered white.\\n\\t\\n\\tObviously, not necessarily all questions of all sheets are marked correctly. It can happen that a student makes a mistake and marks more than one alternative for the same question, or does not mark any alternative. In such cases, the answer to the question should be disregarded.\\n\\t\\n\\tNow, professor John needs a volunteer to write one program that, given the average gray level values of the five rectangles corresponding to the alternatives of a question, determines which alternative was marked, or whether the answer to the question should be disregarded.\",\n    \"id\": 1129,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains an integer N indicating the number of questions in the answer sheet (1 \\u2264 N \\u2264 255).Each of the N following lines describes the response to a question and contains five integers A, B, C, D and E, indicating the values of average gray levels for each alternative (0 \\u2264 A, B, C, D, E \\u2264 255).\\n\\t\\n\\tThe last test case is followed by a line containing only a number zero.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Optical Reader\",\n    \"output\": \"\\tFor each input test case, your program must print N lines, each line corresponding to a question. If the answer to the question was correctly filled in the answer sheet, the line should contain the alternative selected (\\u2018A\\u2019,\\u2018B\\u2019, \\u2018C\\u2019, \\u2018D\\u2019 or \\u2018E\\u2019). Otherwise, the line should contain the character \\u2018*\\u2019 (asterisk).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Tic-tac-toe is one of the oldest games of mankind. The first records of this game are from the first century BC, during the Roman Empire. John and Mary love to play the game, but after a while they decided to play a variant of the old traditional game, Tic-tac-toe 1-D.\\n                    \\n                    Tic-tac-toe 1-D is a game played by two players on a board 1 x N; initially, all the squares of the board are empty. Players take turns drawing a cross on an empty square. The first player to complete a sequence of three or more crosses in contiguous squares, wins the game.\\n                    \\n                    Mary soon realized that, depending on the game situation, being her turn, she can guarantee she will win, regardless of John's moves. This is relatively easy for smaller boards, but for larger boards, after several moves, this task is more difficult. So, she asked you to write a program that, given the state the board, decides whether there exists a winning strategy.\",\n    \"id\": 1130,\n    \"input\": \"The input contains several test cases. The first line of a test case contains an integer N, indicating the size of the board (3 \\u2264 N \\u2264 104). The next line contains a sequence of N characters indicating which squares of the board have been marked: a '.' indicates that the corresponding square is empty, while a 'X' indicates that the square already has a cross drawn. The input never contains three contiguous 'X'.\\n                \\n                The last test case is followed by a line containing a single number zero.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Tic-tac-toe\",\n    \"output\": \"For each input test case, your program must print a single line containing a single character, 'S' if Mary has a winning strategy or 'N' otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tThe Federa\\u00e7\\u00e3o Ga\\u00facha de Futebol invited you to write a program to present a statistical result of several GRENAIS. Write a program that read the number of goals scored by Inter and the number of goals scored by Gremio in a GRENAL. Write the message \\\"Novo grenal (1-sim 2-nao)\\\" and request a response. If the answer is 1, two new numbers must be read (another input case) asking the number of goals scored by the teams in a new departure, otherwise the program must be finished, printing:\\n\\n\\t- How many GRENAIS were part of the statistics.\\n\\t- The number of victories of Inter.\\n\\t- The number of victories of Gremio.\\n\\t- The number of Draws.\\n\\t- A message indicating the team that won the largest number of GRENAIS (or the message: \\\"N\\u00e3o houve vencedor\\\" if both team won the same quantity of GRENAIS).\",\n    \"id\": 1131,\n    \"input\": \"\\tThe input contains two integer values\\u200b\\u200b, corresponding to the goals scored by both teams. Then there is an integer (1 or 2), corresponding to the repetition of the algorithm.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Grenais\",\n    \"output\": \"\\tAfter each reading of the goals it must be printed the message \\\"Novo grenal (1-sim 2-nao)\\\". When the program is finished, the program must print the statistics as the example below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that reads two integer numbers X and Y and calculate the sum of all number not divisible by 13 between them, including both.\",\n    \"id\": 1132,\n    \"input\": \"\\tThe input file contains 2 integer numbers X and Y without any order.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Multiples of 13\",\n    \"output\": \"\\tPrint the sum of all numbers between X and Y not divisible by 13, including them if it is the case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that reads two integer numbers X and Y. Print all numbers between X and Y which dividing it by 5 the rest is equal to 2 or equal to 3.\",\n    \"id\": 1133,\n    \"input\": \"\\tThe input file contains 2 any positive integers, not necessarily in ascending order.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Rest of a Division\",\n    \"output\": \"\\tPrint all numbers according to above description, always in ascending order.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tA gas station wants to determine which of their products is the \\npreference of their customers. Write a program to read the type of fuel \\nsupplied (coded as follows: 1. Alcohol 2. Gasoline 3. Diesel 4. End). If\\n you enter an invalid code (outside the range of 1 to 4) a new code must be \\nrequested. The program will end when the \\ninserted code is the number 4.\",\n    \"id\": 1134,\n    \"input\": \"\\tThe input contains only integer and positive values.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Type of Fuel\",\n    \"output\": \"\\tIt should be written the message:\\u00a0\\\"MUITO OBRIGADO\\\"\\u00a0and the \\namount of customers who fueled each fuel type, as an example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tby Pablo Ariel Heiber \\u00a0Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tA group of ants is really proud because they built a magnificent and large colony. However, the enormous size has become a problem, because many ants do not know the path between some parts of the colony. They desperately need your help!\\n\\n\\t\\u00a0\\n\\n\\tThe colony of ants was made as a series of N anthills, connected by tunnels. The ants, obsessive as they are, numbered the anthills sequentially as they built them. The first anthill, numbered 0, did not require any tunnel, but for each of the subsequent anthills, 1 through N - 1, the ants also built a single tunnel that connected the new anthill to one of the existing anthills. Of course, this tunnel was enough to allow any ant to go to any previously built anthill, possibly passing through other anthills in its path, so they did not bother making extra tunnels and continued building more anthills.\\n\\n\\t\\u00a0\\n\\n\\tYour job is, given the structure of the colony and a set of queries, calculate for each query the shortest path between pairs of anthills.\\u00a0The length of a path is the sum of the lengths of all tunnels that need to be traveled.\\n\\n\\n                \\n\\n                Input\\n\\n                \\n     \\n\\tEach test case is given using several lines. The first line contains an integer N representing the number of anthills in the colony\\u00a0(2 \\u2264\\u00a0N\\u00a0\\u2264 105). Each of the next N-1 lines contains two integers that describe a tunnel. Line i, for\\u00a01\\u00a0\\u2264\\u00a0i\\u00a0\\u2264\\u00a0N-1, contains\\u00a0Ai\\u00a0and\\u00a0Li, indicating that anthill i was connected directly to anthill Ai with a tunnel of length Li\\u00a0\\u00a0\\u00a0(0\\u00a0\\u2264\\u00a0Ai\\u00a0\\u2264\\u00a0i-1\\u00a0e 1\\u00a0\\u2264\\u00a0Li\\u00a0\\u2264\\u00a0109). The next line contains an integer Q representing the number of queries that follow\\u00a0(1\\u00a0\\u2264\\u00a0Q\\u00a0\\u2264\\u00a0105). Each of the next Q lines describes a query and contains two distinct integers S and T\\u00a0(0\\u00a0\\u2264\\u00a0S,T\\u00a0\\u2264\\u00a0N-1), representing respectively the source and target anthills.\\n\\n\\t\\u00a0\\n\\n\\tThe last test case is followed by a line containing one zero.\",\n    \"id\": 1135,\n    \"input\": \"\\tEach test case is given using several lines. The first line contains an integer N representing the number of anthills in the colony\\u00a0(2 \\u2264\\u00a0N\\u00a0\\u2264 105). Each of the next N-1 lines contains two integers that describe a tunnel. Line i, for\\u00a01\\u00a0\\u2264\\u00a0i\\u00a0\\u2264\\u00a0N-1, contains\\u00a0Ai\\u00a0and\\u00a0Li, indicating that anthill i was connected directly to anthill Ai with a tunnel of length Li\\u00a0\\u00a0\\u00a0(0\\u00a0\\u2264\\u00a0Ai\\u00a0\\u2264\\u00a0i-1\\u00a0e 1\\u00a0\\u2264\\u00a0Li\\u00a0\\u2264\\u00a0109). The next line contains an integer Q representing the number of queries that follow\\u00a0(1\\u00a0\\u2264\\u00a0Q\\u00a0\\u2264\\u00a0105). Each of the next Q lines describes a query and contains two distinct integers S and T\\u00a0(0\\u00a0\\u2264\\u00a0S,T\\u00a0\\u2264\\u00a0N-1), representing respectively the source and target anthills.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Ants Colony\",\n    \"output\": \"\\tFor each test case output a single line with Q integers, each of them being the length of a shortest path between the pair of anthills of a query. Write the results for each query in the same order that the queries were given in the input.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tby Ines Kereki\\u00a0\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tUruguay\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tAlbert, Charles and Mary invented a new version of the classical game Bingo. In traditional Bingo the game is presided over by a non-player known as the caller. In the beginning of the game each player is given a card containing a unique combination of numbers from 0 to N arranged in columns and rows. The caller has a bag containing N+1 balls, numbered from 0 to N. On each turn, the caller randomly selects a ball from the bag, announces the number of the drawn ball to the players, and sets the ball aside so that it cannot be selected again. Each player searches his/her card for the called number and marks it if he/she finds it. The first player who marks a complete pre-announced pattern on the card (for example, a full horizontal line) wins a prize.\\n\\n\\tIn the Albert-Charles-Mary version, on each turn, the caller draws a first ball, returns it to the bag, draws a second ball, returns it to the bag, and then calls out the absolute difference between the two ball numbers. To generate even more excitement, before the game started a possibly empty subset of balls is removed from the bag, in such a way that at least two balls remain there. They would like to know if every number from 0 to N may still be called out with the new drawing method considering the balls that were left in the bag.\",\n    \"id\": 1136,\n    \"input\": \"\\tEach test case is given using exactly two lines. The first line contains two integers\\u00a0N\\u00a0and\\u00a0B. The meaning of N was described above\\u00a0(1 \\u2264\\u00a0N\\u00a0\\u2264 90), while B represents the number of balls which remained in the bag\\u00a0(2\\u00a0\\u2264\\u00a0B\\u00a0\\u2264\\u00a0N+1). The second line contains B distinct integers\\u00a0bi, indicating the balls which remained in the bag\\u00a0(0\\u00a0\\u2264\\u00a0bi\\u00a0\\u2264\\u00a0N).\\n\\n\\tThe last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Bingo!\",\n    \"output\": \"\\tFor each test case, print a single line containing a single uppercase \\u2018Y\\u2019 if it is possible to call out every number from 0 to N, inclusive, or a single uppercase \\u2018N\\u2019 otherwise.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber  Argentina\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"You probably know what a set of collinear points is: a set of points such that there exists a straight line that passes through all of them. A set of cocircular points is defined in the same fashion, but instead of a straight line, we ask that there is a circle such that every point of the set lies over its perimeter.\\n                \\n                The International Collinear Points Centre (ICPC) has assigned you the following task: given a set of points, calculate the size of the largest subset of cocircular points.\",\n    \"id\": 1137,\n    \"input\": \"Each test case is given using several lines. The first line contains an integer N representing the number of points in the set(1 \\u2264 N \\u2264 100). Each of the next N lines contains two integers X and Y representing the coordinates of a point of the set (-104  \\u2264 X,Y\\u2264104). Within each test case, no two points have the same location.\\n\\n                The last test case is followed by a line containing one zero.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Cocircular Points\",\n    \"output\": \"For each test case, print a single line with a single integer representing the number of points in one of the largest subsets of the input that are cocircular.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"\\tby Pablo Ariel Heiber\\u00a0\\u00a0Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tDiana is going to write a list of all positive integers between A and B, inclusive, in base 10 and without any leading zeros. She wants to know how many times each digit is going to be used.\",\n    \"id\": 1138,\n    \"input\": \"\\t\\n\\n\\tEach test case is given in a single line that contains two integers\\u00a0A\\u00a0and\\u00a0B\\u00a0(1 \\u2264 A\\u00a0\\u2264\\u00a0B\\u00a0\\u2264\\u00a0108). \\n\\tThe last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Digits Count\",\n    \"output\": \"\\tFor each test case print a single line with 10 integers representing the number of times each digit is used when writing all integers between A and B, inclusive, in base 10 and without leading zeros. Write the counter for each digit in increasing order from 0 to 9.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"by Pablo Ariel Heiber  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You are going to build a new factory in your city. Since you need a lot of electric, having the factory placed close to a power plant is important. You want to build a prioritized list of possible locations.\\n                \\n                    \\u00a0\\n                \\n                    The area in which the factory needs to be located can be represented as a rectangular grid of\\u00a0N\\u00a0rows and\\u00a0M\\u00a0columns of cells. Some of those cells contain a power plant. The new factory occupies exactly one cell, and can be placed in any empty cell (i.e., any cell that does not contain a power plant).\\n                \\n                    \\u00a0\\n                \\n                    Numbering rows from 1 to\\u00a0N\\u00a0and columns from 1 to\\u00a0M, the location of a cell can be described by two integers. Cell\\u00a0(\\u00a0i\\u00a0,\\u00a0j\\u00a0)\\u00a0is the cell in row\\u00a0i\\u00a0and column\\u00a0j. The distance between cell\\u00a0(i0\\u00a0,\\u00a0j0)\\u00a0and cell\\u00a0(i1\\u00a0,\\u00a0j1)\\u00a0is\\u00a0max( |i0\\u00a0-\\u00a0i1| , |j0\\u00a0-\\u00a0j1| )\\u00a0where |x| represents the absolute value of\\u00a0x. The electric priority of a location is its minimum distance to a power plant. With this in mind, you will number all possible locations with consecutive integers starting from 1. You will do it in ascending order of electric priority. Among locations with the same electric priority, you will number them in ascending order of their row numbers. Among locations with the same electric priority and row number, you will list them in ascending order of column numbers.\\n                \\n                    \\u00a0\\n                \\n                    In the following picture you can see a 4 \\u00d7 7 grid. Black cells are the cells in which there is a power plant. Dark gray cells have an electric priority of 1, light gray cells an electric priority of 2 and white cells an electric priority of 3. The number inside each cell is the number assigned by you to the location.\\n                \\n                    \\u00a0\\n                \\n                    \\n                \\n                    \\u00a0\\n                \\n                    You will receive several queries about the prioritized list built. In each query you will be given a number representing a position in the prioritized list and you have to calculate which location was assigned the given position.\",\n    \"id\": 1139,\n    \"input\": \"Each test case is given using several lines. The first line contains three integers\\u00a0N,\\u00a0M\\u00a0and\\u00a0P, representing the number of rows and columns of the grid\\u00a0(1\\u00a0\\u2264\\u00a0N,M\\u00a0\\u00a0\\u2264\\u00a0109)\\u00a0\\u00a0and the number of existing power plants\\u00a0(1\\u00a0\\u2264\\u00a0P\\u00a0\\u2264\\u00a020). Each of the next\\u00a0P\\u00a0lines contains two integers\\u00a0R\\u00a0and\\u00a0C\\u00a0representing the row and column numbers of the location of a power plant\\u00a0(1\\u00a0\\u2264\\u00a0R\\u00a0\\u2264\\u00a0N\\u00a0and 1\\u00a0\\u2264\\u00a0C\\u00a0\\u00a0\\u2264\\u00a0M). Within each test case, all power plant locations are different. The next line contains a single integer\\u00a0Q\\u00a0representing the number of queries\\u00a0(1\\u00a0\\u2264\\u00a0Q\\u00a0\\u2264\\u00a050).\\u00a0Then follows a line with\\u00a0Q\\u00a0integers\\u00a0p1, ... ,\\u00a0pQ\\u00a0representing positions in the prioritized list\\u00a0(1\\u00a0\\u2264\\u00a0pi\\u00a0\\u2264\\u00a0N\\u00a0x\\u00a0M\\u00a0-\\u00a0P).\\n                \\n                    \\u00a0\\n                \\n                    The last test case is followed by a line containing three zeros.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Electric Needs\",\n    \"output\": \"For each test case print Q + 1 lines. Line i of the first Q lines must contain two integers representing the row and column numbers of the location that was assigned number pi. The last line for each test case must contain a single character '-' (hyphen).\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"by Ines Kereki  Uruguay\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\n                    Fiona has always loved poetry, and recently she discovered a fascinating poetical form. Tautograms are a special case of alliteration, which is the occurrence of the same letter at the beginning of adjacent words. In particular, a sentence is a tautogram if all of its words start with the same letter.\\n                \\n                    \\n                \\n                    For instance, the following sentences are tautograms:\\n                \\n                    \\n                        Flowers Flourish from France\\n                    \\n                        Sam Simmonds speaks softly\\n                    \\n                        Peter pIckEd pePPers\\n                    \\n                        truly tautograms triumph\\n                \\n                \\n                    Fiona wants to dazzle her boyfriend with a romantic letter full of this kind of sentences. Please help Fiona to check if each sentence she wrote down is a tautogram or not.\",\n    \"id\": 1140,\n    \"input\": \"\\n                    Each test case is given in a single line that contains a sentence. A sentence consists of a sequence of at most 50 words separated by single spaces. A word is a sequence of at most 20 contiguous uppercase and lowercase letters from the English alphabet. A word contains at least one letter and a sentence contains at least one word.\\n                \\n                    \\n                \\n                    The last test case is followed by a line containing only a single character '*' (asterisk).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Flowers Flourish from France\",\n    \"output\": \"For each test case output a single line containing an uppercase 'Y' if the sentence is a tautogram, or an uppercase 'N' otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"by Pablo Ariel Heiber  Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"Gene and Gina have a particular kind of farm. Instead of growing animals and vegetables, as it is usually the case in regular farms, they grow strings. A string is a sequence of characters. Strings have the particularity that, as they grow, they add characters to the left and/or to the right of themselves, but they never lose characters, nor insert new characters in the middle.\\n                    \\n                    Gene and Gina have a collection of photos of some strings at different times during their growth. The problem is that the collection is not annotated, so they forgot to which string each photo belongs to. They want to put together a wall to illustrate strings growing procedures, but they need your help to find an appropriate sequence of photos.\\n                \\n                    \\n                    Each photo illustrates a string. The sequence of photos must be such that if si comes immediately before si+1 in the sequence, then si+1 is a string that may have grown from si (i.e., si appears as a consecutive substring of si+1). Also, they do not want to use repeated pictures, so all strings in the sequence must be different.\\n                \\n                    \\n                    Given a set of strings representing all available photos, your job is to calculate the size of the largest sequence they can produce following the guidelines above.\",\n    \"id\": 1141,\n    \"input\": \"\\n                \\n                    Each test case is given using several lines. The first line contains an integer N representing the number of strings in the set (1 \\u2264 N  \\u2264 104). Each of the following N lines contains a different non-empty string of at most 1000 lowercase letters of the English alphabet. Within each test case, the sum of the lengths of all strings is at most 106.\\n                    \\n                    The last test case is followed by a line containing one zero.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Growing Strings\",\n    \"output\": \"For each test case print a single line with a single integer representing the size of the largest sequence of photos that can be produced.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\r\\n                    Adapted by Neilor Tonin, URI  Brazil\\r\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\r\\n                \\r\\n                    Write a program that reads an integer N. This N is the number of output lines printed by this program.\\r\\n\\r\",\n    \"id\": 1142,\n    \"input\": \"\\r\\n                \\r\\n                    The input file contains an integer N.\\r\\n\\r\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"PUM\",\n    \"output\": \"\\r\\n                \\r\\n                    Print the output according to the given example.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that reads an integer N (1 < N < 1000). This N is the number of output lines printed by this program.\",\n    \"id\": 1143,\n    \"input\": \"\\tThe input file contains an integer N.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Squared and Cubic\",\n    \"output\": \"\\tPrint the output according to the given example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that reads an integer N. N * 2 lines must be printed by this program according to the example below.\\n\\tFor numbers with more than 6 digits, all digits must be printed (no cientific notation allowed).\",\n    \"id\": 1144,\n    \"input\": \"\\tThe input file contains an integer N (1 < N < 1000).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Logical Sequence\",\n    \"output\": \"\\tPrint the output according to the given example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write an program that reads two numbers X and Y (X < Y). After this, show a sequence of 1 to y, passing to the next line to each X numbers.\",\n    \"id\": 1145,\n    \"input\": \"The input contains two integer numbers X (1 < X < 20) and Y (X < Y < 100000).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Logical Sequence 2\",\n    \"output\": \"Each sequence must be printed in one line, with a blank space between each number, like the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tYour program must read an integer X indefinited times (the program must stop when X  is equal to zero). For each X print the sequence from 1 to X, with one space between each one of these numbers.\\n\\t\\n\\tPS: Be carefull. Don't leave any space after the last number of each line, otherwise you'll get Presentation Error.\",\n    \"id\": 1146,\n    \"input\": \"\\tThe input file contains many integer numbers. The last one is zero.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Growing Sequences\",\n    \"output\": \"\\tFor each number N of the input file, one output line must be printed, from 1 to N like the following example. Be careful with blank spaces after the last line number.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tBy Gerson Groth  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tYour friend Peter is learning chess. But he's still amateur and doesn't have enough conviction to make secure movements of the knight piece. This way, Peter asked you to make a program that calculate, in one turn, the distinct possible movements that the knight can perform, without be on attack of any of the 8 existing pawns. The knight's movements and pawn's movements are according to the chess rules, that means the knight must move in L and the pawn must move one square to any direction, without going back. Look the following example.\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\tIn the picture, considering all 8 possible positions to move the Knight, two of them are under attack (6b and 3e). In the other squares, the knight can be moved without problem, escaping this way of the any pawn attack. In the 2b square a pawn already exists, but is also a valid moviment to the knight, because it can go to this position and \\\"kill\\\" the pawn.\\n\\t\\n\\tSo, as the given example, the secure (valid) movements are 6. You must remember that the black pawn can move from up to down int the table, from line 7 to line 1.\",\n    \"id\": 1147,\n    \"input\": \"\\tThe input file consist in many test cases. Each test case consist in 9 input lines. The first line indicates the initial position of the knight. The following 8 lines describe the respectively pawn positions.\\n\\t\\n\\tThe last line of the input file contains only the number 0 (Zero).\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Knight Scape\",\n    \"output\": \"\\tFor each test case your program must print an unique line, containig the descrition:\\n\\t\\n\\tCaso de Teste #Y: X movimento(s).\\n\\t\\n\\tWhere Y represents the test case, X represents the among of possible secure movements to the knight without be on pawn attack.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tby Alessandro Luna  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tIn the year 2050, after several attempting of ONU to maintain the peace in world, exploded the third world war. Industrial secrets, commercials and military forced all countries to utilize extremely sophisticated espionage services, in order to have one spy of each country in each city in the world. These spies need to communicate with others spies, informants and even with both centrals during their actions. Unfortunately, there\\u2019s no safe way for a spy to communicate within a war building, therefore the messages are always sent in code so that only the receiver is able to read and understand it.\\n\\t\\n\\tThe spies use the only service available in war time, the post offices. Each city has one post office where letters can be sent. Letters can be sent directly to its destination or to other post offices, until it arrives to the post office of the intended city, if possible.\\n\\t \\n\\n\\tA post office in city A can send a printed letter directly to a post office in city B if there\\u2019s a letter sending agreement, which determines the time, measured in hours, that a letter takes to travel from city A to city B (and not necessarily the opposite). If there\\u2019s no agreement between the cities, then post office A can try to send the letter to as many other post offices as necessary, until it is delivered to its destination, if possible.\\n\\t \\n\\n\\tSome post offices are electronically interconnected with satellites and optical fiber. Before war, these connections could reach all offices, making a letter to be sent instantly, but during hostilities period, each country began to control the electronic communication, and one office can only send a letter electronically to other, if both offices are in the same country. Two post offices, A and B, are in the same country if there\\u2019s any way that a printed letter sent from one office is delivered in the other one.\\n\\n\\t\\n\\tThe espionage service of your country was able to obtain all letter sending agreements in the world e wishes to find out the minimum time for sending a letter between various pairs of cities. Would you be able to help it?\",\n    \"id\": 1148,\n    \"input\": \"\\tThe input contains several test cases. The first line of each case contains two integers separated by a White space, N (1 \\u2264 N \\u2264 500) and E (0 \\u2264 E \\u2264 N2), indicating the number of cities (enumerated from 1 to N) and of letter sending agreements, respectively. Follow, then, E lines, each one with three integers separated by a White space, X, Y and H (1 \\u2264 X, Y \\u2264 N, 1 \\u2264 H \\u2264 1000), indicating that there is an agreement to sending a printed letter from city X to city Y, and that this letter will be delivered in H hours.\\n\\t\\n\\tNext, there will be a line with an integer K (0 \\u2264 K \\u2264 100), the number of queries. Finally, K lines of input, each one representing a query that contains two integers separated by a white space, O and D (1 \\u2264 O, D \\u2264 N). You should determine the minimum time for sending a letter from city O to city D. The end of input is determined by N = E = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Countries at War\",\n    \"output\": \"\\tFor each test case, your program must output K lines. The N-th line should contain an integer M, the minimum time in hours, for sending a letter in the N-th query. If there\\u2019s no communication way between the cities of the query, you should print: \\\"Nao e possivel entregar a carta\\\" ( 'The letter could not be delivered' in portuguese).\\n\\t\\n\\tPrint a blank line after each case.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite an algorithm to read a value A and a value N. Print the sum of N numbers from A (inclusive). While N is negative or ZERO, a new N (only N) must be read. All input values are in the same line.\",\n    \"id\": 1149,\n    \"input\": \"\\tThe input contains only integer values, \\u200b\\u200bcan be positive or negative.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Summing Consecutive Integers\",\n    \"output\": \"\\tThe output contains only an integer value.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write a program that reads two integers: X and Z (Z must be read as many times as necessary, until a number greater than X is read). Count how many integers must be summed in sequence (from and including X) so that the sum exceeds Z the minimum possible and write this number.    The input may have, for example, the numbers \\u200b\\u200b21 21 15 30. In this case, the number 21 is assumed for X, The numbers 21 and 15 must be ignored because they are smaller or equal to X. The number 30 is within the specification (greater than X) and is valid. So, the final result must be 2 for this test case, because the sum (21 + 22) is bigger than 30.\",\n    \"id\": 1150,\n    \"input\": \"The input contains only integer values\\u200b\\u200b, one per line, which may be positive or negative. The first number is the value of X. The next line will contain Z. If Z does not meet the specification of the problem, it should be read again, as many times as necessary.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Exceeding Z\",\n    \"output\": \"Print a line with an integer number representing the among of integer numbers that must be summed.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tThe following sequence of numbers 0 1 1 2 3 5 8 13 21 ... is known as the Fibonacci Sequence. Thereafter, each number after the first 2 is equal to the sum of the previous two numbers. Write an algorithm that reads an integer N (N < 46) and that print the first N numbers of this sequence.\",\n    \"id\": 1151,\n    \"input\": \"\\tThe input file contains an integer number N (0 < N < 46).\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Easy Fibonacci\",\n    \"output\": \"\\tThe numbers \\u200b\\u200bshould be printed on the same line, separated by a blank space. There is no space after the last number.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Univeristy of Ulm Local Contest  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"Economic times these days are tough, even in Byteland. To reduce the operating costs, the government of Byteland has decided to optimize the road lighting. Till now every road was illuminated all night long, which costs 1 Bytelandian Dollar per meter and day. To save money, they decided to no longer illuminate every road, but to switch off the road lighting of some streets. To make sure that the inhabitants of Byteland still feelsafe, they want to optimize the lighting in such a way, that after darkening some streets at night, there will still be at least one illuminated path from every junction in Byteland to every other junction.\\n\\nWhat is the maximum daily amount of money the government of Byteland can save, without making their inhabitants feel unsafe?\",\n    \"id\": 1152,\n    \"input\": \"The input file contains several test cases. Each test case starts with two numbers m (1 \\u2264 m \\u2264 200000) and n (m-1 \\u2264 n \\u2264 200000), that are the number of junctions in Byteland and the number of roads in Byteland, respectively. Follow n integer triples x, y, z, specifying that there will be a bidirectional road between x and y with length z meters (0 \\u2264 x, y < m and x \\u2260 y).\\n\\nThe input is terminated by m=n=0. The graph specified by each test case is connected. The total length of all roads in each test case is less than 231.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Dark Roads\",\n    \"output\": \"For each test case print one line containing the maximum daily amount the government can save.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead a value N. Calculate and write its corresponding factorial. Factorial of N = N * (N-1) * (N-2) * (N-3) * ... * 1.\",\n    \"id\": 1153,\n    \"input\": \"\\tThe input contains an integer value N (0 < N < 13).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Simple Factorial\",\n    \"output\": \"\\tThe output contains an integer value corresponding to the factorial of N.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write an algorithm to read an undeterminated number of data, each containing an individual's age. The final data, which will not enter in the calculations, contains the value of a negative age. Calculate and print the average age of this group of individuals.\",\n    \"id\": 1154,\n    \"input\": \"The input contains an undetermined number of integers. The input will be stop when a negative value is read.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Ages\",\n    \"output\": \"The output contains a value corresponding to the average age of individuals.\\n                \\n                    The average should be printed with two digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite an algorithm to calculate and write the value of S, S being given by:\\n\\tS = 1 + 1/2 + 1/3 + \\u2026 + 1/100\",\n    \"id\": 1155,\n    \"input\": \"\\tThere is no input in this problem.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"S Sequence\",\n    \"output\": \"\\tThe output contains a value corresponding to the value of S.\\n\\tThe value should be printed with two digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite an algorithm to calculate and write the value of S, S being given by:\\n\\tS = 1 + 3/2 + 5/4 + 7/8 + ... + 39/?\",\n    \"id\": 1156,\n    \"input\": \"\\tThere is no input in this problem.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"S Sequence II\",\n    \"output\": \"\\tThe output contains a value corresponding to the value of S.\\n\\tThe value should be printed with two digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an integer N and compute all its divisors.\",\n    \"id\": 1157,\n    \"input\": \"\\tThe input file contains an integer value.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Divisors I\",\n    \"output\": \"\\tWrite all positive divisors of N, one value per line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an integer N that is the number of test cases that follows. Each test case contains two integers X and Y. Print one output line for each test case that is the sum of Y odd numbers from X including it if is the case. For example:\\n\\tfor the input 4 5, the output must be 45, that is: 5 + 7 + 9 + 11 + 13\\n\\tfor the input 7 4, the output must be 40, that is: 7 + 9 + 11 + 13\",\n    \"id\": 1158,\n    \"input\": \"\\tThe first line of the input is an integer N that is the number of test cases that follow. Each test case is a line containing two integer X and Y.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Sum of Consecutive Odd Numbers III\",\n    \"output\": \"\\tPrint the sum of all consecutive odd numbers from X.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tThe program must read an integer X indefinite times (stop when X=0). For each X, print the sum of five consecutive even numbers from X, including it if X is even. If the input number is 4, for example, the output must be 40, that is the result of the operation: 4+6+8+10+12. If the input number is 11, for example, the output must be 80, that is the result of 12+14+16+18+20.\",\n    \"id\": 1159,\n    \"input\": \"\\tThe input file contains many integer numbers. The last one is zero.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Sum of Consecutive Even Numbers\",\n    \"output\": \"\\tPrint the output according to the example below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tMariazinha wants to solve an interesting problem. Given the population and growing rate of 2 cities (A and B), she would like to know how many years would be necessary to the smaller city (always A) to be greater than the larger city (always B) in population. Of course, she only wants to know the result for cities that the growing rate for city A is bigger than the growing rate for city B, therefore, she separated these test cases for you. Your job is to build a program that print the time in years for each test case.\\n\\t\\n\\tHowever, in some cases the time can be so big and Mariazinha don't want to know the exact time for these cases. In this way, for these test cases, it is enough printing the message \\\"Mais de 1 seculo\\\", that means \\\"More than a Century\\\".\",\n    \"id\": 1160,\n    \"input\": \"The first line of the input contains a single integer T, indicating the number of test cases (1 \\u2264 T \\u2264 3000).\\n\\tEach test case contains four numbers: two integers PA and PB (100 \\u2264 PA \\u2264 1000000, 100 \\u2264 PB \\u2264 1000000, PA < PB) \\n\\tindicating respectively the population of A and B and two numbers G1 and G2 \\n\\t(0.1 \\u2264 G1 \\u2264 10.0, 0.0 \\u2264 G2 \\u2264 10.0, G2 < G1) with one digit after the decimal point each, indicating the populational growing (in percentual) for A and B respectively.  \\n\\tPay attention please: The population always is an integer number. So, a growing of 2.5% over a population of 100 will result in 102 (instead of 102.5) and  a growing of 2.5% over a population of 1000 will result in 1025. In addition, use double variables to the growing rate.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Population Increase\",\n    \"output\": \"\\tPrint, for each test case, how many years would be necessary to the city A became greater than the city B (in inhabitants).\\n\\tRemember that if this time is greater than 100 it will be necessary printing the message: \\\"Mais de 1 seculo\\\". \\n\\tIn each one of these cases, maybe would be interesting interrupt the counting, otherwise you'll get \\\"Time Limit Exceeded\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tRead two numbers M and N indefinitely. Calculate and write the sum of their factorial. Be carefull, because the result \\n\\tcan have more than 15 digits.\",\n    \"id\": 1161,\n    \"input\": \"\\tThe input file contains many test cases. Each test case contains two integer numbers M (0 \\u2264 M \\u2264 20) and N (0 \\u2264 N \\u2264 20). The end of file is determined by eof.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Factorial Sum\",\n    \"output\": \"\\tFor each test case in the input your program must print a single line, containing a number that is the sum of the both factorial (M and N).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tUnknown Author\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tAt an old railway station, you may still encounter one of the last remaining \\u201ctrain swappers\\u201d. A train swapper is an employee of the railroad, whose sole job it is to rearrange the carriages of trains.\\n\\t\\n\\tOnce the carriages are arranged in the optimal order, all the train driver has to do, is drop the carriages off, one by one, at the stations for which the load is meant.\\n\\t\\n\\tThe title \\u201ctrain swapper'' stems from the first person who performed this task, at a station close to a railway bridge. Instead of opening up vertically, the bridge rotated around a pillar in the center of the river. After rotating the bridge 90 degrees, boats could pass left or right.\\n\\t\\n\\tThe first train swapper had discovered that the bridge could be operated with at most two carriages on it. By rotating the bridge 180 degrees, the carriages switched place, allowing him to rearrange the carriages (as a side effect, the carriages then faced the opposite direction, but train carriages can move either way, so who cares).\\n\\t\\n\\tNow that almost all train swappers have died out, the railway company would like to automate their operation. Part of the program to be developed, is a routine which decides for a given train the least number of swaps of two adjacent carriages necessary to order the train. Your assignment is to create that routine.\",\n    \"id\": 1162,\n    \"input\": \"\\tThe input contains on the first line the number of test cases (N). Each test case consists of two input lines. The first line of a test case contains an integer L, determining the length of the train (0 \\u2264 L \\u2264 50). The second line of a test case contains a permutation of the numbers 1 through L, indicating the current order of the carriages. The carriages should be ordered such that carriage 1 comes first, then 2, etc. with carriage L coming last.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Train Swapping\",\n    \"output\": \"\\tFor each test case output the sentence: 'Optimal train swapping takes S swaps.' where S is an integer.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tby Marcelo Luiz Onhate  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tIn a far away land there are two cities, Nlogony, home of the Nlogonies, and Ducklogony, home of their neighbors, the Ducknese. These two cities have been at war for some time and now, in a try to win the war, the Ducknese intend to attack Nlogony with a slingshot that fires ducks. However, to avoid mistakes, they asked you to build a program that, given the values of the slingshot's height (h), the points where the Nlogony city begins (p1) and ends (p2), the shooting angle (\\u03b1) and the launching speed, calculates if the projectile will hit the target. \\n\\n\\t\\n \\n\\tFor the calculations, assume that the gravity's acceleration is g=9,80665 and that \\u03c0 = 3,14159. \\n                Input\\n\\n                \\n                    \\n\\tThere are various test cases, where each one starts with 1 floating point value h( 1 \\u2264 h \\u2264 150) indicating the slingshot's height, containing, in the next line, 2 integer values p1 and p2( 1 \\u2264 p1, p2 \\u2264 9999) indicating where Nlogony begins and ends, the next line containing 1 integer n(1 \\u2264 n \\u2264 100) indicating the number of tries that will be made to hit the Nlogony and the n following lines containing 2 floating point values indicating the values of the launching's angle \\u03b1(1 \\u2264 \\u03b1 \\u2264 180) and speed V(1 \\u2264 V \\u2264 150).\\n\\t\\n\\tThe end of the input file is determined by EOF.\\n\\n                \\n\\n                Output\\n\\n                \\n                    \\n\\tFor each shoot, your program must print a single line in the following format: \\u201cX -> DUCK\\u201d for when the duck hits Nlogony or \\u201cX -> NUCK\\u201d where the duck doesn't hit Nlogony, where X is the maximum distance that the projectile reached until reaching the ground (y = 0). X must be printed with an accuracy of 5 decimal places.\\n\\n                \\n\\n                \\n\\n                \\n                    \\n                        \\n                            Input Sample\\n                            Output Sample\\n                        \\n                    \\n                    \\n                        \\n                            \\n                                \\n\\t2.1\\n\\t368 380\\n\\t3\\n\\t42.3 60\\n\\t30 55\\n\\t44 60.876842\\n\\n                            \\n                            \\n                                \\n    367.76208 -> NUCK\\n\\t270.72675 -> NUCK\\n\\t379.83781 -> DUCK\\n                            \\n                        \\n                    \\n                \\n                \\n\\tAcknowledgments to \\u00c9ber Jess\\u00e9 da Silva Peretto by the translation.\\n\",\n    \"id\": 1163,\n    \"input\": \"\\tThere are various test cases, where each one starts with 1 floating point value h( 1 \\u2264 h \\u2264 150) indicating the slingshot's height, containing, in the next line, 2 integer values p1 and p2( 1 \\u2264 p1, p2 \\u2264 9999) indicating where Nlogony begins and ends, the next line containing 1 integer n(1 \\u2264 n \\u2264 100) indicating the number of tries that will be made to hit the Nlogony and the n following lines containing 2 floating point values indicating the values of the launching's angle \\u03b1(1 \\u2264 \\u03b1 \\u2264 180) and speed V(1 \\u2264 V \\u2264 150).\\n\\t\\n\\tThe end of the input file is determined by EOF.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Angry Ducks\",\n    \"output\": \"\\tFor each shoot, your program must print a single line in the following format: \\u201cX -> DUCK\\u201d for when the duck hits Nlogony or \\u201cX -> NUCK\\u201d where the duck doesn't hit Nlogony, where X is the maximum distance that the projectile reached until reaching the ground (y = 0). X must be printed with an accuracy of 5 decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"In mathematics, a perfect number is an integer for which the sum of all its own positive divisors (excluding itself) is equal to the number itself. For example the number 6 is perfect, because 1+2+3 is equal to 6. Your task is to write a program that read integer numbers and print a message informing if these numbers are perfect or are not perfect.\",\n    \"id\": 1164,\n    \"input\": \"The input contains several test cases. The first contains the number of test cases N  (1 \\u2264 N \\u2264 100). Each one of the following N lines contains an integer X (1 \\u2264 X \\u2264 108), that can be or not a perfect number.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Perfect Number\",\n    \"output\": \"For each test case print the message \\u201cX eh perfeito\\u201d (X is perfect) or \\u201cX nao eh perfeito\\u201d (X isn't perfect) according with to above specification.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tA Prime Number is a number that is divisible only by 1 (one) and by itself. For example the number 7 is Prime, because it can be divided only by 1 and by 7.\",\n    \"id\": 1165,\n    \"input\": \"\\tThe input contains several test cases. The first contains the number of test cases N  (1 \\u2264 N \\u2264 100). Each one of the following N lines contains an integer X (1 < X \\u2264 107), that can be or not a prime number.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Prime Number\",\n    \"output\": \"\\tFor each test case print the message \\u201cX eh primo\\u201d (X is prime) or \\u201cX nao eh primo\\u201d (X isn't prime) according with to above specification.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rujia Liu,  China\",\n    \"category\": \"Paradigms\",\n    \"description\": \"People stopped moving discs from peg to peg after they know the number of steps needed to complete the entire task. But on the other hand, they didn't not stopped thinking about similar puzzles with the Hanoi Tower. Mr.S invented a little game on it. The game consists of N pegs and a LOT of balls. The balls are numbered 1,2,3... The balls look ordinary, but they are actually magic. If the sum of the numbers on two balls is NOT a square number, they will push each other with a great force when they're too closed, so they can NEVER be put together touching each other.\\n                \\n                    \\n\\n                \\n                The player should place one ball on the top of a peg at a time. He should first try ball 1, then ball 2, then ball 3... If he fails to do so, the game ends. Help the player to place as many balls as possible. You may take a look at the picture above, since it shows us a best result for 4 pegs.\",\n    \"id\": 1166,\n    \"input\": \"The first line of the input contains a single integer T (1 \\u2264 T \\u2264 50), indicating the number of test cases.  Each test case contains a single integer N (1 \\u2264 N \\u2264 50), indicating the number of pegs available.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Hanoi Tower Troubles Again!\",\n    \"output\": \"For each test case in the input print a line containing an integer indicating the maximal number of balls that can be placed. Print -1 if an infinite number of balls can be placed.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tOn July vacations, several schools in the same region decided to organize a summer camp for their  students. Usually in these camps, students are divided into collective chalets\\u00a0 by gender and age, always with a supervisor or supervisor who, in addition to sleep ing in the cottage with the group, are also responsible for creating and executing several interesting and exciting activities for all ages. Among the many activities we can do mention of\\u00a0 games, excursions, Gymkhana Musical, Night competitions, etc.. On the first day of camp due to heavy rain, recreational activities were limited and the children were taken to the gymnasium. We conducted a contest and one of the activities consisted of the same group children in a circle (arranged in a counterclockwise direction) which would be removed one by one until only one child was left, which would be the winner. \\n\\t\\n\\t\\t At the moment the child enters the circle it receives a small token containing a number between 1 and 500. Once the circle is formed, it is counted up to the number corresponding to the token the first child holds, beginning from the child besides him or her. The child where the  counting ends, should be removed from the group. The count starts again according to the number in the token the child who has just been eliminated. In order to make the game more interesting, when the number in the token is even, the counting is done clockwise, otherwise the counting is done in a counterclockwise direction. \\n\\t\\n\\t The play was very successful and the administrator of the camp asked you to develop a program for the next event, to allow him to knows in advance which child will be the winner of each group, based on the information provided.\",\n    \"id\": 1167,\n    \"input\": \"\\tThe input contains many test cases. \\n\\tThe first line of each input contains a single integer N (1 \\u2264 N \\u2264 100), indicating the number of childrens that will\\n\\tparticipate of this game. follow N lines with two informations, the Name of the child and the Value of his token or card (1 \\u2264 Value \\u2264 500)\\n\\tseparated by a blank space, in order of appearance in the formation of the initial circle.\\n\\t\\n\\tNote: the child Name must be less than 30 characteres, \\n\\twith uppercase and lowercase letters and the \\u201c_\\u201d character (no spaces allowed). \\n\\tThe end of input is determined by the number zero (0).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Summer Camp\",\n    \"output\": \"\\tFor each test case, one line must be printed with the message \\\"Vencedor(a): xxxxxx\\\" (that means Winning: xxxxxx), with one blank space after the \\\":\\\" character, indicating the winner child.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Unknown Author\",\n    \"category\": \"Strings\",\n    \"description\": \"\\tJohn wants to set up a panel containing different numbers of LEDs. He does not have many leds, he is not sure if he will be able to mount the desired number. Considering the configuration of the LEDs of the numbers below, make an algorithm that helps John to discover the number of LEDs needed to set the value.\\n\\n\\t\\n\\t\",\n    \"id\": 1168,\n    \"input\": \"\\tThe input contains an integer  N, (1 \\u2264 N \\u2264 2000) corresponding to the number of test cases, followed by N lines, each line containing a number (1 \\u2264 V \\u2264 10100) corresponding to the value that John wants to set with the leds.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"LED\",\n    \"output\": \"\\tFor each test case, print one line containing the number of LEDs that John needs to set the desired value, followed by the word \\\"leds\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"A queen requested the services of a monk and told him she would pay any price. The monk, needing food, asked the queen if the payment could be made in wheat grains arranged in a chessboard, so that in the first square it would be put only one grain, and in the subsequent squares twice as much as its previous square. The queen considered it a bargain and asked to the service be done. However, one of the riders who was present was good in math and warned that it would be impossible to execute the payment, because the amount of grain needed would be very high. The Queen then asked this gentleman who was good in calculation to develop a program that receives as input the number of squares to be used in a checkerboard and informs the amount of corresponding kg of wheat, knowing that 12 grains of the cereal correspond to one gram. Finally, the calculated amount should fit into an unsigned 64-bit integer number.\\n\\n\",\n    \"id\": 1169,\n    \"input\": \"The first line of the input contains a single integer N  (1 \\u2264 N \\u2264 100), indicating the number of test cases.  Each test case contains a single integer X (1 \\u2264 X \\u2264 64), indicating the number of possible squares to be used.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Grains in a Chess Board\",\n    \"output\": \"For each test case, print the quantity expected to be received by the monk, according to the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"On the planet Alpha lives the creature Blobs, that eats just half of its supply of food available all day. Write an algorithm that reads the initial capacity of the food supply (in Kg), and calculate how many days will pass before Blobs eat all this supply until left a kg or less.\",\n    \"id\": 1170,\n    \"input\": \"The first line of the input contains a single integer N  (1 \\u2264 N \\u2264 1000), indicating the number of test cases.  Each test case contains a single floating-point number X (1 \\u2264 X \\u2264 1000), indicating \\n                    the amount of food available for Blobs.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Blobs\",\n    \"output\": \"For each test case, print one line containing the number of days that blobs will take to eat all their food supply, followed by the word \\\"dias\\\" that means days in portuguese.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In this problem your job is to read some positive and integer numbers and print how many times each number appears in the input, you must write each of the distinct values \\u200b\\u200bthat appear in the input, ordering by ascending value.\",\n    \"id\": 1171,\n    \"input\": \"The input contains only one test case. The first line of input contains one integer N, which indicates the quantity of numbers \\u200b\\u200bthat will be read to X (1 \\u2264 X \\u2264 2000) in the sequence. Each number don't appears more than 20 times in the problem input.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Number Frequence\",\n    \"output\": \"Print the output according to the example provided below, indicating how many times each number appears in the input file, by ascending order of value.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an array X[10]. After, replace every null or negative number of X \\u200bby 1. Print all numbers stored in the array X.\",\n    \"id\": 1172,\n    \"input\": \"\\tThe input contains 10 integer numbers. These numbers \\u200b\\u200bcan be positive or negative.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Array Replacement I\",\n    \"output\": \"\\tFor each position of the array, print \\\"X [i] = x\\\", where i is the position of the array and x is the number stored in that position.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead a number and make a program which puts this number in the first position of an array N[10]. In each subsequent position, put the double of the previous position. For example, if the input number is 1, the array numbers \\u200b\\u200bmust be 1,2,4,8, and so on.\",\n    \"id\": 1173,\n    \"input\": \"\\tThe input contains an integer number  V (V < 50).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Array fill I\",\n    \"output\": \"\\tPrint the stored number of each array position, in the form \\\"N[i] = X\\\", where i is the position of the array and x is the stored number at the position i. The first number for X is V.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"In this problem, your task is to read an array A[100]. At the end, print all array positions that store a number less or equal to 10 and the number stored in that position.\",\n    \"id\": 1174,\n    \"input\": \"The input contains 100 numbers. Each number can be integer, floating-point number, positive or negative.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Array Selection I\",\n    \"output\": \"For each number of the array that is equal to 10 or less, print \\\"A [i] = x\\\", where i is the position of the array and x is the number stored in the position, with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that reads an array N [20]. After, change the first element by the last, the second element by the last but one, etc.., Up to change the 10th to the 11th. print the modified array.\",\n    \"id\": 1175,\n    \"input\": \"\\tThe input contains 20 integer numbers, positive or negative.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Array change I\",\n    \"output\": \"\\tFor each position of the array N print \\\"N[i] = Y\\\", where i is the array position\\n\\tand Y is the number stored in that position.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that reads a number and print the Fibonacci number corresponding to this read number. \\n\\tRemember that the first elements of the Fibonacci series are 0 and 1 and each next term is the sum of the two preceding it.\\n\\tAll the Fibonacci numbers calculated in this program must fit in a unsigned 64 bits number.\",\n    \"id\": 1176,\n    \"input\": \"\\tThe first line of the input contains a single integer T, indicating the number of test cases. \\n\\tEach test case contains a single integer N (0 \\u2264 N \\u2264 60), corresponding to the N-th term of the Fibonacci series.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Fibonacci Array\",\n    \"output\": \"\\tFor each test case in the input, print the message \\\"Fib(N) = X\\\", where X is the N-th term of the Fibonacci series.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write a program that reads a number T and fill a vector N[1000] with the numbers from 0 to T-1 repeated times, like as the example below.\",\n    \"id\": 1177,\n    \"input\": \"The input contains an integer number T (2 \\u2264 T \\u2264 50).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Array Fill II\",\n    \"output\": \"For each position of the array N, print \\\"N[i] = x\\\", where i is the array position and x is the number stored in that position.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\r\\n                    \\r\\n\\tRead a number X. Put this X at the first position of an array N [100].\\r\\n \\tIn each subsequent position (1 up to 99) put half of the number \\r\\n\\tinserted at the previous position, according to the example below. Print \\r\\n\\tall the vector N.\\r\\n\\r\",\n    \"id\": 1178,\n    \"input\": \"\\r\\n                    \\r\\n\\tThe input contains a double precision number with four decimal places.\\r\\n\\r\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Array Fill III\",\n    \"output\": \"\\r\\n                    \\r\\n\\tFor each position of the array N print \\\"N[i] = Y\\\", where i is the array position\\r\\n\\tand Y is the number stored in that position. Each number of N[...] \\r\\n\\tmust be printed with 4 digits after the decimal point.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tIn this problem you need to read 15 numbers and must put them into two different arrays: par if the number is even or impar if this number is odd. But\\u00a0 the size of each of the two arrrays is only 5 positions. So every time you fill one of two arrays, you must print the entire array to be able to use it again for the next numbers that are read. At the end, all remaining numbers of each one of these two arrays must be printed beggining with the odd array. Each array can be filled how many times are necessary.\",\n    \"id\": 1179,\n    \"input\": \"\\tThe input contains 15 integer numbers.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Array Fill IV\",\n    \"output\": \"\\tPrint the output like the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tWrite a program that reads a number N. This N is the size of a array X[N]. Next, read each of the numbers of X, find the smallest element of this array and its position within the array, printing this information.\",\n    \"id\": 1180,\n    \"input\": \"\\tThe first line of input contains one integer N (1 < N <1000), indicating the number of elements that should be read to an array X[N] of integer numbers. The second row contains each of the N values, separated by a space.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Lowest Number and Position\",\n    \"output\": \"\\tThe first line displays the message \\u201cMenor valor:\\u201d followed by a space and the lowest number read in the input. The second line displays the message \\u201cPosicao:\\u201d followed by a space and the array position in which the lowest number is, remembering that the array starts at the zero position.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tYour job in this problem is to read a number that is a line of an array, an uppercase character, \\n\\tindicating the operation to be performed and all elements of a bidimentional array M[12][12]. \\n\\tThen, you have to calculate and print the sum or average of all elements within the green area according to the case. \\n\\tThe following figure illustrates the case when is entered the number 2 to the array line, showing all elements \\n\\tthat must be considered in the operation.\\n    \\n\\t\",\n    \"id\": 1181,\n    \"input\": \"\\tThe first line of the input contains a simple integer L (0 \\u2264 L \\u2264 11) indicating the line to be considered in the operation.\\n\\tThe second line of the input contains a single uppercase character T ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. Follow the 144 floating-point numbers of the array, considering that the elements are inserted line by line, from line 0 to line 11, always from left to right.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Line in Array\",\n    \"output\": \"\\tPrint the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tYour job in this problem is to read a number that is a column of an array where an operation will be performed, an uppercase character, \\n\\tindicating the operation to be performed and all elements of a bidimentional array M[12][12]. \\n\\tThen, you have to calculate and print the sum or average of all elements within the green area according to the case. \\n\\tThe following figure illustrates the case when is entered the number 5 to the array column, showing all elements \\n\\tthat must be considered in the operation.\\n    \\n\\t\",\n    \"id\": 1182,\n    \"input\": \"\\tThe first line of the input contains a simple integer C (0 \\u2264 C \\u2264 11) indicating the column to be considered in the operation.\\n\\tThe second line of the input contains a single uppercase character T ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. \\n\\tFollow 144 floating-point numbers of the array.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Column in Array\",\n    \"output\": \"\\tPrint the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an uppercase character that indicates an operation that will be performed in an array M[12][12]. Then, calculate and \\n\\tprint the sum or average considering only that numbers that are above the main diagonal of the array, like shown in the following figure (green area).\\n\\n\\t\",\n    \"id\": 1183,\n    \"input\": \"\\tThe first line of the input contains a single uppercase character O ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. Follow 144 floating-point numbers of the array.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Above the Main Diagonal\",\n    \"output\": \"\\tPrint the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an uppercase character that indicates an operation that will be performed in an array M[12][12]. Then, calculate and \\n\\tprint the sum or average considering only that numbers that are below of the main diagonal of the array, like shown in the following figure (green area).\\n\\n\\t\",\n    \"id\": 1184,\n    \"input\": \"\\tThe first line of the input contains a single uppercase character O ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. Follow 144 floating-point numbers of the array.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Below the Main Diagonal\",\n    \"output\": \"\\tPrint the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an uppercase character that indicates an operation that will be performed in an array M[12][12]. Then, calculate and \\n                    print the sum or average considering only that numbers that are above the secundary diagonal of the array, like shown in the following figure (green area).\\n                \\n\",\n    \"id\": 1185,\n    \"input\": \"The first line of the input contains a single uppercase character O ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. Follow 144 floating-point numbers of the array.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Above the Secundary Diagonal\",\n    \"output\": \"Print the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an uppercase character that indicates an operation that will be performed in an array M[12][12]. Then, calculate and \\n\\tprint the sum or average considering only that numbers that are below of the Secundary diagonal of the array, like shown in the following figure (green area).\\n\\n\\t\",\n    \"id\": 1186,\n    \"input\": \"\\tThe first line of the input contains a single uppercase character O ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. Follow 144 floating-point numbers of the array.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Below the Secundary Diagonal\",\n    \"output\": \"\\tPrint the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an uppercase character that indicates an operation that will be performed in an array M[12][12]. Then, calculate and \\n\\tprint the sum or average considering only that numbers that are included in the green area of this array, like shown in the following figure.\\n\\n\\t\",\n    \"id\": 1187,\n    \"input\": \"\\tThe first line of the input contains a single uppercase character O ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. Follow 144 double numbers of the array.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Top Area\",\n    \"output\": \"\\tPrint the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an uppercase character that indicates an operation that will be performed in an array M[12][12]. Then, calculate and \\n\\tprint the sum or average considering only that numbers that are included in the green area of this array, like shown in the following figure.\\n\\n\\t\",\n    \"id\": 1188,\n    \"input\": \"\\tThe first line of the input contains a single uppercase character O ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. Follow 144 floating-point numbers (double) of the array.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Inferior Area\",\n    \"output\": \"\\tPrint the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Read an uppercase character that indicates an operation that will be performed in an array M[12][12]. Then, calculate and \\n                    print the sum or average considering only that numbers that are included in the green area of this array, like shown in the following figure.\\n                \\n\",\n    \"id\": 1189,\n    \"input\": \"The first line of the input contains a single uppercase character O ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. Follow 144 floating-point numbers of the array.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Left Area\",\n    \"output\": \"Print the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an uppercase character that indicates an operation that will be performed in an array M[12][12]. Then, calculate and \\n\\tprint the sum or average considering only that numbers that are included in the right area (green area) of this array, like shown in the following figure.\\n\\n\\t\",\n    \"id\": 1190,\n    \"input\": \"\\tThe first line of the input contains a single uppercase character O ('S' or 'M'), indicating the operation Sum or Average (M\\u00e9dia in portuguese) to be performed with the elements of the array. Follow 144 floating-point numbers of the array.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Right Area\",\n    \"output\": \"\\tPrint the calculated result (sum or average), with one digit after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t    By Sebasti\\u00e3o Alves \\u00a0Brazil\\n\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tLittle Valentine liked playing with binary trees very much. Her favorite game was constructing randomly looking binary trees with capital letters in the nodes.\\n\\t\\n\\tThis is an example of one of her creations:\\n\\t\\u00a0\\n\\n\\tD\\n\\t/ \\\\\\n\\t/ \\u00a0 \\\\\\n\\tB\\u00a0 \\u00a0\\u00a0 E\\n\\t/ \\\\ \\u00a0 \\u00a0 \\\\\\n\\t/\\u00a0\\u00a0 \\\\ \\u00a0 \\u00a0 \\\\\\n\\tA\\u00a0 \\u00a0\\u00a0 C\\u00a0\\u00a0\\u00a0\\u00a0 G\\n\\t\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 /\\n\\t\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 /\\n\\t\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 F\\n\\t\\u00a0\\n\\n\\tTo record her trees for future generations, she wrote down two strings for each tree: a preorder traversal (root, left subtree, right subtree) and an inorder traversal (left subtree, root, right subtree).\\n\\t\\n\\tFor the tree drawn above the preorder traversal is DBACEGF and the inorder traversal is ABCDEFG.\\n\\t\\n\\tShe thought that such a pair of strings would give enough information to reconstruct the tree later (but she never tried it).\\n\\t\\n\\tNow, years later, looking again at the strings, she realized that reconstructing the trees was indeed possible, but only because she never had used the same letter twice in the same tree.\\n\\t\\n\\tHowever, doing the reconstruction by hand, soon turned out to be tedious.\\n\\t\\n\\tSo now she asks you to write a program that does the job for her!\",\n    \"id\": 1191,\n    \"input\": \"\\tThe input file will contain one or more test cases. Each test case consists of one line containing two strings preord and inord, representing the preorder traversal and inorder traversal of a binary tree. Both strings consist of unique capital letters. (Thus they are not longer than 26 characters.)\\n\\t\\n\\tInput is terminated by end of file.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Tree Recovery\",\n    \"output\": \"\\tFor each test case, recover Valentine's binary tree and print one line containing the tree's postorder traversal (left subtree, right subtree, root).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tPaula loves math. Her main hobby is to invent games or activities to play with her friends. Obviously, not all of them are so passionated about mathematics and have a lot of difficulty to solve the games offered by her. Now Paula has invented a small hobby that involves three characters: a numerical digit, one letter and one numeric digit.\\u00a0\\n\\n\\tIf the letter is uppercase, you need to subtract the first digit of the second one. If the letter is lowercase, both digts must be added. If the DIGITS are the same, the product between these two digits must be presented. She asked his friend Marcelo, who is good at programming, to create a program that prints the solution for each sequence created by Paula.\",\n    \"id\": 1192,\n    \"input\": \"\\tThe input contains many test cases. The first line of each input contains a single integer N, indicating the number of following test cases. Each test case is a sequence of three chars created by Paula. This sequence contains in the first position a character between '0' and '9', a uppercase or lowercase character and another character between '0' and '9'.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Paula's Mathematic Game\",\n    \"output\": \"\\tFor each test case, one line must be printed with an integer, representing the solution for each sequence created by Paula\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The Julian math teacher has marked a test whose content will be on converting between decimal, hexadecimal and binary numbers. For Julian, this kind of convertion is one of the most complex things to be done. Regardless of the time spent for studying these contents, he simple doesn't understand. So, as you understand about computing and being a friend of Julian, he asked for your help to make a program that checks if the conversions made \\u200b\\u200bby him are correct.\",\n    \"id\": 1193,\n    \"input\": \"The input contains many test cases. The first line of input contains an integer N indicating the number of test cases that follow, one by line. Each test case contains a number X (X > 0) followed by a Y text with three characters, indicating if the X number is in binary, decimal or hexadecimal. Regardless of the format, any of the numbers must fit into a 32-bit integer.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Base Conversion\",\n    \"output\": \"For each test case, Julian wants that you print the number of the test case folloed by two lines, that contains the \\n                    oiginal number converted for each one of the other two bases. \\n                    The sequence of the bases of output is always: decimal, hexadecimal (lowercase) and binary, ie must respect this order obviously excluding the input format.\\n                \\n                    Note: should print a blank line after each test case, even after the last test case.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Sebasti\\u00e3o Alves \\u00a0Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"A common problem in data structures is to determine the traversal of a binary tree.\\n                    \\n                    There are three classic ways to do it:\\n                    Pre-order: You must visit in sequence the root, left subtree and the right subtree.\\n                    In-order: You must visit in sequence the left subtree, the root and the right subtree.\\n                    Post-order: You must visit in sequence the left subtree, the right subtree and the root.\\n                    \\n                    See the picture below:\\n                \\n                    \\n                    \\n                \\n                    The pre, in and post-order traversal are, respectively,\\u00a0 ABCDEF, CBAEDF and CBEFDA. In this problem, you must compute the post-order traversal of a binary tree given its in-order and pre-order traversals.\",\n    \"id\": 1194,\n    \"input\": \"The input set consists of a positive number C \\u2264 2000, that gives the number of test cases and C lines, one for each test case. Each test case starts with a number 1 \\u2264 N \\u2264 52, the number of nodes in this binary tree. After, there will be two strings S1 and S2 that describe the pre-order and in-order traversal of the tree. The nodes of the tree are labeled with different characters in the range a..z and A..Z. The values of N, S1 and S2 are separeted by a blank space.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Pre, In and Post\",\n    \"output\": \"For each input set, you should output a line containing the post-order transversal for the current tree.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tIn computer science, a binary search tree (BST), which may sometimes also be called an ordered or sorted binary tree, is a node-based binary tree data structure which has the following properties:\\n\\n\\t\\n\\t\\tThe left subtree of a node contains only nodes with keys less than the node's key.\\n\\t\\n\\t\\tThe right subtree of a node contains only nodes with keys greater than or equal to the node's key.\\n\\t\\n\\t\\tBoth the left and right subtrees must also be binary search trees.\\n\\n\\n\\tThe major advantage of binary search trees over other data structures is that the related sorting algorithms and search algorithms such as in-order traversal can be very efficient.\\n\\t\\n\\tFor this problem, you will receive many set of numbers and from each set you must to build the BST equivalent. For example, an imput with the sequence of numbers:\\n\\t8 3 10 14 6 4 13 7 1 will result in the following binary search tree:\\n\\t\\n\\t\",\n    \"id\": 1195,\n    \"input\": \"\\tThe input file contains many test cases. The first line of input contains an integer C (C \\u2264 1000), indicating \\n\\tthe number of test cases that follow. Each test case contains two lines. The first line contains a number N (1 \\u2264 N \\u2264 500) \\n\\tindicating the amount of numbers that will form each one of the trees. The second line contains the N distinct non-negative numbers,\\n\\teach one separated by a space.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Binary Search Tree\",\n    \"output\": \"\\tFor each input set, you should print the message \\\"Case n:\\\", where n is the sequential test case number, followed by 3 lines with the  pre-order, in-order, post-order transversal for the current tree formatted according to the given example.\\n\\t\\n\\tNote: None space must be printed after the last number of each line and the program should print a blank line after each test case, even after the last test case.\\n\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Gordon V. Cormack  Canada\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\n\\n\\tA common typing error is to place the hands on the keyboard one row to the right of the correct position. So \\\"Q\\\" is typed as \\\"W\\\" and \\\"J\\\" is typed as \\\"K\\\" and so on. You must decode a message typed in this manner.\",\n    \"id\": 1196,\n    \"input\": \"\\tInput consists of several lines of text. Each line may contain digits, spaces, upper case letters (except Q, A, Z), or punctuation shown above [except back-quote (`)]. Keys labelled with words [Tab, BackSp, Control, etc.] are not represented in the input. You are to replace each letter or punction symbol by the one immediately to its left on the QWERTY keyboard shown above. Spaces in the input should be echoed in the output.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"WERTYU\",\n    \"output\": \"\\tFor each input line, print a corresponding output line with the decoded message.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"A particle has initial velocity and constant acceleration. If its velocity after certain time is v then what will its displacement be in twice of that time?\",\n    \"id\": 1197,\n    \"input\": \"The input will contain two integers in each line. Each line makes one set of input. These two integers denote the value of v (-100 \\u2264 v \\u2264 100) and t(0 \\u2264 t \\u2264 200) ( t means at the time the particle gains that velocity).\\n                    The end of the input is determined by EOF.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Back to High School Physics\",\n    \"output\": \"For each line of input print a single integer in one line denoting the displacement in double of that time.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Hashmat is a brave warrior who with his group of young soldiers moves from one place to another to fight against his opponents. \\n                    Before fighting he just calculates one thing, the difference between his soldier number and the opponent's soldier number. \\n                    From this difference he decides whether to fight or not. Sometimes Hashmat's soldier number is greater than his opponent.\",\n    \"id\": 1198,\n    \"input\": \"The input contains two integer numbers in every line. These two numbers in each line denotes the number of soldiers in Hashmat's army and his opponent's army or vice versa. The input numbers are not greater than 232. Input is terminated by End of File.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Hashmat the Brave Warrior\",\n    \"output\": \"For each line of input, print the difference of number of soldiers between Hashmat's army and his opponent's army. Each output should be in seperate line.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\n                \\n                    In this problem you are asked to write a simple base conversion program. It will be given a hexadecimal or decimal integer number as input. You have to output the corresponding decimal or hexadecimal number. Hexadecimal numbers always starts with a `0x' and all other numbers are to be considered as decimal numbers. There will be no invalid numbers in the input.\",\n    \"id\": 1199,\n    \"input\": \"The input file contains several lines of input. Each line contains a single non-negative number, which may be a decimal or hexadecimal number as explained in the problem statement. The decimal value of this number will be equal or less than 231. A line containing a negative decimal number terminates the input. This number should not be processed. Input numbers will contain no space within them.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Simple Base Conversion\",\n    \"output\": \"For each line of input (Except the last one) produce one line of output. This line should contain the decimal or hexadecimal representation of the corresponding hexadecimal or decimal number. Like the input, the hexadecimal numbers in the output should be preceded by a \\\"0x\\\".\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tBy Neilor Tonin, URI\\u00a0\\u00a0Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tMarcela needs your help to write a computer program about binary search tree. \\n\\tThe program must have the following commands:\\n\\n\\t\\n\\t\\tI n: Insert the n element in the current Binary Search Tree.\\n\\t\\n\\t\\tPREFIXA: print the pre-order traversal for the current tree\\n\\t\\n\\t\\tINFIXA: print the in-order traversal for the current tree\\n\\t\\n\\t\\tPOSFIXA: print the post-order traversal for the current tree\\n\\t\\n\\t\\tP n: Search the n element, printing a message indicanding if n exist.\\n\\t\\n\\tBy using this program, at any time must be possible to insert a new element, print the Pre-order, \\n\\tIn-order or Post-order traversal or search any element inside the tree.\",\n    \"id\": 1200,\n    \"input\": \"The input contains N lines and each line contains an operation using letters (A-Z, a-z) over a binary search tree, \\n\\t\\tthat initially will be empty. The first line of input contains an insertion (I). The next lines can have any command described above, like \\n\\t\\tthe given example. The end of input is determined by EOF. \\n\\t\\tObs: Consider that will not be repeated elements in the tree.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"BST Operations I\",\n    \"output\": \"\\t\\t\\t\\t\\tEach line of the input excepting the lines with the \\\"I\\\" command must produce one output line. \\n\\t\\t\\t\\t\\tThe output must be acording to the given example, remembering that \\\"existe\\\" means exist and \\\"nao existe\\\" means don't exist \\n\\t\\t\\t\\t\\tin portuguese. There is no blank space after the last line char, \\n\\t\\t\\t\\t\\totherwise you`ll get Presentation Error.\\t\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Neilor Tonin, URI  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tMarcela are still working in the last program and the teacher asked her to write a new computer program about binary search tree. \\n\\tThis new program is similar with the previous one, but it works with integer numbers and must have a new command \\\"R\\\". See the commands:\\n\\n\\t\\n\\t\\tI n: Insert the n element in the current Binary Search Tree.\\n\\t\\n\\t\\tPREFIXA: print the pre-order traversal for the current tree\\n\\t\\n\\t\\tINFIXA: print the in-order traversal for the current tree\\n\\t\\n\\t\\tPOSFIXA: print the post-order traversal for the current tree\\n\\t\\n\\t\\tP n: Search the n element, printing a message indicanding if n exist.\\n\\t\\n\\t\\tR n: Remove n element, if n exist.\\n\\t\\n\\tBy using this program, at any time must be possible to insert a new element, print the Pre-order, \\n\\tIn-order or Post-order traversal, search any element inside the tree or even remove any element. \\n\\t\\n\\tNote: If an element with two subtrees (left and right) is removed, the antecessor (the bigger element from left subtree, must occupy its place and in case of attempt of remove an element inexistent none message must be printed.\",\n    \"id\": 1201,\n    \"input\": \"The input contains N lines and each line contains an operation using integer numbers (1-106) over a binary search tree, \\n\\t\\tthat initially will be empty. The first line of input contains an insertion (I). The next lines can have any command described above, like \\n\\t\\tthe given example. The end of input is determined by EOF.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"BST Operations II\",\n    \"output\": \"\\t\\t\\t\\t\\tEach line of the input excepting the lines with the \\\"I\\\" or the \\\"R\\\" commands must produce one output line. \\n\\t\\t\\t\\t\\tThe output must be acording to the given example, remembering that \\\"existe\\\" means exist and \\\"nao existe\\\" means don't exist \\n\\t\\t\\t\\t\\tin portuguese. There is no blank space after the last line char, otherwise you`ll get \\n\\t\\t\\t\\t\\tPresentation Error.\\t\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Marcel K. de C. Silva\\u00a0 Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tEvery year, at the time of the so-called \\\"white nights\\\" when the sun does not set over the city of St. Petersburg is the \\\"festival of arts of White Nights\\\", which consists of a series of musical performances, concerts, ballets, and attracting more artists around the world.\\n \\n\\tIt is considered one of the greatest demonstrations of all Russia, since the height of the white nights, the festival usually has up to one million participants roaming the city streets. The Mariinsky Theatre hosts some of the best shows and, since no tickets enough for everyone who wants to watch 'performances, often using a system curious and fun raffle for those who may enter the theater.\\n\\n\\tEach person entering the theater, interested in attending a presentation chooses a row in which I would sit and receives a card with a number from 000 to 999 written on it. This number is the code of the draw that person. Arriving `entry clerk verifies the situation queue in which the person sit. The line is described by a sequence of '1 's and '0' s, where 1 indicates free chair seat and 0 indicates busy. This sequence is then interpreted as a binary representation of the number n. The person enters with his entourage if the nth number of the Fibonacci sequence ends exactly with the number written on your card. Thus, for example, if the description of row 100 is not enter if the person owning the card with the number 003.\",\n    \"id\": 1202,\n    \"input\": \"\\tThe input is composed of several instances. The first line of input contains an integer T indicating the number of instances. Each instance consists of a line containing a description of row with up to 10000 digits. The description of a row is a sequence of\\u00a0 '1' s and '0' s, never starting with '0' (the first chair of all ranks are reserved).\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"White Nights Festival\",\n    \"output\": \"\\tFor each instance print the 3 digits that must be written in the permission card that the person uses to entering the theater.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Renato Parente  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tEveryone knows the famous problem of the bridges of K\\u00f6nigsberg, the Prussian city that was the famous problem solved by Euler still in the eighteenth century. \\n\\tFew know, however, problem of the bridges of St. Petersburg. The city of St. Petersburg is located on the banks of Neva River, and is crossed by dozens of \\n\\tbridges connecting the riverbanks to hundreds of small islands that the river has. The residents of the city, knowing famous problem of bridges K\\u00f6nigsberg, \\n\\tcreated their own problem. Locals know that there are K bridges in the city, R that are distinct regions in the city and that each bridge \\n\\tconnects exactly two distinct regions of the city. Residents want to know if, to their city, you can choose some of these regions such the number of bridges which \\n\\tfocuses on them all is equal to K. Note that, if two of these regions\\n\\tchosen have a bridge between them, this bridge will be counted twice.\",\n    \"id\": 1203,\n    \"input\": \"\\tThe input consists of various instances and ends with the end of file (EOF). The first line of each test case contains two numbers, R (2  \\u2264 R  \\u2264 100) and K (1  \\u2264 K  \\u2264 R * (R-1) / 2), the number of regions, and bridges of the city, respectively. For purposes of simplification, the regions are numbered 1 to R, inclusive. The following are K \\n\\tlines, each containing two numbers A and B, indicating that there is a bridge linking \\n\\tthe A and B regions of the city.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"St. Petersburg Bridges\",\n    \"output\": \"\\tFor each test case print a line only with \\\"S\\\" (quotes just for show) if it is possible choose the regions in the manner described above, or \\\"N\\\" (idem), if not possible.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Cristiane M. Sato  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\tMany different sources are assigned to football. The oldest activity resembling football was practiced in China between the century. II and III BC and was called ts'uh Kuh (cuju), and was to play a little ball with feet to a network. In Japan there is kemari practiced today in cultural events. In Rome threw up harpastum, and in Greece the epislcyros. With the discovery of the new world was discovered Mayan also a game very similar to football, pok pok ta that have more than 3000 years of history. In the Middle Ages played in Florence the Florentine calcio, They consider many to be the birthplace of modern football. Until today the Amazon Indians play a very similar game in which a ball is pushed using just head toward enemy targets. Anyway, it's almost impossible to say which game gave the football played today, whose rules were formally established by the British in the late nineteenth century.\\n\\tLittle has news of a Russian game, also ancestor of football and with very clear rules (as Arnold would say). It is Myachowski, also known as Otskok. The name probably comes from My\\u00f7 (reads myach) which means \\\"ball\\\" in Russian. In the game a player enters a field that is a closed ellipse and must hit a hole located in the wall of the field. But the point is only computed if the ball goes into the hole after being kicked against the walls of the field, being diverted into the hole.\\n\\tGiven the initial position of the ball, the direction in which it is moving and the description of the field, your task is to determine next two points of contact of the ball with the side of the field. Consider that the center of the field is the position (0, 0).\\n\\tBall Reflection: Assume for this problem that is reflected perfectly the ball when it hits the wall of the field. That is, the angle of the input vector causes the tangent line to the wall of the field at the point of contact is the same as the departure angle. The Figure 1 illustrates this behavior.\\n\\t\\n\\t\\n\\t\\n\\t\\n\\tInput angle is the same that output angle\",\n    \"id\": 1204,\n    \"input\": \"\\tThe input consists of several instances and ends with the end of file (EOF). Each instance consists of a row containing six integers, X, Y, Dx, Dy, (-1000 <= Dx,Dy <= 1000), A e B, (1 <= A,B <= 500). The initial position of the ball is given by the point (X, Y) inside the ellipse and the direction vector (Dx, Dy).\\n\\t The field is shaped like an ellipse described by the equation\\n\\t\\n\\tx\\u00b2\\u00a0\\u00a0\\u00a0\\u00a0y\\u00b2\\u00a0\\n\\t\\u00a0\\u00a0\\u00a0 -\\u00a0\\u00a0+\\u00a0\\u00a0- \\u00a0= 1.\\n\\tA\\u00b2\\u00a0\\u00a0\\u00a0\\u00a0B\\u00b2\\u00a0\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Myachowski, Russian Football\",\n    \"output\": \"\\tFor each instance print two lines. The first line should contain the first point of contact of the ball with the side of the field and the second line should contain the second point of contact. One point of contact should be printed as two rational numbers separated by a space. Print numbers with exactly 3 decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Marcio T. I. Oshiro, USP  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tThe city of St. Petersburg was renamed after the Russian revolution in 1914 to Petrograd. After the death of Lenin, in tribute of the great leader the name of the city change again to Leningrad in 1924, and remained so until the end of the Soviet Union. In 1991, the city again had its old name. During second World War the city of Leningrad suffered a siege of the German troops that lasted about 900 days. It was a terrible time, a lot of hunger and loss of life, which ended on January 27, 1944 with the victory of the Soviets. It is considered one of the most costly victories in history in terms of lives lost.\\n\\t\\n\\tAt the height of the German offensive, in 1942, several snipers were scattered throughout city\\u200b\\u200b, including in some strategic points of the city more of a shooter waiting soldiers enemies. The Russian spy had detailed information of these skills shooters, but their hideouts were excellent, making the task of a Soviet soldier who wished to cross the city extremely difficult. The Soviet soldiers were well trained, but over time and the continued siege of the city, the best soldiers were being decimated, since if they missed the target at the first attempt were certainly killed by German soldiers in ambush.\\n\\t\\n\\tKnowing the likelihood of a soldier killing a German sniper and also knowing the number of bullets he had at his disposal, we want to know the likelihood of that soldier to reach a strategic point of destination, from a strategic point of origin. The soldier, being very experienced, always wore a way that maximized the likelihood of success. Note that the soldier must kill all the gifts in the way shooters used, including those who are in strategic points of origin and destination.\",\n    \"id\": 1205,\n    \"input\": \"\\tThe entry consists of various instances and ends with the end of file (EOF). The first line in each instance contains three integers N (2 \\u2264 N \\u2264 1000), \\n\\tM, and K (0 \\u2264 K \\u2264 1000) and the probability P (0 \\u2264 P \\u2264 1) that \\n\\tthe soldier killing a sniper. The integers N, M, \\n\\tand K represent respectively the numbers of strategic points, strategic roads connecting points and bullets loaded by Soviet soldier. \\n\\tThe strategic points are numbered from 1 to N.\\n\\tEach one of the next M lines contains a pair of integers i and j indicating that there is a road linking point i to \\n\\tj. Then there's a line containing an integer A, corresponding the number of shooters in town, followed by A \\n\\tintegers indicating the position of each shot. \\n\\tThe last line of each instance contains two integers indicating the starting point and the destination Soldier.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Siege of Leningrad\",\n    \"output\": \"\\tFor each instance print a line containing the probability of success of the Soviet soldier. The probability must be printed with 3 decimal places.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\tBy Marcio T. I. Oshiro\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe Russia has always been the cradle of great chess masters. Few people know that the FIDE (World Chess Federation), which is the highest body regulating the game of chess was founded in 1924 from a movement begun 10 years before in the world championship of the sport that took place in St. Petersburg in 1914. Today, the top 10 players in the world, according to FIDE, three are Russians.\\n\\t\\n\\tThe tournament of St. Petersburg was also known by the attempts of the great masters of popularizing the game. At the time the greatest masters (like Capablanca) took to the streets to propose challenges for people in order to interest them to practice the game. One of these challenges was known as the Challenge of St. Petersburg. The great master rode a situation where the white pieces had only the king, and the goal was the person who said if the white king was or not in checkmate.\\n\\t\\n\\tIn the situation described above, the white king is checkmated if he is being attacked, and every move he makes leads him to a square that is also being attacked.\\n\\t\\n\\tWhat you need to know about chess\\n\\t\\n\\tConsider that initially the black chess pieces are at lines 7 and 8 while the white chess pieces starts at lines 1 and 2. There aren\\u2019t two chess pieces in the same square. The chess pieces considered in the problem (pawn, rook, bishop, queen and king) can\\u2019t go over to other parts, in other words, if during chess pieces\\u2019 movement there is any other chess piece on its way you must stop before or attacking the chess piece (if it is the opponent), taking its place. The movement and the attack of each type of chess peace are as follows:\\n\\t\\n\\t# Pawn: walking just one square forward (toward the line 1) can attack in any of the two diagonals immediately in front;\\n\\t# Rook: walk / attacks how many squares you want horizontally or vertically;\\n\\t# Bishop: walking / attacking how many squares you want diagonally;\\n\\t# Queen: walk / attacks how many squares you want horizontally or vertically, or diagonally;\\n\\t# King: walk / attacks just a square or horizontally, or vertically, or diagonally.\",\n    \"id\": 1206,\n    \"input\": \"\\tThe input consists of several test cases and ends with the end of file (EOF). The first line of each test \\n\\tcase contains one integer N (2 \\u2264 N \\u2264 10)\\u00a0indicating \\n\\tthe number of black chess pieces. The next line contains the description of the positions of N black chess \\n\\tpeaces separated by a space. The third line contains the description of the white king.\\n\\tA description of one chess piece consists of 3 characters. The first indicates whether the chess piece is a pawn (P)(Pe\\u00e3o), rook(T)(Torre), Bishop (B)(Bispo), Queen(R)(Rainha) or King (W)(Rei). Note that the great master did not use horses to facilitate who was still just learning the game. The second character between 'a' and 'h', indicates the column in which the chess peace is and the third, from '1 'to '8' \\n\\tindicates the line.\\n\\tNeither of the test cases is the situation in which the white king and the black king are adjacent.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Challenge of St. Petersburg\",\n    \"output\": \"\\tFor each test case, print a line with the word SIM (YES) if the white king is in checkmate, or the word NAO (NO), otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Marcio T. I. Oshiro  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tSt. Petersburg is known as the capital of the Russian beer and home to several major breweries. They say the water quality of the city is responsible for a beer of excellent quality. Besides traditional plants such as Heineken, some local brands are highlighted, as Tinkoff and Baltika. Also produced in the city are some of the best vodkas in the world. The oldest, called Liviz, date from 1897. This distillery produces excellent quality vodkas, measured by international standards. Interestingly, some types of vodkas, when eaten together, end up having, according to experts, much better flavor. Thus, some types of vodka are collected in categories that, when fully purchased by the consumer, bring an added benefit measured according to international quality standards. Each has an associated price vodkas, and your task is to find a purchase that maximizes the total benefit minus the cost of purchased vodkas.\\n    \\n\\tRewriting each vodka has a cost Cj and M are different categories, each with a benefit Bi. One benefit is only computed if all kinds of vodka comprising the category are acquired. A single bottle of vodka can participate in more than one category to compute the benefit. Your task is to determine which types of vodka purchase in order to maximize the sum of the benefits minus the cost of purchased items purchased. You can assume that Russia was to have enough money to buy all kinds of vodka produced by Liviz (yeah!! :D).\",\n    \"id\": 1207,\n    \"input\": \"\\tThe input consists of various instances and ends with the end of file (EOF). \\n\\tThe first line in each instance contains two integers N (1 \\u2264 N \\u2264 600) and M (1 \\u2264 M \\u2264 400) \\n\\trepresenting respectively the number of different types of vodka sales and the number of existing categories. \\n\\tThe types of vodka are identified by numbers 1 to N of categories of numbers from 1 to M.\\n    \\n\\tThe next line contains N integers, Cj (1 \\u2264 Cj \\u2264 1000) for (1 \\u2264 j \\u2264 N), \\n\\tseparated by space, corresponding to the cost of vodka j. On the next line there are M integers, \\n\\tPi (1 \\u2264 Pi \\u2264 N), separated by space, indicating how many different \\n\\ttypes of vodkas composes category i. Each of the following M lines describes a \\n\\tcategory starting with a integer Bi (1 \\u2264 Bi \\u2264 1000) for (1 \\u2264 i \\u2264 M), \\n\\tindicating their benefit, followed by the types of vodka that compose it, separated by spaces.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Benefits of Vodka\",\n    \"output\": \"\\tFor each instance print, on a single line, the highest value that can be obtained from the sum of the benefits of the categories acquired minus the cost of purchased types of vodkas.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Gabriel R. de C. Peixoto  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"St. Petersburg was founded on May 27, 1703 by Tsar Peter the Great, and was the imperial capital of Russia for a \\n                    short period immediately after (1713 to 1728) and then for nearly two centuries, from 1732 to 1918. In the latter period \\n                    the Russian imperial throne was eventually occupied by various emperors, often from different lines dynasty. In Russian \\n                    imperial tradition called for \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439 (reads \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439 1*) within a sequence of descendants of a dynasty, ie an element, \\n                    his son, his grandson, and so on. The determination of these \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439 is key when you want to determine the successor of the current emperor, as the next emperor is the living element of a \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439 that is closest to the current emperor.\\n                    \\n                    Of course, a tree can be divided into \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439 in several different ways. The interesting thing is to find a partition that minimizes the number of \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439 necessary to cover all elements of the dynasty.\\n                    \\n                    Your task in this problem is to determine, given the family tree imperial Russia, the fewest \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439 that partition the entire imperial family, that is, all the emperors must belong to exactly one \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439 and these have to be the smallest possible number .\",\n    \"id\": 1208,\n    \"input\": \"The input have many test cases and ends with the end of file (EOF). \\n                    The first line of each test case contains two integers N (1 \\u2264 N \\u2264 1000) and \\n                    (M 0 \\u2264 M \\u2264 10000) representing, respectively, the amount of \\n                    emperors and the number of relationships that forum membership. The emperors are identified by numbers from 1 to \\n                    N. Each of the next M lines of the test case contains two integers \\n                    Pi (1 \\u2264 Pi <Fi) and \\n                    Fi (Pi <Fi \\u2264 N), \\n                    indicating that Pi's father Fi. A particularity of genealogy \\n                    is given in case of paternity doubts, all possible parents were listed, ie a person can have any \\n                    number of parents.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"St. Petersburg Dynasties\",\n    \"output\": \"For each test case print a line containing a integer number, that is the minimum number of \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439 needed to partition all the imperators of that test case.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tBy Marcio T. I. Oshiro, USP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tSt. Petersburg became after the end of the Iron Curtain in the early '90s, one of the main cities of the alternative scene worldwide. Groups of punks, hardcore bands and several other representatives of the alternative scene moved to the city, attracted by the large amount of young people. With the emergence of virtual communities, a few years later, it was noted the enormous potential of using these communities to combine meetings, parties, raves, etc..\\n\\n\\tIn these celebrations of St. Petersburg is always very important that each participant has at least a certain number of friends on the social network. At the same time, we want to invite as many people as possible to St. Petersburg since the restriction on the number of friends is satisfied. This constraint says that, to be invited to the party, the person must have at least one number K of friends on the guest list.\\n\\n\\tYour task in this problem is, given the number of people in the community and to list their relationships, determine what should be called to the party that has the largest possible number of participants satisfying the constraint.\",\n    \"id\": 1209,\n    \"input\": \"\\tThe input have many test cases and ends with the end of file (EOF). The first line of each test case contains three integers N (1 \\u2264 N \\u2264 1000), M and K\\u00a0(O \\u2264 K \\u2264 N) representing respectively the number of people in the community, the number of friendships in this community and the minimum number of friends asked a person must have to be invited. Each person in the community is identified by numbers from 1 to N. Each of the next M lines of the test case contains a pair of people indicating that they are friends in the social network.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"St. Petersburg Parties\",\n    \"output\": \"\\tFor each test case print a single line containing the list of people to invite separated by a blank space. The list should be sorted in ascending order. If anyone can be invited, print the number 0.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\tBy Marcio T. I. Oshiro, USP \\u00a0Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tThe production of vodka from the city of St. Petersburg is famous around the world. The legend is that the vodka produced is distributed directly into the home of some of the most senior officers of the company through the water supply system. That is, just open the tap and pours ice cold vodka (after all the pipes are running at a negative temperature most of the year) of the barrel. This causes many security problems, after all people dig the streets looking for the alleged pipes vodka leaving the \\n\\tcompany.\\n\\n\\tThis is not the only problem faced in the production of vodka in town. To ensure the quality standards required of the drink, it is produced in only one still having a life well-defined M years. Maintaining varies depending on the age of the equipment. The maintenance cost is Ci, where i is the age of the distiller, and must be paid every year, even for new distillers. These stills have a price when purchased new P (age 0) and distillers used in Russian factories are played by distilleries worldwide, where they are still used for many years, and museums. \\n\\tThe selling price of a distiller with age i is Vi.\\n\\n\\tNote that a distiller with agie M can't longer be used and must be sold. \\n\\tYour task in this problem is deciding which moments in the company will replace the distiller to minimize \\n\\tthe cost of production at the end of N years (from year 1). Consider that the exchange of \\n\\tstills can be done only at the \\n\\tbeginning of the year.\\n\\n\\n                Input\\n\\n                \\n                    \\n\\tThe input contains many test cases and ends with EOF. The first line of each test case contains 4 \\n\\tintegers, N (1 \\u2264 N \\u2264 2000), I (1 \\u2264 l \\u2264 M), \\n\\tM (1 \\u2264 M \\u2264 2000) and P (1 \\u2264 P \\u2264 1000) representing, respectively, \\n\\tthe period of production, the initial distiller age, the maximun destiler age and the price of a new distiller.\\n\\t\\n\\tThe second line of each test case contains M integers, separated by spaces, corresponding to \\n\\tthe maintenance cost Ci (1 \\u2264 Ci \\u2264 1000), for i = 0,1,2, ... M - 1. \\n\\tThe next and last line contains M integers, separated by spaces, corresponding to the sell \\n\\tvalue Vi  (1 \\u2264 Vi \\u2264 P), for i = \\n\\t1,2, ..., M.\\n\\n                \\n\\n                Output\\n\\n                \\n                    \\n\\tFor each test case print two lines. At first, print the minimum cost for the given period. \\n\\tIn the second, an increasing sequence of integers, separated by spaces, indicating\\n\\tthe years in which the machines are exchanged. If the machine is never exchanged, then print only a 0. \\n\\tIf there is more than one possible sequence, choose one in which machines are exchanged\\n\\tas soon as possible and whenever possible (eg, between the sequences \\\"1 4 7\\\" and \\\"1 2 8 10 14\\\" second choice).\\n\\t                \\n\\n                \\n\\n                \\n                    \\n                        \\n                            Input Sample\\n                            Output Sample\\n                        \\n                    \\n                    \\n                        \\n                            \\n                                \\n\\t4 2 6 100\\n\\t30 50 65 80 100 120\\n\\t60 50 40 30 20 10\\n\\t5 5 6 200\\n\\t1 100 100 100 100 200\\n\\t50 100 100 100 100 100\\n\\n                            \\n                            \\n                                \\n\\t260\\n\\t1 3\\n\\t501\\n\\t1\\n\\n                            \\n                        \\n                    \\n                \\n                \\n\\t\\tXVI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2012. Thanks to Carlos E. Ferreira.\\n\",\n    \"id\": 1210,\n    \"input\": \"\\tThe input contains many test cases and ends with EOF. The first line of each test case contains 4 \\n\\tintegers, N (1 \\u2264 N \\u2264 2000), I (1 \\u2264 l \\u2264 M), \\n\\tM (1 \\u2264 M \\u2264 2000) and P (1 \\u2264 P \\u2264 1000) representing, respectively, \\n\\tthe period of production, the initial distiller age, the maximun destiler age and the price of a new distiller.\\n\\t\\n\\tThe second line of each test case contains M integers, separated by spaces, corresponding to \\n\\tthe maintenance cost Ci (1 \\u2264 Ci \\u2264 1000), for i = 0,1,2, ... M - 1. \\n\\tThe next and last line contains M integers, separated by spaces, corresponding to the sell \\n\\tvalue Vi  (1 \\u2264 Vi \\u2264 P), for i = \\n\\t1,2, ..., M.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Optimal Production of Great Vodka\",\n    \"output\": \"\\tFor each test case print two lines. At first, print the minimum cost for the given period. \\n\\tIn the second, an increasing sequence of integers, separated by spaces, indicating\\n\\tthe years in which the machines are exchanged. If the machine is never exchanged, then print only a 0. \\n\\tIf there is more than one possible sequence, choose one in which machines are exchanged\\n\\tas soon as possible and whenever possible (eg, between the sequences \\\"1 4 7\\\" and \\\"1 2 8 10 14\\\" second choice).\\n\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Renato Parente  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tDue to the large number of complaints, the telephone company of St. Petersburg is being forced to invest heavily in improving its services. To do this, the company decided to reduce the budget of some sectors to increase other more essential. One of the sectors that will have its budget reduced is the printing of phone books.\\n\\n\\tWith a reduced budget, the sector of printing phonebooks can not buy enough toner to print the complete lists. As telephone numbers are printed vertically aligned, it was suggested the following solution: from the second phone number printed, the initial digits of the next number to be printed that match the above number are omitted, leaving only one space white. For example, for the numbers 535456, 535488, 536566 and 835456 would be printed is as follows:\\n\\t\\n\\n\\t5 3 5 4 5 6\\n\\t\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 8 8\\n\\t\\u00a0\\u00a0\\u00a0 6 5 6 6\\n\\t8 3 5 4 5 6\\n\\t\\n\\t\\n\\tNote that this impression has saved the impression 6 characters. The telephone company also wondered not print the repeated suffixes, but in tests saw that the answer was not good for the user and therefore decided to make only the elimination prefixes. To determine whether the economy will be sufficient, the printing industry wants to know the maximum number of characters that can be omitted. However, as in any big city, there are several phone numbers and they do not want to spend man-hours to manually calculate this value. So it's up to you, new employee of the company, automate the economy made \\u200b\\u200bby toner, the number of characters.\",\n    \"id\": 1211,\n    \"input\": \"\\tThe input consists of various test cases and ends with the end of file (EOF). Each test case contains an integer \\n\\tN, which reports the number of phones in the list. The next \\n\\tN (1 \\u2264 N \\u2264 105) lines have, each one, a phone Xi, \\n\\tup to 200 characters. For one test case phone numbers have the same number of characters. \\n\\tA phone number can start with the character '0 '.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Economic Phonebook\",\n    \"output\": \"\\tFor each test case print one line indicating the maximum number of characters saved by this process.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\n\\t\\tBy Gordon V. Cormack  Canada\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tChildren are taught to add multi-digit numbers from right-to-left one digit at a time. Many find the \\\"carry\\\" operation - in which a 1 is carried from one digit position to be added to the next - to be a significant challenge. Your job is to count the number of carry operations for each of a set of addition problems so that educators may assess their difficulty.\",\n    \"id\": 1212,\n    \"input\": \"\\tEach line of input contains two unsigned integers less than 10 digits. The last line of input contains 0 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Primary Arithmetic\",\n    \"output\": \"For each line of input except the last you should compute and print the number of carry \\noperations that would result from adding the two numbers, in the format shown below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Piotr Rudnicki  Russia\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Given any integer n (1 \\u2264 n \\u2264 10000) not divisible by 2 \\n                    or 5, some multiple of n is a number which in decimal notation is a sequence of \\n                    1\\\\'s. How many digits are in the smallest such a multiple of n?\\n                \\n\",\n    \"id\": 1213,\n    \"input\": \"The input consists in many test cases and ends with EOF. Each test case contains one integer n (1 \\u2264 n \\u2264 10000) not divisible by 2 or 5.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Ones\",\n    \"output\": \"For each test case, print how many digits have the multiple of n that attends the above requisites.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Gordon V. Cormack  Canada\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tIt is said that 90% of frosh expect to be above average in their class. You are to provide a reality check.\\n\\t\\n\\t\",\n    \"id\": 1214,\n    \"input\": \"\\tThe input contains many test cases. The first line of standard input contains an integer C, the number of test cases. C data sets follow. Each data set begins with an integer, N, the number of people in the class (1 \\u2264 N \\u2264 1000). N integers follow, separated by spaces or newlines, each giving the final grade (an integer between 0 and 100) of a student in the class.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Above Average\",\n    \"output\": \"\\tFor each case you are to output a line giving the percentage of students whose grade is above average, rounded to 3 decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tUnknown Author\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tAndy, 8, has a dream - he wants to produce his very own dictionary. This is not an easy task for him, as the number of words that he knows is, well, not quite enough. Instead of thinking up all the words himself, he has a briliant idea. From his bookshelf he would pick one of his favourite story books, from which he would copy out all the distinct words. By arranging the words in alphabetical order, he is done! Of course, it is a really time-consuming job, and this is where a computer program is helpful.\\n\\t\\n\\tYou are asked to write a program that lists all the different words in the input text. In this problem, a word is defined as a consecutive sequence of alphabets, in upper and/or lower case. Words with only one letter are also to be considered. Furthermore, your program must be CaSe InSeNsItIvE. For example, words like \\\"Apple\\\", \\\"apple\\\" or \\\"APPLE\\\" must be considered the same.\",\n    \"id\": 1215,\n    \"input\": \"\\tThe input file is a text with no more than 10000 lines. An input line has at most 200 characters. Input is terminated by EOF.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Andy's First Dictionary\",\n    \"output\": \"\\tYour output should give a list of different words that appears in the input text, one in a line. The words should all be in lower case, sorted in alphabetical order. You can be sure that he number of distinct words in the text does not exceed 5000.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\n\\t\\tBy Neilor Tonin, URI  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tMangojata is learning Computer Programming. She finds everything very easy, very simple. She is going to make a small program that reads the names of your friends and the distance from his home to each of them. Therefore, she simply want to calculate what is the average distance between her house and her friends house (in meters). But Aristoclenes, a much more experienced programmer warned her that sometimes what seems simple can have some details, depending on the programming language used for implementation.\",\n    \"id\": 1216,\n    \"input\": \"\\tThe input contains several test cases. Each test case is composed by two lines. The first line contains the name of a friend of Mangojata. The second line contains an integer number that indicates the average distance between Mangojata's house and the house of a friend.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Getline One\",\n    \"output\": \"\\tThe output must be a number with one digit after the decimal point (please use a double precision variable) indicating the average distance between Mangojata's house and the house of her friends, like the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Neilor Tonin, URI  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tMs. Parcinova, Mangojata's mom, asked to help her to calculate the consumption of fruit in the house and the amount spent per day on these fruits. Mangojata now must to do a program from a table that his mother was using for annotations by almost a year. In this table, Ms. Parcinova noted the amount of days and then the spent money each day with these fruits, considering always one KG of each fruit.\",\n    \"id\": 1217,\n    \"input\": \"\\tThe first line of input contains an integer N (1 \\u2264 N \\u2264 365) indicating the number of test cases that follows. Each test case is composed of two lines. The first line contains a floating point number  V (0.10 \\u2264 V \\u2264 20.00) indicating the amount spent on the second line contains the name of each fruit that owns Parcinova bought.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Getline Two - Fruits\",\n    \"output\": \"\\tFor each test case, print how many kilograms of fruits Ms. Parcinova bought in each day, with corresponding message \\n\\tlike following example. At the end, print the average consumption in kg by day with 2 decimal numbers and the average \\n\\tof money spent by day, like following example.Note.: all letters must be printed in lowercase \\n\\twith exception of \\\"R\\\" of \\\"R$\\\"\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Neilor Tonin, URI  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tNow that Mangojata solved some problems using getline, she is able to take a step forward. She is about to make a new program to help her sister, Overlaine. Overlaine is a seller of shoes and by a neglect, mixed all shoes of each box. Now she wants to inform any number N and count how many shoes of this size (N) exists inside a specific box. The problem is that Overlaine have no any idea how many shoes are in each box. The only thing we know is that each footwear may be numbered 20-44, and may be male or female.\",\n    \"id\": 1218,\n    \"input\": \"\\tThe input contains several test cases and ends with EOF (End of File). Each test case is composed by two lines. The first line contains a number\\u00a0N\\u00a0(20 \\u2264\\u00a0N\\u00a0\\u2264 44)\\u00a0\\u00a0of a shoe informed by Oveline. The second line contains the number of each pair that are inside the box, followed by M or N, indicating if this shoes are Masculine or Feminine.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Getline Three -  Shoes\",\n    \"output\": \"\\tFor each test case print four lines, like given example. In the first line you must print the message \\u201cCaso n:\\u201d, where n is the number of the test case. In the second line you must print the message \\u201cPares Iguais:\\u201d followed by how many pairs of shoes have the same size of that wich Overlaine wants to find. Follow two lines with the respective among of Feminine (F) and Masculine (M) shoes, with corresponding message.\\n\\t\\n\\tPrint a blank line between the outputs for two consecutive test cases.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Mak Yan Kei  Hong Kong\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\\"Roses are red, violets are blue...\\\"\\n\\t\\n\\tMillionaire Mr Smith is well-known -- not for his wealth, but for his odd sense of \\\"art\\\"... Mr Smith has got a circular garden. On the boundary he picks three points and gets a triangle. He then finds the largest circle in that triangular region. So he gets something like this (Please click here for a black-and-white version of the figure):\\n\\n\\t\\n\\n\\tMr Smith then plants yellow sunflowers, blue violets and red roses in the way shown in the figure. (Nice combination, eh? :-) Given the lengths of the three sides of the triangle, you are to find the areas of the regions with each kind of flowers respectively.\",\n    \"id\": 1219,\n    \"input\": \"\\tEach line of input contains three integers a, b, c, the lengths of the three sides of the triangular region, with 0 < a \\u2264 b \\u2264 c \\u2264 1000. The input is terminated by end of file (EOF).\\u00a0\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Colourful Flowers\",\n    \"output\": \"\\tFor each case, your program should output the areas of the regions with sunflowers, with violets and with roses respectively. Print your answers correct to 4 decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gordon Cormack, Graeme Kemkes & Ian Munro  Canada\\n\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tSome students are members of a club that travels annually to exotic locations. Their destinations in the past have included Indianapolis, Phoenix, Nashville, Philadelphia, San Jose, and Atlanta. This spring they are planning a trip to Eindhoven. The group agrees in advance to share expenses equally, but it is not practical to have them share every expense as it occurs. So individuals in the group pay for particular things, like meals, hotels, taxi rides, plane tickets, etc. After the trip, each student's expenses are tallied and money is exchanged so that the net cost to each is the same, to within one cent. In the past, this money exchange has been tedious and time consuming. Your job is to compute, from a list of expenses, the minimum amount of money that must change hands in order to equalize (within a cent) all the students' costs.\",\n    \"id\": 1220,\n    \"input\": \"\\tThe input will contain the information for several trips. The information for each trip consists of a line containing a positive integer n (1 \\u2264 n \\u2264 1000) indicating the number of students on the trip, followed by n lines of input, each containing the amount, in dollars and cents spent by a student. No student spent more than $10,000.00.\\n\\t\\n\\tA single line containing 0 follows the information for the last trip.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"The Trip\",\n    \"output\": \"\\tFor each trip, output a line stating the total amount of money, in dollars and cents, that must be exchanged to equalize the students' costs.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Neilor Tonin, URI  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tMary knows that a Prime Number is a number that is divisible only by 1 (one) and by itself. For example the number 7 is Prime, \\n\\tbecause it can be divided only by 1 and by 7. So she asked you to write a program that reads many numbers \\u200b\\u200band inform if each one of these numbers are prime or not. \\n\\tBut Patience is not one of the virtues of Mariazinha, so she wants that the execution of all test cases (instances) created by herself happen\\n\\tat the maximum in one second, because she hates waiting :>).\",\n    \"id\": 1221,\n    \"input\": \"\\tThe first input line contains an integer N (1 \\u2264 N \\u2264 200), corresponding to the number of test cases.\\n\\tFollow N  lines, each one containig one integer number X (1 < X < 231) that can be or not a \\n\\tprime number\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Fast Prime Number\",\n    \"output\": \"\\tFor each test case output the message \\u201cPrime\\u201d or \\u201cNot Prime\\u201d according to the to following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"\\tMachado wants to be a writer. He has written many short stories, book reviews, reports of trips he made, and a little romance. Now Machado wants to take part in a short story competition, which has very strict rules about the submission format. The rules of the competition limit the number of total pages, and specify the maximum number of characters per line, and the maximum number of lines per page. Additionally, each word must be written integrally in one line (ie, a word cannot be separated in two lines). Machado wants to write a story with as many words as possible within the rules of the contest, and needs your help. Given the maximum number of characters per line, the maximum number of lines per page, and the words of the short story that Machado is writing, he wants to know the minimum number of pages that his short story will ocuppy, considering the rules of the contest.\",\n    \"id\": 1222,\n    \"input\": \"\\tThe first line of a test case contains three integers N (2 \\u2264 N \\u2264 1000), L (1 \\u2264 L \\u2264 30 ) and C (1 \\u2264 C \\u2264 70) ,  which indicate, respectively, the number of words of the short story, the maximum number of lines per page and the maximum number of characters per line. Machado\\u2019s short story is innovative and contains no characters besides upper and lower case letters and blanks. The second line contains Machado\\u2019s short story, consisting of N words  (1 \\u2264 length of each word \\u2264 C) separated by exactly one blank space. The end of input is determined by EOF.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Short Story Competition\",\n    \"output\": \"\\tFor each test case your program must output a single line containing a single integer indicating the minimum number of pages the short story will ocuppy, considering the contest rules.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"A factory wants to produce a toboggan of marbles toy (marble run) as shown in the following figure, consisting of two vertical rods of wood, which support small rigid flaps connected to the rods. The flaps are connected to the left and right rods in an alternate fashion. A small marble ball is dropped on the highest flap of the marble run, and under the effect of gravity the marble slides by the flaps, eventually \\n                    leaving the toy.\\n                \\n                \\n                    \\n                \\n                \\n                    \\n                    The design of the toy, containing the specifications of its size, position and tilt of each flap, was made by the factory owner. Thousands of units are already being made in China, and the factory manager has been asked to buy the marbles. Before placing the order for thousands of marbles, however, he wants to know the maximum diameter of the marble so it does not get stuck in the middle of the toy.\\n                \\n                    \\n                \\n                \\n                    \\n                    Figure 1: Two examples: (a) the marble reaches the end, and (b) the marble gets stuck in the middle of the toy.\\n                    \\n                    The factory manager wants you to write a program that, given the toy specifications, determines the maximum diameter of the marble so that it does not get stuck in the middle of the toy.\",\n    \"id\": 1223,\n    \"input\": \"The input contains several test cases. The first line of a test case contains an integer N (1 \\u2264 N \\u2264 103) indicating the number of flaps of the toy. The second line contains two integers L (1 \\u2264 L \\u2264 103) and H (1 \\u2264 H \\u2264 103), indicating respectively the distance between the rods and the height of the rods. The left rod is at position 0 of the coordinate axis X, so that the right rod is at position L of the X axis.\\n                \\n                    \\n                    Each of the following N lines describes a flap. Flaps are described from highest to \\n                    lowest, alternately in relation to the rod to which the flap is attached. The highest flap \\n                    (the first to be described) has an end connected to the left rod and the second highest flap \\n                    (the second to be described) has one end connected to the right rod, and so forth. Odd flaps are \\n                    connected to the left stem, the even flaps are connected to the right rod.\\n                    \\n                    Each flap is described in a line containing three \\n                    integers Yi, Xf \\n                    (0 < Xf < L) and\\n                    Yf (0 \\u2264 Yf \\u2264 H).\\n                    (Xf , Yf) indicates the coordinate of the flap\\u2019s end \\n                    (the not connected end). The coordinate of the connected end of an odd flap is \\n                    (0, Yi (0 \\u2264 Yi \\u2264 H)), \\n                    and the coordinate of the connected end of an even flap \\n                    is (L, Yi ). \\n                    \\n                    For all flaps Yi > Yf (ie, \\n                    there is a slope between the start and the end of a flap), and the length of the flap is less than the width of the toy. \\n                    Moreover, for two consecutive flaps A and \\n                    B, Yfa >= YiB (ie, \\n                    the end of flap Ahas height greater than or equal than the beginning of flap B).\\n                    \\n                    Consider that the flaps are very thin, so that its thickness can be neglected.\\n                \\n                \",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Toboggan of Marbles\",\n    \"output\": \"For each test case print a line containing a single number, with exactly two decimal places, indicating the largest diameter of a marble so it that it can reach the end of the toy.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Two players, Alberto and Wanderley, play a game. A set with an even number of cards, each card containing an integer, is arranged on a table, one card next to another, forming a sequence of cards. Alberto begins to play, and can take one of two cards at the edges of the sequence (the first or the last card). Wanderley then can take one of two cards at the edges of the remaining sequence, and Alberto can again take a card from the sequence, and so on, until Wanderley takes the last card.\\n                    \\n                    In this game, the number of points of a player is the sum of the numbers in the cards he took. Alberto, the first to play, aims to maximize his number of points. Wanderley, the second player, wants to make Alberto to have the least number of points possible. In short, both want to do their best, Alberto wanting to maximize his points and Wanderley wanting to minimize Alberto\\u2019s points.\\n                    \\n                    You must write a program that, given the sequence of cards, determines the highest number of points that Alberto can get.\",\n    \"id\": 1224,\n    \"input\": \"The input contains several test cases. Each test case is described in two lines. The first line contains an even integer N (2 \\u2264 N \\u2264 104), which indicates the number of cards on the table. The second line contains N integers, describing the sequence of cards.\\u00a0Each of the N integers can fit in 32 bits.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Cards\",\n    \"output\": \"For each test case your program must print a single line, containing a single integer, the largest number of points that Alberto can get.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe Conductor of the choir is planning to take part in the famous Brazilian Choir Week, and therefore she wants the choir to rehearse a new song, described as follows:\\n\\t\\n\\t\\u2022 each member of the choir starts singing one note, and only changes the note when determined by the Conductor;\\n\\t\\n\\t\\u2022 at the end of each bar measure, the Conductor determines that exactly two singers change the note they are singing: one singer starts to sing the note immediately above the note she sang, and another singer starts to sing the note immediately below the note she sang;\\n\\t\\n\\t\\u2022 the song finishes at the end of the first bar measure in which all singers are singing the same note.\\n\\t\\n\\tThe Conductor already has several ideas of how to distribute the notes among choir members at the beginning of the song, in order to create the desired effect. However, she is worried about whether, given a note distribution for the singers, it is possible to reach the end of the song in the way she wants (all singing the same note). And, if that is possible, she wants to know the minimum number of bar measures the song can have. Can you help her?\",\n    \"id\": 1225,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains an \\n\\tinteger N (2 \\u2264 N \\u2264 104) indicating the number of members of the choir. \\n\\tNotes are indicated by integers. The second line contains N integers, indicating the note (\\u2212105 \\u2264 notai \\u2264105) where 0 \\u2264 i \\u2264 N\\u22121, that each singer must sing at the beginning of the song. Notes are given in non-decreasing order  (notai \\u2264notai+1).\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Perfect Choir\",\n    \"output\": \"\\tFor each test case, print a line containing a single integer indicating the minimum number of bar measures the song can have. If it is not possible to have all members singing the same note, then print the value\\u22121.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tChina is building a space elevator, which will allow the launching probes and satellites to a much lower cost, enabling not only scientific research projects but also space tourism.\\n\\t\\n\\tHowever, the Chinese are very superstitious, and therefore have a very especial care with the numbering of floors in the elevator: they do not use any number containing the digit \\u201c4\\u201d or the sequence of digits \\u201c13\\u201d. Thus, they do not use the fourth floor or the floor 13 or the floor 134 nor the floor 113, but use the floor 103. Thus, the first floors are numbered 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, . . .\\n\\t\\n\\tAs the space elevator has many levels, and levels must be numbered, the Chinese asked you to write a program that, given the level, indicates which number should be assigned to it.\",\n    \"id\": 1226,\n    \"input\": \"\\tThe input contains several test cases. Each test case consists of a single line containing an integer N (1 \\u2264 N \\u2264 1018) which indicates the floor whose number should be determined.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Space Elevator\",\n    \"output\": \"\\tFor each test case, print a line containing a single integer indicating the number assigned to the N-th floor.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tIn a city of Nlogonia, the road system is composed of N traffic circles and N\\u22121 streets, each street connecting two distinct traffic circles. Using the road system, one can go from any traffic circle to any other traffic circle in the city. \\n\\t\\n\\tThe city has only two hotels: an inexpensive hotel, located at the traffic circle B, and an expensive hotel located at traffic circle C. A tourist came to town to celebrate the birthday of a friend, whose party is being held at a club in the traffic circle A. As the tourist did not make a reservation for any of the hotels and since the night is pleasant, after the party is over he decides to walk along the streets and traffic circles to find one of the hotels (he also decides to stay at the first hotel he finds).\\n\\t\\n\\tHis plan is more difficult than he expected, because he is not familiar with the city and also because he drank a little bit too much. All the streets look the same to him. Thus he decides to use the following strategy: at each traffic circle, he chooses, with uniform probability, one of the streets leaving the traffic circle, and uses that street to go to another traffic circle, until he reaches the traffic circle where a hotel is located. Note that as the tourist cannot distinguish the streets, it is possible for him to choose the same street more than once.\\n\\t\\n\\tYou should write a program that, given the description of the city road system, the location A of the birthday party, the location B of the inexpensive hotel and the location C of the expensive hotel, determines the probability that he will get to the inexpensive hotel before reaching the expensive hotel.\\n\\n\\t\",\n    \"id\": 1227,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains four integers N (3 \\u2264 N \\u2264 100), A (1 \\u2264 A), B and C (C \\u2264 N), indicating the number of traffic circles, the traffic circle where the birthday party is held, the traffic circle where the inexpensive hotel is located, and the traffic circle where the expensive hotel is located. Each of the N\\u22121following lines contains two integers  X (1 \\u2264 X) e Y (Y \\u2264 N), indicating that there is a street connecting the traffic circles X and Y.\\n\\t\\n\\tNote: B != C, A != B, A != C e X != Y\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Midnight Cowboy\",\n    \"output\": \"\\tYour program must print a single line containing the probability, with 6 decimal places, that the tourist will arrive at the inexpensive hotel before arriving at the expensive hotel.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tNlogonia will hold the sensational world final of the Formula 17 drivers championship. Competitors line up at the start and compete for the race. You will have access to the start and finish grids. The question is to determine the minimum number of overtakes that were made during the competition.\",\n    \"id\": 1228,\n    \"input\": \"\\tThe input contains several test cases. Each test case uses three lines. The first line of a test case contains an integer N (2 \\u2264 N \\u2264 24) indicating the number of competitors. Each competitor is identified by a number from 1 to N. The second line contains the N competitors in order of the starting grid. The third line of each case has the same competitors, but now in the order they finish the race.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Start Grid\",\n    \"output\": \"\\tFor each test case print a line containing a single integer, the minimum number of overtakes necessary to get from the starting grid to the finishing grid.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Researchers from the Foundation Against Cancer (FCC) announced a revolutionary discovery in Chemistry: they discovered how to make carbon atoms bind to any number of other carbon atoms, enabling the creation of more complex molecules than those formed by tetravalent carbon. According to the FCC, this will allow the development of new drugs that may be crucial in fighting cancer.\\n                    \\n                    Currently, the FCC can only synthesize molecules that have a single bonds between the carbon atoms and contain no cycles in their structures: for example, \\n                    the FCC can synthesize molecules (a), (b) and (c) below, but not the molecule (d).\\n                \\n                    \\n                \\n                    Due to thermal agitation, the same molecule can take several formats. Two molecules are equivalent if it is possible to move the atoms of the molecules, without breaking any of the existing chemical bonds or creating new chemical bonds, so that both molecules are exactly equal. For example, in the figure above, molecule (a) is not equivalent to molecule (b), but is equivalent to molecule (c).\\n                    \\n                    You should write a program that, given the structures of two molecules, determines if they are equivalent.\",\n    \"id\": 1229,\n    \"input\": \"The input contains several test cases. The first line of a test case contains an integer N indicating the number \\n                    of atoms in the two molecules. The atoms are identified by integers \\n                    from\\u00a01 to\\u00a0N (2 \\u2264\\u00a0N \\u2264 104). Each the following 2N \\u2212 2 lines describes a chemical bonds between two atoms: the first N \\u2212 1 lines describe the chemical bonds of the first molecule, the last N \\u22121 lines describe the chemical bonds of the second molecule. Each line contains two integers A and B indicating that a chemical bond exists between atoms A and B.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Combating Cancer\",\n    \"output\": \"For each test case your program must print a single line, containing a single character: S if the molecules are equivalent or N otherwise.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Given a positive integer n, denote by [n] the real interval {x : 0 \\u2264 x \\u2264 n}. A function f : [n] \\u21d2 R.  Values of f  are provided on a subset S of [n], thereby partially specifying f.\\n                    The set S satis\\ufb01es the following properties:\\n                    1. The points in S are all integers.\\n                    2. The extremes 0 and n of [n] are both in S.\\n                    The function f satis\\ufb01es the following properties:\\n        \\n                    1. The values of f in the integral points of [n] are integers.\\n                    2. For every integral point x in [n] \\\\ S (ie, the integral points of [n] are not in S), the function f is monotonic in the interval [x \\u2212 1, x + 1]. In other words, at least one of the inequalities f(x \\u2212 1) \\u2264 f(x) \\u2264 f(x + 1) and f(x \\u2212 1) \\u2265 f(x) \\u2265 f(x + 1) is satis\\ufb01ed.\\n                    3. For each non-integral point x in [n], the value of f(x) is given by the linear interpolation of f(\\u230ax\\u230b) and f(\\u2308x\\u2309), ie, f(x) = (x \\u2212 \\u230ax\\u230b)f(\\u230ax\\u230b) + (\\u2308x\\u2309 \\u2212 x)f(\\u2308x\\u2309).\\n                    We still have the freedom of specifying the values of f in the integral points of [n] \\\\ S (note however that S can contain all the integral points of [n]). We would like to use this \\ufb02exibility to make f(x)dx = y, i.e., the area under f(x) between the extremes 0 and n equal to y, a given value. Your problem then is to decide whether this is possible or not.\",\n    \"id\": 1230,\n    \"input\": \"The input contains several test cases. The \\ufb01rst line of a test case contains three integers, N (1 \\u2264 N \\u2264 106), M and Y (0 \\u2264 Y \\u2264 109), respectively the amplitude of the interval, the size of S and the value of y. Each of the following M lines describes function f at a point of S, containing two integers  X (0 \\u2264 X \\u2264 N, \\u2200X \\u2208 S) and F (0 \\u2264 F \\u2264 106), representing f(X) = F.  The values of X are not necessarily in ascending order.\\n                    Note.:   f(x)dx \\u2264 109 for any assignment of values to f(x) para x \\u2208 [n] \\\\ S satisfying the stated constraints.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Integral\",\n    \"output\": \"For each test case, determine whether there is a value assignment to f(x) for each integral point x \\u2208 [n] \\\\ S such that f(x)dx = y, i.e. the area under f(x) between the ends 0 and n is equal to y. If not, your program should print a line containing only the character \\u2018N\\u2019. If the assignments are possible, your program should print a line containing the character \\u2018S\\u2019, followed by values of f(x) for the integral points x in [n] \\\\ S, in increasing order of the values of x. The initial character and following values, if any, should be separated by a blank space. If more than one solution is possible, then print the lexicographically smallest solution.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tGiven two sets of words formed by zeros and ones, you must write a program to determine if there are concatenations of \\n\\twords of each of the sets that generate the same word. For example, if a set A contains the words 010 and 11 and another \\n\\tset B contains the words 0 and 101, then the word 01011010 can be formed both by concatenating words of A and by \\n\\tconcatenating words of B.\\n\\n\\t010 \\u00b7 11 \\u00b7 010 = 01011010 = 0 \\u00b7 101 \\u00b7 101 \\u00b7 0 Input\",\n    \"id\": 1231,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains two integers, N1 (1 \\u2264 N1), and N2 (N2 \\u2264 20), which indicate respectively the number of words in the first and the number of words in the second sets. Each of the following N1 lines contains a word of the first set. Each of the following N2 lines contains a word of the second set.\\n\\t\\n\\tNote:\\u00a0Each word has at least one and at most 40 characters, all zeros and ones.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Words\",\n    \"output\": \"\\tFor each test case your program must print a single line, containing a single character. If it is possible to find a concatenation of one or more words of the first set that is equal to a concatenation of one or more words of the second set then the character must be S, otherwise the character must be N.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tProbably everyone in this competition knows the Rubik\\u2019s Cube, a challenging 3-D puzzle. Each of it six sides is covered with nine labels, each label of a color (blue, yellow, orange, white, green and red). In its initial state, all nine labels on one face have the same color. One ingenious mechanism enables each face to be independently rotated, causing the colors of the labels on the sides to be mixed.\\n\\t\\n\\tEach of the faces of the Rubik\\u2019s Cube is denoted by a letter: F, B, U, D, L, and R, as illustrated in the figure below.\\n\\n\\t\\n\\n\\n\\tU F D R L B The rotation of a face is called a movement. We describe the movements using the letters that identify the faces:\\n\\n\\t\\n\\t\\ta capital letter represents a 90o clockwise turn of the corresponding face;\\n\\t\\n\\t\\ta lowercase letter represents a 90o  counterclockwise turn of the corresponding face.\\n\\n\\n\\t\\n\\tFor example, F represents a 90o clockwise turn of face F; r represents a 90o counterclockwise turn of face R. A sequence of movements is denoted by a sequence of letters identifying faces. Thus, rDF represents a 90o counterclockwise turn of face R, followed by a 90o clockwise turn of face D, followed by a 90o clockwise turn of face F.\\n\\t\\n\\tAn interesting property of the Rubik\\u2019s Cube is that any sequence of movements, if applied repeat- edly, causes the cube to return to its original state (the state it had before the first application of the sequence). For example, after four applications of the sequence B the cube returns to its original state.\\n\\t\\n\\tYou must write a program that, given a sequence of movements, determines the minimum number of complete applications of that sequence to make the cube return to its original state.\",\n    \"id\": 1232,\n    \"input\": \"\\tThe input contains several test cases. Each test case is described in a single line, which contains the sequence of movements. Note: Each sequence has at least one and at most 80 characters.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Rubik Cycle\",\n    \"output\": \"\\tFor each test case your program must print a single line, containing a single integer, indicating the minimum number of complete applications of the given sequence to make the hub return to its original state.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tFernando won a compass for his birthday, and now his favorite hobby is drawing stars: \\ufb01rst, he marks N points on a circumference, dividing it into N equal arcs; then, he connects each point to the k-th next point, until returning to the \\ufb01rst point.\\n\\t\\n\\tDepending on the value of k, Fernando may or may not reach all points marked on the circumference; when that happens, the star is called complete. For example, when N = 8, the possible stars are shown in the \\ufb01gure below. Stars (a) and (c) are complete, \\n\\twhile stars (b) and (d) are not.\\n\\n\\t\\n\\n\\tDepending on the value of N, it may be possible to draw many di\\ufb00erent stars; Fernando asked you to write a program that, given N, determines the number of complete stars he can draw.\",\n    \"id\": 1233,\n    \"input\": \"\\tThe input contains several test cases. Each test case contains a single line, containing a single integer\\u00a0N\\u00a0(3 \\u2264\\u00a0N\\u00a0< 231),\\u00a0indicating the number of arcs in which the circumference was divided.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Star\",\n    \"output\": \"\\tFor each test case, your program must print a single line containing a single integer, indicating the number of complete stars that can be drawn.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"A sentence is called dancing if its first letter is uppercase and the case of each subsequent letter is the opposite of the previous letter. Spaces should be ignored when determining the case of a letter. For example, \\\"A b Cd\\\" is a dancing sentence because the first letter ('A') is uppercase, the next letter ('b') is lowercase, the next letter ('C') is uppercase, and the next letter ('d') is lowercase.\",\n    \"id\": 1234,\n    \"input\": \"The input contains several test cases. Each test case is composed by one line that contais a string sentence. This string will contain between 1 and 50 characters ('A'-'Z','a'-'z' or space ' '), inclusive,  or at least, one letter ('A'-'Z','a'-'z').\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Dancing Sentence\",\n    \"output\": \"Turn the sentence into a dancing sentence (like following examples) by changing the cases of the letters where necessary. All spaces in the original sentence must be preserved, ie, \\\" sentence \\\" must be converted in \\\" SeNtEnCe \\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"Your printer has been infected by a virus and is printing gibberish. After staring at several printed pages for a while, you realize that it is printing every line inside-out. In other words, the left half of each line is being printed starting in the middle of the page and proceeding out toward the left margin. Similarly, the right half of each line is being printed starting at the right margin and proceeding in toward the middle of the page.\\n                    \\n                    For example, the line:\\n                    THIS LINE IS GIBBERISH\\n                    \\n                    is being printed as:\\n                    I ENIL SIHTHSIREBBIG S\\n                    \\n                    In the same way, the line \\\" MANGOS \\\" is being printed as \\\"NAM\\u00a0\\u00a0SOG\\\".Your task is to unscramble a String line from its printed form back into its original order. You can assume that line contains an even number of characters.\",\n    \"id\": 1235,\n    \"input\": \"The input contains many test cases. The first line of input contains an integer N that indicates the number of test cases. Follow N lines, each one with a string with the maximum of 100 uppercase letters ('A'-'Z') and spaces (' '). that must be unscrambled from its printed form back into its original order, like example above.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Inside Out\",\n    \"output\": \"Each line of input must produce a line of output, with the decoded message, like example above.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Neilor Tonin, URI  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tFrancisco is a teacher and need your help to compress some text files. As the files contain basically white spaces and zeros (0), this program must be something very simple. The text contains only uppercase and lowercase letters, spaces and numbers. You must to consider the $ like a symbol for compression of spaces and the symbol # like a symbol to compress zeros. Remember 2 details:\\n\\n\\t\\n\\t\\tYou must print the AscII char corresponding to the frequence, not the decimal number.\\n\\t\\n\\t\\tIf occurs more than 255 null or white chars, the output must be done in two or more parts, because the maximum size of a byte is 255. For example, to compress 380 successive '0' chars, the first block will compress the first 255 occurrences and the second one will compress the 125 remaining, and so on. The result in this case would be \\\"# #}\\\". Note that the 255 char is invisible (seems like a space). \\n\\n\\n\\tTo understand a little more, consider the following ASCII table: for example, CHR(3) means \\u201cETX\\u201d\\n\\n\\t\\n\\t\\n        Note:\\n    \\n\\tDo not compress when only 2 repeated zeros or blank spaces occurs(\\\"*00*\\\" ou \\\"*\\u00a0\\u00a0*\\\"), because this compression will not result in any space optimization.\\n\\tOur toolkit may not print some special chars needed in the output of this problem.\\n\\t\",\n    \"id\": 1236,\n    \"input\": \"\\tThe input contains many test cases. Each test case contains a number N that indicates the number of test cases. Each test case contains up to 2000 chars.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Compressing Null and White\",\n    \"output\": \"\\tEach input line must produce a output line, that is the compressed input, like example above\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*\\u00a0\\u00a0USA\",\n    \"category\": \"Strings\",\n    \"description\": \"Find the longest common substring between the two informed Strings. The substring can be any part of the String, including the entire String. If there is no common substring, return 0. The search is case sensitive ('x' != 'X').\",\n    \"id\": 1237,\n    \"input\": \"The input contains several test cases. Each test case is composed by two lines that contains a string each. Both input Strings will contain between 1 and 50, inclusive, letters (a-z, A-Z), and/or spaces.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Compare Substring\",\n    \"output\": \"The length of the longest common substring between the two Strings.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By TopCoder*  USA\\r\",\n    \"category\": \"Strings\",\n    \"description\": \"\\r\\n                \\r\\n                    Implement a program Combiner that takes two Strings as \\r\\n                    parameters and combines them, alternating letters, starting with the first letter of the first String, \\r\\n                    followed by the first letter of the second String, then second letter of first String, etc.  \\r\\n                    The remaining letters of the longer String are then appended to the end of the combination \\r\\n                    String and this combination String is returned.\\r\\n\\r\",\n    \"id\": 1238,\n    \"input\": \"\\r\\n                \\r\\n                    The input contains several test cases. The first line of input contain an integer N that indicates the number of \\r\\n                    test cases. Each test case is composed of a line containing two strings and \\r\\n                    each string contains between 1 and 50 characters, inclusive.\\r\\n\\r\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Combiner\",\n    \"output\": \"\\r\\n                \\r\\n                    Combine the two input strings, as shown in the example below and print the resulting string.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"You are helping to develop a weblog-management system called bloggo. Although bloggo pushes all content to the front end of a website in HTML, not all content authors enjoy using HTML tags in their text. To make their lives easier, bloggo offers a simple syntax called shortcuts to achieve some HTML textual effects. Your job is to take a document written with shortcuts and translate it into proper HTML.\\n                \\n                \\n                    One shortcut is used to make italicized text. HTML does this with the <i> and </i> tags, but in bloggo, an author can simply enclose a piece of text using two instances of the underscore character, '_'. Thus, where a content author writes\\n                  You _should_ see the baby elephant at the zoo!\\n                \\n                \\n                    bloggo will publish the following instead.\\n                  You <i>should</i> see the baby elephant at the zoo!\\n                \\n                \\n                    Another shortcut serves to render text in boldface, which HTML accomplishes with <b> and </b> tags. Bloggo lets content authors do the same with paired instances of the asterisk character, '*'. When a content author writes the text\\n                  Move it from *Receiving* to *Accounts Payable*.\\n                \\n                \\n                    it will end up on the website as\\n                  Move it from <b>Receiving</b> to <b>Accounts Payable</b>.\\n\",\n    \"id\": 1239,\n    \"input\": \"The input contains several test cases. Each test case is composed by one line \\n                    that contais a string text, containing zero or more usages of the italic \\n                    and boldface shortcuts. Each text is between 1 and 50 characters long, inclusive. \\n                    The only characters allowed in text are the alphabetic characters 'a' to 'z' and 'A' to 'Z', the underscore '_', the asterisk '*', the space character, and the punctuation \\n                    symbols ',', ';', '.', '!', '?', '-', '(', and ')'. The underscore \\n                    '_' occurs in text an even number of times. The asterisk '*' occurs \\n                    in text an even number of times. No substring of text enclosed \\n                    by a balanced pair of underscores or by a balanced pair of asterisks may contain \\n                    any further underscores or asterisks. \\n                     The end of input is determined by EOF.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Bloggo Shortcuts\",\n    \"output\": \"Translate each input text into HTML as demonstrated by the examples above (and below). To render a span of text in italics in HTML, you must start with the <i> tag and end with the </i> tag. For boldface text, start with <b> and end with </b>. Print one translated text per line at standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Adapted by Neilor Tonin, URI\\u00a0\\u00a0Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Paulinho have in your hands a little problem. The teacher asked him to make a program to verify from two integer numbers A and B, if B \\u00a0corresponds to the last digit of A.\",\n    \"id\": 1240,\n    \"input\": \"The input consists of several test cases. The first line of input contains an integer N that indicates the number of test cases. Each test case consists of two integers\\u00a0A\\u00a0(1 \\u2264\\u00a0A\\u00a0< 231\\u00a0) e\\u00a0B\\u00a0(1 \\u2264\\u00a0B\\u00a0< 231) positives.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Fit or Dont Fit I\",\n    \"output\": \"For each test case, print a message informing if the second number fit (\\\"encaixa\\\" in portuguese) or didn't fit (\\\"nao encaixa\\\") in the first number.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Neilor Tonin, URI\\u00a0\\u00a0Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"\\tPaulinho have again in your hands another problem. Now the teacher asked him to make a new program \\n\\tto verify from two big numbers A and B, if B corresponds to the last digit of A.\",\n    \"id\": 1241,\n    \"input\": \"\\tThe input consists of several test cases. The first line of input contains an integer N that indicates \\n\\tthe number of test cases. Each test case consists of two numbers A and B greather than\\n\\tzero, with up to 1000 digits each.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Fit or Dont Fit II\",\n    \"output\": \"\\tFor each test case, print a message informing if the second number fit (\\\"encaixa\\\" in portughese) or didn't fit (\\\"nao encaixa\\\") in the first number.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tAn alien kind of ribonucleic acid (popularly known as RNA) Was discovered. Scientists, for lack of criativity, have named \\n\\tthe discovery of alien ribonucleic acid (RNAA). Similar to RNA we know, the RNAA is a ribbon composed of several bases. \\n\\tThe bases are C F B S and may connect in pairs. \\n\\tThe only possible pairs are between the bases B and S and the bases C and F. \\nWhile active, the RNAA fold various intervals of the tape around itself, making connections between its bases. Scientists realized that:\\n    \\n\\tWhen a range of tape CSAR bend all the bases in this range bind to its corresponding bases:\\n\\t- Each base can bind to only one other base:\\n\\t- The folds occur to maximize the number of calls made on ribbons\\n\\n\\tThe images below illustrate folds and connections made on tapes.\\n    \\n\\t\\n\\t\\n\\t\\n\\tYour task is, given the description of a strip of RNAA, determine how many connections are made \\u200b\\u200bbetween their bases \\n\\tif the strip becomes active.\",\n    \"id\": 1242,\n    \"input\": \"\\tThe input consists of several test cases and ends with EOF. Each test case has a line describing the sequence of bases \\n\\tof the RNAA stripe. A RNAA stripe contains at least one and at most 300 bases. There are no blanks between bases of a tape. \\n\\tThe bases are 'B', 'C', 'F' and 'S'.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Alien Ribonucleic Acid\",\n    \"output\": \"\\tFor each test case print a line containing the total number of connections that occurs when the tape is actived.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"TopCoder decided to automate the process of assigning levels of difficulty to the problems.\\n                    TopCoder developers concluded that the difficulty of the problem is related only to\\n                    average length of the words in the problem statement.\\n                    If the average length of the words of the statement is less than or equal to 3, the problem difficulty receives 250 points.\\n                    If the average length of the words of the statement is 4 or 5, the problem difficulty receives 500 points.\\n                    If the average length of utterance of words is greater than or equal to 6, the problem difficulty receives 1000 points.\\n                \\n                \\n                    Definitions:\\n                    Symbol: A set of characters linked by spaces from both sides, or at the beginning of the\\n                    description of the problem, or even the end of the description of the problem.\\n                    Word: a symbol that contains only letters a-z or A-Z, and can be finished with a single point.\\n                    Word length: number of letters in a word (a point is not a letter).\\n                \\n                    Examples of symbols are words (quotes just to exemplify): \\\"AB\\\", \\\"ab\\\".\\n                    Example of symbols that are not words: \\\"ab..\\\", \\\"a.b\\\", \\\".ab\\\", \\\"a.b.\\\", \\\"a2b.\\\", \\\".\\\".\\n                \\n                    The average length of the words is given by the sum of the sizes of the utterance of words divided by the\\n                    number of words, the division is made by integers. If the word count is zero, then the average length of the words is zero.\\n                \\n                \\n                    Your task is given the problem statement, compute its classification of difficulty of the problem, which can be 250, 500, or 1000.\\n\",\n    \"id\": 1243,\n    \"input\": \"The entry contains several test cases. Each test case is composed of a line containing the\\n                    statement of a problem, is a string containing between 1 and 50 characters ('A'-'Z','a'-'z','0'-'9', ' ', '.')\\n                    inclusive.\\n                    The end of input is determined by EOF.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"How Easy\",\n    \"output\": \"Compute the average length of words in the statement of the problem, and show the classification of the problem,\\n                    for more details see the example below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Create a program to sort a set of strings by their size. Its program is to receive a set of \\n                    strings and return by this same size ordered set of words, if the size of the strings are equal, \\n                    must maintain the original order of the set.\",\n    \"id\": 1244,\n    \"input\": \"The first line of input has a unique integer N that indicates the number of sets of strings, \\n                    each set may contain between 1 and 50 inclusive elements, and each of the strings of the set \\n                    may contain between 1 and 50 inclusive characters.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Sort by Length\",\n    \"output\": \"The output should contain the set of input strings ordered by the length of strings.A blank space must be printed between two words.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tThe Boots and Shoes supplies division of the Army purchased a large number of pairs of boots of various sizes for his soldiers. However, a failure of the packaging factory contracted, not all supplied boxes containing a pair of boots correct, with two boots of the same size, one for each foot. The sergeant told the recruits withdraw all boots all the boxes to repack them, this time correctly.\\n\\t\\n\\tWhen the sergeant discovered that you knew programming, he asked with the usual kindness you write a program that, given a list containing the description of each boot delivered, determines how many pairs of boots could be formed in total.\",\n    \"id\": 1245,\n    \"input\": \"\\tThe input consists of several test cases. The first line of a test case contains an integer N (2 \\u2264 N \\u2264 104), N \\n\\tis even, indicating the number of individual boots delivered. Each of the N rows following describes a boot, containing an integer number \\n\\tM (30 \\u2264 M \\u2264 60) and a letter L, separated by a blank space. M indicates the number of the boot and \\n\\tL indicates the size of the boot: L = 'D' indicates that the boot is to the right foot, L = 'E' \\n\\tindicates that the boot is for the left foot.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Lost Boots\",\n    \"output\": \"\\tFor each test case print one line containing a single integer indicating the total number of pairs that can be formed correct.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A parking lot uses a terrain where vehicles have to be stored in a single line, one behind the other. The tariff is a fixed value of R$ 10.00 per vehicle parked charged on entry, regardless of its size and time of permanence. As parking is very crowded, Not all vehicles entering the parking can get a place to park.\\n                    \\n                    When a vehicle arrives at the parking, the attendant first determines if there is vacancy for that vehicle. For this, he roams the parking lot, from beginning to end, looking for a space that is vacant and has length greater than or equal to the length of the vehicle. To save your time and energy, the attendant chooses the first space it finds appropriate, ie, the space closest to the beginning.\\n                    \\n                    Once found the vacancy for the vehicle, the attendant back to the entrance of the parking lot, take the car and park at the beginning of the space found. If the attendant does not find adequate space, the vehicle does not enter the parking and the tariff is not charged. After parked, the vehicle is not moved until the time it leaves the parking area.\\n                    \\n                    The owner of the parking lot is concerned with whether the attendants are properly charged the tariff of vehicles parked and asked you to write a program that, given the list of arrivals and departures of vehicles in the parking lot, determines the total expected billing.\",\n    \"id\": 1246,\n    \"input\": \"The input consists of several test cases. The first line of a test case contains two integers \\n                    C (1 \\u2264 C \\u2264 1000) and N (1 \\u2264 N \\u2264 10000) that respectively indicating \\n                    the length in meters of the parking lot and the total number of events (arrivals and departures of vehicles). \\n                    Each of the next N lines describes an arrival or departure. For a vehicle arrived, \\n                    the line contains the letter 'C', followed by two integers P (1000 \\u2264 P \\u2264 9999) and Q (1 \\u2264 Q \\u2264 1000), \\n                    all separated by a blank space. P indicates the vehicle plate and Q their length. \\n                    For a vehicle departure, the row contains the letter 'S' followed by an integer P, separated by a blank space, where P \\n                    indicates the vehicle plate. Actions are given in chronological order, ie, in the order they happen.\\n                    \\n                    At the beginning of each test case in the parking lot is empty. In the input file, a vehicle leaves the parking lot only if is actually parked, and the plate of a vehicle that reaches the parking lot is never equal to the plate of a vehicle already parked.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Parking Lot\",\n    \"output\": \"For each test case your program should print a line containing an integer representing the billing of the parking lot in reais.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tMaratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\\"Stop thief! Stop thief!\\\" Stole the purse of an innocent lady who was walking on the beach and Nlogonia thief fled toward the sea. His plan seems obvious: he intends to take a boat and escape!\\n\\t\\n\\tThe fugitive, who by now is aboard their vessel leakage, intends to follow the coast perpendicularly toward the limit of international waters, which is 12 nautical miles away, where will be saved from local authorities. Your boat can travel that distance at a constant speed of VF us.\\n\\t\\n\\tThe Coast Guard intends to intercept him, and your boat has a constant speed of VG us. Assuming both boats departing the coast at exactly the same instant, with a distance of D nautical miles between them, can be possible that the Coast Guard reach the thief before the limit of international waters?\\n\\t\\n\\tAssume the coast of Nlogonia is perfectly straight and the sea calm enough, to allow a trajectory so as retil\\u00ed\\u0131nea the coast.\",\n    \"id\": 1247,\n    \"input\": \"\\tThe input consists of several test cases. Each test case is described in a line containing three integers, \\n\\t D (1 \\u2264 D \\u2264 100), VF (1 \\u2264 VF \\u2264 100) and VG (1 \\u2264 VG \\u2264 100), \\n\\t indicating the initial distance between the fugitive and the Coast Guard, the runaway boat speed and the Coast Guard boat speed.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Coast Guard\",\n    \"output\": \"\\tFor each test case print a line containing 'S' if the Coast Guard can reach the fugitive before he exceeds the limit of international waters or 'N' otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"The doctor has given you your diet, in which each character corresponds to some food that you should eat.  You also know what you have eaten for breakfast and lunch, in which each character corresponds to a type of food that you have already eaten that day. You have decided that you will eat all of the remaining food in your diet during dinner, and you want to print that as a String (sorted in alphabetical order). If you have cheated in anyway (either by eating too much of one type of food, or by eating some food that is not in the dietPlan), you should print the String \\\"CHEATER\\\" (quotes for clarity).\\n\",\n    \"id\": 1248,\n    \"input\": \"Input contains several test cases. The first line of input contains an integer N that represents the number of test cases. \\n                    Each test cases is composed by three strings, each of them in a separated line and representing food from diet, breakfast and lunch, respectively.\\n                    Each string will contain from 0 to 26 ('A'-'Z'), and can be empty.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Diet Plan\",\n    \"output\": \"For each test case print a string that represents food should eat during your dinner,\\n                    or the string \\\"CHEATER\\\" if you have cheated during your diet.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By TopCoder*  USA\\r\",\n    \"category\": \"Strings\",\n    \"description\": \"\\r\\n                \\r\\n                    Write a program that receives a secret message, and returns this coded message.\\r\\n                    The message is encrypted with a cipher called rot13. Rot13 works as follows, for each \\r\\n                    letter is assigned an index, based on its position in the alphabet. a = 1, b = 2, c = 3, ..., z = 26. \\r\\n                    Each letter of the message should be moved 13 places to the right, if the end of the \\r\\n                    alphabet is reached, the count starts at the first character of the alphabet. \\r\\n                    For example, the character \\\"a\\\" (quotes only to exemplify) would be mapped to \\\"n\\\", \\\"y\\\" to \\\"l\\\", \\\"f\\\" to \\\"s\\\", and so on.\\r\\n                    The same process is also made to uppercase. Any non-alphabetic characters must be \\r\\n                    transferred to the output unchanged.\\r\\n\\r\",\n    \"id\": 1249,\n    \"input\": \"\\r\\n                \\r\\n                    The input consist in many test cases. Each test case is composed by a line that contains a message with at least 1 up to 50 characters including, \\r\\n                    containing letters, numbers, and the following symbols: !@#$%^&*()-_=+[]{}|;':,./<>?\\\"\\r\\n\\r\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Rot13\",\n    \"output\": \"\\r\\n                \\r\\n                    For each line of input, print a line in the output with the message encoded in the rot13 method.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You've reached one of the last bosses in the new hit 2-D\\n                    side-scrolling action game, KiloMan. The boss has a large gun\\n                    that can shoot projectiles at various heights. For each shot,\\n                    KiloMan can either stand still or jump. If he stands still and\\n                    the shot is at height 1 or 2, then he gets hit.  If he jumps\\n                    and the shot is at a height above 2, then he is also hit.\\n                    Otherwise, he is not hit. Given the height of each shot and a\\n                    sequence of jumps, how many hits will KiloMan take?\",\n    \"id\": 1250,\n    \"input\": \"The input contains several test cases. The first line of\\n                    input contain an integer N that indicates the\\n                    number of test cases.  Each test case is composed by three lines and starts with a line\\n                    containing the number of shots S (1 \\u2264 S \\u2264 50). \\n                    The second line contains S integers, \\n                    that represent the pattern of heights at which the\\n                    shots are being fired. Each element of pattern will be between\\n                    1 and 7, inclusive. The third line of input contains the string\\n                    'jumps', that represents the sequence of jumps that KiloMan\\n                    will attempt; 'J' means he will jump and 'S' means he will\\n                    stand still. For example, if the first number of the pattern is\\n                    3 and the first character of jumps is 'J', then KiloMan will\\n                    jump right as a shot is fired at height 3 (and thus he will be\\n                    hit).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"KiloMan\",\n    \"output\": \"For each case, your program should print an integer\\n                    representing the number of times KiloMan is hit.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Shahriar Manzoor,  Bangladesh\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tGiven a line of text you will have to find out the frequencies of the ASCII characters present in it. The given lines will contain none of the first 32 or last 128 ASCII characters. Of course lines may end with \\u2018\\\\n\\u2019 and \\u2018\\\\r\\u2019 but always keep those out of consideration.\",\n    \"id\": 1251,\n    \"input\": \"\\tSeveral lines of text are given as input. Each line of text is considered as a single input. Maximum length of each line is 1000 characters.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Tell me the Frequencies!\",\n    \"output\": \"\\tPrint the ASCII value of the ASCII characters which are present and their frequency according to the given format below. A blank line should separate each set of output. Print the ASCII characters in the ascending order of their frequencies. If two characters are present the same time print the information of the ASCII character with higher ASCII value first. Input is terminated by end of file.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Shahriar Manzoor,  Bangladesh\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\tHmm! Here you are asked to do a simple sorting. You will be given N numbers and a positive integer M. You will have to sort the N numbers in ascending order of their modulo M value. If there is a tie between an odd number and an even number (that is their modulo M value is the same) then the odd number will precede the even number. If there is a tie between two odd numbers (that is their modulo M value is the same) then the larger odd number will precede the smaller odd number and if there is a tie between two even numbers (that is their modulo M value is the same) then the smaller even number will precede the larger even number. For remainder value of negative numbers follow the rule of C programming language: A negative number can never have modulus greater than zero. E.g. -100 MOD 3 = -1, -100 MOD 4 = 0 etc.\",\n    \"id\": 1252,\n    \"input\": \"\\tThe input file contains many sets of inputs. Each set starts with two integers N (0 < N \\u2264 10000) and M (0 < M \\u2264 10000) which denotes how many numbers are within this set. Each of the next N lines contains one number each. These numbers should all fit in 32-bit signed integer. Input is terminated by a line containing two zeroes.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Sort! Sort!! And Sort!!!\",\n    \"output\": \"\\tThe first line of each set contains the value of N and M. The next N lines \\n\\tcontain N numbers, sorted according to the rules mentioned above. Print the last two zeroes of the input file in the output file also.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"Julius Caesar used a system of cryptography, now known as Caesar Cipher, which shifted each letter 2 places further through the alphabet (e.g. 'A' shifts to 'C', 'R' shifts to 'T', etc.). At the end of the alphabet we wrap around, that is 'Y' shifts to 'A'.\\n                    We can, of course, try shifting by any number.\",\n    \"id\": 1253,\n    \"input\": \"The input contains several test cases. The first line of input contains an integer N\\n                     that indicates the number of test cases. Each test case is composed by two lines. \\n                    The first line contais a string that is a codified sentence. This string will contain between 1 and 50 characters, \\n                    inclusive. Each character is an uppercase letter ('A'-'Z'), that is the codified sentence to this modified Caesar Cipher. The second line contains the number of right shift, this value is between 0 and 25, inclusive.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Caesar Cipher\",\n    \"output\": \"Given an encoded text and a number of shifted letters, decode it to the original sentence, acording to the explanation above and the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"You are in command of a document system that uses tags numeric code to render documents for printing. \\n                    There are a lot of documents with text based tags, you must analyze and convert to numeric tags for \\n                    entry into the system. A tag is initiated by a character '<', which may be followed by letters, \\n                    numbers, spaces or bars, and the tag to complete a character '>'. The tags can not be nested into each other.\\n                \\n                    The following tags are not valid:\\n                    \\\">HI\\\", \\\"<a<b>c>\\\", \\\"<a b c><\\\", \\\"<a<b>\\\".\\n                \\n                \\n                    The following tags are valid:\\n                    \\\"/=<>HI\\\", \\\"/<>H=I<>/\\\", \\\"<><><><>\\\", \\\"<a=/><b==//bb><c223>\\\", \\\"<a b c>\\\".\\n                \\n                \\n                    For comparisons between the characters should be disregarded case sensitive.\\n\",\n    \"id\": 1254,\n    \"input\": \"There is many test cases. Each test case consist of three lines. The first line contains the original tag in the text of this document, \\n                    which will only contain letters (a-z, A-Z), and its size will be between 1 and 10 characters inclusive. The second line contains the tag \\n                    number by which the original tag is to be replaced, which is a number between 1 and 1000 inclusive. The third and last line will be between \\n                    1 and 50 characters inclusive, and \\tmay contain letters (a-z, A-Z), numbers (0-9), less-than sign (<), greater-than sign (>), signs equals \\n                    (=), bars (/), or blanks. All '<' and '>' are only used in tags.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Tag Replacement\",\n    \"output\": \"Convert the text of the document is given in the input, using to specifications given above and print \\n                    in a single line, the new text document with the new tags, for more information see the example below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Sumudu Fernando  Canada\",\n    \"category\": \"Strings\",\n    \"description\": \"\\tIn this problem we are interested in the frequency of letters in a given line of text.\\n\\t\\n        Specifically, we want to know the most frequently occurring letter(s) in the text, ignoring case (to be clear, \\\"letters\\\" refers precisely to the 26 letters of the alphabet).\",\n    \"id\": 1255,\n    \"input\": \"\\tThe input contains many test cases. The first line contains an integer N that indicates the number of test cases. Each test case consists of a single line of text. The line may contain non-letter characters, but is guaranteed to contain at least one letter and less than 200 characters in total.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Letter Frequency\",\n    \"output\": \"\\tFor each test case, output a line containing the most frequently occurring letter(s) from the text in lowercase (if there are ties, output all such letters in alphabetical order).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brasil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Hash tables are used to store elements based on the absolute value of their keys and collision handling techniques. To calculate an address where should be stored a determinated key, it uses a function called hash function which transforms the key in one of the available addresses in the table.\\n                \\n                    Let's assume that an application uses a hash table with 13 base addresses (indexes 0 through 12) and uses the dispersion function h(x) = x mod 13, where x is the key whose base address would be calculated.\\n                \\n                    If x = 49, the hash function will return 10, indicating the location (address) where this key should be stored. If we needed insert the key 88 in the same application, the calculation returns the same value 10, a collision will occurs. Treatment of collisions is used to solve conflicts in cases where more than one key is mapped to the same address. This treatment may consider key address recalculation or exterior chaining.\\n                \\n                    So the teacher asked you to write a program that calculates the address for many keys in some tables, with functions of spreading and treatment of collision by exterior chaining.\",\n    \"id\": 1256,\n    \"input\": \"The input contains many test cases. The firs line of input contains an integer N indicating the number of test cases. \\n                    Each test case is composed by two lines. The first one contains a integer\\u00a0\\u00a0M\\u00a0\\n                    (1 \\u2264\\u00a0M\\u00a0\\u2264 100)\\u00a0that indicates the number of base addresses \\n                    in the table (usually a prime number) followed by an space and a integer \\n                    C (1 \\u2264 C \\u2264 200) that indicates the among of keys to be stored. \\n                    The second one contains each one of the C keys (with value between 1 and 200), separated by an white space.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Hash Tables\",\n    \"output\": \"The output must be printed like the following examples, where the quantity of lines of each test case is determinated by the value of M. A blank line should separate each set of output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"You will be given many input lines with strings. The value of each character in input is computed as follows:\\n                    \\n                    Value = (Alphabet Position) + (Element of input) + (Position in Element)\\n                    \\n                    All positions are 0-based. 'A' has alphabet position 0, 'B' has alphabet position 1, ... \\n                    The returned hash is the sum of all character values in input. For example, if input is:\\n                    \\n                    CBA\\n                    DDD\\n                    \\n                    then each character value would be computed as follows:\\n                    \\n                    2 = 2 + 0 + 0 : 'C' in element 0 position 0\\n                        2 = 1 + 0 + 1 : 'B' in element 0 position 1\\n                        2 = 0 + 0 + 2 : 'A' in element 0 position 2\\n                        4 = 3 + 1 + 0 : 'D' in element 1 position 0\\n                        5 = 3 + 1 + 1 : 'D' in element 1 position 1\\n                        6 = 3 + 1 + 2 : 'D' in element 1 position 2\\n                    \\n                    The final hash would be 2+2+2+4+5+6 = 21.\",\n    \"id\": 1257,\n    \"input\": \"The input contains many test cases. The first line of input contains an integer N that \\n                    indicates the amount of test cases. Each test case begin with an integer L \\n                    (1 \\u2264 L \\u2264 100) that indicates the \\n                    quantity of following lines. Each of these L lines will contains a string with up to \\n                    50 uppercase letters ('A' - 'Z').\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Array Hash\",\n    \"output\": \"For each test case print the hash calculated according to the above explanation.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI\\u00a0\\u00a0Brasil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\n                    Professor Rolien and their Computer Science students are making a polo shirt that need to be both beautiful and inexpensive. After some meetings, it was agreed with the students that would be made \\u200b\\u200bonly black shirts but the students could choose between the color details (white or red). Therefore, Rolien needs your help to arrange the lists for all classes for those that want to by the shirt, relating these shirts by color details, size (P: small), M or (G:large) and lastly by name.\",\n    \"id\": 1258,\n    \"input\": \"The input contains several test cases. Each test case begins with a integer and positive \\n                    N (1 \\u2264 N \\u2264 60), that indicates the amount of shirts that will be made for that class. The next N*2 lines contains information of each shirt (will be two lines of information for each shirt). The first line will contain the student's name and the second line will contain the color of the shirt details (\\\"branco\\\" -white or \\\"vermelho\\\" -red) followed by a space and the size of the shirt \\\"P\\\" \\\"M\\\" or \\\"G\\\". The input ends when the value of N equals zero (0) and this number should not be processed.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"T-Shirts\",\n    \"output\": \"For each test case print the information sorted by color details in ascending order, followed by size in descending order and at last, by name in ascending order, as shown below.\\n                \\n                    Note: should be printed a blank line between two test cases.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Considering the input of non-negative integer values\\u200b\\u200b, sort these numbers \\u200b\\u200baccording to the following criteria: First the even in ascending order followed by the odd in descending order.\",\n    \"id\": 1259,\n    \"input\": \"The first line of input contains a positive integer number N (1 < N < 105). This is the number of following input lines. The next N lines contain, each one, a integer non-negative number.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Even and Odd\",\n    \"output\": \"Print all numbers according to the explanation presented above. Each number must be printed in one line as shown below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gordon V. Cormack  Canada\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\n                \\n                    Hardwoods are the botanical group of trees that have broad leaves, produce a fruit or nut, and generally go dormant in the winter.\\n                \\n                    America's temperate climates produce forests with hundreds of hardwood species -- trees that share certain biological characteristics. Although oak, maple and cherry all are types of hardwood trees, for example, they are different species. Together, all the hardwood species represent 40 percent of the trees in the United States.\\n                \\n                    On the other hand, softwoods, or conifers, from the Latin word meaning \\\"cone-bearing,\\\" have needles. Widely available US softwoods include cedar, fir, hemlock, pine, redwood, spruce and cypress. In a home, the softwoods are used primarily as structural lumber such as 2x4s and 2x6s, with some limited decorative applications.\\n                \\n                    Using satellite imaging technology, the Department of Natural Resources has compiled an inventory of every tree standing on a particular day. You are to compute the total fraction of the tree population represented by each species.\",\n    \"id\": 1260,\n    \"input\": \"The first line is the number of test cases, followed by a blank line. Each test case of your program consists of a list of the species of every tree observed by the satellite; one tree per line. No species name exceeds 30 characters. There are no more than 10,000 species and no more than 1,000,000 trees. There is a blank line between each consecutive test case.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Hardwood Species\",\n    \"output\": \"For each test case print the name of each species represented in the population, in alphabetical order, followed by the percentage of the population it represents, to 4 decimal places. Print a blank line between 2 consecutive data sets.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Gordon V. Cormack\\u00a0\\u00a0Canada\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Each employee of a bureaucracy has a job description - a few paragraphs that describe the responsibilities of the job. The employee's job description, combined with other factors, such as seniority, is used to determine his or her salary.\\n                    \\n                    The Hay Point system frees the Human Resources department from having to make an intelligent judgement as to the value of the employee; the job description is merely scanned for words and phrases that indicate responsibility. In particular, job descriptions that indicate control over a large budget or management over a large number of people yield high Hay Point scores. You are to implement a simplified Hay Point system.\\n                    \\n                    You will be given a Hay Point dictionary and a number of job descriptions. For each job description you are to compute the salary associated with the job, according to the system.\",\n    \"id\": 1261,\n    \"input\": \"The first line of input contains 2 positive integers:\\u00a0M (M\\u00a0\\u2264 1000), the number of words in the Hay Point dictionary, and\\u00a0N\\u00a0(N\\u00a0\\u2264 100), the number of job descriptions.\\u00a0M\\u00a0lines follow; each contains a word (a string of up to 16 lower-case letters) and a dollar value (a real number between 0 and 1,000,000). Following the dictionary are the\\u00a0N\\u00a0job descriptions.\\n                \\n                    Each job description consists of one or more lines of text; for your convenience the text has been converted to lower case and has no characters other than letters, numbers, and spaces. \\n                    Each job description is terminated by a line containing a period.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Hay Points\",\n    \"output\": \"For each job description, output the corresponding salary computed as the sum of the Hay Point values for all words that appear in the description. Words that do not appear in the dictionary have a value of 0.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"In many computer systems, multiple processes can read from the same resource during the same clock cycle,\\n                    but only a single process can write to the resource during a clock cycle.  Reads and writes cannot be mixed\\n                    during the same clock cycle.  Given a history of the reads and writes that occurred during a particular\\n                    computation as a String trace, and an int procs representing the number of processes used by\\n                    the computation, calculate the minimum duration of the computation in clock cycles.  The trace\\n                    represents each read as an 'R' and each write as a 'W'.\\n                    \\n                    For example, if trace is \\\"RWWRRR\\\" and procs is 3, then the minimum number of clock\\n                cycles is 4: one for the first read, one each for the two writes, and one for the last group of reads.\",\n    \"id\": 1262,\n    \"input\": \"The input contains several test cases. Each test case is composed by two lines. The first line has a\\n                    string made out of 1 to 50 characters, where each can be either 'R' or 'W'.  The second line contains an\\n                    integer P\\u00a0(1 \\u2264\\u00a0P\\u00a0\\u2264 10), which represents the number\\n                    of processes as a direct indicator of how many read operations can be performed simultaneously. The input\\n                    stream ends in EOF.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Multiple Reading\",\n    \"output\": \"For each test case determine and print the minimum number of clock cycles required to run the given trace. For further reference see the examples below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"An alliteration consists of two or more consecutive words which start with the same letter (ignoring case).\\n                    You are given a sequence of words. Find out the number of alliterations in this sequence, considering only\\n                    alliterations which cannot be extended.\",\n    \"id\": 1263,\n    \"input\": \"The input contains several test cases. Each input line will be a test case, containing at least one and no longer\\n                    than 100 words, separated by a single space character. All words are strings of 1 to 50 lowercase or uppercase\\n                    letters  ('A'-'Z','a'-'z'). The input stream ends in EOF.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Alliteration\",\n    \"output\": \"For each test case print the number of alliterations found among the given words. For further reference see the examples below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Shahriar Manzoor\\u00a0\\u00a0Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tHave you heard the fact \\u201cThe base of every normal number system is 10\\u201d ? Of course, I am not talking about number systems like Stern Brockot Number System. This problem has nothing to do with this fact but may have some similarity.\\n                    \\n\\tYou will be given an N based integer number R and you are given the guaranty that R is divisible by (N-1). You will have to print the smallest possible value for N. The range for N is\\u00a0(2 \\u2264\\u00a0N\\u00a0\\u2264 62)\\u00a0and the digit symbols for 62 based number is (0..9 and A..Z and a..z). Similarly, the digit symbols for 61 based number system is (0..9 and A..Z and a..y) and so on.\",\n    \"id\": 1264,\n    \"input\": \"\\tEach line in the input file will contain an integer number N of any integer base (2..62) with up to 1024 digits. You will have to determine what is the smallest possible base of that number for the given conditions. No invalid number will be given as input.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"An Easy Problem!\",\n    \"output\": \"\\tIf number with such condition is not possible output the line \\u201csuch number is impossible!\\u201d For each line of input there will be only a single line of output. The output will always be in decimal number system.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"by Alessandro Luna Almeida\\u00a0 Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"A very famous DJ has been recently invited to play in the closing party of a Computer Science conference. Trying to impress the participants of the event, he decided to use a program in order to choose the songs he would play at this party. However, the result was a disaster, since the way the program chose the songs was quite weird and repetitive.\\n                \\n                    First of all, the DJ has selected N songs among the set of songs he had available. The program used by the DJ then labels each of the songs using one different character from `A' to `Z'. The i -th song is labeled using the i -th character of the sequence `A'-`Z'. The program chooses the songs to be played in the party in the order that their labels appear in the following infinite sequence of characters: first come all the words with one character in lexicographical order; then all the words with two characters in lexicographical order; then all the words with three characters in lexicographical order; and so on. For N = 3 , this sequence would be ABCAAABACBABBBCCACBCCAAAAABAACABAABBABC...\\n                \\n                    At the end of the party, some people asked the DJ if he remembered which the first song played was. Others would like to know which the 25-th was, and so on. The DJ remembers nothing but the strange pattern of repetition of the songs, so he urges you to help him and write a program which answers such queries.\",\n    \"id\": 1265,\n    \"input\": \"The input contains several test cases. Each test case consists of three lines. The first line of a test case contains two integers N and Q indicating respectively the number of songs chosen by the DJ and the number of queries made by the participants ( 1 \\u2264 N \\u2264 26 and 1 \\u2264 Q \\u2264 1000 ). In the second line, there will be the N titles of the songs (the title of a song is a chain of alphanumerical characters of at least one and at most 100 characters) separated by single spaces. The last line of a test case contains a sequence of queries. Each query is a number k (1 \\u2264 k \\u2264 100000000) corresponding to the k -th song played in the party. The end of the input is indicated by N = Q = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Computer DJ\",\n    \"output\": \"For each query number k in a test case, you shall print a single line containing the name of the k -th song played in the party. A blank line must follow each test case.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\tBy Ricardo Anido\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tIs this crazy weather the result of mankind's continuous interference in the environment? Or is it simply the normal cycle of climate changes through the ages? No one seems to know for sure, but the fact is that natural phenomena such as tornadoes and hurricanes have been hitting our country with more force and frequence than in past decades.\\n\\t\\n\\tOne tornado has just hit Silverado Farm, a cattle and milk producer, and made havoc. The barn roof was torn, several trees were uprooted, the farm truck was overturned... But the worst thing is that the tornado destroyed several sections of the fence that surrounded the property. The fence was very well built, with concrete posts every two meters, and barbed wire enclosing the whole farm perimeter (the perimeter, in meters, is an even number, making the fence perfectly regular).\\n\\t\\n\\tNow several posts are broken or missing, and there are gaps in the fence. To prevent the cattle from getting out of the property, the fence must be restored as quickly as possible. Reconstructing the fence to its original form, with concrete posts, will take a long time. In the meantime, the farm owners decided to close the gaps with a temporary fence, made with wooden posts. Wooden posts will be placed in exactly the same spots where missing/broken concrete posts were/are. However, in order to make the temporary reconstruction faster and less expensive, the owners decided to use fewer posts: a wooden post will be used to replace a missing/broken concrete post only if the length of the barbed wired needed to close the distance to the next post (wooden or concrete) exceeds four meters.\\n\\n\\t\\n\\n\\tGiven the description of which posts are missing/broken, you must write a program to determine the smallest number of wooden posts needed to close all the gaps in the fence, according to the owners' decision.\",\n    \"id\": 1266,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case contains one integer N indicating the number of original concrete posts in the fence (5 \\u2264\\u00a0N\\u00a0\\u2264\\u00a05000). The second line of a test case contains N integers Xi indicating the state of each concrete post after the tornado (0 \\u2264\\u00a0Xi\\u00a0\\u2264\\u00a01 for 1 \\u2264 i \\u2264\\u00a0N) . If\\u00a0Xi\\u00a0= 1 post i is in good condition, if\\u00a0Xi\\u00a0= 0 post i is broken or missing. Note that post N is next to post 1. The end of input is indicated by N = 0 .\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Tornado!\",\n    \"output\": \"\\tFor each test case in the input your program must produce one line of output, containing an integer indicating the smallest number of wooden posts that are needed to restore the fence, according to the owners' decision.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Ricardo Anido\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\tPascal University, one of the oldest in the country, needs to renovate its Library Building, because after all these centuries the building started to show the e\\ufb00ects of supporting the weight of the enormous amount of books it houses.\\u00a0\\n                    \\n\\tTo help in the renovation, the Alumni Association of the University decided to organize a series of fund-raising dinners, for which all alumni were invited. These events proved to be a huge success and several were organized during the past year. (One of the reasons for the success of this initiative seems to be the fact that students that went through the Pascal system of education have fond memories of that time and would love to see a renovated Pascal Library.)\\u00a0\\n                    \\n\\tThe organizers maintained a spreadsheet indicating which alumni participated in each dinner. Now they want your help to determine whether any alumnus or alumna took part in all of the dinners.\",\n    \"id\": 1267,\n    \"input\": \"\\tThe input contains several test cases. The \\ufb01rst line of a test case contains two integers N and D indicating respectively the number of alumni and the number of dinners organized (1 \\u2264 N \\u2264 100 and 1 \\u2264 D \\u2264 500). Alumni are identi\\ufb01ed by integers from 1 to N. Each of the next D lines describes the attendees of a dinner, and contains N integers\\u00a0Xi\\u00a0indicating if the alumnus/alumna i attended that dinner (Xi\\u00a0= 1) or not (Xi\\u00a0= 0). The end of input is indicated by N = D = 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Pascal Library\",\n    \"output\": \"\\tFor each test case in the input your program must produce one line of output, containing either the word \\u2018yes\\u2019, in case there exists at least one alumnus/alumna that attended all dinners, or the word \\u2018no\\u2019 otherwise. The output must be written to standard output.\\n    \\n\\tAlumna: a former female student of a particular school, college or university.\\u00a0\\n\\tAlumnus: a former male student of a particular school, college or university.\\u00a0\\n\\tAlumni: former students of either sex of a particular school, college or university.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Paulo Oliva\\u00a0\\u00a0Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\tYou have been hired to explore enemy territory. It is risky business, you know that. So, you\\u2019d better be prepared! The enemy has placed a number of security points all over his country, from which radars are detecting any moving vehicle within their range of cover. Any such detected object will be immediately destroyed. Fortunately enough, you have been given by your government a map of the enemy territory, consisting of coordinates and radius of coverage of each radar. You have also a list of local informers (together with their locations) that you should contact in order to obtain valuable information. Your mission is to try to contact one of these informers, preferably the one with highest insider-coefficient. The insider-coeficient of each informer is simply the distance from the informer to the border of the country, where such a distance is de\\ufb01ned as the minimum over all distances from the location of the informer to each point of the border. In intuitive sense, the informer with highest insider-coefficient is that who is located as inside the country as possible, and will presumably have more valuable information about the country.\\n    \\n\\tYour \\ufb01rst thought is then to design a computer program which will check if there is a path from your initial location, always the point (2000, 2000), to any of the informers\\u2019 location, without crossing any region which is covered by radar. Whenever possible, the program should indicate which reachable informer is the one to be contacted, according to the insider-coe\\ufb03cient criteria described above.\\n\\n\\t\\n\\n\\tFigure 1: Possible Scenario The enemy country has the shape of a simple polygon (not necessarily convex).\\n\\n\\tRecall that a polygon is called simple if it is described by a single, non-intersecting boundary. The borders of the country will be given as a sequence of X,Y-coordinates corresponding to the sequence of vertexes of the polygon. You may assume that all the radar\\u2019s centres and the informers\\u2019 coordinates are located within the country\\u2019s border. Notice, however, that the area covered by the radars might include regions outside the border.\\n    \\n\\tIn the sample scenario of Figure 1, informer I1 cannot be contacted since he is inside the region covered by radars. The informer I2, although outside the radar\\u2019s region, can\\u2019t be contacted either since any trip to his location would go through the deadly radar-covered regions. Both informers I3 and I4 could be contacted, so that informer I4 is chosen since his insider-coeffcient is greater than that of I3.\",\n    \"id\": 1268,\n    \"input\": \"\\tThe input consists of several test cases. The \\ufb01rst line of each test case describes the border of the enemy country, in the format\\n    \\n\\tB X1 Y1 X2 Y2 ... XB YB \\n    \\n\\twhere 3 \\u2264 B \\u2264 1000 is the number of border points, and each Xi Yi is the coordinate of the i-th point in the border. The border of the country consists of line segments between points i and i + 1, and between points B and 1. The second line gives the number of informers and their respective positions, in the format\\n    \\n\\tN X1 Y1 X2 Y2 ... XN YN \\n    \\n\\twhere 1 \\u2264 N \\u2264 1000 is the number of informers, and Xi Yi is the coordinate of the i-th informer. The third line describes the position and radius of the radars, in the format\\n    \\n\\tM X1 Y1 R1 X2 Y2 R2 ... XM YM RM \\n    \\n\\twhere 1 \\u2264 M \\u2264 30 is the number of radars, Xi Yi is the coordinate of the i-th radar, and Ri is the radius of the i-th radar. All the coordinates are integers 0 \\u2264 X, Y \\u2264 1000. The radius of the radars are integers in the range 1 \\u2264 R \\u2264 1000. A test case where B = N = M = 0 indicates the end of the input. This test case must not be processed.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Mission Impossible\",\n    \"output\": \"\\tFor each test case in the input, your program must produce one line containing either \\u201cMission impossible\\u201d or \\u201cContact informer K\\u201d, where \\u201cK\\u201d is the index of the informer (as given in the input) with highest insider-coe\\ufb03cient which can be reached by the spy without going inside any radar coverage area. If there are more than one informer satisfying this condition, choose the one among them with lowest index.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\tBy Alessandro Luna Almeida\\u00a0\\u00a0Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tInternational Concrete Projects Company (ICPC) is a construction company which specializes in building houses for the high-end market. The company is the most pro\\ufb01table company in the world due to a very effcient land division method which has been used in its housing development projects since last year. Recently there was a chaos at ICPC, because employees refused to work arguing that they did not earn enough. Worried about the loss in pro\\ufb01t due to the strike, the company board proposed a new method to calculate the salaries which was luckily accepted by everyone.\\n\\tThe salary of a worker re\\ufb02ects the signi\\ufb01cance of the tasks that he/she has to perform and is in\\ufb02uenced by the way tasks depend on each other.\\n    \\n\\tA task X depends on a task Y if either (i) X depends directly on Y , or (ii) there exists a task T such that X depends directly on T and T depends on Y . Since in ICPC all tasks must be performed, there is no circularity in the task dependence relation. Also, a task may be performed by more than one worker.\\u00a0A basic signi\\ufb01cance is associated with each task re\\ufb02ecting its importance (for example, developing the effcient land division method is more important than building the houses themselves). The signi\\ufb01cance of a task T is then de\\ufb01ned as the basic signi\\ufb01cance of T plus the signi\\ufb01cance of every task which depends directly on T. \\n    Note that if no other tasks depend directly on task T, the basic signi\\ufb01cance and the signi\\ufb01cance of T are the same.\\n    \\n\\tThe salary of a worker is the sum of the signi\\ufb01cances of all the tasks he/she performs which do not depend on any other task performed by him/her. In other words, a value equal to the signi\\ufb01cance of task X will be added to the salary of a worker W that works in task X if there is no other task Y on which X depends, and W works also in Y .\\n    \\n\\tICPC wants you to help them to determine the salary of each of its employees.\",\n    \"id\": 1269,\n    \"input\": \"\\tThe input contains several test cases. The \\ufb01rst line of a test case contains two integers T and E indicating respectively the number of tasks and the number of employees (1 \\u2264 T \\u2264 1000 and 1 \\u2264 E \\u2264 1000). Tasks are numbered from 1 to T and employees from 1 to E.\\n    \\n\\tThen it will come a sequence of lines describing the tasks 1 to T in ascending order. Each task is described by two lines. The \\ufb01rst of these lines contains three integers BS, ND and NE, representing respectively the basic signi\\ufb01cance of the task, the number of tasks that depend directly on it, and the number of employees who perform it (1 \\u2264 BS \\u2264 1000, 0 \\u2264 ND < T and 1 \\u2264 NE \\u2264 E). The second line contains ND +\\u00a0NE integers corresponding \\ufb01rst to the ND directly dependent tasks and then the NE employees who perform the task. The end of input is indicated by T = E = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"ICPC Strikes Again\",\n    \"output\": \"\\tTest cases must be answered in the order that they were presented. For each test case you must print:\\n\\t\\u2022 a single line containing \\ufb01ve stars ***** indicating the beginning of the case\\n\\t\\u2022 for each employee i, one line with two integers i and s, separated by a blank, meaning that i has a salary of s.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\tBy Guilherme Ottoni\\u00a0\\u00a0Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"A far away developing country is trying to improve its communication infrastructure. Currently, each city in the country has its local computer network, but there is no fast communication between the cities. The Autonomous Communications Ministry (ACM) of the country decided to create a fast, optical \\ufb01ber network connecting every city. In order to do this, they decided to take the following approach. Pairs of cities were chosen to have an optical \\ufb01ber link installed between them. The choice was such that there will be only one \\ufb01ber path between any pair of cities, in order to reduce the cost. The pairs of cities were chosen considering many factors, including analysis of estimated demand and distance between the cities.\\n                    \\n\\tEach city will have one optical router installed, which will be used to connect all the optical links with one end in that city. In each city, there are many different locations where the optical router can be installed. Your task, as an engineer working on this project, is to develop a computer program to pick up the locations in each city in order to minimize the total length of \\ufb01ber that will be necessary for this project.\",\n    \"id\": 1270,\n    \"input\": \"\\tThe input consists of multiple test cases. Each test case starts with a line containing the number of cities N (1 \\u2264 N \\u2264 1000) in the country. Following, for each city, there is a sequence of lines. The \\ufb01rst line contains the (unique) name of the city (only capital letters, at most 15), and the number of candidate sites Ci (1 \\u2264 Ci \\u2264 50) where the optical router can be installed. Then, there is one line per candidate site, containing two integers X and Y representing the coordinates of the site (\\u221210000 \\u2264 X, Y \\u2264 10000). You should use the euclidean distance between the sites to compute the corresponding \\ufb01ber length necessary to connect them. After the description of each city with its candidate sites, there are N \\u2212 1 lines, each containing the names of two cities that will have a \\ufb01ber link installed between them. The end of the input is indicated by N = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Optical Fiber\",\n    \"output\": \"\\tFor each test case, your program should print a line with the minimum total length of optical \\ufb01ber to connect the requested cities. Your answer should be rounded to one decimal digit.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Vin\\u00edcius Fortuna\\u00a0\\u00a0Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"One way that scientists try to measure how one species evolved into another is to \\ufb01nd out how the ancestor\\u2019s genome changed into the other\\u2019s. Closely related species have several genes in common and it turns out that a good way to compare them is comparing how the common genes changed place.\\n                \\n                    One of the most common mutations that change the order of a genomes genes is the reversal. If we model a genome as a sequence of N genes with each gene being an integer from 1 to N, then a reversal is a mutation that changes the genome by reverting the order of a block of consecutive genes. A reversal can be described by two indexes (i, j), (1 \\u2264 i \\u2264 j \\u2264 N), indicating that it reverts the order of the genes within indexes from i to j. So, when it is applied to a genome [g1, . . . , gi\\u22121, gi , gi+1, . . . , gj\\u22121, gj , gj+1, . . . , gN], we obtain the genome [g1, . . . , gi\\u22121, gj , gj\\u22121, . . . , gi+1, gi , gj+1, . . . , gN]. As an example, the reversal (3, 6) applied to the genome [1, 2, 3, 4, 5, 6, 7] gives [1, 2, 6, 5, 4, 3, 7]. If after that the reversal (1, 3) is applied, we obtain the genome [6, 2, 1, 5, 4, 3, 7].\\n                \\n                    A scientist studying the evolution of a species wants to try a series of reversals on its genome. Then he wants to query the \\ufb01nal position of several genes. Would you take the challenge and help him?\",\n    \"id\": 1271,\n    \"input\": \"The input contains several test cases. The \\ufb01rst line of a test case contains one integer N indicating the number of genes in the genome (1 \\u2264 N \\u2264 50000). You may assume that the initial order of the genes is the sequence of integers from 1 to N in increasing order. The second line of a test case contains one integer R (0 \\u2264 R \\u2264 1000) indicating the number of reversals to be applied to the genome. Then R lines follow, each containing two integers i, j (1 \\u2264 i \\u2264 j \\u2264 N), separated by a single space, indicating the two indexes that de\\ufb01ne the corresponding reversal. After the description of the reversals there is a line containing one integer Q (0 \\u2264 Q \\u2264 100), indicating the number of queries for genes, followed by Q lines, where each line contains an integer representing a gene whose \\ufb01nal position you must determine.\\n                    The end of input is indicated by N = 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Where Are My Genes\",\n    \"output\": \"For each test case in the input your program must produce Q + 1 lines of output. The \\ufb01rst line must contain the string \\u201cGenome\\u201d followed by the number of the test case. The following Q lines must contain one integer each representing the answers of the queries.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"Some texts contain hidden messages. In the context of this problem, the hidden message of a text is composed of the first\\n                    letter from each word in the text, in the order they appear.\\n                \\n                    Given a text consisting of only lowercase letters and spaces, return the hidden message.  A word is a\\n                    maximal sequence of consecutive letters.  There may be multiple spaces between words. The text may start in spaces, end in spaces or even contain\\n                    spaces only.\",\n    \"id\": 1272,\n    \"input\": \"The input contains many test cases. The first line contains an integer N that indicates the number of test cases. Each test case consists of a single line containing from 1 to 50 characters, that can be lowercase letters (\\u2018a\\u2019-\\u2018z\\u2019) or spaces (\\u2018\\u00a0\\u2019). Watch out for leading and trailing spaces!\\n                    Note: In the sample imput, spaces were replaced by small dots (\\u2018\\u00b7\\u2019) to provide a better understanding of the samples.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Hidden Message\",\n    \"output\": \"For each test case print the text that is hidden in the input.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"We have some words and we want to right justify them, that is, align them to the right. Create a program that reads a word and print it all right justified, in the same order as they appear in the input.\\n\",\n    \"id\": 1273,\n    \"input\": \"The input contains several test cases. The first line of a test case will contain an integer N (1 \\u2264 N  \\u2264 50) indicating the number of following words. Each word is composed of up to 50 uppercase letters (\\u2018A\\u2019-\\u2018Z\\u2019) and will contain at least one letter. The end of input is indicated by N = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Justifier\",\n    \"output\": \"For each test case print the words padded on the left with space characters so that they are all the same length as the\\n                    longest word found in that text. Print an empty line between all the test cases. There must be no trailing spaces printed out, and you should discard\\n                    any unnecessary leading spaces, so that at least one line on every output word starts with a letter.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rodrigo Cardoso\\u00a0\\u00a0Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Pretty Networks Inc. is a company that builds some curious artifacts whose purpose is to transform a set of input values in a given way. The transformation is determined by what they call a p-network.\\u00a0The following picture shows an example of a p-network.\\n                \\n                    \\n                \\n                    In the general case, a p-network of order N and size M, has N horizontal wires numbered 1, 2, . . . N, and M vertical strokes. Each stroke connects two consecutive wires. There are no two di\\ufb00erent strokes touching the same point of any wire, and there is no stroke touching the leftmost or rightmost point of any wire. The above example is a p-network of order 5 and size 9.\\n                    \\n                    The transformation determined by a p-network can be explained using a set of rules that govern the way a p-network should be traversed:\\n                    1. start at the leftmost point of one wire, and go to the right;\\n                    2. each time a stroke appears move to the connected wire, and keep going from left to right;\\n                    3. stop when the rightmost point of one wire is reached.\\n                    If starting at wire i the traversing ends at wire j, we say that the p-network transforms i into j, and we denote this with i \\u2192 j. In the above example the p-network determines the set of transformations\\n                \\n                    {1 \\u2192 3, 2 \\u2192 5, 3 \\u2192 4, 4 \\u2192 1, 5 \\u2192 2} .\\n                \\n                    Pretty Networks Inc. hired you to solve the following p-network design problem: given a number N and a set of transformations {1 \\u2192 i1, 2 \\u2192 i2, . . . N \\u2192 iN}, decide if a p-network of order N can be built to accomplish them and, in this case, give one that does it.\\n                    When there exists a solution with a certain size, in many cases there is another solution with a greater size. Scientists at Pretty Networks Inc. have stated that if there exists a solution for a p-network design problem, then there is a solution with size less than 4N2 . Therefore, they are interested only in solutions having a size below this bound.\",\n    \"id\": 1274,\n    \"input\": \"The input has a certain number of p-network design problems. Each problem is described in just one line that contains the values N, i1, i2, . . . iN , separated by a single blank space. The value N is the order of the desired p-network, i.e., its number of wires (1 \\u2264 N \\u2264 20). The values i1, i2, . . . iN represent that the p-network should determine the set of transformations {1 \\u2192 i1, 2 \\u2192 i2, . . . N \\u2192 iN} (1 \\u2264 ij \\u2264 N, for each 1 \\u2264 j \\u2264 N). The input ends with a line in which N = 0; this line must not be processed as a p-network design problem.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"P-Networks\",\n    \"output\": \"For each p-network design problem in the input, the output must contain a single line. If the problem has no solution the line must be No solution. Otherwise the line must contain a description of any p-network (with N wires and less than 4N2 strokes) that accomplishes the requested set of transformation. This description is given by a set of values M, s1, s2, . . . sM, where consecutive values are separated by a single blank space. The value M is the size of the p-network, i.e., its number of strokes. The values s1, s2, . . . sM describe the strokes of the p-network; it should be understood that the i-th stroke from left to right, connects the wires si and 1 + si (1 \\u2264 i \\u2264 M). Notice that 0 \\u2264 M < 4N2 , while 1 \\u2264 si < N for each 1 \\u2264 i \\u2264 M.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\tBy Ricardo Anido\\u00a0\\u00a0Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"\\tLight Up is a puzzle set in a rectangular board divided in smaller squares. Some squares in the board are \\u201cempty\\u201d (white squares the \\ufb01gure below), some squares are \\u201cbarriers\\u201d (dark squares in the \\ufb01gure below). A barrier square may have an integer number i associated to it (0 \\u2264 i \\u2264 4).\\n\\n\\t\\n\\n\\tFigure: (a) Puzzle with 6 rows, 7 columns and 7 barriers; (b) a solution to the puzzle.\\n    \\n\\tIn this puzzle the goal is to \\u201clight up\\u201d all the empty squares by placing lamps in some of them (lamps are depicted as circles in the \\ufb01gure). Each lamp illuminates the square it is on, plus all squares in line with it, horizontally or vertically, up to a barrier square or the board end.\\n\\tA winning con\\ufb01guration satis\\ufb01es the following conditions:\\n\\t\\u2022 all empty squares must be lit;\\n\\t\\u2022 no lamp may be lit by another lamp;\\n\\t\\u2022 all numbered barrier squares must have exactly that number of lamps adjacent to them (in the four squares above, below, and to the side);\\n\\t\\u2022 non-numbered barrier squares may have any number of lamps adjacent to them.\\n\\t\\n\\tYou must write a program to determine the smallest number of lamps that are needed to reach a winning con\\ufb01guration.\",\n    \"id\": 1275,\n    \"input\": \"\\tThe input contains several test cases. The \\ufb01rst line of a test case contains two integers N, M indicating respectively the number of rows and the number of columns of the board (1 \\u2264 N \\u2264 7, 1 \\u2264 M \\u2264 7). The second line contains one integer B indicating the number of barrier squares (0 \\u2264 B \\u2264 N \\u00d7 M). Each of the next B lines describe a barrier, containing three integers R, C and K, representing respectively the row number (1 \\u2264 R \\u2264 N), the column number (1 \\u2264 C \\u2264 M) and the barrier number (\\u22121 \\u2264 K \\u2264 4); K = \\u22121 means the barrier is unnumbered. The end of input is indicated by N = M = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Light Up\",\n    \"output\": \"\\tFor each test case in the input your program must produce one line of output, containing either an integer indicating the smallest number of lamps needed to reach a winning con\\ufb01guration, in case such a con\\ufb01guration exists, or the words \\u2018No solution\\u2019.\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"A letter range is a set of alphabetically consecutive\\n                    letters taken from the lowercase alphabetic characters 'a'\\n                    through 'z'. The lowest and highest letters of the range,\\n                    separated by a colon (the character ':'), are used to\\n                    represent a letter range. For example, the range \\\"a:c\\\"\\n                    represents the consecutive letters 'a', 'b', and 'c'.\\n                    (quotes are not part of the range). The range \\\"w:z\\\"\\n                    represents the letters 'w', 'x', 'y', and 'z'. The range\\n                    \\\"m:m\\\" respresents the single letter 'm'.\",\n    \"id\": 1276,\n    \"input\": \"Each line of input is one test case. Every test case\\n                    contains one string, that can be empty and which letters\\n                    may not be in alphabetical order, of lowercase letters\\n                    (a-z) and spaces.\\n                \\n                    The string will contain between 0 and 50 characters,\\n                    inclusive.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Letter Range\",\n    \"output\": \"For each test case in the input, your program must print\\n                    the letter ranges ordered alphabetically by the low value\\n                    of each range. Letter ranges contained in the result must\\n                    represent the largest possible sequences of increasing\\n                    consecutive letters found in the input text. Ignore space\\n                    characters and duplicate letters contained in the\\n                    input.\\n                \\n                    If the string is empty just print a new line.\\n                \\n                    For example, the string \\\"fb xee ac\\\" has three letter\\n                    ranges, \\\"a:c\\\" (the letters a, b, and c), \\\"e:f\\\" (the letters\\n                    e and f) and \\\"x:x\\\" (the letter x). Please refer to the\\n                    examples.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"The students at your university have lately picked up the annoying habit of missing classes. To fix this problem your board has decided\\n                    to only allow students with 75% or higher attendance to sit for the exams.\\n                    \\n                    From a list of students' names and their respective attendance records, print out the list of students who did not attend to enough\\n                    classes and will be denied to sit for exams.\",\n    \"id\": 1277,\n    \"input\": \"The input contains several test cases. The first input line will contain an integer\\n                    T indicating the number of test cases that follow.\\n                    Each test case is composed of three input lines:\\n                    \\n                The first line of a test case will contain an integer\\n                        N (0 \\u2264\\u00a0N\\u00a0\\u2264 100) indicating the number of students in the class.\\n                    The second line will contain\\n                        N student names with up to 50 chars each, separated by a single space character. All names will contain only uppercase or lowercase letters\\n                        (\\u2018A\\u2019-\\u2018Z\\u2019,\\u2018a\\u2019-\\u2018z\\u2019).\\n                    The third line will contain N attendance records, corresponding\\n                        to their respective students from the previous line. The attendance records will be separated by a single space character, and contain\\n                        only \\u2018A\\u2019, \\u2018P\\u2019 and \\u2018M\\u2019 characters. A \\u2018P\\u2019 indicates that the student was present in a\\n                        class, \\u2018A\\u2019 shows that he was absent (he did not attend) and \\u2018M\\u2019 shows that he was absent for a class but\\n                        submitted a doctor's note then that class is not counted when calculating his attendance percentage. An attendance record will contain\\n                        at least one \\u2018A\\u2019 or \\u2018P\\u2019 character.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Short Attendance\",\n    \"output\": \"For each test case print out the names of all the students who do not meet the attendance requirements, separated by a single space character.\\n                    Do not leave trailing spaces in the end of each line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Bruno Santos  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"\\tWe have some texts and we want to right justify them, that is, align them to the right.\\n\\tCreate a program that reads a text, formats it right justifies all of its lines, printing them in the same order as they\\n\\tappear in the input.\",\n    \"id\": 1278,\n    \"input\": \"\\tThe input contains several test cases. The first line of a test case will contain an integer N (1 \\u2264 N \\u2264 100) indicating the number\\n\\tof lines that form the text. Each of the following N lines will contain a text, composed of 1 to 50 uppercase letters\\n\\t(\\u2018A\\u2019-\\u2018Z\\u2019) or spaces (\\u2018 \\u2019). All text lines will contain at least one letter. There may be\\n\\tmore than one space character between words. Also, there may be leading and trailing spaces in the input lines.\\n\\tThe end of input is indicated by N = 0.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Justifier II\",\n    \"output\": \"\\tFor each test case print the text lines with a single space character between words, and padded on the left with space characters so\\n\\tthat all the lines will have the same length as the longest line existing in that text. Print an empty line between all the test cases.\\n\\tThere must be no trailing spaces printed out, and you should discard any unnecessary leading spaces, so that at least one line on every\\n\\ttext starts with a letter.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Shahriar Manzoor\\u00a0\\u00a0Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tThe ancient race of Gulamatu is very advanced in their year calculation scheme. They understand what leap year is (A year that is divisible by 4 and not divisible by 100 with the exception that years that are divisible by 400 are also leap year.) and they have also similar festival years. One is the Huluculu festival (happens on years divisible by 15) and the Bulukulu festival (Happens on years divisible by 55 provided that is also a leap year). Given an year you will have to state what properties these years have. If the year is not leap year nor festival year, then print the line 'This is an ordinary year.' The order of printing (if present) the properties is leap year-->huluculu-->bulukulu.\",\n    \"id\": 1279,\n    \"input\": \"\\tInput will contain several years as input. Each year will be in separate lines. Input is terminated by end of file. All the years will not be less than 2000 (to avoid the earlier different rules for leap years) but can have more than 1000 digits.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Leap Year or Not Leap Year and \\u2026\",\n    \"output\": \"\\tFor each input, output the different properties of the years in different lines according to previous description and sample output. A blank line should separate the output for each line of input. Note that there are four different properties.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Humberto Longo, UFG  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\tJohn will help his friend Joseph in a hard and laborious task, but they still not reach an agreement on the John\\u2019s payment by the aid in the task. After some discussion, John, who is very good at math, proposed the following: initially each one will de\\ufb01ne, without the other knowing it, a certain value, i.e. John will de\\ufb01ne a value n and Joseph will de\\ufb01ne a value m. So if Joseph propose do not to pay anything, then he will have to pay n + 1 dollars! If John say that do not want to receive anything and Joseph propose paying 1 or more dollars, Joseph will pay the same amount that would pay if John had asked for a dollar and Joseph had proposed to pay only m - 1 dollars! If both values are greater than zero, Joseph will pay the same value that would have to pay if he had proposed m - 1 dollars and John wanted to receive the same that would receive if Joseph had proposed to pay m dollars and he had asked for n - 1 dollars!! They also agreed that if Joseph was willing to pay at most 3 dollars, then John could charge up to 200 dollars. On the other hand, if Joseph was willing to pay 4 dollars, then John only could charge up to 2 dollars! After hours discussing these rules, they \\ufb01nally agreed that it would be too laborious calculate the amount owed by Joseph. So write a program that calculates the amount of dollars Joseph will have to pay to John, according to these rules.\",\n    \"id\": 1280,\n    \"input\": \"\\tThe \\ufb01rst line of the input contains an integer T\\u00a0that indicates the number of test cases. The T following lines contain two integers\\u00a0m\\u00a0(0 \\u2264\\u00a0m\\u00a0\\u2264 4) and\\u00a0n\\u00a0(0 \\u2264\\u00a0n\\u00a0\\u2264 200), separated by a space, representing the values that Joseph want to pay and John want to receive, respectively.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Friends\",\n    \"output\": \"\\tThe output should contain, for each test case, an integer equal to the value that Joseph will have to pay to John.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Ms. Parcinova usually go to the public market to buy fruits and vegetables. She asked her daughter, Mangojata, to help her doing a program that calculates the amount she needs bring to be able to buy everything of her shopping list, considering the amount of each  fruit or vegetable and prices of these items.\",\n    \"id\": 1281,\n    \"input\": \"The first line of input contains an integer N that indicates the amount of trips of Dona Parcinova to the market (which is nothing more than the number of test cases). Each test case starts with an integer  M  which is the quantity of products with prices that are available for sale at the market. Follow  M  products with their respective prices per unit or Kg. The next input line contains an integer P (1 \\u2264 P \\u2264 M) that indicates the list of products that Ms. Parcinova want to buy. Follow P  lines containing a string (with up to 50 chars) and an integer, representing each item with the desired quantity of this item.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Going to the Market\",\n    \"output\": \"Each test case produce one output line, containing the money spent by Ms. Parcinova  in the following format: R$ followed by a space and followed by the spent money, with 2 places after the decimal point according to the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\tBy Ray Williams Robinson Valiente\\u00a0\\u00a0Cuba\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tA mining company extracts terbium, a rare metal used for constructing lightweight magnets, from river sand. They mine the Long River at N mining points, each of them identified by its distance from the river source. At each mining point, a relatively small but highly valued heap of mineral ore is extracted from the river.\\n                    \\n\\tTo collect the mineral ore, the company regroups the N produced heaps into a smaller number of K heaps, each located at one of the initial mining points. The newly formed heaps are then collected by trucks.\\n                    \\n\\tTo regroup the N heaps, they use a barge, which in practice can carry any amount of mineral ore because it is very large. The barge starts at the river source and can only travel downriver, so the heap produced at a mining point X can be taken to a mining point Y only if Y > X. Each heap is moved completely to another mining point, or not moved at all. The cost of moving a heap of weight W from a mining point X to a mining point Y is W(Y - X). The total cost of the regrouping is the sum of the costs for each heap movement. Notice that a heap which is not moved has no influence on the total cost.\\n                    \\n\\tGiven the values for N and K, the N mining points, and the weight of the heap each mining point produced, write a program that calculates the minimum total cost to regroup the N initial heaps into K heaps.\",\n    \"id\": 1282,\n    \"input\": \"\\tEach test case is described using several lines. The first line contains two integers N and K denoting respectively the number of initial heaps and the desired number of heaps after regrouping (1 \\u2264 K < N \\u2264 1000). Each of the next N lines describes one of the initial heaps with two integers X and W indicating that the mining point X produced a heap of weight W (1 \\u2264 X, W \\u2264 106 ). Within each test case the heaps are given in strictly ascending order considering their mining points.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Arranging Heaps\",\n    \"output\": \"\\tFor each test case output a line with an integer representing the minimum total cost to regroup the N initial heaps into K heaps.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Fidel Schaposnik, UNLP  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\tPaul and Carole like to play a game with S stones and B boxes numbered from 1 to B. Before beginning the game they arbitrarily distribute the S stones among the boxes from 1 to B -1, leaving box B empty. The game then proceeds by rounds. At each round, first Paul chooses a subset P of the stones that are in the boxes; he may choose as many stones as he wants from as many boxes as he wants, or he may choose no stones at all, in which case P is empty. Then, Carole decides what to do next: she can either promote the subset P and discard the remaining stones (that is, those stones not chosen by Paul in the first step); or she may discard the subset P and promote the remaining stones.\\n    \\n\\tTo promote a given subset means to take each stone in this subset and move it to the box with the next number in sequence, so that if there was a stone in this subset inside box b, it is moved to box b + 1. To discard a given subset means to remove every stone in this subset from its corresponding box, so that those stones are not used in the game for the remaining rounds. The figure below shows an example of the first two rounds of a game.\\n\\n\\t\\n\\n\\tPaul and Carole play until at least one stone reaches box number B, in which case Paul wins the game, or until there are no more stones left in the boxes, in which case Carole wins the game. Paul is a very rational player, but Carole is a worthy rival because she is not only extremely good at this game, but also quite lucky. We would like to know who is the best player, but before that we must first understand how the outcome of a game depends on the initial distribution of the stones. In particular, we would like to know in how many ways the S stones can initially be distributed among the first B -1 boxes so that Carole can be certain that she can win the game if she plays optimally, even if Paul never makes a mistake.\",\n    \"id\": 1283,\n    \"input\": \"\\tEach test case is described using one line. The line contains two integers S (1 \\u2264 S \\u2264 200) and B (2 \\u2264 B \\u2264 100), representing respectively the number of stones and the number of boxes in the game.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Boxes and Stones\",\n    \"output\": \"\\tFor each test case output a line with an integer representing the number of ways in which the S stones may be distributed among the first B -1 boxes so that Carole is certain that she can win the game. Because this number can be very large, you are required to output the remainder of dividing it by 109 + 7.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber, UBA  Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"A research team is developing a new technology to save time when typing text messages in mobile devices. They are working on a new model that has a complete keyboard, so users can type any single letter by pressing the corresponding key. In this way, a user needs P keystrokes to type a word of length P.\\n                \\n                    However, this is not fast enough. The team is going to put together a dictionary of the common words that a user may type. The goal is to reduce the average number of keystrokes needed to type words that are in the dictionary. During the typing of a word, whenever the following letter is uniquely determined, the cellphone system will input it automatically, without the need for a keystroke. To be more precise, the behavior of the cellphone system will be determined by the following rules:\\n                \\n                    1. The system never guesses the first letter of a word, so the first letter always has to be input manually by pressing the corresponding key.\\n                \\n                    2. If a non-empty succession of letters c1c2...cn has been input, and there is a letter c such that every word in the dictionary which starts with c1c2...cn also starts with c1c2...cnc, then the system inputs c automatically, without the need of a keystroke. Otherwise, the system waits for the user.\\n                \\n                    For instance, if the dictionary is composed of the words \\\"hello\\\", \\\"hell\\\", \\\"heaven\\\" and \\\"goodbye\\\", and the user presses \\\"h\\\", the system will input \\\"e\\\" automatically, because every word which starts with \\\"h\\\" also starts with \\\"he\\\". However, since there are words that start with \\\"hel\\\" and with \\\"hea\\\", the system now needs to wait for the user. If the user then presses \\\"l\\\", obtaining the partial word \\\"hel\\\", the system will input a second \\\"l\\\" automatically. When it has \\\"hell\\\" as input, the system cannot guess, because it is possible that the word is over, or it is also possible that the user may want to press \\\"o\\\" to get \\\"hello\\\". In this fashion, to type the word \\\"hello\\\" the user needs three keystrokes, \\\"hell\\\" requires two, and \\\"heaven\\\" also requires two, because when the current input is \\\"hea\\\" the system can automatically input the remainder of the word by repeatedly applying the second rule. Similarly, the word \\\"goodbye\\\" needs just one keystroke, because after pressing the initial \\\"g\\\" the system will automatically fill in the entire word. In this example, the average number of keystrokes needed to type a word in the dictionary is then (3 + 2 + 2 + 1)/4 = 2.00.\\n                \\n                    Your task is, given a dictionary, to calculate the average number of keystrokes needed to type a word in the dictionary with the new cellphone system.\",\n    \"id\": 1284,\n    \"input\": \"Each test case is described using several lines. The first line contains an integer N representing the number of words in the dictionary (1 \\u2264 N \\u2264 105 ). Each of the next N lines contains a non-empty string of at most 80 lowercase letters from the English alphabet, representing a word in the dictionary. Within each test case all words are diferent, and the sum of the lengths of all words is at most 106.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cellphone Typing\",\n    \"output\": \"For each test case output a line with a rational number representing the average number of keystrokes needed to type a word in the dictionary. The result must be output as a rational number with exactly two digits after the decimal point, rounded if necessary.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ines Kereki, ORT  Uruguai\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The inhabitants of Nlogonia are very superstitious. One of their beliefs is that street house numbers that have a repeated digit bring bad luck for the residents. Therefore, they would never live in a house which has a street number like 838 or 1004.\\n                \\n                    The Queen of Nlogonia ordered a new seaside avenue to be built, and wants to assign to the new houses only numbers without repeated digits, to avoid discomfort among her subjects. You have been appointed by Her Majesty to write a program that, given two integers N and M, determines the maximum number of houses that can be assigned street numbers between N and M, inclusive, that do not have repeated digits.\",\n    \"id\": 1285,\n    \"input\": \"Each test case is described using one line. The line contains two integers N and M, as described above (1 \\u2264 N \\u2264 M \\u2264 5000).\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Different Digits\",\n    \"output\": \"For each test case output a line with an integer representing the number of street house numbers between N and M, inclusive, with no repeated digits.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Thobias, Fernando & Luiz, URI  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Joseph is a motorcycle that works making deliveries for a pizzeria. His salary is based on the number of pizzas delivered. How this pizzeria is growing he asked his friend Roberto to help him in deliveries. Since Roberto is not working at this time, he agreed to take the worst orders (whose deliveries will be more time consuming).\\n                \\n                    So whenever they come to the pizzeria before departing for new deliveries, Joseph determines the amount of pizzas that Roberto should deliver and select that will have more time consuming. For example, if there are 22 pizzas to be delivered and Joseph determine that at most 10 of these pizzas (can be less) would be delivered by Roberto, these must necessarily be among the requests that take longer to be delivered. This is illustrated in the first test case, where Roberto will deliver the second, third and sixth order, summing 8 pizzas and 62 minutes (23 + 21 + 18). If Roberto was really deliver 10 pizzas, he would have to deliver the second, third and fourth order and it would take 59 minutes (23 + 21 + 16), which is not the goal of Joseph because in this case would be delivered more pizzas in a shorter time.\\n                \\n                    In order to make the division of this work, Joseph asked a friend in academic computer science to develop a program that would determine how long his friend Roberto will take to deliver these worst deliveries (in time consuming).\",\n    \"id\": 1286,\n    \"input\": \"The input contains many test cases. Each test case contains in the first line an integer number N (1 \\u2264  N \\u2264 20) that indicates the number of orders. The following line contains an integer number P (1 \\u2264 P \\u2264 30) that indicates the maximum number of pizzas that can be delivered by Roberto. Each one of the next N lines contains a order with the total time to be delivered and the among of pizzas of this order, respectively. The end of input is represented by N = 0, and can't be processed.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Motoboy\",\n    \"output\": \"For each test case, the input must be printed as an integer number that determinates the time spent by Roberto to delivery the pizzas followed by one space and the text \\\"min.\\\", like the given examples.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"Computers have made their way into a significant\\n                    percentage of the homes in the world, and as programmers we\\n                    are responsible for designing user interfaces that everyone\\n                    can use. User interfaces need to be flexible so that if a\\n                    user makes some non-fatal error, the interface can still\\n                    figure out what the user meant.\\n                \\n                    Your task is to write a program which processes a text\\n                    input representing an integer, however, because this is a\\n                    friendly user interface, we cut the user a little more\\n                    slack:\\n                \\n                    1. If the user types the letter \\\"O\\\" or \\\"o\\\", we assume that they meant the digit \\\"0\\\".\\n                \\n                    2. If the user types the letter \\\"l\\\", we assume that they meant the digit \\\"1\\\".\\n                \\n                    3. Commas and spaces are allowed, but are not processed (ignore them).\\n                \\n                    If the user has still not entered a valid non-negative\\n                    integer (even with the rules above), print the string\\n                    \\\"error\\\". Overflow (a value greater than 2147483647) is\\n                    considered invalid and \\\"error\\\" should be printed.\",\n    \"id\": 1287,\n    \"input\": \"Each line of input is one test case and contains one string n. This n will contain between 0 and 50, inclusive, letters,\\n                    numbers, spaces, or commas.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Friendly Int Parser\",\n    \"output\": \"For each test case in the input, your program must print the integer represented by n or \\\"error\\\" if n is not a valid non-negative integer. Note: an empty string does not represent a valid integer.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rafael A., Lucas D. & Marlon T., URI  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The \\\"Destruction Cannon\\\" game is very simple to be understood. You have been assigned a mission to destroy a castle, knowing that it has an integer number R, which represents the value of its max resistance. To accomplish your mission, you've received a cannon that is loaded with lead, and it has a maximum loading capacity K expressed in kilos. It is possible to exist pieces of lead with the same weight but with different destructive power and this is not so important. To each projectil that hit the castle, its destruction power amount must be subtracted from the castle total resistance.\\n                 \\n                    Considering that the cannon can be loaded only once, respecting your limits of kilos, your task is to load the cannon with projectiles that do not exceed its load limit but do the most damage possible to know if the mission has been completed or not.\",\n    \"id\": 1288,\n    \"input\": \"The first line of input contains the number of test cases. Each test case begin with a line containing a integer N  (1 \\u2264 N \\u2264 50), that represents the number of lead pieces available. Follow N lines containing two integer X and Y each, representing respectively the amount of destruction power and projectil (bullet) weight. The next line contains an integer K (1 \\u2264 K \\u2264 100) that represents the load capacity of the cannon and the last line of each test case contains an integer R that indicates the castle total resistance.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Destruction Cannon\",\n    \"output\": \"The output is based on whether the total damage of the loads fired is equal or bigger than the castle's total resistance. If true, the program should print \\\"Missao completada com sucesso\\\", else the output must be \\\"Falha na missao\\\".\\u00a0\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Probability has always been an integrated part of computer algorithms. Where the deterministic algorithms have failed to solve a problem in short time, probabilistic algorithms have come to the rescue. In this problem we are not dealing with any probabilistic algorithm. We will just try to determine the winning probability of a certain player.\\n                \\n                    \\u200bA game is played by throwing a dice like thing (it should not be assumed that it has six sides like an ordinary dice). If a certain event occurs when a player throws the dice (such as getting a 3, getting green side on top or whatever) he is declared the winner. There can be N such player. So the first player will throw the dice, then the second and at last the N th player and again the first player and so on. When a player gets the desired event he or she is declared winner and playing stops. You will have to determine the winning probability of one (The I th) of these players.\",\n    \"id\": 1289,\n    \"input\": \"Input will contain an integer S (S \\u2264 1000), at first, which indicates how many sets of inputs are there. The next S lines will contain S sets of inputs. Each line contain an integer N (N \\u2264 1000) which denotes the number players, a floating point number p which indicates the probability of the happening of a successful event in a single throw (If success means getting 3 then p is the probability of getting 3 in a single throw. For a normal dice the probability of getting 3 is 1/6), and I (I\\u00a0\\u2264\\u00a0N) the serial of the player whose winning probability is to be determined (Serial no varies from 1 to N). You can assume that no invalid probability (p) value will be given as input.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"What is the Probability?\",\n    \"output\": \"For each set of input, output in a single line the probability of the I th player to win. The output floating point number will always have four digits after the decimal point as shown in the sample output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Special Box Company (SBC) is a small family-owned and family-run business which produces decorated carton boxes for wrapping gifts. The boxes are hand-made, produced individually from \\ufb01ne materials. When accepting an order from a client, they always produce a few more boxes than needed, to keep a stock of boxes to be sold in the future, if needed. Over the years their stock has been growing, with boxes all over the place, and they decided they needed to organize it a bit more. They have therefore made a list registering the dimensions of every box in their stock.\\n                \\n                    SBC has just received an order from a client that must be delivered tomorrow, so there is no time to produce new boxes. The client wants a certain number N of boxes all of the same size; each box will be used to pack one item of dimensions X, Y and Z. As the carton used in the\\n                    boxes is very thin, you may assume that a box of size (X, Y, Z) would \\ufb01t perfectly the item the client wants to wrap. If there are not at least N boxes that \\ufb01t perfectly, the client wants N boxes that \\ufb01t the items as tightly as possible. The box size that \\ufb01ts the items as tightly as possible is the one which minimizes the empty space when the item is put inside the box. An item can be rotated in any direction to be accomodated inside a box; therefore, a box of size (X, Y, Z) is as good as a box of size (Y, Z, X), for example. \\n                \\n                    Can you help SBC \\ufb01nding whether they can ful\\ufb01ll the customer order?\",\n    \"id\": 1290,\n    \"input\": \"The input consists of several test cases. The \\ufb01rst line of a test case contains two integers N and M, indicating respectively the number of boxes the client needs to buy (1 \\u2264 N \\u2264 1500) and the number of boxes in the stock list (1 \\u2264 M \\u2264 1500). The second line contains three integers X, Y and Z, representing the dimensions of the item the client wants to wrap (0 < X, Y, Z \\u2264 50). Each of the next M lines contains three integers A, B and C representing the dimensions of a box in the stock list (0 < A, B, C \\u2264 50). A test case with N = 0 indicates the end of the input.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Very Special Boxes\",\n    \"output\": \"For each test case in the input your program must produce one line, containing either: \\n\\n                \\n                    the single word \\u2018impossible\\u2019, in case it is not possible to ful\\ufb01ll the client\\u2019s order (because there are not at least N boxes of the same size in stock that can contain the item); or\\n                    one integer V , which speci\\ufb01es the volume of empty space left when one of the N items is packed in one of the boxes chosen.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"In the image below you can see a square ABCD, where AB = BC = CD = DA = a. Four arcs are drawn taking the four vertexes A, B, C, D as centers and a as the radius. The arc that is drawn taking A as center, starts at neighboring vertex B and ends at neighboring vertex D. All other arcs are drawn in a similar fashion. Regions of three different shapes are created in this fashion. You will have to determine the total area if these different shaped regions.\\n\\n                \\u200b\",\n    \"id\": 1291,\n    \"input\": \"The input file contains a floating-point number a (0\\u00a0\\u2264\\u00a0a\\u00a0\\u2264\\u00a010000) in each line which indicates the length of one side of the square. Input is terminated by end of file.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Is This Integration?\",\n    \"output\": \"For each line of input, output in a single line the total area of the three types of region (filled with different patterns in the image above). These three numbers will of course be floating point numbers with three digits after the decimal point. First number will denote the area of the striped region, the second number will denote the total area of the dotted regions and the third number will denote the area of the rest of the regions.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"You are asked to place the largest possible square inside a regular pentagon (whose internal angles are same and all the sides are same in length). You are given the information that one vertex of the square will be coincident with a vertex of the square as shown in the figure below. You will have to find the length of a side of the square when a side of the regular pentagon is given. \\n\\n                \\n                    \\n                    \\u200bFig: Square in a pentagon.\",\n    \"id\": 1292,\n    \"input\": \"The input file contains several lines of input. Each line contains a floating point number F (0 \\u2264 F \\u2264 100000) which indicates the length of a side of the pentagon. Input is terminated by end of file.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Trouble with a Pentagon\",\n    \"output\": \"For each line of input produce one line of output containing a floating point number with ten digits after the decimal point. This number indicates the largest possible side of a square that fits in the pentagon.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"In this problem we will discuss the problems of a modern Romeo and a modern Juliet. You are asked to solve their problems so that they don\\u2019t have to be a tragic pair like that of Shakespeare\\u2019s. As usual the family of Romeo and Juliet have hostile relationships and so they are locked up in two different places M and N. Two cannons are placed in location A and two cannons are placed in location B. One cannon of location A is aimed towards M and the other aimed towards N. The same thing applies to the two cannons of location B. The M and N are always on the opposite side of AB.\\n\\n                \\u200bFig: Partial Scenario of Romeo & Juliet\\n\\n                \\n                    The movements of the cannons, which are aimed at M, are interrelated; the angle between their directions is constant. So angle CMD ((5 degree) \\u2264 (angle CMD) < (80 degree)) is constant. Same rule applies to the other two cannons. That\\u2019s angle ENF ((5 degree) \\u2264 (angle ENF) < (80 degree)) is also constant. All these things are shown in the picture above. But another important thing is missing in the figure above is that the locations N, A, M are always kept in a straight line. The reason behind this is very strange. A robot has been hired to guard Romeo and Juliet. It has two eyes at the opposite sides of its head and this robot is positioned in point A. To be precise, A, B and angle CMD and angle ENF are constants in one scenario and all other positions or values are variable. Also remember that point M must always remain pointed by the two cannons. Same thing applies to point N.\\n                \\n                    The problem is that in starry nights Mr. Romeo sings the song \\u201cBlue Nights\\u201d of \\u201cMichael Learns to Rock\\u201d in a loud voice and both parents don\\u2019t want Ms. Juliet to hear this song. So they want to place the houses (M and N) as far as possible preserving all the constraints explained before. Your job is to measure this maximum distance between M and N and inform it to Romeo, so that he can decide whether he should sing or not or what should be his voice level.\",\n    \"id\": 1293,\n    \"input\": \"The input file contains several lines of input. Each line contains six floating-point numbers, x1, y1, x2, and y2 (0 \\u2264 x1, y1, x2, y2 \\u226410000) CMD, ENF. Here (x1, y1) is the coordinate of A, (x2, y2) is the coordinate of B, CMD is the angle between the directions of cannons pointed towards M and ENF is the similar value for point N. Input is terminated by end-of-file.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Romeo & Juliet!\",\n    \"output\": \"For each line of input you should produce one line of output, which contains a floating-point number F. F is the maximum possible distance between Romeo\\u2019s house and Juliet\\u2019s house and it has three digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"In the following figure you can see a rectangular card. The width of the card is W and length of the card is L and thickness is zero. Four (x*x) squares are cut from the four corners of the card shown by the black dotted lines. Then the card is folded along the magenta lines to make a box without a cover.\\n\\n                \\u200b\\n                Fig: Cutting & Folding the Card.\\u00a0\\n\\n                Given the width and height of the box, you will have to find the value of x for which the box has maximum and minimum volume.\",\n    \"id\": 1294,\n    \"input\": \"The input file contains several lines of input. Each line contains two positive floating-point numbers\\u00a0L (0 < L < 10000) and W (0 < W < 10000); which indicate the length and width of the card respectively.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"The Largest and Smallest Box\",\n    \"output\": \"For each line of input you should give one line of output, which should contain two or more floating-point numbers separated by a single space. The floating-point numbers should contain three digits after the decimal point. The first floating point number indicates the value for which the volume of the box is maximum and then the next values (sorted in ascending order) indicate the values for which the volume of the box is minimum.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Given a set of points in a two dimensional space, you will have to find the distance between the closest two points.\",\n    \"id\": 1295,\n    \"input\": \"The input file contains several sets of input. Each set of input starts with an integer N (0 \\u2264 N \\u2264 10000), which denotes the number of points in this set. The next N lines contain\\u00a0the coordinates of N two-dimensional points. The first of the two numbers denotes the X-coordinate and the latter denotes the Y-coordinate. The input is terminated by a set whose N = 0. This set should not be processed. The value of the coordinates will be less than 40000 and non-negative.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Closest Pair Problem\",\n    \"output\": \"For each set of input produce a single line of output containing a floating point number (with four digits after the decimal point) which denotes the distance between the closest two points. If there is no such two points in the input whose distance is less than\\u00a010000, print the line\\u00a0INFINITY.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Given the length of three medians of a triangle you will have to find out the area of the triangle. Unless you are weak in geometry you should know that median of a triangle is formed by connecting any vertex of a triangle and the mid-point of its opposite edge. So a triangle has three medians.\",\n    \"id\": 1296,\n    \"input\": \"The input file contains aproximately 1000 lines of input. Each line contains three numbers which denote the length of the medians of a triangle. All the values in the input will be less than 100. Input is terminated by end of file.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Medians\",\n    \"output\": \"For each line of input you should produce one line of output. This line should contain the area of the triangle for the corresponding input. If it is not possible to form a triangle with the given medians, the area of the triangle should be set as -1. The areas should be rounded up to three digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Fidel Schaponik, UNLP  Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Arsenic & Cyanide Mining (ACM) is a corporation that has recently decided to start developing its mines in the lands near your hometown. As a member of the citizen's regulatory committee for ACM's operations, your task is to control how much the corporation can mine from those lands, so that you get to keep the jobs and other benefits without sacrificing the environment and the health of the local residents.\\n                \\n                    The ACM has plans to mine several rectangular patches of land. A patch of land has width W, can be dug up to a maximum depth D, and has a at surface which we consider to be at depth 0. The minerals in a patch are organized in three layers, which may vary in their depth along the width of the patch, but always have the same profile along its whole length. This is why the ACM is only interested in the profile along the width of each patch, and has performed exploratory work in order to precisely determine its shape.\\n                \\n                    \\u200bAs a result, they discovered that the two interfaces between the three layers of minerals can be represented by two functions y1(x) and y2(x), where the first describes the boundary between the top layer and the middle layer, and the second describes the boundary between the middle layer and the bottom layer. These functions are always such that\\n                \\n                -D < y2(x) < y1(x) < 0 for 0 \\u2264 x \\u2264 W ,\\n                \\n                \\n                    so that the layers' boundaries never touch each other. Besides, each function has the form yi(x) = pi(x)/qi(x), where\\n\\n                \\u200b\\n                \\n                \\n                    for i = 1; 2 and a certain integer K. The figure below shows the profiles of two patches of land in the way the ACM represents them. The patch on the left has width W = 6 and depth D = 9, while the patch on the right has W = 8 and D = 10. The boundaries of the layers of each patch are described by the functions defined below them.\\n\\n                \\u200b\\n\\n                \\n                \\n                    The ACM will dig everything in a patch of land up to a certain digging depth d, and then sell all the minerals thus obtained to make a profit. However, the minerals in the top and the bottom layers are essentially worthless, so the profit of the whole operation comes exclusively from those minerals in the middle layer. In fact, the profit is proportional to the area A of the middle layer in the profile that is at depth at most d. Given the description of a patch of land and an integer A, you would like to know the digging depth d you should allow the ACM to dig the patch so that they get an area of minerals from the middle layer in the profile of exactly A. In the figure above you can see the answer for the two test cases in the sample input. For the patch on the left, in order to get an area A = 14 the digging depth must be d = 4.00000, while for the patch on the right an area A = 14 requires a digging depth d = 5.51389.\",\n    \"id\": 1297,\n    \"input\": \"Each test case is described using 5 lines. The first line contains four integers W, D, A and K, where W is the width of the patch of land the ACM wants to mine (1 \\u2264 W \\u2264 8), D is its depth (1 \\u2264 D \\u2264 10), A is the area of the middle layer in the profile that the ACM must get (1 \\u2264 A \\u2264 W x D), and K allows the definition of the interfaces y1(x) and y2(x) as explained above (0 \\u2264 K \\u2264 8). Each of the other lines contains K + 1 integers between -108 and 108, inclusive. The second line contains the coeffificients of p1(x) from P1,0 to P1,K. The third line contains the coeficients of q1(x) from Q1,0 to Q1,K. The fourth line contains the coeficients of p2(x) from P2,0 to P2,K. The fifth line contains the coeficients of q2(x) from Q2,0 to Q2,K. Within each test case A is strictly less than the total area of the middle layer in the profile, and there exists a single value d such that a digging depth d yields an area of minerals from the middle layer in the profile of exactly A. Besides, q1(x) 6= 0, q2(x) 6= 0 and -D < y2(x) < y1(x) < 0, for 0 \\u2264 x \\u2264 W.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Environment Protection\",\n    \"output\": \"For each test case output a line with a rational number representing the depth d that the ACM should be allowed to dig the patch of land so that they get an area of minerals from the middle layer in the profile of exactly A. The result must be output as a rational number with exactly five digits after the decimal point, rounded if necessary.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"By Guilherme Pinto, UFJF  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"A shrimp farm uses a rectangular pond built as a grid with 2N rows and 2N + 1 columns of square cells, for a given integer N. Each cell side is one meter long. The pond has exactly (2N- 1) x N barriers of length two meters, used to temporarily isolate smaller sections inside the pond for breeding different kinds of shrimp. The barriers have their middle points fixed precisely at the integer coordinates (a, b), for all 0 < a < 2N and 0 < b < 2N + 1, where both a and b are odd, or both are even. Each barrier can be rotated around its middle point to change the pond configuration; however, by being rotated, a barrier switches between only two possible positions, always parallel to the pond sides, vertical or horizontal. The left part of the figure below shows a pond configuration, with N = 3.\\n                    \\u00a0\\n\\n                \\n\\n                \\n                    \\n                    At the end of every season the pond is closed for maintenance and cleaning. It must then be reconfigured so that a special machine can sweep the pond floor. The machine starts its work at the top left cell, and needs to pass through every cell exactly once, finishing in the bottom left cell. The right part of the figure shows one such reconfiguration, where six barriers were switched. For this example, though, four barrier switches would have been enough.\\n                    \\n                    You must write a program that given a pond configuration, determines the minimum number of barrier switches needed to reconfigure the pond as specified above. There is always at least one possible way to reconfigure the pond as specified.\",\n    \"id\": 1298,\n    \"input\": \"Each test case is described using several lines. The first line contains an integer N indicating that the pond has 2N rows and 2N + 1 columns ( 1 \\u2264 N \\u2264 300). Each of the next 2N - 1 lines contains a string of N characters describing the orientation of the barriers. In the i-th line, the j-th character indicates the orientation of the barrier whose middle point is at coordinates (i, 2j - 1) if i is odd, or (i, 2j) if i is even, for i = 1, 2,..., 2N - 1 and j = 1, 2,..., N. The character is the uppercase letter 'V'\\u00a0if the orientation is vertical, or the uppercase letter 'H' if it is horizontal.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Fix the Maze\",\n    \"output\": \"For each test case output a line with an integer representing the minimum number of barrier switches needed to reconfigure the pond as specified.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber, UBA  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The Game of Tiles is a game for two players played over a rectangular board in the form of a table of R rows and C columns of square cells called tiles. At the beginning of the game, some of the tiles may be painted black and the rest remain white. Then, Player 1 and Player 2 alternate turns making a move and the first one that cannot make a valid move loses the game. The first move of the game is done by Player 1 and consists of choosing a white tile and writing the number 1 on it. After that, each subsequent move i consists of writing number i on an unused white tile that is adjacent horizontally or vertically (but not diagonally) to the tile numbered i - 1. Note that Player 1 always writes odd numbers and Player 2 always writes even numbers.\\n                \\n                    The following figure shows three examples of possible configurations of a board with R = 3 and C = 4 during a game. On the left it shows the initial configuration. On the center it shows an intermediate state, where cells in gray mark the possible moves for Player 2. And on the right it shows the configuration when the game is won by Player 2, who chose the appropriate move.\\n\\n                \\n                \\u200b\\n\\n                \\n                    Your task is to write a program that given the initial configuration of the board, determines which player will win, if both of them play optimally.\\u200b\",\n    \"id\": 1299,\n    \"input\": \"Each test case is described using several lines. The first line contains two integers R and C representing respectively the number of rows and columns of the board ( 1 \\u2264\\u00a0R, C \\u2264 50). The i-th of the next R lines contains a string Bi of C characters that describes the i-th row of the initial board. The j-th character of Bi is either `.' (dot) or the uppercase letter 'X', representing that the tile at row i and column j is respectively white or black. Within each test case at least one of the tiles is white.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Game of Tiles\",\n    \"output\": \"For each test case output a line with an integer representing the number of the player (1 or 2) who will win the game if both of them play optimally.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber, UBA  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\u200bHeidi has a discrete analog clock in the shape of a circle, as the one in the figure. Two hands rotate around the center of the circle, indicating hours and minutes. The clock has 60 marks placed around its perimeter, with the distance between consecutive marks being constant.\\n                \\n                    The minute hand moves from its current mark to the next exactly once every minute. The hour hand moves from its current mark to the next exactly once every 12 minutes, so it advances five marks each hour.\\n                \\n                    We consider that both hands move discretely and instantly, which means they are always positioned exactly over one of the marks and never in between marks.\\n                \\n                    At midnight both hands reach simultaneously the top mark, which indicates zero hours and zero minutes. After exactly 12 hours or 720 minutes, both hands reach the same position again, and this process is repeated over and over again. Note that when the minute hand moves, the hour hand may not move; however, when the hour hand moves, the minute hand also moves.\\n                \\n                    Heidi likes geometry, and she likes to measure the minimum angle between the two hands of the clock at different times of the day. She has been writing some measures down, but after several years and a long list, she noticed that some angles were repeated while some others never appeared. For instance, Heidi's list indicates that both at three o'clock and at nine o'clock the minimum angle between the two hands is 90 degrees, while an angle of 65 degrees does not appear in the list. Heidi decided to check, for any integer number A between 0 and 180, if there exists at least one time of the day such that the minimum angle between the two hands of the clock is exactly A degrees. Help her with a program that answers this question.\",\n    \"id\": 1300,\n    \"input\": \"Each test case is described using one line. The line contains an integer A \\u200b(0 \\u2264 A \\u2264 180) representing the angle to be checked.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Hours and Minutes\",\n    \"output\": \"For each test case output a line containing a character. If there exists at least one time of the day such that the minimum angle between the two hands of the clock is exactly A degrees, then write the uppercase letter 'Y'. Otherwise write the uppercase letter 'N'.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Renato Parente, IME-USP  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"It's normal to feel worried and tense the day before a programming contest. To relax, you went out for a drink with some friends in a nearby pub. To keep your mind sharp for the next day, you decided to play the following game. To start, your friends will give you a sequence of\\u00a0N\\u00a0integers\\u00a0X1,\\u00a0X2,...,\\u00a0XN. Then, there will be\\u00a0K\\u00a0rounds; at each round, your friends will issue a command, which can be:\\n                \\n                    a\\u00a0change\\u00a0command, when your friends want to change one of the values in the sequence; or\\n                    a\\u00a0product\\u00a0command, when your friends give you two values\\u00a0I,\\u00a0J\\u00a0and ask you if the product\\u00a0XI\\u00a0x\\u00a0XI+1\\u00a0x\\u00a0...\\u00a0x\\u00a0XJ-1\\u00a0x\\u00a0XJ\\u00a0is positive, negative or zero.\\n                \\n                \\n                    Since you are at a pub, it was decided that the penalty for a wrong answer is to drink a pint of beer. You are worried this could affect you negatively at the next day's contest, and you don't want to check if Ballmer's peak theory is correct. Fortunately, your friends gave you the right to use your notebook. Since you trust more your coding skills than your math, you decided to write a program to help you in the game.\",\n    \"id\": 1301,\n    \"input\": \"Each test case is described using several lines. The first line contains two integers\\u00a0N\\u00a0and\\u00a0K, indicating respectively the number of elements in the sequence and the number of rounds of the game (1 \\u2264 N, K \\u2264 105). The second line contains\\u00a0N\\u00a0inteiros\\u00a0Xi\\u00a0 that represent the initial values of the sequence (-100\\u00a0\\u2264\\u00a0Xi\\u00a0\\u2264\\u00a0100 for\\u00a0i\\u00a0= 1, 2, ...,\\u00a0N). Each of the next\\u00a0K\\u00a0lines describes a command and starts with an uppercase letter that is either 'C' or 'P'. If the letter is 'C', the line describes a\\u00a0change\\u00a0command, and the letter is followed by two integers\\u00a0I\\u00a0and\\u00a0V\\u00a0indicating that\\u00a0XI\\u00a0must receive the value\\u00a0V (1 \\u2264 I \\u2264 N\\u00a0e\\u00a0-100 \\u2264 V \\u2264 100). If the letter is `P', the line describes a\\u00a0product\\u00a0command, and the letter is followed by two integers\\u00a0I\\u00a0and\\u00a0J indicating that the product from\\u00a0XI\\u00a0to\\u00a0XJ, inclusive must be calculated (1 \\u2264 I \\u2264 J \\u2264 N). Within each test case there is at least one\\u00a0product\\u00a0command.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Interval Product\",\n    \"output\": \"For each test case output a line with a string representing the result of all the\\u00a0product\\u00a0commands in the test case. The\\u00a0i-th character of the string represents the result of the\\u00a0i-th\\u00a0productcommand. If the result of the command is positive the character must be '+' (plus); if the result is negative the character must be '-' (minus); if the result is zero the character must be '0'.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Ray Williams Robinson Valiente, UCI  Cuba\",\n    \"category\": \"Graph\",\n    \"description\": \"Air traffic regulations in Nlogonia require that each city must register exactly one outbound flight to another city. Passengers can use this flight only in the direction registered, that is, there may be a flight registered from city\\u00a0X\\u00a0to city\\u00a0Y\\u00a0and no flight registered from city\\u00a0Y\\u00a0to city\\u00a0X. Thus, the number of registered flights is equal to the number of cities. This rule, as one can imagine, makes air travel somewhat complicated, but tradition and a strong ruling by the Queen makes any changes difficult. Besides, some companies even make a profit from the problems caused by the rule.\\n                    \\n                    The Association for Couple Matching (ACM) is setting up a new service to help customers find their long lasting soulmates: the Internet Connecting Program for Couples (ICPC). The service consists of computing the minimum total number of flights a couple needs to take to meet each other (perhaps in a city where neither of them lives in). Assuming the couple's starting cities are\\u00a0A\\u00a0and\\u00a0B, the agency will try to find a city\\u00a0C\\u00a0such that\\u00a0C\\u00a0is reachable by air travel from both\\u00a0A\\u00a0and\\u00a0B, and the sum of the number of flights needed to go from\\u00a0A\\u00a0to\\u00a0C\\u00a0and the number of flights needed to go from\\u00a0B\\u00a0to\\u00a0C\\u00a0is minimized. Note that\\u00a0C\\u00a0may be equal to\\u00a0A\\u00a0or\\u00a0B\\u00a0or both.\\n                    \\n                    It will be given to you the list of all available flights, and a list of queries consisting of pairs of cities where the members of a couple live. For each query, you must compute the minimum total number of flights that are needed for them to meet.\",\n    \"id\": 1302,\n    \"input\": \"Each test case is described using several lines. The first line contains an integer N representing the number of cities ( 2 \\u2264 N \\u2264 105). Cities are identified by different integers from 1 to N. The second line contains N integers Fi, where Fi indicates that the registered outbound flight from city i is to city Fi ( 1 \\u2264 Fi \\u2264 N, Fi = i for i = 1, 2,..., N). The third line contains an integer Q representing the number of queries ( 1 \\u2264 Q \\u2264 105). Each of the next Q lines describes a query with two integers A and B indicating the couple's starting cities ( 1 \\u2264 A, B \\u2264 N). Within each test case, if it is possible to travel by air from city X to city Y, the maximum number of flights needed to do so is 104.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Joining Couples\",\n    \"output\": \"For each test case output\\u00a0Q\\u00a0lines. In the\\u00a0i-th line write an integer with the answer to the\\u00a0i-th query. If the corresponding couple can meet by air travel, write the minimum total number of flights that the couple must take to meet one another; if it is impossible for the couple to meet by air travel, write the number '-1'.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"IX Maratona de Programa\\u00e7\\u00e3o IME-USP, 2005   Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"The San Antonio is the city team in the NBA. It has been the champion of its conference several times and revealed several excellent players.\\n\\n\\n    In a\\u00a0basketball\\u00a0championship all\\u00a0the\\u00a0teams play each other in a single round. A win is worth two points and a defeat is worth one point (there are no draws in basketball). In case of ties the team with the best \\\"average basket\\\" gets the lead. The \\\"average basket\\\"is given by the ratio between the number of points scored by the team divided by the number of points received (in the unlikely event of a team winning all league games without losing any baskets, the\\u00a0basket average is given by the average number of points scored).\\u00a0If there is still a tie,\\u00a0the team that scored more points takes advantage. And if the ties persists,\\u00a0the team with the lowest number of entried in the league gets a better position.\\n\\n\\n    Your task in this problem is to make a program that receives the results of the games of the championship and prints the final rank.\",\n    \"id\": 1303,\n    \"input\": \"There are several test cases. For each instance is\\u00a0given the number 0 \\u2264 n \\u2264 100 of teams in the league. The value n = 0 indicates the end of dataset. Next there\\u00a0are n (n-1)\\u00a0/\\u00a02 lines indicating the results of the matches. In each one of these lines there are four integers x, y, z and w. The integers x and z belong to the interval\\u00a0{1, 2,. . . , n} and represent the registration numbers of the teams in the league. The integers\\u00a0y and\\u00a0w are\\u00a0the number of points the team x and z\\u00a0score in the match described.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Spurs Rocks\",\n    \"output\": \"For each test case solved, you should print the message\\u00a0\\\"Instancia\\u00a0h\\\" where h is an integer, and increasing sequentially from 1. On the next line you should print a permutation of the integers from 1 to n\\u00a0representing the championship rank.\\n\\t\\t\\t\\t\\t\\n                        A blank space should be printed between each one of these integers and a blank line must be printed between two outputs (test cases).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gordon Cormack  Canada\",\n    \"category\": \"Mathematics\",\n    \"description\": \"You have bought a car in order to drive from Waterloo to a big city. The odometer on their car is broken, so you cannot measure distance. But the speedometer and cruise control both work, so the car can maintain a constant speed which can be adjusted from time to time in response to speed limits, traffic jams, and border queues. You have a stopwatch and note the elapsed time every time the speed changes. From time to time you wonder, \\\"how far have I come?\\\". To solve this problem you must write a program to run on your laptop computer in the passenger seat.\",\n    \"id\": 1304,\n    \"input\": \"Standard input contains several lines of input: Each speed change is indicated by a line specifying the elapsed time since the beginning of the trip (hh:mm:ss), followed by the new speed in km/h. Each query is indicated by a line containing the elapsed time. At the outset of the trip the car is stationary. Elapsed times are given in non-decreasing order and there is at most one speed change at any given time.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Average Speed\",\n    \"output\": \"For each query in standard input, you should print a line giving the time and the distance travelled, in the format below, using the standard rounding.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Strings\",\n    \"description\": \"Often, when we round a real valued number to an integer, we round up if the fractional part is 0.5 or greater, and down if the fractional part is less than 0.5. In this problem, you have to write a method round, which takes a real valued number as a String,\\u00a0num, and a cutoff as a String,\\u00a0cutoff.\\u00a0cutoff\\u00a0will be formatted exactly as\\u00a0\\\"0.####\\\", where each\\u00a0'#'\\u00a0represents a digit ('0'-'9'). At least one of the digits to the right of the decimal point in\\u00a0cutoff\\u00a0will be non-zero. Your task is to round\\u00a0num\\u00a0up if its fractional part is greater than cutoff, and down otherwise, and return the result as an int. To avoid issues with double imprecision, the fractional part of\\u00a0num\\u00a0will not be exactly equal to\\u00a0cutoff. Hence, the traditional rounding method described in the opening sentence would be represented by\\u00a0cutoff = \\\"0.5000\\\".\",\n    \"id\": 1305,\n    \"input\": \"The input contains several test cases.\\u00a0Each one is given in two lines. The num string is at the first line and the cutoff\\u00a0is at the second line.\\u00a0num will be a sequence of one or more digits ('0'-'9'), with an optional decimal point ('.').\\u00a0num will contain between 1 and 10 characters, inclusive.\\u00a0cutoff will be formatted exactly as \\\"0.####\\\", where each '#' represents a digit ('0'-'9'). The fractional part of num will NOT be exactly equal to cutoff.  \\n                The input is terminatted by EOF.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Cut Off Rounder\",\n    \"output\": \"Your program should output one line to\\u00a0each test case. This line contains only the integer part of num rounded up or down according to the given cutoff.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\n                In my country, streets don\\u2019t have names, each of them are just given a number as name. These numbers are supposed to be unique but that is not always the case. The local government allocates some integers to name the roads and in many cases the number of integers allocated is less that the total number of roads. In that case to make road names unique some single character suffixes are used. So roads are named as 1, 2, 3, 1A, 2B, 3C etc. Of course the number of suffixes is also always limited to 26 (A, B, \\u2026, Z). For example if there are 4 roads and 2 different integers are allocated for naming then some possible assignments of names can be:\\n\\n            \\n                \\n\\n                    \\n                        \\n                            \\n                                1, 2, 1A, 2B\\n                            \\n                        \\n                        \\n                            \\n                                1, 2, 1A, 2C\\n                            \\n                        \\n                        \\n                            \\n                                3, 4, 3A, 4A\\n                            \\n                        \\n                        \\n                            \\n                                1, 2, 1B, 1C\\n                            \\n                        \\n                    \\n                \\n            \\n\\n            \\n                Given the number of roads (R) and the numbers of integers allocated for naming (N), your job is to determine the minimum number of different suffixes that will be required (of all possible namings) to name the streets assuming that two streets can't have the same names.\",\n    \"id\": 1306,\n    \"input\": \"The input file can contain up to 10002 lines of inputs. Each line contains two integers R and N (R < 10001, 0 < N). Here R is the total number of streets to be named and N denotes the number of integers allocated for naming. The end of input is determined by '0 0' and must not be processed.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Numbering Roads\",\n    \"output\": \"Each line of input produces one line of output. This line contains the serial of output followed by an integer D which denotes the minimum number of suffixes required to name the streets. If it is not possible to name all the streets print \\u201cimpossible\\u201d instead (without the quotes).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC 2001*  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\\"All you need is love. All you need is love.\\n                        All you need is love, love... love is all you need.\\\"\\n                        The Beatles\\n                    \\n                \\n                    There was invented a new powerfull gadget by the International Beautifull Machines corporation called the love machine! Given a string made of binary digits, the love machine answers if it's made only of love, that is, if all you need is love to build that string. The definition of love for the love machine is another string of binary digits, given by a human operator. Let's say we have a string L which represents \\\"love\\\" and we give a string S for the love machine. We say that all you need is love to build S, if we can repeatly subtract L from S until we reach L. The subtraction defined here is the same arithmetic subtraction in base 2. By this definition it's easy to see that if L > S (in binary), then S is not made of love. If S = L then S is obvious made of love.\\n                \\n                    Let's see an example. Supose S = \\\"11011\\\" and L = \\\"11\\\". If we reapetly subtract L from S, we get: 11011, 11000, 10101, 10010, 1111, 1100, 1001, 110, 11. So, given this L, all you need is love to build S. Because of some limitations of the love machine, there can be no string with leading zeroes. That is, \\\"0010101\\\", \\\"01110101\\\", \\\"011111\\\" etc. are invalid strings. Strings which have only one digit are also invalid (it's another limitation).\\n                \\n                    \\u200bYour task in this problem is: given two valid binary strings, S1 and S2, find if it's possible to have a valid string L such that both S1 and S2 can be made only of L (i.e. given two valid strings S1 and S2, find if there exists at least one valid string L such as both S1 and S2 are made only of L). For instance, for S1 = 11011 and S2 = 11000, we can have L = 11 such that S1 and S2 are both made only of L (as we can see in the example above).\",\n    \"id\": 1307,\n    \"input\": \"The first line of input is a positive integer N\\u00a0(N\\u00a0< 10000) which stands for the number of teste cases. Then, 2*N lines will follow. Each pair of lines consists in one teste case. Each line of the pair stands for each string (S1 and S2) to be entered as an input for the love machine. No string will have less than 2 or more than 30 characters. You can assume that all strings in the input will be valid acording to the rules above.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"All You Need Is Love\",\n    \"output\": \"For each string pair, you must print one of the following messages:\\n                \\n                    Pair #p: All you need is love!\\n                    Pair #p: Love is not all you need!\\n                \\n                    \\u200bWhere p stands for the pair number (starting from 1). You should print the first message if there exists at least one valid string L such as both S1 and S2 can be made only of L. Otherwise, print the second line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Gin\\u00e9s Garc\\u00eda Mateos, UM  Espanha\",\n    \"category\": \"Mathematics\",\n    \"description\": \"A troop of Etruscan warriors is organized as follows. In the first row, there is only one warrior; then, the second row contains two warriors; the third row contains three warriors, and so on. In general, each row i contains i warriors.\\n                \\n                    We know the number of Etruscan warriors of a given troop. You have to compute the number of rows in which they are organized.\\n                \\n                    Please note that there may be some remaining warriors (this could happen if they are not enough to form the next row). For example, 3 warriors are organized in 2 rows. With 6 warriors you can form 3 rows; but you can also form 3 rows with 7, 8 or 9 warriors.\",\n    \"id\": 1308,\n    \"input\": \"The first line of the input contains an integer indicating the number of test cases. For each test case, there is a single integer N (0 \\u2264 N \\u2264 1018), indicating the number of Etruscan warriors.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Etruscan Warriors Never Play Chess\",\n    \"output\": \"For each test case, the output should contain a single integer indicating the number of rows that can be formed.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por TopCoder*  EUA\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Often it is necessary to write monetary amounts in a standard format. We decided formatting quantities in the following way:\\n\\n                    \\u00a0\\u00a0\\u00a01. The montande must begin with '$';\\n                    \\u00a0\\u00a0\\u00a02. The number must end with a decimal point and exactly two digits following;\\n                    \\u00a0\\u00a0\\u00a03. The digits to the left of the decimal point must separate in groups of three oir commas.\\n                \\n                    Your task in this problem is to create a program that, given two integer values \\u200b\\u200bto dollars and cents return String formatted properly.\",\n    \"id\": 1309,\n    \"input\": \"The input consists of several test cases. Each test case consists of two integers, dollars (0 \\u2264 dollars\\u00a0\\u2264 2 * 109) and cents (0 \\u2264 cents \\u2264 99), respectively.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Monetary Formatting\",\n    \"output\": \"For each test case print a string formatted according to the formatting rules.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By TopCoder*  USA\",\n    \"category\": \"Paradigms\",\n    \"description\": \"George owns a circus and brings his circus from town to town. He knows how much revenue he can take in on any day in a series of days in a town. He also knows the constant daily cost to run his circus. George wants to bring his circus to town for the series of days that results in the highest profit. \\n                    For example, if the circus costs $20 a day to run in an example with 6 days, and the revenue per day is {$18,$35,$6,$80,$15,$21}, George can make the most money by bringing his circus to town from Day 2 to Day 4. He will make (35+6+80)-(3*20) = $61.\\n                \\n                    Note: The series of days George brings his circus to town can be between 0 and the maximun number of\\u00a0days, inclusive. -If George brings his circus to town for 0 days, he makes 0 profit.\",\n    \"id\": 1310,\n    \"input\": \"The input contains many test cases. The first line of a teste case contains an integer N (1 \\u2264 N \\u2264 50 ) that represents the number of days that George can bring his circus to the town. The second line of a test case contains an integer perDayCost (0 \\u2264 perDayCost < 1000 ) that represents the cost in manteining the circus in that town. Follow N lines (one per each day) containing each one an integer revenue (0 \\u2264 revenue < 1000 ) representing the revenue the circus will earn on each day. The end of input is indicated by EOF (end of file).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Profit\",\n    \"output\": \"For each test case print the most money that George can earn by bringing his circus to town according to the following example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Nlogonia is fighting a ruthless war against the neighboring country of Cubiconia. The Chief General of Nlogonia's Army decided to attack the enemy with a linear formation of soldiers, that would advance together until conquering the neighboring country. Before the battle, the Chief General ordered that each soldier in the attack line, besides protecting himself and attacking, should also protect his two (nearest) neighbors in the line, one to his left and one to his right. The Chief General told the soldiers that for each of them, his ``buddies\\\" would be these two neighbors, if such neighbors existed (because the leftmost soldier does not have a left neighbor and the rightmost soldier does not have a right neighbor). The Chief General also told the soldiers that protecting their buddies was very important to prevent the attack line from being broken. So important that, if the left or right buddy of a soldier is killed, then the next living neighbor to the left or to the right of the soldier, respectively, should become his buddy.\\n                \\n                    \\u200bThe battle is fierce, and many soldiers in the attack line are being killed by fire shots, grenades and bombs. But following the Chief General's orders, immediately after knowing about losses in the attack line, the Army's information systems division has to inform the soldiers who their new buddies are.\\n                \\n                    It's given to you the number of soldiers in the attack line, and a sequence of loss reports. Each loss report describes a group of contiguous soldiers in the attack line that were just killed in the battle. Write a program that, for each loss report, prints the new buddies formed.\",\n    \"id\": 1311,\n    \"input\": \"Each test case is described using several lines. The first input line contains two integers S and B representing respectively the number of soldiers in the attack line, and the number of loss reports (1 \\u2264 B \\u2264 S \\u2264 105). Soldiers are identified by different integers from 1 to S, according to their positions in the attack line, being 1 the leftmost soldier and S the rightmost soldier. Each of the next B input lines describes a loss report using two integers L (left) and R (right), meaning that soldiers from L to R were killed (1 \\u2264 L \\u2264 R \\u2264 S). You may assume that until that moment those soldiers were alive and were just killed.\\n                \\n                    \\u200bThe last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Army Buddies\",\n    \"output\": \"For each test case output B + 1 lines. In the i-th output line write the new buddies formed by removing from the attack line the soldiers that were just killed according to the i-th loss report. That is, for the loss report 'L R', print the first surviving soldier to the left of L, and the first surviving soldier to the right of R. For each direction, print the character '*' (asterisk) if there is no surviving soldier in that direction. Print a line containing a single character '-' (hyphen) after each test case.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Vinicius Santos  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The XYZ TV channel is developing a new game show, where a contestant has to make some choices\\u00a0in order to get a prize. The game consists of a triangular stack of balls, each of them having an integer\\u00a0value, as the following example shows.\\n\\n                \\n\\n                \\n                    The contestant must choose which balls he is going to take and his prize is the sum of the values\\u00a0of those balls. However, the contestant can take any given ball only if he also takes the balls directly\\u00a0on top of it. This may require taking additional balls using the same rule. Notice that the contestant\\u00a0may choose not to take any ball, in which case the prize is zero.\\n                    The TV show director is concerned about the maximum prize a contestant can make for a given\\u00a0stack. Since he is your boss and he does not know how to answer this question, he assigned this task\\u00a0to you.\",\n    \"id\": 1312,\n    \"input\": \"Each test case is described using several lines. The first line contains an integer N representing the\\u00a0number of rows of the stack (1 \\u2264 N \\u2264 1000). The i-th of the next N lines contains i integers Bij\\u00a0(\\u2212105 \\u2264 Bij \\u2264 105 for 1 \\u2264 j \\u2264 i \\u2264 N); the number Bij is the value of the j-th ball in the i-th row of\\n                    the stack (the first row is the topmost one, and within each row the first ball if the leftmost one).\\n                    The last test case is followed by a line containing one zero.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Ball Stacking\",\n    \"output\": \"\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber, UBA  Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"Portu\\u00f1ol is a special language that was naturally developed in Latin America. Since almost half of\\n                    Latin America speaks Portuguese (Portugu\\u00eas) and almost half speaks Spanish (Espa\\u00f1ol), the mixing\\n                    of both languages is natural.\\n                \\n                    Each word in Portu\\u00f1ol is made by taking a non-empty prefix of a Portuguese word and a non-empty suffix of a Spanish word, and concatenating them together. A prefix of a word is any word that\\n                    can be obtained by erasing zero or more characters from its right end. A suffix of a word is any word\\n                    that can be obtained by erasing zero or more characters from its left end. The name of the language\\n                    itself comes from taking a prefix of the word \\\"Portugu\\u00eas\\\" (Portu) and a suffix of the word \\\"Espa\\u00f1ol\\\"\\n                    (\\u00f1ol), and concatenating them.\\n                \\n                    Of course, not every possible way of combining two words will result in something meaningful, or\\n                    even pronounceable, but that is not important. We want you to write a program to count the number\\n                    of different Portu\\u00f1ol words.\\n                \\n                    It will be given to you two non-empty sets of words to test your program. The first set will represent\\n                    Portuguese words and the second set will represent Spanish words. You need to calculate the number\\n                    of different Portu\\u00f1ol words that can be made using the prefix and suffix rule described above. Note\\n                    that the same word may be constructed in several ways, but it still needs to be counted as one. Also\\n                    note that the input sets are just to test your program, so they do not need to be made out of actual\\n                    Portuguese or Spanish words.\",\n    \"id\": 1313,\n    \"input\": \"Each test case is described using several lines. The first line contains two integers P and S representing\\n                    respectively the number of Portuguese words and the number of Spanish words (1 \\u2264 P, S \\u2264 1000).\\n                    Each of the next P lines contains a Portuguese word, and after that each of the next S lines contains\\n                    a Spanish word. Each word is a non-empty string of at most 1000 characters; each character is one\\n                    of the 26 standard lowercase letters (from 'a' to 'z'). You may assume that within each test case no\\n                    two Portuguese words are the same, and that the sum of the lengths of all the Portuguese words is at\\n                    most 105. The same holds for the Spanish words.\\n                    The last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Diccionario Portu\\u00f1ol\",\n    \"output\": \"For each test case output a line with an integer representing the number of different words that can\\n                be constructed by concatenating a non-empty prefix of a word in the first set (Portuguese words) and\\n                a non-empty suffix of a word in the second set (Spanish words).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pedro Bello  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"The Queen of Nlogonia is a fan of mazes, and therefore the queendom's architects built several mazes around the Queen's palace. Every maze built for the Queen is made of rooms connected by corridors. Each corridor connects a different pair of distinct rooms and can be transversed in both directions.\\n\\n                \\n                    The Queen loves to stroll through a maze's rooms and corridors in the late afternoon. Her servants choose a different challenge for every day, that consists of finding a simple path from a start room to an end room in a maze. A simple path is a sequence of distinct rooms such that each pair of consecutive rooms in the sequence is connected by a corridor. In this case the first room of the sequence must be the start room, and the last room of the sequence must be the end room. The Queen thinks that a challenge is good when, among the routes from the start room to the end room, exactly one of them is a simple path. Can you help the Queen's servants to choose a challenge that pleases the Queen?\\n\\n                \\n                    For doing so, write a program that given the description of a maze and a list of queries defining the start and end rooms, determines for each query whether that choice of rooms is a good challenge or not.\",\n    \"id\": 1314,\n    \"input\": \"Each test case is described using several lines. The first line contains three integers R, C and Q representing respectively the number of rooms in a maze (2 \\u2264 R \\u2264 104), the number of corridors (1 \\u2264 C \\u2264 105), and the number of queries (1 \\u2264 Q \\u2264 1000). Rooms are identified by different integers from 1 to R. Each of the next C lines describes a corridor using two distinct integers A and B, indicating that there is a corridor connecting rooms A and B (1 \\u2264 A < B \\u2264 R). After that, each of the next Q lines describes a query using two distinct integers S and T indicating respectively the start and end rooms of a challenge (1 \\u2264 S < T \\u2264 R). You may assume that within each test case there is at most one corridor connecting each pair of rooms, and no two queries are the same.\\n\\n                \\n                    The last test case is followed by a line containing three zeros.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Hedge Mazes\",\n    \"output\": \"For each test case output Q + 1 lines. In the i-th line write the answer to the i-th query. If the rooms make a good challenge, then write the character 'Y' (uppercase). Otherwise write the character 'N' (uppercase). Print a line containing a single character '-' (hyphen) after each test case.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Rodrigo Schmidt  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Nails and Rubber Bands. That is the suggestive name of a game played by a group of children (all of them offspring of geometry teachers). The children fix a number of nails on a plank of wood, randomly placed. Then they choose one of the nails to be the Origin, and a number B of rubber bands. The challenge is to use the B rubber bands to wrap the nails so that (i) each rubber band wraps a subset of the nails; (ii) all nails are inside some wrapping; (iii) wrappings do not overlap each other except at the Origin nail, which is touched by all rubber bands; (iv) rubber bands must form wrappings which are convex polygons with at least three corners; and (v) the total area inside the wrappings is the smallest among all possible ways of wrapping the nails. An instance of the game is shown in Figure 1.\\n\\n                \\u200b\\n\\n                Figure 1: A game with 19 nails and 2 rubber bands\",\n    \"id\": 1315,\n    \"input\": \"Your program should solve several instances of the game. Each game description starts with a line containing two integers B and N, indicating respectively the number of rubber bands and the number of nails (2 \\u2264 B \\u2264 50 and 2B+1 \\u2264 N \\u2264 101). The following N lines describe the position of the nails, each line containing two integers X and Y (\\u201310000 \\u2264 X, Y \\u2264 10000). The origin is the first nail in the input. The end of input is indicated by B = N = 0.\\n                \\n                    In all instances in the input:\\n\\n                \\n                    No two nails are in the same point;\\n                    No three nails are in the same line;\\n                    The origin nail does not belong to the convex hull of all nails (that is, if you use one rubber band to wrap all nails, it does not touch the origin nail).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Not too Convex Hull\",\n    \"output\": \"For each game in the input your program should output one line, describing the smallest total area inside the wrappings. The area must be printed as a real number with two-digit precision, and the last decimal digit must be rounded. The input will not contain test cases where differences in rounding are significant.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ignacio Laplagne  Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Pedro travelled to Europe to take part in the International Olympiad in Informatics and is coming back home. Since all his friends asked him to bring them some gift, he bought two big bags of chocolates (one of Mindt and one of Lilka). Each of these two bags contains a certain number of small chocolates. Buying those two bags was much less expensive than buying smaller, individual boxes of chocolates. At home, Pedro has some empty chocolate boxes that he kept from other trips. Pedro intends to distribute the chocolates he just bought into these smaller boxes, to give them to his friends.\\n                \\n                    As soon as Pedro begins \\ufb01lling the small boxes, he realizes he has a big problem: since he has two different brands of chocolates, if he mixes chocolates of different brands into one small box, the friend who receives this small box will discover Pedro's trick to save money, and will not be pleased with him.\\n                \\n                    You must help poor Pedro distribute the chocolates into the small boxes in such a way that every small box is completely full, and contains only one brand of chocolates. A number of chocolates may however be left unassigned to any box (Pedro will keep these chocolates to himself).\",\n    \"id\": 1316,\n    \"input\": \"The input \\ufb01le contains several instances of the problem. Each instance consists of three lines. The \\ufb01rst line contains two integers M and L that indicate respectively the number of chocolates Mindt and Lilka Pedro bought (0 \\u2264 M, L \\u2264 1000). The next line contains an integer N representing the number of small boxes Pedro has (N \\u2264 M + L). The third line contains N integers indicating the capacity Ci \\u00a0> 0 of box number i (that is, the number of chocolates needed to \\ufb01ll that box). The end of input is indicated by M = L = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Duty Free Shop\",\n    \"output\": \"For each instance of the input your program must produce one line of output. If it is possible to distribute the chocolates as de\\ufb01ned in the problem statement, print the number of boxes to be \\ufb01lled with Mindt chocolate, followed by a space, followed by the list of box numbers, in ascending order. Each box number in the list should be followed by a space. If it is impossible to distribute the chocolates, print \\u201cImpossible to distribute\\u201d. If more than one solution exists, print any one.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Rodolfo Jardim Azevedo  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Nowadays, unfortunately, SPAM messages are becoming more and more common. Some of them\\u00a0may have a multiplicative effect since they ask\\u00a0you to forward them to all your friends. Some SPAM\\u00a0messages wish good luck, others promise you will become rich, and others just remind you how\\u00a0important it is to tell your friends that you care for their friendship. Here is an example of a SPAM:\\n\\n                \\n                    \\u00a0\\u00a0 From: Alice \\n                    \\u00a0\\u00a0  To: Bob, Mary, Julia, Paul\\n                    \\u00a0\\u00a0  Hi, this is a good luck email. I wish you become a millionaire, but\\n                    \\u00a0\\u00a0 that is up to you. If you: \\n                    \\u00a0\\u00a0  * send this email to 10 or more people you will be a millionaire\\n                    \\u00a0\\u00a0  * send this email to 5 or more people you will be rich\\n                    \\u00a0\\u00a0  * send this email to less than 5 people you will be poor\\n                    \\u00a0\\u00a0  As I said, it is up to you. Write your email and be rich! :-)\\n                    \\u00a0\\u00a0  Alice\\n                \\n\\n                \\n                    People usually react in two different ways when they receive a SPAM:\\n                \\n                    They discard the message immediately without even reading it (they hate SPAM);\\n                    They forward the message to everyone they know (they love SPAM).\\n                \\n                \\n                    For this problem, we will assume everyone loves SPAM, but one never forwards the same message twice. Each SPAM message has a different effect based on the number of friends you forward the message to. For example: a SPAM message could tell that you will be poor if you send the message to 5 friends, but you will be the rich if you send to 10, and you will be the richest man in the world if you send it to 20 friends, and so on.\\u00a0\\n                    We will consider only SPAM messages similar to the example above. More speci\\ufb01cally, a SPAM message will de\\ufb01ne two threshold values T1 \\u00a0and T2 \\u00a0and three attributes A1, A2 \\u00a0and A3. A person acquires one of the three attributes depending on the number of messages forwarded for that speci\\ufb01c SPAM. If a person forwards T messages and T < T1 \\u00a0then her/his attribute is A1, if T1 \\u2264 T < T2 \\u00a0then her/his attribute is A2, otherwise her/his attribute is A3.\\n                \\n\\n                \\n                    It will be given to you the names of a group of people, and for each person in the group, the set of friends she/he knows the email address. You will also be given a set of distinct SPAM messages, and for each SPAM message its threshold values and attributes, and the information about which person started it. You have to write a program that determines, for each person in the given group, which attributes she/he acquired, based on all the SPAM they forward.\\n\\n                \\n                    You may assume that the SPAM originator will have at least one friend (in other words, she/he will send at least one message), and a person will not send messages to herself.\",\n    \"id\": 1317,\n    \"input\": \"Your program should process several test cases. The \\ufb01rst line of a test case contains an integer N indicating the number of persons in the group (2 \\u2264 N \\u2264 20). In the input, a person is identi\\ufb01ed by an integer from 1 to N. The following N lines contain each a list of friends of each person (the i-th line contains the list of friends of person number i). The list of friends of person i describes the friends person i knows the email address, and consists of a list of integers Fi (1 \\u2264 Fi \\u2264 N, Fi \\u2260 i) terminated by the value 0 (zero). Following the list of friends comes the description of the SPAM messages (there will be at most 100 messages). Each description appears in a different line. The description consists of an integer P identifying the person who is the SPAM originator (2 \\u2264 P \\u2264 N); two integers T1 and T2 representing the threshold values; and the three attributes A1, A2 and A3 (each attribute is a word of no more than 20 letters). The SPAM list ends with a line containing only the value 0 (zero). The following N lines contain each a name, which is single word with no more than 20 letters. The name in the ith line is the name of person number i. The end of input is indicated by N = 0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"I Hate SPAM, But Some People Love It\",\n    \"output\": \"For each test case your program should output a list of names followed by the attributes they acquired. Your program should write the persons names in the order they appear in the input, followed by ':' and by a space, followed by their attributes according to the SPAM they sent. Attributes should be written in the order they appear in the input; each attribute should be followed by a space.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"ACM/ICPC South America Contest, Warm-Up  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Your school organized a big party to celebrate your team brilliant win in the prestigious, world-famous ICPC (International Collegiate Poetry Contest). Everyone in your school was invited for an evening which included cocktail, dinner and a session where your team work was read to the audience. The evening was a success \\u2013 many more people than you expected shoed interested in your poetry \\u2013 although some critics of yours said it was food rather than words that attracket such an audience.\\n\\n                \\n                    Whatever the reason, the next day you found out why the school hall had seemed so full: the school director confided he had discovered that several of the tickets used by the guests were fake. The real tickets were numbered sequentially from 1 to N (N \\u2264\\u00a010000). The director suspects some people had used the school scanner and printer from the Computer Room to produce copies of the real tickets. The director gave you a pack with all tickets collected from the guests at the party\\u2019s entrance, and asked you to determine how many tickets in the pack had \\u201cclones\\u201d, that is, another ticket with the same sequence number.\",\n    \"id\": 1318,\n    \"input\": \"The input contains data for several test cases. Each test case has two lines. The first line contains two integers N and M which indicate respectively the number of original tickets and the number of persons attending the party (1 \\u2264\\u00a0N \\u2264\\u00a010000 and 1 \\u2264\\u00a0M \\u2264\\u00a020000). The second line of a test case contains M integers Ti, representing the ticket numbers in the pack the director gave you (1 \\u2264\\u00a0Ti \\u2264\\u00a0N). the end of input is indicated by (N = M = 0).\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Fake Tickets\",\n    \"output\": \"For each test case your program should print one line, containing the number of tickets in the pack that had another ticket with the same sequence number.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Helen is a hyperactive girl. She wants to schedule her activities so that at any moment of the day there is at least one thing she can do. She does not care if her activities overlap in time, as long as every moment of her day has an activity scheduled.\\n                \\n                    Helen divided the day in a particular way. The day starts at time 0 and finishes at time M. Each moment of the day is represented by a real number between 0 and M, inclusive. Helen made a list of all possible activities, with their start and finish times. Now she must decide which subset of activities to schedule.\\n                \\n                    If an activity starts at time S and finishes at time F, then we say that it covers all moments between S and F, inclusive. Helen does not want to waste any activities, so she will only choose minimal subsets of activities that cover the day to be scheduled.A subset of activities is a minimal subset that covers the day if and only if:\\n                \\n                    1. Every moment of the day is covered by at least one activity of the subset;\\n                    2. Removing any of the activities from the subset would leave at least one moment of the day uncovered.\\n                \\n                    Note that some moments of the day may be covered by more than one activity.\\n                \\n                    \\u200bGiven the list of possible activities for one day, you must help Helen by determining how many distinct minimal subsets cover the day.\",\n    \"id\": 1319,\n    \"input\": \"Each test case is given using several lines. The first line contains two integers M and N, representing respectively the highest value for a moment in the day (1 \\u2264 M \\u2264 109) and the number of possible activities for the day (1 \\u2264 N \\u2264 100). Each of the next N lines describes one possible activity and contains two integers S and F, representing respectively the start and finish times of the activity (0 \\u2264 S < F \\u2264 M).\\n                \\n                    \\u200bThe last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Hyperactive Girl\",\n    \"output\": \"For each test case output a single line with a single integer representing the number of minimal subsets that cover the day. To make your life easier, print the remainder of dividing the solution by 108.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The King of Logonia will inaugurate soon a new and revolutionary metro, based on an invention of the Royal Engineers, which allows teletransportation.\\n                \\n                    The new metro consists of a very long tunnel with a station at each kilometer. There are also T teletransporters, which are located at some of the stations. In each station there is a keyboard with T keys, where each key corresponds to one teletransporter. The figure below illustrates a metro system with three teletransporters, located in stations marked A, B and C.\\n                \\n\\n                \\n                    The metro works as follows. The user goes in a station (the start station) and presses the key corresponding to the teletransporter he wants to use. The user is then teletransported to the station which is at the same distance from the teletransporter as the start station, but on the opposite side relative to the teletransporter. More precisely, if the location of the start station is i and the user presses the key corresponding to the teletransporter located in position j, he will be taken to the station located at position 2 x j - i. For example, if the user is in station 6 and wants to go to station -2, he can use the teletransporter C (goes from 6 to 10) and then the teletransporter A (goes from 10 to -2).\\n                \\n                \\u200bThe King, however, knows that it is possible that there is no sequence of teletransporters that will take the user from a given station X to a given station Y. To avoid that the users keep trying to go where they cannot go, he wants to make a program available in the Internet to help users. The King wants you to write a program which, given the position of each teletransporter, answers a series of queries. For each query the start and the destination stations are given, and your program must determine if it is possible for the user to go from start to destination.\",\n    \"id\": 1320,\n    \"input\": \"Each test case is given using several lines. The first line contains two integers T and Q indicating respectively the number of teletransporters (1 \\u2264 T \\u2264 105) and the number of queries (1 \\u2264 Q \\u2264 10). The second line contains T different integers ti indicating the position of the teletransporters (-107 \\u2264 ti \\u2264 107). Each of the Q following lines describes a query and contains two distinct integers S and D indicating the position of the start and destination stations (-107 \\u2264 S, D \\u2264 107).\\n                \\n                    \\u200bThe last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Ingenious Metro\",\n    \"output\": \"For each test case output a single line containing the answers to the Q queries, in the same order that the queries were given in the input. For each query you must output an uppercase 'Y' if it is possible to reach the destination station from the start station using the metro, or an uppercase 'N' otherwise.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Jollo is a simple card game which the children from Logonia love to play. It is played between two players with a normal deck of 52 cards. In the game, cards are ordered according to their rank and suit, forming a sequence of 52 distinct values.\\n                \\n                    The game is composed of three rounds, played in a best-of-three series (a player must win two rounds to win the game). At the beginning of the game the deck is shuffled and each player is given a hand of three cards. In each round the players show one card to each other and the player with the highest card wins the round. The cards shown in a round are discarded (i.e., they cannot be shown again).\\n                \\n                    \\u200bThe King's son loves to play the game. But he is not very smart, losing frequently to his little sister. And when he loses, he cries so loud no one can stand it. The servant who deals the cards to the Prince and his sister is afraid he will be sent to prison if the Prince continues to lose. The servant is allowed to see every card he deals, and after dealing five cards (three to the Princess and two to the Prince) he wants to know which is the lowest card he should deal to the Prince so that there is no chance he will lose the game, no matter how badly he plays.\",\n    \"id\": 1321,\n    \"input\": \"Each test case is given in a single line that contains five distinct integers A, B, C, X and Y, describing the cards dealt to the players. The first three cards are given to the Princess (1 \\u2264 A,B,C \\u2264 52) and the last two cards are given to the Prince (1 \\u2264 X,Y \\u2264 52). \\n                \\n                \\n                    The last test case is followed by a line containing five zeros.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Jollo\",\n    \"output\": \"For each test case output a single line. If there exists a card that will make the Prince win the game no matter how badly he plays, you must print the lowest such a card. Otherwise, print -1.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Alejandro Strejilevich de Loma  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"Kevin is a kid. He has lunch at school together with many kids. They use to go outdoors and have lunch sitting on the ground. They love to form a big circle in which each kid has exactly two neighbors, one on the left and one on the right. Sometimes the teacher has problems arranging the circle because some kids wish to sit down next to other kids. Each kid may wish to sit down next to at most two other kids, because each kid has just two neighbors in the circle. The teacher wants to know whether it is possible to arrange the circle in such a way that all kids' wishes are satisfied. You clean up the place when the lunch ends. Since you want to finish your work as early as possible, help the teacher in answering that question.\",\n    \"id\": 1322,\n    \"input\": \"Each test case is given using several lines. The first line contains two integers K and W representing respectively the number of kids (3 \\u2264 K \\u2264 109) and the number of wishes (0 \\u2264 W \\u2264 105). Kids are identified with numbers between 1 and K. Each of the next W lines describes a different wish using two distinct integers A and B (1 \\u2264 A, B \\u2264 K); these values represent that kid A wishes to sit down next to kid B. Each kid has at most two wishes.\\n                \\n                    \\u200bThe last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Kids' Wishes\",\n    \"output\": \"For each test case output a single line containing an uppercase 'Y' if it is possible to arrange a circle in such a way that all kids' wishes are satisfied, or an uppercase 'N' otherwise.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By In\\u00eas Kereki  Uruguai\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Richard Phillips Feynman was a well known American physicist and a recipient of the Nobel Prize in Physics. He worked in theoretical physics and also pioneered the field of quantum computing. He visited South America for ten months, giving lectures and enjoying life in the tropics. He is also known for his books \\\"Surely You're Joking, Mr. Feynman!\\\" and \\\"What Do You Care What Other People Think?\\\", which include some of his adventures below the equator.\\n\\n                \\n                    His life-long addiction was solving and making puzzles, locks, and cyphers. Recently, an old farmer in South America, who was a host to the young physicist in 1949, found some papers and notes that is believed to have belonged to Feynman. Among notes about mesons and electromagnetism, there was a napkin where he wrote a simple puzzle: \\\"how many different squares are there in a grid of\\u00a0N\\u00a0\\u00d7N\\u00a0squares?\\\".\\n\\n                \\n                    In the same napkin there was a drawing which is reproduced below, showing that, for\\u00a0N=2, the answer is 5.\\n\\n                \\u200b\",\n    \"id\": 1323,\n    \"input\": \"The input contains several test cases. Each test case is composed of a single line, containing\\u00a0only one integer N, representing the number of squares in each side of the grid (1 \\u2264\\u00a0N\\u00a0\\u2264 100).\\n\\n                \\n                    The end of input is indicated by a line containing only one zero.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Feynman\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing the number\\u00a0of different squares for the corresponding input.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Raphael Menderico  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"It's been 100 years since the detection of the first Higgs boson and now particle physics is a mainstream subject in all high schools. Obviously, kids love the fact that they can create tiny black holes using only their portable particle accelerators and show off to their friends and colleagues. Although the creation of big black holes that could swallow the whole planet is possible even with these portable particle accelerators, the devices are programmed to only thrown particles when this undesirable side effect is impossible.\\n\\n                \\n                    Your granddaughter is trying to create her own black holes with a portable accelerator kit, which is composed of two small particle accelerators that throw, each one, a boson-sized particle. Both particles are thrown at the same time, and a black hole appears when the particles collide. However, your granddaughter doesn't know how much time she'll have to wait before this happens. Fortunately, each accelerator can predict the particle's trajectory, showing four integer values into its display, called\\u00a0A,\\u00a0B,\\u00a0C\\u00a0and\\u00a0D. Each value can be replaced into the following equations:\\n\\n                \\n                    r\\u00a0=\\u00a0At\\u00a0+\\u00a0B\\n\\n                \\n                    \\u03b8 =\\u00a0Ct\\u00a0+\\u00a0D\\n\\n                \\n                    in order to determine the trajectory of the particle, in polar coordinates. The radius (r) is represented in distance units and the angle (\\u03b8) in degrees. The time (t) is given in time units and it is always a rational value which can be represented by an irreducible fraction. Your granddaughter knows that in polar coordinates a point has infinite representations. In general, the point (r, \\u03b8) can be represented as (r, \\u03b8 \\u00b1 k\\u00a0x360\\u00b0) or ( -r, \\u03b8 \\u00b1(2k\\u00a0+ 1) \\u00d7180\\u00b0), where\\u00a0k\\u00a0is any integer. Besides, the origin (r\\u00a0= 0) can be represented as (0, \\u03b8) for any \\u03b8.\\n\\n                \\n                    Using these parameters informed by each particle accelerator, your granddaughter wants to determine whether the particles will eventually collide and, if they do, the time when they will collide. After the first collision it is impossible to predict the particle's trajectory, therefore, only the first possible collision should be considered.\\n\\n                \\n                    Although your granddaughter is really intelligent and has a deep knowledge of particle physics, she does not know how to program computers and is looking for some notes in her grandfather's (or grandmother's) ICPC notebook (don't forget, she is\\u00a0your\\u00a0granddaughter!). Fortunately for you, there is a note on your notebook which says that you wrote that code during the 2008 ICPC South America Regional Contest (or, to be more specific,\\u00a0this\\u00a0contest).\",\n    \"id\": 1324,\n    \"input\": \"The input consists of several test cases, one per line. Each test case contains eight integer numbers separated by single spaces A1 B1 C1 D1 A2 B2 C2 D2\\u00a0(-104\\u00a0\\u2264\\u00a0A1 B1 C1 D1 A2 B2 C2 D2\\u00a0\\u2264\\u00a0104).\\u00a0The first four input values (A1,\\u00a0B1,C1,\\u00a0D1) correspond to the four parameters\\u00a0displayed by the first portable particle accelerator and the following input values (A2,\\u00a0B2,\\u00a0C2,\\u00a0D2) correspond to the four parameters displayed by the second portable particle accelerator when both particles are thrown. The end of the input is represented by\\u00a0A1\\u00a0=\\u00a0B1\\u00a0=\\u00a0C1\\u00a0=\\u00a0D1\\u00a0=\\u00a0A2\\u00a0=\\u00a0B2\\u00a0=\\u00a0C2\\u00a0=\\u00a0D2\\u00a0= 0, which should not be processed as a test case, since these are the values displayed by the particle accelerators when a big black hole would be created if the particles were trown. Although the end of input is represented by a line with eight zeroes, note that the number zero is a possible input value.\\n\\n                \\n                    The input must be read from standard input.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Higgs Boson\",\n    \"output\": \"For each test case, your program must output a line containing two non-negative integers\\u00a0ta\\u00a0and\\u00a0tbseparated by a single space. If there is no possibility of collision,\\u00a0ta\\u00a0=\\u00a0tb\\u00a0= 0, otherwise,\\u00a0ta/tb\\u00a0must be an irreducible fraction representing the earliest collision time. Even if the fraction results in an integer value, you still must output the number 1 as the denominator (see samples below).\\n\\n                \\n                    The output must be written to standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Vinicius Fortuna  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Bubble Inc. is developing a new technology for browsing a map at different zoom levels. Their new technology assumes that the region to be mapped is a rectangular plane surface and it divides this surface in rectangular sub-regions, which represent deeper zoom levels. Bubble Inc. technology represents maps using a structure known as quad-tree. In a quad-tree, a rectangular region named x may be divided in half, both horizontally and vertically, resulting in four equal-sized rectangular sub-regions. Those sub-regions are called child regions of x, and are named xp for the top-left, xq for the top-right, xr for the bottom-right and xs for the bottom-left regions, where xc represents the concatenation of string x and character c = \\u2018p\\u2019, \\u2018q\\u2019, \\u2018r\\u2019 or \\u2018s\\u2019. For example, if the base region to be mapped is called m, the child regions of m are, from top-left in clockwise order: mp, mq, mr and ms, as illustrated below.\\n\\n                \\u200b\\n\\n                \\n                    Any region can be further subdivided. For example, the region named ms can be further divided into sub-regions msp, msq, msr and mss, as illustrated below.\\n\\n                \\n\\n                \\n                    As another example, the figure below shows the result of subdividing the child sub-regions of the region named msr.\\n\\n                \\u200b\\n\\n                \\n                    Sub-regions with names of the same length have the same zoom level, since they represent regions of the same size. Sub-regions in the same zoom level that share a common side are said to be neighbors. Anything that lies outside the base region m is not mapped and, for every zoom level, all sub-regions of m are mapped. Bubble\\u2019s map technology provides a way for the user to navigate from a given sub-region to neighboring sub-regions in the directions up, down, left and right. You mission is to help Bubble Inc. in finding the neighboring sub-regions of a given sub-region. That is, given the name of a rectangular sub-region, you must determine the names of its four neighboring sub-regions.\",\n    \"id\": 1325,\n    \"input\": \"The input contains several test cases. The first line contains one integer N indicating the number of test cases. Each of the following N lines represents a test case, containing the name of a region composed by C characters ( 2 \\u2264 C \\u2264 5000 ), the first always being the letter \\u2018m\\u2019 and the following being either \\u2018p\\u2019, \\u2018q\\u2019, \\u2018r\\u2019 or \\u2018s\\u2019.\\n\\n                \\n                    The input must be read from standard input.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Bubble Maps\",\n    \"output\": \"For each test case in the input your program must produce one line of output, containing the names of the four neighboring regions of the given region in the order of direction up, down, left, right. For the neighbors that are not mapped you should output <none> instead of its name. Leave one blank space between two consecutive names.\\n\\n                \\n                    The output must be written to standard output.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Guilherme Ottoni  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"International Chemical Products Company (ICPC) is a company known world-wide for its good and affordable products, which include shampoos, cleaning products, bug-killing products, and even some types of vaccines. The ICPC engineers are always researching new ways of reducing their products\\u2019 manufacturing costs, without lowering their quality.\\n                \\n                    One of their engineers, Mr. Poucher, has a new idea to reduce the cost, which aims at reducing the number of containers necessary to hold the substances during the sequence of chemical reactions to obtain a final substance. These final substances are obtained through a sequence of reactions of the form X + Y \\u2192 Z, where X and Y are either initial substances or intermediate substances that were already generated from previous reactions. These reactions are done inside a reaction container, which once emptied can be cleaned up and used again. The process for generating a final substance can be described via a sequence of two simple operations:\\n                \\n                    Put an available substance in an empty reaction container C;\\n                    Perform the reaction X + Y \\u2192 Z either by putting X in the reaction container holding Y, or by putting Y in the reaction container containing X. The order does not affect the end result of the reaction.\\n                \\n                \\n                    What Mr. Poucher noticed was that by choosing smartly the sequence of reaction, ICPC could drastically cut out on the number of reaction containers needed in the company. For example, consider the following sequence of chemical reactions used to obtain final substance P:\\n                \\n                    1) A + B -> T1\\n                    2) C + D -> T2\\n                    3) E + F -> T3\\n                    4) T2 + T3 -> T4\\n                    5) T4 + T1 -> P\\n                \\n                    In this example, A, B, C, D, E, and F are the initial substances (only appear on the left side of reactions), T1, T2, T3 and T4 are the intermediate substances (appear on the left side of at least one reaction, and exactly once on right side of some other reaction) and P is the final substance (only appears on the right side of a single reaction, which will be the last one listed).\\n                    If the sequence of reactions is performed as given then three reaction containers are necessary in order to produce the final substance P:\\n                \\n                    Containers\\n                    Operations C1 C2 C3\\n                \\n                    put A in C1: A - -\\n                    add B to C1: T1 - -\\n                    put C in C2: T1 C -\\n                    add D to C2: T1 T2 -\\n                    put E in C3: T1 T2 E\\n                    add F to C3: T1 T2 T3\\n                    put T2 in C3: T1 - T4\\n                    put T4 in C1: P - -\\n                \\n                    Note, however, that if the reactions are performed in the sequence 2, 3, 4, 1, 5, two reaction containers are sufficient:\\n                \\n                    Containers\\n                    Operations C1 C2\\n                \\n                    put C in C1: C\\n                    add D to C1: T2\\n                    put E in C2: T2 E\\n                    add F to C2: T2 T3\\n                    put T2 in C2: - T4\\n                    put A in C1: A T4\\n                    add B to C1: T1 T4\\n                    put T1 in C2: - P\\n                \\n                    You have been hired by ICPC, and your task is to create a computer program to determine the minimum number of reaction containers necessary to perform the sequence of reactions needed to obtain the final substance.\\n                \\n                    You should assume that:\\n                \\n                    The reaction producing the final substance is the last listed, and the reaction producing an intermediate substance will always precede reactions where that intermediate substance is used.\\n                    A sequence of reactions producing the final substance is always possible.\\n                    ICPC has an unlimited supply of initial substances.\\n                    At the beginning of the production process, each initial substance is in a storage container, used to hold all ICPC stock of this substance. Such containers cannot be used as reaction container to hold intermediate products of reactions.\\n                    All the reaction containers are large enough to hold all the resulting substances.\\n                    The amount of substance generated by a single reaction is just enough to be used as input to a single other reaction. For instance, if an intermediate product Z is necessary as input for two different reaction, this product must be produced twice.\\n                    Every reaction uses exactly two distinct substances and generates also a distinct substance, i.e. all the reaction have the form X + Y ! Z, where X, Y and Z are all distinct.\\n\",\n    \"id\": 1326,\n    \"input\": \"The input consists of several test cases. Each test case starts with a line containing a single integer R, indicating the number of reactions to be considered (1 <= R <= 5000). The following R lines are of the form:\\n                \\n                    S1 + S2 \\u2192 S3\\n                \\n                    Describing a reaction that consumes S1 and S2 and produces S3 as a result. The names of all substances are case-sensitive alphanumeric strings of size at most 5. A test case with R = 0 indicates the end of the input.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Chemistry\",\n    \"output\": \"For each test case in the input your program must produce one line, containing the string \\u2018PRODUCT requires N containers\\u2019, where PRODUCT is the final substance and N is the number of containers needed to produce it.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Drop Out is the name of a simple card game which is played with a normal deck of 52 cards. Cards are ordered by rank (Ace, 2, 3, 4, 5, 6, 7, 8, 9, 10, Jockey, Queen, King), with Ace being the smallest and King the largest value. Card suits are disregarded. Players (at least two) sit around a table and a shuffled deck is put in the center of the table, card faces down. At the start of the game, all players are \\u201cactive\\u201d. The game proceeds in rounds. In each round, active players are dealt one card from the deck, in clockwise direction regarding their sitting positions. The players who are dealt the smallest card in the round drop out of the game and become inactive. Notice that up to four players may drop out at each round. The game ends when there remains one only active player, which is the winner. If the entire deck is played out before a round finishes, the game is over and all active players at the beginning of this last round are winners.\\n\\n                \\n                    Given the number of players, their names and a shuffled deck of cards, you must write a program to simulate the game and determine the winner or winners.\",\n    \"id\": 1327,\n    \"input\": \"The input contains several test cases. Each test case consists of six lines. The first line contains an integer N , indicating the number of players in the game (2 \\u2264 N \\u2264 20). The second line contains a list of player names, separated by spaces. A player name is composed of at most 16 letters from the English alphabet (from 'A' through 'Z' and 'a' through 'z'). Cards are dealt to players in the order given by the list. The next four lines contain the description of the shuffled deck. Card ranks are represented by integers from one to thirteen (1, 11, 12 and 13 denote respectively Ace, Jockey, Queen and King cards). The deck is described in four lines of thirteen integers each, separated by a single space. The deck is listed from top to bottom, so the first card dealt is the first card listed. The end of input is indicated by N = 0.\\n\\n                \\n                    The input must be read from standard input.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Drop Out\",\n    \"output\": \"For each test case in the input your program must produce one line of output, containing the name of the winner or winners. The list of winners must appear in same order given in the input, and each name must be followed by a space.\\n\\n                \\n                    The output must be written to standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Paulo Oliva *  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"The mayor of a city wants to introduce a new transport system to simplify the life of its inhabitants. That will be done via the use of a debit card, which the mayor named \\u201cGoEasy\\u201d. There are two means of transportation in the city: trains and buses. The train system is \\u201czone based\\u201d whereas the bus system is \\u201cjourney based\\u201d. The fare for a journey is computed as follows:\\n\\n                \\n                    There is an initial two money units fare for entering the transport system, regardless of the initial means of transportation.\\n                    When travelling by train a customer pays four money units for each change of zone.\\n                    When travelling by bus a customer pays one money unit each time she/he boards a bus.\\n                \\n\\n                \\n                    A transport system map will provide information about the stations belonging to each zone, and the sequence of stations for each bus and train itinerary. Buses and trains move in both directions in each itinerary, and no train or bus goes through the same station twice during a single trip through an itinerary. It is always possible to go from any station to any other station using trains and/or buses. The rules for computing fares are strict: if during a train journey a customer enters a given zone twice, she/he is charged twice; similarly, if during a bus journey a customer boards twice the bus for the same itinerary, she/he is charged twice.\\n\\n                \\u200b\\n\\n                \\n                    In the transport map above a customer can travel from station 2 to station 4 paying just two money units, by using line T1, since they are in the same zone. But if the customer needs to go from station 2 to 5, then the best is to take the bus B3 to station 10 and then take the bus B2 to station 5, paying in total four money units. Rather than tracking the whole trip of each passenger, the idea of the mayor is that machines will be placed in all stations, and travellers are supposed to swipe their personal GoEasy travel card only when starting AND finishing the whole journey. Since all the machines are interconnected into a network, based on the departure and arrival stations the system can compute the minimum cost possible for the trip, and that amount is charged from the traveller\\u2019s debit card. All that is missing is a computer system for doing the calculations for the fare to be deducted. So, given the map of the transport system in the city, you must write a program to compute the minimum fare the customer should pay to travel between two given stops/stations.\",\n    \"id\": 1328,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers Z and S, which indicate respectively the number of zones (1 \\u2264 Z \\u2264 30) and the number of train/bus stations in the city (1 \\u2264 S \\u2264 100). Each station has a unique identification number ranging from 1 to S, and each station belongs to exactly one zone. Each of the following Z lines describes the stations belonging to a zone. The description for a zone starts with an integer K indicating the number of stations (1 \\u2264 K \\u2264 S) in the zone, followed by K integers representing the stations in the zone. After that comes a line with two integer numbers T and B, representing respectively the number of train itineraries (1 \\u2264 T \\u2264 50) and the number of bus itineraries (1 \\u2264 B \\u2264 50). Next comes T lines describing train itineraries, followed by B lines describing bus itineraries. The description of each itinerary consists of a line containing an integer L indicating the number of stations (2 \\u2264 L \\u2264 S) in the itinerary, followed by L integers specifying the sequence of stations in the itinerary. Finally it comes a line with two integers X and Y (1 \\u2264 X \\u2264 S, 1 \\u2264 Y \\u2264 S and X \\u2260 Y ), specifying that the customer travelled from station X to station Y . The end of input is indicated by Z = S = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Go Easy\",\n    \"output\": \"For each test case your program should output one line, containing an integer representing the amount to be deducted from the traveller\\u2019s GoEasy card.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Maratona de Programacao da SBC 2004, Warm-Up  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"John and Mary have been friends since nursery school. Since then, they have shared a playful routine: every time they meet, they play Head or Tail with a coin, and whoever wins has the priviledge of deciding what they are going to play during the day. Mary always choose Head, and John always choose Tail.\\n\\n                \\n                    Nowadays they are in college, but continue being truly good friends. Whenever they meet, they still play Head and Tail, and the winner decides which film to watch, or which restaurant to have dinner together, and so on.\\n\\n                \\n                    Yesterday Mary confided to John that she has being keeping a record of the results of every play since they started, in nursery school. It came as a surprise to John! But since John is studying Computer Science, he decided it was a good opportunity to show Mary his skills in programming, by writing a program to determine the number of times each of them won the game over the years.\",\n    \"id\": 1329,\n    \"input\": \"The input contains several test cases. The first line of a test case contains a single integer N indicating the number of games played (1 \\u2264 N \\u2264 10000). The following line contains N integers Ri, separated by space, describing the list of results. If Ri = 0 it means Mary won the ith game, if Ri = 1 it means John won the ith game (1 \\u2264 i \\u2264 N). The end of input is indicated by N = 0.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Head or Tail\",\n    \"output\": \"For each test case in the input your program should output a line containing the sentence \\\"Mary won X times and John won Y times\\\", where 0 \\u2264 X and 0 \\u2264 Y.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"ACM/ICPC South America Contest, Warm-Up  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Your old uncle inherited a piece of land from his great-great-uncle. Originally, the property had been in the shape of a rectangle. A long time ago, however, his great-great-uncle decided to divide the land into a grid of small squares. He turned some of the squares into ponds, because he loved to hunt ducks and wanted to attract them to his property. (You are not sure, because you have not been to the place, but he may have made so many ponds that the land may now consist of several disconnected islands). Your uncle Tom wants to sell the inherited land, but local rules now regulate property sales. Your uncle has been informed that, at his great-great-uncle's request, a law has been passed which establishes that property can only be sold in rectangular lots the size of two squares of your uncle's property. Furthemore, ponds are not salable property. Your uncle asked you help to determine the largest number of properties he could sell (the remaining squares will become recreational parks).\\n\\n\",\n    \"id\": 1330,\n    \"input\": \"The input will include several test cases. The first line of a test case contains two integers N and M, representing, respectively, the number of rows and columns of the land (1 \\u2264 N, M \\u2264 100). The second line will contain an integer K indicating the number of squares that have been turned into ponds ((N x M) - K \\u2264 50). Each of the next K lines contains tow integers X and Y describing the position of a square which was turned into a pond (1 \\u2264 X \\u2264 N and 1 \\u2264 Y \\u2264 M). The end of input is indicated by N = M = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Uncle Tom\\u2019s Inherited Land\",\n    \"output\": \"For each test case in the input your program should produce one line of output, containing an integer value representing the maximum number of properties which can be sold.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Some of you may have played a game called 'Blocks'. There are n blocks in a row, each box has a color. Here is an example: Gold, Silver, Silver, Silver, Silver, Bronze, Bronze, Bronze, Gold.\\n                    \\u200bThe corresponding picture will be as shown below:\\n\\n                \\n\\n                \\n                    If some adjacent boxes are all of the same color, and both the box to its left(if it exists) and its right(if it exists) are of some other color, we call it a 'box segment'. There are 4 box segments. That is: gold, silver, bronze, gold. There are 1, 4, 3, 1 box(es) in the segments respectively.\\n\\n                \\n                    Every time, you can click a box, then the whole segment containing that box DISAPPEARS. If that segment is composed of k boxes, you will get k*k points. for example, if you click on a silver box, the silver segment disappears, you got 4*4=16 points.\\n\\n                \\n                    Now let\\u2019s look at the picture below:\\n\\n                \\n\\n                \\n                    The first one is OPTIMAL.\\n                    \\u200bFind the highest score you can get, given an initial state of this game.\",\n    \"id\": 1331,\n    \"input\": \"The first line contains the number of tests t (1 \\u2264 t \\u2264 15). Each case contains two lines. The first line contains an integer n (1 \\u2264 n \\u2264 200), the number of boxes. The second line contains n integers, representing the colors of each box. The integers are in the range 1~n.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Blocks\",\n    \"output\": \"For each test case, print the case number and the highest possible score.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Strings\",\n    \"description\": \"Your little brother has just learnt to write one, two and three, in English. He has written a lot of those words in a paper, your task is to recognize them. Note that your little brother is only a child, so he may make small mistakes: for each word, there might be at most one wrong letter. The word length is always correct. It is guaranteed that each letter he wrote is in lower-case, and each word he wrote has a unique interpretation.\",\n    \"id\": 1332,\n    \"input\": \"The first line contains the number of words that your little brother has written. Each of the following lines contains a single word with all letters in lower-case. The words satisfy the constraints above: at most one letter might be wrong, but the word length is always correct. There will be at most 1000 words in the input.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"One-Two-Three\",\n    \"output\": \"For each test case, print the numerical value of the word.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Candy has a stock of candy of F different flavors. She is going to make several packs of candy to sell them. Each pack must be either a flavored pack, containing candy of a single flavor, or a variety pack, containing candy of every flavor. Candy wants to make a nice packing with her candy. She decided that a nice packing must honor the following conditions:\\n\\n                \\n                    Each piece of candy must be placed in exactly one pack.\\n                    Each pack, regardless of its type, must contain at least 2 pieces of candy.\\n                    Each pack, regardless of its type, must contain the same number of pieces of candy.\\n                    Within each variety pack, the number of pieces of candy of each flavor must be the same.\\n                    There must be at least one variety pack.\\n                    There must be at least one flavored pack of each flavor.\\n                \\n\\n                \\n                    Candy is wondering how many different nice packings of candy she could make. Two nice packings of candy are considered different if and only if they differ in the number of flavored packs, or in the number of variety packs, or in the number of pieces of candy per pack. Since Candy will sell her candy during the closing ceremony of this contest, you are urged to answer her question as soon as you can.\",\n    \"id\": 1333,\n    \"input\": \"Each test case is described using two lines. The first line contains an integer F indicating the number of flavors (2 \\u2264 F \\u2264 105). The second line contains F integers Ci, indicating the number of pieces of candy of each flavor (1 \\u2264 Ci \\u2264 109 for 1 \\u2264 i \\u2264 F).\\n\\n                \\n                    The last test case is followed by a line containing one zero.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Candy\\u2019s Candy\",\n    \"output\": \"For each test case output a line with an integer representing the number of different nice packings of candy, according to the rules given above.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Joaquin Rodrigues  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"Sortonia is the capital of the North Nlogonia province. The city is laid out with almost all of its streets in a square grid, aligned to either the North-South or the West-East direction. The only exception is Merge Avenue, which runs Southwest-Northeast, splitting city blocks along their diagonals.\\n\\n                \\n                    Sortonia is also one of the greenest cities in Nlogonia. The local university developed technology to harness the magnetic field of Earth for energy generation. As a consequence, all intersections of Merge Avenue have power generators installed, supplying all the homes and businesses of the city.\\n\\n                \\n                    This technology was praised by environmentalists at the time for eliminating Sortonia's carbon footprint, but soon after its introduction, thousands of bees and birds were found dead in the city. Puzzled, the Queen of Nlogonia ordered the queendom's biophysicists to investigate the phenomenon.\\n\\n                \\n                    After many months of study, they discovered that the generators used by Sortonians created anomalies in the local magnetic field. The birds and bees that use the Earth's magnetic field to guide their flight were confused by these anomalies, started flying in circles and eventually died of exhaustion.\\n\\n                \\n                    According to the biophysicists' theoretical models, each generator creates an anomaly that is represented as an integer value.\\u00a0Each anomaly propagates indefinitely in all four compass directions. Points that are not directly north, south, west or east of the generator are unaffected by it. On the other hand, if a point is aligned with two generators then the anomaly at that point is the sum of the two anomalies produced by those generators. As an example, consider the picture below that represents a certain portion of Sortonia. The anomaly at point R is just the one produced by the generator at that point, while the anomaly at point T is the sum of the anomalies produced by the generator at point R and the generator at point S.\\n\\n                \\u200b\\u200b\\n\\n                \\n                    The biophysicists would like to measure the anomalies for some city intersections, but these measurements require expensive equipment and technical expertise. So they plan to measure only a subset of the city's intersections and extrapolate other data from them. Predicting an anomaly from a set of measurements might require combining several of them in complicated ways. Thus, the Queen ordered you to write a program that predicts the anomalies at certain intersections, given the measurements previously made.\",\n    \"id\": 1334,\n    \"input\": \"Each test case is described using several lines. The first line contains two integers M and Q representing respectively the number of measurements and the number of queries (1 \\u2264 M, Q \\u2264 104). Each of the next M lines describes a measurement using three integers X, Y and A, indicating that the measured anomaly at point (X, Y) is A (\\u2212107 \\u2264 X, Y \\u2264 107 and \\u2212104 \\u2264 A \\u2264 104). After that, each of the next Q lines describes a query using two integers X' and Y', indicating that the anomaly at point (X', Y') must be predicted (\\u2212107 \\u2264 X', Y'\\u00a0\\u2264 107). All positions are measured in city blocks; the first coordinate increases from West to East, while the second coordinate increases from South to North. Point (0, 0) is located on Merge Avenue. You may assume that within each test case each point is not measured more than once. Likewise, each point is not queried more than once. You may also assume that all the measurements are consistent.\\n\\n                \\n                    The last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Electrical Pollution\",\n    \"output\": \"For each test case output Q + 1 lines. In the i-th line write the answer to the i-th query. If the information given by the measurements is enough to predict the anomaly at the queried point, then write an integer representing the predicted anomaly at the queried point. Otherwise write the character '*' (asterisk). Print a line containing a single character '-' (hyphen) after each test case.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"ByPablo Ariel Heiber  Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"The operating system of your computer indexes the files on your hard disk based on their contents, and provides textual search over them. The content of each file is a non-empty string of lowercase letters. To do a search, you specify a key, which is also a non-empty string of lowercase letters. The result is a list of all the files that contain the key as a substring. A string s is a substring of a string t if t contains all characters of s as a contiguous sequence. For instance, \\\"foofoo\\\", \\\"cafoo\\\", \\\"foota\\\" and \\\"foo\\\" all contain \\\"foo\\\" as a substring, while \\\"foa\\\", \\\"fofo\\\", \\\"fioo\\\"\\u00a0and \\u201coofo\\\" do not.\\n\\n                \\n                    You know the content of each file on your hard disk, and wonder whether each subset of the files is searchable. A subset of the files is searchable if there exists at least one key that produces exactly the list of those files as a result. Given the contents of the files on your hard disk, you are asked to compute the number of non-empty searchable subsets.\",\n    \"id\": 1335,\n    \"input\": \"Each test case is described using several lines. The first line contains an integer F representing the number of files on your hard disk (1 \\u2264 F \\u2264 60). Each of the next F lines indicates the content of one of the files. The content of a file is a non-empty string of at most 104 characters; each character is one of the 26 standard lowercase letters (from 'a' to 'z').\\n\\n                \\n                    The last test case is followed by a line containing one zero.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"File Retrieval\",\n    \"output\": \"For each test case output a line with an integer representing the number of non-empty searchable subsets.\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber  Argentina\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Gary is a careful gardener that has a rectangular field full of trees. There are two kinds of trees in his land: pines and larches. To improve their vitality, he decided to start using a specific fertilizer for each kind of tree, instead of the generic fertilizer he was using so far.\\n\\n                \\n                    Since Gary has many trees, fertilizers cannot be placed individually on each tree. For this reason he decided to build a fence to separate the field in two, and use the pine fertilizer on one side and the larch fertilizer on the other side. The new fence will be built over a straight line connecting two distinct points located on the boundary of the land.\\n\\n                \\n                    Sadly, each fertilizer is great for the kind of tree it is intended, but deadly for the other. After building the fence and deciding which fertilizer will be used on each side, larches in pines' side and pines in larches' side will be cut down, to prevent a slow death that will ruin the landscape. Furthermore, before building the fence it is necessary to cut down trees of any kind lying directly over the line where the fence will be located.\\n\\n                \\n                    Of course, Gary loves his trees. Depending on their kind, age and other factors, each tree has a certain value. The gardener wants to build the fence and select where to use each fertilizer in such a way that his loss is minimized, where the loss is the sum of the values of the trees that will be cut down.\\n\\n                \\n                    You were hired to build the fence. Before starting your work, tell Gary how much he will lose when choosing optimally the location of the fence and the fertilizer for each side.\",\n    \"id\": 1336,\n    \"input\": \"Each test case is described using several lines. The first line contains two integers P and L, representing respectively the number of pines and the number of larches (1 \\u2264 P, L \\u2264 1000). Each of the next P lines describes a pine. After that, each of the next L lines describes a larch. Trees are modeled as points in the XY plane. Each tree is described using three integers X, Y and V , where X and Y are the coordinates of the tree (\\u2212105 \\u2264 X, Y \\u2264 105), and V is its value (1 \\u2264 V \\u2264 1000). You may assume that within each test case no two trees have the same location.\\n\\n                \\n                    The last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Garden Fence\",\n    \"output\": \"For each test case output a line with an integer representing the minimum possible loss for the gardener.\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Poker is one of the most widely played card games, and King's Poker is one of its variations. The game is played with a normal deck of 52 cards. Each card has one of 4 suits and one of 13 ranks. However, in King's Poker card suits are not relevant, while ranks are Ace (rank 1), 2, 3, 4, 5, 6, 7, 8, 9, 10, Jack (rank 11), Queen (rank 12) and King (rank 13). The name of the game comes from the fact that in King's Poker, the King is the highest ranked card. But this is not the only difference between regular Poker and King's Poker. Players of King's Poker are dealt a hand of just three cards. There are three types of hands:\\n\\n                \\n                    A set, made of three cards of the same rank.\\n                    A pair, which contains two cards of the same rank, with the other card unmatched.\\n                    A no-pair, where no two cards have the same rank.\\n                \\n\\n                \\n                    Hands are ranked using the following rules:\\n\\n                \\n                    Any set defeats any pair and any no-pair.\\n                    Any pair defeats any no-pair.\\n                    A set formed with higher ranked cards defeats any set formed with lower ranked cards.\\n                    If the matched cards of two pairs have different ranks, then the pair with the higher ranked matched cards defeats the pair with the lower ranked matched cards.\\n                    If the matched cards of two pairs have the same rank, then the unmatched card of both hands are compared; the pair with the higher ranked unmatched card defeats the pair with the lower ranked unmatched card, unless both unmatched cards have the same rank, in which case there is a tie.\\n                \\n\\n                \\n                    A new software house wants to offer King's Poker games in its on-line playing site, and needs a piece of software that, given a hand of King's Poker, determines the set or pair with the lowest rank that beats the given hand. Can you code it?\",\n    \"id\": 1337,\n    \"input\": \"Each test case is described using a single line. The line contains three integers A, B, and C representing the ranks of the cards dealt in a hand (1 \\u2264 A, B, C \\u2264 13).\\n\\n                \\n                    The last test case is followed by a line containing three zeros.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"King\\u2019s Poker\",\n    \"output\": \"For each test case output a single line. If there exists a set or a pair that beats the given hand, write the lowest ranked such a hand. The beating hand must be written by specifying the ranks of their cards, in non-decreasing order. If no set or pair beats the given hand, write the character '*' (asterisk).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"XIV Maratona de Programacao IME-USP,  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In Ancient Egypt, the building of the pyramids is surrounded in mystery. Many researchers consider that the technology needed to build them wasn't available at the time, and suspect that the egyptians had extraterrestrial help to build them. An example of those mysteries are the \\\"It-miha\\\" numbers. In the egyptian province of It-miha, a rock with an inscripted sequence of numbers was found. Apparently the numbers had no connection to each other, until Poincar\\u00e9, at the end of the 19th century, conjectured that the recorded numbers were the first 500 square-free integers. A perfect square is an integer with an integer square root, such as 1, 4, 9, 16, 25, etc. We say that an integer is square-free if it isn't divisible by any perfect square greater than 1. It may sound simple to us today to determine those numbers, but over 3500 years ago, with a different numbering system, the calculations were very difficult to perform. The \\\"It-miha\\\" numbers are also very frequent in the design of the pyramids. The Queops pyramid, for instance, has a base of 210 x 210 and height of 105 meters. All dimensions are \\\"It-miha\\\" numbers!!!\\n                \\n                    The first ten \\\"It-miha\\\" numbers are 1, 2, 3, 5, 6, 7, 10, 11, 13, 14. Your task in this problem is, given N, find the N-th \\\"It-Miha\\\" number.\",\n    \"id\": 1338,\n    \"input\": \"The input has several test cases. The first line of the input contains an integer T corresponding to the number of cases. The first (and only) line of each test case contains an integer N, 1 \\u2264 N \\u2264 20 000 000 000.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"It-Miha\",\n    \"output\": \"For each test case, print a line containing the N-th square-free integer.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"Por Paulo Oliva  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A very well-known toy/pastime, called Rubik\\u2019s cube, consist of a cube as shown in Figure 1a, where letters stand for colors (e.g. B for blue, R for red, ...). The goal of the game is to rotate the faces of the cube in such a way that at the end each face has a diferent color, as shown in Figure 1b. Notice that,\\n\\n                \\n\\n                \\u00a0 (a) Scrambled \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0\\u00a0\\u00a0 \\u00a0 (b) Winning position\\n\\n                Figura\\u00a01: Rubik Cube\\n\\n                when a face is rotated, the configuration of colors in all the adjacent faces changes. Figure 2 illustrates a rotation of one of the faces. Gives a scrambled configuration, reaching the final position can be quite challenging, as you may know.\\n\\n                \\n\\n                Figura 2: Rotation example\\n\\n                \\n                    But your grandpa has many years of experience, and claims that, given any configuration of the Rubik cube, he can come up with a sequence of rotations leading to a winning configuration.\\n\\n                \\n                    In order to show all faces of the cube we shall represent the cube as in Figure 3a. The six colors are Yellow, Red, Blue, Green, White and Magenta (represented by their first letters).\\n\\n                \\n                    It will be given for you an initial configuration and a list of rotations. A rotation will be represented by an integer number, indicating the face to be rotated and the direction of the rotation (a positive value means clockwise rotation, negative value means counter-clockwise rotation). Faces of the cube are numbered as shown in Figure 3b. You must write a program that checks whether the list of rotations will lead to a winning configuration.\\n\\n                \\n\\n                \\u00a0 \\u00a0 \\u00a0 \\u00a0 (a) Colors\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 (b) Face identifiers for rotations\\n\\n                Figura 3: Representation of the cube\",\n    \"id\": 1339,\n    \"input\": \"The input contains several test cases. The first line of the input is an integer which indicates the number of tests. Each test description consists of ten lines of input. The first nine lines of a test will describe an initial configuration, in the format shown in Figure 3a. The next line will contain a list of rotations, ending with the value 0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Grandpa's Rubik\",\n    \"output\": \"For each test case your program should print one line. If your grandpa is correct, print \\u201cYes, grandpa!\\u201d, otherwise print \\u201cNo, you are wrong!\\u201d.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"There is a bag-like data structure, supporting two operations:\\n                \\n                    1 x\\n                    Throw an element x into the bag.\\n                \\n                    2\\n                    Take out an element from the bag.\\n                \\n                    Given a sequence of operations with return values, you're going to guess the data structure. It is a stack (Last-In, First-Out), a queue (First-In, First-Out), a priority-queue (Always take out larger elements first) or something else that you can hardly imagine!\",\n    \"id\": 1340,\n    \"input\": \"There are several test cases. Each test case begins with a line containing a single integer n (1 <= n <= 1000). Each of the next n lines is either a type-1 command, or an integer 2 followed by an integer x. That means after executing a type-2 command, we get an element x without error. The value of x is always a positive integer not larger than 100. The input is terminated by end-of-file (EOF). The size of input file does not exceed 1MB.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"I Can Guess the Data Structure!\",\n    \"output\": \"For each test case, output one of the following:\\n                stack\\n                 \\n                    It's definitely a stack.\\n                queue\\n                \\n                    It's definitely a queue.\\n                priority queue\\n                \\n                    It's definitely a priority queue.\\n                impossible\\n                \\n                    It can't be a stack, a queue or a priority queue.\\n                not sure\\n                \\n                    It can be more than one of the three data structures mentioned above.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Strings\",\n    \"description\": \"Two kids are walking in a H x W grid. Each square in the grid contains a character (whose ASCII code lies between 33 and 127). Both kids can move north, east, west and south each step. The first kid walked N steps, the second kid walked M steps. (0 \\u2264 N \\u2264 M \\u2264 500).\\n\\n                \\n                    If we write down all the characters each kid walks on, we get two strings SA and SB. Your task is to delete as few characters as possible, so that the two new strings are the same.\",\n    \"id\": 1341,\n    \"input\": \"The first line contains a single integer t (1 \\u2264 t \\u2264 1000), the number of test cases. Each test case contains several lines.\\n\\n                \\n                    The first line contains two integers H and W (1 \\u2264 H, W \\u2264 20), the next H lines contains the grid. Next line contains three integers N, X0 and Y0 (1 \\u2264 X0 \\u2264 H, 1 \\u2264 Y0 \\u2264 W, X increases from North to South, while Y increases from West to East), indicating the first kinds walks from (X0, Y0), for N steps. The next line contains a string of N characters, N, E, W, S stands for North, West, South and East, respectively. The second kid's information follows, which is the same format.\\n\\n                \\n                    You may assume the walk sequence is correct: they will never go outside the grid.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Kids in a Grid\",\n    \"output\": \"For each case, print the case number and two integers XA and XB, indicating the number of characters deleted from SA and SB, respectively.\\n\\n                \\n                    Note: In the first sample, SA = ABCDG, SB = ADEB, we must delete 3 characters from SA and 2 from SB, so that they are the same (both AB or AD).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido e Rodrigo Schmidt  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A simple boardgame that generations of children have played consists of a board containing a trail of squares and a set of colored pieces. At the beginning of the game each player is assigned a piece; all pieces are initially positioned right before the first square of the trail.\\n\\n                \\n                    The game proceeds in rounds. At each round, players rolls a pair of dice, and move their pieces forward a number of squares equal to the rolled result. Players roll the dice always in the same order (player A, then player B, etc.) in the rounds.\\n\\n                \\n                    Most of the squares on the board are plain squares, but some are \\u201ctraps\\u201d. If a player\\u2019s piece falls on a trap square at the end of the player\\u2019s move, the player misses the next round. That is, he/she does not roll the dice, and his/her piece stays one round without moving.\\n\\n                \\n                    There will be exactly three traps on the trail.\\n\\n                \\n\\n                \\n                    The winner of the game is the player whose piece reaches the end of the trail first. The end of the trail is after the last square of the board. Consider, for example, the board in the figure above, which has squares numbered from 1 to 48. At the start, the pieces are positioned at the place marked \\u2018Begin\\u2019 in the figure, that is, before the square number 1. Therefore, if a player rolls a 7 (dice showing 2 and 5 for example), his/her piece is positioned at square number 7 at the end of the first round of the game. Furthermore, if a player\\u2019s piece is positioned at square 41, the player needs a roll result of at least 8 to reach the end of the trail and win the game. Notice also that there will be no draw in the game.\\n\\n                \\n                    It will be given to you the number of players, the number of squares in the trail, the location of the traps and a list of dice rolls results. You must write a program that determines the winner.\",\n    \"id\": 1342,\n    \"input\": \"Your program should process several test cases. The first line of a test case contains two integers P and S representing respectively the number of players and the number of squares in the trail (1 <= P <= 10 e 3 <= S <= 10000). The second line describes the traps, represented by three distinct integers T1, T2 and T3, denoting their positions in the trail (1 <= T1, T2, T3 <= S). The third line contains a single integer N indicating the number of dice rolls in the test. Each of the following N lines contain two integers D1 and D2 (1 <= D1, D2, <= 6), representing the results of the dice rolls. The end of input is indicated by P = S = 0. The set of dice roll results in a test will be always the exact number necessary for a player to win the game.\\n\\n                \\n                    A player is identified by a number from 1 to P. Players play in a round in sequential order from 1 to P.\\n\\n                \\n                    The input must be read from standard input.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Dice\",\n    \"output\": \"For each test case in the input, your program should output a single integer: the number representing the winner.\\n\\n                \\n                    The output must be written to standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por Sergio Gabriel Tavares  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The \\u201cRunner Pawns\\u201d game is a variant of classic Chess for a single player. It uses a board similar to the chess board, divided in 8x8 squares. As\\u00a0in chess, each square can contain only one piece at a time. The pieces are a number of pawns (the \\u201cRunner Pawns\\u201d), and a single horse, which\\u00a0is the only piece under command of the player. The objective is to capture all pawns before they get to the last row and become kings.\\n\\n                \\u200b\\n\\n                \\n                    Possible movements of the horse\\n\\n                \\n                    Horse moves are said to be in 'L' shape, since a horse must always move two squares in one direction\\u00a0and one square in the perpendicular direction. The figure above illustrates horse movements, where\\u00a0the character 'H' indicates the horse current position, and the character '\\u2022' indicates possible final positions. Notice that in the representation used black and white squares of the chess board are not\\u00a0distinguished.\\n\\n                \\n                    \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a001 02 03 04 05 06 07 08\\n                    \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a009 10 11 12 13 14 15 16\\n                    \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a017 18 19 20 21 22 23 24\\n                    \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a025 26 27 28 29 30 31 32 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 From position 22, the horse can move to positions 05,\\n                    \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a033 34 35 36 37 38 39 40 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 07, 12, 16, 28, 32, 37 or 39. From position 57, the\\n                    \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a041 42 43 44 45 46 47 48 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 horse can move to positions 42 or 51.\\u200b\\n                    \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a049 50 51 52 53 54 55 56\\n                    \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a057 58 59 60 61 62 63 64\\n\\n                \\n                    A board with cells numbered\\n\\n                \\n                    Pawns' moves are a bit different from chess, since they can only move one square forward, and all of them move at the same time. They never move on a diagonal. Squares of the board are numbered from 1 to 64, as shown above. Pawns move in vertical direction from top to bottom, so that squares numbered 57 to 64 are the pawns' goal.\\n\\n                \\n                    Each round of the game is composed by one move of the horse followed by a simultaneous move of all pawns not yet captured.\\n\\n                \\n                    In order to capture a pawn, the player has to move the horse to a square where a pawn is. A captured pawn leaves the board, and only the remaining ones will move ahead in the next round. To win the game, the player has to capture all pawns. If a pawn gets to the last row, it becomes a king. Then the horse has only one more move to capture it. If it doesn\\u2019t, the king moves and it means that the game is\\u00a0over and the player loses. Moreover, if the horse moves to a square that will be occupied by a pawn at\\u00a0the next move of the pawns, the horse is captured by the pawn and the player loses.\\n\\n                \\n                    Your task is to write a program that analysis a \\\"Runner Pawns\\\" diagram and answer whether there is a sequence of movements for the horse to win. If it is possible, your program should determine the minimum number of moves needed by the horse to capture all pawns.\",\n    \"id\": 1343,\n    \"input\": \"The input contains several instances of the problem, one per line. Each instance starts with an integer P representing the number of pawns (0 \\u2264 P\\u00a0\\u2264 8), followed by P integers (1\\u00a0\\u2264 A1, A2, ... AP\\u00a0\\u2264 64) that\\u00a0describe the initial position of each pawn, followed by an integer H (1\\u00a0\\u2264 H\\u00a0\\u2264 64) representing the\\u00a0starting position of the horse. The end of input is indicated by a line containing P = 0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Runner Pawns\",\n    \"output\": \"For each instance of the problem in the input your program must print a single line, containing the answer to the problem. If there is a sequence of moves for the horse to capture all pawns before a surviving\\u00a0king moves (and without the horse being captured by a pawn) then the program should print\\u00a0the length of the minimum sequence of moves that make it possible. Otherwise your program should\\u00a0print the word \\u2018impossible\\u2019.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rodolfo Jardim Azevedo  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"ICPC, an international telecommunication company, wants to improve its relationship with business subscribers, offering a discount on calls made to a fixed set of telephone numbers selected by the client company. To help ICPC decide on the cost for this new service, they searched their database and produced a list of calls made last year by one company to another. If a company communicated with another company (making or receiving a call) during last year, we will say they are Business Partners.\\n\\n                \\n                    You have been hired by ICPC to process the list of calls from last year and determine the size (in number of companies) of the largest set of companies that are Business Partners of at least K other companies in the same set and all companies can do business directly or indirectly with any company of this set (one company can do deals directly with another if they are partners or if both are in the same set). That is, you must find a set S of companies such that every company in S has at least K business partners that are also in S (and possibly partners that are outside S), where K is a parameter chosen by the ICPC.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\",\n    \"id\": 1344,\n    \"input\": \"Your program should process several test cases. The first line of a test case contains three integers N, P and K. N represents the total number of companies subscribed to ICPC (1 \\u2264 N \\u2264 1000); companies are identified by numbers between 1 and N. P represents the total number of business partner pairs, produced from last year calls; and K is the minimum number of business partners a company must have in the final set (1 \\u2264 K \\u2264 N-1), as described above. The next P lines describe each a business partner pair, represented as two integers X and Y, where X and Y are companies (1 \\u2264 X \\u2264 N, 1 \\u2264 Y \\u2264 N and X \\u2260 Y). The value N = 0 indicates the end of input.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Telecommunication Partners\",\n    \"output\": \"For each test case from the input, your program should print a single line, containing the size of the largest set of companies found by your program.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rodrigo Schmidt  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"You have been hired by Mines Never Again, a non-governmental organization whose aim is to ban the use of landmines. Besides working on political aspects, such as lobbying governments to join the Intenational Campaign to Ban Landmines, MNA also works on disarming mines left by past wars.\\n\\n                \\n                    Nowadays, mines are detected by satellites or surveillance airplanes. But to disarm a mine you have to get close to it. In most cases, the only way to reach a mined field is by helicopter. To clear the field, you must find the most secure region within the field so that the helicopter can land on it. This region is a rectangle with sides parallel to the coordinate axes, with no mines inside and whose smaller side is the largest possible. More precisely, let A and B be the length of the sides of all possible rectangles that do not contain any mines and A <= B; the most secure region is a rectangle with the largest value of A and the largest value of B. That is, among all rectangles that do not contain any mines and whose smaller side is A (largest possible), the most secure region is a rectangle that has the largest B.\\n\\n                \\n                    Given the limiting rectangle of a mined field and the positions of all mines inside the field, you must write a program to find the size of the most secure region.\",\n    \"id\": 1345,\n    \"input\": \"Your program should process data for several mined fields. The first line of a mined field contains four integers X1, Y1, X2 and Y2 which bound the field. (X1, Y1) are the coordinates of the field\\u2019s lower left corner, (X2, Y2) are the coordinates of the field\\u2019s upper right corner (-20000 \\u2264\\u00a0X1 < X2 \\u2264\\u00a020000 and -20000 \\u2264\\u00a0Y1 < Y2 \\u2264\\u00a020000). The second line contains a single integer N indicating the number of mines detected in the field (1 \\u2264\\u00a0N \\u2264\\u00a0300). The following N lines contain each two integers X and Y describing the position of a mine (X1 \\u2264\\u00a0X \\u2264\\u00a0X2 and Y1\\u00a0\\u2264\\u00a0Y \\u2264\\u00a0Y2). No two mines have the same location. The end of input is indicated when X1 = Y1 = X2 = Y2 = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Secure Region\",\n    \"output\": \"For each mined field of the input your program should print a line with two integers A and B, where A \\u2264\\u00a0B, describing the size of the most secure position.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Natives from the tiny island of Tookutoo are keen on mathematics, and teach their children to play several math-oriented games. A popular puzzle in Tookutoo is played with ceramic slabs like the ones shown in the figure below.\\n\\n                \\n\\n                \\n                    As it can be seen in the figure above, slabs are similar to dominoes, being divided in two parts; in each\\n                    part an integer value is imprinted. The slabs above have values [2, 1], [6, 3] and [3, 1]. Note that a slab\\n                    [a, b] can also be written as [b, a].\\n\\n                \\n                    The puzzle starts with a player receiving a set of slabs chosen randomly from a large and varied pool.\\n                    Using the given set of slabs, the player has to find an arrangement in which the slabs are put side by\\n                    side on the table in such a way that the sum of values on the upper side is equal to the sum of values\\n                    on the lower side. For example, for the set in the figure above, a correct arrangement is\\n\\n                \\n                    1 6 1\\n                    2 3 3\\n\\n                \\n                    If it is not possible to find an arrangement using all the slabs chosen, the player may discard one of\\n                    them, but the value of the sum in the arrangement must be the highest possible. Besides, if more than\\n                    one slab can be discarded while leaving the same sum, the player must discard the slab [a, b] such that\\n                    a \\u2264 b and a is the least possible value considering all possible slabs to be discarded.\\n                    You must write a program that, given a set of slabs, tries to find an arrangement that satisfies the conditions\\n                    of the puzzle, discarding one slab if necessary.\",\n    \"id\": 1346,\n    \"input\": \"Your program should process several test cases. The first line of a test case contains a single integer N, the number of slabs in the test (0 \\u2264 N \\u2264 400). Each of the following N lines contains two integers Xi and Yi describing a slab that was given to the player (0 \\u2264 Xi \\u2264 1000 and 0 \\u2264 Yi \\u2264 1000) The value N = 0 indicates the end of input.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Child Play\",\n    \"output\": \"For each test case your program must produce one line describing the result. If it is not possible to find an arrangement, print the word 'impossible'. If it is possible to find an arrangement, print its sum and the description of the discarded slab (if any). If you had do discard a slab, describe it in the form 'discard X Y', where X \\u2264 Y; otherwise print 'discard none'.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Rodrigo Schmidt  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In the year of 2222, a terrible disaster happened at the kryptonite mine in Mars: a marsquake shook that part of the planet. Differently from earthquakes in Earth, marsquakes are not unusual on Mars. This one, however, caused the mine to start sinking slowly into the soil. The mine has a rectangular external shape, and its interior is like a maze, with high, straight walls and, most importantly, teleporters. Teleporters, as you know, can transport people instantly from one place to another. Teleporters in the mine are old models, using ancient technology, and can only teleport people if there is a clear view from one teleporter booth to another (that is, if there are no obstacles or walls in between the booths). You can see the map of the mine in the figure below.\\n\\n                \\u200b\\n\\n                \\n                    You are trapped alone inside the mine. Fortunately, you have a map of the whole mine, know your current location, the positions of the walls, the locations of the exit and all teleporter booths. Unfortunately, the marsquake affected the energy system, and you know the teleporters can be used for a limited number of times only.\\n\\n                \\n                    You want to get out of the mine walking as little as possible, since you sprained your ankle during the marsquake. You must find the route from your present location to the exit that requires the least amount of walking.\",\n    \"id\": 1347,\n    \"input\": \"The input consists of many test cases. The first line of a test case contains three integers N, M and L, which indicate, respectively, the number of times the teleporters can be used, the number of walls in the mine and the number of teleporter booths (0 \\u2264 N, M, L \\u2264 50). Each of the next M lines contains four integers X1, Y1, X2 and Y2, which represent the coordinates of the endpoints of a wall. You may ignore the thickness of walls and assume they do not intersect each other (\\u201320000 \\u2264 X1 \\u2264 X2 \\u2264 20000 and \\u201320000 \\u2264 Y1 \\u2264 Y2 \\u2264 20000). The next L lines contain the location of teleporter booths, given by two integers Xp and Yp. The last line of each test case contains four integers Xb, Yb, Xe and Ye where (Xb, Yb) are the coordinates of your location and (Xe, Ye) are the coordinates of the mine's e xit. The end of input is indicated by M = N = L = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Kryptonite Mine\",\n    \"output\": \"For each test case in the input your program must output a single line, containing an integer representing the distance you need to walk to get out of the mine. Of course, you should not consider the distances you teleported. The distance must be rounded to the nearest integer.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Guilherme Ottoni  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"The well known supermarket chain X-Mart decided to cut costs, reducing the number of different products available in its shops\\u2019 shelves. The marketing department was concerned that this decision would affect sales, and decided to exploit the reduction of products to promote customer relations.\\n\\n                \\n                    X-Mart therefore organized an Internet poll, in which customers could choose which products they wanted the supermarket to keep on their shelves, and which products they wanted the supermarket to withdraw from their shelves. The list of currently available products was published on the Internet.\\n\\n                \\n                    To simplify the polling system, each customer was allowed to choose at most two products to vote for (meaning the supermarket should keep selling it) and at most two products to vote against (meaning the supermarket should stop selling it).\\n\\n                \\n                    Once the marketing department got all the votes in its database, it wants to know if it is possible to choose a new list of products that pleases ALL voting customers. The marketing department considers that a customer will be pleased when at least one of the products she/he voted for was indeed kept by the supermarket, and at least one of the products she/he voted against was withdrawn from the supermarket\\u2019s shelves. You may assume a customer does not vote for and against the same product.\",\n    \"id\": 1348,\n    \"input\": \"Your program should process several test cases. The first line of a test case contains two integers C and P, representing respectively the number of customers and the number of products in the test (1 \\u2264 C \\u2264 1000 and 1 \\u2264 P \\u2264 10000). Each of the next C lines describes the preference of one customer, represented as four integers X, Y, S and T (0 \\u2264 X, Y, S, T \\u2264 P). X and Y are products the customer wants the supermarket to keep selling, S and T are products the customer wants the supermarket to stop selling. A zero value for any of the variables X, Y, S and T means the customer is not making use of that vote. A line with C = P = 0 indicates the end of input.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"X-Mart\",\n    \"output\": \"For each test case your program must print one line, containing either the word \\u2018yes\\u2019 (if it is possible to please all voting customers) or the word \\u2018no\\u2019 (if it is not possible).\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Ernesto Coto  Chile\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Cheap small industrial scanners can only acquire images on gray scale, which are images where the pixels have intensity values in the integer range [0, 255]. A company that builds automatic vending machines wants to use these small scanners to validate the tokens used in its machines. Tokens are small square chips of metal with holes strategically pierced. Tokens with different holes are used for different values.\\n\\n                \\n\\n                Figure 1: Token for a vending machine.\\n\\n                \\n                    A scanner will produce an image of the token introduced by the client and a computer program will validate it. In the scanner image, metal appears as dark pixels (values near 0) and holes appear as light pixels (values near 255). There are two problems that must be solved in the validations process. The first problem is that, since the token is square, a client can introduce it in the machine slot in several possible ways. The second problem is due to the poor quality of the image generated by those cheap scanners, which will contain \\u201cnoise\\u201d (errors). To validate the token, the machine will compare the scanner output to a \\u201cstandard image\\u201d of the token, previously produced using a high quality scanner.\\n\\n                \\n                    You must write a program which, given the standard image of a token and an image produced by the machine scanner, determines the confidence degree that the token introduced is a valid one. The confidence degree is the percentage of pixels in the scanner image whose intensity value differs by 100 or less from corresponding pixels in the standard image. As the token may have been introduced in several ways, we are interested in the highest possible confidence degree, considering all possible token positions.\",\n    \"id\": 1349,\n    \"input\": \"Your program should process several test cases. Each test case specifies the size of the token image and the pixel values for the standard and scanned images. The first line of a test case contains an integer L that indicates the size, in pixels, of the image (1 \\u2264\\u00a0L \\u2264\\u00a0400). The next L lines will contain L integer each, representing the pixel values for the rows of the standard image. Following that, the next L lines will contain the pixel values for the rows of the scanned image.\\n\\n                \\n                    The end of input is indicated by L = 0.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Noise Effect\",\n    \"output\": \"For each test case your program should output a single line containing the confidence degree for the corresponding image. The confidence degree must be printed as a real number with two-digit precision, and the last decimal digit must be rounded. The input will not contain test cases where differences in rounding are significant.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Paulo Oliva  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The court of King Xeon 2.4 is plagued with intrigue and conspiracy. A document recently discovered by the King\\u2019s Secret Service is thought to be part of some mischievous scheme. The document contains simply a set of sentences which state the truth or falsehood of each other. Sentences have the form \\u201cSentence X is true/false\\u201d where X identi\\ufb01es one sentence in the set. The King\\u2019s Secret Service suspects the sentences in fact refer to another, yet uncovered, document.\\n\\n                \\n                    While they try to establish the origin and purpose of the document, the King ordered you to \\ufb01nd whether the set of sentences it contains is consistent, that is, if there is a valid truth assignment for the sentences. If the set is consistent, the King wants you to determine the maximum number of sentences which can be made true in a valid truth assignment for the document.\",\n    \"id\": 1350,\n    \"input\": \"The input \\ufb01le contains several instances of documents. Each document starts with a line containing a single integer, N, which indicates the number of sentences in the document (1 \\u2264 N \\u2264 1000). The following N lines contain each a sentence. Sentences are numbered sequentially, in the order they appear in the input (the \\ufb01rst is sentence 1, the second is sentence 2, and so on). Each sentence has the form \\u201cSentence X is true.\\u201d or \\u201cSentence X is false.\\u201d, where 1 \\u2264 X \\u2264 N.\\n\\n                \\n                    The value N = 0 indicates the end of input.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"This Sentence is False\",\n    \"output\": \"For each document in the input your program should output one line. If the document is consistent, your program should print the maximum number of sentences in a valid truth assignment for the document. Otherwise your program should print the word \\u2018Inconsistent\\u2019.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rodrigo Schmidt  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Mr. Jones is an exemplar husband. Every Saturday morning Mrs. Jones gives him a list of goods to be bought from the supermarket and he buys exactly what he has been asked for, always choosing the brands with lowest prices. But Mr. Jones hates going to the supermarket on a Saturday, since its aisles are packed with shippers. He wants to change the way he does his shopping. Instead of going to and fro to buy the products on his wife\\u2019s list, he will try to get the goods on the list going through each aisle only once, picking up the products in the exact order given in the list. So he asked you to write a program to help him with his new style of shopping.\\n\\n                Given the information about products available in the supermarket together with their prices in the order in which they appear in Mr. Jones\\u2019 way and the list of products given by his wife, your program must determine the least cost that he would pay.\\n\\n                Mr. Jones buys the products in the order in which they appear in Mrs. Jones\\u2019 list and he never goes back as he walks down the aisles. Therefore, if he buys the i-th product on his way as the j-th item on the list, the next product to be bough is the (j+1)-th item of the list \\u2013 and it must be bought from the products that come after i in his path. The figure below shows an example where products are identified by integers. Note that different brands of the same product may appear separately. In the example Mr. Jones must buy products 1, 1, 2, 20 (notice that product 1 appears twice in the list). For the example, the least cost for Mr. Jones following his constraints is 21.30. Notice that with this new way of shopping it may be impossible for Mr. Jones to buy all the goods on Mrs. Jones list; in that case, your program should warn Mr. Jones.\\n\\n                \\n\\n                (a) Mrs. Jones' list \\u00a0 (b) List of products with respective prices, and order they appear on Mr. Jones' way down the aisles.\",\n    \"id\": 1351,\n    \"input\": \"Your program should process data for several shopping sessions. The first line in the description of a shopping session contains two integers M and N; M indicates the number of items in Mrs. Jones\\u2019 list (1 \\u2264 M \\u2264\\u00a0100) and N represents the total number of products available in the supermarket (1 \\u2264\\u00a0N \\u2264\\u00a0100,000). \\n\\t\\t\\t\\t\\n\\t\\t\\t\\tThe next line contains M integers Xi, representing the list of products in Mrs. Jones' list (1 < Xi \\u2264 100000, 1 \\u2264 i \\u2264 M). Then N lines follow, representing the supermarket products in the order in which they appear in Mr. Jones\\u2019 way. Each of those lines contains an integer K and a real P which represent respectively a product identifier and its price (1 \\u2264\\u00a0K \\u2264\\u00a0100,000). The end of input is indicated by M = N = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Supermarket\",\n    \"output\": \"For each shopping session in the input, your program should produce one line of output, containing the least cost that Mr. Jones would pay. If it is not possible to buy all the goods for the session, print the word \\u201cImpossible\\u201d. The cost must be printed as a real number with two-digit precision, and the last decimal digit must be rounded. The input will not contain test cases where differences in rounding are significant.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"ACM/ICPC South America Contest, Warm-Up  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The government of the United Republic of Little Tower is developing a new kind of lottery. The main purpose of the lottery is to raise money to build Little Tower's Olympic Stadium, for an attendance of 400,000 people. The stadium is strategic for Little Tower's proposal to host the World Cup Finals in 2078. The lottery will run weekly. Each week, tickets in the form of square cards will be sold. Each ticket will have squares with printed numbers within, in a sequence of N rows and N columns, as shown in Figure 1.\\n\\n                \\n                    \\u200bFig. 1: A sample lottery ticket, for N = 3.\\n\\n                \\n                    In each ticket no number appears twice, and therefore all numbers from 1 to N2 are present (in random positions). There won't be two equal tickets sold in the same week. Nevertheless, all possible different tickets will be sold, since Little Tower\\u2019s citizens love lotteries. Tickets will be sold for T$1.00 (one Torreal, Little Tower\\u2019s monetary unit). To choose the winner(s), four numbers (between 1 and N2) will be picked randomly, and the ticket(s) whose chosen numbers positions are corners of a square will be awarded the prize money. For example, the ticket shown in Figure 1 is a winning ticket if the numbers picked are (6, 3, 2, 9), (1, 4, 2, 5) or (7, 8, 9, 6), but it is not a winning ticket if the numbers picked are (1, 7, 2, 9). If more than one ticket is a winner, customers who bought those tickets will share the week\\u2019s lottery prize. The government of Little Tower asks your help to determine the prize value to be payed for each winning ticket, for a given N, and a given percentage, over the total amount received for the tickets, that the government wants to pay as prizes.\",\n    \"id\": 1352,\n    \"input\": \"Input will contain several test cases. Each test case is described in a line containing an integer N and a floating-point P, representing respectively the number of rows (and columns) of tickets, and the percentage of the money received that will be payed as prize (2 \\u2264 N \\u2264 100 and 0 \\u2264 P \\u2264 100.0). The end of input is indicated by N = P = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Square Lottery\",\n    \"output\": \"For each test case in the input your program should produce one line of output, containing a real value representing the prize to be payed to each winning ticket. The prize value must be printed with two digits precision, and the last decimal digit must be rounded. The input will not contain test cases where differences in rounding are significant.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por Rujia Liu  China\",\n    \"category\": \"Mathematics\",\n    \"description\": \"I have a set of super poker cards, consisting of an infinite number of cards. For each positive integer P, there are exactly four cards whose value is P: Spade(S), Heart(H), Club(C) and Diamond(D). There are no cards of other values.\\n\\n                \\n                    Given two positive integers N and K, how many ways can you pick up at most K cards whose values sum to N? For example, if N = 15 and K = 3, one way is 3H + 4S + 8H, shown below:\\n\\n                \\n\",\n    \"id\": 1353,\n    \"input\": \"There will be at most 20 test cases, each with two integers N and K (1 \\u2264 N \\u2264 109, 1 \\u2264 K \\u2264 10). The input is terminated by N = K = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Super Poker\",\n    \"output\": \"For each test case, print the number of ways, modulo 1,000,000,009.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Tomy has many paper-squares. The side length(we call it 'size') of the range from 1 to N-1, and he has a really COUNTLESS squares of each kind. He used to be very proud of his squares, but one day, he suddenly wants to have a bigger one - a square of size N! Though he doesn't have such a square, he can make it up with the squares he has. For example, a square of size 7 can be made up with 9 smaller squares, shown below.\\n\\n                \\n                    \\n\\n                \\n                    Note that there should be NO empty space in the square, and NO extra paper outside the square, and the small squares should NOT overlap. As you may guess, Tomy wants to make it using the minimal number of squares he has, can you help?\",\n    \"id\": 1354,\n    \"input\": \"The first line of the input contains a single integer T, indicating the number of test cases (1 \\u2264 T \\u2264 20). Each case contains a single integer N (2 \\u2264 N \\u2264 50).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Bigger Square Please\",\n    \"output\": \"For each test case in the input, print a line containing a single integer K, indicating the minimal number of squares needed to build the target square. In the following K lines, each contains three integers x,y,l indicating the coordinates of top-left corner, and the side length of the corresponding square (1 \\u2264 x,y \\u2264 N).\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Rujia Liu & Xin Qi  China\",\n    \"category\": \"Strings\",\n    \"description\": \"Your task is to compress a string of no more than 200 characters, using the following scheme:\\n\\n                \\n                    - Adjacent repeats: [S]k which means: S repeated k times (where k is a one-byte integer, recall that the length of the string does not exceed 200)\\n\\n                \\n                    - Repeats with gaps: [S]k{S_1}t_1{S_2}t_2...{S_r}t_r, where 1 \\u2264 t_i < k, t_i < t_{i+1} which means: write S for k times, then insert string S_i after the t_i-th occurrence of S.\\n\\n                \\n                    Note that the compressing is done recursively, so S, S_1, ..., S_r mentioned above can all be compressed further.\\n\\n                \\n                    e.g. for the original string\\n\\n                \\n                    I_am_WhatWhat_is_WhatWhat\\n\\n                \\n                    The optimal compressed string is:\\n\\n                \\n                    I_am_[What]4{_is_}2\",\n    \"id\": 1355,\n    \"input\": \"There are at most 20 test cases, each test case is a string containing no more than 200 printable characters, without whitespace characters (i.e., no spaces, no tabs), brackets (i.e. not in {'(',')','[',']','{','}'}) and digits. Letters are case-sensitive.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Compressor\",\n    \"output\": \"For each case, print the length of the minimal string, and a compressed string. Note that every one-byte integer should be counted as one character, even if it has two or three digits in its decimal form.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Fidel I. Schaposnik  Argentinaa\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Jupiter is invading! Major cities have been destroyed by Jovian spacecrafts and humanity is fighting back. Nlogonia is spearheading the counter-offensive, by hacking into the spacecrafts\\u2019 control system.\\n\\n                \\n                    Unlike Earthling computers, in which usually a byte has 28 possible values, Jovian computers use bytes with B possible values, {0,1,...,B\\u22121}. Nlogonian software engineers have reverse-engineered the firmware for the Jovian spacecrafts, and plan to sabotage it so that the ships eventually selfdestruct.\\n\\n                \\n                    As a security measure, however, the Jovian spacecrafts run a supervisory program that periodically checks the integrity of the firmware, by hashing portions of it and comparing the result against known good values. To hash the portion of the firmware from the byte at position i to the byte at position j, the supervisor uses the hash function\\n\\n                \\n                    \\u200b\\n                \\n\\n                where P is a prime number. For instance, if B = 20 and P = 139, while bytes 2 to 5 of the firmware have the values f2 = 14, f3 = 2, f4 = 2 and f5 = 4 then\\n\\n                \\n                    H(f2, . . . f5) = B0\\u00a0f5 + B1\\u00a0f4 + B2 f3 + B3\\u00a0f2 (mod P)\\n                   \\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0= 200 \\u00d7 4 + 201 \\u00d7 2 + 202 \\u00d7 2 + 203 \\u00d7 14 (mod 139)\\n\\t\\t\\t\\t\\t\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0= 4 + 40 + 800 + 112000 (mod 139)\\n                    = 112844 (mod 139)\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\n                    = 115\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\n\\n                \\n                    The Nlogonian cryptologists need to find a way to sabotage the firmware without tripping the supervisor. As a first step, you have been assigned to write a program to simulate the interleaving of two types of commands: editing bytes of the firmware by the Nlogonian software engineers, and computing hashes of portions of the firmware by the Jovian supervisory program. At the beginning of the simulation the value of every byte in the firmware is zero.\",\n    \"id\": 1356,\n    \"input\": \"Each test case is described using several lines. The first line contains four integers B, P, L and N, where B is the number of possible values of a Jovian byte, P is the modulus of the Jovian hash (2 \\u2264 B < P \\u2264 109 and P prime), L is the length (number of Jovian bytes) of the spacecrafts\\u2019 firmware, and N is the number of commands to simulate (1 \\u2264 L, N \\u2264 105). At the beginning of the simulation the value of every byte in the firmware is fi = 0 for 1 \\u2264 i \\u2264 L. Each of the next N lines describes a command to simulate. Each command description starts with an uppercase letter that is either \\u2018E\\u2019 or \\u2018H\\u2019, with the following meanings.\\n\\n                \\n                    'E': The line describes an edit command. The letter is followed by two integers I and V indicating that the byte at position I of the firmware (that is, fI ) must receive the value V (1 \\u2264 I \\u2264 L and 0 \\u2264 V \\u2264 B \\u2212 1).\\n                    'H': The line describes a hash command. The letter is followed by two integers I and J indicating that H(fI, . . . fJ ) must be computed (1 \\u2264 I \\u2264 J \\u2264 L).\\n                \\n\\n                The last test case is followed by a line containing four zeros.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Jupiter Attacks!\",\n    \"output\": \"For each test case output the results of the hash commands in the input. In the i-th line write an integer representing the result of the i-th hash command. Print a line containing a single character '-' (hyphen) after each test case.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Vinicius Santos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The Braille system, designed by Louis Braille in 1825, revolutionized written communication for blind and visually impaired persons. Braille, a blind Frenchman, developed a tactile language where each element is represented by a cell with six dot positions, arranged in three rows and two columns. Each dot position can be raised or not, allowing for 64 different configurations which can be felt by trained fingers. The figure below shows the Braille representation for the decimal digits (a black dot indicates a raised position).\\n\\n                \\n                    \\u200b\\n\\n                \\n                    In order to develop a new software system to help teachers to deal with blind or visual impaired students, a Braille dictionary module is necessary. Given a message, composed only by digits, your job is to translate it to or from Braille. Can you help?\",\n    \"id\": 1357,\n    \"input\": \"Each test case is described using three or five lines. The first line contains an integer D representing the number of digits in the message (1 \\u2264 D \\u2264 100). The second line contains a single uppercase letter 'S' or 'B'. If the letter is 'S', the next line contains a message composed of D decimal digits that your program must translate to Braille. If the letter is 'B', the next three lines contain a message composed of D Braille cells that your program must translate from Braille. Braille cells are separated by single spaces. In each Braille cell a raised position is denoted by the character '*' (asterisk), while a not raised position is denoted by the character '.' (dot).\\n\\n                \\n                    The last test case is followed by a line containing one zero.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"In Braille\",\n    \"output\": \"For each test case print just the digits of the corresponding translation, in the same format as the input (see the examples for further clarification).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Uncle Jeff owns a glass shop, which sells glass panes for windows and picture frames. As you probably know, a glass pane can only be cut if the cut goes from edge to edge of the pane in a straight line. The \\ufb01gure below shows how a glass pane can be cut into three smaller glass panes.\\n                \\n                    \\u200b\\n\\n\\t\\t\\t\\t\\n                    (a) a whole glass pane \\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0(b) first cut \\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0(c) second cut\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\n                \\n                    Uncle Jeff normally operates as follows. He \\ufb01rst collects various orders for small rectangular glass panes, for windows or picture frames. He then marks the position of each small rectangular pane onto a big rectangular glass pane, such that no two marked rectangles overlap. Finally, he performs a sequence of horizontal and vertical cuts, always from edge to edge of the pane being cut, so as to produce glass panes for all the customers.\\n                \\n                    Since the last phase (the actual cutting of the big glass pane into pieces) is the most boring thing one could ever imagine, uncle Jeff is asking you for help. He wants a program which given a big rectangular glass pane and lower-left and upper-right coordinates of each marked rectangle determines the order in which the edge-to-edge cuts can be performed. This list of cuts will be fed into a machine which will do the boring cuts for him!\",\n    \"id\": 1358,\n    \"input\": \"The input contains several test cases. The \\ufb01rst line of a test case contains an integer N indicating the number of windows and picture frames in the test (2 \\u2264 N \\u2264 2000). Each of the next N lines contains four integers X1, Y1, X2, Y2, where (X1, Y1) and (X2, Y2) represent the lower-left and upper-right coordinates marked by uncle Jeff on the big glass pane (\\u22125000 \\u2264 X1, Y1, X2, Y2 \\u2264 5000; X1 < X2 and Y1 < Y2). You should assume the following of each test case:\\n\\n                \\n                    The marked rectangles do not overlap (but may intersect on the border points) and divide the big glass pane completely into rectangular regions, so that no glass is wasted. This means that the lower-left and upper-right coordinates of the big glass pane can be inferred from the coordinates of the marked rectangles.\\n                    It is possible to split up the big glass pane into the small marked rectangles through a sequence of edge-to-edge cuts.\\n                \\n\\n                The end of input is indicated by N = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Cutting Edge\",\n    \"output\": \"For each test case in the input your program must produce an ordered list of cuts that must be performed to separate the big glass pane into the desired smaller panes. Each cut must appear in a different line. A cut is described by four integers X1, Y1, X2, Y2, where (X1, Y1) and (X2, Y2) specify the endpoints of the cut, with X1 < X2 and Y1 = Y2 for a horizontal cut and X1 = X2 and Y1 < Y2 for a vertical cut. As more than one ordering of cuts may be possible, your program must print the list in a particular order. If at some point more than one cut is possible, print \\ufb01rst the cut with smaller X1; if more than one cut is still possible, print \\ufb01rst the one with smaller Y1. Print a blank line after each test case list.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"International Concrete Projects Company (ICPC) is a construction company which specializes in building houses for the high-end Market. ICPC is planning a housing development for new homes around a lake. The houses will be built in lots of different sizes, but all lots will be on the lake shore. Additionally, every lot will have exactly two neighbors in the housing development: one to the left and one to the right.\\n\\n                \\n                    \\n\\n                \\n                    ICPC owns the land around the lake and needs to divide it into lots according to the housing development plan. However, the County Council has a curious regulation regarding land tax, intended to discourage the creation of small lots:\\n\\n                \\n                    land can only be divided using a sequence of land divisions;\\n                    a land division is an operation that divides one piece of land into two pieces of land; and\\n                    for each land division, a land division tax must be paid.\\n                \\n\\n                \\n                    Denoting by A the area of the largest resulting part of the division, the value of the land division tax is A x F, where F is the division tax factor set yearly by the County Council. Note that due to (2), in order to divide a piece of land into N lots, N \\u2013 1 land divisions must be performed, and therefore N \\u2013 1 payments must be made to the County Council.\\n\\n                \\n                    For example, considering the figure above, if the division tax factor is 2.5 and the first land division separates the lot of 500 units of area from the other lots, the land division tax to be paid for this first division is 2.5 x (300 + 200 + 100 + 100 + 100). If the next land division separates the lot of 300 units together with its neighbor lot of 100 units, from the set of remaining lots, an additional 2.5 x (300 + 100) must be paid in taxes, and so on. Note also that some land divisions are not possible, due to (2). For example, after the first land division mentioned above, it is not possible to make a land division to separate the lot of 300 units together with the lot of 200 units from the remaining three lots, because more than two parts would result from that operation.\\n\\n                \\n                    Given the areas of all lots around the lake and the current value of the division tax factor, you must write a program to determine the smallest total land division tax that should be paid to divide the land according to the housing development plan.\",\n    \"id\": 1359,\n    \"input\": \"The input contains several test cases. The first line of a test case contains an integer N and a real F, indicating respectively the number of lots (1 \\u2264 N \\u2264 200) and the land division tax factor (with precision of two decimal digits, 0 < F \\u2264 5.00). The second line of a test case contains N integers Xi, representing the areas of contiguous lots in the development plan (0 < Xi \\u2264 500, for 1 \\u2264 i \\u2264 N); furthermore, Xk is neighbor to Xk+1 for 1 \\u2264 k \\u2264 N-1, and Xn is neighbor to X1. The end of input is indicated by N = F = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Land Division Tax\",\n    \"output\": \"For each test case in the input your program must produce a single line of output, containing the minimum total land division tax, as a real number with precision of two decimal digits.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Paulo Oliva  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A magician invented a new card trick and presented it in the prestigious American Conference\\u00a0of Magicians (ACM). The trick was so nice it received the 'Best Magic Award' at the conference.\\u00a0The trick requires three participants: the magician himself, a spectator and an assistant. During\\u00a0the trick the spectator is asked to shuffle a deck of 52 cards and pick randomly 5 cards out of\\u00a0the deck. The five cards are given to the \\u00a0assistant (without the magician seeing the cards) who\\u00a0looks at them and shows four of the five cards one by one to the magician. After seeing the\\u00a0four cards the magician magically guesses the missing fifth card!\\u00a0The trick works because once the assistant has the five cards he can always choose four of them\\u00a0and use those to \\u2018code\\u2019 information about the fifth one. The code is based on an ordering of\\u00a0the cards. Cards are \\u00a0ordered first by their suits and then by their face value. We will use the\\u00a0following order:\\n                \\n                    H < C < D < S (Hearts, Clubs, Diamonds, Spades) for suits; and\\n                    1 < 2 < ... < 9 < T < J < Q < K for face values, where T, J, Q and K stand for Ten,\\u00a0Jack, Queen and King, respectively.\\n                \\n                \\n                    Assume the spectator chose the cards JD, 8S, 7H, 8C, QH (Jack of Diamonds, 8 of Spades, 7\\u00a0of Hearts, 8 of Clubs and Queen of Hearts). The strategy for the assistant is the following:\\n                \\n                    Find a suit s which appears at least twice in the set of chosen cards (Hearts in the\\u00a0example). If more than one suit appears two times, choose the one with lowest order.\\n                    Hide the card x with suit s that is at most six positions ahead in the cyclic order 1 <\\u00a02 < ... < T < J < Q < K < 1 < 2 < ... of another card y of the same suit. That is\\u00a0always possible since there are only thirteen cards with the same suit (in the example the assistant hides QH). If two or more cards satisfy the criteria above, choose the one with\\u00a0the smallest face value.\\n                    Show y to the magician. At this point the magician knows the suit of the hidden card,\\u00a0and also knows that the face value of the hidden card x is at most six positions in front\\u00a0of the face value of y.\\n                    With the three cards the assistant has left, he must code a number between 1 and 6.\\u00a0That can be done as follows. Say the three cards z1, z2, z3 are in the order z1 < z2 < z3.\\n                \\n                \\n                    Each of six possible orders in which these three cards can be shown may be interpreted\\u00a0to convey information about a number.\\n                \\n                    \\u2013 z1, z2, z3 means 1,\\n                    \\u2013 z1, z3, z2 means 2,\\n                    \\u2013 z2, z1, z3 means 3,\\n                    \\u2013 z2, z3, z1 means 4,\\n                    \\u2013 z3, z1, z2 means 5,\\n                    \\u2013 z3, z2, z1 means 6.\\n                \\n                    In this way, once the magician is shown the four cards one by one, he has enough information\\u00a0to \\u201cmagically\\u201d guess the fifth one!\\n                \\n                    Your job is to develop a program that, given the four cards shown by the assistant, informs the\\u00a0magician which is the hidden card.\",\n    \"id\": 1360,\n    \"input\": \"The input contains several test cases. The first line in the input contains an integer N specifying\\u00a0the number of test cases (1 <=\\u00a0N <=\\u00a010000). Each test case is composed by one line, which\\u00a0contains the description of the four cards, separated by a space, in the order they were presented\\u00a0by the assistant.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Magic Trick\",\n    \"output\": \"For each test case in the input your program must produce one line of output, containing the\\u00a0description of the hidden card.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gin\\u00e9s Garc\\u00eda Mateos, UM  Espa\\u00f1a\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"An architect wants to design a very high building. The building will consist of some floors, and each floor has a certain size. The size of a floor must be greater than the size of the floor immediately above it. In addition, the designer (who is a fan of a famous Spanish football team) wants to paint the building in blue and red, each floor a colour, and in such a way that the colours of two consecutive floors are different.\\n\\n                \\n                    To design the building the architect has n available floors, with their associated sizes and colours. All the available floors are of different sizes. The architect wants to design the highest possible building with these restrictions, using the available floors.\",\n    \"id\": 1361,\n    \"input\": \"The input file consists of a first line with the number p of cases to solve. The first line of each case contains the number of available floors. Then, the size and colour of each floor appear in one line. Each floor is represented with an integer between -999999 and 999999. There is no floor with size 0. Negative numbers represent red floors and positive numbers blue floors. The size of the floor is the absolute value of the number. There are not two floors with the same size. The maximum number of floors for a problem is 500000.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Building Designing\",\n    \"output\": \"For each case the output will consist of a line with the number of floors of the highest building with the mentioned conditions.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gin\\u00e9s Garc\\u00eda Mateos, UM  Espa\\u00f1a\",\n    \"category\": \"Graph\",\n    \"description\": \"Our friend Victor participates as an instructor in an environmental volunteer program. His boss asked him to distribute N T-shirts to M volunteers, one T-shirt each volunteer, where N is multiple of six, and N\\u00a0\\u2265 M. There are the same number of T-shirts of each one of the six available sizes: XXL, XL, L, M , S, and XS. Victor has a little problem because only two sizes of the T-shirts suit each volunteer.\\n\\n                \\n                    You must write a program to decide if Victor can distribute T-shirts in such a way that all volunteers get a T-shirt that suit them. If N\\u00a0\\u2260 M, there can be some remaining T-shirts.\",\n    \"id\": 1362,\n    \"input\": \"The first line of the input contains the number of test cases.\\n\\n                \\n                    For each test case, there is a line with two numbers N and M. N is multiple of 6, 1\\u00a0\\u2264 N\\u00a0\\u2264 36, and indicates the number of T-shirts. Number M, 1\\u00a0\\u2264 M\\u00a0\\u2264 30, indicates the number of volunteers, with N\\u00a0\\u2265 M. Subsequently, M lines are listed where each line contains, separated by one space, the two sizes that suit each volunteer (XXL, XL, L, M , S, or XS).\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"My T-Shirt Suits Me\",\n    \"output\": \"For each test case you are to print a line containing YES if there is, at least, one distribution where T-shirts suit all volunteers, or NO, in other case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristian Ruz  Chile\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Martin and Isa are very competitive. The newest competition they have created is about looking\\n                    at the plates of the cars. Each time one of them sees a car plate on the streets, he or she sends\\n                    to the other an SMS message with the content of that plate; the one who has seen the newest\\n                    plate is in the lead of the game. As the Automobile Car Management (ACM) office assigns the\\n                    plates sequentially in increasing order, they can compare them and find out who is the winner.\\n                \\n                    Martin has a very smart eye and he has stayed on the lead for several weeks. Maybe he keeps\\n                    looking at the streets instead of working, or maybe he stays all day in front of the car selling\\n                    companies waiting for new cars to go out with new plates. Isa, tired of being always behind,\\n                    has written a program that generates a random plate, so the next time Martin sends a message\\n                    to her, she will respond with this generated plate. In this way, she hopes to give Martin a hard\\n                    time trying to beat her.\\n                \\n                    However, Martin has grown suspicious, and he wants to determine if Isa actually saw a car with\\n                    the plate she sent or not. This way, he will know if Isa is in the lead of the game.\\n                \\n                    He knows some facts about the plates assigned by the ACM:\\n                \\n                    Each plate is a combination of 7 characters, which may be uppercase letters (A-Z), or\\n                        digits (0-9).\\n                    There exists two kinds of plate schemes: the old one, used for several years, and the new\\n                        one which has been in use for some months, when the combinations of the old one were\\n                        exhausted.\\n                    In the old scheme, the first three characters were letters, and the last four were digits, so\\n                        the plates run from AAA0000 to ZZZ9999.\\n                    In the new scheme, the first five characters are letters, and the last two are digits. Unfortunately\\n                        the chief of ACM messed up with the printing system while he was trying\\n                        to create a poster for his next campaign for mayor, and the printer is not able to write\\n                        the letters A, C, M, I, and P. Therefore, in this new scheme, the first plate is BBBBB00,\\n                        instead of AAAAA00.\\n                    The plates are assigned following a sequential order. As a particular case, the last plate\\n                        from the old scheme is followed by the first plate from the new scheme.\\n                \\n                \\n                    As Isa is not aware of all of this, she has just made sure that her random generator creates a\\n                    combination consisting of seven characters, where the first three characters are always uppercase\\n                    letters, the last two characters are always digits, and each one of the fourth and fifth characters\\n                    may be an uppercase letter or a digit (possibly generating an illegal combination, but she has\\n                    not much time to worry about that).\\n                \\n                    Of course, Martin will not consider Isa the winner if he receives an illegal combination, or if he\\n                    receives a legal plate, but equal to or older than his. But that\\u2019s not all of it. Since Martin knows\\n                    that new plates are not generated too fast, he will not believe that Isa saw a car with a plate\\n                    newer than the one he sent, but sequentially too far. For example, if Martin sends DDDDD45,\\n                    and receives ZZZZZ45, he will not believe that Isa saw a car with that plate, because he knows\\n                    that the ACM couldn\\u2019t have printed enough plates to get to ZZZZZ45 in the time he received\\n                    that answer.\\n                \\n                    So, Martin has decided to consider Isa the winner only if he receives a legal plate, newer than\\n                    his, and older than or equal to the C-th consecutive plate after the one he sent. He calls C his\\n                    confidence number. For example, if Martin sends ABC1234, and his confidence number is 6, he\\n                    will think that Isa is the winner only if he receives any plate newer than ABC1234, but older\\n                    than or equal to ABC1240.\",\n    \"id\": 1363,\n    \"input\": \"The input contains several test cases. Each test case is described in a single line that contains\\n                    two strings SM and SI , and an integer C, separated by single spaces. SM is the 7-character\\n                    string sent by Martin, which is always a legal plate. SI is the 7-character string answered\\n                    by Isa, which was generated using her random generator. C is Martin\\u2019s confidence number\\n                    (1 \\u2264 C \\u2264 109).\\n                \\n                    The end of input is indicated by SM = SI = \\\"*\\\" and C = 0.\\n                \\n                    The input must be read from standard input.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Car Plates Competition\",\n    \"output\": \"For each test case, output a single line with the uppercase character \\u201cY\\u201d if, according to Martin,\\n                    Isa is the winner, and with the uppercase character \\u201cN\\u201d otherwise.\\n                \\n                    The output must be written to standard output.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo Heiber  Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"Emoticons are used in chat and e-mail conversations to try to express the emotions that printed words cannot. This may seem like a nice feature for many, but a lot of people \\ufb01nd it really annoying and wants to get rid of emoticons.\\n                \\n                    George is one of those people. He hates emoticons so much, that he is preparing a plan to remove all emoticons from all e-mails in the world. Since you share his visionary plans, you are preparing a special program to help him.\\n                \\n                    Your program will receive the list of emoticons to proscribe. Each emoticon will be a string of characters not including any whitespace. You will also receive several lines of text. What you need to do is change some characters of the text into spaces to ensure no emoticon is left on the text. For an emoticon to be considered to appear in the text it has to appear in a single line and be made of consecutive characters.\\n                \\n                    To help George\\u2019s plan remain secret as long as possible, you need to do your job with the minimum possible amount of character changes.\",\n    \"id\": 1364,\n    \"input\": \"The input \\ufb01le contains several test cases. Each test case consists of several lines. The \\ufb01rst line of each test case will contain two integers separated by a single space: N, the number of emoticons to proscribe, and M, the number of lines the text has. The next N lines contain one emoticon each, a non-empty string of at most 15 characters. Each of the last M lines of the test case contains a line of text of at most 80 characters. You can assume 1 \\u2264 N, M \\u2264 100.\\n                \\n                    Valid input characters for emoticons are uppercase and lowercase letters, digits and the symbols \\u201c!?.,:;-_\\u2019#$%&/=*+(){}[]\\u201d (quotes for clarity). Each line of the text may contain the same characters with the addition of the space character.\\n                \\n                    The input is terminated by N = M = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Emoticons :-)\",\n    \"output\": \"For each test case, output exactly one line containing a single integer that indicates the minimum number of changes you need to make to the entire text to ensure no emoticon on the list appears in it.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Pablo Heiber  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"A group of K friends is going to see a movie. However, they are too late to get good tickets, so they are looking for a good way to sit all nearby. Since they are all science students, they decided to come up with an optimization problem instead of going on with informal arguments to decide which tickets to buy.\\n\\n                \\n                    The movie theater has R rows of C seats each, and they can see a map with the currently available seats marked. They decided that seating close to each other is all that matters, even if that means seating in the front row where the screen is so big it\\u2019s impossible to see it all at once. In order to have a formal criteria, they thought they would buy seats in order to minimize the extension of their group.\\n\\n                \\n                    The extension is defined as the area of the smallest rectangle with sides parallel to the seats that contains all bought seats. The area of a rectangle is the number of seats contained in it. They\\u2019ve taken out a laptop and pointed at you to help them find those desired seats.\",\n    \"id\": 1365,\n    \"input\": \"Each test case will consist on several lines. The first line will contain three positive integers R, C and K as explained above (1 \\u2264 R, C \\u2264 300, 1 \\u2264 K \\u2264 R \\u00d7 C). The next R lines will contain exactly C characters each. The j-th character of the i-th line will be \\u2018X\\u2019 if the j-th seat on the i-th row is taken or \\u2018.\\u2019 if it is available. There will always be at least K available seats in total.\\n\\n                \\n                    Input is terminated with R = C = K = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Finding Seats\",\n    \"output\": \"For each test case, output a single line containing the minimum extension the group can have.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"There are a lot of fun games that use small colored sticks. The variable used in this problem involves building rectangles. The game consists in, given a set of sticks of variables sizes, draw rectangles on the floor, utilizing the sticks as the sides of the rectangle, with the condition that each stick can be used in only one rectangle, and each side of the rectangle has only one stick. In this game, two kids receive two equal sets of sticks. Wins the game the one who draw the greatest number of rectangles with the sticks.\\n                \\n                    Given a set of sticks of integer sizes, you must write a software to determinate the greatest number of rectangles that it's possible to draw.\",\n    \"id\": 1366,\n    \"input\": \"The input contains several test cases. The first line of a test case contains an integer N that indicates the number of different stick sizes (1 \\u2264 N \\u2264 1.000) in the set. Each one of the N following lines contains two integers Ci and Vi, representing respectively a size (1 \\u2264 Ci \\u2264 1.000) and the number of sticks with that size (1 \\u2264 Vi \\u2264 1.000). Each stick size appears at most once in a test case (which means, the values of C1 are different). The end of the input is indicated by N = 0.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Sticks Game\",\n    \"output\": \"For each test case your software must print only one output line, with an integer indicating the maximum number of rectangles that can be formed with the given set of sticks.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programacao da SBC 2004, Warm-Up  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Well, we have to admit: we need your help. This year things have not been running as smoothly as we wished, and we could not finish the contest system software in time. One vital part is missing, and as you know, we need the system working by this afternoon, for the real contest. The missing part is the module that computes the team\\u2019s scores, given the team\\u2019s list of submissions. Please, please, someone help us!\",\n    \"id\": 1367,\n    \"input\": \"The input contains several test cases. The first line of a test case contains a single integer N indicating the number of submissions in the test (1 \\u2264 N \\u2264 300). Each of the following N lines describe a submission; each of these lines contains a problem identifier (a single letter from \\u2019A\\u2019 to \\u2019Z\\u2019), followed by an integer T representing the time in minutes (0 \\u2264 T \\u2264 300), followed by a judgement (the word \\u201ccorrect\\u201d or the word \\u201cincorrect\\u201d). The input is in ascending order by time, and there will be at most one \\u201ccorrect\\u201d judgement for each problem. The end of input is indicated by N = 0. The input must be read from standard input.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Help!\",\n    \"output\": \"For each test case in the input your program should output a line containing two integers S and P , separated by a space, where S is the number of distinct problems with a \\u201ccorrect\\u201d judgement and P is the time at which each distinct problem is first judged \\u201ccorrect\\u201d, plus 20 for each \\u201cincorrect\\u201d submission for a problem that is later judged \\u201ccorrect\\u201d. The output must be written to standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Kids love to play with little cubes. They spent hours creating 'houses', 'buildings', etc. Tomaz's little brother just won a set of colorful cubes on his birthday. Each face of each cube has a different color.\\n\\n                \\n                    As Tomaz is a very analytic kid, he decided to find out how many \\\"kinds\\\" of different cubes his little brother won. Can you help him? Two cubes are considered the same kind if it's possible to rotate one of them in a way that the colors at the respective faces of the cubes are equals.\",\n    \"id\": 1368,\n    \"input\": \"The input contains several test cases. The first line of a test case contain an integer N specifying the number of cubes of the set (1 \\u2264\\u00a0N \\u2264\\u00a01000). The next 3 x N lines describe a set of cubes. In the description the colors will be identified by the numbers from 0 to 9. The description of each cube will be given in three lines showing the six colors of the \\\"open\\\" cube faces, in the format showed in the example below. In the example below, the cube faces has colors from 1 to 6, the face with color 1 is in the opposite side of the face with color 3, and the face with color 2 is neighbor of the faces 1, 3, 4 and 6, and is in the opposite side of the face with color 5.\\n\\n                \\n                    1\\n                    2 4 5 6\\n                    3\\n\\n                \\n                    The final of the input is indicated by N = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Colorful Cubes\",\n    \"output\": \"For each test case your program must print one line containing only one integer, corresponding to the number of different cubes in a given set.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Paulo Oliva  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"It\\u2019s true that most of people don\\u2019t care about what happens inside a computer, since it execute the tasks correctly. There are, however, a couple few nerds that feel good seeing the movement of bits and bytes inside the computer memory.\\n\\n                \\n                    It\\u2019s for this audience, composed mostly by teenagers, that the software multinational ACM (Abstractions of Concrete Machines) wants to develop a system that follow and produce a report of the operations in a hard disk. A hard disk is composed of a sequence of storage atomic cells, each one of 1Kb size.\\n\\n                \\n                    Specifically, ACM wants to follow three kinds of operations:\\n\\n                \\n                    insere NAME T\\n                \\n\\n                \\n                    Inserts the file NAME on the disk, of size T. You may assume that a file with such name doesn\\u2019t exist on the disk. The size T from a file is given in the form XKb, XMb, XGb, where X is an integer (0 < X <= 1023). NAME is a character array with maximum length 10.\\n\\n                \\n                    remove NAME\\n                \\n\\n                \\n                    Remove the file NAME from the disk. If a file with such name doesn\\u2019t exist, it does nothing.\\n\\n                \\n                    otimiza\\n                \\n\\n                \\n                    Compact the disk, shifting existent files to the beginning of the disk, removing free spaces between two subsequent two files, and preserving the order in that the files show in the disk, in a way that leaves free memory at the end of the disk.\\n\\n                \\n                    The disk storage capacity is always a multiple of 8Kb. At the beginning, the disk is empty, in other words, has a free block of the size of the disk capacity. A file is always stored in a cell block of contiguous storage. The file to be inserted must always be inserted at the beginning of the smaller free block such size is bigger or equal the file\\u2019s size. If more than one free block are equally appropriate, choose the closest to the beginning of the disk. Whether it\\u2019s not possible to insert the file by lack of a free big enough block, it must automatically execute the otimiza operation.\\u00a0 If after the optimization it still not possible to inset the file, an error message must be produced. If all the operations were executed without errors, your program must produce one approximated estimative of the disk final stage, as described below.\\n\\n                \\n                    Remember that 1Mb correspond to 1024Kb, while 1Gb correspond to 1024Mb.\",\n    \"id\": 1369,\n    \"input\": \"The input is composed by several test cases. The first line of a test case contains only one integer N indicating the number of operations in the disk (0 < N \\u2264\\u00a010000). The second line of a test case contains the description of the disk size, composed by an integer D (0 < D \\u2264\\u00a01023), followed by a unity specification; the unity specification is a character array of two characters in the format Kb, Mb or Gb. Each one of the next N lines contains a description of one disk operation (insere, remove or otimiza, as described above). The end of the input is indicated by N\\u00a0 = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Memory Manager\",\n    \"output\": \"To each test case your program must produce one output line. If all the insert operations were executed without errors, your program must produce one line containing an approximated estimative of the disk stage, as follows. Divide the number of the disk bytes in eight contiguous blocks of the same size. To each one of the eight blocks your program must verify the percentage P of free bytes in that block, and show the estimate of the final stage at the format\\n\\n                \\n                    [C] [C] [C] [C] [C] [C] [C] [C]\\n\\n                \\n                    where C is ' ', '-' or '#', depend if 75 < P \\u2264\\u00a0100, 25 < P \\u2264\\u00a075 or 0 \\u2264\\u00a0P \\u2264\\u00a025, respectively. Whether a file can\\u2019t be inserted by lack of memory, your program must produce one line containing the expression ERRO: disco cheio; in such case, subsequent operations of the test case must be ignored.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Alessandro Luna de Almeida, UFPE  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Every year since 1996, computer scientists worldwide meet for the famous Regatta of Scientists. The competition consists of a boat race with obstacles along the ocean, where the goal of each team is, from a common point, reach the point of arrival without any obstacle being touched or passed over. A team that touches or passes over an obstacle is automatically disqualified. The winning team is the one who first reaches the end point (the point of arrival is different from the starting point).\\n\\n                \\n                    You have been hired by the Brazilian team to develop a program that calculates the length of the shortest valid route from the point of departure to the point of arrival. The ocean is considered an infinite plane, where each obstacle is located in a fixed position and is represented by a line segment described by its two ends (x1, y1) and (x2, y2). The boats are dimensionless (represented as a point in the plane) and obstacles have negligible thickness.\\n\\n                \\n                    The obstacles are arranged such that they do not intersect. Similarly, the start and arrival points of the competition are not intercepted by any obstacle.\",\n    \"id\": 1370,\n    \"input\": \"The input consists of several test cases. The first line of a test case contains five integers xi, yi, xf, yf and n, representing respectively the coordinates of the starting point (xi, yi), the coordinates of the arrival point (xf, yf) and the number of obstacles (n \\u2264 150). Each of the next n lines of a test case contains four integers x1, y1, x2 and y2 coordinates that describe the two extremes of an obstacle. Assume that x and y coordinates of any point satisfies -5000 \\u2264 x, y \\u2264 5000. The end of input is represented by a line containing xi = yi = xf = yf = n = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Regatta of Scientists\",\n    \"output\": \"For each test case, print a line containing the length of the shortest valid route possible, with 2 digits after the decimal point.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Alessandro Luna de Almeida, UFPE  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Madam Beauvoir has a mansion where she hosts her descendants (grandchildren and great-grandchildren) during their vacations. Her mansion has exactly N rooms (each room is numbered from 1 to N), and she has exactly N descendants (each descendant is also numbered from 1 to N).\\n\\n                \\n                    Like all children, Mme. Beauvoir's descendants are really prankish. It's always the same mess: Every day, they wake up early in the morning before her, and meet in the garden. Then, each descendant, one at a time, enters the mansion and switch the state of the door of the rooms whose number is a multiple of his own number. To switch the state of a door means to close an open door or to open a closed door. So, for example, the descendant 15 will switch the state of the door of the rooms 15, 30, 45, and so on.\\n\\n                \\n                    Initially, all doors are closed (all descendants close the doors before going to the garden). Also, each descendant enters exactly one time in the mansion (due to the mess, however, we don't know in which order). Which doors will be open once all descendants have entered the mansion?\",\n    \"id\": 1371,\n    \"input\": \"The input consists of several test cases. Each test case is described by a line containing the integer N (0 \\u2264 N \\u2264 25000000), the number of rooms and descendants. The last test case is followed by a line containing a single 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Close the Doors!\",\n    \"output\": \"For each test case, print the numbers of the rooms whose door will be open, in increasing order. Print a single space between consecutive numbers.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pedro Demasi, UFRJ  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Little Charlie is a nice boy addicted to candies. He is even a subscriber to All Candies Magazine and was selected to participate in the International Candy Picking Contest.\\n\\n                \\n                    In this contest a random number of boxes containing candies are disposed in M rows with N columns each (so, there are a total of M x N boxes). Each box has a number indicating how many candies it contains.\\n\\n                \\n                    The contestant can pick a box (any one) and get all the candies it contains. But there is a catch (there is always a catch): when choosing a box, all the boxes from the rows immediately above and immediately below are emptied, as well as the box to the left and the box to the right of the chosen box. The contestant continues to pick a box until there are no candies left.\\n\\n                \\n                    The figure bellow illustrates this, step by step. Each cell represents one box and the number of candies it contains. At each step, the chosen box is circled and the shaded cells represent the boxes that will be emptied. After eight steps the game is over and Charlie picked 10 + 9 + 8 + 3 + 7 + 6 + 10 + 1 = 54 candies.\\n\\n                \\u200b\\n\\n                \\n                    For small values of M and N, Charlie can easily find the maximum number of candies he can pick, but when the numbers are really large he gets completely lost. Can you help Charlie maximize the number of candies he can pick?\",\n    \"id\": 1372,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two positive integers M and N (1 \\u2264 M x N \\u2264 105), separated by a single space, indicating the number of rows and columns respectively. Each of the following M lines contains N integers separated by single spaces, each representing the initial number of candies in the corresponding box. Each box will have initially at least 1 and at most 103 candies.\\n\\n                \\n                    The end of input is indicated by a line containing two zeroes separated by a single space.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Candy\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing a single value, the integer indicating the maximum number of candies that Charlie can pick.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Cl\\u00e1udio L. Lucchesi  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Thomas, a computer scientist that works with DNA sequences, needs to compute longest common subsequences of given pairs of strings. Consider an alphabet S of letters and a word w = a1a2 ... ar, where ai \\u2208 \\u03a3, for i = 1, 2, ...,r. A subsequence of w is a word x = ai1ai2 ... ais such that 1 \\u2264 i1 < i2 < ... < is \\u2264 r. Subsequence x is a segment of w if ij+1 = ij + 1, for j = 1, 2, ..., s-1. For example the word ove is a segment of the word lovely, whereas the word loly is a subsequence of lovely, but not a segment.\\n\\n                \\n                    A word is a common subsequence of two words w1 and w2 if it is a subsequence of each of the two words. A longest common subsequence of w1 and w2 is a common subsequence of w1 and w2 having the largest possible length. For example, consider the words w1 = lovxxelyxxxxx and w2 = xxxxxxxlovely. The words w3 = lovely and w4 = xxxxxxx, the latter of length 7, are both common subsequences of w1 and w2. In fact, w4 is their longest common subsequence. Notice that the empty word, of length zero, is always a common subsequence, although not necessarily the longest.\\n\\n                \\n                    In the case of Thomas, there is an extra requirement: the subsequence must be formed from common segments having length K or more. For example, if Thomas decides that K = 3, then he considers lovely to be an acceptable common subsequence of lovxxelyxxxxx and xxxxxxxlovely, whereas xxxxxxx, which has length 7 and is also a common subsequence, is not acceptable. Can you help Thomas?\",\n    \"id\": 1373,\n    \"input\": \"The input contains several test cases. The first line of a test case contains an integer K representing the minimum length of common segments, where 1 \\u2264 K \\u2264 100. The next two lines contain each a string on lowercase letters from the regular alphabet of 26 letters. The length L of each string satisfies the inequality 1 \\u2264 L \\u2264 103. There are no spaces on any line in the input. The end of the input is indicated by a line containing a zero.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"DNA Subsequences\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing the length of the longest subsequence formed by consecutive segments of length at least K from both strings. If no such common subsequence of length greater than zero exists, then 0 must be printed.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Christian Ruz  Chile\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Martin and Isa stopped playing crazy games and finally got married. It's good news! They're pursuing a new life of happiness for both and, moreover, they're moving to a new house in a remote place, bought with most of their savings.\\n\\n                \\n                    Life is different in this new place. In particular, electricity is very expensive, and they want to keep everything under control. That's why Martin proposed to keep a daily record of how much electricity has been consumed in the house. They have an electricity meter, which displays a number with the amount of KWh (kilowatt-hour) that has been consumed since their arrival.\\n\\n                \\n                    At the beginning of each day they consult the electricity meter, and write down the consumption. Some days Martin does it, and some days Isa does. That way, they will be able to look at the differences of consumption between consecutive days and know how much has been consumed.\\n\\n                \\n                    But some days they simply forget to do it, so, after a long time, their register is now incomplete. They have a list of dates and consumptions, but not all of the dates are consecutive. They want to take into account only the days for which the consumption can be precisely determined, and they need help.\",\n    \"id\": 1374,\n    \"input\": \"The input contains several test cases. The first line of each test case contains one integer N indicating the number of measures that have been taken (2 \\u2264 N \\u2264 103). Each of the N following lines contains four integers D, M, Y and C, separated by single spaces, indicating respectively the day (1 \\u2264 D \\u2264 31), month (1 \\u2264 M \\u2264 12), year (1900 \\u2264 Y \\u2264 2100), and consumption (0 \\u2264 C \\u2264 106) read at the beginning of that day. These N lines are increasingly ordered by date, and may include leap years. The sequence of consumptions is strictly increasing (this is, no two different readings have the same number). You may assume that D, M and Y represent a valid date.\\n\\n                \\n                    Remember that a year is a leap year if it is divisible by 4 and not by 100, or well, if the year is divisible by 400.\\n\\n                The end of input is indicated by a line containing only one zero.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Electricity\",\n    \"output\": \"For each test case in the input, your program must print a single line containing two integers separated by a single space: the number of days for which a consumption can be precisely determined, and the sum of the consumptions for those days.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In car races, there is always a high pole next to the finish line of the track. Before the race starts, the pole is used to display the starting grid. The number of the first car in the grid is displayed at the top of the pole, the number of the car in second place is shown below that, and so on.\\n\\n                During the race, the pole is used to display the current position of each car: the car that is winning the race has its number displayed at the top of the pole, followed by the car that is in second place, and so on.\\n\\n                Besides showing the current position of a car, the pole is also used to display the number of positions the cars have won or lost, relative to the starting grid. This is done by showing, side by side to the car number, an integer number. A positive value v beside a car number in the pole means that car has won v positions relative to the starting grid. A negative value v means that car has lost v positions relative to the starting grid. A zero beside a car number in the pole means the car has neither won nor lost any positions relative to the starting grid (the car is in the same position it started).\\n\\n                \\n\\n                We are in the middle of the Swedish Grand Prix, the last race of the World Championship. The race director, Dr. Shoo Makra, is getting worried: there have been some complaints that the software that controls the pole position system is defective, showing information that does not reflect the true race order.\\n\\n                Dr. Shoo Makra devised a way to check whether the pole system is working properly. Given the information currently displayed in the pole, he wants to reconstruct the starting grid of the race. If it is possible to reconstruct a valid starting grid, he plans to check it against the real starting grid. On the other hand, if it is not possible to reconstruct a valid starting grid, the pole system is indeed defective.\\n\\n                Can you help Dr. Shoo Makra?\",\n    \"id\": 1375,\n    \"input\": \"The input contains several test cases. The first line of a test case contains one integer N indicating the number of cars in the race (2 \\u2264 N \\u2264 103). Each of the next N lines contains two integers C and P, separated by one space, representing respectively a car number (1 \\u2264 C \\u2264 104) and the number of positions that car has won or lost relative to the starting grid (-106 \\u2264 P \\u2264 106), according to the pole system. All cars in a race have different numbers.\\n\\n                The end of input is indicated by a line containing only one zero.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Pole Position\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing the reconstructed starting grid, with car numbers separated by single spaces. If it is not possible to reconstruct a valid starting grid, the line must contain only the value -1.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Jorge Teran  Bolivia\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In the land of ACM ruled a great King who became obsessed with order. The kingdom had a rectangular form, and the King divided the territory into a grid of small rectangular counties. Before dying, the King distributed the counties among his sons.\\n\\n                However, he was unaware that his children had developed a strange rivalry: the first heir hated the second heir, but not the rest; the second heir hated the third heir, but not the rest, and so on . . . Finally, the last heir hated the first heir, but not the other heirs.\\n\\n                As soon as the King died, the strange rivalry among the King\\u2019s sons sparked off a generalized war in the kingdom. Attacks only took place between pairs of adjacent counties (adjacent counties are those that share one vertical or horizontal border). A county X attacked an adjacent county Y whenever the owner of X hated the owner of Y . The attacked county was always conquered by the attacking brother. By a rule of honor all the attacks were carried out simultaneously, and a set of simultaneous attacks was called a battle. After a certain number of battles, the surviving sons made a truce and never battled again. For example, if the King had three sons, named 0, 1 and 2, the figure below shows what happens in the first battle for a given initial land distribution:\\n\\n                \\u200b\\n\\n                You were hired to help an ACM historian determining, given the number of heirs, the initial land distribution and the number of battles, what was the land distribution after all battles.\",\n    \"id\": 1376,\n    \"input\": \"The input contains several test cases. The first line of a test case contains four integers N, R, C and K, separated by single spaces. N is the number of heirs (2 \\u2264 N \\u2264 100), R and C are the dimensions of the kingdom (2 \\u2264 R, C \\u2264 100), and K is the number of battles (1 \\u2264 K \\u2264 100). Heirs are identified by sequential integers starting from zero (0 is the first heir, 1 is the second heir, ..., N \\u2212 1 is the last heir). Each of the next R lines contains C integers Hr,c separated by single spaces, representing initial land distribution: Hr,c is the initial owner of the county in row r and column c (0 \\u2264 Hr,c \\u2264 N \\u2212 1).\\n\\n                The last test case is followed by a line containing four zeroes separated by single spaces.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Brothers\",\n    \"output\": \"For each test case, your program must print R lines with C integers each, separated by single spaces in the same format as the input, representing the land distribution after all battles.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo Heiber  Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"Your school has a computer that is used as a web server for hosting its institutional web site, personal pages of the staff, sites for research groups, subjects, and many others. Recently, the hard disk table was corrupted, so the organization of all the files was lost. Sadly enough, there are no backups of that information. The only hope is to look through the entire disk data and try to find out which parts correspond to each file. Fortunately, the disk was using a file system that kept each individual file contiguous, so only contiguous pieces of data need to be inspected.\\n\\n                The disk data is a sequence of bytes. Each byte in this particular disk can store an English alphabet letter (distinguishing lowercase and uppercase), a decimal digit, a point or a comma, making a total of 64 different characters.\\n\\n                While you were thinking about how to solve the problem, you suddenly remembered that the file system also maintained multiple copies of each file, so only the pieces of contiguous bytes that are repeated had a chance of being a file. Moreover, for each repetition of the same contiguous bytes, only one copy needs to be checked. For instance, if the data is \\u2018ababcabb\\u2019, the contiguous subsequences \\u2018a\\u2019, \\u2018b\\u2019 and \\u2018ab\\u2019 are repeated, but nothing containing \\u2018c\\u2019, nor \\u2018ba\\u2019 or \\u2018bb\\u2019 is. Therefore, we have 3 pieces of contiguous bytes that need checking in this case. You decide to write a program that computes exactly how many sequences need checking, that is, the number of different sequences of contiguous bytes that appear at least twice in the data.\",\n    \"id\": 1377,\n    \"input\": \"There are several test cases. The input of each test case is given in exactly one line, containing a non-empty string of at most 105 characters that represents the disk data. Each character in the string is either a lowercase letter, an uppercase letter, a digit, a point or a comma. The last test case is followed by a line containing a single asterisk.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"File Recover\",\n    \"output\": \"For each test case output a single line with an integer, representing the number of different contiguous subsequences that appear at least twice in the input string.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Pablo Heiber  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A given triangle can be either equilateral (three sides of the same length), scalene (three sides of different lengths), or isosceles (two sides of the same length and a third side of a different length). It is a known fact that points with all integer coordinates cannot be the vertices of an equilateral triangle.\\n\\n                It's given to you a set of different points with integer coordinates on the XY plane, such that no three points in the set lay on the same line. Your job is to calculate how many of the possible choices of three points are the vertices of an isosceles triangle.\",\n    \"id\": 1378,\n    \"input\": \"There are several test cases. Each test case is given in several lines. The first line of each test case contains an integer N indicating the number of points in the set (3 \\u2264 N \\u2264 1000). Each of the next N lines describes a different point of the set using two integers X and Y separated by a single space (1 \\u2264 X, Y \\u2264 106 ); these values represent the coordinates of the point on the XY plane. You may assume that within each test case no two points have the same location and no three points are collinear.\\n\\n                The last test case is followed by a line containing a single zero.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Isosceles Triangles\",\n    \"output\": \"For each test case output a single line with a single integer indicating the number of subsets of three points that are the vertices of an isosceles triangle.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"By Pablo Heiber  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The mean of three integers A, B and C is (A + B + C)/3. The median of three integers is the one that would be in the middle if they are sorted in non-decreasing order. Given two integers A and B, return the minimum possible integer C such that the mean and the median of A, B and C are equal.\",\n    \"id\": 1379,\n    \"input\": \"Each test case is given in a single line that contains two integers A and B (1 \\u2264 A \\u2264 B \\u2264 109). The last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Mean Median Problem\",\n    \"output\": \"For each test case output one line containing the minimum possible integer C such that the mean and the median of A, B and C are equal.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es, IME-USP  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Heinrich Hermann Robert Koch was a German doctor who lived from 1843 to 1910 and was famous for having isolated the bacillus that causes tuberculosis. His studies on the disease that caused many deaths until the mid-twentieth century enabled the development of a vaccine that saved millions of lives across the world. Robert Koch was awarded in 1905 with the Nobel Prize of Medicine and is considered one of the fathers of Microbiology.\\n\\n                One of the studies of Koch was connected to the growth rate of the population of bacilli. Koch noted that the bacilli take a moment of time to reach maturity and initiate the cellular division. Thereafter, the bacillus generates at each instant of time a new individual by a split. Thus, if we assume an initial population with only one individual in the next moment we will also have one (it reaches maturity for division), the following we will have 2, at the other 3, so the 5 and so on.\\n\\n                Your task is, given an integer K, determine the last three digits of the bacilli after K time steps, starting from an initial population with an individual.\",\n    \"id\": 1380,\n    \"input\": \"The input consists of several instances. The first line of input contains an integer T indicating the number of instances.\\n\\n                Each instance consists of a single line containing an integer K (1 \\u2264 K \\u2264 101000000).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Bacilli Population Growth\",\n    \"output\": \"For each instance print a line containing the last three digits of the bacilli after K time instants.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es, IME-USP  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Diophantus of Alexandria lived in the third century AD and is considered by many as the \\\"father of algebra\\\". His book \\\"Arithmetica\\\" was about the solution of algebraic equations with integer coefficients for which it also seeks integer solutions. These equations are known as Diophantine equations. A great scholar of Diophantus' work was Pierre de Fermat, a known French mathematician.\\n\\n                In this problem you must solve a class of Diophantine equations of the type x1 + x2 + ... +xn = C. That is, given integers N and C, determine how many non-negative integer solutions exist for the equation x1 + x2 + ... +xn = C, where0 \\u2264 xi \\u2264 C for all i = 1, 2, ... , N.\",\n    \"id\": 1381,\n    \"input\": \"The input is composed of several test cases. The first line of input contains an integer T indicating the number of test cases. Each test case consists of a line containing two integers N and C (1 \\u2264 N, C \\u2264 1000000). Due the possibility of this number be too big, so print it as module 1300031 (number % 1300031).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Diophantine Equations\",\n    \"output\": \"For each test case print a line containing the number of integer solutions that satisfy the constraints.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es, IME-USP  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Watson, Crick and Wilkins received the 1962 Nobel Prize in Medicine especially for their work that resulted in the discovery of the structure of DNA molecules and their importance in the transmission of information between generations of living beings. Watson and Crick published in the journal \\\"Nature\\\" in 1953 an article showing that the DNA molecule had a double helix structure. The article has an immense importance these days, especially after the many advances in the field.\\n\\n                A lot of researches have been made in the Bioinformatics field linked to the discovery of the sequence of bases comprising the DNA molecules of various living beings. In particular, the structure of these molecules has been used to form theories of how living organisms have evolved, and which has common ancestors. It is believed that living beings present on the planet today may be descended from common ancestors, and the changes in their respective DNAs are due to phenomena of mutation occurred during evolution. Many biologists believe in the principle of parsimony, which says that the number of these mutations should be the minimum possible, since the Nature searches, somehow, the \\\"cheaper\\\" way for the desired modification.\\n\\n                Your task in this problem is to assist researchers in the task of determining whether two DNA sequences may have a common ancestor. Consider two given sequences (we can imagine as sequences of integers). Your goal is determine the smallest number of swaps of elements of one sequence (the elements don\\u2019t need be in adjacent positions in the sequence) which takes one of the sequences in the other. Note that we can consider a sequence as fixed (eg., in ascending order), thus we look for the minimum number of such swaps that orders the given sequence.\",\n    \"id\": 1382,\n    \"input\": \"The input is composed of several test cases. The first line of input contains an integer T indicating the number of test cases. The first line of each instance has an integer N (1 \\u2264 N \\u2264 10000) indicating the number of integers in the sequence. The second line contains a permutation of integers 1, 2, ... , N separated by a space.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Elementary, my Dear Watson!\",\n    \"output\": \"For each instance print a line containing the minimum number of such swaps that sorts the given sequence.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o IME-USP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The Sudoku puzzle spread quickly across the world, being the most popular hobby in the planet today. Some people, however, fill the matrix incorrectly, breaking the rules. Your task is to write a program that checks whether a filled matrix is a solution to the puzzle or not.\\n\\n                The matrix is a 9 x 9 matrix of integers. To be considered a solution to the puzzle, each row and each column must contain all integer numbers between 1 and 9. Also, if the matrix is partitioned in nine 3 x 3 sub-matrices (as shown below), each one of them must also contain all numbers between 1 and 9. The following matrix is an example of a solution to the puzzle.\\n\\n\",\n    \"id\": 1383,\n    \"input\": \"Several instances are given. The first line of the input contains n > 0, the number of matrices in the input. The following lines describe n matrices. Each matrix is described by 9 lines. These lines contain 9 integers each.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Sudoku\",\n    \"output\": \"For each instance, your program must print a line containing \\\"Instancia k\\\" , where k is the instance number. In the second line, your program must print \\\"SIM\\\" (portuguese for yes) if the given matrix is a solution to the puzzle, or \\\"NAO\\\" (portuguese for no) otherwise. Print an empty line after each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Guilherme Ottoni  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Mr. Frog lives in a grid-like marsh of rectangular shape, composed of equally-sized cells, some of which are dry, some of which are only watery places. Mr. Frog lives in a dry cell and can jump only from a dry cell to another dry cell on his wanderings around the marsh.\\n\\n                Mr. Frog wants to visit his girlfriend, Ms. Toad, who also lives in a dry cell in the same marsh. But Mr. Frog is lazy, and wants to spend the minimum amount of energy in his jumping way to Ms. Toad\\u2019s home. Mr. Frog knows how much energy he spends in any of his jumps. For any single jump, Mr. Frog always uses the following figure to determine which are the possible target cells from his current position (the cell marked F), and the corresponding energy spent in the jump, in calories. Any other cell is unreachable from Mr. Frog\\u2019s current position with a single jump.\\n\\n                \\n\\n                Your task is to determine the minimum amount of energy that Mr. Frog needs to spend to get from his home to Ms. Toad\\u2019s home.\",\n    \"id\": 1384,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers, C and R, indicating respectively the number of columns and rows of the marsh (1 \\u2264 C, R \\u2264 1000). The second line of a test case contains four integers Cf, Rf, Ct, and Rt, where (Cf,Rf) specify Mr. Frog\\u2019s home location and (Ct,Rt) specify Ms. Toad\\u2019s home location (1 \\u2264 Cf, Ct \\u2264 C and 1 \\u2264 Rf, Rt \\u2264 R). The third line of a test case contains an integer W (0 \\u2264 W \\u2264 1000) indicating the number of watery places in the marsh. Each of the next W lines contains four integers C1, R1, C2, and R2 (1 \\u2264 C1 \\u2264 C2 \\u2264 C and 1 \\u2264 R1 \\u2264 R2 \\u2264 R) describing a rectangular watery place comprising cells whose coordinates (x, y) are so that C1 \\u2264 x \\u2264 C2 and R1 \\u2264 y \\u2264 R2. The end of input is indicated by C = R = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Lazy Jumping Frog\",\n    \"output\": \"For each test case in the input, your program must produce one line of output, containing the minimum calories consumed by Mr. Frog to go from his home location to Ms. Toad\\u2019s home location. If there is no way Mr. Frog can get to Ms. Toad\\u2019s home, your program should output impossible.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"By Rodrigo Cardoso  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"At the end of the week, John asked Mary to send him an urgent sales report. Mary was in a hurry because she was leaving for her holiday. She then copy-pasted the sales sheet on an email, sent it to John and went out. She did not want to be annoyed with work issues, so she left without telling anyone where she would be. She announced that she would be simply not available for the next two weeks, turned off her cell phone, and left.\\n\\n                When John received the message he realized that the report had no spaces at all! He knew that the report should have a header line with product codes of the form P1, P2, . . ., PN and the word Totals at the end. Then there would be several lines reporting product sales for the different sellers of Mary\\u2019s office. Each seller was identified with a name composed by one word (only alphabetical characters). The line corresponding to a seller should begin with his/her name, followed by the number of sold products, according to the columns\\u2019 report. The last line of the report should begin with the two letters TP followed by the totals of each column in the report (of course, no seller\\u2019s name began with the letters TP). John knew that there were no negative numbers in the report, a zero quantity was reported with a single 0, and there were no leading zeros when reporting a positive quantity.\\n\\n                At this point, John decided to reconstruct Mary\\u2019s report. He knew that there could be more than one possible result, but he wanted to do it anyway with the first consistent solution that he could find (maybe he could fix any mistakes when Mary comes back).\\n\\n                Could you help John with the recovering of Mary\\u2019s sales report?\",\n    \"id\": 1385,\n    \"input\": \"The input consists of several test cases. The first line in the input contains an integer C specifying the number of test cases. The first line of a report is a header line, containing the product codes P1, P2, . . . PN and the word Totals, as described above. The numbering of products in this header line is consecutive, from 1 to N, with 1 \\u2264 N \\u2264 5. Then there are a number of lines, each representing a row of the report, as described above. The last line of the report starts with the letters TP and have the format described above. Consider that each seller sold less than 1000 units of each product. There are no more than 4 sellers on each test case. Each seller name will not exceed 10 characters (only uppercase and lowercase letters).\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Report Recovery\",\n    \"output\": \"For each test case in the input your program must produce one possible Mary\\u2019s report. Each line of the answer must be left aligned, with its items separated by a single space, and with no space at its end.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo Heiber  Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"An extensive area of research in computer science is the field of communications. With computer networks being part of everyday life of many people, the development of ways for making networks faster, more reliable and secure is constantly needed. This practical needs to motivate an extensive research activity in the theory behind communications.\\n\\n                The first thing needed to establish any kind of communication is a common code. A code is a way of changing the form of a piece of information into some other form, in general to make it possible to convey that piece of information from one place to another. Flag codes used by boats and the Morse code used in telegraphy are examples of codes for translating letters into different forms to enable communication over different media.\\n\\n                More formally, a code is a set of strings composed of symbols from one alphabet. Each string defined in the code is called a code word. A message is then composed concatenating a set of code words to convey the information needed. For example, in Morse code the alphabet is composed of the symbols hyphen and dot; letter \\u201cS\\u201d is represented by the code word \\u201c...\\u201d, letter \\u201cO\\u201d is represented by the code word \\u201c---\\u201d, and therefore the distress message \\u201cSOS\\u201d in Morse code is \\u201c...---...\\u201d.\\n\\n                Codes for communication can have many desirable and undesirable properties such as ambiguity, entropy, redundancy, and many more. In this problem we will focus on ambiguity as a key property.\\n\\n                A code is ambiguous when there exists a message using that code that can be partitioned into different sequences of code words. In other words, in an ambiguous code a message may have more than one meaning. For example, consider the binary alphabet, composed of symbols {0,1}. For the code composed of the words {10, 01, 101} the message 10101 can be understood as 10-101 or 101-01 and therefore the code is ambiguous. On the other hand, for the code composed of the words {01, 10, 011} no ambiguous message exists and therefore the code is unambiguous.\\n\\n                As a part of the computer science community, you are required to develop a tester that checks if codes are ambiguous. In case a code is indeed ambiguous, you are also required to report the length (i.e. the number of symbols) of the shortest ambiguous message for that code.\",\n    \"id\": 1386,\n    \"input\": \"Each test case will consist on several lines. In all test cases the alphabet will be the set of hexadecimal digits (decimal digits plus the uppercase letters \\\"A\\\" to \\\"F\\\"). The first line of a test case will contain an integer N (1 \\u2264 N \\u2264 100), the number of code words in the code. Each of the next N lines describes a code word and contains a different and non-empty string of at most 50 hexadecimal digits. Input is terminated by N = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Ambiguous Codes\",\n    \"output\": \"For each test case, output a single line with the length of the shortest ambiguous message for the provided code or -1 if the code is unambiguous.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By F\\u00e1bio Dias Moreira, PUC-Rio  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Og is a caveman with many children, and he wants to count them all. Og counts his sons with his left hand and his daughters with his right hand.\\n\\n                However, Og is very dumb, and can't add the two counts, so he asked you to write him a program that will do the addition.\",\n    \"id\": 1387,\n    \"input\": \"The input contains several test cases. Each test case consists of a single line containing two integers L and R, separated by a single space, indicating respectively the number of sons and daughters (1 \\u2264 L, R \\u2264 5).\\n\\n                The end of input is indicated by L = R = 0.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Og\",\n    \"output\": \"For each test case in the input print a line containing a single integer indicating how many children Og has.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido, UNICAMP  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"One of the most frequent operations in computation is to sort a sequence of objects. So it is not surprising that this operation is also one of the most studied.\\n\\n                A simple algorithm for sorting is called Bubblesort. It consists of several turns. At each turn the algorithm simply iterates over the sequence switching sides two consecutive elements if they are out of order. The algorithm terminates when no element shifted in one turn.\\n\\n                The name Bubblesort (sort of bubbles) derives from the fact that smaller elements (\\\"lighter elements\\\") move toward their final positions in the sorted sequence (move toward the beginning of the sequence) during shifts, like air bubbles in water. The figure below shows an implementation of the algorithm in pseudocode:\\n\\t\\t\\t\\t\\n                For i from 1 to N do \\n\\t\\t\\t\\t\\u00a0\\u00a0For j from N - 1 to i do\\n\\t\\t\\t\\t\\u00a0\\u00a0\\u00a0\\u00a0If seq [j - 1]> seq [j] then\\n\\t\\t\\t\\t\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0Interchange elements seq [j - 1], and seq [j]\\n                \\u00a0\\u00a0\\u00a0\\u00a0End-If\\n                \\u00a0\\u00a0End-For\\n                \\u00a0\\u00a0If no element switched places\\n                \\u00a0\\u00a0\\u00a0\\u00a0End of algorithm\\n                \\u00a0\\u00a0End-If\\n                End-For\\n\\n                For example, to sort the sequence [5, 4, 3, 2, 1] using the above algorithm, four shifts are required. In the first round four exchanges occur: 1 x 2, 1 x 3, 1 x 4 and 1 x 5, in the second part there are three exchanges 2 x 3, 2 x 4 and 2 x 5, in the third round two exchanges occur: 3 x 4 and\\u00a03 x 5; in the fourth shift there is only one exchange: 4 x 5, in the fifth round no exchange occurs and the algorithm terminates.\\n\\n                Although simple to understand, implement and prove correct, the bubblesort algorithm is very inefficient: the number of comparisons between elements during its execution is, on average, proportional to N2, where N is the number of elements in the sequence. You have been asked to do a \\\"reverse engineering\\\" of the bubblesort, ie, given the length of the sequence, the number of shifts required to sort and the number of exchanges that occurred at every turn, your program must find a possible sequence, when sorted, produces exactly the same number of exchanges in shifts.\",\n    \"id\": 1388,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N and M respectively indicate that the number of elements (1 \\u2264 N \\u2264 100,000) in the sequence that is being ordered, and the number of turns (0 \\u2264 M \\u2264 100,000) needed to sort the sequence using bubblesort. The second line of a test case contains M integers Xi, indicating the number of exchanges in each round i (1 \\u2264 Xi \\u2264 N - 1, for 1 \\u2264 i \\u2264 M). The end of input is indicated by N = M = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Where Are The Bubbles?\",\n    \"output\": \"For each test case in the input your program must produce one line of output, containing a permutation of the numbers {1, 2, ..., N}, which when sorted using bubblesort produces the same number of exchanges in the same number of turns specified at the input. When printing the permutation, leave a blank space between consecutive elements. If more than one permutation exists, then print the largest in lexicographic order to standard number sequences (lexicographic order of the permutation a1, a2, ..., aN is greater than the permutation b1, b2, ..., bN is for some 1 \\u2264 i \\u2264 N we have ai> bi and prefix a1, a2, ..., ai-1 is equal to the prefix b1, b2, ..., bi-1).\\n\\n                In other words, if there is more than one solution, print the one in which the first element permutation is as large as possible. If there is more than one solution satisfying this constraint, print, among them, the one where the second element is the largest possible. If there is more than one solution satisfying the above two constraints, printing, among these, the solution where the third element is as large as possible, and so forth.\\n\\n                For every entry there will be at least one permutation solution.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Pedro Demasi  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Once upon a time there was a very peaceful country named Nlogonia. Back then, Poly the Shoemaker could come to the country and travel freely from city to city doing his job without any harassment. This task was very easy, as every city in Nlogonia had a direct road to every other city in the country. He could then easily travel the whole country visiting each city exactly once and fixing everybody's shoes.\\n\\n                But not anymore. The times have changed and war has come to Nlogonia. The age when people could travel freely is over.\\n\\n                Confederations identified by colors were formed among the cities all over the country, and now each city belongs to at least one and at most two confederations. When trying to enter a city, you must give to the border officer a ticket from one of the confederations this city belongs to. When leaving the city, you receive a ticket from the other confederation the city belongs to (i.e. different from the one you gave when entering) or from the same confederation if the city only belongs to one.\\n\\n                As Poly the Shoemaker is a long time friend of Nlogonia, he is allowed to choose a ticket and a city he wants to enter as the first city in the country, but after that he must obey the confederations rules. He wants to do the same routine he did before, visiting each city exactly once in Nlogonia, but now it's not easy for him to do this, even though he can choose where to start his journey.\\n\\n                For example, suppose there are four cities, labeled from 0 to 3. City 0 belongs to confederations red and green; city 1 belongs only to red; city 2 belongs to green and yellow; and city 3 belongs to blue and red. If Poly the Shoemaker chooses to start at city 0, he can enter it carrying either the red or the green ticket and leave receiving the other. Should he choose the red ticket, he will leave with a green ticket, and then there is only city 2 he can travel to. When leaving city 2 he receives the yellow ticket and now can't go anywhere else. If he had chosen the green ticket as the first he would receive the red one when leaving, and then he could travel to cities 1 or 3. If he chooses city 3, when leaving he will receive the blue ticket and again can't go anywhere else. If he chooses city 1, he receives the red ticket again when leaving (city 1 belongs only to the red confederation) and can only travel to city 3 and will never get to city 2. Thus, it is not possible to visit each city exactly once starting at city 0. It is possible, however, starting at city 2 with the yellow ticket, leaving the city with the green ticket, then visiting city 0, leaving with red ticket, then visiting city 1, leaving with red ticket again and, at last, visiting city 3.\\n\\n                As you can see, it got really difficult for Poly the Shoemaker to accomplish the task, so he asks you to help him. He wants to know if it's possible to choose a city to start such that he can travel all cities from Nlogonia exactly once.\\n\\n                Can you help Poly the Shoemaker?\",\n    \"id\": 1389,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N and C, separated by one space, indicating respectively the number of cities (1 \\u2264 N \\u2264 500) and confederations (1 \\u2264 C \\u2264 100) in the country. Each of the next C lines describes a confederation. It starts with one integer K (0 \\u2264 K \\u2264 N) and then K integers representing the cities which belong to this confederation. All integers are separated by single spaces and cities are numbered from 0 to N -1. Each city will appear at least once and at most twice and no city will be repeated on the same confederation.\\n\\n                The end of input is indicated by a line containing two zeroes separated by a single space.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Traveling Shoemaker Problem\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing the integer -1 if it's not possible to match the requirements or one integer representing the city where Poly the Shoemaker can start his journey. If there are multiple correct answers, print the smallest one.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Fabio Dias Moreira  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"What do you get if you multiply 6 by 9? The answer, of course, is 42, but only if you do the calculations in base 13.\\n\\n                Given an integer B \\u2265 2, the base B numbering system is a manner of writing integers using only digits between 0 and B - 1, inclusive. In a number written in base B, the rightmost digit has its value multiplied by 1, the second rightmost digit has its value multiplied by B, the third rightmost digit has its value multiplied by B2, and so on.\\n\\n                Some equations are true or false depending on the base they are considered in. The equation 2 + 2 = 4, for instance, is true for any B \\u2265 5 - it does not hold in base 4, for instance, since there is no digit '4' in base 4. On the other hand, an equation like 2 + 2 = 5 is never true.\\n\\n                Write a program that given an equation determines for which bases it holds.\",\n    \"id\": 1390,\n    \"input\": \"Each line of the input contains a test case; each test case is an equation of the form \\\"EXPR=EXPR\\\", where both \\\"EXPR\\\" are arithmetic expressions with at most 17 characters.\\n\\n                All expressions are valid, and contain only the characters '+', '*' and the digits from '0' to '9'. No expressions contain leading plus signs, and no numbers in it have leading zeros.\\n\\n                The end of input is indicated by a line containing only \\\"=\\\".\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Bases\",\n    \"output\": \"For each test case in the input your program should produce a single line in the output, indicating for which bases the given equation holds.\\n\\n                If the expression is true for infinitely many bases, print \\\"B+\\\", where B is the first base for which the equation holds.\\n\\n                If the expression is valid only for a finite set of bases, print them in ascending order, separated by single spaces.\\n\\n                If the expression is not true in any base, print the character '*'.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pedro Demasi  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Finding the shortest path that goes from a starting point to a destination point given a set of points and route lengths connecting them is an already well known problem, and it\\u2019s even part of our daily lives, as shortest path programs are widely available nowadays.\\n\\n                Most people usually like very much these applications as they make their lives easier. Well, maybe not that much easier.\\n\\n                Now that almost everyone can have access to GPS navigation devices able to calculate shortest paths, most routes that form the shortest path are getting slower because of heavy traffic. As most people try to follow the same path, it\\u2019s not worth it anymore to follow these directions.\\n\\n                With this in his mind, your boss asks you to develop a new application that only he will have access to, thus saving him time whenever he has a meeting or any urgent event. He asks you that the program must answer not the shortest path, but the almost shortest path. He defines the almost shortest path as the shortest path that goes from a starting point to a destination point such that no route between two consecutive points belongs to any shortest path from the starting point to the destination.\\n\\n                For example, suppose the figure below represents the map given, with circles representing location points, and lines representing direct, one-way routes with lengths indicated. The starting point is marked as S and the destination point is marked as D. The bold lines belong to a shortest path (in this case there are two shortest paths, each with total length 4). Thus, the almost shortest path would be the one indicated by dashed lines (total length 5), as no route between two consecutive points belongs to any shortest path. Notice that there could exist more than one possible answer, for instance if the route with length 3 had length 1. There could exist no possible answer as well.\\n\\n                \\u200b\",\n    \"id\": 1391,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N (2 \\u2264 N \\u2264 500) and M (1 \\u2264 M \\u2264 104), separated by a single space, indicating respectively the number of points in the map and the number of existing one-way routes connecting two points directly. Each point is identified by an integer between 0 and N -1. The second line contains two integers S and D, separated by a single space, indicating respectively the starting and the destination points (S \\u2260 D; 0 \\u2264 S, D < N). Each one of the following M lines contains three integers U, V and P (U \\u2260 V; 0 \\u2264 U, V < N; 1 \\u2264 P \\u2264 103), separated by single spaces, indicating the existence of a one-way route from U to V with distance P. There is at most one route from a given point U to a given point V, but notice that the existence of a route from U to V does not imply there is a route from V to U, and, if such road exists, it can have a different length. The end of input is indicated by a line containing only two zeros separated by a single space.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Almost Shortest Path\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing -1 if it is not possible to match the requirements, or an integer representing the length of the almost shortest path found.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Yandri Clemente  Cuba\",\n    \"category\": \"Mathematics\",\n    \"description\": \"It\\u2019s year 2100. Electricity has become very expensive. Recently, your electricity company raised the power rates once more. The table below shows the new rates (consumption is always a positive integer):\\n\\n                \\n\\n                This means that, when calculating the amount to pay, the \\ufb01rst 100 CWh have a price of 2 Americus each; the next 9900 CWh (between 101 and 10000) have a price of 3 Americus each and so on.\\n\\n                For instance, if you consume 10123 CWh you will have to pay 2\\u00d7100+3\\u00d79900+5\\u00d7123 = 30515 Americus.\\n\\n                The evil mathematicians from the company have found a way to gain even more money. Instead of telling you how much energy you have consumed and how much you have to pay, they will show you two numbers related to yourself and to a random neighbor:\\n\\n                A: the total amount to pay if your consumptions were billed together; and\\n                    B: the absolute value of the di\\ufb00erence between the amounts of your bills.\\n\\n                If you can\\u2019t \\ufb01gure out how much you have to pay, you must pay another 100 Americus for such a \\u201cservice\\u201d. You are very economical, and therefore you are sure you cannot possibly consume more than any of your neighbors. So, being smart, you know you can compute how much you have to pay. For example, suppose the company informed you the following two numbers: A = 1100 and B = 300. Then you and your neighbor\\u2019s consumptions had to be 150 CWh and 250 CWh respectively. The total consumption is 400 CWh and then A is 2\\u00d7100+3\\u00d7300 = 1100. You have to pay 2\\u00d7100+3\\u00d750 = 350 Americus, while your neighbor must pay 2\\u00d7100+3\\u00d7150 = 650 Americus, so B is |350 \\u2212 650| = 300.\\n\\n                Not willing to pay the additional fee, you decided to write a computer program to \\ufb01nd out how much you have to pay.\",\n    \"id\": 1392,\n    \"input\": \"The input contains several test cases. Each test case is composed of a single line, containing two integers A and B, separated by a single space, representing the numbers shown to you (1 \\u2264 A, B \\u2264 109). You may assume there is always a unique solution, that is, there exists exactly one pair of consumptions that produces those numbers.\\n\\n                The last test case is followed by a line containing two zeros separated by a single space.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Electric Bill\",\n    \"output\": \"For each test case in the input, your program must print a single line containing one integer, representing the amount you have to pay.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ines Kereki  Uruguai\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The path to Mary's school is a straight line paved with hexagonal tiles. The picture below shows an example of the path with 12 numbered tiles.\\n\\n                \\u200b\\n\\n                Mary loves mathematics. When going to school, she steps on the tiles of that path following these rules:\\n\\n                \\n                    She always starts from the tile with the smiling face (as nothing matches starting anything with a smile!). This tile is always present at the beginning of the path. The other tiles are numbered consecutively, in ascending order, starting from 1, as shown in the figure.\\n                    She is not allowed to go back, that is, she must not step on a tile which bears a lower number than the tile she is on (when decided to go to school, there she goes!).\\n                    She always steps from a tile to a neighboring one (no jumps in order to keep out of harm's way!).\\n                    She must always finish on the highest numbered tile.\\n                \\n\\n                When classes are over, she is so tired that she avoids the path and walks on the lawn. Mary does not want to repeat any sequence of steps on the tiles and she would like to know, if the path is paved with N numbered tiles and a tile with the face, how many days will it take to make each possible sequence once.\\n\\n                For example, five days will be needed for her to try all possible step sequences if the path has N = 4 tiles, one day for each of the sequences: 1-2-3-4, 1-2-4, 1-3-4, 2-3-4 and 2-4. Write a program to determine how many different step sequences there are for a path with a given number N of tiles.\",\n    \"id\": 1393,\n    \"input\": \"The input contains several test cases. Each test case is composed by a line containing an integer N (1 \\u2264 N \\u2264 40), the number of tiles in the path. The last test case is followed by a line containing a single zero.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Hexagonal Tiles\",\n    \"output\": \"For each test case, print a line containing a single integer, the number of different step sequences.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cl\\u00e1udio Lucchesi  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Soccer is the American English word used to describe Football, the British English word applied to the most popular sport in Latin America (and in the world). Hooligan is sometimes used to describe an aggressive, troublemaking, soccer fan.\\n\\n                In Linearonia, a soccer tournament is in progress. There, the ranking process is as follows: for each game, the winner gets two points and the loser gets no points; in case of a tie, both competitors get one point each. The champion is the team with the highest number of points. Every pair of distinct teams play against each other exactly the same number of times, called the matching number.\\n\\n                You have your favorite team, your dream team, and you wonder whether it is possible for your dream team to be champion. You know the number of teams, the matching number and the results of some games that have already been played. Write a program to decide whether at the end of the tournament your dream team can still be the only champion, with strictly more points than any other team.\",\n    \"id\": 1394,\n    \"input\": \"The input contains several test cases, each case consists of one or more lines. The \\ufb01rst line contains three integers, N, M and G, separated by single spaces, representing respectively the number of teams playing in the tournament (2 \\u2264 N \\u2264 40), the matching number (1 \\u2264 M \\u2264 4) and the number of games already played (1 \\u2264 G). Your dream team is identi\\ufb01ed by the number 0, the other teams are identi\\ufb01ed by the integers 1, 2, . . . , N \\u2212 1.\\n\\n                Each of the next G lines describes a game already played. The line contains an integer I, a character C and an integer J, separated by single spaces. Integers I and J are the teams that played that game (I \\u2260 J and 0 \\u2264 I, J \\u2264 N \\u2212 1). Character C is '<' if team I lost to team J, or '=' if the game ended in a tie.\\n\\n                The last test case is followed by a line containing three zeros separated by single spaces.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Hooligan\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing one single character, uppercase 'Y' if your dream team can be the champion, or uppercase 'N' otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gin\\u00e9s Garc\\u00eda Mateos, UM  Spain\",\n    \"category\": \"Paradigms\",\n    \"description\": \"We want to solve the classical problem of obtaining a given target number starting from a set of initial numbers according to the following rules:\\n\\n                \\n                    All numbers involved in the problem are positive integers, and so must be any intermediate result obtained for any operation. Thus, operations that lead to non integer or non positive numbers are strictly forbidden (we shall not consider truncation or rounding results, nor anything else like that).\\n                    We can do any of the four elemental arithmetical operations: addition, multiplication, subtraction, and division.\\n                    Each number may be used once at most: when we take two numbers and operate them, these numbers may not be used again in further operations (but the result of this operation may, and same considerations apply to this new number).\\n                    There is no obligation to make use of all of the initial numbers.\\n                \\n\\n                We shall make the following assumptions on the input data:\\n\\n                \\n                    For any target number T, it will always hold that: 0 < T < 2000.\\n                    For any initial number I, it will always hold that: 0 < I < 200.\\n                    There will always be at least two initial numbers and seven at most.\\u00a0\\n                    We shall not consider trivial problem cases, i.e. cases in which the target number is already contained in the initial ones.\\n                \\n\\n                In order to make unique the solution provided by the program, we shall also make the following assumptions on the solution that we will consider as correct: The program should provide the solution that reaches the target in the minimum number of operations. If there is more than one solution with the minimum number of operations, we will decide which one to take according to the characteristics of the first operation in which they differ. The next rules will apply.\\n\\n                \\n                    For two operations that are actually the same one, it will be preferred the one whose left-side operand is greater than, or equal to, the right-side operand. For example, operation \\\"10 x 5 = 50\\\" will take priority over \\\"5 x 10 = 50\\\".\\n                    For operations involving two different operators, it will be preferred the one whose operator has the highest precedence, defined as follows: Addition (highest) Multiplication Subtraction Division (lowest)\\n                    For operations with the same operator, it will be preferred the one involving the number whose position is lower in the order in which they were given in the input (it appears first). If this first number may appear in two different operations of same precedence, same criterion should be applied for the second operand. New numbers generated by operations are assumed to be placed at the beginning of this ordered list.\\n\",\n    \"id\": 1395,\n    \"input\": \"The input consists of a set of lines. Each line represents a test case, and it will be given in the following format:\\n\\n                T N I1 ... IN\\n\\n                T is the target number, N is the number of initial numbers, and I1 ... IN are the initial numbers themselves. All numbers are separated by a single blank space. There will be no trailing/leading blank spaces at the beginning/end of any input line. A final line with a single zero marks the end of the input. This last line must not be processed.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Numbers and Operations\",\n    \"output\": \"For each input case (input line), the program should produce a line with the message:\\n\\n                No solution\\n\\n                if the target number cannot be obtained from the initial numbers, or a set of lines with the sequence of operations that leads from the initial numbers to the target, taking into consideration the previous criteria. Each operation must be expressed in the following format:\\n\\n                left_operand operator right_operand = result\\n\\n                where left_operand and right_operand represent the numbers involved in the operation, result is the result of the operation, and operator is a single character that represents the operation carried out, and it must be taken from the following ones:\\n\\n                '+' : addition\\n                    'x' : multiplication\\n                    '-' : subtraction\\n                    '/' : division\\n\\n                For each input case, the last line of its solution must end with a '<-' symbol, indicating that this is the last operation that gives the target number as result. In all cases, there must be one blank space (and only one) between each printed item and the following one. There should be no leading/trading blank spaces at the beginning/end of any output line. Each line must end with an end of line mark, and there should appear no blank lines at the output.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es, IME-USP  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Teacher Cristina is very demanding. She is famous for being really evil - and she likes this fact. However, it seems that she overdid it this time. Before her exam, she demanded all students to form a line before entering the classroom. They did. But when they were about to enter the room, she yelled: \\\"Hey, why are you not lined up in increasing lexicographic order of your names!!!???\\\".\\n\\n                Some students got angry and talked to the teacher, saying this was an abuse. To not be intransigents, they said they would allow at most k swaps of adjacent people in the line. The teacher liked their idea, and decided to assign this problem as an extra in the exam.\\n\\n                You are given a sequence of names and an integer k. Find the (lexicographic) smallest sequence that can be obtained with at most k swaps of adjacent elements. Your task is to solve this problem for Cristina's students so they can enter the classroom and start the exam.\",\n    \"id\": 1396,\n    \"input\": \"The input consists of several instances. Each instance starts with a line containing two integers n and k (1\\u00a0\\u2264 n\\u00a0\\u2264 100 , 0\\u00a0\\u2264 k\\u00a0\\u2264 n), indicating the number of names and the maximum allowed number of swaps, respectively. The next line contains a sequence of n names. Each name is composed by at most 20 characters from 'a' to 'z'.\\n\\n                The program must stop processing when n = k = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"There's an Exam from Cris Today!\",\n    \"output\": \"For each instance, print \\\"Instancia c\\\", where c is the instance number. In the next line, print the resulting sequence of names.  After each name, your program must print a blank space, including after the last one (for example, in the output of the first test case below: wanderleybthadeubchegadob, where b represents a blank space. After each instance, print a empty line, including after the last one.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Hermann Negri, UDESC  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Og loves to play with his children. His favorite game is the game of the greatest, invented by himself. This hobby (there was a lot of available time to play in the cavemen's era) is played by two players, Og and one of his children. The rules of the game are as follows: First, the players choose the number of rounds of the match. During a round, each player yells a number between 0 and 10. The player who yells the greatest number scores one point (in case of a tie, no one scores). After all the rounds, the points are counted and the player who has the greater score wins.\\n    \\n                    Og and his children really like this game, but they usually get lost doing the math. Will you help Og to determine the final score?\",\n    \"id\": 1397,\n    \"input\": \"The input consists of several test cases (matches). Each test case starts with an integer N (1\\u00a0\\u2264 N\\u00a0\\u2264 10) that describes the number of rounds of the match. The value N = 0 indicates the end of the input, and should not be processed. The next N lines contain two integers A and B each (0\\u00a0\\u2264 A, B\\u00a0\\u2264 10). A is the number yelled by the first player during the round, and B is the number yelled by the second player during the round.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Game of The Greatest\",\n    \"output\": \"The output must contain one line for each test case. This line contains the players' score, separated by a single space.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor, SEU  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Ocean deep\\n                I'm so afraid to show my feelings,\\n                I have sailed a million ceilings\\n                In my solitary room\\n                Ocean deep\\n\\n                The lines above are from a very popular song of Cliff Richard. In this problem we will be dealing with a similar type of person. His name is Rampell-Stilt-Skin and another important thing is that he is a dead man. Someone has killed him a few days ago and you are the detective to solve the mystery. The problem with this guy is that he always tried to hide his information and feelings under the sea (I mean out of reach). He wrote a diary, which contained some statements and then a large binary number (May have as many as 10000 digits). If the number is divisible by a large prime number 131071 then the statement is true, otherwise the statement is false.\\n\\n                In this problem you will be given large binary numbers as input and you will have to verify if that number is divisible by 131071 or not. Your algorithm needs to be very efficient.\",\n    \"id\": 1398,\n    \"input\": \"The input file contains several binary numbers. Each binary number starts in a new line but may expand in several lines. Each number is terminated by a # symbol. No line contains more than 100 digits.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Ocean Deep! Make it Shallow!!\",\n    \"output\": \"For every binary number print \\\"YES\\\" if the number is divisible by the given prime number, print \\\"NO\\\" if the binary number is not divisible by the given prime number.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Write a program to transform an array A[1], A[2],..., A[n] according to m instructions. Each instruction (L, R, v, p) means: First, calculate how many numbers from A[L] to A[R] (inclusive) are strictly less than v, call this answer k. Then, change the value of A[p] to u*k/(R - L + 1), here we use integer division (i.e. ignoring fractional part).\",\n    \"id\": 1399,\n    \"input\": \"The first line of input contains three integer n, m, u ( 1 \\u2264 n \\u2264 300,000, 1 \\u2264 m \\u2264 50,000, 1 \\u2264 u \\u2264 1,000,000,000). Each of the next n lines contains an integer A[i](1 \\u2264 A[i] \\u2264 u). Each of the next m lines contains an instruction consisting of four integers L, R, v, p ( 1 \\u2264 L \\u2264 R \\u2264 n, 1 \\u2264 v \\u2264 u, 1 \\u2264 p \\u2264 n).\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Array Transformer\",\n    \"output\": \"Print n lines, one for each integer, the final array.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Mathematics\",\n    \"description\": \"There are n people standing in a line, playing a famous game called \\\"counting\\\". When the game begins, the leftmost person says \\\"1\\\" loudly, then the second person (people are numbered 1 to n from left to right) says \\\"2\\\" loudly. This is followed by the 3rd person saying \\\"3\\\" and the 4th person say \\\"4\\\", and so on. When the n-th person (i.e. the rightmost person) said \\\"n\\\" loudly, the next turn goes to his immediate left person (i.e. the (n - 1)-th person), who should say \\\"n + 1\\\" loudly, then the (n - 2)-th person should say \\\"n + 2\\\" loudly. After the leftmost person spoke again, the counting goes right again. There is a catch, though (otherwise, the game would be very boring!): if a person should say a number who is a multiple of 7, or its decimal representation contains the digit 7, he should clap instead! The following tables shows us the counting process for n = 4 ('X' represents a clap). When the 3rd person claps for the 4th time, he's actually counting 35.\\n\\t\\t\\t\\t\\n                        \\n                            \\n                                Person\\n                                1\\n                                2\\n                                3\\n                                4\\n                                3\\n                                2\\n                                1\\n                                2\\n                                3\\n                            \\n                            \\n                                Action\\n                                1\\n                                2\\n                                3\\n                                4\\n                                5\\n                                6\\n                                X\\n                                8\\n                                9\\n                            \\n                            \\n                                Person\\n                                4\\n                                3\\n                                2\\n                                1\\n                                2\\n                                3\\n                                4\\n                                3\\n                                2\\n                            \\n                            \\n                                Action\\n                                10\\n                                11\\n                                12\\n                                13\\n                                X\\n                                15\\n                                16\\n                                X\\n                                18\\n                            \\n                            \\n                                Person\\n                                1\\n                                2\\n                                3\\n                                4\\n                                3\\n                                2\\n                                1\\n                                2\\n                                3\\n                            \\n                            \\n                                Action\\n                                19\\n                                20\\n                                X\\n                                22\\n                                23\\n                                24\\n                                25\\n                                26\\n                                X\\n                            \\n                            \\n                                Person\\n                                4\\n                                3\\n                                2\\n                                1\\n                                2\\n                                3\\n                                4\\n                                3\\n                                2\\n                            \\n                            \\n                                Action\\n                                X\\n                                29\\n                                30\\n                                31\\n                                32\\n                                33\\n                                34\\n                                X\\n                                36\\n                            \\n                        \\n                    \\n                Given n, m and k, your task is to find out, when the m-th person claps for the k-th time, what is the actual number being counted.\",\n    \"id\": 1400,\n    \"input\": \"There will be at most 100 test cases in the input. Each test case contains three integers n, m and k ( 2 \\u2264 n \\u2264 100, 1 \\u2264 m \\u2264 n, 1 \\u2264 k 100) in a single line. The last test case is followed by a line with n = m = k = 0, which should not be processed.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Counting Game\",\n    \"output\": \"For each line, print the actual number being counted, when the m-th person claps for the k-th time. If this can never happen, print '-1'.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor, SEU  Bangladesh\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Generating permutation has always been an important problem in computer science. In this problem you will have to generate the permutation of a given string in ascending order. Remember that your algorithm must be efficient.\",\n    \"id\": 1401,\n    \"input\": \"The first line of the input contains an integer n, which indicates how many strings to follow. The next n lines contain n strings. Strings will only contain alphanumeric and never contain any space. The maximum length of the string is 10.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Generating Fast, Sorted Permutation\",\n    \"output\": \"For each input string print all the permutations possible in ascending order. Note that the strings should be treated, as case sensitive strings and no permutation should be repeated. A blank line should follow each output set.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Rodrigo Schmidt  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Indiana Jones is in a deserted city, annihilated \\n                    during a war. Roofs of all houses have been destroyedand only portions \\n                    of walls are still standing. The ground is so full of mines that the \\n                    only safe way to move around the city is walking over the remaining \\n                    walls. The mission of our hero is to save a person who is trapped in the\\n                    city. In order to move between two walls which are not connected \\n                    Indiana Jones thought of taking with him a wooden board which he could \\n                    place between the two walls and then cross from one to the other.\\n                \\n\\n                \\n\\t\\t\\t\\t\\n\\t\\t\\t\\tFig. 1: City map with rout used by Indiana Jones\\n\\t\\t\\t\\n\\t\\t\\t\\t\\n\\n                \\n                    Initial positions of Indiana Jones and the trapped person are both on\\n                    some section of the walls. Besides, walls are either in the direction \\n                    South-North or West-East.\\n                \\n\\n                \\n                    It will be given to you a map of the city remains. Your mission is to \\n                    determine the minimum length of the wooden board Indiana Jones needs to \\n                    carry in order to get to the trapped person.\\n\",\n    \"id\": 1402,\n    \"input\": \"Your program should process several test cases. Each test case starts with an integer N indicating the number of wall sections remaining in the city (2 \\u2264 N \\u2264 1000). Each of the next N\\n                    lines describes a wall section. The first wall section to appear is the\\n                    section where Indiana Jones stands at the beginning. The second section\\n                    to appear is the section where the trapped person stands. Each wall \\n                    section description consists of three integers X, Y and L (\\u201310000 \\u2264 X, Y, L \\u2264 10000), where X an Y\\n                    define either the southernmost point of a wall section (for South-North\\n                    sections) or the westernmost point (for West-East wall sections). The \\n                    value of L determines the length and direction of the wall: if L \\u2265 0, the section is West-East, with length L; if L < 0, the section is North-South, with length |L|. The end of input is indicated by N = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Will Indiana Jones Get There?\",\n    \"output\": \"For each test case in the input your program \\n                    should produce one line of output, containing a real value representing \\n                    the length of the wooden board Indiana Jones must carry. The length must\\n                    be printed as a real number with two-digit precision, and the last \\n                    decimal digit must be rounded. The input will not contain test cases \\n                    where differences in rounding are significant.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The whole family was excited by the news. Everyone knew grandpa had been an extremely good bridge player for decades, but when it was announced he would be in Guinness Book of World Records as the most successful bridge player ever, whow, that was astonishing!\\n\\n                The International Bridge Association (IBA) has maintained, for several years, a weekly ranking of the best players in the world. Considering that each appearance in a weekly ranking constitutes a point for the player, grandpa was nominated the best player ever because he got the highest number of points.\\n\\n                Having many friends who were also competing against him, grandpa is extremely curious to know which player(s) took the second place. He needs a program which, when given a list of weekly rankings, finds out which player(s) got the second place according to the number of points.\",\n    \"id\": 1403,\n    \"input\": \"The input contains several test cases. Players are identified by integers from 1 to 10000. The first line of a test case contains two integers N and M indicating respectively the number of rankings available (2 \\u2264\\u00a0N \\u2264\\u00a0500) and the number of players in each ranking (2 \\u2264\\u00a0M \\u2264\\u00a0500). Each of the next N lines contains the description of one weekly ranking. Each description is composed by a sequence of M integers, separated by a blank space, identifying the players who figured in that weekly ranking. You can assume that:\\n\\n                \\n                    in each test case there is exactly one best player and at least one second best player,\\n                    each weekly ranking consist of M distinct player identifiers.\\n                \\n\\n                The end of input is indicated by N = M = 0.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Grandpa is Famous\",\n    \"output\": \"For each test case in the input your program must produce one line of output, containing the identification number of the player who is second best in number of appearances in the rankings. If there is a tie for second best, print the identification number of all second best players in increasing order. Each identification number produced must be followed by a blank space.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"MegaCheckers is a board game for two players, very similar to the known Checkers game. The board is rectangular, with N lines and M columns of small squares arranged in a grid N x M. The small squares are alternately colored with a bright color and a dark color, on the usual standard of a checker\\u2019s board. The squares of dark colors are denominated \\u201chouses\\u201d (notice that, for visualization reasons, the diagrams below show houses as white squares).\\n\\n                At the beginning of the match, each player has a certain number of pieces, positioned on the nearest houses from the board edge that the player chose (the players choose opposite edges). During the match, the pieces can only occupy the houses on the board.\\n\\n                One of the movements of the game is \\u201ccapture\\u201d an opponent piece, jumping over it, diagonally, to the adjacent house through the piece, house that should be empty. The opponent piece is so removed from the board. The three involved houses on the capture (your piece\\u2019s initial house, the house that contains the opponent\\u2019s piece and the empty house, where your piece will be after the move) should be diagonally aligned and must be diagonally adjacent, as shown in the diagram below.\\n\\n                \\n\\n                In MegaCheckers a piece can capture opponent\\u2019s pieces jumping diagonally forward or backward (notice that, on the existents variations of the Checkers game, a piece can only capture opponent\\u2019s pieces jumping forward). You may also make a multiple capture, with one piece only, then jumping to empty houses over opponent\\u2019s pieces. In a multiple capture, your piece may change direction, jumping first in one direction and then in another. You can capture just one piece in each jump, but can capture several pieces with sequentially jumps. You can\\u2019t jump over a piece of yours, and can\\u2019t jump the same opponent\\u2019s piece more than once.\\n\\n                It\\u2019s given the board dimensions and a description of the current match state. It is your turn to play and you must determine the maximum number of opponent\\u2019s pieces that can be captured in a capture movement.\",\n    \"id\": 1404,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N and M, indicating, respectively, the number of lines and the number of columns of the board (3 \\u2264\\u00a0N \\u2264\\u00a020, 3 \\u2264\\u00a0M \\u2264\\u00a020 and N x M \\u2264\\u00a0200). The square at the bottom left corner of the board is a house. The second line contains a description of the match state. Each description consists of [(N x M)/2] integers, separated by a space, corresponding to the boards houses, that are numbered from 1 to [(N x M)/2], from the left to the right, from the nearest edge from the player to the nearest edge from the opponent. On the state match description, \\u20180\\u2019 represents an empty house, \\u20181\\u2019 represents a house with one of your pieces, and \\u20182\\u2019 represents a house with an opponent\\u2019s piece. There are, at most, [(N x M)/4] pieces of each player on the board. The input final is indicated by N = M = 0.\\n\\n                \\n\\n                Figure 1: House\\u2019s numerations in (a) board of dimensions 8 x 8 and in (b) board of dimensions 5 x 3.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"MegaCheckers\",\n    \"output\": \"For each input test case, your program should produce only one line of output, containing an integer indicating the highest number of your opponent\\u2019s pieces that can be captured in just one turn.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pedro Demasi  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"The halting problem is a classic Computer Science decision problem which consists basically in determining whether a given program will always stop (ie, terminate its execution) for a given arbitrary input or will run forever. Alan Turing proved in 1936 that it is impossible to solve the halting problem generalizing for any pair program-input. In this problem, however, given the description of a simple language, a program written in this language and an entry to this program, you must determine if the given program stops with the given input, and if so, what is the output produced.\\n\\n                This language only works with integer numbers from 0 to 999 (inclusive). Thus, the successor of 999 is 0, and the predecessor of 0 is 999. Furthermore, it has ten variables (R0 to R9), where R0 is always assigned the value of program call (ie, the input parameter) and R9 is always assigned the output value (the return). At the beginning of the program, is assigned the value 0 to all variables, except for R0 that receives the input parameter.\\n\\n                The basics operations are: attribution (MOV), sum (ADD), subtraction (SUB), multiplication (MUL), integer division (DIV) and rest of integer division (MOD). All these operation have a syntax COMMAND OPERATOR1,OPERATOR2 (without spaces between the comma and the operators), where COMMAND is one of these operations, OPERATOR1 is one of the ten variables (R0 to R9) and OPERATOR2 could be one of the ten variables or an integer value (between 0 and 999). All operations change the value of OPERATOR1, thus MOV R4,100 is equivalent to assigned 100 to R4, as MUL R3,R8 is equivalent to multiply R3 by R8 and assigned the result to R3. The operation DIV, as well as MOD, returns 0 (zero) if OPERATOR2 is 0 or if the equivalent variable has the value 0. Thus, DIV R4,0 is equivalent as MOV R4,0. For integer division, we understand the integer part of quotient of the division (no fractional part). For example, the integer division of 7 by 2 is 3 (the rest being 1).\\n\\n                There are six decision flow commands: IFEQ (if equal), IFNEQ (if different), IFG (if greater), IFL (if less), IFGE (if greater or equal) e IFLE (if less or equal). The syntax for all them is COMMAND OPERATOR1,OPERATOR2 (without spaces between the comma and the operators), where OPERATOR1 and OPERATOR2 could be variables (R0 to R9) or integer values (between 0 to 999). Thus, the command IFEQ R4,123 is the equivalent to test is R4 is equal 123. If the tested condition is true, the program continues to run the next line of the decision command normally. If the condition is false, the program turns to run the next line of the nearest ENDIF. All of the decision commands must have an ENDIF command correspondent.\\n\\n                Finally, there are the commands CALL and RET, both with the syntax COMMAND OPERATOR, where OPERATOR is a variable (R0\\u2026R9) or direct value (between 0 and 999). The command CALL calls the program again, given the OPERATOR as an input parameter, assigning the value of the OPERATOR to the variable R0. The command RET finishes the program execution returning the value of the OPERATOR as an output result. The last line of the program will always be a command RET. Note that if the program calls itself by the command CALL, when the program execution returns the value of R9 will be changed with the output value returned by the program. Note also that all of the variables (R0\\u2026R9) are locals, it means that, when the program calls itself, it cannot change the values stored in the variables of the previous instance, in exception of the value of R9 that receives the return of the called instance.\\n\\n                The following example illustrates a program that calculates the factorial of a number.\\n\\n                \\n\\n                1st line: Check if the value of R0 is equal 0, if so runs the next line else jump to the 4th line (nearest ENDIF).\\n\\n                2nd line: Return 1 as output of the program.\\n\\n                3rd line: Mark the end of the decision block initiated at the first line.\\n\\n                4th line: Assign the value from R0 to R1 (R1 \\u2190 R0).\\n\\n                5th line: Decrement 1 from R1 (R1 \\u2190 R1 \\u2013 1).\\n\\n                6th line: Call the program passing R1 as input parameter.\\n\\n                7th line: Save the value of R9 (returned by the previous call) in R2 (R2 \\u2190 R9).\\n\\n                8th line: Multiply the value of R2 by R0 (R2 \\u2190 R2 * R0).\\n\\n                9th line: Return the value of R2 as output of the program.\\n\\n                The following table brings the summary of the commands for reference:\\n\\n\",\n    \"id\": 1405,\n    \"input\": \"The input contains several test cases. Each test case initiates with two integers, L and N, representing respectively the numbers of lines of the program (1 \\u2264 L \\u2264 100) and the value of the input parameter of the program (0 \\u2264 N \\u2264 100). The following L lines contain the program. You can assume that it is always syntactically correct according to the rules defined above. All of the command (as well as the variables name) will only contain uppercase letters. The end of the input is marked by the case of L = N = 0 and should not be processed.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Halting Problem\",\n    \"output\": \"For each test case your program must print a single line, containing an integer that represents the output value (return) for the given input N, or an asterisk (*) in case of the program never ends.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Carlos Stein, FURB  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"The ICPC judges are preparing a party for the opening ceremony. For the party, they intend to add a playlist with some songs to the jukebox software (a simple MP3 player). However, there are so many songs in the computer that it is difficult to find the ones they want to add. As a consequence, they need to use the search feature many times.\\n\\n                In this jukebox, when you search for a string s, the software returns every music whose title or artist name contains s as a substring. String s is a substring of string t if t contains all characters of s as a contiguous sequence (for example, \\u2018bc\\u2019 is a substring of \\u2018abcd\\u2019, but \\u2018ac\\u2019 is not). To save their precious time, while looking for a song, they always use one of the song\\u2019s golden string, i.e. one of the shortest strings for which the search returns as a result only the song they want.\\n\\n                \\n\\n                In the example above, a possible golden string for the song \\u2018johnnatan\\u2019 is \\u2018ta\\u2019. Note that \\u2018ta\\u2019 is not a substring of the name of another song nor a substring of the artist of another song. Note also that there is no string of size equal to 1 that could identify uniquely the song \\u2018johnnatan\\u2019.\\n\\n                \\u200b\\n\\n                They discovered that if they remove the artist fields from some of the songs they can get even smaller golden strings. For the song \\u2018john\\u2019, there is no golden string. However, if one removes the artist field from all other songs, the string \\u2018c\\u2019 becomes the golden string for the song \\u2018john\\u2019.\\n\\n                Given the song list (each song with name and artist), your job is to determine the minimum sum of the golden string sizes for all songs that can be obtained if one is allowed to remove some of the artist fields. In the figure above you can see a possible best result with the golden strings in bold. The minimum sum of the golden string sizes in this case is 10.\",\n    \"id\": 1406,\n    \"input\": \"The input contains several test cases. The first line of each test case contains one integer N (1 \\u2264 N \\u2264 30), which indicates the number of songs. Following there will be N pairs of lines (2*N lines), one pair for each song. The first line of a pair will contain the song name, the second line will contain the artist name. Both artist and song names are strings containing only lower case letters or underlines and having at least 1 and at most 30 characters. There will be at most 6 different artists in the list.\\n                \\n                The end of the input is given by N = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Jukebox\",\n    \"output\": \"For each test case your program must output one single line with the minimum sum of the golden string sizes. You may assume that there will always be a solution.\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"By Ricardo Anido, UNICAMP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Some people are against lotteries on moral grounds, some governments forbid lotteries, but with the advent of Internet this popular form of gambling, which started in China and helped finance the Great Wall, is thriving.\\n\\n                But the odds of winning a national lottery are tiny, and therefore your college classmates decided to organize a private lottery, with draws every Friday. The lottery is based on a popular style: a student who wants to bet chooses C distinct numbers from 1 to K and pays US$ 1.00 (notice that traditional lotteries such as US$ National Lotto use C = 6 and K = 49). On Friday during lunch C numbers (also from 1 to K) are drawn. The student whose bet has the largest number of correct guesses receives the amount collected in the bets. This amount is shared in case of ties and accumulates to next week if no one guessed any of the numbers drawn.\\n\\n                Some of your colleagues do not believe in the laws of probability and asked you to write a program that determines the numbers that have been drawn the fewest times considering all previous draws, so that they can bet on those numbers.\",\n    \"id\": 1407,\n    \"input\": \"The input contains several test cases. The first line of a test case contains three integers N, C and K which indicate respectively the number of draws that have already happened (1 \\u2264 N \\u2264 10000), how many numbers comprises a bet (1 \\u2264 C \\u2264 10) and the maximum value of the numbers to be chosen in a bet (C < K \\u2264 100). Each of the next N lines contains C distinct integers Xi indicating the numbers drawn in each previous contest (1 \\u2264 Xi \\u2264 K, for 1 \\u2264 i \\u2264 C). The end of input is indicated by N = C = K = 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Weekend Lottery\",\n    \"output\": \"For each test case in the input your program must write one line of output, containing the set of numbers that have been drawn the fewest times. This set must be printed as a list, in increasing order of numbers. Leave one blank space between two consecutive numbers in the list.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By F\\u00e1bio Dias Moreira  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Mario is the owner of a locker company, the Moderate Cost Lockers (MCL). Mario won his clients thanks to the quickness of the process of storing volumes. He has two techniques for this:\\n\\n                \\n                    All lockers are disposed in a line and numerated with positive integers starting from 1. This allows Mario to save time when looking for a locker;\\n                    All lockers have wheels, this gives him a lot of flexibility when rearranging his lockers (naturally, when Mario switches two lockers' positions, he also changes their numeration, so that they continue to be sequentially numerated starting from number 1).\\n                \\n\\n                To rent lockers to a new client, Mario likes to use adjacent lockers, after all, at the beginning of the rental a new client normally makes a lot of requisitions to access the content stored, and the fact that the lockers are adjacent helps when accessing it, both to Mario and to the client.\\n\\n                If Mario has free lockers and in sufficient quantity, he can always make that. For example, if the requisition of a new client needs 4 lockers but only the lockers of numbers 1, 3, 5, 6 and 8 are available, Mario can switch the positions of the lockers 5 and 2 and of the lockers 6 and 4, so that he can rent the interval of lockers from 1 to 4.\\n\\n                However, to minimize the service time, Mario wants to do the smallest number of switches as possible to store each volume. On the example above, he could simply switch the lockers 1 and 4, and rent the interval from 3 to 6.\\n\\n                Mario is really busy with his clients and asked you to make a program to determine the smallest number of switches necessary to satisfy a new client's request.\",\n    \"id\": 1408,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N and L (1 \\u2264 N \\u2264 L \\u2264 100000), indicating how many lockers are necessary to satisfy the new client's request and how many lockers are available, respectively. The following line contains L positive integers separated by blank spaces, none bigger than 1000000000, indicating the positions of the available lockers. The numbers of the free lockers are given in ascending order.\\n                The end of the input is indicated by N = L = 0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Mario\",\n    \"output\": \"For each test case, print one line containing only one integer number, indicating the minimum number of switches that Mario has to do to satisfy the new client's request (that is, have N adjacent lockers available).\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Alessandro de Luna Almeida  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Zak Galou is a famous wizard that kills monsters. The legend says that there is a hidden cave on the jungle confines that contains a millennial treasure. Until today, no adventurer managed to recover the treasure, because it is well guarded by terrible monsters. But Zak Galou is not an ordinary adventurer, and decided to prepare himself to recover the dreamed treasure.\\n\\n                Zak Galou features a certain amount of mana (a sort of magical energy) and a list of M spells. Each monster has a determined number of life points. Each time that Zak Galou casts a spell against a monster, Zak spends a certain amount of mana (the spell\\u2019s cost) and inflicts a certain amount of damage to the monster. The inflicted damage leads to a loss of life points from the monster (the number of life points loss depends on the spell). A monster is dead if he has zero or less life points. Zak always fights against one monster at a time. As a powerful wizard, he can cast the same spell several times, since he has enough amount of mana.\\n\\n                In his researches, Zak Galou found the treasure map. The cave is represented as a set of halls connected by galleries. The halls are identified sequentially from 1 to N. Zak always starts on the hall 1, and the treasure is always on the hall N. There are K monsters identified sequentially from 1 to K. Each monster lives inside a hall, from which he doesn\\u2019t leave (notice that is possible that more than one monster live on the same hall). During the search for the treasure, Zak Galou can only come out or recover a treasure from a hall if the hall is empty (with no monster). In other words, Zak must always, before leaves or recover the treasure from a hall, kill the monster(s) that lives in there.\\n\\n                Given the description of the spells, the monster and the cave, your task is to determine the minimum amount of initial mana necessary so Zak Galou can recover the treasure.\",\n    \"id\": 1409,\n    \"input\": \"The input contains several test cases. The first line of each test case contains four integers M, N, G and K, indicating respectively the number of spells (1 \\u2264\\u00a0M \\u2264\\u00a01000), of halls (1 \\u2264\\u00a0N \\u2264\\u00a01000), of galleries (0 \\u2264\\u00a0G \\u2264\\u00a01000000) and of monsters (0 \\u2264\\u00a0K \\u2264\\u00a01000).\\n\\n                Each one of the following M lines describes one spell. The description of a spell contains two integer numbers, the amount of consumed mana (between 1 and 1000) and the number of inflicted damage points (also between 1 and 1000).\\n\\n                Next, there are G lines, each one describing a gallery. A gallery is described by two integers numbers A and B (A \\u2260\\u00a0B), representing the halls that the gallery connects. Zak can use the gallery on both ways, in other words, to go from A to B or from B to A.\\n\\n                Finally, the last K lines of a test case describe the monsters. The description of a monster contains two integers numbers representing respectively the hall on which he lives (between 1 and N inclusive), and your initial number of life points (between 1 and 1000 inclusive).\\n\\n                The final input is indicated by M = N = G = K = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Zak Galou\",\n    \"output\": \"For each input test case, your program must produce one output line, containing an integer number, the minimum amount of initial necessary mana. In case that is not possible to recover the treasure, you must print -1.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By F\\u00e1bio Dias Moreira  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Hemisphere Network is the largest television network in Tumbolia, a small country located east of South America (or south of East America). The most popular sport in Tumbolia, unsurprisingly, is soccer; many games are broadcast every week in Tumbolia.\\n\\n                Hemisphere Network receives many requests to replay dubious plays; usually, these happen when a player is deemed to be offside by the referee. An attacking player is offside if he is nearer to his opponents\\u2019 goal line than the second last opponent. A player is not offside if\\n\\n                \\n                    he is level with the second last opponent or\\n                    he is level with the last two opponents.\\n                \\n\\n                Through the use of computer graphics technology, Hemisphere Network can take an image of the field and determine the distances of the players to the defending team\\u2019s goal line, but they still need a program that, given these distances, decides whether a player is offside.\",\n    \"id\": 1410,\n    \"input\": \"The input file contains several test cases. The first line of each test case contains two integers A and D separated by a single space indicating, respectively, the number of attacking and defending players involved in the play (2 \\u2264 A, D \\u2264 11). The next line contains A integers Bi separated by single spaces, indicating the distances of the attacking players to the goal line (1 \\u2264 Bi \\u2264 104). The next line contains D integers Cj separated by single spaces, indicating the distances of the defending players to the goal line (1 \\u2264 Cj \\u2264 104 ). The end of input is indicated by A = D = 0.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"He is Offside!\",\n    \"output\": \"For each test case in the input print a line containing a single character: \\\"Y\\\" (uppercase) if there is an attacking player offside, and \\\"N\\\" (uppercase) otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"A polygon is said to be inscribed in a circle when all its vertices lie on that circle. In this problem you will be given a polygon inscribed in a circle, and you must determine the minimum number of vertices that should be removed to transform the given polygon into a regular polygon, i.e., a polygon that is equiangular (all angles are congruent) and equilateral (all edges have the same length).\\n\\n                When you remove a vertex v from a polygon you first remove the vertex and the edges connecting it to its adjacent vertices w1 and w2, and then create a new edge connecting w1 and w2. Figure (a) below illustrates a polygon inscribed in a circle, with ten vertices, and figure (b) shows a pentagon (regular polygon with five edges) formed by removing five vertices from the polygon in (a).\\n\\n                \\u200b\\n\\n                In this problem, we consider that any polygon must have at least three edges.\",\n    \"id\": 1411,\n    \"input\": \"The input contains several test cases. The first line of a test case contains one integer N indicating the number of vertices of the inscribed polygon (3 \\u2264 N \\u2264 104). The second line contains N integers Xi separated by single spaces (1 \\u2264 Xi \\u2264 103, for 0 \\u2264 i \\u2264 N - 1). Each Xi represents the length of the arc defined in the inscribing circle, clockwise, by vertex i and vertex (i+1) mod N. Remember that an arc is a segment of the circumference of a circle; do not mistake it for a chord, which is a line segment whose endpoints both lie on a circle.\\n\\n                The end of input is indicated by a line containing only one zero.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Shrinking Polygons\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing the minimum number of vertices that must be removed from the given polygon to form a regular polygon. If it is not possible to form a regular polygon, the line must contain only the value -1.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo Heiber  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"A lock you use has a code system to be opened instead of a key. The lock contains a sequence of wheels. Each wheel has the 26 letters of the English alphabet 'a' through 'z', in order. If you move a wheel up, the letter it shows changes to the next letter in the English alphabet (if it was showing the last letter 'z', then it changes to 'a'). If you move the wheel down, it changes to show the previous letter in the English alphabet (if it was showing 'a', then it changes to 'z').\\n\\n                It is also possible to move any subsequence of contiguous wheels in the same direction with only one movement. This has the same effect of moving each of the wheels within the subsequence on that direction, but saves the effort of doing that one wheel at a time.\\n\\n                The lock opens when the wheels show a secret sequence of letters. Currently all wheels are showing the letter 'a'. You want to know the minimum number of movements you need to open the lock.\",\n    \"id\": 1412,\n    \"input\": \"The input has several test cases. Each of them is given in exactly one line containing a nonempty string of at most 1000 lowercase letters. The string represents the secret sequence of letters that opens the lock.\\n\\n                The last test case is followed by a line containing a single asterisk.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Code Lock\",\n    \"output\": \"For each test case, output a line containing a single integer with the minimum number of movements to open the lock.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Rodrigo Schmidt  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Orienteering, a cross-country race on foot where competitors receive a map and a compass, is a sport very popular in some european countries. Johnny and his friends entered an orienteering competition and intend to win it.\\n\\n                In this competition, each team member wears a different color and starts from a different place.\\u00a0 There are some finishing points, each one with a list of colors it \\\"accepts\\\".\\u00a0 Every competitor in a team must go from its starting place to one of the finishing places which accept its color.\\u00a0 No team member can go to the same finishing place of another member. The team penalty in the game is the sum of the time team members take from their starting to their final places.\\n\\n                To maximize the chances of winning, Johnny and his team members want to determine the most appropriate finishing point for each member of the team, assuming he and his friends advance at possibly different speeds. That is, they want to determine for each team member one different finishing point, so that the total time penalty for the team will be minimized.\\n\\n                You may assume that there will always be an answer (a different finishing point for each team member).\",\n    \"id\": 1413,\n    \"input\": \"Your program should process several test cases. The first line of a test case contains two integers N and M, representing respectively the number of players in the team and the number of existing finishing points (1 \\u2264 N \\u2264 M \\u2264 100). The next N lines contain each two integers X and Y representing the starting position of a player (-20000 \\u2264 X, Y \\u2264 20000) and a real s, representing the player\\u2019s speed. Players are identified by the order their starting position appear on the input (the first to appear is number 1, the second is number 2, and so on).\\u00a0 These identification numbers are also used to represent the players colors.\\u00a0 The following M lines contain each two integers X and Y defining the position of a finishing point (-20000 \\u2264 X, Y \\u2264 20000) and a list of colors Ci accepted by that finishing point (1 \\u2264 Ci \\u2264 N ); the end of the list is indicated by a value of 0 (zero). The end of input is indicated by N = M = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Hurry Up!\",\n    \"output\": \"For each test case, your program should output a single line, containing a real value representing the minimal time penalty, i.e. the minimal sum of time taken by the players to reach their respective finishing points. Your answers must be rounded to one digit after the decimal point.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Alessandro Luna de Almeida  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A Button Soccer World Cup is being held with teams from around the world. The classification is based on the number of points earned by the teams, and the distribution of points is done in the usual way. That is, when a team wins a game, it gets 3 points if the game ends in a draw, both teams get 1 point, and the loser no points.\\n                    \\n                Given the current standings of the teams and the number of participating teams in the World Cup, his task is to determine how many games ended in draws so far.\",\n    \"id\": 1414,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers T and N, respectively indicating the number of participating teams (2 \\u2264 T \\u2264 200) and the number of matches played (0 \\u2264 N \\u2264 10000). Each of the next T lines contains the name of a team (a string of up to 10 letters and digits), a space, and the number of points the team got so far. The end of input is indicated by T = 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"World Cup\",\n    \"output\": \"For each test case your program must print a single line containing an integer representing the amount of games ended in draws.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Alessandro de Luna Almeida, UFPE Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"The famous witch is back. After killing an incredible amount of monsters in order to find a hidden treasure, Zak Galou decided to buy vineyards in Burgundy and retired. Everything was calm in his new life, until the day that his farm tractor stopped working.\\n\\n                His tractor\\u2019s engine works based on a mechanism of gears. The engine can be represented by a bidimensional grid. At most one gear can be attached to each position of the grid. All the gears are identical and can mesh with adjacent gears. In this grid, a gear can have up to six other adjacent gears, see figure below:\\n\\n                \\n\\n                Under normal utilization, when the tractor is started, some of the gears are initially activated and try to turn clockwise. When a gear tries to turn in one direction, all the adjacent gears try to turn in the opposite direction.\\n\\n                When Zak Galou opened his engine he noticed that it had been sabotaged (probably by a jealous treasure hunter who was not able to find the treasure). Some of the gears were removed from the engine and others have been added to it. As a consequence, some of the gears were immobile. A gear can be immobile either if it is free or if it is blocked. A gear is free when it is not an initially activated gear and no adjacent gear is trying to turn. A gear is blocked when it is trying to turn in both directions at the same time. For example, consider that there are three gears in the engine as shown in the figure below. If any of the gears is initially activated when the tractor is started, all of them will be blocked. If none of the gears are initially activated, all of them will be free.\\n\\n                \\u200b\\n\\n                As a part of the work of fixing his tractor, Zak Galou asks for your help to solve the following problem. Given the description of the engine and the gears that are initially activated in the clockwise direction, he wants to know for each gear, what is its state when the tractor is started: turn clockwise, turn counter-clockwise, free or blocked.\",\n    \"id\": 1415,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers R and C, separated by a single space, representing respectively the number of rows and columns of the engine grid (1 \\u2264 R, C \\u2264 100). The next R lines describe the engine. The i-th line represents the i-th row of the engine and contains C characters. The character \\\".\\\" indicates that there is no gear in the corresponding position, the character \\\"*\\\"\\u00a0indicates that there is a gear that is not initially activated when the engine is started and an \\\"I\\\"\\u00a0indicates that there is a gear that is initially activated when the engine is started. Notice that, for simplicity reasons, the parallelogram representing the engine grid is described in the input as if it was a rectangle with each row left aligned. The end of input is indicated by R = C = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Galou is Back!\",\n    \"output\": \"For each test case, your program must output R + 1 lines. The first line must be empty; each of the following R lines must have C characters. The characters printed must represent the state of each position of the grid when the engine is started. Print a \\\".\\\" if there is no gear in the position; a \\\"(\\\" if there is a gear turning in the clockwise direction; a \\\")\\\" if there is a gear turning in the counter-clockwise direction, an uppercase \\\"F\\\" if there is a gear that is free and an uppercase \\\"B\\\" if there is a blocked gear.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Fabio Dias Moreira, PUC-Rio  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Charles is the contest director for the ICPC Tumbolian regional contest. His responsibility is ensuring the contest flows smoothly, that the contest rules are applied fairly, and, of course, announcing the final contest ranking.\\n\\n                According to ICPC rules, a team with more solved problems ranks above a team with less solved problems. If two teams have the same number of solved problems, the team with the smaller total penalty ranks above the team with the larger total penalty (in case both teams have the same number of solved problems and the same penalty, Charles considers them as tied).\\n\\n                The total penalty for a team is the sum of all the problem penalties of the problems that team has solved. The problem penalty for a problem is TP + EP x\\u00a0FA, where TP is the time penalty for that problem, EP is the contest\\u2019s error penalty and FA is the number of failed attempts at solving the problem before submitting a correct solution.\\n\\n                The time penalty for a problem is the time since the start of the contest, in minutes, that the team needed to solve the problem. The error penalty is a positive integer chosen by the contest director, designed to reward teams that submit correct solutions on the first attempt.\\n\\n                Charles wants to change the error penalty from the \\\"standard\\\" value of 20 minutes to stir things up. To study the effects of that change on the final rankings, he wants to know the range of error penalties that don\\u2019t change the final standings.\\n\\n                In other words, if team A is ahead of team B in the original standings, then A should be ahead of B in the modified standings; if A and B are tied in the original standings, they should also be tied in the modified standings (the original standings are the ones obtained with an error penalty of 20 minutes).\\n\\n                Charles has been very busy organizing the Tumbolian regional, so he asked you to make a program that will compute the range for him.\",\n    \"id\": 1416,\n    \"input\": \"The input contains several test cases. The first line of each test case contains two integers T and P separated by a single space, indicating the number of teams and the number of problems, respectively (2 \\u2264 T \\u2264 100, 1 \\u2264 P \\u2264 10). Each one of the next T lines describes the performance of a team. A team\\u2019s performance description is a line containing P problem descriptions separated by single spaces. Teams are not necessarily given in order of their final standings.\\n\\n                Each problem description is a string \\\"A/S\\\", where A is an integer representing the number of attempts that the corresponding team made at solving that problem (0 \\u2264 A \\u2264 100), and S is either \\\"-\\\", if the team did not solve that problem, or an integer indicating the number of minutes it took for the team to submit a correct solution (1 \\u2264 S \\u2264 300). Attempts made after the first correct submission are not counted.\\n\\n                The end of input is indicated by T = P = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"ICPC Scoreboard\",\n    \"output\": \"For each test case in the input print two positive integers separated by a single space, indicating the smallest and largest error penalties that would not change the final ranking. If there is no upper bound for the error penalty, print a \\\"*\\\" instead of the upper bound.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Raphael Menderico   Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Thirty five years ago, a group of super heroes \\n                    was chosen to form the Justice League, whose purpose was to protect the \\n                    planet Earth from the villains. After all those years helping mankind, \\n                    its members are retiring and now it is time to choose the new members of\\n                    the Justice League.\\n\\n                In order to keep their secret identity, let\\u2019s say, secret, super \\n                    heroes usually use an integer number to identify themselves. There are H\\n                    super heroes on Earth, identified with the integers from 1 to H. With a\\n                    brief look at the newspapers anyone can find out if two super heroes \\n                    have already worked together in a mission. If this happened, we say that\\n                    the two heroes have a relationship.\\n\\n                There must be only one Justice League in the world, which could be \\n                    formed by any number of super heroes (even only one). Moreover, for any \\n                    two heroes in the new league, they must have a relationship.\\n\\n                Besides, consider the set of the heroes not chosen to take part in \\n                    the Justice League. For any two heroes on that set, they must not have a\\n                    relationship. This prevents the formation of unofficial justice \\n                    leagues.\\n\\n                You work for an agency in charge of creating the new Justice League. \\n                    The agency doesn't know if it is possible to create the League with the \\n                    restrictions given, and asked for your programming skills. Given a set \\n                    of super heroes and their relationships, determine if it is possible to \\n                    select any subset to form the Justice League, according to the given \\n                    restrictions.\",\n    \"id\": 1417,\n    \"input\": \"The input is composed of several test cases. The \\n                first line of each test case contains two integers separated by a single\\n                space, H (2 \\u2264 H \\u2264 50000) and R (1 \\u2264 R \\u2264 100000), indicating, respectively, the number of heroes and the number of relationships. Each of the following R lines contains two integers separated by a single space, A and B (1 \\u2264 A < B \\u2264 H), indicating that super hero A has a relationship with super hero B. Note that if A has a relationship with B, B also has a relationship with A. A relationship is never informed twice on a test case.\\n                The end of input is indicated by H = R = 0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Justice League\",\n    \"output\": \"For each test case in the input print a single line, containing the uppercase letter \\u201cY\\u201d\\n                    if it is possible to select a subset of heroes to form the Justice \\n                    League according to the given restrictions, or the uppercase letter \\u201cN\\u201d otherwise.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Pablo Heiber  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A couple of years ago, a new world wide crisis started, leaving many people with economical problems. Some workers of a particular company are trying to ask for an increase in their salaries.\\n\\n                The company has a strict hierarchy, in which each employee has exactly one direct boss, with the exception of the owner of the company that has no boss. Employees that are not bosses of any other employee are called workers. The rest of the employees and the owner are called bosses.\\n\\n                To ask for a salary increase, a worker should file a petition to his direct boss. Of course, each boss is encouraged to try to make their subordinates happy with their current income, making the company\\u2019s profit as high as possible. However, when at least T percent of its direct subordinates have filed a petition, that boss will be pressured and have no choice but to file a petition himself to his own direct boss. Each boss files at most 1 petition to his own direct boss, regardless on how many of his subordinates filed him a petition. A boss only accounts his direct subordinates (the ones that filed him a petition and the ones that didn\\u2019t) to calculate the pressure percentage.\\n\\n                Note that a boss can have both workers and bosses as direct subordinates at the same time. Such a boss may receive petitions from both kinds of employees, and each direct subordinate, regardless of its kind, will be accounted as 1 when checking the pressure percentage. When a petition file gets all the way up to the owner of the company, all salaries are increased. The workers\\u2019 union is desperately trying to make that happen, so they need to convince many workers to file a petition to their direct boss.\\n\\n                Given the company\\u2019s hierarchy and the parameter T, you have to find out the minimum number of workers that have to file a petition in order to make the owner receive a petition.\",\n    \"id\": 1418,\n    \"input\": \"There are several test cases. The input for each test case is given in exactly two lines. The first line contains two integers N and T (1 \\u2264 N \\u2264 105, 1 \\u2264 T \\u2264 100), separated by a single space. N indicates the number of employees of the company (not counting the owner) and T is the parameter described above. Each of the employees is identified by an integer between 1 and N. The owner is identified by the number 0. The second line contains a list of integers separated by single spaces. The integer Bi, at position i on this list (starting from 1), indicates the identification of the direct boss of employee i (0 \\u2264 Bi \\u2264 i \\u2212 1).\\n\\n                The last test case is followed by a line containing two zeros separated by a single space.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Another Crisis\",\n    \"output\": \"For each test case output a single line containing a single integer with the minimum number of workers that need to file a petition in order to get the owner of the company to receive a petition.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Ines Kereki  Uruguay\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Mark and Leti love to play with Bakugan balls. \\n                    These balls are small plastic spheres with a tiny monster toy inside. \\n                    When dropped to the ground, a Bakugan ball pops open with an incredible \\n                    sound, liberating a fearsome Bakugan monster. Mark and Leti love to play\\n                    with the toy monsters, but popping open the balls is also great fun.\\n                \\n\\n                \\n                    Each of them received a bag with Bakugan balls, and they invented a \\n                    game to pop open the balls. There are 10 different monsters, and for the\\n                    game Mark and Leti associated each monster with a different integer \\n                    from 1 to 10, according to the monster\\u2019s ugliness. The game is composed \\n                    of R rounds. At each round:\\n                \\n\\n                \\n                    Both players drop simultaneously a ball each;\\n                    Each player accumulates a number of points coincident with the number associated with the monster liberated by her/his ball;\\n                    The first (and only the first) player who liberates the same \\n                        monster in three consecutive rounds earns 30 additional points; if this \\n                        condition happens in the same round for both players then nobody earns \\n                        extra points.\\n                \\n\\n                The winner of the game is the player who accumulates more points. Please help Mark and Leti announce the winner of the game!\",\n    \"id\": 1419,\n    \"input\": \"Each test case is described using three lines. The first line contains an integer R representing the number of rounds of the game (1 \\u2264 R \\u2264 10). The second line contains R integers Mi indicating the monsters liberated by Mark at each turn (1 \\u2264 Mi \\u2264 10 for 1 \\u2264 i \\u2264 R). The third line contains R integers Li indicating the monsters liberated by Leti at each turn (1 \\u2264 Li \\u2264 10, for 1 \\u2264 i \\u2264 R).\\n\\n                The last test case is followed by a line containing one zero.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Bakugan\",\n    \"output\": \"For each test case output a line with a character representing the result of the game: \\\"M\\\" (uppercase) if the winner is Mark, \\\"L\\\" (uppercase) if the winner is Leti, or \\\"T\\\" (uppercase) if there is a tie.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o IME-USP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Through research and the spectacular development of revolutionary techniques of computing, statistics and intuition, a group of women at the University of Torrinha developed a software able to predict the future. In fact, the program cannot describe exactly what will happen, but by analyzing the responses to a series of questions about the person, it can identify when the next five most important events in her life will happen. The program has two small problems. The first is that the person upon whom one wants to predict the future need to spend hundreds of hours straight in front of the computer, answering questions asked by the software, so it can make the prediction. The second is that the predictions are made in number of seconds from the end of the processing. The girls of Torrinha are engaged in solving the first problem, and they asked to the Programming Marathon competitors a help to solve the second.\",\n    \"id\": 1420,\n    \"input\": \"The input consists of several predictions related to different people. The first line of each prediction contains the exact moment that the 5 numbers (corresponding to the 5 key moments) were printed by the program. This moment follows the format:\\n\\n               <day of week>,<day><month><year>:<hour>:<minute>:<second>\\n\\n                where the <day of week> is the abbreviation of the weekday corresponding sequence composed of three uppercase characters corresponding to the days of the week from Sunday to Saturday respectively, such as: DOM, SEG, TER, QUA, QUI, SEX or SAB. <day> is the day of month, written with two digits, leading zero if necessary. <month> is the abbreviation of the corresponding month, comprising the sequence of 3 uppercase characters corresponding to the months from January to December, respectively, such as: JAN, FEV, MAR, ABR, MAI, JUN, JUL, AGO, SET, OUT, NOV or DEZ. <year> is the year, written with four digits. <hour>, <minute> and <second> written with two digits, leading zero if necessary.\\n\\n                The following lines contain 5 moments, one per line, 5 lines per prediction. Each moment d is the number of seconds (0 < d < 2.000.000.000) from the time of processing. After the last test case, a line beginning with 'FIM' indicates the end of the input file.\\n\\n                You can assume that the program developed on 01 March 2002 so that no prediction time is earlier than this. Another important fact is that the girls of Torrinha will only use the program until 23:59:59 of 31/12/2099 when one of them thinks she will die, because it was predicted by another program prepared by the department of women's intuition at Unitor (University of Torrinha).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Counting Seconds\",\n    \"output\": \"Your program should identify each prediction in the output by a serial number in the first line, and the following five lines you must write five full moments relating to the prediction made \\u200b\\u200bin the same format used on the input to process th prediction. You should also skip a line at the end of each prediction.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o IME-USP  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Mickayil Romanoff received as a birthday gift a very interesting game: a tridimensional tic-tac-toe. The game is made of n x n pins, arranged in a square matrix. Each pin has a space to receive n balls of the colors white and blue. As in the traditional tic-tac-toe, the goal of the game is to get a complete sequence (in any direction) of n balls of the same color. Notice that, when you put a ball in one of the pins, it necessarily falls until it reaches the first empty level, because of the gravity.\\n\\n                After several games, Mickayil noticed that he couldn\\u2019t realize if someone had won. Your task in this problem is to help Mickayil, writing a program that receives a match and determines who won.\",\n    \"id\": 1421,\n    \"input\": \"Several instances are given. The first line of each instance contains a dimension 0 \\u2264\\u00a0n \\u2264\\u00a030 of the matrix. Next, in each one of the next n3\\u00a0lines are given, alternately, the positions where the players are putting the balls in, starting by the white player. Each position is given by the pin where the ball was placed, in other words, a pair (i, j), where i, j \\u2208\\u00a0{1, \\u2026, n}. The input ends with a zero.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Tic-Tac-Toe?\",\n    \"output\": \"You must print a header indicating the instance number that you are on (Instancia h) and in the next line the message that the player won the match (Branco ganhou or Azul ganhou), or if the game tied (Empate). Remember that the first player who got a complete sequence wins the match. A blank line must be printed after each test output instance.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es, IME-USP  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Pietro Demazio is an Italian terrorist that escaped to Brazil and is now disguised as a game programmer. For his new plan to destroy the world, Pietro has developed a new kind of bacterium that is able to decimate the entire world population.\\n\\n                Demazio spent 4 days creating these microorganisms' colonies. In the end of the 4th day, however, he found out that their genetic code had an error. This error makes the bacteria die after living for 4 days. Since the first colony was created 3 days before, he quickly modified the genetic code (through radiation), in such a way that his bacteria reproduce every day. This is an asexual reproduction, and is done by bi-partitioning (i.e., one bacterium generates exactly one other bacterium in a day).\\n\\n                So, suppose that Pietro created 3 bacteria in the first day, 4 bacteria in the second day, 2 bacteria in the 3rd day and 5 bacteria in the 4th day. He will have 14 bacteria by the end of the 4th day, when he applies the mutation. Right after the mutation, they reproduce, and then he'll have 28 bacteria. Since the first colony (with 3 bacteria) dies in the end of the 4th day, the number of bacteria in the beginning of the 5th day is 25. By the end of the 5th day, these 25 bacteria reproduce, resulting in 50 bacteria. Since the second colony (with 4 bacteria) dies by the end of this day, he'll have 46 bacteria in the beginning of the 6th day.\\n\\n                Demazio carefully watches the growing of his bacteria population, and is already planning when to use them. To do so, he needs to know how many bacteria there will be after a given number of days. He is asking you to write a program that determines the number of bacteria that there will be after N days, given the number of bacteria of the colonies in the first 4 days.\",\n    \"id\": 1422,\n    \"input\": \"The input consists of many test cases. Each test case consists of two lines. The first line contains the integer N (5 \\u2264 N \\u2264 1,000,000,000), the number of days for which Pietro wants to know the number of bacteria he will have. The second line contains four integers a1, a2, a3, a4 (1 \\u2264 a1, a2, a3, a4 \\u2264 1,000). The integer ak indicates the number of bacteria that were created in the k-th day.\\n\\n                The last test case if followed by a line with N=0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Bacteria\",\n    \"output\": \"For each test case, print a line containing the number of bacteria Pietri will have after N days, modulo 13371337.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Graph\",\n    \"description\": \"After rescuing the beautiful princess, Super Mario needs to find a way home - with the princess of course :-). He's very familiar with the 'Super Mario World', so he doesn't need a map, he only needs the best route in order to save time.\\n\\n                \\n\\n                There are A Villages and B Castles in the world. Villages are numbered 1..A, and Castles are numbered A+1..A+B. Mario lives in Village 1, and the castle he starts from is numbered A+B. Also, there are two-way roads connecting them. Two places are connected by at most one road and a place never has a road connecting to itself. Mario has already measured the length of every road, but they don't want to walk all the time, since he walks one unit time for one unit distance (how slow!).\\n\\n                Luckily, in the Castle where he saved the princess, Mario found a magic boot. If he wears it, he can super-run from one place to another IN NO TIME. (Don't worry about the princess, Mario has found a way to take her with him when super-running, but he wouldn't tell you :-P).\\n\\n                Since there are traps in the Castles, Mario NEVER super-runs through a Castle. He always stops when there is a castle on the way. Also, he starts/stops super-runnings ONLY at Villages or Castles.\\n\\n                Unfortunately, the magic boot is too old, so he cannot use it to cover more than L kilometers at a time, and he cannot use more than K times in total. When he comes back home, he can have it repaired and make it usable again.\",\n    \"id\": 1423,\n    \"input\": \"The first line in the input contains a single integer T, indicating the number of test cases (1 \\u2264 T \\u2264 20). Each test case begins with five integers A, B, M, L and K - the number of Villages, the number of Castles (1 \\u2264 A, B \\u2264 50), the number of roads, the maximal distance that can be covered at a time (1 \\u2264 L \\u2264 500), and the number of times the boot can be used (0 \\u2264 K \\u2264 10). The next M lines each contains three integers Xi, Yi, Li. That means there is a road connecting place Xi and Yi. The distance is Li, so the walk time is also Li (1 \\u2264 Li \\u2264 100).\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Adventure of Super Mario\",\n    \"output\": \"For each test case in the input print a line containing a single integer indicating the minimal time needed to go home with the beautiful princess. It's guaranteed that Super Mario can always go home.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Though Rujia Liu usually sets hard problems for contests (for example, regional contests like Xi'an 2006, Beijing 2007 and Wuhan 2009, or UVa OJ contests like Rujia Liu's Presents 1 and 2), he occasionally sets easy problem (for example, 'the Coco-Cola Store' in UVa OJ), to encourage more people to solve his problems :D\\n\\n                Given an array, your task is to find the k-th occurrence (from left to right) of an integer v. To make the problem more difficult (and interesting!), you'll have to answer m such queries.\",\n    \"id\": 1424,\n    \"input\": \"There are several test cases. The first line of each test case contains two integers n, m (1 \\u2264 n, m \\u2264 100,000), the number of elements in the array, and the number of queries. The next line contains n positive integers not larger than 1,000,000. Each of the following m lines contains two integer k and v (1 \\u2264 k \\u2264 n, 1 \\u2264 v \\u2264 1,000,000).\\n\\n                The input is terminated by end-of-file (EOF). The size of input file does not exceed 5 MB.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Easy Problem from Rujia Liu?\",\n    \"output\": \"For each query, print the 1-based location of the occurrence. If there is no such element, output 0 instead.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"There is a beautiful river in a small village. N rocks are arranged in a straight line numbered 1 to N from left bank to the right bank, as shown below.\\n\\n                [Left Bank] - [Rock1] - [Rock2] - [Rock3] - [Rock4] ... [Rock n] - [Right Bank]\\n\\n                The distance between two adjacent rocks is exactly 1 meter, while the distance between the left bank and rock 1 and the distance between Rock n and the right bank are also 1 meter.\\n\\n                \\n                    Frog Frank was about to cross the river, his neighbor Frog Funny came to him and said:\\n                    'Hello, Frank. Happy Children's Day! I have a gift for you. See it? A little parcel on Rock 5.'\\n                    'Oh, that's great! Thank you! I'll get it.'\\n                    'Wait...This present is for smart frogs only. You can't get it by jumping to it directly.'\\n                    'Oh? Then what should I do?'\\n                    'Jump more times. Your first jump must be from the left bank to Rock 1, then, jump as many times as you like - no matter forward or backward, but your ith jump must cover 2 \\u00d7 i - 1 meters. What's more, once you return to the left bank or reach the right bank, the game ends, and no more jumps are allowed.'\\n                    'Hmmm, not easy... let me have a think!' Answered Frog Frank, 'Should I give it a try?'\\n\",\n    \"id\": 1425,\n    \"input\": \"The input will contain no more than 2000 test cases. Each test case contains a single line. It contains two positive integers N (2 \\u2264 N \\u2264 106), and M (1 \\u2264 M \\u2264 N), M indicates the number of the rock on which the gift is located. A test case in which N = 0, M = 0 will terminate the input and should not be regarded as a test case.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Gift?!\",\n    \"output\": \"For each test case, output a single line containing 'Let me try!' If it's possible to get to Rock m, otherwise, output a single line containing 'Don't make fun of me!'\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Gin\\u00e9s Garc\\u00eda Mateos, UM  Espa\\u00f1a\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"This in not \\\"another brick in the wall\\\", it's just a matter of adding numbers.\\n\\n                Suppose you have a wall with the shape of a triangle, like the one shown below. The wall has 9 rows and row i has exactly i bricks, considering that top row is the first one and bottom row is the ninth. Some bricks are labeled with a number and other ones are blank. Notice that labeled bricks appear only on odd rows and they occupy odd positions within the row.\\n\\n                \\u200b\\n\\n                The problem you must solve is finding a suitable number for each blank brick taking into account one simple rule: the number of a brick is obtained by adding the numbers of the two bricks below it. Obviously, this rule does not apply to the ninth row. Numbers are supposed to be integers.\\n\\n                Note: Here we have an example with two test cases. The first one corresponds to the wall depicted above.\",\n    \"id\": 1426,\n    \"input\": \"The first line of the input contains an integer N, indicating the number of test cases. This line is followed by the lines corresponding to the test cases. Each test case is described in five lines. These five lines correspond to odd rows of the wall, from top to bottom, as described above. Line i contains the numbers corresponding to odd bricks on row i of the wall (that is, non blank bricks), enumerated from left to right and separated with a single space.\\n\\n                It is supposed that each test case is correct, that is, there exists a solution to the problem that the case describes.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Add Bricks in The Wall\",\n    \"output\": \"For each test case, the output should consist of nine lines describing the numbers of all bricks of the wall. So, line i should contain the numbers corresponding to the i bricks on row i of the wall, enumerated from left to right and separated by a single space.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gin\\u00e9s Garc\\u00eda Mateos, UM  Espa\\u00f1a\",\n    \"category\": \"Graph\",\n    \"description\": \"The delivery company Scrooge Co. wants to establish a system to pay its employees the minimum money in their travels. The company has information about which the minimum cost to go from a location to another one is.\\n\\n                They ask you for getting a solution to compute the minimum amount of money that an employee will receive to go from one location to another one and which the route that he should use to arrive in is.\",\n    \"id\": 1427,\n    \"input\": \"The input begins with a single\\u00a0 integer 1 \\u2264 C\\u00a0\\u2264 99 on a line by itself, indicating the number of test cases following, each of them as described below.\\n\\n                For each test case, the first line has an integer 1\\u00a0\\u2264 P\\u00a0\\u2264 99, indicating the number of\\u00a0 locations we consider for this case. The second line gives us the name of each location separated by a TAB, each name has at most 20 characters.The next P lines contain the minimum cost to go from one location to another one separated by a TAB, the first line have the costs between the first location and the rest, the second line are the costs between the second location and the rest, and so on. A cost is an integer -1\\u00a0\\u2264 W\\u00a0\\u2264 300, where -1 means that is too expensive a travel between the locations, and 0 is used to indicate the cost from a location to the same location. After the P lines there is an integer 1\\u00a0\\u2264 R\\u00a0\\u2264 99, indicating the number of routes that we have to consider. Following R lines containing the name of the employee, the start location and the end location. The locations names are case sensitive and the name of the employee has at most 30 characters.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Scrooge Co Problem\",\n    \"output\": \"For each test case you should produce one or two outputs line. If a route between the locations exists, you will produce two lines, one with the cost and other with the path according to this format:\\n\\n                \\\"Mr <employee name> to go from <orig name> to <dest name>, you will receive <minimum cost> euros\\\"\\n                    \\\"Path:<orig name> <locations separated by a blank> <dest name>\\\"\\n\\n                If a route between the locations does not exist, you will produce one line, according to this format:\\n\\n                \\\"Sorry Mr <employee name> you can not go from <orig name> to <loc name>\\\"\\n                If there are two possible minimal paths between A and B and both have intermediate vertices, the preference is to the path that appears before in the input, for example:\\n\\n                If the input is: A B C D E F, the path \\\"A C D B\\\" has more priority that the path \\\"A E B\\\" (since E appears after D) and the path \\\"A D E B\\\" has more priority that \\\"A C F B\\\" (because F appears after E). This analysis is done by looking the order of the  intermediate vertices.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gin\\u00e9s Garc\\u00eda Mateos, UM  Espa\\u00f1a\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The Loch Ness Monster is a mysterious and unidentified animal said to inhabit Loch Ness, a large deep freshwater loch near the city of Inverness in northern Scotland. Nessie is usually categorized as a type of lake monster.\\n                    https://en.wikipedia.org/wiki/Loch_Ness_Monster\\n\\n                In July 2003, the BBC reported an extensive investigation of Loch Ness by a BBC team, using 600 separate sonar beams, found no trace of any \\\"sea monster\\\" (i.e., any large animal, known or unknown) in the loch. The BBC team concluded that Nessie does not exist. Now we want to repeat the experiment.\\n\\n                Given a grid of n rows and m columns representing the loch, 6 \\u2264 n, m \\u2264 10000, find the minimum number s of sonar beams you must put in the square such that we can control every position in the grid, with the following conditions:\\n\\n                \\n                    One sonar occupies one position in the grid; the sonar beam controls its own cell and the contiguous cells;\\n                    The border cells do not need to be controlled, because Nessie cannot hide there (she is too big).\\n                \\n\\n                For example,\\n                    \\n                 \\n\\n                where X represents a sonar, and the shaded cells are controlled by their sonar beams; the last figure gives us a solution.\",\n    \"id\": 1428,\n    \"input\": \"The first line of the input contains an integer, t, indicating the number of test cases. For each test case, there is a line with two numbers separated by blanks, 6 \\u2264 n, m \\u2264 10000, that is, the size of the grid (n rows and m columns).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Searching for Nessy\",\n    \"output\": \"For each test case, the output should consist of one line showing the minimum number of sonars that verifies the conditions above.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ines Kereki  Uruguay\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Mathew, an engineering freshman, is developing an original positional notation for representing integer numbers. He called it \\u201cA Curious Method\\u201d (ACM for short). The ACM notation uses the same digits as the decimal notation, i.e., 0 through 9.\\n\\n                To convert a number A from ACM to decimal notation you must add k terms, where k is the number of digits of A (in the ACM notation). The value of the i-th term, corresponding the i-th digit ai, counting from right to left, is ai \\u00d7 i!. For instance 719ACM is equivalent to 5310, since 7 \\u00d7 3! + 1 \\u00d7 2! + 9 \\u00d7 1! = 53.\\n\\n                Mathew has just begun studying number theory, and probably does not know which properties a numbering system should have, but at the moment he is only interested in converting a number from ACM to decimal. Could you help him?\",\n    \"id\": 1429,\n    \"input\": \"Each test case is given in a single line that contains a non-empty string of at most 5 digits, representing a number in ACM notation. The string does not have leading zeros.\\n\\n                The last test case is followed by a line containing one zero.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Factorial Again!\",\n    \"output\": \"For each test case output a single line containing the decimal representation of the corresponding ACM number.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ines Kereki  Uruguay\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"A. C. Marcos is taking his first steps in the direction of jingle composition. He is having some troubles, but at least he is achieving pleasant melodies and attractive rhythms.\\n\\n                In music, a note has a pitch (its frequency, resulting in how high or low is the sound) and a duration (for how long the note should sound). In this problem we are interested only in the duration of the notes.\\n\\n                A jingle is divided into a sequence of measures, and a measure is formed by a series of notes.\\n\\n                The duration of a note is indicated by its shape. In this problem, we will use uppercase letters to indicate a note's duration. The following table lists all the available notes:\\n\\n                \\u200b\\n\\n                The duration of a measure is the sum of the durations of its notes. In Marcos' jingles, each measure has the same duration. As Marcos is just a beginner, his famous teacher Johann Sebastian III taught him that the duration of a measure must always be 1.\\n\\n                For example, Marcos wrote a composition containing five measures, of which the first four have the correct duration and the last one is wrong. In the example below, each measure is surrounded with slashes and each note is represented as in the table above.\\n\\n                /HH/QQQQ/XXXTXTEQH/W/HW/\\n\\n                Marcos likes computers as much as music. He wants you to write a program that determines, for each one of his compositions, how many measures have the right duration.\",\n    \"id\": 1430,\n    \"input\": \"The input contains several test cases. Each test case is described in a single line containing a string whose length is between 3 and 200 characters, inclusive, representing a composition. A composition begins and ends with a slash '/'. Measures in a composition are separated by a slash '/'. Each note in a measure is represented by the corresponding uppercase letter, as described above. You may assume that each composition contains at least one measure and that each measure contains at least one note. All characters in the input will be either slashes or one of the seven uppercase letters used to represent notes, as described above.\\n\\n                The last test case is followed by a line containing a single asterisk.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Jingle Composing\",\n    \"output\": \"For each test case your program must output a single line, containing a single integer, the number of measures that have the right duration.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo Heiber  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In a Latin American high school, the klingon language has become so popular that many of the students have begun learning this artificial language on their own. After becoming aware of the situation, the directors have decided to implement formal klingon courses. The problem is that kids have different starting levels of knowledge of the language. Therefore, the directors decided to offer two course levels: basic and advanced.\\n\\n                The school has several divisions, with each student belonging to exactly one division. Because of bureaucracy and schedule conflicts, students of different divisions cannot be in the same klingon course. Also, to be fair, the basic and advanced klingon levels should be offered to all divisions, and have the same level of difficulty among the divisions.\\n\\n                Therefore, each division will be partitioned into two groups: one group will be assigned a basic level course, and the other group an advanced level course. It is possible, also, that a division does not contain any students in one of the levels.\\n\\n                To assign the levels, a klingon test has been previously taken by all students of the school, each getting an integer grade between 0 and 1000, inclusive. To accomplish the aforementioned goals, the school directors have decided that all students with a score greater than or equal to some T will be assigned the advanced level, and all students with a score less than T will be assigned the basic level.\\n\\n                However, they cannot decide on the best value of T. They would like a value that evenly splits all divisions. For this, they came up with a metric: They want the value of T that minimizes the accumulated difference, that is, the sum of the difference between the number of students in the two groups (basic and advanced) within each division.\\n\\n                For example, if the school has two divisions, where one division has 10 students in the basic level and 20 in the advanced level, while the other one has 17 and 15, respectively, the accumulated difference would be |10 \\u2212 20| + |17 \\u2212 15| = 12.\",\n    \"id\": 1431,\n    \"input\": \"There are several test cases. Each test case is given in several lines. The first line of each test case contains a single integer N (1 \\u2264 N \\u2264 104), the number of divisions in the school. 2 \\u00d7 N lines follow, with each division being described in two consecutive lines. The first line of each group of two contains a single integer Ki (1 \\u2264 Ki \\u2264 104) the number of students in division i. The second line contains Ki integers between 0 and 1000, inclusive, separated by single spaces, representing the scores of each of the students in division i. You may assume that the total number of students within each test case (that is, the sum of the values of all Ki) is not greater than 105.\\n\\n                The last test case is followed by a line containing a single zero.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Klingon Levels\",\n    \"output\": \"For each test case, output a single line with a single integer representing the minimum value for the accumulated difference if T is chosen optimally.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Rujia Liu, TU  China\",\n    \"category\": \"Paradigms\",\n    \"description\": \"A binary string consists of ones and zeros. Given a binary string T, if there is no binary string S such that SSS (concatenate three copies of S together) is a substring of T, we say T is triple-free.\\n\\n                A pattern consists of ones, zeros and asterisks, where an asterisk (*) can be replaced by either one or zero. For example, the pattern 0**1 contains strings 0001, 0011, 0101, 0111, but not 1001 or 0000.\\n\\n                Given a pattern P, how many triple-free binary strings does it contain?\",\n    \"id\": 1432,\n    \"input\": \"Each line of the input represents a test case, which contains the length of the pattern N (1 \\u2264 N \\u2264 30), and the pattern P. There can be a maximum of 35 test cases. The input terminates when N\\u00a0is\\u00a00.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Triple-Free Binary Strings\",\n    \"output\": \"For each test case, print the case number and the answer, as shown below.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Paulo Oliva  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The ACM (All Can Meet) club was created with the purpose of attracting people of all ages, with the idea that the people could sit together and share their life experience, to the bene\\ufb01t of all. But as it happened, the club became such a huge success that it was practically impossible to gather all its members at the same place and time. The club then decided to split its members into smaller \\u201csections\\u201d. In order to make sure that sections are \\u201cnice\\u201d, the director of the club decided to impose the following requirements:\\n\\n                A. all members of the same age should be in the same section,\\n                B. all members should be part of exactly one section,\\n                C. in each section, the maximum number of people with the same age should not be more than R times the minimum number of people with the same age, where R is a rational number between 1.0 and 2.0. The number R is called the splitting factor of the club.\\n\\n                The last condition makes sure that there is no relatively small-age group which might feel uncomfortable in the section. For instance, let denote by [N, M] a group with N members who are M-years old. Then in section {[10, 50], [6, 45], [70, 12], [43, 23]} the maximum number of people with the same age is 70, the minimum number of people with the same age is 6. If R = 2.0, then we say this section does not satisfy the requirement (C) since 70/6 > 2.0. However, we can split this section into two smaller sections, namely {[10, 50],[6, 45]} and {[70, 12], [43, 23]}, which satisfy all the requirements.\\n\\n                Given the splitting factor R and a list of the members of the club, you must write a program to \\ufb01nd the minimum number of sections satisfying the three requirements above.\",\n    \"id\": 1433,\n    \"input\": \"Your program should process several test cases. The \\ufb01rst line of a test case contains an integer K and a rational R. K represents the number of different ages in the club (1 \\u2264 K \\u2264 120), and R represents the splitting factor set by the club director (1.0 \\u2264 R \\u2264 2.0). The next K lines describe the group members, each line containing two integers N and M, indicating that there are N members who are M-years old in the club (1 \\u2264 N \\u2264 10000 and 1 \\u2264 M \\u2264 120). The end of input is indicated by a line with K = 0 and R = 0.0.\\n\\n                The input values will be such that the eventual error in the internal binary representation of R will not affect the result.\\n\\n                The input must be read from standard input.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Splitting Club\",\n    \"output\": \"For each instance of the problem you should output a single line, containing the minimum number of groups satisfying the three requirements above.\\n\\n                The output must be written to standard output.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Alessandro Luna de Almeida  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In ancient times, patrollers were used to ensure that all the cities of the Roman Empire were under control. A patroller\\u2019s job consisted in continuously visiting the cities of the empire, trying to minimise the interval between two visits to each city. The Military Society (MS) wants to simulate the behavior of one such patroller to see how e\\ufb00ective they were.\\u00a0\\n\\n                Each cycle of the simulation corresponds to one time unit. The Instantaneous City Idleness (ICI) for a city X after T cycles of the simulation is the number of cycles elapsed since the last visit of the patroller to the city X (i.e. the number of time units the city X remained unvisited). All of the cities have initial Instantaneous City Idleness equal to zero at the start of the simulation. The Instantaneous Empire Idleness (IEI) after each given cycle is the sum of the Instantaneous City Idleness of all cities after that given cycle. Finally, the Empire Idleness (EI) for an N-cycle simulation is the sum of the Instantaneous Empire Idleness after each of the N cycles of simulation.\\n\\n                After visiting a city X, the patroller always chooses to visit the neighbour city Y with the highest Instantaneous City Idleness (if more than one city has the highest idleness, the one with the lowest identi\\ufb01er is chosen). Cities X and Y are neighbour if there is a road linking the two cities directly, without going through any intermediate city. In the beginning of the simulation, the patroller is located in one of the cities, and is given a map of the Roman Empire containing a description of all the roads in the empire, indicating the length (in kilometers) and which two cities each road connects. A road between cities X and Y can be used both to go from X to Y and from Y to X.\\n\\n                Assuming that a patroller travels one kilometer in one time unit (one simulation cycle) and that the time to visit a city is negligible (equal to zero), MS asks you to determine the Empire Idleness after an N-cycle simulation.\\n\\n                For clarity, consider the example of an empire which contains 3 cities (1, 2 and 3) and two roads of length 1 km. The first road connects cities 1 and 2, while the second road connects cities 2 and 3. Below you \\ufb01nd a trace of a 3-cycle simulation for such a scenario, considering that the patroller starts at city 1.\\n\\n                Start of the simulation\\n                    Patroller at: 1\\n                    ICI1 = 0, ICI2 = 0, ICI3 = 0\\n                    IEI = 0\\n                    EI = 0\\n\\n                After cycle 1\\n                    Patroller at: 2\\n                    ICI1 = 1, ICI2 = 0, ICI3 = 1\\n                    IEI = 2\\n                    EI = 2\\n\\n                After cycle 2\\n                    Patroller at: 1\\n                    ICI1 = 0, ICI2 = 1, ICI3 = 2\\n                    IEI = 3\\n                    EI = 5\\n\\n                After cycle 3\\n                    Patroller at: 2\\n                    ICI1 = 1, ICI2 = 0, ICI3 = 3\\n                    IEI = 4\\n                    EI = 9\\n\\n                Therefore, for such a scenario, after 3 simulation cycles the Empire Idleness is 9.\",\n    \"id\": 1434,\n    \"input\": \"The input consists of several test cases. The \\ufb01rst line of a test case contains four integers C, R, N, and S, indicating respectively the quantity of cities in the empire (2 \\u2264 C \\u2264 1000), the number of roads (1 \\u2264 R \\u2264 C(C \\u2212 1)/2), the number of cycles to be simulated (1 \\u2264 N \\u2264 1000) and the identi\\ufb01er of the starting city of the patroller (1 \\u2264 S \\u2264 C). Each city is identi\\ufb01ed by a distinct integer from 1 to C. Each of the following R lines contains three integers X, Y and D describing a road; X and Y represent cities (1 \\u2264 X \\u2260 Y \\u2264 C) and D represents the distance (1 \\u2264 D \\u2264 1000), in kilometers, of the road that connects X and Y directly, without passing through any other city. Each pair of cities X and Y will appear at most once in a road description. You can assume that it is always possible to travel from any city to any other city in the empire using the roads available. The end of input is indicated by C = R = N = S = 0.\\u00a0\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Roman Patrollers\",\n    \"output\": \"For each test case in the input, your program must produce one line containing the Empire Idleness after the N-cycle simulation.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Adapted by Josu\\u00e9 P. de Castro  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write a program that read an integer number N (0 \\u2264 N \\u2264 100) that correspond to the order of a Bidimentional array of integers, and build the Array according to the above example.\",\n    \"id\": 1435,\n    \"input\": \"The input consists of several integers numbers, one per\\u00a0line, corresponding to orders from arrays\\u00a0to be built. The end of input is indicated by zero (0).\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Square Matrix I\",\n    \"output\": \"For each integer number of input,\\u00a0print the corresponding array according to the example. (the values \\u200b\\u200bof the arrays must be formatted in a field of size 3 right justified and separated by a space. None space must be printed after the last character of each row of the array. A blank line must be printed after each\\u00a0array.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Arifuzzaman Arif  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"There is a village in Bangladesh, where brick game is very popular. Brick game is a team game. Each team consists of odd number of players. Number of players must be greater than 1 but cannot be greater than 10. Age of each player must be within 11 and 20. No two players can have the same age. There is a captain for each team. The communication gap between two players depends on their age difference, i.e. the communication gap is larger if the age difference is larger. Hence they select the captain of a team in such a way so that the number of players in the team who are younger than that captain is equal to the number of players who are older than that captain.\\n                \\n                    Ages of all members of the team are provided. You have to determine the age of the captain.\",\n    \"id\": 1436,\n    \"input\": \"Input starts with an integer T (T \\u2264 100), the number of test cases. Each of the next T lines will start with an integer N (1 < N < 11), number of team members followed by N space separated integers representing ages of all of the members of a team. Each of these N integers will be between 11 and 20 (inclusive). Note that, ages will be given in strictly increasing order or strictly decreasing order. We will not mention which one is increasing and which one is decreasing, you have to be careful enough to handle both situations.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Brick Game\",\n    \"output\": \"For each test case, output one line in the format \\u201cCase x: a\\u201d (quotes for clarity), where x is the case number and a is the age of the captain.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"This year the sergeant is having more work than usual to train the recruits. One of them is very clumsy, and occasionally does everything wrong - for example, instead of turning right when commanded, he turns left, causing great confusion in the battalion. The sergeant has a reputation for tough and will not let the recruit in peace while he does not learn how to properly execute the commands. On Saturday afternoon, while all other recruits are off, he forced the recruit to do an extra training. With the recruit marching, stopped in the same place, the sergeant issued a series of commands \\\"Turn left!\\\" and \\\"Turn right!\\\". For each command, the recruit must rotate about the same point and give a quarter turn in the direction corresponding to the command. For example, if the recruit is initially with his face oriented to the north, after a command \\\"Turn left!\\\" he should stay with his face oriented to the west. If the recruit is initially with his face oriented to the east, after a command \\\"Turn right!\\\" He must have his face oriented to the south. However, during training in which the recruit had initially his face turned to the north, the sergeant issued a series of commands so extensive, and so quickly, that even he was confused and does not know which direction the recruit must have its face turned to after the execution of all the commands. Can you help the sergeant?\",\n    \"id\": 1437,\n    \"input\": \"The input contains several test cases. The first line of a test case contains an integer N indicating the number of commands issued by the sergeant (1 \\u2264 N \\u2264 1000). The second line contains N characters, describing a series of commands issued by the Sergeant. Each command is represented by an letter: 'E' (for \\\"Turn left!\\\") and 'D' (for \\\"Turn right!\\\"). The end of input is indicated by N = 0.\\n\\n                The input must be read from standard input.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Turn Left!\",\n    \"output\": \"For each test case in the input your program must produce one line of output, indicating the direction in which the recruit must have its face turned after performing a series of commands, considering that at the beginning the recruit has its face turned to north . The line should contain a letter between 'N', 'L', 'S' and 'O', representing respectively the directions north, east, south and west.\\n\\n                The output should be written to standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Alessandro de Luna Almeida  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Jo\\u00e3ozinho and his family have just moved in. Before the move, he put all of his books in several numbered boxes. To facilitate the removal of the books, he did an inventory, indicating in which box each book was placed and he kept it\\u00a0 in box number 1.Arriving in his new room, he saw that his parents had kept the boxes in various stacks, arranged in a row, with each stack against the next stack. Jo\\u00e3ozinho is a very systematic boy, so before opening any box, he wants to recover his inventory. Jo\\u00e3ozinho is also a very awkward kid. To take a box from a stack, it needs to be at the top of the stack and at least one of its sides, no matter which, has to be free (ie, have no adjacent box). To do this, Jo\\u00e3ozinho needs to unstack some boxes. As his room is quite large, he always has room to put the removed boxes elsewhere, without moving the stacks that his parents set up. To minimize his effort, Jo\\u00e3ozinho wants you to write a program that, given the positions of the boxes in the stacks, determine how many boxes Jo\\u00e3ozinho needs to unstack to recover his inventory.\",\n    \"id\": 1438,\n    \"input\": \"The input consists of several test cases. The first line of each test case contains two integers N and P, indicating, respectively, the number of boxes and the number of stacks (1 \\u2264 P \\u2264 N \\u2264 1000). The boxes are numbered sequentially from 1 to N. Each of the following lines P describes a stack. Each row contains an integer Qi, indicating how many boxes are in the stack i, followed by a blank space followed by a list of numbers Qi, which are the identifiers of the boxes. The elements of the list are separated by a blank space. All stacks contains at least one box and all the boxes appear exactly once on the input. The boxes in each stack are listed in order, from the bottom to the top of the stack. All boxes have the same shape. The end of input is indicated by N = P = 0. The input must be read from standard input.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Unloading Boxes\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing a single integer: the minimum number of boxes, besides box 1, that Jo\\u00e3ozinho needs to unstack to recover his inventory. The output should be written on the standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido, UNICAMP  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Bora Bora is a simple card game for children, invented in the South Pacific Island of the same name. Two or more players can play, using a deck of standard cards. Cards have the usual ranks: Ace, 2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen and King. Each card has also one of four suits: Clubs, Diamonds, Hearts and Spades.\\n\\n                Players sit on a circle around the table and play by turns. The next player to play may be the one to the left (clockwise direction) or to the right (counter-clockwise direction) of the current player, depending on the cards played, as we will see. At the start, the direction of play is clockwise.\\n\\n                The deck is shuffled and each player is dealt a hand of cards. The remaining of the deck is placed, face down, on the table; this is called the stock pile. Then the first (topmost) card is removed from the stock and placed on the table, face up, starting another pile, called the discard pile.\\n\\n                The objective of the game is for a player to discard all his cards. At each turn, a player discards at most one card. A card can be discarded only if it has the same rank or the same suit as the topmost card on the discard pile. A player discards a card by placing it, face up, in the discard pile (this card becomes the topmost). If a player does not have a suitable card to discard on his turn, he must draw one card from the stock and add it to his hand; if he can discard that card, he does so, otherwise he does nothing else and his turn ends. A player always discards the highest valued card he possibly can. The value of a card is determined first by the card rank and then by the card suit. The rank order is the rank itself (Ace is the lowest, King is the highest), and the suit order is, from lowest to highest, Clubs, Diamonds, Hearts and Spades. Therefore, the highest valued card is the King of Spades and the lowest valued card is the Ace of Clubs. As an example, a Queen of Diamonds has a higher value than a Jack (any suit) but has a lower value than a Queen of Hearts.\\n\\n                Some of the discarded cards affect the play, as follows:\\n\\n                \\n                    When a Queen is discarded, the direction of play is reversed: if the direction is clockwise, it changes to counter-clockwise, and vice-versa;\\n                    When a Seven is discarded, the next player to play must draw two cards from the stock (the number of cards in his hand increases by two), and misses his turn (does not discard any card);\\n                    When an Ace is discarded, the next player to play must draw one card from the stock (the number of cards in his hand increases by one), and misses his turn (does not discard any card);\\n                    When a Jack is discarded, the next player to play misses his turn (does not discard any card).\\n                \\n\\n                Notice that the penalty for the first card in the discard pile (the card draw from the stock at the beginning) is applied to the first player to play. For example, if the first player to play is p and the first card on the discard pile is an Ace, player p draws a card from the stock and does not discard any card on his first turn. Also notice that if the first card is a Queen, the direction of play is reversed to counter-clockwise, but the first player to play remains the same.\\n\\n                The winner is the player who first discards all his cards (the game ends after the winner discards his last card).\\n\\n                Given the description of the shuffled deck and the number of players, write a program to determine who will win the game.\",\n    \"id\": 1439,\n    \"input\": \"The input contains several test cases. The first line of a test case contains three integers P, M and N , separated by single spaces, indicating respectively the number of players (2 \\u2264 P \\u2264 10), the number of cards distributed to each of the players at the beginning of the game (1 \\u2264 M \\u2264 11) and the total number of cards in the shuffled deck (3 \\u2264 N \\u2264 300). Each of the next N lines contains the description of one card. A card is described by one integer X and one character S, separated by one space, representing respectively the card rank and the card suite. Card ranks are mapped to integers from 1 to 13 (Ace is 1, Jack is 11, Queen is 12 and King is 13). Card suits are designated by the suit\\u2019s first letter: \\u2018C\\u2019 (Clubs), \\u2018D\\u2019 (Diamonds), \\u2018H\\u2019 (Hearts) or \\u2018S\\u2019 (Spades).\\n\\n                Players are identified by numbers from 1 to P , and sit on a circle, in clockwise direction, 1, 2 ... P, 1. The first P x M cards of the deck are dealt to the players: the first M cards to the first player (player 1), the next M to the second player (player 2), and so on. After dealing the cards to the players, the next card on the deck \\u2014 the (P x\\u00a0M + 1)-th card \\u2014 is used to start the discard pile, and the remaining cards form the stock. The (P x M + 2)-th card to appear on the input is the topmost card on the stock, and the last card to appear on the input (the N-th card) is the bottommost card of the stock (the last card that can be drawn). Player 1 is always the first to play (even when the card used to start the discard pile is a Queen). All test cases have one winner, and in all test cases the number of cards in the deck is sufficient for playing to the end of the game.\\n\\n                The end of input is indicated by a line containing only three zeros, separated by single spaces.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Bora Bora\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing the number of the player who wins the game.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The University administration plans to build a new dinner hall, to replace the several small (and rather inadequate) dinner halls spread over the campus. To estimate the number of places needed in the new dinner hall, they performed an experiment to measure the maximum total number of clients inside the existing dinner halls at any time. They hired several students as pollers, and positioned one poller at each entrance and each exit of the existing dinner halls. The pollers' task was to note in small cards the time each client entered or exited the hall (one card for each event). In each card they wrote the time, in the format HH:MM:SS, and the associated event (letter 'E' for an entry, letter 'X' for and exit).\\n\\n                The experiment started in the morning, before breakfast, and ended in the evening, after dinner. The pollers had their watches synchronized, and the halls were empty both before and after the experiment (that is, no client was inside a hall before the experiment began, and no client remained in a hall after the experiment ended). The pollers wrote exactly one card for every client who entered a hall and for every client who exited a hall.\\n\\n                After the experiment, the cards were collected and sent to the administration for processing. The task, however, was not as easy as planned, because two problems were detected. Firstly, the cards were bunched together in no particular order and therefore needed sorting; that is fairly easy, but time-consuming to do by hand. But what is worse is that, although all cards had a valid time, some pollers forgot to write the letter specifying the event. The University administration decided they needed help from an expert!\\n\\n                Given a set of cards with times and the indication of the event (the indication of the event may be missing), write a program to determine the maximum number of clients that could possibly had been inside the dinner halls in a given instant of time.\",\n    \"id\": 1440,\n    \"input\": \"The input contains several test cases. The first line of a test case contains one integer N indicating the number of cards collected in the experiment (2 \\u2264 N \\u2264 64800). Each of the next N lines contains the information written in a card, consisting of a time specification, followed by a single space, followed by an event specification. A time specification has the format HH : MM : SS, where HH represents hours (06 \\u2264 HH \\u2264 23), MM represents minutes (00 \\u2264 MM \\u2264 59) and SS represents seconds (00 \\u2264 SS \\u2264 59). Within a test case, no two cards have the same time. An event specification is a single character: uppercase 'E' for entry, uppercase 'X' for exit and '?' for unknown. Information may be missing, but the information given is always correct. That is, the times noted in all cards are valid. Also, if a card describes an entry, then a client did enter a hall at the informed time; if a card describes an exit, then a client did leave a hall at the informed time; and if a card describes an unknown event, then a client did enter or leave a hall at the informed time.\\n\\n                The last test case is followed by a line containing a single zero.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Dinner Hall\",\n    \"output\": \"For each test case in the input, your program must print a single line, containing one single integer, the maximum total number of clients that could have been inside the dinner halls in a given instant of time.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ines Kereki  Uruguay\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Consider the sequence formed by starting from a positive integer h0 and iterating with n = 1, 2, . . . the following definition until hn = 1:\\n\\n                hn\\u200b = { \\u00bd \\u00d7 hn-1 if hn-1 is even;\\n\\n                hn\\u200b = { 3 \\u00d7 hn-1 + 1 if hn-1 is odd.\\n\\n                For instance, if we start with h0 = 5 the following sequence is generated: 5, 16, 8, 4, 2, 1. If we start with h0 = 11, the sequence generated is 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1.\\n\\n                As you can see from these examples, the numbers go up and down, but eventually comes down to end in 1 (at least for all numbers that have ever been tried). These sequences are called Hailstone sequences because they are similar to the formation of hailstones, which get carried upward by the winds over and over again before they finally descend to the ground.\\n\\n                In this problem, given a positive integer, your task is to compute the highest number in the Hailstone sequence which starts with the given number.\",\n    \"id\": 1441,\n    \"input\": \"Each test case is described using a single line. The line contains an integer H representing the starting value to build the sequence (1 \\u2264 H \\u2264 500).\\n                The last test case is followed by a line containing one zero.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Hailstone Sequences\",\n    \"output\": \"For each test case output a line with an integer representing the highest number in the Hailstone sequence that starts with the given input value.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Hermann Negri, UDESC  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Marcos is a computer scientist who works in a transportation company, analyzing data from cargo trucks trips of the company and optimizing vehicle notes. Due to constants traffics jams involving the company vehicles, the company designed a new task to Marcos: compute the distance traveled by each vehicle in state of intense traffic jam. Marcos is very busy with other tasks at the company, and designed this task of calculating the traveled distance on trips to you, the new company trainee.\\n\\n                In a more specific way, the traveled distance of each trip must be calculated from the acceleration data during the trip. This data contains the time range that says when the driver stepped on the accelerator (constant acceleration of 1m/s\\u00b2, to a maximum speed of 10m/s), assuming that when the vehicle is not accelerating the driver will be stepping on the brake (stopped vehicle or braking with a constant slowdown of 2m/s\\u00b2). The total traveled distance of the trip must be calculated from these time ranges, assuming that the vehicle is initially stopped.\",\n    \"id\": 1443,\n    \"input\": \"The input is composed by several test cases. Each case corresponds to a trip and is started with a line contend an integer N, that says the amount of acceleration ranges of the vehicle during the trip. The end of input is determined by N = 0, that must not be processed.\\n\\n                Each of the next N lines contains two integers, a e b, designating the range time (in seconds) where the driver is with his foot on the accelerator (accelerated from the time t = a to t = b). In the first test case below (first trip) the driver stepped on the accelerator from the time t = 0s to t = 5s, stepped on the brake between t = 5s e t = 8s, accelerated from t = 8s to t = 15s, braked between t = 16s and t = 17s and accelerated to t = 50s. The traveled distance must be computed from t = 0s to the final second of the last acceleration range, in this case, from t = 0s to t = 50s.\\n\\n                Limits: 0 \\u2264\\u00a0N \\u2264\\u00a01000, being that each trip takes at most 30h.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Traffic Jam\",\n    \"output\": \"The program must print, for each trip, one line containing the traveled distance in meters (with two digits after decimal point).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Hermann Negri, UDESC  Brasil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Pirabeiraba is a district of Joinville, where german settlers installed themselves at the start of the 20th century. Annually there is the cassava party, a tuber that is also known as macaxeira in the brazilian northeast region. To accompany the cassava, there's nothing like a traditional germanic dish: the stuffed drake! For the culinary experts, there is a magic in this combination: drake with cassava. However, to kill the drake, you must capture him while his blood is very warm. For that, the drake must be tired. People say that his warm blood is synonymous with fertility, in other words: an aphrodisiac! But that's for another story.\\n\\nIn this game of chasing the drake, an idea came of tiring them with a race between themselves. The physical space of the Society Rio da Prata is limited, because of that they built only three lanes to do these races. The races are made with groups of two and three drakes. The drakes who gets the first places on the races are then arranged again in groups of 2 or 3 for another round. This goes on until there's only one drake left, the champion, which escapes from the saucepan (for now) as a prize. All the surviving drakes must race in the round, that is, if it's not possible to split all the drakes in groups of three, some groups of two must be formed in order to minimize the number of races. Examples are seen in the Figure 1.\\n\\n\\n\\nFigure 1: Examples: competition with 4, 5 and 6 drakes.\\n\\nThe losing drakes will be the first to go to the saucepan. You were invited to eat drake with cassava, but in exchange you must write a program that calculates the number of races that must be made to determinate the champion drake.\",\n    \"id\": 1444,\n    \"input\": \"The program input is composed by various test cases. Each test case is composed by a line containing an integer n, where 0 \\u2264 n \\u2264 100,000, and where n = 0 is used solely to mark the end of the input, which must be disconsidered.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Drakes' Racing\",\n    \"output\": \"Your program must print in the standard output a line per test case, containing the number of races needed to choose the champion drake.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Lucas Hermann Negri, UDESC  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The drizzle that fell last week made Professor Claudius Virux get homesick of his time as a student of UFCG at Campina Grande - Pb . There, the winter is a period marked by little rains (same as those at Joinville),\\u00a0with cold nights.\\n\\n                At the university, the students's parties, occurring in almost every Fridays and Saturdays, were big deals. The most interesting is that there were present the most unusual people, poets, singers, teachers, and other artists as well, and of course the students. There was always a reason to make a party, if there wasn't , the reason was to celebrate the tough week at the university.\\n\\n                The most curious was the system of how the host invited his friends. The owner of the house invited his immediate friends, who also invited others, and so on. On the day of the party, the host wanted to know his/her new friends in order to see how the chain of invitation had propagated.\\n\\n                To control the number and how the guests came to the party, the host asked everyone who arrived, to write his/her name, and the name of whom had invited him/her.\\n\\n                Your task is to count how many guests are present at each party, given only the immediate relationship between a guest and a friend.\",\n    \"id\": 1445,\n    \"input\": \"For each party there will be a number of relationships between the guests. This is a value N written before the relationships, which follows in pairs of type (x, y) = (y, x). Where x is the name of a friend and y is his guest. The values \\u200b\\u200bof x and y are numbered from 1 to 1000, and the host number is always 1.\\n\\n                When N is equal to 0, this indicates the end of the party! The format of the input follow the standards below.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Who's Going To The Party?\",\n    \"output\": \"For each set of relationships, print the total number of participants at the party, including the host. The total of each party per line. On input 0 don't print anything.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Maratona de Programacao IME-USP  Brasil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Mickayil was in school studying set theory. Schools in Prague are quite severe. The teacher taught the students how to draw Venn diagrams to three sets, and asked the students to work with diagrams. To impress the teacher with nicely drawn diagrams, Mickayil decided that he would make colorful diagrams. To achieve this goal, he cut out three convex figures using thin colored papers. Mickayil realized that, by overlapping pictures, the intersections could generate new colors.\\n\\n                Thus, we have three convex pictures over a plain surface, each picture with a color. When pictures are overlapped, the color we see is a mixture of the pictures' colors. We can represent the colors by integers between 0 and 15. The mix of colors is done by summing the values of the corresponding colors modulo 16. We want to know what we see when looking at the Mickayil's Venn Diagram, i.e., what colors and their frequences. We will measure this by the visible area of each color.\",\n    \"id\": 1446,\n    \"input\": \"Several instances are given. Each instance consists of three figures. These figures are given one per line, in the format\\n\\n                ni ci xi1 yi1 xi2 yi2 ... xij yij ... xin yin\\u200b\\n\\n                for i = 1, 2, 3, where 0 \\u2264 ni \\u2264 200 is the number of points in ith picture's border, ci is the ith picture's color and the pairs (xij , yij) represent i's border's points counterclockwise, given by integers. The input ends when n1 = 0 (note that this instance should not be processed).\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Venn Diagram?\",\n    \"output\": \"You should print a header indicating the number of the instance that is being treated\\u00a0 (Instancia h) and in the following lines the color pair and the total visible area of that color. These lines should be sorted by areas, in a decreasing order. In case of draws, print the increasing order of color. In order to simplify the presentation, show the values of the areas rounded to two decimal places. You must print a blank line after each Instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"X Maratona de Programa\\u00e7\\u00e3o IME-USP, 2006  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"A group of friends decided to go to Germany to cheer for the Brazilian Team in its glorious journey toward \\u2018hexa\\u2019. As the tickets and the stay are very expensive, each one brought the money they thought was sufficient to spend the month with confort e return home with no problem.\\n\\n                But, after the nice campaign of Brazil, the group was forced to spend the money they had saved with the famous German beer. The consequences were terrible. After drinking too much, all of them got caught sleeping on the streets and them all received heavy fines. Besides, all of them lost their tickets to get back. Suddenly, they find out they need to get back home spending the least possible amount o money.\\n\\n                Analyzing the available routes in the airport, the friends noticed that in all the routes the amount of available sits is always the same. But the price between one city and another one varies a lot. Scared with the possibility of not founding enough sits on the planes so all of them could get back, and worried about the money they need to spend, the friends asked for your help.\",\n    \"id\": 1447,\n    \"input\": \"The input contains several test cases. Each test case starts with 2 positive integers N (2 \\u2264 N \\u2264 100) and M (1 \\u2264 M \\u2264 5000), where N is the number of cities that belong to M considered routes. The friends want to go from city 1 to city N.\\n\\n                The next M lines contains triple integers A, B, and C describing the plane route (A and B) and the price of the ticket per person (C). The values of A and B are between 1 and N. The routes are bidirectional (that is, there's a flight from A to B and from B to A with price C) and there will be only one route between two cities. In the next line there are the integers, D and K, where D is the number of friends and K is the number of free sits on each flight. Each route can be utilized only once.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Back to the Future\",\n    \"output\": \"For each test, print the line \\\"Instancia k\\\", where k is the number of the current test case. Besides, print the least amount of money the friends will pay to get back to Brazil (1015). If there's no way to pick up a set of flights that will take all home, print \\\"impossivel\\\" (impossible).\\n                \\n                Print a blank line after each test.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es, USP  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Every kid certainly played Chinese Whispers at least once with other kids. It is a game in which one person whispers a message to another, which is passed through a line of people until the last player announces the message to the entire group. Little John invented a variation of this game.\\n\\n                In this game, there are two teams and a judge. In each team, the kids play as in the original game: each kid whispers the message to another, and the last kid announces the message he/she heard. The initial message is told to the first kid of each team by the judge. This message is the same for both teams. Also, this message contains n characters (letters, spaces, punctuation, etc. included). The length of the message is known by all the kids, thus the messages announced by the last kids of each team also have n characters.\\n\\n                The team that announces the most similar message to the original one, wins. The \\\"similarity\\\" of a message is equal to the number of positions in which the character in the original message and the one in the announced message is the same. If this number is equal for both teams, find the first position for which one team announced the correct character, and the other didn't. If there's still a tie, the game result is a draw.\\n\\n                For example, if the initial message was \\\"O rato roeu a roupa do rei.\\\", the first team announced \\\"O ator morreu, garoupa rei.\\\", and the second team announced \\\"O pato moeu garoupa dorlei.\\\", the second teams wins, because there are 21 positions in which the character is the same for the second team, and only 9 positions for the first one.\\n\\n                \\n\\n                Like the ICPC judges, the judges of this game are lazy, too. They asked you to write a program that decides the winning team.\",\n    \"id\": 1448,\n    \"input\": \"The first line of the input contains an integer t, 1\\u00a0\\u2264 t\\u00a0\\u2264 1000, the number of instances that your program must process.\\n\\n                Each instance is described by 3 lines. The first line contains the initial message. The second line contains the message announced by the first team, and the third line contains the message announced by the second team. All the messages will have at most 100 characters, and the 3 messages will have the same length.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Chinese Whispers\",\n    \"output\": \"For each instance, print \\\"Instancia k\\\", where k is the instance number. In the following line, print \\\"time W\\\" (Portuguese for \\\"team W\\\"), where W = 1 if the first team wins, or W = 2 if the second team wins. If the game result is a draw, print \\\"empate\\\" (Portuguese for \\\"draw\\\") instead. Print a blank line after each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es, USP  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"In 1985 premiered the series Kyojuu Tokusou Juspion (Special Megabeast Investigator Juspion) in the Japanese TV. The series came to Brazil a few years later with the title \\\"O Fant\\u00e1stico Jaspion\\\" (The Fantastic Jaspion), and along with it the fantasy of a space police came to millions of brazilian children. After school the children came back running in the streets (without checking for cars), turned on the TV and dove into the courage, role model, and unquestionable thirst for justice of the Fantastic Jaspion. The trade of comics and the fights for trading cards in school's recess  were hitting historical marks. Until then, such feeling had only been stimulated by Chaves (El Chavo) and his companions! Given this intergalactic fever, the inevitable happened. The producers of Jaspion won the Nobel Peace Prize! That's right! The producers won a Nobel Prize. The stories of the great Jaspion were everywhere, and the children had the most beautiful example to follow. World peace was guaranteed. We no longer needed to fear the horrible Satan Gos!\\n                In Brazil there was a child who loved Jaspion's stories! Antonio Capote Melhoran\\u00e7a Valente Junior, affectionately nicknamed ACM, was a boy from the south of S\\u00e3o Paulo who loved to sing the songs of the great hero. He was so fanatic that he bought a Japanese-Portuguese dictionary and started the hard work of translation. However, the work was unfinished! Some parts of the song still need to be translated. Right now you must be wondering: what is my task in this fabulous problem? OK! Before speaking about your task, invite your team partner to dive with you into the outcome of the story. We need to talk a bit more about ACM. He graduated in Computer Science and works today in the same office as you. You work as a programmer next to this guy! Since we know you like him very much, we are certain you will accept the following task: given a Japanese-Portuguese dictionary and a song lyric, write a program that prints the translated lyric.\",\n    \"id\": 1449,\n    \"input\": \"The input consists of several instances. The first line of input contains an integer T indicating the number of instances.\\n                The first line of each instance contains two integers M and N (1 \\u2264 M \\u2264 1000000, 1 \\u2264 N \\u2264 1000), which represent the number of words in the dictionary and the number of lines in the song lyric, respectively.\\n                The next M pairs of lines contain the translations: the first line of each pair has the word in Japanese, and the second line has the translation to Portuguese (which can have one or more words). All words use lowercase characters only. Each word in Japanese appears only once in each instance.\\n                The next N lines contain the song lyric. Each line of the lyric is a space separated list of words (all consisting of lowercase characters only). Some lines may be empty, but none has spaces in the beginning or in the end.\\n                No line has more than 80 letters.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Fantastic Jaspion\",\n    \"output\": \"For each instance print the N translated lines. The words that are not in the dictionary must be printed as they appear in the input. Print a blank line after each translation, including the last one.\\n                No line in the output has more than 80 letters.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Wanderley Guimar\\u00e3es, IME-USP  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Ramesses II was the most prestigious of all egyptian pharaohs. He reigned between 1279 BC\\u00a0- 1213 BC, and built various temples, including the famous Nubian temples. The most famous one is a rock sculpture, in Abu Simpel, close to the second Nile waterfall, where the very same pharaoh is reproduced. With Nefertari and other wives he probably had more than 6 childs, with whom he liked to play a game called \\\"highest pyramid\\\". The game was played as follows: the kids received small parallelepipeds of different dimensions (which could be rotated), and with those cubes they had to build the highest pyramid they could. To build it they couldn't place a block on top of a smaller one, that is, if block A is on top of the block B, both the width and depth of A should be smaller than those of B.\\n\\n                Amenhotep, his first-born son, was very good on this game, and could build pyramids that are much taller than his father's. So Ramesses decided to call the great mathematic of the court, Narmer, to find the highest pyramid possible to build for each set of parallelepipeds, that is, the highest pyramid possible to build.\",\n    \"id\": 1450,\n    \"input\": \"The input is composed of several test cases. The first line of the input contains an integer T indicating the number of test cases.\\n\\n                The first line of each instance contains an integer N, where 1 \\u2264 N \\u2264 15, indicating the number of blocks. Each one of the N following lines will have three integers X, Y and Z that indicates the measurements of the block.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Ramesses' Games\",\n    \"output\": \"For each instance print a line containing the height of the highest pyramid possible.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"You're typing a long text with a broken keyboard. Well it's not so badly broken. The only problem with the keyboard is that sometimes the \\\"home\\\" key or the \\\"end\\\" key gets automatically pressed (internally). You're not aware of this issue, since you're focusing on the text and did not even turn on the monitor! After you finished typing, you can see a text on the screen (if you turn on the monitor). In Chinese, we can call it Beiju. Your task is to find the Beiju text.\",\n    \"id\": 1451,\n    \"input\": \"There are several test cases. Each test case is a single line containing at least one and at most 100,000 letters, underscores and two special characters '[' and ']'. '[' means the \\\"Home\\\" key is pressed internally, and ']' means the \\\"End\\\" key is pressed internally. The input is terminated by end-of-file (EOF). The size of input file does not exceed 5MB.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Broken Keyboard\",\n    \"output\": \"For each case, print the Beiju text on the screen.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Hermann Negri, UDESC  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"The Gloud Computing is coming to Joinville's region. They're known for providing apps on the internet, more specifically a business model based on cloud computing.\\n\\n                In order to select the new employers of the company, they contacted UDESC marathon committee, so they could pass a problem to our marathoners. Those who solve it, beside de balloon, can fill a personnel file with more stars.\\n\\n                Basically, Gloud Computing has apps spread on their servers on several of places of the world. Those servers are specialized on a list of apps to be used by the users connected on the clouds.\\n\\n                For example, the server in Joinville can provide the application A, while the one in Pasadena, California provides the applications A, B , C and the server in Pomerode provides the application C.\\n\\n                We have a set of servers and each one comes with a set of applications to be provided to a set of users. Each user can be connected to one or more servers depending on its demand, as illustrated on the Figure 1.\\n\\n                \\n\\n                Figure 1: 3 servers, 2 users and 4 connections.\\n\\n                It will be given to you data about these two sets, servers and users' demand, and you should return the total amount of connections between clients and servers. The connections are made so that the redundancy is maximized. For instance, if a client wants to utilize the applications B and C, he will connect to all servers that provide at least the application B and all that provides at least C. Multiple connections between a pair of clients and servers count as only one. It can happen that a client requires an inexistent application, just like a server provide a non required application.\",\n    \"id\": 1452,\n    \"input\": \"The input is composed by several test cases. Each test case starts by two Integers N and M (0 \\u2264 N, M \\u2264 200), that correspond to the number of servers and clients. Each one of next N lines, contains a value Qi (0 \\u2264 Qi \\u2264 100) correspondent to the number of applications provided by the i-th server, followed by a word Qi (separated by blank spaces) related to the name of the provided app. After the server\\u2019s description, follow M lines, each one containing a value Pj (0 \\u2264 Pj \\u2264 100) corresponding to the number of requested applications by the j-th client, followed by Pj word (separated by blank spaces) related to the name of the required applications. The input ends with N = M = 0. All application\\u2019s name have between 1 and 20 characters.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Gloud Computing\",\n    \"output\": \"For each test case your program must print the total sum of connections between clients and servers in a line, disregarding multiple connections between the same pair of client and server.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido, UNICAMP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Although word square games go back to ancient times \\u2013 a word square was found in the Roman ruins of Pompeii \\u2013 it was only in 1913 that the Sunday New York World printed a puzzle called a \\u2019word-cross\\u2019 invented by Arthur Wynne, a journalist who had the job of devising a weekly puzzle for the comic section of the newspaper. The puzzle was an immediate success, became a weekly feature, and nowadays is probably the most popular and widespread word game in the world.\\n\\n                (For those weird people who do not know it, crossword is a puzzle in which a player must fill in words indicated by verbal clues down and across a checkered pattern so as to fit wherever they cross.)\\n\\n                A crossword configuration is the figure formed by empty squares and black squares in a puzzle. Over the first years several types of shapes and figures (diamond, circle, square) were tried before the familiar rectangular shape with a few black squares (used to separate words) was universally adopted. For this problem, we will define that a configuration for a puzzle with N lines and M columns is valid only if\\n\\n                \\n                    each column contains exactly one black square; and\\n                    black squares are not in adjacent columns in the same line.\\n                \\n\\n                \\n\\n                Invalid configuration (on the left) and valid configuration (on the right).\\n\\n                Given a list of lengths of words, all of which must be put in the down (vertical) direction, your task is to find a valid configuration for a puzzle with N lines, M columns and M black squares.\",\n    \"id\": 1453,\n    \"input\": \"The input contains several test cases. The first line of a test case contains three integers N, M and K, indicating respectively the number of lines in the puzzle (2 \\u2264 N \\u2264 2000) the number of columns in the puzzle (1 \\u2264 M \\u2264 2000) and the number of lengths of words (1 \\u2264 K \\u2264 4000). The second line contains K integers Wk, representing the lengths of words that must be put in the down (vertical) direction (1 \\u2264 Wk \\u2264 N-1). The end of input is indicated by N = M = K = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Crossword With No Words\",\n    \"output\": \"For each test case in the input your program must produce an answer. The first line of an answer must contain a test case identifier, in the form \\u2019#i\\u2019 where i starts from 1 and is incremented for every test case. Then, if there is a valid configuration for the puzzle, your program must produce M lines of output, describing one such configuration. Each line must contain two integers L and C, separated by a blank space, indicating the position of a black square (L indicates a line number and C indicates a column number, with 1 \\u2264 L \\u2264 N and 1 \\u2264 C \\u2264 M). If more than one valid configuration is possible, print any one of those. If a valid configuration for the puzzle is not possible, your program must output as answer a single line containing the value 0.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"VIII Maratona de Programa\\u00e7\\u00e3o IME-USP  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"As you may already know, the bicycle is one of the most popular means of transportation in China. Almost all Chinese have one, and they use it for work, recreation, and other activities.After many years riding, Mr. Lee no longer have the same willingness to face the various ascents of the city where he lives. And the city where Mr. Lee lives is extremely mountainous. For sentimental reasons, he did not want to move to a flat city. He decided then to try to avoid high altitudes in his paths even if he had to ride a little more.Mr. Lee obtained with the Chinese topographical service, a collection of maps of his town, in every street in these maps it is possible to see the highest altitude found when traveling over it. All he needs to do now is to determine routes that minimize the time traveled between pairs (source, destination).Knowing that you plan to visit the city in which he lives next year, Mr. Lee asked for your help. In a first step, he wants you to implement a program that receives topographic maps of the city and a collection of pairs (source, destination). For each pair, your program should print the maximum height found on a route between source and destination. Remember that routes should minimize such heights. The routes themselves, will be determined in a second step (when you come to China to visit him).Since the bicycle is used for transportation, you can consider that all the streets are two-way. Do not delay, because Mr. Lee is counting on you. :-)\",\n    \"id\": 1454,\n    \"input\": \"Your program must be prepared to work with several maps, called instances. Each instance has the following structure.In the first row are given two integers n (0 \\u2264 n \\u2264 100) in (0 \\u2264 m \\u2264 4950) which represent, respectively, the numbers of intersections and streets. For clarity, the intersections are numbered from 1 to n, inclusive; every street begins and ends at an intersection, and there are no intersections off the ends of a street.\\n\\n                In the next m lines it is provided three integers i and j (1 \\u2264 i, j \\u2264 n) indicating the existence of a street between intersections i and j and h representing the highest altitude found when the street is traveled over. These integers are separated by blank spaces.\\n\\n                On the next line, it is given an integer k (1 \\u2264 k \\u2264 50) that represents the number of pairs (source, destination) that will be specified in the next k lines. Each pair consists of two integers i and j as described above. That is, the source and the destination are intersections of two streets, and are also separated by whitespace.\\n\\n                Values n = m = 0 indicates the end of instances and should not be processed.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"The Country of Bicycles\",\n    \"output\": \"For each instance solved, you should print a handle Instancia h where h is an integer, sequentially increasing from 1. In the next k lines, you must print the greatest heights found on routes between the k pairs (source, destination) provided, one value per line, in the order they appeared in the input.\\n\\n                A blank line must be printed after each instance.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"X Maratona de Programa\\u00e7\\u00e3o IME-USP  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"As we all know, it hasn't been decided the local of the next final of ICPC. This time, Prof. Poucher, tried to pick a place that, somehow, would be the closest for the various participants.\\n\\n                To solve that out, in a big map he pointed out the location of the many possible participants of the finals. In possession of this data, Prof. Poucher wishes to choose the closest place as possible, computing the center and the radius of the smallest circunference that involves all the cities pointed out in the map (a city is covered if it is in the region or on the border of the circuference).\",\n    \"id\": 1455,\n    \"input\": \"This problem is composed by several instances. The first line is composed by one integer n(2 \\u2264 n \\u2264 100), and indicates the numbers of the cities. The next n lines contain the description of the position of the cities from their coordinates x and y in the plan. the coordinates are real numbers. The problem must end the execution when 0 is the value of n given in the input.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"ICPC Finals\",\n    \"output\": \"For each integer, print a line saying integer k, where k is the number of the current instance. On the second line, print the coordinate x and the coordinate y of the center and of the radium of the circunference. After each instance, your program must print a blank line.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"X Maratona de Programa\\u00e7\\u00e3o IME-USP  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Programming languages, soccer teams and religion are not discussed. Each person has their favorites and do not admit that the other is better (forgive me the Corinthians, Palmeiras and S\\u00e3o Paulo supporters). A group of researchers (who had nothing to do) decided to write an ideal'' programming language (ideal for who, pale face?): The Brainfuck. Brainfuck is a programming language that works like a Turing machine. This machine has components such as a vector of 30000 bytes, indexed 0-29999, and a pointer that holds such a position vector. At each step, the machine performs in accordance with an instruction byte stored in the location indicated by the pointer vector. When this byte is equal to zero, the execution is terminated. The set of valid instructions of the language is the following:\\n\\n                \\n                    \\n                        \\n                            Instruction\\n                            Description\\n                        \\n                    \\n                    \\n                        \\n                            > \\n                            Increments the pointer.\\n                        \\n                        \\n                            < \\n                            Decrements the pointer.\\n                        \\n                        \\n                            + \\n                            Increments the byte at the position indicated by the pointer.\\n                        \\n                        \\n                            - \\n                            Decrements the byte at the position indicated by the pointer.\\n                        \\n                        \\n                            . \\n                            Print the value of the byte at the position indicated by the pointer.\\n                        \\n                        \\n                            , \\n                            Reads a byte and stores the position indicated by the pointer. If there is nothing to be read (input ended), store zero.\\n                        \\n                        \\n                            [ \\n                            Start the loop: Executes the delimited code until the byte at the position indicated by the pointer is equal to zero.\\n                        \\n                        \\n                            ]\\n                            End of loop.\\n                        \\n                        \\n                            # \\n                            Print the values of the first 10 positions of the vector.\\n                        \\n                    \\n                \\n\\n                The pointer always starts with value 0, as all the other positions in the vector. When describing programs in brainfuck language, characters other than those described above are ignored.\",\n    \"id\": 1456,\n    \"input\": \"The input contains several instances. The number of instances is given in the first line of the input. Each instance starts with a blank line. The next line contains a string of printed characters (in other words, except whitespace and tab), which will contain the input for the program. That is, the read commands are performed in this chain. All the input for the program is contained on a single line. Finally, the third row contains the description of the program. As the second line, this also does not contains white characters and is entirely contained in a single line (the separation made in the second example was to avoid the line overflow). Both the second and the third row are between 1 and 100000 characters.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Brainfuck\",\n    \"output\": \"For each instance, you should print \\\"Instancia k\\\", where k is the number of the current instance. On the next line you should print the output of the code provided in the input. After each instance, your program should print a blank line.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"XIV Maratona de Programa\\u00e7\\u00e3o IME-USP  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Every Computer Scientist worth his salt knows the book \\\"The Hitchhiker's Guide to the Galaxy\\\" and knows the answer to the fundamental question about life, the universe and everything. But what few know is that the story of Douglas Adams is based on an Egyptian legend, of an oracle located in Eskendereyya (Alexandria). Alexandria today is the largest city of Egypt, with more than 4 million inhabitants. It is in the Nile Delta, and stretches for 32km along the Mediterranean coast. In the past, the city founded in 331 BC by Alexander the Great, was one of the main cities in the world and there was the Lighthouse of Alexandria (one of the 7 Wonders of the Ancient World), the Library of Alexandria (the largest in the ancient world) and other fantastic works. The legend also says that there was the great oracle of Alexandria. The townspeople delivered the oracle small tickets with numbers noted, and received back a number, that would be the answer to a fundamental question of the universe related to the two given numbers.\\n\\n                In his treatise of 227 AD Cleomenes of Naucratis (who became administrator of Alexandria when Alexander departed for his conquests) reports some results of the oracle:\\n\\n                \\n                    Given 8 and\\u00a01 the oracle returned 40320;\\n                    Given\\u00a010 and 3, returned 280;\\n                    Given\\u00a04 and 2, returned 8;\\n                    Given\\u00a021 and\\u00a019, returned 42.\\n                \\n\\n                Modern studies realized that what the oracle returned was nothing more than a generalization of the factorial of an integer. As we know,\\n\\n                N! = N x (N-1) x ... x 1.\\n\\n                What the oracle returned for the data N and K, was the K-factor of N, in other words,\\n\\n                N x (N-K) x (N-2K) x (N-3K) x ...,\\n\\n                in which the product was made while the difference is greater than or equal to 1. We can represent the K-factor of a number for him followed by K exclamations:\\n\\n                \\n                    8! = 40320;\\n                    10!!! = 280;\\n                    4!! = 8;\\n                    21!!!!!!!!!!!!!!!!!!! = 42\\n                \\n\\n                They say that when reading about the legend of oracle Eskendereyya, Douglas Adams got his inspiration for his work. Also, in Egypt is the inspiration of the restaurant at the end of the universe, but that's another story ...\\n\\n                Given the integers N and K your task is  determine K-factor of N.\",\n    \"id\": 1457,\n    \"input\": \"The input is composed of several instances. The first line of input contains an integer T indicating the number of instances.\\n\\n                The first (and only) row of each instance contains an integer N followed by K points exclamation, where 1 \\u2264 N \\u2264 100 and 1 \\u2264 K \\u2264 20.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Oracle of Alexandria\",\n    \"output\": \"For each instance print a line containing the K-factor of N.\\n\\n                It is guaranteed that no instance in the input has a result greater than 1018.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"The Just Crazy Cellphone, a renowned company in the field of mobile telephony promotes a championship of text messages every year. In this competition, the winner is who type faster a given message. The oficial equipment of the competition, of mandatory use, has a simple keyboard, similar to the cellphone you probably will have in your pocket if they were not prohibited during Programming Marathons. The keyboard has the following layout:\\n\\n                \\u200b\\n\\n                As it is only allowed to use the thumb to press the keys, all of them were made in a square format with a side of 1 centimeter, without spaces between two adjacent keys. The keys 2 to 9 are used to type the letters 'a' to 'z', and they work like any other cellphone: if we want one of the associated letters of that key, we must press that key the same number of the position of the letter. For example, pressing the key 3 once, we get 'd'. If we press it again, we get 'e' and again we get 'f'. If we continuing pressing this same key, we have the number '3' and then restart in 'd'. The key 0 is used to insert spaces in the message; the keys 1 and * are not used in this competition.\\n\\n                In the case of two consecutive letters that are formed by the same key, it will be necessary to use the key #. The function of this key is separate the pressing sequences of two letters of same key. For example, to write the word \\\"cake\\\", the sequence of tightening keys should be: 2, 2, 2, #, 2, 5, 5, 3, 3.\\n\\n                To make things more interesting, the organization had decided that in this year the message must be written in free fall: the competitors jump from a plane with the cellphone in your hands and then types the message; a sofisticated computer system will open the parachute automatically when the message is totaly typed without mistakes. However, this modification in the rules has introduced a new difficulty: to avoid the loss of the cellphone during the fall, it is necessary use one thumb to hold the equipement while the other thumb presses a key or it's moved, which implies that one of the thumbs will be kept fixed.\\n\\n                To satisfy the curiosity of the public, you were hired to make a computer programm that, given a message with up to 140 characters, tells the minimum time necessary for one competitor to type it on the cellphone. Supose that this competitor can move his thumbs in the incredible velocity of 30 centimeters per second, takes to 2 tenths of second to press one key, starts the free fall with the left thumb under the key 4, the right thumb under the key 6 and always press the keys perfectly in the center.\",\n    \"id\": 1458,\n    \"input\": \"The input contains many test cases. Each test case is composed by a message, a string containing from 1 to 140 characters ('a'-'z' ou ' '), inclusive. None message begins or ends with spaces and neither contains accents or two consecutive spaces. The end of input is indicated by the end of file (EOF).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"SMS Championship\",\n    \"output\": \"For each test case, print one line containing the time, in seconds, that our ideal competitor will take to type the given message. Use two decimals to present the answer.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Daniel is taking a Computacional Vision course and decided to reproduce an interesting work that he saw at class: he took some photos of a same scene, varying just the focus, for later to combine them in just one photo, in which all the objects in scene are clear together. For that, he needs that each object seem clearly in at least one photo.\\n                \\n                Daniel knows that for each object, there is a closed interval of focus plans in which that object stays clearly visible. For example, in the picture below, (i), (ii) and (iii) are tree photos of the same scene, each one taken with a different focus; (iv) is the combined image generated by Daniel.\\n\\n                \\n\\n                As the memory card of Daniel's camera has a small capacity, he asked for your help. Given the intervals of focus of all the objects in the scene that he pretends to photograph, determine the minimum number of photos that he should take so that each object stays clear in at least one of the pictures.\",\n    \"id\": 1459,\n    \"input\": \"The input consists in several case tests. The first line of each test case contains one integer N (1 \\u2264 N \\u2264 106 ) that indicates the number of objects in the scene. Each one of the N next lines contains two integers, A and B (1 \\u2264 A \\u2264 B \\u2264 109), that indicates the extremes of the focus interval of each object.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Focus\",\n    \"output\": \"For each test case, you should print one line with a integer that indicates the minimum number of photos that Daniel have to take.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In Quadradonia, all rural properties are square, all have the same area, all are perfectly flat and all have the sides aligned to the North-South and West-East axes.\\n\\n                Since properties are flat, the hills in Quadradonia look like a series of huge stairs' steps, with different heights. In a certain mountain, an interesting situation occurs in a rectangular area of N x M properties. Starting from anywhere within the region, traversing it in the West to East direction, the properties have non-descending heights. Similarly, traversing that region in the North to South direction, starting from anywhere, the properties have also non-descending heights.\\n\\n                A large wine company in Quadradonia wants to rent some properties from that region to grow wine grapes. The company is interested in some special varieties of wine grapes, which are productive only if grown in properties whose heights are within a certain interval. That is, the company is interested in renting properties whose heights are equal to or higher than a given altitude L, and equal to or lower than a given altitude U. To make it easier for harvesting, the rented properties must form a contiguous area. And since everyone in Quadradonia likes squares, the area to be rented must have the shape of a square.\\n\\n                The company has not yet decided which variety of grapes it will grow, and therefore it has a list of queries involving intervals, one for each grape variety. The figure below shows an area of interest of dimensions 4 x 5 (in number of properties) with examples of areas the company could rent to grow grapes in heights within the intervals given in the picture.\\n\\n                \\u200b\\n\\n                You must write a program that, given the description of the rectangular area of interest in the mountain, and a list of queries containing height intervals, determines, for each query, the largest side, in number of properties, of a contiguous square area with heights within the specified interval.\",\n    \"id\": 1460,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N and M, separated by a single space, representing respectively the number of properties in the North-South direction (1 \\u2264 N \\u2264 500) and the number of properties in the West-East direction (1 \\u2264 M \\u2264 500) of the region of interest. Each of the next N lines contains M integers Hi, j, separated by single spaces, indicating the heights of the properties in the region of interest ( 0 \\u2264 Hi, j \\u2264 105, for 1 \\u2264 i \\u2264 N and 1 \\u2264 j \\u2264 M; also, Hi-1, j \\u2264 Hi, j and Hi, j-1 \\u2264 Hi, j). The next line contains an integer Q indicating the number of queries (1 \\u2264 Q \\u2264 104). Each of the next Q lines describes a query, and contains two integers L and U, separated by a single space, indicating one interval of heights (0 \\u2264 L \\u2264 U \\u2264 105). The heights of properties to be rented must be greater than or equal to L and less than or equal to U.\\n\\n                The last test case is followed by a line containing two zeros separated by a single space.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Grapevine\",\n    \"output\": \"For each test case in the input your program must print Q + 1 lines. Each of the first Q lines must contain a single integer, indicating the largest side, in number of properties, of a contiguous square area with heights within the interval specified in the respective input query. The last line to be printed for each test case is used as a separator and must contain a single character '-' (known as hyphen or minus sign).\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Rujia Liu  China\",\n    \"category\": \"Graph\",\n    \"description\": \"You have a grid of n rows and n columns. Each of the unit squares contains a non-zero digit. You walk from the top-left square to the bottom-right square. Each step, you can move left, right, up or down to the adjacent square (you cannot move diagonally), but you cannot visit a square more than once. There is another interesting rule: your path must be symmetric about the line connecting the bottom-left square and top-right square. Below is a symmetric path in a 6 x 6 grid.\\n\\n                \\n\\n                Your task is to find out, among all valid paths, how many of them have the minimal sum of digits?\",\n    \"id\": 1461,\n    \"input\": \"There will be at most 25 test cases. Each test case begins with an integer n (2 \\u2264 n \\u2264 100). Each of the next n lines contains n non-zero digits (i.e. one of 1, 2, 3, ..., 9). These n2 integers are the digits in the grid.\\n\\n                The input is terminated by a test case with n = 0, you should not process it.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Optimal Symmetric Paths\",\n    \"output\": \"For each test case, print the number of optimal symmetric paths, modulo 1,000,000,009 .\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Marcio T. I. Oshiro  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Nowadays everyone is connected, take part in the Facebook, publish your photos on Instagram, your videos on YouTube, and so on. Even as GPS systems today are based on social networks, making it fun (and perhaps more difficult to understand, but that's another conversation). Being popular on Facebook is almost a necessity. A person with less than 700, 800 friends can be considered almost as a pariah in this new reality.\\n\\nMaybe that's why some people tend to exaggerate when they say the number of friends they have. Consider a community of N individuals, and for each one, consider that we know the number of friends that everyone claims to have in the community. Your task in this problem is to determine if indeed it is possible that all community members are speaking the truth. Remember that a person can not be a friend to herself, and the two people can't be friends several times.\",\n    \"id\": 1462,\n    \"input\": \"The input contains many instances and ends with EOF. The first line of each instance contains an integer N (1 \\u2264 N \\u2264 105). The second line contains N integers, ai (0 \\u2264 ai \\u2264 105), separated by an blank space, corresponding to the number ofr friends that the i people said have in the community.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Popularity in the Facebook\",\n    \"output\": \"For each instance, print in a only line, possivel if it is possible that all the people of that community are saying the truth, or otherwise, impossivel.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"A binary expression tree or Arithmetic Expression Binary Tree is a specific application of a binary tree to evaluate expressions. It can be used to represent an algebraic and boolean expression, like the expression 4 * a - ( 6 + b ) + 8 / ( 9 - 7 ) \\u00a0presented in the figure below.\\n\\n                \\n\\n                These trees can represent expressions that contain both unary and binary operators. Expression trees have been implemented as binary trees mainly because binary trees allow their user to quickly find what he is looking for.\\n\\n                The upper limit of steps necessary to find required information in binary trees equals to log2N, where N denotes the number of all nodes in a tree.\\n\\n                In order to make an different exercise, the professor ask you to list an expression stored in a binary tree, level by level, from level zero to level n.\",\n    \"id\": 1463,\n    \"input\": \"The input contains several test cases. Each test case consists of an arithmetic expression containing from two operands and a simple operation up to 100 elements. This expression can contain uppercase letters, lowercase letters, digits, parentheses, and basic arithmetic operations (+, -, *, /) as shown below. Each operand can have only one digit ('0'-'9') or letter ('a', 'B', etc). The end of input is indicated by the end of file (EOF).\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Binary Expression Tree\",\n    \"output\": \"For each test case, your program must print several lines corresponding to the levels of the expression tree and containing all the elements present in each one of these levels from left to right. These lines must begin always with the message \\\"Nivel n: \\\", formatted as presented in the example given below. Print a blank line between two test cases.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Walter J. Hern\\u00e1ndez  Venezuela\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Dr. Kabal, a well recognized biologist, has recently discovered a liquid that is capable of curing the most advanced diseases. The liquid is extracted from a very rare onion that can be found in a country called Onionland. But not all onions of Onionland are worth to take to the lab for processing. Only those onions with an odd number of layers contain the miraculous liquid. Quite an odd discovery!\\n\\n                \\n\\n                Figure 1: Onion from Onionland\\n\\n                Dr. Kabal has hired a lot of research assistants to collect and analyse onions for him. Since he does not want to share his discovery with the world yet, he didn\\u2019t tell the assistants to look for onions with an odd number of layers. Instead, each assistant was given the task of collecting onions, and selecting points from each of the layer\\u2019s outer borders, so that an approximation of the layer structure of the onion can be reconstructed later. Dr. Kabal told the assistants that the next step will be a \\u201ccomplicated analysis\\u201d of these points. In fact, all he will do is simply to use the points to count the number of layers in each of the onions, and select the ones with an odd number of layers.\\n\\n                \\n\\n                Figure 2: Points collected by an assistant\\n\\n                It is clear that the approximation obtained by Dr. Kabal, from the points collected, might have a different shape than the original onion. For instance, only some of the points of the onion shown in Figure 1 would be extracted in the process, giving rise to a set of points as shown in Figure 2. With these points Dr. Kabal will try to approximate the original layers of the onion, obtaining something like what is shown in Figure 3. The approximation procedure followed by Dr. Kabal (whose result is shown in Figure 3) is simply to recursively find nested convex polygons such that at the end every point belongs to precisely one of the polygons. The assistants have been told to select points in such a way that the number of layers in the approximation, if done in this recursive manner, will be the same as in the original onion, so that is fine with Dr. Kabal. The assistants are also aware that they need at least three points to approximate a layer, even the innermost one.\\n\\n                \\u200b\\n\\n                Figure 3: Dr. Kabal\\u2019s approximation\\n\\n                Your task is to write a program that, given a set of points collected by an assistant (as shown in Figure 2), determines if the respective onion should be taken to the laboratory.\",\n    \"id\": 1464,\n    \"input\": \"The input contains several test cases. Each test case consists of an integer 3 \\u2264 N \\u2264 2000 in a single line, indicating the number of points collected by the assistants. Following, there are N lines, each containing two integers \\u22122000 \\u2264 X, Y \\u2264 2000 corresponding to the coordinates of each point. The input is finished by a problem with N = 0 points, which should not be processed.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Onion Layers\",\n    \"output\": \"There should be one line of output for each test case in the input. For each test case print the string\\n\\n                Take this onion to the lab!\\n\\n                if the onion should be taken to the laboratory or\\n\\n                Do not take this onion to the lab!\\n\\n                if the onion should not be taken to the laboratory.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Gin\\u00e9s Garc\\u00eda Mateos, UM  Espa\\u00f1a\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Complex numbers are not only complex, but also complicated. So you would better try to solve another problem...\\n\\n                We have a complex number, a+b*i, where i is the square root of -1. We want to make it simple (I mean, real), by raising it to a natural power. For example, complex number 2+2*i, can be made simple by raising it to 4:\\n\\n                (2+2*i)4 = -64\\n\\n                You have to compute the smallest natural number, N, (zero is not included) such that (a+b*i)N is a real number. Besides, we require that the absolute value of (a+b*i)N is not bigger than 230.\",\n    \"id\": 1465,\n    \"input\": \"The first line of the input contains an integer M, indicating the number of test cases.\\n\\n                For each test case, there is a line with two integers A and B. A is the real part of the complex number, and B is the imaginary part.\\n\\n                You can assume that -10000 \\u2264 A \\u2264 10000, and -10000 \\u2264 B \\u2264 10000.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Complex, Difficult and Complicated\",\n    \"output\": \"For each test case, the output should consist of a single positive natural number N in one line, indicating the power such that (A+B*i)N is real and its absolute value is not greater than 230. If there is no solution, you have to output \\\"TOO COMPLICATED\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Level order traversal of a tree is breadth first traversal for the tree. It is actually a BFS, which is not recursive by nature. It uses Queue instead of Stack to hold the next vertices that should be opened. The reason for it is in this traversal, you want to open the nodes in a FIFO order, instead of a LIFO order, obtained by recursion.\\n                 So the work here is, after some operations of insertion over a binary search tree, print the level order traversal of this tree. For example, an input with the sequence of numbers: 8 3 10 14 6 4 13 7 1 will result in the following tree:\\n\\n                \\n                    \\n                With the level order traversal output: 8 3 10 1 6 14 4 7 13.\",\n    \"id\": 1466,\n    \"input\": \"The input file contains many test cases. The first line of input contains an integer C (C \\u2264 1000), indicating \\n                    the number of test cases that follow. Each test case contains two lines. The first line contains a number N (1 \\u2264 N \\u2264 500) \\n                    indicating the amount of numbers that will form each one of the trees. The second line contains the N distinct non-negative numbers,\\n                    each one separated by a space.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Level Order Tree Traversal\",\n    \"output\": \"For each input set, you should print the message \\\"Case n:\\\", where n is the sequential test case number, followed by one line with the level order traversal of the tree, according to the given example.\\n                    \\n                    Note: None space must be printed after the last number of each line and the program should print a blank line after each test case, even after the last test case. The result tree will have no repeated numbers and no more than 500 levels.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Everyone probably knows the game Zero or One (in some regions in Brazil also known as Two or One ), used to determine a winner among three or more players. For those who are unfamiliar, the game works as follows. Each player chooses a value between zero or one; prompted by a command (usually one of the contestants announces \\u201cZero or... One!\\u201d), all participants show the value chosen using a hand: if the value chosen is one, the contestant shows a hand with an extended index finger; if the value chosen is zero, the contestant shows a hand with all fingers closed. The winner is the one who has chosen a value different from all others. If there is no player with a value different from all others (e.g. all players choose zero, or some players choose zero and some players choose one), there is no winner. Alice, Bob and Clara are great friends and play Zerinho all the time: to determine who will buy popcorn during the movie session, who will enter the swimming pool first, etc.. They play so much that they decided make a plugin to play Zerinho on Facebook. But since they don\\u2019t know how to program computers, they divided the tasks among friends who do know, including you. Given the three values chosen by Alice, Bob and Clara, each value zero or one, write a program that determines if there is a winner, and in that case determines who is the winner.\",\n    \"id\": 1467,\n    \"input\": \"TThe input contains several test cases. Each test case contains a single line, with three integers A , B and C (each one can be 0 or 1),indicating respectively the values chosen by Alice, Beto and Clara. The end of input is determined by EOF.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Zero or One\",\n    \"output\": \"For each test case your program must output a single line, containing a single character. If Alice is the winner the character must be \\u2018 A \\u2019, if Beto is the winner the character must be \\u2018 B \\u2019, if Clara is the winner the character must be \\u2018 C \\u2019, and if there is no winner the character must be \\u2018 * \\u2019 (asterisc).\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"One of the main difficulties of organizing a Programming Contest is collecting the balloons that escape and are trapped on the roof of the competition hall: often the contract with the hall owner requires that the hall must be cleaned soon after the event, otherwise a fine is applied.\\n\\nThis year the organization of our competition have been more prudent: it got the project design of the ceiling of the hall, and wants your help to determine what will happen to a loose balloon depending on the position on the ground where it is released (that is, whether it is blocked by the ceiling or escapes to the outside of the hall).\\n\\nThe ceiling of the hall consists of several plans that, viewed from the side, can be described by line segments, as shown in the figure below:\\n\\n\\n\\nThe balloon may be considered to be a point. When a balloon touches a line segment that is horizontal, it gets stuck. When a balloon touches a segment that is tilted, the balloon glides to the highest point of the segment and escapes. It may then escape from the hall or it may touch more segments. There are no points in common between the line segments that form the ceiling.\\n\\nFor example, if a balloon is released at the positions marked as a or b, it will be stuck in the position with coordinates (2, 5); if a balloon is released at the position marked c, it will be stuck in the position of coordinates (6, 5); and if the balloon is released at the position marked as d, it will not be blocked and will escape out of the hall in the position of coordinate x = 7.\\n\\nWrite a program that, given the description of the ceiling of the hall as line segments, answers a series of queries about the final positions of balloons released at the hall floor.\",\n    \"id\": 1468,\n    \"input\": \"The input contains several test cases and ends with EOF. The first line of a test case contains two integers N (1 \\u2264 N \\u2264 105) and C (1 \\u2264 C \\u2264 105) indicating, respectively, the number of segments describing the ceiling, and the number of queries. Each of the next N lines contains four integers X1, Y1, X2, Y2, (0 \\u2264 X1,X2 \\u2264 106, 0 < Y1, Y2 \\u2264 106, X1 <> X2) describing a line segment from the ceiling, with end points at coordinates (X1, Y1) and (X2, Y2).\\n\\nEach of the next C describe a query and contains an integer X (0 \\u2264 X \\u2264 106) , indicating that the query wants to determine what happens to a balloon releaset at the point of coordinates (X, 0).\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Balloon\",\n    \"output\": \"For each query in the input your program must output a single line. If the balloon escapes the hall, the line must contain a single integer X, indicating the x coordinate where eht balloon escapes the hall. Otherwise, the line must contain two integers X and Y indicating the position (x, y) where the balloon gets stuck in the ceiling.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Graph\",\n    \"description\": \"Everyone knows Iks, the last trend in social network, which made so much success that competitors like Facebook and Google+ are strugling to keep their own social networ ks in business. As several \\u201c.com\\u201d companies, Iks started in a small garage, but today employs hundr eds of thousands. Iks has also a non-standard management system. For example, there are no c ommittees or boards, which means less time spent on internal meetings. However, as usual i n other companies, there is a chain (or rather several chains) of command, as a person may manage other emp loyees, and may be managed by other employees. The figure below shows the chain of comman d for some employees, along with their ages.\\n\\n\\n\\nA person P1 may manage another person P2 directly (when P1 is the immediate superior of P2 ) or indirectly (when P1 manages direclty a person P3 who manages P2 directly or indirectly). For example, in the figure above, Alice manages David directly and Claire in directly. A person does not manage himself/herself, either directly or indirectly. One folklore that developed in Wall Street is that Iks is so successf ull because in its chain of command a manager is always younger than the managed employee. As we can see in figure above, that is not true. But this folklore prompted Iks to develop a tool to st udy its own management system, and to understand whether age plays a role in its success. You have be en hired to work on that tool. Given the description of the chain of command at Iks and the ages of its empl oyees, write a program that answers a series of instructions. Instructions are of two types : management change and query. An instruction of management change swaps the positions of two employees A and B . As an example, figure (b) above shows the resulting chain of command when David and Ge orge change their respective positions in the chain of command. A query instruction names one employ ee A and asks the age of the youngest manager of A ; that is, the youngest person in the chain of command at Iks that manages A , either directly or indirectly. For example, in figure (a) above the youngest manager of Clara is 18 years old; in figure (b), the youngest manager of Clara is 21 years old.\",\n    \"id\": 1469,\n    \"input\": \"The input contains several test cases and ends with EOF. Each test case is described using several lines. The first line of a test case contains three integers N (1 \\u2264 N \\u2264 500), M(0 \\u2264 M \\u2264 60 \\u00d7 103) and I(1 \\u2264 I \\u2264 500) , representing respectively the number of employees, the number of direct manage relations and the number of instructions. E mployees are identified by numbers from 1 to N . The second line contains N integers Ki(1 \\u2264 Ki \\u2264 100, para 1 \\u2264 i \\u2264 N) , where Ki indicates the age of the employee number i .\\n\\nEach of the following M lines contains two integers X and Y(1 \\u2264 X, Y \\u2264 N, X != Y) , indicating that X manages Y directly. Then it follows I lines, each describing an instruction. An instruction of type managem ent change is described by a line containing the identifier T followed by two integers A and B (1 \\u2264 A,B \\u2264 N) , indicating the two employers that must swap places in the chain of command. An instruction of type query is described by a line containing the identifier P followed by one integer E(1 \\u2264 E \\u2264 N) , representing the number of an employer. The last instruction is of type query.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Boss\",\n    \"output\": \"For each instruction of type query your program must print a single line containing a single integer, the age of the employee who is the youngest person that manages the employ er named in the query (directly or indirectly), if that person exists. If the employe e does not have a manager, print an '*' (asterisc).\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"One of the main tools of a Turing machine, which allows its computing power to be bigger than other simpler models, is an infinite tape, divided in cells, where information is stored.\\n\\nA Folding machine is a machine inspired by a Turing machine. In a Folding machine, the tape is finite, the data are integers and instead of having the functionality of the original Turing machine, this machine uses folding tape operations.\\n\\nTo perform a folding operation, the machine chooses a position between adjacent cells and folds the tape, adding the values of overlapping cells, as can seen in the figure below.\\n\\n\\n\\nNotice that the machine can also fold the tape before the tape center, as shown in the next figure. The machine can also choose to fold at the tape start or at the tape end, actually inverting the tape.\\n\\n\\n\\nScience of Bends Company is developing commercial versions of their Folding machine and its production have recently raised. The last lot produced, unfortunately, have some issues and some machines aren\\u2019t working properly. Some additional testing is therefore needed, to avoid selling defective machines, which would denigrate the company\\u2019s image.\\n\\nTo test these machines, a set of tests and tapes are given. For each tape, the machine returns some computation result. Therefore, the engineers responsible for testing take note of the results and can verify if they are correct. But these engineers forgot to take note of which computation was made in each test case. To avoid re-testing all machines again, the engineers agreed that any combination of foldings is sound and accepted if, from a given input, it generates the expected output. You were hired to develop a program which, given the input and output tapes, determines whether there is a folding sequence that, starting from the input tape, generates the output tape. Input The input contains several\",\n    \"id\": 1470,\n    \"input\": \"The input contains several test cases and ends with EOF. Each test case is composed of four lines. The first two lines refer to the input tape for the Folding machine and the last two lines refer to the output tape. The first line contains a single number, N (M \\u2264 N \\u2264 15), describing the input tape size. The second line contains\\u00a0N integers v1, . . . , vN, describing the content of the input tape. The third line contains a single integer M (1 \\u2264 M \\u2264 N), the output tape size; and the fourth line contains M integers w1, . . . ,wM, the content of the output tape.\\n\\nNote: 0 \\u2264 vi, wj \\u2264 108 for 1 \\u2264 i \\u2264 N e 1 \\u2264 j \\u2264 M.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Folding Machine\",\n    \"output\": \"For each test case your program must produce a single line, containing a single character, which must be \\u201cS\\u201d if there is a folding sequence able to generate the output tape starting from the input tape, and \\u201cN\\u201d otherwise.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The recent earthquake in Nlogonia did not affect too much the buildings in the capital, which was at the epicenter of the quake. But the scientists found that it affected the dike wall, which now has a significant structural failure in its underground part that, if not repaired quickly, can cause the\\ncollapse of the dike, with the consequent flooding the whole capital.\\n\\n\\nThe repair must be done by divers, at a large depth, under extremely difficult and dangerous conditions. But since the survival of the city is at stake, its residents came out in large numbers to volunteer for this dangerous mission.\\n\\n\\nAs is traditional in dangerous missions, each diver received at the start of his/her mission a small card with an identification number. At the end of their mission, the volunteers returned the nameplate, placing it in a repository.\\n\\n\\nThe dike is safe again, but unfortunately it seems that some volunteers did not return from their missions. You were hired for the grueling task of, given the plates placed in the repository, determine which volunteers lost their lives to save the city.\",\n    \"id\": 1471,\n    \"input\": \"The input contains several test cases and ends with EOF. Each test case is composed of two lines. The first line contains two integers N and R ( 1 \\u2264 R \\u2264 N \\u2264 104), indicating respectively the number of volunteers that went to the mission and the number of volunteers that returned from the mission. Volunteers are identified by numbers from 1 to N. The second line contains R integers, indicating the volunteers which returned from the mission (at least one volunteer returned).\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Dangerous Dive\",\n    \"output\": \"For each test case your program must produce a single line containing the identifiers of the volunteers who did not return from their missions, in ascending order of their identifications. Leave a blank space after each identifier (notice that, therefore, there must be a blank space after the last identifier in the line). If every volunteer returned, the line must contain a single character \\u2018*\\u2019 (asterisc).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"It will be give to you N points on a circle. You must write a program to determine how many distinct equilateral triangles can be constructed using the given points as vertices.\\n\\n                The figure below illustrates an example: (a) shows a set of points, determined by the lengths of the circular arcs that have adjacent points as extremes; and (b) shows the two triangles which can be built with these points.\\n\\n\",\n    \"id\": 1472,\n    \"input\": \"The input contains several test cases and ends with EOF. The first line of a test case contains an integer N ( 3 \\u2264 N \\u2264 105), the number of points given. The second line contains N integers Xi\\u00a0(1 \\u2264 Xi \\u2264 103) for 1 \\u2264 i \\u2264 N, representing the lengths of the circular arcs between two consecutive points in the circle: for 1 \\u2264 i \\u2264 (N \\u2212 1), Xi represents the length of the arc between points i and i + 1; XN represents the length of the arc between points N and 1.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Triangles\",\n    \"output\": \"For each test case your program must output a single line, containing a single integer, the number of distinct equilateral triangles that can be constructed using the given points as vertices.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"A shipment of Nlogs, the main export product from Nlogonia, is in the harbour, in containers, ready to be shipped. All containers have the same dimensions and all of them are cubes. Containers are organized in the cargo terminal in L lines and C columns, for a total of LC containers. Each container is marked with a distinct identification number, from 1 to LC.\\n\\n                \\n                    Each one of the L container lines will be loaded in a different ship. To make it simpler when unloading at each destination country, containers from a line must be organized such that the identifiers are in sequential order. More precisely, the first line must have the containers identified from 1 to C in increasing order, line 2 must have containers numbered from C +1 to 2C (in increasing order), and so on until the last line. which will have containers numbered (L\\u22121)C +1 to LC (again, in increasing order). Figure (a) shows the organization of a shipment with 5 lines and 4 columns of containers.\\n\\n                \\n\\n                A crane is able to move either a full line or a full column of containers. It cannot move other groupments or individual containers.\\n\\n                \\n                    In night before the loading, a group of workers operated the cranes to swap shipment lines and columns as a way of protest because of low salaries. Figure (b) shows the configuration after swapping lines 1 and 4; Figure (c) shows the configuration after another swap, this time between colummns 2 and 3.\\n\\n                The loading must be done today, but before starting the containers must be reorganized as described previously. You must write a program which, given the information about the position of every container after the protest, determines whether you can reposition the containers in such way\\u00a0 that every one of them is in its expected positions, using only cranes. If repositioning is possible, you must also calculate the smallest number of column and line swaps needed to do it.\",\n    \"id\": 1473,\n    \"input\": \"The input contains several test cases and ends with EOF. The first line of of a test case contains two integers L and N (1 \\u2264 L, N \\u2264 300) which describe, respectively, the number of lines and columns of the shipment. The next L lines show the configuration of the containers after the workers protest. Each of these L lines will have C integers Xl,c (1 \\u2264 Xl,c \\u2264 LC), indicating the position of a container. Every integer between 1 and LC appears exactly once in the input.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Lines of Containers\",\n    \"output\": \"For each test case your program must produce a single line, containing a single integer, the minimum number of column and line swaps needed to place the containers in their original positions. If there is no way to place the containers in their original positions using only cranes, the line must contain only the character \\u2018*\\u2019.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Programming competitions usually require infrastructure and organization on the part of those responsible. A problem that frequently must be solved is regarding transportation. While participating in a recent competition, Ricardinho watched the buses and micro-buses used in the transportation of competitors, all lined up one behind the other as competitors disembarked. The vehicles were all from the same company, although had different paintings. Ricardinho began to wonder how many ways that line could be formed using buses and minibuse from that company. Each bus is 10 meters long, each minibus is 5 meters long. Given the total length of a line of buses and minibuses, and the number of different colors each buse or minibus may be painted, Ricardinho wants to know in how many ways such a line can be formed.\",\n    \"id\": 1474,\n    \"input\": \"The input contains several test cases and ends with EOF. Each test case is composed of a single line, containing three integers N(5 \\u2264 N \\u2264 1015 and N is multiple of 5), K(1 \\u2264 K \\u2264 1015) and L(1 \\u2264 L \\u2264 1015), representing respectively the total length, in meters, of the line Ricky is considering, K indicates the number of different colors for micro-buses, and L represents the number of different colors for buses. Note that, as integers N, K and L may be very large, the use of 64 bits integers is recommended.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Buses\",\n    \"output\": \"As the number of different ways of forming the line can be very large, Ricardinho is interested in the last 6 digits of that quantity. Thus, your for each test case your program must produce a single line containing exactly 6 digits, corresponding to the last digits of the solution.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Carlos is very concerned with the environment. Whenever possible, he tries to use less polluting means of transport. He recently got a job close to home and is now using his bike to go to work.\\n\\nUnfortunately, in the route between his home and his job there is a nail factory, and often some nails fall from their trucks, and end up puncturing Carlos\\u2019 bike tires. Therefore he ends up having to make several patches on the tires of his bike.\\n\\nTo make the repairs, Carlos uses two different types of patches. Both types are as wide as a bike tire, but differ in length. As the cost of the patch is proportional to its length, Carlos is trying to find a way to save money, using the least possible length of patches to make the repairs, without cutting the patches.\\n\\nThe first step in repairing a tire is making a chalk mark on a position of the tire and then writing down the distances, measured clockwise, of each of the holes in relation to the chalk mark. Each hole must be completely covered by a patch. Carlos would like your help to determine, given the positions of the holes, the most economic way to make the repair.\",\n    \"id\": 1475,\n    \"input\": \"The input contains several test cases. Each test case is composed of two lines. The first line contains four integers N (1 \\u2264 N \\u2264 1000), C (1 \\u2264 C \\u2264 106), (1 \\u2264 T1) and T2 (T2 \\u2264 C). The integer N indicates the number of holes in the tire, and C indicates the cirunference length of the tire, in centimeters. The lengths of the patches in centimeters are given by integers T1 and T2. The second line contains N integers Fi (0 \\u2264 Fi \\u2264 C-1),\\u00a0 representing the distance, in clockwise direction, from the chalk mark to hole i (1 \\u2264 i \\u2264 N), in centimeters. The end of input is determinad by EOF.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Patches\",\n    \"output\": \"For each test case your program must print a single line, containing a single integer, the smallest total length of patches needed to make all the repairs.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brasil\",\n    \"category\": \"Graph\",\n    \"description\": \"The Subtle Balloons Company (SBC) is the main balloon provider for programming contests; it has huge factories and warehouses, as well as an extensive truck fleet to ensure the contestants\\u2019 happiness. There are lots of competition sites in Nlogonia, and all of them hired SBC for supplying balloons for their contests. Nlogonia is an archipelago connected by several bridges. Every island of Nlogonia may have several regional sites and may also house several SBC warehouses. When planning the routes for balloon deliveries, SBC faced a problem: for safety issues, every bridge in Nlogonia has some maximum weight limit for vehicles which cross it. And because of the great net weight of the transported merchandise, SBC operations\\u2019 chief asked you to write a program to determine the maximum weight allowed to be transported between warehouses and competition sites.\",\n    \"id\": 1476,\n    \"input\": \"The input contains several test cases. The first line of a test case contains three integers N(2 \\u2264 N \\u2264 2 \\u00d7 104), M(1 \\u2264 M \\u2264 105) and S(1 \\u2264 S \\u2264 5 \\u00d7 104) which indicate, respectively, the number of islands, the number of bridges that connect the islands and the number of sites. The islands are numbered from 1 to N. Each of the next M lines describes a bridge. The description of a bridge consists in a line with three integers A, B and W(0 \\u2264 W \\u2264 105), indicating respectively the two islands connected by the bridge and the maximum weight allowed in that bridge, in tons. All bridges are two-way roads; every pair of islands is connected by at most one bridge; and it is possible to reach every other island in the archipelago using only bridges (naturally it may be needed to pass through other islands to do so). Each of the next S lines describe a competition site and contains two integers L and H indicating, respectively, the number of the island where this site is and the number of the island where the wharehouse which will be used to deliver the balloons to the site is. (1 \\u2264 A,B,L,H \\u2264 N, A != B, L != H)\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Trucks\",\n    \"output\": \"For each site in a test case, in the order they were given, your program must produce a single line, containing a single integer, the biggest weight which can be transported by truck from the warehouse to the site.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"Maratona de Programa\\u00e7\\u00e3o da SBC  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"A very popular game in Nlogonia is called Man, Elephant and Mouse. It is typically played with only two players, and works as follows: each player secretly selects one of these three symbols, and after a countdown, both simultaneously reveal the symbol chosen through hand signals, extending in front his hands signaling the choice.\\n\\n                Man is represented by the closed hand, like the head of a man. The elephant is represented by the open hand showing five fingers, like the paw of the nlogonense elephant. Finally, the Rat is represented by the closed hand with the index finger and middle finger outstretched, as the ears of the little animal.\\n\\n                \\n\\n                Figure 1: The three symbols of the game Man, Elephant and Mouse.\\n\\n                To determine the winner is very simple: the man always loses to the elephant (it is crushed under his paw), the elephant always loses to the mouse (because he is afraid of him and runs away) and the mouse always loses to the Man (which spreads traps to capture it). If two players use the same symbol, a tie occurs and the game is played again.\\n\\n                The inhabitants of Nlogonia, that are born strategists of Man, Elephant and Mouse, are using the following technique in the national championship, held every year: they always start playing man until the moment that this symbol cause tie with the most of their opponents. They then change its approach to the the winning symbol considering that they were using previously. Thus, players will switch to Elephant Man, then to Mouse, then they back again to Man.\\n\\n                To assist a famous foreign competitor in a game similar to this game Man, Elephant and Mouse, you will develop a program that counts how many players will use each symbol. Suppose all N players are arranged in a row and identified by their position, from 1 to N. Your program should handle with M commands of two types: change of symbol and count the frequency of these symbols. Both commands take a contiguous range of players in the queue to be considered.\",\n    \"id\": 1477,\n    \"input\": \"The input consists of several test cases. Each test case starts with a line containing two integers N (1 \\u2264 N \\u2264 105) \\u200b\\u200band M (0 \\u2264 M \\u2264 106) \\u200bwhich represent respectively the number of players in the tournament, and the number of operations.\\n\\n                The next M lines contain, each one, the description of an operation. Operations of\\u00a0 strategy changing will be represented by a line of the form \\\"M A B\\\" where A (1 \\u2264 A) and B (A \\u2264 B \\u2264 N) are integers. Players whose strategies are changed are those whose position in queue is between A and B, inclusive.\\n\\n                Counting operations are represented by a line of the form \\\"C A B\\\" where A and B are integers representing the range of players that should be considered in the count. Let's consider that players whose position in the queue is between A and B, inclusive. inclusive.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Man, Elephant and Mouse\",\n    \"output\": \"For each operation, print a line containing three integers indicating respectly the number of Men, Elephant and Mouse symbols, that are used by the players in the given interval.\\n\\n                Print one blank line after each test case, including the last one.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Josu\\u00e9 Pereira de Castro, Unioeste  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write a program that read an integer number N (0 \\u2264 N \\u2264 100) that correspont to the order of a Bidimentional array of integers, and build the Array according to the above example.\",\n    \"id\": 1478,\n    \"input\": \"The input consists of several integers numbers, one per\\u00a0line, corresponding to orders from arrays\\u00a0to be built. The end of input is indicated by zero (0).\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Square Matrix II\",\n    \"output\": \"For each integer number of input,\\u00a0print the corresponding array according to the example. (the values \\u200b\\u200bof the arrays must be formatted in a field of size 3 right justified and separated by a space. None space must be printed after the last character of each row of the array. A blank line must be printed after each\\u00a0array.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"A good war commander must take quick decisions, and at the same time be a good strategist. One of the functions of the commander is to delegate soldiers to several strategic points, such that the enemy can be caught surprised and be defeated. There are several strategic points at the battle field, as well as several routes that connect these points.\\n\\nYour field is, however, being bombarded, and these routes are not so safe as they were. Once a bomb falls at one route, such terrain becomes irregular and your crossing becomes impossible. To deal with such problem, the commander ordered a new task to some soldiers: find new routes.\\n\\nThe commander asked your help to calculate the shortest path between the base of operation and the strategic points. You will be informed about the initial state of the battle field, with N strategic points (being the point 1 the base of operation) and M routes. As the bombs falls over some routes, and other routes are found by the soldiers, you must update your math such that your commander can make good use of such informations.\\n\\nGood luck, the country depends on you.\",\n    \"id\": 1479,\n    \"input\": \"The input contains several test cases. Each test case begins with two integers, N and M (2 \\u2264 N \\u2264 1000 and 1 \\u2264 M \\u2264 10000), representing, respectively, the number of strategic points and the number of routes that connects two strategic points. After that, there will be M lines, each one with three integers U, V and W (1 \\u2264 U, V \\u2264 N and 1 \\u2264 W \\u2264 100) each, representing that there is a route that connects the point U to the point V, in unique direction, with distance W.\\n\\nThere will be, then, an integer Q (1 \\u2264 Q \\u2264 1000), that represents the number of consults or updates that will be done over the routes. At the next Q lines there will be a letter and a determined number of integers.\\n\\nIf the letter is a R, there will be two integers U and V (1 \\u2264 U, V \\u2264 N), indicating that the route that used to connect the point U to the point V was bombed.\\n\\nIn the case that the letter is an I, there will be three integers U, V and W (1 \\u2264 U, V \\u2264 N and 1 \\u2264 W \\u2264 100), indicating that a new route was found, which connects the point U to the point V, with distance W.\\n\\nAnd in the case that the letter is a P, there will be one integer V (1 \\u2264 V \\u2264 N), and you must inform to the commander what is the shortest distance between the base of operation and the strategic point V.\\n\\nThe input ends when N = M = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Help your Commander\",\n    \"output\": \"For each test case there will be a not defined number of output lines. When the commander order to know the shortest distance between the base of operation and a strategic point (letter P), such distance must be print in an unique line. If it is not possible to reach such strategic point, the number -1 must be printed. There must have a blank line after each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Mine Sweeper is an old game, that became famous for being a native game on an operational system that nobody remembers the name. It is about a grid with N rows and M columns, containing several spread mines, and several tips indicating where they would be. Your task is to find all the mines, with never stepping at one.\\n\\n                Each position of the grid may or may not contain a mine. In the case it does not contain a mine, such position will contain a value, known as tip, that will identify how many mines are there on the adjacent squares (on the 8 directions), that varies between 0 and 8 (see Figure 1).\\n\\n                \\n\\n                Rafael became very interested by the game proposal, and found it so easy that he decided to write by himself some game cases, where he defines where the mines are going to be and what are the initial tips. He noticed, however, that there are two situations that can occur during the match: in determined cases, it is possible to find out with certainty where the mine is, thanks to the given tips; however in other cases, it is not possible to find out with certainty where the mine is, and the player will have to rely only on his luck.\\n\\n                Consider the match as follows: there is, initially, a determined number of uncovered squares (tips) and the rest of them covered. The player can perform two movements: reveal a covered square, either finding a mine (game over) or a tip; or signal a covered square as being a mine, in such a way to prevent himself of never revealing that square.\\n\\n                In order to procedure during the match in a logic way (without relying on luck), take into account the following definitions, relative to a set of adjacent squares from some square being analysed:\\n\\n                \\n                    When the number of covered squares (adjCov), added to the signaled squares (adjSig) is equal to the tip (adjCov + adjSig = tip), then all the covered squares contain mines.\\n                    When the number of signaled squares (adjSig) is equal to the tip (adjSig = tip), then all the covered squares do not contain mines.\\n                \\n\\n                See as an example the Figure 2.\\n\\n                \\n\\n                At part a) of the figure, we have adjCov = 1, adjSig = 0 and tip = 1, then 1 + 0 = 1, and we can signal the covered squares to identify the mines.\\n\\n                At part b) of the figure, we have adjSig = 1 and tip = 1, then 1 = 1, and we can reveal the adjacent squares yet covered.\\n\\n                So that his game case could become interesting and challenger, Rafael decided that it should be possible to find all the mines based only at the given definition, but he does not know how to verity when this is possible, and that is why he asked your help.\",\n    \"id\": 1480,\n    \"input\": \"The input will contain several test cases. Each test case begins with three integers N, M and K (1 \\u2264\\u00a0N, M \\u2264\\u00a020, 1 \\u2264\\u00a0K \\u2264\\u00a030), indicating that the game grid contains N rows and M columns, and that there are K mines hidden in that grid. Following, there will be N rows with M characters on each row, where the character of the ith row and jth column (1 \\u2264\\u00a0i \\u2264\\u00a0N and 1 \\u2264\\u00a0j \\u2264\\u00a0M) indicate where is at\\u00a0the\\u00a0[i, j] position of the grid:\\n\\n                \\n                    Character \\u201c.\\u201d - Covered square.\\n                    Value between 0 and 8 \\u2013 Uncovered square, where the value is the tip.\\n                \\n\\n                Following there will be K pairs of integers a and b (1 \\u2264\\u00a0a \\u2264\\u00a0N and 1 \\u2264\\u00a0b \\u2264\\u00a0M), indicating that there is a mine at the position [a, b] of the grid. Notice that such information is useful when a squared is revealed, so the tip can be calculated.\\n\\n                The input ends when N = M = K = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Famous Mine Sweeper\",\n    \"output\": \"Your program should print, for each test case, a line, containing the word \\u201cPossivel\\u201d in the case that it is possible to find all the mines based on the given definitions, or \\u201cImpossivel\\u201d, in the case it is not possible.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Zing Zhu owns an island that is a piece of flat land. Everyday, when the tide rises, the island is flooded by sea water. After much thinking and asking advice from members of his family, Zing Zhu decided to set up an oyster farm in the island. Zing Zhu uses a sophisticated system of plastic watertight modular fences to control the areas that will be flooded and the areas that will not be flooded during the rise of the tide. The fences used by Zing Zhu are either horizontal or vertical and come in strips that have different lengths and heights. Two fences can intersect in at most one point, not necessarily in their ends.\\n\\n                \\u200b\\n\\n                Picture 1 (left): Map of fence strips installed in the farm, showing fence strip heights in centimeters.\\n\\n                Picture 2 (right): Non-flooded areas (shown in white) if the tide rises 110 centimeters.\\n\\n                You have been contacted by Zing Zhu to calculate, given the height the tide will reach and the position and height of all fence strips, the total area of land which will not be flooded during the high tide. You may assume that the widths of fence strips are so thin compared to the size of the land that, for the purpose of calculating the total area, fence strips may be considered as having widths equal to zero.\",\n    \"id\": 1481,\n    \"input\": \"The input contains several test cases. The first line of a test case contains an integer N indicating the number of fence strips in the island (1 \\u2264 N \\u2264 2000). Each of the next N lines contains five integers X1, Y1, X2, Y2 and H, representing respectively the start point of the strip (X1,Y1), the end point of the strip (X2,Y2) and the strip height (H). The last line of a test case contains an integer W representing the tide height. Coordinates are given in meters, heights in centimeters. Furthermore, X1 = X2 or Y1 = Y2 (but not both); \\u2212500 \\u2264 X1,Y1,X2,Y2 \\u2264 500; and 1 \\u2264 W, H \\u2264 1000. The end of input is indicated by N = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Zing Zhu\\u2019s Oyster Farm\",\n    \"output\": \"For each test case in the input your program must produce one line of output, containing one integer representing the total area (in m2) of the land which will not be flooded.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"Por Ernesto Coto  Chile\",\n    \"category\": \"Graph\",\n    \"description\": \"The city of Vienna is called the \\u201cCity of Culture\\u201d because (among other things) there are more than 100 museums in the city. As a consequence, it is very difficult (and very expensive) to visit all of them no matter how long you stay in the city. Fortunately, there is a special night, called the \\u201cLong Night of Museums\\u201d, when you can visit many museums with just one ticket, from 6:00 pm to 1:00 am of the next day.\\n\\n                Nevertheless, it is impossible to visit every museum of the city for two main reasons. First, some museums in Vienna don\\u2019t get involved into this event because they close at 5:00 pm. Second, there is not enough time in 7 hours to go to every museum, watch ALL their insides (otherwise, it would be a waste of time), and then go to the others.\\n\\n                Given the number of museums participating in the Long Night of Museums, the time needed to watch the insides of each museum, and the time that it will take to get from each museum to the others, you have to find the best tour to visit as many museums as you can during the Long Night of Museums.\",\n    \"id\": 1482,\n    \"input\": \"The input contains several test cases. The first line of a test case contains one integer N, which indicates the number of museums participating in the event (1 \\u2264 N \\u2264 20). Each museum has a unique identification number ranging from 1 to N. The second line of a test case contains N integers indicating the time, in minutes, needed to visit each museum, from 1 to N. Then there are N lines describing the times to go from one museum to every other. The i-th line contains N integers Mk (1 \\u2264 k \\u2264 N) representing the time, in minutes, to go from museum i to museum k. You may assume that the i-th integer in the i-th line is equal to zero. The end of input is indicated by N = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Long Night of Museums\",\n    \"output\": \"For each test case in the input, your program must produce one line containing the maximum number of museums that can be visited during the Long Night of Museums.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Por Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In a not very distant country, people are addicted on a simple bet game. The game is based in numbers and is called \\\"Animal Game\\\". The game received this name because the numbers are divided in 25 groups, depending of the value of the two last digits (tens and units). Each group is associated with an animal in the following form: the first group (donkey) is formed by the numbers 01, 02, 03 and 04; the second group (eagle) is formed by the numbers 05, 06, 07 and 08; and so on until the last group, formed by the numbers 97, 98, 99 and 00. The rules of he game are simple. In the moment of the bet, the player decides the value of the bet V and a number N (0 \\u2264 N \\u2264 1000000). All the days, in the main square of the city, a number M is drawn (0 \\u2264 M \\u2264 1000000). The prize is calculated as follows:\\n\\n                \\n                    If M and N have the same four last digits (thousands, hundreds, tens and units), the bettor receives V \\u00d7 3000 (for example, N = 99301 and M = 19301)\\n\\n                    If M and N have the same last three digits (hundreds, tens and units), the bettor receives V \\u00d7 500 (for example, N = 38944 and M = 83944)\\n\\n                    If M and N have the same last two digits (tens and units), the bettor receives 50 \\u00d7 V (for example, N = 111 and M = 552211)\\n\\n                    If M and N have the last two digits in the same group, corresponding to the same animal, the bettor receives V \\u00d7 16 (for example, N = 82197 and M = 337600)\\n\\n                    If none of the above occurs, the bettor don't receive any money.\\n\\n                    Obviously, the award given to the bettor is the maximum possible according to the rules above. However, it is not possible to accumulate awards, so that only one of the above criteria should be applied in calculating the award. If the number N or M has less than four digits, assume that the digit 0 must be added in front of the number to make it a number of length four, for example, 17 corresponds to 0017.\\n\\n                    Given the amount bet, the number chosen by the bettor and the number drawn, your program should calculate what the prize the player should receive.\\n\",\n    \"id\": 1483,\n    \"input\": \"The input contains several test cases. Each case consists of one line containing a real number V and two integers N and M, representing respectively the amount bet with two decimal places (0.01 \\u2264 V \\u2264 1000.00), the number chosen for the bet (0 \\u2264 N \\u2264 1000000) and the selected number (0 \\u2264 M \\u2264 1000000). The end of input is indicated by a line containing V = M = N = 0.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Animal Game\",\n    \"output\": \"For each test case your program should print a line containing a real number with two decimal places, representing the prize corresponding to the given bet.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por Ricardo Anido  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Strike Boy, as the name suggests, is a boy fanatic for all types of computer games. He is going on vacation in a paradise island where computers are not allowed. He had a great time playing with games on his cell phone, but now the battery is dead and since there is no electricity on the island, he stopped playing. Strike Boy then decided to invent a new hobby, using the keypad of his cell phone. In this new game, for two players, one chooses two integers S and D. The opposing player must then find a sequence of terms such that:\\n\\n                \\n                    Each term of the sequence is a number with  D  decimal digits, except for the last term, which can have between 1 and D digits;\\n                    The sum of all terms of the sequence is equal to  S ;\\n                    The digits used to form a term correspond to the keys of a standard cell phone keyboard ('0 'to '9');\\n                    Each digit is used at most once in the sequence;\\n                    The first term of a sequence can begin with any digit, but the order of the digits of the sequence when read from left to right, is such that the next key always corresponds to a key that is immediately adjacent to the previously used key (vertically, horizontally or diagonally).\\n                \\n\\n                For example, if  S  = 230 and  D  = 3, there are only two possible solutions obeying the rules of the game : [074, 156] and [085, 142, 3]. The sequence [230] is not a solution because the '3 'key is not a neighbor of the key '0 '.\\n\\n                \\n\\n                Left picture: Keyboard illustrating the keys used to form the sequence [074, 156]\\n\\n                Right picture: Keyboard illustrating the keys used to form the sequence [085, 142, 3]\\n\\n                Help Strike Boy to check if his oponnent's answers are correct: write a program that, given  S  and  D , print all possible solutions .\",\n    \"id\": 1484,\n    \"input\": \"The input contains several test cases. Each test consist in just one line, containing two integers S and D, separated by an empty space, representing the desired sum and the number of digits of each term (0 \\u2264 S \\u2264 10.000.000.000 and 1 \\u2264 D \\u2264 10). The end of the input is specified by S = D = \\u22121.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Type & Add\",\n    \"output\": \"For each test case, your program must write one answer. The first line of an answer must contain an identifier of the test case, in the format '#i', where 'i' is initially 1 and is incremented for each test case. Then, if a solution for the problem exists, your program must display the list of the possible sequences of terms. If more than one sequence is possible, they must appear in ascending lexicographic order. Each sequence of terms must be printed in one line, with its terms separated by an empty space. If there is no solution, your program must print one line containing the word 'impossible'.\\n\\n                Definition: consider the sequences Sa = a1a2\\u00a0... am and Sb = b1b2 ... bn. Sa preceeds Sb lexicographically if and only if Sb is non-empty and one of the following conditions is true:\\n\\n                \\n                    Sa is an empty sequence;\\n                    a1 < b1;\\n                    a1 = b1 and the sequence a2a3 ...\\u00a0am preceeds sequence b2b3 ...\\u00a0bn.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ricardo Anido, UNICAMP  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Turkish Roulette is a betting game that uses a roulette with S slots, each one numbered with an integer between -64 and 64. In each turn of the game players bet on B balls, each one also numbered from -64 to 64. For each of the B balls, exactly one player will bet on it.\\n\\n                After spinning the roulette, the dealer throws in the B balls sequentially. When the roulette stops, each ball is lodged over two (adjacent) slots, as depicted in the figure below, which shows a roulette with thirty two slots and four balls. Notice that, as the figure illustrates, a ball occupies the space of two adjacent slots, and therefore there is room for at most floor(S/2) balls in the roulette.\\n\\n               \\n\\n                Balls end up lodged in the same relative positions that they were thrown in the roulette. That is, if balls a, b and c are thrown in that sequence, they end up lodged such that, in clockwise direction, a is followed by b which is followed by c which is followed by a.\\n\\n                The value of a ball in a turn is calculated by multiplying the ball\\u2019s number by the sum of the numbers of the two adjacent slots over which the ball is lodged. If a ball\\u2019s value is positive, the player who bet on that ball receives that amount (the ball\\u2019s value) from the dealer; if a ball\\u2019s value is negative, the player who bet on that ball must pay that amount to the dealer. The profit of the dealer in a turn is the total amount received minus the total amount paid.\\n\\n                For example, in the figure above, the dealer pays $5.00 for ball numbered \\u22121, pays $7.00 for ball numbered \\u22127, receives $24.00 for ball numbered 12 and does not pay nor receive anything for ball numbered 3. Therefore, in this turn the dealer makes a profit of $12.00 (24 \\u2212 5 \\u2212 7); note that the dealer\\u2019s profit in a turn may be negative (loss).\\n\\n                You will be given the description of the roulette, the description of the balls and the sequence in which the balls are thrown into the roulette. Write a program to determine the maximum profit that the dealer can make in one turn.\",\n    \"id\": 1485,\n    \"input\": \"Input contains several test cases. The first line of a test case contains two integers S and B which indicate respectively the number of slots in the roulette (3 \\u2264 S \\u2264 250) and the number of balls used (1 \\u2264 B \\u2264 floor(S/2)). The second line of a test case contains S integers Xi, indicating the numbers associated to the roulette\\u2019s slots, in clockwise direction (\\u221264 \\u2264 Xi \\u2264 64, for 1 \\u2264 i \\u2264 S). The third line of a test case contains B integers Yi, indicating the numbers associated to the balls (\\u221264 \\u2264 Yi \\u2264 64, for 1 \\u2264 i \\u2264 B), in the sequence the balls are thrown into the roulette (notice it is in this order that they end lodged in the roulette, in clockwise direction). The end of input is indicated by S = B = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Turkish Roulette\",\n    \"output\": \"For each test case in the input your program must write one line of output, containing an integer indicating the maximum profit the dealer can make in one turn.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ricardo Anido, UNICAMP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A biochemical digital circuit (BDC) is an artifact composed of a set of processing nodes. Each processing node is composed of a tiny receptacle for biochemical reagents, made of a biological substrate that acts as a digital electronic chip. Depending on the state of the reaction in the receptacle, the substrate generates two voltage levels. A reader coupled to the BDC is able to perform the reading of all the processing nodes of a BDC in a given instant, interpreting the two voltage levels as 0 or 1.\\n\\n                An experiment with the BDC is performed as follows. The processing nodes are loaded with substances of interest and appropriate reagents and, at every fixed interval of time (typically a few milliseconds), the processing nodes are read. Thus, the experiment results in a sequence of sets (vectors) of bits, each vector representing a measurement of the BDC.\\n\\n                An uninterrupted sequence of bits 1 of a same processing node along the time is called a toothpick. The length of a toothpick is the number of bits 1 that composes it (note that the length of the toothpick of an experiment may vary between one and the number of measurements made). An important feature of an experiment with the BDC is the amount and length of toothpicks generated. The figure below shows the result of an experiment conducted with a BDC of six processing nodes, in which four measurements were made, containing three toothpicks of length one, a toothpick of length two and one toothpick of length four.\\n\\n                \\u200b\\n\\n                You've been hired to write a program to determine, given the outcome of an experiment, how many toothpicks of length equal to or greater than a certain value were generated.\",\n    \"id\": 1486,\n    \"input\": \"The input contains several test cases. The first line of a test case contains three integers P, N and C respectively that indicates the number of processing nodes (1 \\u2264 P \\u2264 1000), the number of measurements made (1 \\u2264 N \\u2264 1000) and the minimum length of toothpicks of interest (1 \\u2264 C \\u2264 N). Each of the next N lines contains sequences P digits {0, 1}, separated by a space. The end of input is indicated by P = N = C = 0.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Biochemical Digital Circuit\",\n    \"output\": \"For each test case in the input your program must produce one line of output, containing the number of toothpicks of length greater than or equal to C produced by the experiment.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"IX Maratona de Programa\\u00e7\\u00e3o IME-USP  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Six Flags Fiesta Texas is one of the biggest amusement parks of the world and it is located in San Antonio. Since the ACM-ICPC World Finals of 2006 are going to be held there, three friends started to plan which of the famous rides of the park they would go to in case their team was classified to the finals.\\n\\n                They decided to establish grades for each one of the rides according to their desire to go there. For example, the \\\"Superman Krypton Coaster\\\" roller coaster (which goes through 800m of twists, turns and spirals over the speed of 100km/h) received the highest score between the friends.\\n\\n                The problem entails on the impossibility of visiting every ride on the park in only one day. Thus, the friends investigated, for each attraction, how long did the ride last (and how much time in the line till you get to it...). Your task is to find, giving the time available by the three pals, a collection (there may be repetitions) of rides that amounts to the highest score in the given time.\",\n    \"id\": 1487,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers 0 \\u2264 N \\u2264 100 e 0 \\u2264 T \\u2264 600, in which N is the number of rides that the friends would like to go to and T is the time (in minutes) available for this. The next N lines contain two integers 0 \\u2264 D \\u2264 600 e 0 \\u2264 P \\u2264 100 (in each line). The first one, D, represents the the duration of the ride (time spent in the line and moving from one ride to another are included). P represents the score given by the friends. The end of the input is indicated then the value of N = 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Six Flags\",\n    \"output\": \"For each of the test case in the input, your program must print a line using an identifier Instancia H, in which H is an ascending and sequential integer starting from 1. The following line must contain the total score of the collection determined by your program. Regarding which rides of the collection would be chosen, the friends decided they would ask you in the future, since they didn't want people to know and decide to use it. A blank line must be printed after each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"VII Maratona de Programa\\u00e7\\u00e3o IME-USP  Brasil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\\"Os n\\u00fameros sempre desempenharam um papel de acentuado relevo n\\u00e3o s\\u00f3 nos altos campos da F\\u00e9 e da Verdade, como no hum\\u00edlimos terreiros da Supersti\\u00e7\\u00e3o e do Erro.\\\" (Prof. Mar\\u00e3o)\\n\\n                Malba Tahan, in his classic \\\"The Man Who Counted\\\", tells a tale of superstition involving the quadripartite numbers. Little did he know that centuries before the ancient Czech civilization superstition surrounding the quadripartite numbers was already present. In the antiquity, an important community living around Neratovice, used the properties of the quadripartite numbers to predict the future, baptize children and even to choose their leaders.\\n\\n                An integer n is quadripartite if there is some division of that number in four parcels integer (p1 + p2 + p3 + p4 = n) and an magical operator (m) so that the first portion added to the magical operator, the second reduced by it, the third multiplied by it and the fourth divided by it gives the same result (p1 + m = p2 \\u2212 m = p3 * m = p4 / m).\\n\\n                Thus, 128 is quadripartite because we can divide 128 into four parts (31, 33, 32 and 32) so that exists a magical operator (in this case, 1) that makes p1 + m, p2 \\u2212 m, p3 * m e p4 / m equal. In fact: 31 + 1 = 33 - 1 = 32 * 1 = 32 / 1 = 32.\\n\\n                A group of researchers from Prague is reconstructing the past of Neratovice, and asked for your help. They want you to make a program that identifies when a number is quadripartite or not and what is the magic operator associated do it.\",\n    \"id\": 1488,\n    \"input\": \"Each line of the input contains an integer n (0 \\u2264 n \\u2264 500000) that your program should analyze and classify as quadripartite or not. The value n = 0 corresponds to the end of the input file and should not be processed.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Magic Numbers?\",\n    \"output\": \"For each value of the input, your program should print an identifier Instancia h, where h is an integer, and increasing sequentially from 1. On the next line, separated by a blank space, the five numbers that prove the quadripartite condition when n is quadripartite. Follow the order: m p1 p2 p3 p4.\\n\\n                If n is not quadripartite, your program should print the message n nao e quadripartido. In the first case, it is possible that there is more than one sequence that meets the conditions. If this occurs, your program should choose the one with the highest possible value for m.\\n\\n                A blank line should separate the output of each instance.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"X Maratona de Programa\\u00e7\\u00e3o IME-USP  Brasil\",\n    \"category\": \"Graph\",\n    \"description\": \"Wander Vega is an experienced project manager in a large system development enterprise. He recently read in the renowned scientific journal Best Practices the results of a survey indicating that some aspects of agile development methodologies can be applied in large teams in order to increase productivity. He was surprised to find that one of these aspects is the pair programming, where two developers work together using the same computer. Eager to impose changes that are noted by the directorate, Wander decided to adopt pair programming in the next big project that he will manage. But like any good software engineer, Wander wants to optimize this process. He decided that he will use fixed pairs of developers. Also it will allocate the pairs of programmers beforehand.\\n\\n                But Wander is not willing to take unnecessary risks, and will only allow the composition of pairs of developers that have acceptable levels of productivity, communication and interaction capabilities in joint. If this is not possible, Wander will put his next project's developers your in a warm room, with several snacks, soft drinks and a computer, and apply the techniques of extreme programming in order to make the development of the system viable.\\n\\n                By evaluating his chances he realized that his plan would be reusable in other projects if he had a program to verify the feasibility of pair programming in his company. At that moment he was thinking of you, i.e. the newest intern, to write a program that solves this problem. Wander did a thorough requirements analysis and arrived at the following specification that your program must follow.\",\n    \"id\": 1489,\n    \"input\": \"The first line of the input contains a number k, which indicates the number of instances. Each instance consists of a line containing an integer 2 \\u2264 n \\u2264 100, the number of professional developers, followed by n lines. The i-th line starts with a number p, indicating the number of people with which i-th programmer productivity is acceptable, and is followed by p integers, each between 1 and n, indicating such partners.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Software Engineering\",\n    \"output\": \"The program should print a line with each instance Instance i, where i is the number of i-th instance. The next line should contain the expression pair programming if what Wander proposed is feasible. Otherwise, print the expression extreme programming. After each instance, your program should print a blank line.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Por Pablo Ariel Heiber  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"Chess inspired problems are a common source of exercises in algorithms classes. Starting with the well known 8-queens problem, several generalizations and variations were made. One of them is the N-rooks problem, which consists of placing N rooks in an N by N chessboard in such a way that they do not attack each other.\\n\\nProfessor Anand presented the N-rooks problem to his students. Since rooks only attack each other when they share a row or column, they soon discovered that the problem can be easily solved by placing the rooks along a main diagonal of the board. So, the professor decided to complicate the problem by adding some pawns to the board. In a board with pawns, two rooks attack each other if and only if they share a row or column and there is no pawn placed between them. Besides, pawns occupy some squares, which gives an additional restriction on which squares the rooks may be placed on.\\n\\nGiven the size of the board and the location of the pawns, tell Professor Anand the maximum number of rooks that can be placed on empty squares such that no two of them attack each other.\",\n    \"id\": 1490,\n    \"input\": \"The input contains many test cases and ends with EOF.\\u00a0The \\ufb01rst line of a test case contains an integer N (1 \\u2264 N \\u2264 100) representing the number of rows and columns of the board. Each of the next N lines contains a string of N characters. In the i-th of these strings, the j-th character represents the square in the i-th row and j-th column of the board. The character is either \\u201c.\\u201d (dot) or the uppercase letter \\u201cX\\u201d, indicating respectively an empty square or a square containing a pawn.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Attacking Rooks\",\n    \"output\": \"For each test case, print a line with an integer representing the maximum number of rooks that can be placed on\\nthe empty squares of the board without attacking each other.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"By Pablo Heiber,  Fidel Schaposnik e Rafael Garcia  Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"Benjamin\\u2019s granddaughter Brenda has a blog where she posts articles about school, friends and other life issues. Intrigued by her opinions, Benjamin tried to read it, but very soon he realized it was too hard to read because of Brenda\\u2019s writing quirks.\\n\\nBrenda writes without spaces or punctuation marks, and moreover, she uses lower and uppercase letters in a liberal and strange way. For example, one of her posts is \\u201cPrOgRAMmINgiSgrEAt\\u201d. Benjamin has trouble noticing the words \\u201cprogramming\\u201d, \\u201cis\\u201d and \\u201cgreat\\u201d when they are written in this way.\\n\\nTo improve his understanding Benjamin decided to do the following: he will first choose a particular string T and a blog post he is interested in; then he will select a contiguous substring of the post and search for T within the substring, in a case-insensitive way; for each occurrence of T within the substring, he will calculate the number of case mismatches, and finally he will obtain the maximum among all these values. For example, if Benjamin chooses \\u201cGR\\u201d as T and then selects the substring \\u201cPrOgRAM\\u201d, he would find a single occurrence \\u201cgR\\u201d for which the number of case mismatches is 1. For the same substring, if \\u201cr\\u201d was chosen as T, he would have found two occurrences, \\u201cr\\u201d with 0 mismatches and \\u201cR\\u201d with 1 mismatch, so the maximum number of mismatches would be 1.\\n\\nTo complicate things further, Brenda included in the blog a script that, after operating with a substring selection, flips the case of all the selected letters. This means that after selecting \\u201cPrOgRAM\\u201d and proceeding as explained above, the sample post would read \\u201cpRoGrammINgiSgrEAt\\u201d. If Ben- jamin selects \\u201cammINgi\\u201d as a second substring, after calculating his result the post would be left as \\u201cpRoGrAMMinGISgrEAt\\u201d, accumulating both flips.\\n\\nYou will be given the string T and the original text of the blog post chosen by Benjamin. You will also be given a list of substring selections Benjamin made, in the order he made them. You need to calculate, for each selection, the maximum number of case mismatches of the occurrences of T in the selected part, considering all the case flips made by previous selections. Notice that the flipping of the case occurs after calculating the result for each selection.\",\n    \"id\": 1491,\n    \"input\": \"The input contains many test cases and ends with EOF. The \\ufb01rst line of a test case contains an integer N (1 \\u2264 N \\u2264 105 ) and a non-empty string T of at most 5 letters, representing respectively the number of substring selections and the string to search for. The second line contains a non-empty string P of at most 105 letters, indicating the original text of the blog post. Positions of the post are numbered with consecutive integers from left to right, being 1 the leftmost position and |P| the rightmost position. Each of the next N lines describes a substring selection with two integers L and R (1 \\u2264 L \\u2264 R \\u2264 |P|) indicating that the substring starts at position L and ends at position R, inclusive.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Blogger Language\",\n    \"output\": \"For each test case print N lines, each of them containing an integer. In the i-th line write the maximum number of case mismatches of the occurrences of T in the i-th substring selection, considering all the case \\ufb02ips made by previous selections; if no such occurrence exists write the value \\u22121.\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"By Jesus Alejandro Pe\\u00f1a Mesias  Peru\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Carl is right now the happiest child in the world: he has just learned this morning what the binary system is. He learned, for instance, that the binary representation of a positive integer k is a string anan\\u22121 \\u00b7 \\u00b7 \\u00b7 a1a0\\u00a0where each\\u00a0ai\\u00a0is a binary digit\\u00a00 or\\u00a01, starting with an = 1, and such that k= \\u03a3ni=0 ai \\u00d7 2i. It is really nice to see him turning decimal numbers into binary numbers, and then adding and even multiplying them.\\n\\nCaesar is Carl\\u2019s older brother, and he just can\\u2019t stand to see his little brother so happy. So he has prepared a challenge: \\u201cLook Carl, I have an easy question for you: I will give you two integers A and B, and you have to tell me how many 1\\u2019s there are in the binary representation of all the integers from A to B, inclusive. Get ready\\u201d. Carl agreed to the challenge.\\n\\n After a few minutes, he came back with a list of the binary representation of all the integers from 1 to 100. \\u201cCaesar, I\\u2019m ready\\u201d. Caesar smiled and said: \\u201cWell, let me see, I chooseA = 1015 and B = 1016. Your list will not be useful\\u201d\\n\\nCarl hates loosing to his brother so he needs a better solution fast. Can you help him?\",\n    \"id\": 1492,\n    \"input\": \"The input consists of many test cases and ends with EOF. Each test case consist in a single line that contains two integers A and B (1 \\u2264 A \\u2264 B \\u2264 1016).\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Counting Ones\",\n    \"output\": \"For each test case, print a line with an integer representing the total number of digits 1 in the binary representation of all the integers from A to B, inclusive.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Jesus Alejandro Pe\\u00f1a Mesias  Peru\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Nlogonia is a queendom that consists of several cities located on a big mountain. The capital city\\u00a0is Logville, located on the mountain peak. Logville has a huge lake with a perfectly round shape,\\u00a0appropriately named \\u201cThe Big O\\u201d. This is the only lake with drinkable water in the entire queendom,\\u00a0so it is used to supply all cities. Some cities in Nlogonia are connected with water pipes that allow\\u00a0the distribution of the water. As\\u00a0there are no pumps, each pipe carries water from a city to another\\u00a0city at a lower altitude, using gravity.\\u00a0Nlogonia\\u2019s water system has been a source of worries for the Queen, because since cities depend\\u00a0on other cities for their water supply, hot discussions occur about how much water a city is allowed\\u00a0to use. A water supply path is a sequence of cities in decreasing order of altitude, starting in Logville\\u00a0and such that there is a pipe connecting each pair of consecutive cities in the sequence. Two cities\\u00a0have Disjoint Water Supply if and only if there exist two water supply paths, one supply path ending in\\u00a0each of the cities, such that Logville is the only city that is present in both paths. Notice that Logville\\nitself has Disjoint Water Supply with every other city.\\u00a0The Queen considers Disjoint Water Supply a nice property because it reduces dependency problems\\u00a0and also avoids water outages to spread as quickly through Nlogonia. She therefore ordered a survey\\u00a0to assess the current state of water supply disjointness in the whole queendom. Being the cleverest\\u00a0advisors in the Queen\\u2019s court, you have been summoned to help calculate the number of pairs of\\u00a0distinct cities that have Disjoint Water Supply.\\u00a0\",\n    \"id\": 1493,\n    \"input\": \"The input consists of many test cases and ends with EOF. The first line contains two integers C (2 \\u2264 C \\u2264 1000) and\\u00a0P (1 \\u2264 P \\u2264 105), representing\\u00a0respectively the number of cities and the number of water pipes in Nlogonia. Cities are identified with\\u00a0different integers from 1 to C, in strictly decreasing order of altitude (no two cities have the same\\u00a0altitude); Logville is city 1. Each of the next P lines describes a pipe with two integers U and V (1 \\u2264 U <V \\u2264 C) indicating that the pipe connects city U with city V. You may assume that no two\\u00a0pipes connect the same pair of cities, and that for each city in Nlogonia there is at least one water\\u00a0supply path that ends in it.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Disjoint Water Supply\",\n    \"output\": \"For each test case, print a line with an integer representing the number of pairs of distinct cities that have Disjoint Water Supply.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"In this problem, we refer to the digits of a positive integer as the sequence of digits required to write it in base 10 without leading zeros. For instance, the digits of N = 2090 are of course 2, 0, 9 and 0. Let N be a positive integer. We call a positive integer M an eleven-multiple-anagram of N if and only if (1) the digits of M are a permutation of the digits of N, and (2) M is a multiple of 11. You are required to write a program that given N, calculates the number of its eleven-multiple-anagrams. As an example, consider again N = 2090. The values that meet the first condition above are 2009, 2090, 2900, 9002, 9020 and 9200. Among those, only 2090 and 9020 satisfy the second condition, so the answer for N = 2090 is 2.\",\n    \"id\": 1494,\n    \"input\": \"The input consists of many test cases and ends with EOF. Each test case is composed by a single line that contains an integer\\u00a0N (1 <= N <= 10^100).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Eleven\",\n    \"output\": \"For each test case, print a line with an integer representing the number of eleven-multiple-anagrams of N. Because this number can be very large, you are required to output the remainder of dividing it by 109 + 7.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Leopoldo Taravilse  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Your favorite football team is playing a charity tournament, which is part of a worldwide fundraising\\neffort to help children with disabilities. As in a normal tournament, three points are awarded to the\\nteam winning a match, with no points to the losing team. If the game is drawn, each team receives\\none point.\\nYour team played N matches during the first phase of the tournament, which has just finished.\\nOnly some teams, the ones with more accumulated points, will advance to the second phase of the\\ntournament. However, as the main objective of the tournament is to raise money, before the set of\\nteams that will pass to the second phase is determined, each team is allowed to buy additional goals.\\nThese new goals count as normally scored goals, and may be used to alter the result of any of the\\nmatches the team played.\\nYour team\\u2019s budget is enough to buy up to G goals. Can you tell the maximum total number of\\npoints your team can get after buying the goals, supposing the other teams will not buy any goals?\",\n    \"id\": 1495,\n    \"input\": \"The input consists of many test cases and ends with EOF. The first line of each test case contains two integers N (1 \\u2264 N \\u2264 105) and G (0 \\u2264 G \\u2264 106) representing respectively the number of matches your team played and the number of goals your team can buy. Each of the next N lines describes a match result with two integers S and R (0 \\u2264 S, R, \\u2264 100), indicating respectively the goals your team scored and received on that match before buying goals.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Football\",\n    \"output\": \"For each test case, print a line with an integer representing the maximum total number of points your team can get after buying the goals.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Guilherme Albuquerque Pinto  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The topographic prominence of a peak is a measure of special interest to mountain climbers and can\\nbe defined as follows: the prominence of a peak p with altitude h, relative to the sea level, is the\\ngreatest d such that any path on the terrain from p to any strictly higher peak will pass through a\\npoint of altitude h \\u2212 d. If there is no strictly higher peak, then the prominence is h itself. Those\\npeaks with topographic prominence greater than or equal to 150000 centimeters (precision is of great\\nimportance to climbers!) have a special name: they are called \\u201cUltras\\u201d.\\nYou have to write a program that identifies all the Ultras that occur in a two dimensional profile\\nof a mountain range represented as a sequence of points. Note that the horizontal distance between\\npoints is not important; all that you need is the altitude of each point. In the picture below, the Ultras\\nare the points 7, 12, 14, 20 and 23.\",\n    \"id\": 1496,\n    \"input\": \"The input contains many test cases and ends with EOF. The first line of each test case contains an integer N (3 \\u2264 N \\u2264 105) representing the number of points in the profile.\\nThe second line contains N integers Hi indicating the altitudes (in centimeters) of the points, in the order in which they appear in the profile (0 \\u2264 Hi \\u2264 106 for i = 1, 2, . . . ,N). Consecutive points have different altitudes (Hi != Hi+1 for i = 1, 2, . . . ,N \\u2212 1), while the first and the last points are at sea level (H1 = HN = 0). You may assume that the profile contains at least one Ultra.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Go up the \\\"Ultras\\\"\",\n    \"output\": \"For each test case, print a line with the indices of all the Ultras in the mountain range, in the order in which they appear in the profile.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber  Argentina\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"In a playground, a group of kids is playing Hide and Seek. As the name suggests, the game is about kids hiding and seeking other kids. Each kid is either a hiding kid or a seeking kid. Hiding kids are kids that just try not to be found, while seeking kids are kids that try to find (hiding and seeking) kids. As You may note, both hiding and seeking kids try not to be found, and for doing this they use some walls that there are in the playground. Each wall is represented by a line segment and each kid is represented by a point in the XY plane. Two kids see each other if and only if the line segment between them does not intersect any wall segment. Your task is to calculate how many other kids each seeking kid can see. To simplify the problem, You may assume that walls do not intersect even at their endpoints. Moreover, no three points are collinear within the set formed by kids and endpoints of walls; this implies that kids are not inside walls, and that no two kids have the same location.\",\n    \"id\": 1497,\n    \"input\": \"The input contains many test cases and ends with EOF. For each test case, the first line contains three integers S, K and W representing respectively the number of seeking kids, the total number of kids and the number of walls in the playground (1 \\u2264 S \\u2264 10; 1 \\u2264 K, W \\u2264 104 and S \\u2264 K). Each of the next K lines describes a kid with two integers X and Y (\\u2212106 \\u2264 X, Y \\u2264 106 ), indicating that the location of the kid in the XY plane is the point (X, Y ); the first S of these lines describe seeking kids. Each of the next W lines describes a wall with four integers X1, Y1, X2 and Y2 (\\u2212106 \\u2264 X1, Y1, X2, Y2 \\u2264 106 ), indicating that the two endpoints of the wall in the XY plane are (X1, Y1) and (X2, Y2). You may assume that wall segments do not intersect and no three points given in the input are collinear.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Hide and Seek\",\n    \"output\": \"For each test case, print S lines, each of them containing an integer. In the i-th line write the number of other kids the i-th seeking kid can see.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Leopoldo Taravilse  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"Static Huffman coding is an encoding algorithm used mainly for text compression. Given a text of certain size made of N different characters, the algorithm chooses N codes, one for each different character. The text is compressed using these codes. To choose the codes, the algorithm builds a binary rooted tree having N leaves. For N \\u2265 2 the tree can be built as follows.\\n1. For each different character in the text build a tree containing just a single node, and assign to it a weight coincident with the number of occurrences of the character within the text.\\n2. Build a set s containing the above N trees.\\n3. While s contains more than one tree:\\n(a) Choose t1 \\u2208 s with minimum weight and remove it from s.\\n(b) Choose t2 \\u2208 s with minimum weight and remove it from s.\\n(c) Build a new tree t with t1 as its left subtree and t2 as its right subtree, and assign to t the sums of the weights of t1 and t2.\\n(d) Include t into s.\\n4. Return the only tree that remains in s.\\nFor the text \\u201cabracadabra\\u201d, the tree produced by the above procedure can look like the one on the left of the following picture, where each internal node is labeled with the weight of the subtree rooted at that node. Notice that the obtained tree can also look like the one on the right of the picture, among others, because at steps 3a and 3b the set s may contain several trees with minimum weight.For each different character in the text, its code depends on the path that exists, in the final tree, from the root to the leaf corresponding to the character. The length of the code is the number of edges in that path (which is coincident with the number of internal nodes in the path). Assuming the tree on the left was built by the algorithm, the code for \\u201cr\\u201d has length 3 while the code for \\u201cd\\u201d has length 4.\\n\\n\\t\\n\\nYour task is, given the lengths of the N codes chosen by the algorithm, find the minimum size (total number of characters) that the text can have so as the generated codes have those N lengths.\",\n    \"id\": 1498,\n    \"input\": \"The input contains many test cases and ends with EOF. The first line of each test case contains an integer N (2 \\u2264 N \\u2264 50) representing the number of different characters that appear in the text. The second line contains N integers Li indicating the lengths of the codes chosen by Huffman algorithm for the different characters (1 \\u2264 Li \\u2264 50 for i = 1, 2, . . . ,N). You may assume that there exists at least one tree, built as described, that produces codes with the given lengths.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Inverting Huffman\",\n    \"output\": \"For each test case, print a line with an integer representing the minimum size (total number of characters) that the text can have so as the generated codes have the given lengths.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Fidel Schaposnik  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"The kingdoms of Nlogonia and Quadradonia fought a long and terrible war that historians have come to call Almost Completely Meaningless (ACM) because nobody can now remember why it started.\\nWhen the ACM war finally ended, the two kingdoms decided to strengthen their bonds in order to avoid more bloodshed, and for this reason they consulted the International Consortium for the Prevention of Conflicts (ICPC). The ICPC recommended building a single road to connect a city in Nlogonia with a city in Quadradonia, thus allowing commercial and cultural exchange between the two.\\nNlogonia and Quadradonia have N and Q cities respectively. The road system of each kingdom consists of a set of bidirectional roads that join pairs of different cities in the same kingdom, such that there is a unique path (i.e. sequence of consecutive roads) that one can take to go from any city in a kingdom to any other city in the same kingdom. The \\u201csize\\u201d of such a road system is defined as the maximum number of roads that one must take in order to travel between any pair of cities.\\nBecause the ICPC did not specify which two cities should be connected by the new road joining the two kingdoms, the citizens are now worried that the size of the combined road system might be too large. In order to prevent a second ACM war, you would like to convince them that this is not the case, and to this end you need to calculate the expected size of the resulting road system assuming that all possible roads between the two kingdoms are equally likely to be built.\",\n    \"id\": 1499,\n    \"input\": \"The input contains many test cases and ends with EOF. The first line of each test case contains two integers N and Q representing the number of cities in each of the two kingdoms (1 \\u2264  N,Q  \\u2264 4 \\u00d7 104). Cities in Nlogonia are identified with different integers from 1 to N, while cities in Quadradonia are identified with different integers from 1 to Q. Each of the next N \\u2212 1 lines describes a road in Nlogonia with two distinct integers A and B indicating that the road connects city A with city B (1 \\u2264  A, B \\u2264  N). Each of the next Q\\u22121 lines describes a road in Quadradonia with two distinct integers C and D indicating that the road connects city C with city D (1 \\u2264  C, D \\u2264  Q).\\nThe road system of each kingdom is such that there is exactly one path between each pair of cities in the kingdom.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Join Two Kingdoms\",\n    \"output\": \"For each test case, print a line with a rational number representing the expected size of the road system after the two kingdoms have been joined, considering that all possible roads connecting them are equally likely to be built. The result must be output as a rational number with exactly three digits after the decimal point, rounded if necessary.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Iqram Mahmud  Bangladesh\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"World is getting more evil and it's getting tougher to get into the Evil League of Evil. Since the legendary Bad Horse has retired, now you have to correctly answer the evil questions of Dr. Horrible, who has a PhD in horribleness (but not in Computer Science). It's given to you an array of\\u00a0N\\u00a0elements, which are initially all 0. After that you will be given\\u00a0C\\u00a0commands. They are:\\n\\n\\n\\t0 p q v - you have to add v to all numbers in the range of p to q (inclusive), where p and q are two indexes of the array.\\n\\t1 p q - output a line containing a single integer which is the sum of all the array elements between p and q\\u00a0(inclusive).\",\n    \"id\": 1500,\n    \"input\": \"In the first line you'll be given T, number of test cases.\\n\\nEach test case will start with N (N\\u00a0\\u2264 100 000) and C (C\\u00a0\\u2264 100 000). After that you'll be given C commands in the format as mentioned above (1 \\u2264 p, q \\u2264 N and 1 \\u2264 v \\u2264 107).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Horrible Queries\",\n    \"output\": \"Print the answers of the queries as the output sample.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Shahriar Manzoor,   SEU  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Given a decimal integer number you will have to find out how many trailing zeros will be there in its factorial in a given number system and also you will have to find how many digits will its factorial have in a given number system? You can assume that for a b based number system there are b different symbols to denote values ranging from 0 ... b-1.\",\n    \"id\": 1501,\n    \"input\": \"There will be several lines of input. Each line makes a block. Each line will contain a decimal number N (a 20 bit unsigned number) and a decimal number B (1 < B \\u2264 800), which is the base of the number system you have to consider. As for example 5! = 120 (in decimal) but it is 78 in hexadecimal number system. So in Hexadecimal 5! has no trailing zeros.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"How Many Zeros and How Many Digits?\",\n    \"output\": \"For each line of input output in a single line how many trailing zeros will the factorial of that number have in the given number system and also how many digits will the factorial of that number have in that given number system. Separate these two numbers with a single space. You can be sure that the number of trailing zeros or the number of digits will not be greater than 231-1.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By VC++, Col\\u00e9gio Etapa  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Twilight and her friends are trying to stop Discord from creating chaos. While they were walking through a very long corridor on their way to Canterlot, they ran into a deathly laser maze that blocked their way!\\n\\nThe corridor has width W. The laser maze consists of N wards powered with some non-negative energy Pi. Each ward is capable of creating a square of deathly lasers centered at the ward, with length equal to twice the square of its energy, and a pair of sides parallel to the walls of the corridor. Note that squares can overlap each other, and that there can be more than one ward at a single position.\\n\\nTwilight plans to use her magic to change the wards\\u2019 energy to some non- negative integers so that it becomes possible to safely reach the other side of the corridor and continue their journey without being noticed. Turning off every ward could look suspicious, so Twilight decided to modify each ward\\u2019s energy so that the crossing is possible and the absolute difference of the total energy of the system before and after the crossing is minimal.\\n\\n\\n\\nSince changing the energies of the wards while her friends are crossing might be dangerous, Twilight decides to make every modification beforehand, and she will not make any other changes during or after the crossing, as they don\\u2019t have much time left.\\n\\nHelp Twilight to complete her quest by finding the minimum possible absolute difference of the sum of the energies of the starting and ending configurations of the maze.\",\n    \"id\": 1502,\n    \"input\": \"The input contains many test cases. Each test case starts with a line containing two integers W and N (1 \\u2264 W \\u2264 1000, 1 \\u2264 N \\u2264 15). Following this are N lines, each containing three integers Xi, Yi and Pi, describing the position and initial energy of each ward (0 \\u2264 Xi \\u2264 W, 0 \\u2264 Yi \\u2264 1000, 0 \\u2264 Pi. The walls of the corridor are located at x = 0 and x = W. The last test case is followed by a line containing two zeroes.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Corridor Crossing\",\n    \"output\": \"For each test case, print a single line containing the minimum possible absolute difference between the sum of the energies of the starting and ending positions of the maze.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Jonathan Carvalhosa, IME (Instituto Militar de Engenharia)  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Master Yoda has intercepted secret messages from the dark side of the force.\\n\\nHe is sure that all the messages have the same valuable piece of information that can help the Jedi against the Sith\\n\\nBesides, he knows that the information he seeks is a palindrome.\\n\\nHowever, he can`t find it because the messages are too big. That`s why he needs your help.\\n\\nYou have to build a program to find the length of the largest common palindrome of all the messages that Master Yoda intercepted.\",\n    \"id\": 1503,\n    \"input\": \"The input consists of many test cases and ends with EOF. The first line of each test case contains a single positive integer n (n <= 10), the number of messages Master Yoda intercepted\\n\\nThe next n lines contain the messages, consisting only of between 1 and 50000 lowercase english letters ('a' - 'z')\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Largest Common Palindrome Must You Find\",\n    \"output\": \"For each test case, the output is a single integer, the length of the longest common palindrome of all messages\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Jesus Figueroa, PUCP  Peru\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Curo, the mayor of Curoland, wants to build a railroad that allows a better transport for the citizens. The railroad will be a straight line that will go through the city and it will divide it in two regions. Curo wants the same number of houses in each side of the railroad and it must not pass through a house. Also, to be fair with the citizens of each region, the sum of the distances of the houses to the railroad of each region have to be the same.\\n\\nThe only problem is that Hailo, the lead engineer of the city, doesn't know if it's possible to build a railroad with the constraints given by Curo. Help him with his task.\",\n    \"id\": 1504,\n    \"input\": \"The input contains many test cases and ends with EOF. In the first line of the input is the number N. Then follows N (1 < N <= 100000) lines, the i-th line contains a pair Xi, Yi (-1000 <= Xi, Yi <= 1000) that are the coordinates of the house i.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Curo Railroad\",\n    \"output\": \"For each test case, your program has to print YES if exists such a railroad, and NO if there is not possible to build it.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"By Andre Quispesaravia, PUCP  Peru\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Here in Curoland are N factories that are identified by the numbers from 0 to n-1. The ith factory pays Ci coins each day to the people working there.\\u00a0 Initially, there are one worker in every factory. The workers want to save some coins for their vacations, the worker that initially was in the ith factory wants to save Ai coins.\\n\\nLittle Curo, the mayor of Curoland, wants some job rotation in factories so they don't become bored of their jobs. That's why every day, after the factories pays they workers for their job, the workers in the ith Factory have to move to the Gi Factory.\\n\\nLittle Curo wants to know the minimum number of days he have to wait until every worker have saved enough for their vacations. Because that day he will give a big party for them.\",\n    \"id\": 1505,\n    \"input\": \"The input is composed of 4 lines. In line 1 there is a number N. The lines 2 to 4 have N numbers. The i-th number of the line 2 is Gi (0 < Gi < N), the i-th number of the line 3 is Ci (0 < Ci <= 10) and the i-th number of the line 4 is Ai (0 < Ai < 107)\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Curo Factories\",\n    \"output\": \"The program has to print the minimum number of days little Curo has to wait until every worker have saved enough.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"By Bugs, Lucas y Coyote  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Rabito and Rayito are playing a nice game. They start with a weighted bidirectional connected graph (all weights are positive) and a set of K bones placed on some of the vertices.\\n\\n                    They start taking turns with Rabito playing first. The game consists of moving the bones through the graph towards the vertex 1. On a turn one the players takes a subset of at least 1 and at most P of the bones (that have not reached the vertex 1) and moves these bones through one or more of the edges of the graph (the bones' moves are independent of each other) subject to this condition: he may use a particular edge for a bone if it makes that bone eventually reach the vertex 1 using the least possible amount of time (it takes A units of time to move a bone through and edge of weight A) and if the edge makes this bone eventually reach the vertex 1 using the largest amount of edges.\\n\\n                    There's a huge bone waiting for the winner of the game, so your task is to decide which of the two dogs will triumph on this game and have a nice meal (assuming both of the dogs play with an optimal strategy). The loser of the game is, of course, the dog that cannot make a move.\",\n    \"id\": 1506,\n    \"input\": \"The first line contains a single integer T (T <= 100) the number of test cases. The description of T test cases follows. A test case begins with a line containing two integers N, M (1 <= N <= 100, 1 <= M <= 2000) denoting the number of vertices and edges of the graph, then follow M lines each with three integers u, v, w (1 <= u, v <= N) (0 < w <= 1000000) representing the vertices of the i-th edges and its weight. Then a line with two integers K (0 < K <= 1000) and P (0 < P) denoting the number of bones initially placed on the graph and the parameter P as described in the problem statement. Finally a single line containing K integers describing the initial positions of the K bones.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Rabito and Bones\",\n    \"output\": \"Output T lines, one for each test case. If Rabito has a strategy that will guarantee his victory output \\\"Yes\\\", otherwise output \\\"No\\\".\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Rigel Bezerra de Melo, Universidade Federal de Campina Grande  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Given two sequences, decide if the later is a subsequence of the first one.\",\n    \"id\": 1507,\n    \"input\": \"Input starts with an integer N (0 < N <= 10), representing the number of test cases. Then there are the description of the N test cases. Each test case starts with a sequence S (S in [a-zA-Z], 0 < |S| < 100000) and an integer Q (0 < Q <= 1000), the number of queries. The next Q lines describes each the second sequence R (R in [a-zA-Z], 0 < |R| < 100).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Subsequences\",\n    \"output\": \"For each querie R, print \\\"Yes\\\" (no quotes) if R is a subsequence of S, or \\\"No\\\" (no quotes) otherwise.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Maratona Ver\\u00e3o  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Once upon a time, there were N points on a plane with distinct integer coordinates. They used to live in perfect peace until a savage, unearthly laser device appeared. This huge machine emits a powerful laser beam that will kill every point lying inside its range.\\n\\nMore specifically, the laser range is a rectangle with infinite height but limited width, which can assume any positive value less than or equal to W. Fortunately, the beam can be fired only vertically or horizontally (i.e, parallel to Ox or Oy axis). Any point located within the beam area (including its borders) is immediately burned.\\n\\nThe poor points are worried about which of them are going to get killed. Calculate the number of different non-empty subsets of points the laser can burn by firing a single beam. Two subsets are considered different if there is a point which belongs to one of them but not to the other.\",\n    \"id\": 1508,\n    \"input\": \"The input contains many test cases and ends with EOF. Each test case is described using several lines. The first line contains two integers N and W (1 <= N <= 103 , 1 <= W <= 109) representing respectively the number of points and the maximum width of the laser beam. Each of the next N lines specifies the coordinates xi , yi of the i-th point (0 <= xi, yi <= 109).\\n\\nThe last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Laser Beam\",\n    \"output\": \"For each test case output a line with the number of different non-empty subsets of points which can be killed.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Gabriel Poesia, UFMG  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"While coming to this training camp by bus, one attentious contestant noted a sign that had an advertisement with a website URL that read www.programs.healthyfood.ma(he suspects that the .ma stands for \\\"Mars\\\", but that seems unlikely). Because he was discussing the new features of C++11 with a friend in that moment, he thought the \\\"programs\\\" in the URL was related to the result of computer programming. However, it turns out the URL was unfortunate:it was actually the concatenation of two words: the adjective \\\"pro\\\", which means \\\"in favor of\\\",and the noun \\\"grams\\\", which is the plural of a kind of legume used as food. That explains thefact that the URL lead the contestant and his friend to a Web page contanining pictures of healthywomen instead of tutorials about variadic templates!\\n\\n After laughing at what happened, the two friends are now curious about those ambiguities in URLs.They started looking at every sign on the road and writing down the URLs they contain. But, as amatter of fact, they had too many URLs to verify - considerably more than what a computer programmeraccepts doing by hand. Because of that, they want to write a program that, given the list of wordsthey know, counts in how many ways a certain word can be obtained by concatenating one or more wordsfrom the list.\\n\\n Both of them are very skilled programmers and have already designed the perfect algorithm for this problem.The main problem is that their laptops ran out of battery, and they're not willing to program usingtheir smartphones (there's no Internet access on the roads to access a computer with a compiler remotely). Because you're sitting nearby and your laptop still has battery power for more than 10 minutes (enough, isn't it?) of programming, they asked you to write the program for them. Of course, they didn't tell you the algorithm because they count on your problem-solving skills. Can you write such program for them?\\n\\n Note that one word can be used several times in the concatenation process. For example, if the friends know the words\\\"a\\\" and \\\"aa\\\", they can form the word \\\"aaa\\\" in the following 3 ways (here, + means concatenation):\\n\\n\\n\\t\\\"a\\\" + \\\"a\\\" + \\\"a\\\"\\n\\t\\\"a\\\" + \\\"aa\\\"\\n\\t\\\"aa\\\" + \\\"a\\\"\\n\\n\\n Thus, the answer for this case would be 3.\\n\\n On the other hand, there would be 2 ways of forming the word \\\"aa\\\":\\n\\n\\n\\t\\\"a\\\" + \\\"a\\\"\\n\\t\\\"aa\\\"\\n\\n\\n Note that a word can be formed by simply using it, if it is known by the friends.\",\n    \"id\": 1509,\n    \"input\": \"The input contains many test cases and ends with EOF. Each test case starts with a line containing a positive integer D (at most 105), the number of words the friends know. The next D lines contain those words. Each of these lines contains a single distinct word. After that, there's a line with a positive integer U (at most 1000), which is thenumber of words the friends wrote down. Then, U lines follow, each containing one such word.\\n\\n Every word in the input file consists of at most 100 English lowercase letters.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Counting Ambiguities\",\n    \"output\": \"For each test case print U lines. The i-th line in the output should contain thenumber of ways of obtaining the i-th word the friends wrote down by concatenating words from the listof words they know. Because this number can be quite large, print it modulo 109 + 7.\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"By Davi Duarte Pinheiro, UFPE  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Skyrk is now living in an old town, full of ancient tales and wonders to behold. No surprise this town became one of the biggest tourist attractions in the world. Unfortunately, it is rather difficult to move around the town, since it is very old and surrounded by mountains, its streets are narrow, full of turns and ups and downs. But this was rather fortunate for Skyrk, he thought a lot of tourists would rather see the touristic places looking from the top of the mountains instead of adventuring in the old town. He decided to set sightseeing binoculars on some spots of the biggest mountain near the town, and of course, charge for their use.\\n\\nThe town has N touristic places, looking from the mountain, they seem to line up from left to right. Skyrk set up M sightseeing binoculars, each can cover the view from touristic place A up to B and cost C coins to use. A group of tourists arrived to do a sightseeing tour, and they want to see all touristic places paying the minimum price. Skyrk knows in advance the price each tourist is willing to pay for the tour. In order to maximize his profit, he will tell the tourist that only a subset of binoculars are working, so that when the tourist choose the ones he wants, he ends up paying more.\",\n    \"id\": 1510,\n    \"input\": \"The first line contains T (T \\u2264 100) \\u2013 the number of test cases, after this line T test cases follows. Each test case starts with a line with three integers N, M, K (1 \\u2264 N \\u2264 109; 1 \\u2264 M \\u2264 30; 1 \\u2264 K \\u2264 104) \\u2013 the number of touristic places, sightseeing binoculars and groups of tourists, respectively. Then there will be M lines with three integers A, B, C (1 \\u2264 A \\u2264 B \\u2264 N; 1 \\u2264 C \\u2264 10) \\u2013 the first and last touristic place the binocular can see and its price, respectively. Then there is K lines with two integers X, Y (1 \\u2264 X \\u2264 Y \\u2264 109) \\u2013 there will be a group of tourists where the first is willing to pay X, the second X+1, the third X+2 and so on until the last one who is willing to pay Y. Every touristic place can be seen by at least one binocular.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Sightseeing Tour\",\n    \"output\": \"For each test case print a single line with \\\"Case #R: S\\\" where R is the number of the test case (starting from 1) and S is the maximum profit Skyrk can get.\\n\\nConsider the first test case, there are 3 touristic places, 4 binoculars and 2 groups of tourists. The first group of tourists go as follows:The first tourist can pay at most 1 coin. There is no subset Skyrk can choose that satisfy the tourist, so the tourist don't take the tour and pays nothing. The second tourist can pay at most 2 coins, the only choice Skyrk has is to put the binoculars 2 and 4 on the subset, the tourist then chooses binoculars 2 and 4 and pays 2 coins. The third tourist can pay at most 3 coins. Skyrk can put binoculars 1, 2 and 3 on the subset, the tourist then chooses binoculars 2 and 3 and pays 3 coins.The second group of tourists go as follows:The first tourist can pay at most 10 coins. Skyrk can put binoculars 1 and 3 on the subset, the tourist then chooses binoculars 1 and 3 and pays 6 coins.The maximum profit Skyrk can get is 2+3+6 = 11 coins.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Mateus Carvalho Dantas, Federal University of Campina Grande  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Given an infinity grid full of zeros and 'Q' queries of the following types:\\n\\nSET x y d: Set position (x,y) of the grid to integer d.\\n\\nQUERY x y d: Return the gcd (Greatest Common Divisor) of all positions of the grid that are at most 'd' positions away (Manhattan Distance) from position (x,y).\",\n    \"id\": 1511,\n    \"input\": \"The input contains many test cases and ends with EOF. The first line of the each input contains an integer Q (1 <= Q <= 105) that represents the amount of queries to be done.\\n\\nEach one of the following Q lines contains one of the queries bellow:\\n\\nSET x y d\\n\\nQUERY x y d\\n\\n0 <= |x|, |y| <= 500\\n\\n0 <= d <= 106\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"GCD Grid\",\n    \"output\": \"Print all queries for all test cases, one per line. For each query of the type \\\"QUERY x y d\\\", you have to answer on the standard output the gcd (Greatest Common Divisor) of all positions that are at most 'd' positions away from position (x, y).\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Rafael decided to change the tiles from his living room, and for that he made some measurements and bought N white tiles from the store.\\n\\nThe fact that all the tiles are white got Rafael's attention about the design of his living room, and then he decided to paint some of the tiles to give a \\u201cmodern air\\u201d to his house.\\n\\nHe positioned all the N tiles in a straight line, and enumerated all of them from 1 to N, from the left to the right.\\n\\nTo choose which tiles to paint, he thought about the following: Chose two integers A and B, and said he was going to paint all the tiles which enumeration was multiple of A and/or B.\\n\\nHelp Rafael to find out how many tiles are going to be painted at the total.\",\n    \"id\": 1512,\n    \"input\": \"There will be several test cases. Each test case has three integers, N, A and B (3 \\u2264 N \\u2264 10\\u2079, 2 \\u2264 A, B \\u2264 N).\\n\\nThe last test case is indicated when N = A = B = 0, which should not be processed.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Tiles\",\n    \"output\": \"\\u00a0For each test case, print one line containing one integer, representing how many tiles are going to painted.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Rafael liked to play chess so much that he decided to invent new ways to challenge himself. This time, he decided to play with the horse piece, because the way it can move seemed to add a little bit of difficulty to the game, as would say Rafael.\\n\\nThe challenge is as follows: There is a horse and K pawns on the board. Given the initial position of the horse and the pawns, what is the minimum amount of movements necessary to capture the K pawns and return to the initial position?\\n\\nRemember that the horse piece can move using L jumps, in other words, two positions to the vertical and one position to the horizontal, or two positions to the horizontal and one position to the vertical. To capture a pawn, it is enough to occupy the same position as it on the board.\",\n    \"id\": 1513,\n    \"input\": \"There will be several test cases. Each test case begins with three integers N, M and K (5 \\u2264 N, M \\u2264 100, 2 \\u2264 K \\u2264 15), representing, respectively, the amount of lines and columns of the board, and the amount of pawns to be captured.\\n\\nThe next N lines will have M characters each, where the character at the i-th line and j-th column indicate that at the position [i, j] on the board there is:\\n\\n\\n\\t'.' a valid position where the horse can jump.\\n\\t'#' an invalid position where the horse can't jump.\\n\\t'C' the initial position of the Rafael's horse.\\n\\t'P' the position of one of the K pawns that Rafael must capture.\\n\\n\\nThe last test case is indicated when N = M = K = 0, which should not be processed.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Horse\",\n    \"output\": \"For each test case, print an integer, representing the minimum amount of jumps that Rafael's horse needs to make to capture the K pawns and return to the initial position.\\n\\nIt is garanteed that there will always have at least one way to capture all the pawns.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Most of the programmers who come to write contests with programming exercises agree in four caracteristics that every contest should achieve. Although not all of them are always achieved, more is better. The caracterists are the following:\\n\\n\\n\\tNobody solved all the problems.\\n\\tEvery problem was solved by at least one person (not necessarily the same).\\n\\tThere is no problem solved by everyone.\\n\\tEveryone solved at least one problem (not necessarily the same).\\n\\n\\nRafael organized a contest a few days ago, and is worried about how many of these caracteristics he got to achieve with his contest.\\n\\nGiven the information about the contest, with the number of contestants, the number of problems, and which contestant solved which problem, find out the number of caracteristics that were achieved on this contest.\",\n    \"id\": 1514,\n    \"input\": \"There will be several tests cases. Each test case starts with two integers N and M (3 \\u2264 N, M \\u2264 100).\\n\\nThen, there will be N lines with M integers each, where the integer on the i-th line and on the j-th column is 1 if the i-th contestant solved the j-th problem, or 0 otherwise.\\n\\nThe last test case is indicated when N = M = 0, which should not be processed.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Contest\",\n    \"output\": \"For each test case, print one line with one integer, representing the amount of caracteristics achieved by the given contest.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Currently, at the year 2114, the knowledge that we are not alone in the universe is not any news, but one century before it was yet a mystery. Several civilizations in the Milky Way had already sent some kind of signal proving their existence, and others even established an open contact with Earth in search of informations about such Hexagonary Tree (after all, we are at 2114).\\n\\nRafael is very interested in this subject, and in a school work he undertook the challenge of finding out which was the first civilization that sent a Hello Galaxy to all the galaxy. Hello Galaxy is nothing more than the first step of the Milky Way Society Iniciation Protocol, MWSIP, ensuring them to get in touch when they need.\\n\\nThe Hello Galaxy brings two kinds of information with it: the text \\u201cHello Galaxy\\u201d, as says the tradition, and the name of the planet of the civilization that sent the message. The MWSMC, Milk Way Society Monitoring Center, installed, for some reason, in Earth, receive such messages, saving in a record the year the message was received and the amount of years that such message took to get in there.\\n\\nRafael's task is as follows: find out who was the first civilization to send a Hello Galaxy message.\",\n    \"id\": 1515,\n    \"input\": \"There will be several test cases.\\n\\nEach test case starts with an integer N (1 \\u2264 N \\u2264 100), that indicates how many Hello Galaxy messages were collected by Rafael at his research.\\n\\nFollowing there will be N lines, each containing one message. Each message is represented by the name of the civilization's planet, containing between 1 and 50 characters (only letters), and two integers A and T (2014 \\u2264 A \\u2264 2113, 1 \\u2264 T \\u2264 1000), representing, respectivelly, the year that message was received at Earth, and the amount of years that such message took to travel between the source's planet to Earth.\\n\\nThe last test case is indicated when N = 0, which should not be processed.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Hello Galaxy\",\n    \"output\": \"For each test case, there must be printed one line, containing the name of the first civilization's planet to send a Hello Galaxy message. One could assume that there will be no ties.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Rafael found a new hobbie: to draw using keyboard characters. Even this new kind of art being simple and limited, creativity is enough to make some really cool kind of drawings.\\n\\nAfter making a few drawings, Rafael wondered how they would be if they were resized, but having to remake all the drawing looked kind of tiring. For that, he asked your help.\\n\\nWhen you want to resize something, one image of N lines and M columns will have A lines and B columns, and, given that the new dimensions are bigger than the dimensions of the original image, some characters will have to repeat itself.\\n\\nLet's say that A is 3 times bigger than N. In this case, each line will have to repeat 3 times, so the image is resized correctly.\\n\\nGiven a drawing made by Rafael, print how the drawing would be if it was resized to a new given dimension.\",\n    \"id\": 1516,\n    \"input\": \"There will be several test cases. Each test case starts with two integers N and M (1 \\u2264 N, M \\u2264 50), representing, repectively, the height and the width of Rafael's drawing.\\n\\nFollowing there will be N lines, each containing M characters, representing the drawing made by Rafael. After, there will be two integers A and B (N < A \\u2264 100, M < B \\u2264 100, A is multiple of N, and B is multiple of M), representing, repectively, the new height and width that Rafael wants his drawing to have.\\n\\nThe last test case is indicated when N = M = 0, which should not be processed.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Image\",\n    \"output\": \"For each test case, print A lines, containing B characters each, representing the resized Rafael's drawing.\\n\\nAfter each test case, print one blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Rafael decided to spend his weekend at his uncle's farm, Anthony, and when he realized that there was an apple tree there, he decided to make an apple pie.\\n\\nTo make the pie, however, Rafael would have to get as many apples as possible, and for that he decided to ask for help to his cousin. The deal was: His cousin would climb the tree and shake several branches containing apples, making them fall. As they would falling, Rafael would be on the ground with a basket and would get them between their travel from the tree to the ground. As the apples were falling fast, the impact with the ground would make them crack, and Rafael decided to ignore those apples that he couldn't get in time with his basket.\\n\\nWe can represent the situation as follows: Rafael is positioned in an area with N lines and M columns below the tree, and can move one position horizontally, vertically or diagonally by second. Each apple falls in a given position of this area, let's say [i, j] (i-th line, j-th column), and the exact moment that Rafael has to be at this position to get the apple is a given time t.\\n\\nGiven Rafael's initial position, count the maximum amount of apples he can get with his basket, between all the K apples felled by his cousin.\",\n    \"id\": 1517,\n    \"input\": \"There will be several test cases. Each test case starts with three integers, N, M and K (3 \\u2264 N, M \\u2264 20, 1 \\u2264 K \\u2264 1000), representing, respectivelly, the amount of lines and columns of the area below the tree, and the number of apples fellen by his cousin.\\n\\nFollowing there will be K lines, containing three integers each, Xi, Yi and Ti (1 \\u2264 Xi \\u2264 N, 1 \\u2264 Yi \\u2264 M, 1 \\u2264 Ti \\u2264 2*K), representing, respectivelly, the line and column on which the i-th apple fell, and the exact time when Rafael has to be at such position to get the apple.\\n\\nThe sequence of Ti values given in the input is non-decreasing, in other words, Ti-1 \\u2264 Ti, for every 2 \\u2264 i \\u2264 K. There are no two apples that fall at the same position at the same time.\\n\\nFollowing there will be two integers X and Y (1 \\u2264 X \\u2264 N, 1 \\u2264 Y \\u2264 M), indicating the line and the column on which Rafael is at time 0.\\n\\nThe last test case is indicated when N = M = K = 0, which should not be processed.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Apples\",\n    \"output\": \"For each test case, print one line containing one integer, representing the maximum amount of apples Rafael can get with his basket.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Rafael, at his first day of work at the zoo, was given the task they give to all newcomers: take care of the turtles. Rafael found that so easy that he decided to take a nap, but when he woke up he saw himself in a very complicated situation: the turtles were running away.\\n\\nAs he is at his first day, Rafael doesn't want to disappoint the zoo's boss, so he decided to catch and stop all the turtles in the minimum amount of time possible.\\n\\nThe place where they are can be seen as a plane, and Rafael is at the position [x, y]. In each second, Rafael can move at most two positions at the horinzontal or vertical, or at most one position at the diagonal.\\n\\nRafael has to stop three turtles, which are at the positions [x1, y1], [x2, y2] and [x3, y3], respectively. The turles, on the other hand, can only move one position per second, and in only one direction predefined: Up ([xi, yi+1]) or Right ([xi+1, yi]). They are always moving.\\n\\nTo stop a turtle Rafael must be at the same position as the given turtle. Rafael can choose to stop the turtles at any given order he wants. Find out the minimum amount of time necessary to stop all the three turtles.\",\n    \"id\": 1518,\n    \"input\": \"There will be several test cases. Each test case starts with two integers x and y (1 \\u2264 x, y \\u2264 1000), which indicates that Rafael is at the position [x, y] of the plane.\\n\\nFollowing, there will be three lines, each one containing two integers xi and yi (1 \\u2264 xi, yi \\u2264 1000), indicating that the i-th turtle is at the position [xi, yi], and one character ci, indicating which direction the i-th turtle is running: 'D' \\u2013 Right, or 'C' \\u2013 Up.\\n\\nThe plane where Rafael and the turtles are extends from the position [1, 1] (lower left corner) to the position [10\\u2075, 10\\u2075] (upper right corner), therefore there is a lot of space for the chase. Two turtles will never be at the same position at the same time.\\n\\nThe last test case is indicated when x = y = 0, which should not be processed.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Turtles\",\n    \"output\": \"For each test case, print one integer, representing the minimum amount of time needed to stop all the turles, in the order chosen by Rafael.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Blogs are very popular nowadays, and there are tools that allows you to maintain your blog for free. Rafael then decided to create a blog, where he is going to post all his daily experiences of his life.\\n\\nFor these free tools, there are characters limits that you can write each day, and Rafael is worried that this limitation will prevent him of telling his best experiences. He decided then to use a word abbreviation system in his posts.\\n\\nThe word abbreviation system works as follows: for each letter, it is possible to choose one word that has such initial letter and that appears in the post. Once the word is chosen, every time it appears in the post, it will be replaced by its initial letter and a point, then decreasing the number of characters printed at the screen.\\n\\nFor example, in the phrase: \\u201ctoday I visited my parents\\u201d, we can choose the word \\u201cvisited\\u201d to represent letter 'v', and the phrase will be like this: \\u201ctoday I v. my parents\\u201d, saving five letters. One word can appear more than once in the text, and will be abbreviated every time. Notice that, if after an abbreviation the number of characters does not decrease, then it should not be abbreviated, as with the word \\u201cmy\\u201d above.\\n\\nRafael needs his post to have the less number of characters as possible, and because of that he asked your help. For each letter choose a word, in a way that after the abbrevations are applied, the post will have as less characters as possible.\",\n    \"id\": 1519,\n    \"input\": \"There will be several test cases. Each test case is composed of one line, containing one phrase up to 10\\u2074 characters. The phrase is composed of words and white spaces, and each word is composed of lower case letters ('a'-'z'), and has between 1 and 30 characters each.\\n\\nThe last test case is indicated when the given line has only one \\u201c.\\u201d, which should not be processed.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Abbreviations\",\n    \"output\": \"For each test case, print one line containig the phrase with the abbreaviations chosen and applied.\\n\\nFollowing, print one integer N, indicating the number of letters that was chosen words to abbreviate. In the next N lines, print the following pattern \\u201cC. = P\\u201d, where C is the initial letter and P is the chosen word for such letter. The lines should be printed in ascending order of the initial letter.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n                    Peter is working in a new job at a screws and nuts store. Every week he will receive new orders of mixed screws in big boxes and he need to know where he must store these products.\\n\\n\\t\\t\\t\\t\\tMango, that is Peter's supervisor, asked him to organize all screws and nuts in a huge rack, in order to be easy to answer where is possible to find each determinate set of screws and how many of each one these lots the store has.\\n\\n\\t\\t\\t\\t\\tPeter receives all screws and nuts in boxes labeled with the products size interval. For example, two boxes with the respective intervals (1, 2) and (4, 8) represent lots of products with size { 1, 2, 4, 5, 6, 7, 8 }. A screw and nut number may be present in more than one box, and it appears in the list once for each interval. For example, three boxes with the respective intervals (1, 3), (2, 4) and (3,5) represent lots of screws and nuts with size \\u00a0{1, 2, 2, 3, 3, 3, 4, 4, 5}.\",\n    \"id\": 1520,\n    \"input\": \"The input contains several test cases and ends with EOF. Each test case consists of many lines. The first line contains a positive integer N (N < 100) indicating the number of boxes of screws. The following N lines, each with two X and Y numbers (1 \\u2264 X < Y \\u2264 100) representing the lot sizes of nuts and bolts present in the box. The next line of input contains a single positive integer Num (1 \\u2264 Num \\u2264 100), which indicates the number that Mango want to search after all products are arranged on a shelf or rack.\\n\\nNote The rack has shelves numbered from 0 to P, and this P must not exceed 10000.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Screws and Nuts\",\n    \"output\": \"Each test case must produce a single output line, indicating all the positions of the shelf in which the screw size Num can be found or otherwise, that the screw can not be found, as shown below.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Ball of paper war is one of the most classic jokes of the collegiate time, and some people like it so much that they start these wars at the universities. The rules are simple: Aim and hit someone with a ball of paper.\\n\\nThe teachers, on the other side, don't think that this joke is productive, once it takes all the attention from the given class. Even worse, is when a student hits the teacher with the ball of paper.\\n\\nThe teacher this time decided to investigate who participated on the joke, and said it would be enough if at least one of the students was discovered, to serve as an example to the others.\\n\\nThe teacher's investigation process works as follows: it starts asking to a student K if he participated on the joke or, if he didn't participate, that he says who participated. If the K student turned himself, the investigation would end. Otherwise, he would say the number of other student, and the process would repeat with the teacher making the question again to this new student, until some student turned himself.\\n\\nThe teacher provided a list containing the answer of all the students to the given question, and asked your help to find out, if he started the investigation on the student K, who would end turning himself?\\n\\nIt's garanteed that someone will turn himself at the end.\",\n    \"id\": 1521,\n    \"input\": \"There will be several test cases. Each test case starts with one integer N (3 \\u2264 N \\u2264 50).\\n\\nFollowing, there will be N integers ni (1 \\u2264 ni \\u2264 N, for all 1 \\u2264 i \\u2264 N), where each integer ni means that the student i turned the student ni.\\n\\nThat means, if the third number if 4, then it means that the third student turned the fourth student. If, otherwise, the number is equal to itself, that means he turned himself.\\n\\nFollowing there will be one integer K (1 \\u2264 K \\u2264 N), indicating who was the student with whom the teacher started the investigation.\\n\\nThe last test case is identified when N = 0, which should not be processed.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Guilty\",\n    \"output\": \"For each test case, there must be printed one line, containing one integer, indicating which student ended up turning himself.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Hermann Negri, UTFPR  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Claudio has created a new game called Stack Game, and wants to submit it to the next URI's game competition. Although very fun to play, the game seems to be too difficult to win. Claudio needs your help to evaluate if some game instances can be won.\\n\\nThe Stack Game is individual and it is played with three stacks, each one with the same initial number of cards. Each card has a integer value from 0 to 9. The player can, at any time, peek the value of any card but can only play with the cards on the top of the stacks. At each round, the player can remove any combination of cards from the top of the stacks (1, 2 or 3 cards), but only if the sum of their values is divisible by 3. The game is won when all cards are removed from the piles. If a card can not be removed, the game is lost.\",\n    \"id\": 1522,\n    \"input\": \"The input is composed of many instances. Each instance is initiated with an integer N (0 \\u2264 N \\u2264 100) that identifies the number of cards in each stack. The input ends with N = 0. Each one of the N lines in the sequence will have three integers A, B e C, that describes the numeric values of the cards on a level of the stacks (0 \\u2264  A, B, C \\u2264\\u00a0 9). The stacks are described from top to bottom.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Stack Game\",\n    \"output\": \"For each instance, write a line with the number 1 if the player can win the instance, or the number 0 if the instance is impossible.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"After a long time saving money, Rafael finally got to buy his own car. Enough of catching bus, now his life is going to be easier. At least this is what he thought, until he heard about the parking lot near the university where he decided to park the car every day.\\n\\nThe parking lot has only one corridor, with enough width to fit one car, and enough depth to fit K cars, one behind the other. As this parking lot has just one gate, it is only possible to the cars to enter and leave by it.\\n\\nWhen the first car enters the parking, it occupies the last position near the wall, at the bottom of the parking lot. All the next cars park right behind it, forming a queue. Obviously, it is not possible that one car passes over the other, therefore it is only possible for a car to leave the parking lot if it is the last at the queue.\\n\\nGiven the expected arrival and exit time of N drivers, Rafael included, tell if it is possible that they all can park and remove their cars at the quote parking lot.\",\n    \"id\": 1523,\n    \"input\": \"There will be several test cases. Each test case starts with two integers N and K (3 \\u2264 N \\u2264 10\\u2074, 1 \\u2264 K \\u2264 10\\u00b3), representing the number of drivers that are going to make use of the parking lot, and the number of cars that the parking lot can fit, respectively.\\n\\nFollowing there will be N lines, each one containing two integers Ci and Si (1 \\u2264 Ci, Si \\u2264 10\\u2075), representing, repectively, the arrival and exit time of the i-th driver (1 \\u2264 i\\u00a0\\u2264 N). The values of Ci are given in ascending order, in other words, Ci < Ci+1 for each 1 \\u2264 i < N.\\n\\nThere will be no more than one driver that arrive at the same time, and no more than one driver that leave at the same time. It is possible that one driver can park at the same time that other driver is leaving.\\n\\nThe last test case is indicated when N = K = 0, which should not be processed.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Linear Parking Lot\",\n    \"output\": \"For each test case print one line, containing the word \\u201cSim\\u201d, if it is possible that all the N drivers make use of the parking lot, or \\u201cNao\\u201d otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Marcio Oshiro, USP  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"A very common phenomenon in line at the cafeteria (also known as university restaurant) is to see a person trying to infiltrate in the middle of the queue instead of at the end. This is where this person finds someone in your group already in the queue. \\n\\nInterested in studying this phenomenon, a friend asked you to write a program to study the groups present in the queue. We can assume that there are K different groups and every person belongs to exactly one of these groups. The size of a group is defined by the distance between the two most distant people in the group. If the group consists of only one person, its size is zero. Whereas the groups are organized so that the sum of the sizes of the K groups is minimal, your program must determine what is the value of this sum.\",\n    \"id\": 1524,\n    \"input\": \"The input consists of several test cases and ends with end of file (EOF). The first line of each test case contains the integer N indicating the number of people in line, and K, indicating the number of groups (1 \\u2264 K <N \\u2264 1.000). In the next line are presented N - 1 integers, a2, ... , AN, (0 \\u2264 a2 \\u2264 \\u00b7 \\u00b7 \\u00b7 \\u2264 aN \\u2264 1,000,000) indicating the positions of each person to the first person in line. The position of the first person is omitted since it is always zero.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Cafeteria Queue\",\n    \"output\": \"For each test case, print one line containing the minimum value that the sum of the sizes of the K groups can have.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Rafael liked a game so much when he was a child, that he decided to draw a map with the characteristics of that game and see if he could complete it.\\n\\nThe map consists of N lines and M columns, that divide the map in a grid of N * M cells. Each of these cells, with exception of the middle cell, contain an arrow drawn on it, that points to one of four directions \\u2013 Left, Up, Right or Down.\\n\\nThe goal of the game is to position the character at any of the cells that constitutes the border of the map, and make him go to the middle of map, marked with a x. The rules to move in the game follow the arrows logic: The character can only move at the direction that the arrow points.\\n\\nIn other words, if the character is at the cell [x, y] (line x, column y), and at that cell there is an arrow pointing to the right, the only cell he can go from there will be the cell [x, y+1], if it is on the limits of the map (otherwise, he will leave the map, and the game is lost).\\n\\nTo make it easier, Rafael decided that he could make K arrow inversions. When you invert an arrow, it now points to the opposite direction from which it pointed previously. In other words, if it pointed to the Right, it will now point to the Left, and vice versa. The same works for Up and Down.\\n\\nRafael now asked your help: Is it possible to position the character at one of the map borders, and make him walk to the middle cell, making at most K arrow inversions?\",\n    \"id\": 1525,\n    \"input\": \"There will be several test cases. Each test cases starts with three integers N, M and K (3 \\u2264 N, M < 100, 0 \\u2264 K \\u2264 100, N and M are odds), representing, respectively, the amount of lines and columns of the map, and the maximum number of allowed inversions.\\n\\nFollowing there will be N lines, each containing M characteres, that will represent the map Rafael drew. The character at the i-th line and j-th column indicates that at the cell [i, j] of the map there is:\\n\\n\\n\\t'>' \\u2013 An arrow pointing to the Right.\\n\\t'<' \\u2013 An arrow pointing to the Left.\\n\\t'^' \\u2013 An arrow pointing Up.\\n\\t'v' \\u2013 An arrow pointing Down.\\n\\t'x' \\u2013 The destination cell (which is always in the middle of the map).\\n\\n\\nThe last test case is indicated when N = M = K = 0, which should not be processed.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Gruntz\",\n    \"output\": \"For each test case print one line, containing the word \\u201cSim\\u201d if it is possible to position the character at one of the map borders in a way that he can walk to the destionation cell, making at most K inversions, or \\u201cNao\\u201d otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Marcio Oshiro, USP  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"One of the criteria for a programming marathon be considered as a success is that the contestants must not go hungry. Concerned about this, the organization chose one boy dedicated to the task of fetching snacks at supplier. To facilitate the transport of snacks this boy received a wheelbarrow.\\n\\nEven with the wheelbarrow, this is a very tiresome task, so the organization allowed the boy to eat one of the snacks he carries every 100 meters traveled ( coming or going ) . In addition, each 100 meters, cabanas where he can temporarily store the snacks are prepared. Thus isn't necessary to transport all snacks directly from the supplier to the competition venue.\\n\\nTo know if the boy will ate more snacks than he can, the organization wants you to write a program that determines the maximum amount of snacks that can be delivered . You can assume that the boy eats a snack whenever allowed .\",\n    \"id\": 1526,\n    \"input\": \"The input consists of several test cases and ends with end of file (EOF). Each test case consists of a line with three integers, L, D, and C (10 \\u2264 L, D, C \\u2264 100,000,000) indicating, respectively, the amount of snacks bought, the distance between the supplier and the competition venue in hectometers and how many snacks fit in the wheelbarrow.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Transporting Snacks\",\n    \"output\": \"For each test case, print the maximum amount of snacks that can be delivered, if this quantity is positive, or \\\"impossivel\\\" otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Rafael is playing a new and exciting RPG game, and just now noticed the existence of something called Guild. For those who don't know, Guild is about a group of players that get together with a common goal inside the game, taking advantage of working as a team.\\n\\nThe game that Rafael plays has a GVG system (Guild versus Guild) very disputed, and soon he realized that he should take some arrangements to do well at these battles.\\n\\nThe GVG system works as follows: the battle happens between two guilds, and wins the guild that has the greatest amount of points. The number of points that a guild has is given by the sum of the number of points of the players from the guild. Each player has a number of points, that correspond to his current level.\\n\\nConsider that initially, all the players are part of a guild, containing only the player itself. The union between two guilds makes all the players from both guilds be part of an unique guild, and the other no longer exists.\\n\\nGiven a list of actions in the game, between them union between two guilds and battles between two guilds, say the number of times that the guild in which Rafael is part was victorious of a battle.\",\n    \"id\": 1527,\n    \"input\": \"There will be several test cases. Each test case starts with two integers N and M (1 \\u2264 N \\u2264 10\\u2075, 1 \\u2264 M \\u2264 5 * 10\\u2075), representing the number of players in the game, and the number of actions in the game, respectively.\\n\\nFollowing there will be N integers Pi (1 \\u2264 Pi \\u2264 100), where the i-th number represents the number of points that the i-th player has, for all 1 \\u2264 i \\u2264 N. Rafael is always the player 1.\\n\\nFollowing, there will be M lines, containing three integers each, Q, A and B (1 \\u2264 Q \\u2264 2, 1 \\u2264 A, B \\u2264 N), representing the kind of action, and the two guilds involved at such action. If Q is equal to 1, that means that the guild with the player number A and the guild with the player number B are uniting. If Q is equal to 2, that means that the guild with the player number A and the guild with the player number B will battle.\\n\\nThe last test case is indicated when N = M = 0, which should not be processed.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Guilds\",\n    \"output\": \"For each test case print one line, containing one integer, representing the number of battles at which the guild which Rafael is part won a battle. Notice that ties are not considered victories.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Four children are playing holding two ropes. Initially, the children are positioned in the four corners of a square, numbered 1 to 4 as shown below:\\n\\n\\n\\nIn the beginning of the play, the children in positions 1 and 4 hold a rope, and the children in positions 2 and 3 hold the other rope. Then the children perform a sequence of movements that can be of three types:\\n\\n\\n\\tMovement + : Children in positions 1 and 2 switch places, and the child at position 2 pass the rope over the child at position 1.\\n\\tMovement - : Children in positions 1 and 2 switch places, and the child at position 1 pass the rope over the child at position 2.\\n\\tMovement * :\\u00a0Children rotate clockwise. Who is in the position 1 goes to position 2, who is in position 2 goes to position 3, who is in position 3 goes to position 4, and who is in position 4 goes to position 1.\\n\\n\\nYou must develop a program to predict the end of the game: After a given sequence of movements, do the ropes can be completely separated as they were initially without the children change places?\\n\\nJohn Conway is one of the children participating in the game. He is a very smart boy and decided to give you a hint to solve the problem: after the sequence of movements, the ropes can not be completely separated if and only if the sequence of movements is equivalent to a sequence of alternating movements. A sequence of movements is alternating if it switches the '+' and '-' movements between a movement of '*', using the format \\\"+++...+++*---...---*+++...\\\". For example,\\u00a0\\\"+++\\\", \\\"-*++*-\\\" and \\\"+++*----*\\\" are alternating sequences. An alternating sequence is always started by a movement of '+' or '-', and don't have consecutives \\\"*\\\" movements, so sequences \\\"*---*++\\\" and \\\"++**-\\\" not are alternating. The sequence \\\"+-++*+\\\" is not alternating, but is equivalent to the alternating sequence \\\"+*-*\\\", because the two sequences leave the two ropes in the same situation.\",\n    \"id\": 1528,\n    \"input\": \"The input consists of several test cases. Each test case consists of a line containing a sequence up to 30 movements, indicated by the characters '+', '-' and '*'.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Entangled Ropes\",\n    \"output\": \"For each test case, print a line containing the word \\\"YES\\\" if the strings can be totally separated after the sequence of movements, otherwise, print a line containing the word \\\"NO\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Hermann Negri, UDESC  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"In the year 2042, after the emergence of malevolent Union of Independent Republics (URI), humanity was faced with a huge lack of resources. Water and gasoline have become assets very valuable, with much of the technology was lost after URI taking the world power.\\n\\nYou are part of a resistance group that aims to take away the power of the URI. Max, the hero of the resistance, must perform various missions involving car trips between cities. There are gas stations in each city, despite the high prices. As financial resources to the resistence are limited, you have been asked to write a program that calculates what the minimum amount of credits required to complete each one of the Max missions.\",\n    \"id\": 1529,\n    \"input\": \"The input consists of several test cases. Each test case is started by three integers N, M and T, (1 \\u2264 N \\u2264 10,  1 \\u2264 M \\u2264 20, 1 \\u2264 T \\u2264 50) corresponding to the number of cities along the route, the number of roads and capacity of the car Max liters tank. The input ends when N = M = T = 0.\\n\\nThe following M lines describe the bonds between the cities. Each line contains the integers A, B and C, (1 \\u2264 C \\u2264 1000) indicating the existence of a route (roundtrip) between cities A and B, with a consumption of C liter of gasoline. Due to the poor state of the roads, it is possible that certain cities are inaccessible. There is more of a direct route between any pair of cities.\\u00a0\\n\\nThe next N lines describe the cost in credits from the union per liter of petrol in each city. The first line describes the cost of city gas in the first, the second line depicts the cost of the second city, and so on.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Max, the Mad\",\n    \"output\": \"For each test case, your program should print a line containing the lowest possible cost to travel from town 1 to town N. If it is not possible to travel between cities, print -1.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Initially, there is an empty string. Your program should perform two types of instructions:\\n\\n\\n\\tAdd a character between 'a' and 'z' at the end of the string.\\n\\tCalculate how many different substrings can be found in the string.\\n\\n\\nFor example, the string \\\"aba\\\" has 5 different substrings: \\\"a\\\", \\\"ab\\\", \\\"aba\\\", \\\"b\\\", \\\"ba\\\".\",\n    \"id\": 1530,\n    \"input\": \"The input consists of several test cases. Each test case consists of a line containing a sequence of up to 2.105 characters. Each character represents an instruction that must be taken. A character between 'a' and 'z' indicates that an instruction of type 1 must be performed with this character. A character '?' represents an instruction of type 2.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"How Many Substrings?\",\n    \"output\": \"For each instruction of type 2, print a line containing the number of different substrings that can be found in the string.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The famous Fibonacci sequence can be defined as follows:\\n\\n\\n\\tFib( 1 ) = Fib( 2 ) = 1\\n\\tFib( N\\u00a0) = Fib( N-1 ) + Fib( N-2 ), for N > 2\\n\\n\\nYour task is simple, calculate the value of the remainder of Fib ( Fib ( N ) ) divided by M.\",\n    \"id\": 1531,\n    \"input\": \"The input consists of several test cases and ends with EOF. Each test case consists of a line with two integers\\u00a0N\\u00a0and\\u00a0M\\u00a0(1 \\u2264\\u00a0N\\u00a0\\u2264 109, 2\\u00a0\\u2264\\u00a0M\\u00a0\\u2264 106).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Fibonacci Again!\",\n    \"output\": \"For each test case, print a line containing an integer equal to\\u00a0the remainder of Fib ( Fib ( N ) ) divided by M.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Your friends invented a new competition: Throwing Balls. The goal is simple, just throw a ball in a way that it falls into a hole N meters ahead.\\n\\nWhen the ball is thrown, let's say that at an integer speed V, it stays in the air for V meters and then touches the ground. It repeats this process V times. After it touches the ground V times, it changes its speed to V-1, and the previous process repeats, until the speed is equal to 0.\\n\\nFor example, if the ball is thrown at a speed equal to 3, it will touch the ground at the following points: 3, 6, 9, 11, 13, 14; as it can be seen in the picture below.\\n\\n\\n\\nYou can throw a ball at an integer speed less than or equal to V. Given the distance of the hole, say if it's possible for you to throw the ball and that it falls exactly into the hole.\",\n    \"id\": 1532,\n    \"input\": \"There will be several test cases. Each test case contains two integers, N and V (1 \\u2264 N \\u2264 1000, 1 \\u2264 V \\u2264 30), representing the distance of the hole, and the maximum speed that you can throw the ball.\\n\\nThe last test case is indicated when N = V = 0, which should not be processed.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Throwing Balls\",\n    \"output\": \"For each test case, print one line containing the word \\u201cpossivel\\u201d (without the quotation marks), if it is possible to throw the ball at an integer speed less than or equal to V, in a way that it falls into the hole, or \\u201cimpossivel\\u201d otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"John Watson, after years working aside Sherlock Holmes, never understood how he was able to guess who was the killer so easily. On a certain night, however, Sherlock drunk so much that he told John what the secret was.\\n\\n\\u201cElementary dear Watson\\u201d, said Sherlock Holmes. \\u201cIt is never the most suspicious, but the second most suspicious\\u201d. After he got the secret, John decided to solve a crime by his own, just to test if what Sherlock said made sense or it was just drunk talk.\\n\\nGiven a list with N integers, representing how much each person is suspect, help John Watson to decide who is the killer, according to the mentioned method.\",\n    \"id\": 1533,\n    \"input\": \"There will be several test cases. Each test case starts with an integer N (2 \\u2264 N \\u2264 1000), representing the number of suspects.\\n\\nFollowing there will be N distinct integers, where the i-th integer, for each 1 \\u2264 i \\u2264 N, represents how much the i-th person is suspect, given John Watson's opinion. Be V the value of i-th integer, 1 \\u2264 V \\u2264 10000.\\n\\nThe last test case is indicated when N = 0, which should not be processed.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Detective Watson\",\n    \"output\": \"For each test case print one line, containing one integer, representing the index of the killer, according to the mentioned method.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tAdapted by Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tRead an integer N that is the size of a bidimentional array that must be printed like the given example.\",\n    \"id\": 1534,\n    \"input\": \"\\tThe input contains many test cases and ends with EOF. Each test case consist in a integer number N (3 \\u2264 N  < 70), that indicates the size (lines and columns) of a bidimentional array that must be printed.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Array 123\",\n    \"output\": \"\\tFor each N read, print the output according to the given example.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Can any number be expressed as a subtraction of two squares? The numbers, which can be expressed in such a way, are called square-couple numbers. Your job is to find out:\\n\\n a) If a number is square couple number.\\n\\n b) If the number is square couple then find that format.\\n\\n c) Find out how many square couple numbers are there within a certain range (including the terminal numbers).\",\n    \"id\": 1535,\n    \"input\": \"Each set of input is given in a single line. Each input set may contain one or two signed 32 bit integer numbers. Input is terminated by end of file.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Couple-Bachelor-Spinster Numbers\",\n    \"output\": \"If there is only a single number N in a single line then print two non-negative integer numbers a and b, such that a * a - b * b = N. If the number cannot be expressed in such a format then print the line \\u201cBachelor Number.\\u201d in a single line if such number is even and print the line \\u201cSpinster Number.\\u201d if the number is odd.\\n\\n\\nIf there are two numbers n1 and n2 in the input then print how many bachelor numbers are within n1 and n2 (including n1 and n2). Note that (n1 \\u2264 n2 and (n2 - n1) \\u2264 1000000).\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Fabiola de Souza, UFU  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The Libertadores Cup is the main soccer competition among professional clubs of South America, organized by the South American Confederation of Soccer (CONMEBOL). This cup is known for having a very complicated regulation, especially for the quarter finals and semi-final.\\n\\nThese stages are played roundtrip matches in the playoff system. Wins the team that makes the highest score accumulated in the two matches, with 3 points for a win and 1 point in case of a tie, both per match. In case of a tie in score, the tiebreaker criteria are:\\n\\n1) goal difference (number of goals for minus the number of goals against)\\n\\n2) most goals scored in the away match and\\n\\n3) penalty shootout\\n\\nAll criteria must be applied considering the accumulated of the two matches.\\n\\nCan you develop an algorithm that, given the results of the roundtrip matches, it identifies the winning team?\",\n    \"id\": 1536,\n    \"input\": \"The first line of input gives the number of test cases N (1 \\u2264 N \\u2264 100). Each test case consists of two scores: the outcome of match 1 and the outcome of the 2. The score is represented by the format M x V, where M (1 \\u2264 M \\u2264 100) is the number of goals for principal team and V (1 \\u2264 V \\u2264 100) is the number of goals for the visiting team. As for each test case there are 2 matches, consider that Team 1 is always the principal of the first match and the visitor of the second and vice versa for Team 2.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Libertadores\",\n    \"output\": \"For each test case, print a line containing \\\"Time 1\\\" (without quotes) if Team 1 is the winner of the playoff, \\\" Time 2\\\" (without quotes) if the Team 2 is the winner of the playoff and \\\"Penaltis\\\" (without quotes) if you can not identify the winner in conventional time.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Andre, Bruno and Carlos are friends for a long time, and if there is something that they know about each other is how punctual they are. Andre is known to be always the last one to arrive to a meeting between the three of them, and Carlos is always the first. Bruno always arrives before Andre, but never before Carlos.\\n\\nIt's the end of the month and the three friends need to go to the bank to pay some bills. Including them, there are N people at the line to use the bank teller. Knowing how they are punctual between them, in how many ways the bank line can be ordered?\\n\\nRemember that the rules only apply between the three of them, for example, Carlos always arrives before Bruno and Andre, but may arrive later than other people at the line. Two orderings are considered different if there is at least one person who is in a different position in each ordering.\",\n    \"id\": 1537,\n    \"input\": \"There will be several test cases. Each test case starts with one integer N (3 \\u2264 N \\u2264 10\\u2075), indicating the number of people in the file, including Andre, Bruno and Carlos.\\n\\nThe last test case is indicated when N = 0.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Bank Line\",\n    \"output\": \"For each test case print one line, containing one integer, representing the number of ways the bank line can be ordered. As the result can be very high, print the result with rest of division in 1000000009.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Mauricio Amaral, UFU  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Recently it was discovered a planet called Gliese 581g. He only has three times the mass of Earth, and is the 20 light years away, orbiting a star in the constellation Libra known as Gliese 581, a red dwarf. Astronomers at the University of California and the Carnegie Institution of Washington claim that the planet is the first to present real potential to support life. They said that this discovery was only possible through the analysis of ancient Egyptian scriptures remnants of the Library of Alexandria. Notes with a strange sequence that supposedly indicate the positions of planets with life in the universe were found. Each element is translated into three-dimensional coordinates using a very complex algorithm described in the notes, however the algorithm for calculating the sequence was lost because of the fire burned pages of the library.\\n\\nThe book contains only the first eight values \\u200b\\u200bof this sequence, detected in legible pages of the scriptures, and to be able to find other coordinates the University of California released a global challenge for students of mathematics, engineering and computing. Given the first elements of this sequence you must write an algorithm able to calculate any element in the series. The known elements are {B, BA, CB, BAA, BCB, CBA, DAB, BAAA} .\\n\\nIt is believed that it is possible to find any element of the series, whose elements seem to be written in an alien number base.\",\n    \"id\": 1538,\n    \"input\": \"Each line of input contains an integer N (1 \\u2264 N \\u2264 100000), which describes the position in the sequence of the alien element to be calculated. The input is terminated when N = 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Alien Sequence\",\n    \"output\": \"For each value read should be printed on the screen the element in the nth position of the alien sequence, always with a line feed.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Mauricio Amaral, UFU  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Cesario is an analyst at Algar Telecom, and is working on a project to analyze the mobile phone network . He have to develop a system to analyze the scope of each antenna in the network and define the operational costs for sending data to another device, based on the distance between the antennas. The objective of minimizing these costs, finding the best route available. The calculations also aim to find out if it is possible to establish a path between two devices in order to detect serious problems in the network.\\n\\nEven with all the data available for processing, Cesario has faced problems in implementation due to the high complexity of this algorithm, so you've been hired to help . Its goal is to analyze all the antennas of the Algar Telecom network, noting its coordinates and radii; verify which able to be accessed (within line of sight) antennas, and calculate the shortest path between two specific antennas.\",\n    \"id\": 1539,\n    \"input\": \"The input consists of several test cases. Since the first line contains a non-negative integer, N (2 \\u2264 N \\u2264 100), which indicates the number of antennas available for the interconnection network. The next N lines, each containing three integers X (0 \\u2264 X \\u2264 1000), Y (0 \\u2264 Y \\u2264 1000) and R (1 \\u2264 R \\u2264 1000), which describe the position of the antenna, X and Y coordinates and its range R (separated by whitespace). The next line contains another non-negative integer, C (1 \\u2264 C \\u2264 100), which describes the amount of calculations to be performed in this network. The following C lines contains 2 integers each, A1 (1 \\u2264 N \\u2264 A1) and A2 (1 \\u2264 N \\u2264 A2), which describe the content of the antennas to be used and also separated by whitespace.\\nThe order of the inputs is indicated by number 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Telecom Company\",\n    \"output\": \"For each test case, if C you should print lines, each of which represents the distance of the shortest path between the two antennas. Values \\u200b\\u200bmust be WHOLE, ie, the real part should be truncated (not rounded), and always with a line break. If not identified a route between the antennas should be printed the value -1.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Normandes Jr, UFU  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You are contributing for a summit that will help forecast the growing up of eletrical energy in Brazil, making the eletric power be available for a long time in the future.\\n\\nTo be able do that, you have the following information:\\n\\n\\n    during the year of 2010 the consume average was 104.326 GWh.\\n    In 2013 the consume was 127.755 GWh.\\n\\n\\nYou should calculate the anual growing up rate for many situations and forcasting, you can assume that this growing up is linear. In this case, the rate was 7809.66 GWh per year.\",\n    \"id\": 1540,\n    \"input\": \"The first input line has an integer number N (1 <= N <= 1000) that is the total test cases.\\n\\n                    The following N lines are made by the integers A, B (B > 0), C and D (D > 0) separated by one blank space. The number A is the year, B is the consume of A year. The number C is another year and number D is the consume of B year.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Energy Planning\",\n    \"output\": \"For each test case, it should be printed the growing up rate with only two decimal places, separated by comma and truncated - no rounding.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Normandes Jr, UFU  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Mr Pi is a famous constructor of Codingland. He needs your help to find out the best lands in the city to his projects.\\n\\nFor instance, he has a project to build a house of 8 meters for 10 meters but, the city laws only allow build houses in this neighborhood, in maximum 20% of total area. All lands in this city are perfectly square. For your information the house side is showed only for you to know the house's area that will be built. (E.g: For a house with 1 meters by 10 meters, in a neighborhood that allows house use 100% of the land, Mr Pi would needed a land with 10 square meters. The land side in this case, should be 3.163 meters, that truncated it is 3). Help Mr Pi find out the ideal land for each project.\",\n    \"id\": 1541,\n    \"input\": \"The input has many test cases. Each one is made by three integer numbers A, B and C (> 0 and <= 1000) separated by one blank space. This numbers are the size of the house (A and B) and the maximum percentage allowed to build in this neighborhood (C). An unique 0 (zero) value means end of inputs.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Building Houses\",\n    \"output\": \"Should be printed an integer number, that is the size of the land. This value should be truncated.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Normandes Jr, UFU  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You've started competing against your friend to see who can read more books in less time. Your friend used to read much more fast than you, until the day you realized that he'd read only small books.\\n\\nSo, you've decided counting how many pages each book has. And decided to increase the amount of pages read per day. Now you read 5 pages per day and finish 16 days before, if you were reading 3 pages per day. In this case, how many pages has the book?\",\n    \"id\": 1542,\n    \"input\": \"The input has many test cases. Each test has tree numbers Q (0 < Q < 20), D (0 < D < 20) and P (0 < P < 20) separated by one blank space. Q means the amount of pages read per day. D is the number of days you could speed up, if you were reading the amount of pages P. An unique 0 (zero) value means end of inputs.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Reading Books\",\n    \"output\": \"For each test case it should be printed how many pages the book has. Use plural appropriately in Portuguese (\\\"pagina\\\" or \\\"paginas\\\"). This number should be an integer and truncated - no rounding.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"You are at a television program, and there is a huge chance for you to win a lot of money. You are there to play a game, with some peculiar rules, and the resulting amount of money depends on your smartness, where you may even lose money if you play badly.\\n\\nThe game works as follows: there is a board, with N lines and M columns, and in each cell of this board there is a positive integer, representing an amount of money. At each cell you can choose one of the following signs to put there:\\n\\n\\n\\t'+' - Means that the value of that cell must be added to your prize.\\n\\t'-' - Means that the value of that cell must be subtracted from your prize.\\n\\t'.' - Means that such cell must be ignored.\\n\\n\\nLife would be too easy if you could choose to put the '+' sign at all positions, so there are two additional rules to the game: for each row of the board, you must fill the cells with one of a few patterns of signs made by the game producers; and for each column of the board, it's not allowed for two vertical adjacent cells to have the same sign (applies to the signs '+' and '-'). It is possible to use the same pattern more than once, since it doesn't disrespect the second rule above.\\n\\nSee an example in the picture below, where the patterns are: \\u201c++\\u201d, \\u201c--\\u201d, \\u201c.+\\u201d e \\u201c+.\\u201d.\\n\\n\\n\\nConsider that there is always at least one way to fill the board.\\n\\nAs the game is new, they let you use your computer to help you make the decision, without knowing that you were a programmer. Write an algorithm that tells you what is the maximum amount that is possible to achieve in the game.\",\n    \"id\": 1543,\n    \"input\": \"There are several test cases. Each test case starts with two integers, N and M (1 \\u2264 N, M \\u2264 100), indicating the number of lines and columns of the board, respectively.\\n\\nFollowing there will be N lines, containing M integers each, representing the values from the board. Be v the value of any cell of the board, 1 \\u2264 v \\u2264 100.\\n\\nFollowing there will have an integer K (1 \\u2264 K \\u2264 100), indicating the number of patterns. After that, there will be K lines, each containing M characters, representing each of the patterns, as the symbology given above.\\n\\nThe last test case is indicated when N = M = 0, which should not be processed.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Board With Prizes\",\n    \"output\": \"For each test case print one line, containing one integer, representing the maximum amount that is possible to achieve in the game if the patterns are choosen in an optimal way.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In this problem it will be given to you two decimal integer numbers\\u00a0N, M. You will have to find the last non-zero digit of the\\u00a0NPM. This means no of permutations of\\u00a0N\\u00a0things taking\\u00a0M\\u00a0at a time.\\r\",\n    \"id\": 1544,\n    \"input\": \"The input file contains several lines of input. Each\\u00a0line\\u00a0of the input file contains two integers N (0 \\u2264 N \\u2264 20000000),\\u00a0M (0 \\u2264 N). Input is terminated by end-of-file.\\r\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Last Non-zero Digit\",\n    \"output\": \"For each line of the input file you should output a single digit, which is the last non-zero digit of\\u00a0NPM. For example, if\\u00a0NPM\\u00a0is 720 then the last non-zero digit is 2. So in this case your output should be 2.\\r\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"By Gabriel Ilharco Magalhaes, ITA  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Wanderley, after discovering that Alberto cheated the previous game with the help of a computer, decided to stop playing with Alberto. Now, Alberto spends his afternoons playing by himself a one-player version of the card game they used to play, as follows. A set with an even number of cards, each card containing an integer, is arranged on a table, one card next to another, forming a sequence of cards. In each round, Alberto takes one of two cards at the edges of the sequence (the first or the last card), which value is computed in his points. Alberto then takes one of two cards at the edges of the remaining sequence, and so on, until there are no remaining cards on the table.\\r\\n\\r\\nIn this game, the number of points of a player is the sum of the numbers in the cards he took (the cards he discarded does not count). Alberto aims to maximize his number of points. You must write a program that, given the sequence of cards, determines the highest number of points that Alberto can get.\\r\",\n    \"id\": 1545,\n    \"input\": \"The input contains several test cases. Each test case is described in two lines. The first line contains an even integer\\u00a0N (2 \\u2264\\u00a0N\\u00a0\\u2264 104), which indicates the number of cards on the table. The second line contains\\u00a0Nintegers, describing the sequence of cards.\\u00a0Each of the\\u00a0N\\u00a0integers can fit in 32 bits.\\r\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Cards II\",\n    \"output\": \"For each test case your program must print a single line, containing a single integer, the largest number of points that Alberto can get.\\r\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"By Jean Bez, URI  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Several students from various universities know the programming portal IRU. This portal has thousands of programming problems available. Daily, the IRU team receives several feedback (compliments, bugs, questions, suggestions, ...) that must first be assigned to team members answer.\\n\\nAs the team is very busy and have no time to sort these feedbacks, you were asked to write a program to do that and show who will be responsible for resolving and responding the feedback.\\n\\nThe team members responsible for each sector are:\\n\\n\\n\\tCompliments: Rolien\\n\\tBugs: Naej\\n\\tQuestions: Elehcim\\n\\tSuggestions: Odranoel\",\n    \"id\": 1546,\n    \"input\": \"The first value is the number of test cases N (1 < N < 100). Each test case represent a day of work responding feedbacks. Each test case starts with K (1 <\\u00a0K < 50), indicating the number of feedbacks received on that date. Then follows K lines with and integer representing the category of each of the feedbacks as shown above (1, 2, 3 or 4).\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Feedback\",\n    \"output\": \"For each test case you must print the name of the team member responsible for the feedback.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Professor Genesio received several shirts from OBI (Organization of Bacharels and Intellectuals) to distribute to his students of Computer Science. To distribute these shirts he organized the students of each class in small groups (at maximum of 10) and defined that would make the draw of a shirt to each group. Since Genesio don't want to spend much time with this task, he asked you to help him with a program that would determine who was the student winner according to the following rule: The first of each group to hit the number chosen by Genesio obviously wins the shirt but if no one hit this number, wins the shirt the first to get closest to this number.\\n\\nIt makes no difference who the group the teacher chooses to try to start guessing. This will always be the student number 1, and so on.\",\n    \"id\": 1547,\n    \"input\": \"The first line of input contains an integer N that determines the amount of test cases, or shirts that will be raffled. Each test case consists of two lines. The first line contains two integers QT (4 \\u2264 QT \\u2264 10) and S (1 \\u2264 S \\u2264 100) separated by a space, which indicate the amount of students in the group and the secret number to be guessed. The second row contains each QT values, separated by a space.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Guess What\",\n    \"output\": \"For each test case, your program must print a integer number that indicates the position of the winner of the shirt, according to the rules above described.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"In the school you study, the recreation time is the most awaited time by most of the students. Not just because the classes sometimes are tiring, but because the lunch is very good.\\n\\nWhen the recreation alarm sounds, all the students go out running from the class to arrive as early as possible in the canteen, such is the desire to eat. One of your teachers noticed that there was an opportunity there.\\n\\nUsing a reward system, your math teacher decided that the order in which the students will be served will not be given by the arrival time, but by the sum of grades obtained in class. In this way, those with higher grades can be served before those with lower grades.\\n\\nYour task is simple: given the arrival time of the students in the canteen, and their respective grades in the math class, reorder the queue according to the math grades, and say how many students don't need to change place in this reordering.\",\n    \"id\": 1548,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N, indicating the number of test cases to follow.\\n\\nEach test case starts with an integer M (1 \\u2264 M \\u2264 1000), indicating the number of students. Following there will be M distinct integers Pi (1 \\u2264 Pi \\u2264 1000), where the i-th integer indicates the grade of the i-th student.\\n\\nThe above integers are given in the arrival order, or in other words, the first integer is from the first student to get to the queue, the second integer is from the second student, and so on.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Canteen Queue\",\n    \"output\": \"For each test case print one line, containing one integer, indicating the number of students that don't need to change their places even after the queue being reordered.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Oliveira, UFPR  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"A group of N friends went to a restaurant to have lunch. Although each person\\u00a0decided to order a different dish, they all decided to drink Coke. The group\\u00a0ordered a Coke bottle with L ml, and must now split the content of the bottle\\u00a0between the N people in such a way that each person gets the same amount of the\\u00a0drink.\\n\\nFor each person, there is an empty cup which must be filled with the drink that\\u00a0person will receive. All N cups are equal, and can be described as cone frustum\\u00a0whose height is H cm, the smaller base has a radius equal to b cm, and the\\u00a0larger base has a radius equal to B cm, as indicated by the figure.\\n\\n\\nCups filled with Coke up to the height h cm\\n\\nYour task is to help the group to split the Coke bottle. You must find the\\u00a0height h such that, if each cup is filled with Coke up to the height h cm, then\\u00a0each person gets the same amount of the drink. You may assume that no cup will\\u00a0needed to be filled more than its capacity.\",\n    \"id\": 1549,\n    \"input\": \"The first line of input contains an integer C that determines the number of test cases. Each test case starts with a line containing two integers, N and L (1 \\u2264\\u00a0N \\u2264\\u00a0100, 1 \\u2264\\u00a0L \\u2264\\u00a0108), the number of friends in the group and the amount\\u00a0of Coke in the bottle, in milliliters. The second line contains three integers b,\\u00a0B and H (1 \\u2264 b \\u2264 B \\u2264 100, 1\\u00a0\\u2264\\u00a0H\\u00a0\\u2264\\u00a0100), the radii of the smaller and\\u00a0the larger base, and the height of the cups, in centimeters.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Splitting the Coke\",\n    \"output\": \"For each test case, print the value of h such that all cups must be filled up to\\u00a0the height h cm. Print the answer with 2 decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Peter is a curious boy who liked electronics. One day, the boy was playing in his school lab and found a box full of small electronic devices made \\u200b\\u200bby other students in previous years.\\nInside that box was a device that had only one display and two buttons. This display had an integer. Pressing the buttons, Peter discovered the functions for each of the buttons. The first button add a unit to the number on the display. The second button reverse the digits, for example, 123 inverted is 321 and 150 inverted is 51 (ignore the leading zeros).\\nInitially, the display showed the number A. After discover the functions of the buttons, Peter wants to know how to change the display number of A to a greater number equal to B. Your job in this problem is to help Peter to find out what the minimum number of button pressings to make the display the number be equal to B.\",\n    \"id\": 1550,\n    \"input\": \"The input is started by an integer T,\\u00a00 <\\u00a0T\\u00a0\\u2264 500, which indicates the number of test cases. After this, the input consists of T lines, each one containing two integers A and B,\\u00a00 <\\u00a0A\\u00a0<\\u00a0B\\u00a0< 10000, A is equal to the initial value on the display and B is equal to the final number we need to get on the display.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Inversion\",\n    \"output\": \"For each test, your program must output one integer equal to the minimum number of button pressings to make the number A on the displays change to the number B.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Your English teacher loves to bring new stuff to the class, and today it wasn't different. There is a city, according to your teacher, where the people take really seriously the way they talk to each other. In particular, when two people are talking, they think a lot in the sentence that they are going to say before they say it, so that they can ensure their sentence will be a \\u201cfull sentence\\u201d, or maybe an \\u201calmost full sentence\\u201d.\\n\\nConsidering our 26 letters alphabet, a sentence is \\u201cfull\\u201d if, and only if, it has all the letters of our alphabet in it. In a similar way, a sentence is \\u201calmost full\\u201d if, and only if, it is not \\u201cfull\\u201d, but has at least half of the letters of our alphabet in it. When a sentence is not \\u201cfull\\u201d neither \\u201calmost full\\u201d, it is \\u201cpoorly designed\\u201d.\\n\\nYour teacher gave you a really hard task: given several sentences exchanged between several people from the quoted city, say in which of the given categories each sentence fits in.\",\n    \"id\": 1551,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N, indicating the number of test cases to follow.\\n\\nEach test case contains one line, containing lowercase letters, white spaces and/or commas. The number of characters of each line is at least 3 and at most 1000, counting the spaces.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Complete Sentence\",\n    \"output\": \"For each test case, print one line containing one of the following sentences: \\u201cfrase completa\\u201d, when the sentence is considered full; \\u201cfrase quase completa\\u201d, when the sentence is not considered full, but is considered almost full; or \\u201cfrase mal elaborada\\u201d, when the sentence is not full neither almost full.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Oh, my God! A group of people is falling in free fall! They all jumped at the very same time from several airplanes which were at the very same height. They were intending to perform the greatest and most beautiful synchronised jump in History. However, evil Loki, in order to delight himself in human insignificance, had sabotaged the parachutes, and now the only hope lies in a joint action between Iron Man and Spider-Man. As they both are very nerds, they've noticed that the people were falling all in a same plane parallel to the ground, despite of air resistance and other factors. Then, they've made up an infalible plan. First, the arachnid shall join all the people through web wires between them. Once there is no person not connected to the group, the playboy will be able to eletromagnetise the whole group and, holding the hand of just one person, land them all safely.\\n\\nBut there is no much time left for divagations. Spider-Man needs to be quick, what in his case means spending web as least as possible. Thereunto, Iron Man has projected the plane where the people are in a cartesian mesh in his screen, using the centimetre as unity of length, and has obtained the coordinates of each person in the mesh. Now, J.A.R.V.I.S. is computing the minimum of web Spider-Man will need. Depending on the answer, Iron Man won't wait for the boy and will improvise some stunt.\",\n    \"id\": 1552,\n    \"input\": \"The input consists of several test cases. The first line of input contains an integer C that determines the number of test cases. Each test case starts with a sigle positive integer n (n \\u2264 500), which stands for the number of people in the group. Follow then n lines, each of them representing one person of the group by\\u00a0 one's coordinates x and y in the mesh (0 \\u2264 x, y \\u2264 104).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Rescue in Free Fall\",\n    \"output\": \"For each test case, your program is meant to output a line containing the value with two decimal places of precision relative to the minimum length of web, in metres, needed to connect all the people in the group. Watch for the decimal mark is . (dot), not , (comma).\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Lots of sites in the internet have a page called \\u201cFrequent Asked Questions\\u201d that, as the name itself says, contains the questions that the users make frequently.\\n\\nThe URI portal is used to receive lots of questions from their users, so Neilor decided that it would be a good idea to add a Frequent Asked Questions page to the site. As Neilor is very busy these days, he asked you to help him with this page.\\n\\nGiven the identifiers of the questions asked by the users, say the number of questions that will be added to this new page of the site. A question is considered \\u201cfrequent\\u201d when it is asked at least K times.\",\n    \"id\": 1553,\n    \"input\": \"There will be several test cases. Each test case starts with two integers N and K (1 \\u2264 N \\u2264 1000, 1 \\u2264 K \\u2264 100), indicating the number of asked questions, and the number of times a question must be asked to be considered \\u201cfrequent\\u201d, respectively.\\n\\nFollowing there will be N integers P (1 \\u2264 P \\u2264 100), each indicating the number of a question asked.\\n\\nThe last test case is indicated when N = K = 0, which should not be processed.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Frequent Asked Questions\",\n    \"output\": \"For each test case print one line, containing one integer, indicating the number of questions that will be added to this new page of the site.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By M.C. Pinto, UFFS  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"There are a lot of cue sports. The UFFS (Union of Fascinated Fans of Sports) has developed a new variant of\\u00a0Straight pool, called N.1.\\n\\nIn this variant the shooter may try to hit the white ball at its closest ball at the pool table, among N possible ones. The match is won by the player that gets more hits after 50 attempts.\\n\\nThe game difficulty is at finding out which of the N balls is the closest one to the white. Your task is to write a program that helps the match judges.\",\n    \"id\": 1554,\n    \"input\": \"There are several test cases. The first line of input contains an integer C that determines the number of test cases. For each test case, the input begins with an integer N (1 \\u2264 N \\u2264 50), which defines the number of available balls, besides the white one. The next N + 1 lines contain two integers, x and y, separated by a blank space, indicating the (x, y) ball position on the pool table, one ball for each line (0 < x < 1420 mm e 0 < y < 2840 mm). The first line indicates the position of the white ball. The rstrongaining ones indicate the position of the balls 1, 2, 3,. . . , N-1, N in that order.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"N.1 Continuous\",\n    \"output\": \"For each test case print a line containing only the number of the ball that is closest to the white one. The error allowed is 0.01 mm. If more than one ball satisfy the minimum distance, you must show the smallest number among the tied ones. Always end a line with the new line character (\\\\n).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In the last math class, Rafael, Beto and Carlos learned some new math functions. Each one of them liked one particular function, and they decided to compete to see which function had the higher outcome.\\n\\nThe function that Rafael chose is r(x, y) = (3x)\\u00b2 + y\\u00b2.\\n\\nBeto chose the function b(x, y) = 2(x\\u00b2) + (5y)\\u00b2.\\n\\nCarlos, however, chose the function c(x, y) = -100x + y\\u00b3.\\n\\nGiven the values of x and y, say who chose the function with higher outcome.\",\n    \"id\": 1555,\n    \"input\": \"The first line of input contains an integer N that determines the number of test cases. Each test case consists of two integers x and y (1 \\u2264 x, y \\u2264 100), indicating the variables to input in the function.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Functions\",\n    \"output\": \"For each test case print one line, containing one sentence, indicating who won the contest. For example, if Rafael wins the contest, print \\u201cRafael ganhou\\u201d. Assume that there will be no ties.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By Gabriel Dalalio, ITA  Brazil\\r\",\n    \"category\": \"Strings\",\n    \"description\": \"\\r\\n                    Jo\\u00e3o challenged Pedro in a game involving sequences of letters.\\r\\n\\r\\nIn the beginning, it is shown to the players a sequence of letters. Each player must try to use this sequence to form other sequences. Therefore, it is allowed to remove letters of the sequence, without changing the order. The player who can form more distinct sequences wins the game.\\r\\n\\r\\nPedro would like your help to beat Jo\\u00e3o in this game. Your task is to show Peter all distinct sequences, in alphabetical order, he may form during the game.\\r\\n\\r\",\n    \"id\": 1556,\n    \"input\": \"\\r\\n                    The input contains several test cases. Each test case consists of a line containing a sequence to be used in the game. The sequence is formed only by lowercase characters and can contain up to 1000 characters.\\r\\n\\r\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Removing Letters\",\n    \"output\": \"\\r\\n                    For each test, the output consists of several lines containing all sequences that may be formed by Pedro during the game. It is guaranteed to all entries that are no more than 1000 possible sequences to be formed. Print a blank line after each test case.\\r\\n\\r\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Write a program that read an integer number N (0 \\u2264 N \\u2264 15) that correspont to the order of a bidimentional array of integers, and build the array according to the above example.\",\n    \"id\": 1557,\n    \"input\": \"The input consists of several integers numbers, one per\\u00a0line, corresponding to orders from arrays\\u00a0to be built. The end of input is indicated by zero (0).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Square Matrix III\",\n    \"output\": \"For each integer number of input,\\u00a0print the corresponding array according to the example. The values \\u200b\\u200bof the array must be formatted in a field of size T right justified and separated by a space, where T is equal to the number of digits of the biggest number in the array. None space must be printed after the last character of each row of the array. A blank line must be printed after each\\u00a0array.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Which integer numbers can be represented by a sum of two integer squares?\\n\\nThat is the question that your program must respond!\\n\\nFor example, the number 41 can be represented as (-4)2 + 52 = 41, but 7 cannot be represented in the same way.\",\n    \"id\": 1558,\n    \"input\": \"The input consists of several lines, each line contains an integer with absolute value less than or equal to 10000.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Sum of Two Squares\",\n    \"output\": \"For each line, print \\\"YES\\\" if the number can be represented by a sum of two integer squares, otherwise print \\\"NO\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"This year, the game known as 2048 has become very popular on the internet . Here is a screenshot of the game:\\n\\n\\n\\nThe arrow keys are used to perform moves (up, down, left and right). Every time a key is pressed, the numbered blocks try to slide in the matrix if there is space. In the example image, if the left key is pressed, 5 blocks will move (8, 2, 16, 2, 32).\\n\\nBesides of trying to slide, adjacent blocks\\u00a0with the same number come together in a single block with a doubled number if they try to slide in the right direction. In the example image, if the down key is pressed, two blocks 2 will turn into a block 4 and two blocks 32 will turn into a block 64.\\n\\nDuring the game, in addition to the plays, blocks containing powers of 2\\u00a0appear randomly in the matrix. The goal is to join the blocks to form a block with the number 2048. When this happens, the player wins the game and cannot make any more moves.\\n\\nHowever, it can also happen that the player is left without possible moves before forming the number 2048. In the example image, press the right key is not a legal move, since no block can move or join another block.\\n\\nYour task in this problem is to say which moves is valid for a given state of the game.\",\n    \"id\": 1559,\n    \"input\": \"The input starts with a line containing the number of test cases. For each test case, the input consists of 4 lines containing a square array of size 4. Matrix numbers are equal to 0 to indicate that no block is in the position, or are equal to powers of 2 between 2 and 2048 inclusive.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"2048\",\n    \"output\": \"For each test, the output consists of one line containing all possible moves for the given state of the game. The moves are indicated by DOWN, LEFT, RIGHT and UP. The moves should be written in alphabetical order. If there is no possible move, print NONE.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"In a plane there are N black points and M white points, without any 3 collinear points. The energy of a triangle is equal to K2, where K is the number of white points inside the triangle. What is the sum of energy of all triangles that can be formed by the black points?\",\n    \"id\": 1560,\n    \"input\": \"The input contains several test cases. Each test case starts with a line with two integers N and M (1 \\u2264 N, M \\u2264 100), representing the number of black and white points respectively. After the first line, there are more N + M lines with integer coordinates X, Y (0 \\u2264 X, Y \\u2264 10000) of the black and white points. The N first\\u00a0coordinates represent the black points and the last M lines represent the white points.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Triangle Energy\",\n    \"output\": \"For each test, the output consists of one line containing the energy sum of all triangles formed by black points.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\r\\n                    By Gabriel Dalalio, ITA  Brazil\\r\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n                    Some programmers like to be weird and use binary watches like this one in the picture below:\\u00a0\\r\\n\\r\\n\\r\\n\\r\\nThere are also programmers who like to create questions for online competitions, but don't like to write long and detailed texts in the questions.\\u00a0\\r\\n\\r\\nYour task in this problem is to draw the clock image at a given time.\\r\\n\\r\",\n    \"id\": 1561,\n    \"input\": \"\\r\\n                    The input consists of several test cases. Each test case consists of one line containing a time in the format HH:MM (0 \\u2264 HH\\u00a0< 12 e 0 \\u2264\\u00a0MM < 60).\\r\\n\\r\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Binary Watch\",\n    \"output\": \"\\r\\n                    For each test, the output consists of a clock picture in the time given at the input (the picture should match exactly the format in the examples). Print a blank line after each picture.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"A teacher wants to split all the students in pairs to realize a school work. When this happens, there is a lot of fighting between students to choose the work partner, because many students want to choose the best students in the class.\\u00a0\\n\\nThis time, the teacher decided to choose the pairs in a different way. Each student will choose a partner and tell the teacher. After this, the teacher will choose the pairs so that all pairs meet at least the option of one student in the pair.\\u00a0\\n\\nNow I think you already know what is your work on this problem. Given the option list of the students, print the list of pairs the teacher should choose.\",\n    \"id\": 1562,\n    \"input\": \"The input consists of several test cases. Each test case consists of two lines. The first line of a test case contains an integer N (2 \\u2264 N \\u2264 10000) equal to the number of students in the classroom. The second line contains the wishes of all students in order (the person chosen by the student 1, by the student 2, etc). No student will choose himself.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Choosing the Pairs\",\n    \"output\": \"For each test, the output consists of one line. If it is impossible to form the pairs satisfying the rule chosen by the teacher, print \\\"IMPOSSIBLE\\\". If there is a solution, print the partners of each student in order (student 1 partner, student 2 partner, etc). If there is more than one solution, you must prioritize the option of students with small identification number, which means, whenever possible you must meet the option of the student 1, then try to meet the option of the student 2, and so on. Remember that we are choosing pairs, if the partner of the student X is equal to Y, then the partner of the student Y should be X.\\n\\nIn the last case of the samples, the pairs are (1,3), satisfying the student 1 option, and (2,4), satisfying the student 4 option.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Choosing randomly two integers A and B between 1 and N inclusive, what is the chance that the number B is less than or equal to the remainder of N divided by A? \\n\\n                    For example, for N = 5, there are 25 possible choices for (A, B), but the only pairs that satisfy the condition are (2,1), (3,1), (3,2) and (4,1). Therefore, for N = 5 the probability is 4/25.\",\n    \"id\": 1563,\n    \"input\": \"The input consists of several test cases. Each test case consists of a line containing an integer N (1 \\u2264 N \\u2264 108).\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Big Problem\",\n    \"output\": \"For each test, the output consists of a line containing the irreducible fraction that answers the given question.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Brazil is the country hosting the world cup this year. However, there are many people protesting against the government. In social networks you can see people saying the world cup will not happen.\\n\\n                    But these rumors that there will be no world cup are totally false, president Dilma Rousseff has warned: the world cup will happen, and if someone complains about it, we will host again!\",\n    \"id\": 1564,\n    \"input\": \"The input contains several test cases and ends with EOF. Each test case consists of a line containing a number N of complaints about the world cup forwarded to the president (0 \\u2264 N \\u2264 100).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Brazil World Cup\",\n    \"output\": \"For each test, the output consists of one line saying \\\"vai ter copa!\\\" if there is no complaints for president. If there are complaints, the output should say \\\"vai ter duas!\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Dalalio, ITA  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"I'll give you a challenge! You will receive an array of size N by M, with the characters '-', '#' and '*'. See an example below:\\n\\n*-#-*\\n-----\\n--*--\\n####-\\n*----\\n\\nThe character '#' means obstacles, the characters '-' mean empty spaces and the characters '*' mean points. Your job is to put the minimum amount of additional points needed to make all points connected. You can only put more points in empty spaces. For example, for the matrix above, you need at least 7 additional points to connect all the points, as shown in the following figure:\\n\\n*-#-*\\n-*-*-\\n--*-*\\n####*\\n****-\\n\\nDo you accept the challenge?\",\n    \"id\": 1565,\n    \"input\": \"The input contains several test cases. Each test case starts with a line containing two integers N and M indicating the dimensions of the matrix (1 \\u2264 N*M \\u2264 100). After the first line, the next N lines describe the array in the same manner shown in the statement.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Connect the Points\",\n    \"output\": \"For each test, the output consists of one line containing the minimum number of additional points that need to be added to the matrix to connect all the points. If it is impossible to connect all the points, print 'impossivel'.\",\n    \"timelimit\": 9.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Full of good ideas, now, the Brazilian government decided to create the \\\"height benefit\\\". This way, you were instructed to survey the height of the population of various cities and to sort this population in ascending order of height. You know that the cities that you have to to do this don't have more than 3 million of people and, according to the IBGE, in these cities, no one person has more than 230 cm.\\r\",\n    \"id\": 1566,\n    \"input\": \"The input contains many test cases. The first line of input contains an integer NC\\u00a0(NC < 100) that indicates the among of test cases, ie. cities. For each test case, the first line will contain an integer N\\u00a0(1 < N \\u2264 3000000), indicating the among of people in the city.\\n\\t\\t\\t\\t\\tThe next line will contain the height of each one of these citizen, in centimeters, represented by h\\u00a0(20 \\u2264 h\\u00a0 \\u2264 230). Each height is separated by a blank space.\\r\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Height\",\n    \"output\": \"For each test case, print a line containing all numbers representing the height of all citizens (in cm) in ascending order, separated by a blank space.\\r\\n\\t\\t\\t\\t\\tObs.: The input file is very large, so you need to use fast input and output methods.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Shahriar Manzoor, SEU  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"You can see a (4x4) grid below. Can you tell me how many squares and rectangles are hidden there? You can assume that squares are not rectangles. Perhaps one can count it by hand but can you count it for a (100x100) grid or a (10000x10000) grid. Can you do it for higher dimensions? That is can you count how many cubes or boxes of different size are there in a (10x10x10) sized cube or how many hyper-cubes or hyper-boxes of different size are there in a four-dimensional (5x5x5x5) sized hypercube. Remember that your program needs to be very efficient. You can assume that squares are not rectangles, cubes are not boxes and hyper-cubes are not hyper-boxes.\\u00a0\\n\\n\",\n    \"id\": 1567,\n    \"input\": \"The input contains one integer N (0 \\u2264 N \\u2264 100) in each line, which is the length of one side of the grid or cube or hypercube. As for the example above the value of N is 4. There may be as many as 100 lines of input.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"(2/3/4)-D Sqr/Rects/Cubes/Boxes?\",\n    \"output\": \"For each line of input, output six integers S2, R2, S3, R3, S4, R4 in a single line where S2 means the number of squares inside the (NxN) two-dimensional grid, R2 means the number of rectangles inside the (NxN) two-dimensional grid. S3, R3, S4, R4 have the same meaning but in higher dimensions as described before.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Por Shahriar Manzoor, SEU  Bangladesh\\n\\t\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"All the positive numbers can be expressed as a sum of one, two or more consecutive positive integers. For example 9 can be expressed in three such ways, 2+3+4, 4+5 or 9. Given an integer less than (9*1014+1) or (9E14 + 1) or (9*1014 +1) you will have to determine in how many ways that number can be expressed as summation of consecutive numbers.\",\n    \"id\": 1568,\n    \"input\": \"The input file contains less than 1100 lines of input. Each line contains a single integer N (0 \\u2264 N \\u2264 9E14). Input is terminated by end of file.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"{sum+=i++} to Reach N\",\n    \"output\": \"For each line of input produce one line of output. This line contains an integer which tells in how many ways N can be expressed as summation of consecutive integers.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ond\\u0159ej Lhot\\u00e1k, University of Waterloo  Canada\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Snakes and Ladders is a board game played on a 10 by 10 grid. The squares of the grid are numbered 1 to 100. Each player has a token which is placed on the square numbered 1 at the beginning of the game. Players take turns rolling a die which provides a random number between 1 and 6. After rolling, the player advances his or her token the number of squares shown on the die. If this would put the token past the square numbered 100, the token is advanced to 100. After advancing, if the token is on a square containing the bottom of a ladder, the token must be moved to the square containing the top of the ladder. Similarly, if the token is on a square containing the mouth of a snake, the token must be moved to the square containing the tail of the snake. No square contains more than one endpoint of any snake or ladder. The square numbered 100 does not contain the mouth of a snake or the bottom of a ladder. A player wins when his or her token reached the square numbered 100. At that point, the game ends.\\n\\nGiven the configuration of the snakes and ladders on a game board and a sequence of die rolls, you are to determine the positions of all the tokens on the game board. The sequence of die rolls need not be complete (i.e. it need not lead to any player winning). The sequence of die rolls may also continue after the game is over; in this case, the die rolls after the end of the game should be ignored.\",\n    \"id\": 1569,\n    \"input\": \"The first line is the number of test cases to follow. The test cases follow, one after another; the format of each test case is the following:\\n\\nThe first line contains three positive integers: the number a of players, the number b of snakes or ladders, and the number c of die rolls. There will be no more than 1000000 players and no more than 1000000 die rolls. Each of the next b lines contains two integers specifying a snake or ladder. The first integer indicates the square containing the mouth of the snake or the bottom of the ladder. The second integer indicates the square containing the tail of the snake or the top of the ladder. The following c lines each contain one integer giving number rolled on the die.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Snakes and Ladders\",\n    \"output\": \"For each player, output a single line containing a string of the form Position of player N is P., where N is replaced with the number of the player and P is replaced with the final position of the player.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"Por Shahriar Manzoor, SEU  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"X and Y are two integer numbers and X>=Y. The values of X and Y fits in 16-bit signed integer. When the summation of these two numbers is multiplied with Y we get P and when the absolute value of the subtraction of these two numbers is multiplied with X we get Q. Given the value of P and Q you must find the value of X and Y.\",\n    \"id\": 1570,\n    \"input\": \"The first line of the input file contains an integer N (N<=75000) that denotes how many lines of inputs are there. Each of the next N lines contains two integers which denotes the values P and Q respectively, here |P| <2 31, |Q| < 231.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"A Day in Math-Land\",\n    \"output\": \"For each line of input except the first one produce exactly two lines of output. The first line contains the serial of output and the next one contains possible values of X and Y (One pair of values in each line). If there is more than one solution print the pair with smaller X value. When the given values of P and Q is impossible for any integer value of X and Y print the line \\u201cImpossible.\\u201d instead.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Shahriar Manzoor, SEU  Bangladesh\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"The figure 1, 2, 3, 4, 5, 6 and 7 shows how 1, 2, 3, 4, 5, 6 and 8 triangles of equal size can be put int a square optimally. Obviously, if the square size remains same the triangle sizes will be decreasing from figure 1 to 7. Given the square size you will have to find out the sides of the triangles for all seven figures. You can assume that when the images look exactly symmetric along a certain axis they are actually symmetric along that certain axis. Also note that I am asking you to print the decimal value of the exact solution and not any approximate solution.\\n\\n\\u00a0\",\n    \"id\": 1571,\n    \"input\": \"The input file contains several lines of input. Each line contains a single floating point number S (0<=S<=10000) which denotes the side of a square. Input is terminated by end of file.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"A Square & Equilateral Triangles\",\n    \"output\": \"For each line of input produce one line of output. Each line will contain seven floating point numbers t1, t2, t3, t4, t5, t6 and t7. Here t1, t2, t3, t4, t5, t6 and t7 denote the length of the side of a triangle for the given input in case 1, 2, 3, 4, 5, 6, and 7 respectively. All floating point numbers should have ten digits after the decimal point. The output will be checked with special correction program. So small precision errors will be ignored.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Shahriar Manzoor, SEU  Bangladesh\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In this particular problem, The Unreal Tournament is a tournament, which consists of only two teams. Let these two teams be Abahoni and Mohamedan. They play in between them not more than 2N - 1 games, the winner being the first team to achieve n victories. You can assume that there are no tied games, the result of each game is independent and for any match there is a constant probability P that team Abahoni will win and hence there is a constant probability Q(Q = 1 - P) that team Mohamedan will win.\\n\\nP(i, j) is the probability that team Abahoni will win the series given that they still need i more victories to achieve this, whereas team Mohamedan still need j more victories if they are to win. The P(i, j) can be computed with a function like the following:\\n\\nFunction P(i, j){\\n\\u00a0\\u00a0\\u00a0if i = 0 then return 1\\n\\u00a0\\u00a0\\u00a0else if j = 0 then return 0\\n\\u00a0\\u00a0\\u00a0else return pP(i-1,j) + qP(i,j-1)\\n}\\n\\nYou will have to write a program that gives the probability of winning for any P, i and j and also gives the number of recursive calls required if the function above is used to get the probability P(i,,j).\",\n    \"id\": 1572,\n    \"input\": \"The input file contains several sets of input. The first line of a set contains one floating-point number P(0 < P < 1), and an integer N(0 \\u2264 N < 1001) where P is the winning probability of Abahoni and N is the number queries to follow. Each of the next N lines contains two integers i(0 \\u2264 i \\u2264 1000) and j(0 \\u2264 j \\u2264 1000). Input is terminated by a set, which has zero as the value of N. This set should not be processed.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Unreal Tournament\",\n    \"output\": \"For each query you should print two lines. The first line contains the value of P(i, j) with five digits after the decimal and the second line contains a round number which is the number of recursive calls needed if the function mentioned above was used to determine the value of P(i, j). If the value of P(i, j) is undefined you should print -1 as its value with similar formatting. A blank line should be printed between the outputs of two consecutive sets.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Gabriel Duarte, UNIFESO  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"One factory produces chocolate bars in cubes and parallelepipeds with the same volume. However, since the machine that produces chocolate cubes has been showing some problems, the owners asked you for help to fix this problems.\\n\\t\\t\\t\\t\\tYour task is, given the size of the edges of the parallelepipeds chocolate, inform the size the edge of the cube form should have.\",\n    \"id\": 1573,\n    \"input\": \"The input contains several test cases. The first line of each test case contains three integers A, B and C (1 \\u2264 A, B, C \\u2264 103), indicating the size of the edges of the parallelepiped. The input ends when A = B = C = 0, and should not be processed.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Chocolate Factory\",\n    \"output\": \"For each input, you must print an integer that should be truncated, representing the size that the edge in cube form should have.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rujia Liu, Tsinghua University  China\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You have a robot standing on the origin of x axis. The robot will be given some instructions. Your task is to predict its position after executing all the instructions.\\n\\n\\n\\tLEFT: move one unit left (decrease p by 1, where p is the position of the robot before moving)\\n\\tRIGHT: move one unit right (increase p by 1)\\n\\tSAME AS i: perform the same action as in the i-th instruction. It is guaranteed that i is a positive integer not greater than the number of instructions before this.\",\n    \"id\": 1574,\n    \"input\": \"The first line contains the number of test cases\\u00a0T (T <=\\u00a0100). Each test case begins with an integer\\u00a0n ( 1 <= n <= 100), the number of instructions. Each of the following\\u00a0n\\u00a0lines contains an instruction.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Robot Instructions\",\n    \"output\": \"For each test case, print the final position of the robot. Note that after processing each test case, the robot should be reset to the origin.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Unknown Author\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In Act II, Masetto is leading a group of villagers to chase after Don Giovanni. Giovanni, who has just exchanged his clothes with Leporello and is disguising as him, is asked by Masetto about where \\\"his master\\\" has gone. To avoid trouble, \\\"Leporello\\\" (disguised by Giovanni) wants to mislead the villagers so that they cannot find \\\"Don Giovanni\\\" (disguised by Leporello). Giovanni knows the route that Leporello is taking, and he has a safe route (a route that the villagers would not meet Leporello) in mind. He wants to make sure that the route he has is safe indeed.\",\n    \"id\": 1575,\n    \"input\": \"The input begins with a single positive integer on a line by itself indicating the number of the cases following, each of them as described below. This line is followed by a blank line, and there is also a blank line between two consecutive inputs.\\n\\nYou are given the current location of Don Giovanni (which is also the location of Masetto and the villagers), and the current location of Leporello, in two separate lines. Each line has two numbers: the Street number and the Avenue number. You can assume that the roads are regular square grids, with rows as streets numbered from one starting from the northmost, and columns as avenues numbered from one starting from the westmost. Therefore the distance between adjacent streets and avenues is always the same.\\n\\nThe rest of the input has two sets of routes, with the first set being Leporello's and the second being the route that Giovanni is going to tell the others. Each set starts with a number indicating the number of stops in the route, followed by the list of stops. Each stop is specified as a location, where Leporello may change direction. Between stops there is always a straight line in the direction of parallel to either streets or avenues, which Leporello and the villagers are going to travel.\\n\\nLeporello travels in the same speed as the villagers. You may assume the maximum street/avenue number is 1000000, and there are at most 100 stops.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Chasing After Don Giovanni\",\n    \"output\": \"For each test case, the output must follow the description below. The outputs of two consecutive cases will be separated by a blank line.\\nThe output consists of a line saying \\\"Yes\\\" or \\\"No\\\", indicating whether the route that Giovanni is telling the villagers is a safe route. Remember that a route is not safe only if the villagers can meet Leporello in the same place at the same time; a route is safe even if the villagers meet Leporello at the destination (because his mission is accomplished).\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Unknown Author\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"With the advent of high speed graphics workstations, CAD (computer-aided design) and other areas (CAM, VLSI design) have made increasingly effective use of computers. One of the problems with drawing images is the elimination of hidden lines \\u2014 lines obscured by other parts of a drawing.\\nYou must design a program to assist an architect in drawing the skyline of a city given the locations of the buildings in the city. To make the problem tractable, all buildings are rectangular in shape and they share a common bottom (the city they are built in is very \\ufb02at). The city is also viewed as two-dimensional. A building is speci\\ufb01ed by an ordered triple (Li, Hi, Ri) where Li and Ri are left and right coordinates, respectively, of building i and Hi is the height of the building. In the diagram below buildings are shown on the left with triples\\n\\n(1,11,5),(2,6,7),(3,13,9),(12,7,16),(14,3,25),(19,18,22),(23,13,29),(24,4,28)\\n\\nthe skyline, shown on the right, is represented by the sequence:\\n\\n(1,11,3,13,9,0,12,7,16,3,19,18,22,3,23,13,29,0)\",\n    \"id\": 1576,\n    \"input\": \"The input is a sequence of building triples. All coordinates of buildings are integers less than 10,000 and there will be at least one and at most 5,000 buildings in the input \\ufb01le. Each building triple is on a line by itself in the input \\ufb01le. All integers in a triple are separated by one or more spaces. The triples will be sorted by Li , the left x-coordinate of the building, so the building with the smallest left x-coordinate is \\ufb01rst in the input \\ufb01le.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Skyline Problem\",\n    \"output\": \"The output should consist of the vector that describes the skyline as shown in the example above. In the skyline vector (v1, v2, v3, . . . , vn\\u22122, vn\\u22121, vn), the vi such that i is an even number represent a horizontal line (height). The vi such that i is an odd number represent a vertical line (x-coordinate). The skyline vector should represent the \\\"path\\\" taken, for example, by a bug starting at the minimum x-coordinate and traveling horizontally and vertically over all the lines that de\\ufb01ne the skyline. Thus the last entry in all skyline vectors will be a 0.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Alexandre Campos, UNIUBE  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The investigation of which regular polygons can be constructed only with compass and straightedge is a classical problem in mathematics. Triangle, square, hexagon can easily be constructed, but, can we construct a regular heptagon? It was the German mathematician Gauss (1777-1855) who first proved that one could construct a 17-sided regular polygon and later, in one the of the most beautiful math works of all time (Disquisitiones Arithmeticae, 1798), he gave sufficient conditions to decide which regular polygons can be constructed.\",\n    \"id\": 1577,\n    \"input\": \"In the first line, an integer T<50000 representing the number of test cases; then, T integer numbers representing the number of sides of a non-degenerated regular polygon, up to 1000000 (106).\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Constructible Regular Polygons\",\n    \"output\": \"Print \\u201cYes\\u201d if the regular polygon can be constructed with compass and straightedge or \\u201cNo\\u201d otherwise.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Atrapalhilton is a student very dedicated, though very, very clumsky. Last week, his Math teacher, Mr. Sabetudilton, recommended the class a list of exercises about matrices. Atrapalhilton, diligent as he is, decided to make the exercises at the very same day, as soon he arrived home, though only after watching the evening episode of The Striped Little Hen, his favorite TV show. In the statement of one of the exercises it could be read:\\n\\n                    \\n                    \\tCalculate the square of each one of the matrices below\\u2026\\n                    \\n\\n                    However, Atrpalhilton made a huge mass. For him, the square of a square matrix A is the matrix of the squares of the values of matrix A. For example, the square of matrix\\n\\n                    \\n                      \\n                        1\\n                        3\\n                      \\n                      \\n                        5\\n                        7\\n                      \\n                    \\n\\n                    is not for him,\\n\\n                    \\n                      \\n                        16\\n                        24\\n                      \\n                      \\n                        40\\n                        64\\n                      \\n                    \\n\\n                    but\\n\\n                    \\n                      \\n                        1\\n                        9\\n                      \\n                      \\n                        25\\n                        49\\n                      \\n                    \\n\\n                    Atrapalhilton got to calculate the \\u201csquare\\u201d of the first, the second and the third matrices and realised that it was already too late, that he wouldn't be able to finish calculating the \\u201csquares\\u201d of all N matrices of the list. Hence, he decided to write a program which would do the job for him.\",\n    \"id\": 1578,\n    \"input\": \"The first line of the input consists of a single positive integer N (N \\u2264 100), which stands for the number of matrices whose \\u201csquares\\u201d have not been calculated yet. Follow the description of each one of the N matrices. The first line of the description of a matrix consists of a single integer M (1 \\u2264 M \\u2264 20), which represents the number of lines and the number of columns of the matrix. Follow, then, M lines, each one of M integers aij (0 \\u2264 aij \\u2264 232-1, 1 \\u2264 i,j \\u2264 M), which correspond to the cells of the matrix, in a way such that consecutive values in a same line are separated by a blank space.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Matrix of Squares\",\n    \"output\": \"Print the \\u201csquare\\u201d of each matrix of the input, according to the meaning of the \\u201csquare\\u201d of a matrix to Atrapalhilton. Before printing each \\u201csquare\\u201d, print the line \\u201cQuadrado da matriz #x:\\u201d (without the quotation marks), in order to help Atrapalhilton not to get lost while writing out the results to the notebook. Start the counting in x = 4, after all, Atrapalhilton has already calculated the \\u201csquares\\u201d of the first 3 matrices. Add as much blank spaces as needed to the left of each value in order to get the values of a same column altogether flush right, so that there is a blank space in addition to the mandatory blank space which separates consecutive columns. Print also a blank line between two consecutive \\u201csquares\\u201d of matrices.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"In the last years, some companies has been very actuating in producing energy based on solar panels. Obviously the most appropriate place for it is the deserts. In the Mojave Desert, United States, several plants have been installed for solar power generation, such as the Nellis solar power plant, located on Nellis Air Force Base in Clark County, Nevada. This plant generates more than 30 million kilowatt hours of electricity per year. The project of 100 million U.S. dollars started the production of energy in late 2007, the plant is powered by 72,000 solar panels tracking the sun covering 140 acres. Apart from Nellis, other power plants such as Sierra Sun Tower, Copper Mountain Solar One and others were built in the same desert.\\n\\n                    \\n\\n\\n                    Spain already uses a solar plant in the Sahara Desert that was built by Solar Millennium. The project was so successful that now other companies are starting new projects in this region to generate energy for Europe.\\n\\n                    Well, you own a transport company with many trucks and was hired by the company to transport Delta Solar solar panels in the Sahara. The panels have different sizes and weights related to the structure of each set of panels, which changes according to the location where they are to be installed. The transport them must be done in the correct sequence, which is exactly the sequence in which they appear on the entry.\\n\\n                    The calculation of shipping is done according to the weight of their trucks and transported by the distance that trucks should go panels. It was agreed that every day you enter the amount of trucks available (this changes because some go to maintenance, new ones arrive, etc.) and a charge of Solar Delta will try to separate the loads to minimize the transportation value, since for initial hit, will pay the freight using as reference the heaviest load carried on, multiplied by the number of trucks used in transport.\",\n    \"id\": 1579,\n    \"input\": \"The first line of input contains an integer N that determines the number of test cases (or days of working in the desert). Each test case is composed by two lines. The first line contain three integer numbers: nPainels (4 \\u2264 nPainels \\u2264 100), trucks (1 \\u2264 trucks \\u2264 10) and freight (1 \\u2264 freight \\u2264 50) separated by a blank space, indicating respectively the number of panels to be transported, the number of trucks used to this transport and the freight value for each kg transported. The following line contains the weight (1 \\u2264 weight \\u2264 1000) of each panel, separated by a blank space.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Transport of Solar Panels\",\n    \"output\": \"For each test case, your program must print a line, informing the weight of the most loaded truck, followed by a blank space and the total value of freight value for a day worked.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brasil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"A long time ago, in a galaxy far, far away, the Unidade Federativa Fazedora de Segredos (UFFS) often used to send e-mails to the Unidade Receptora do Imp\\u00e9rio (URI) with the codes that should be changed every hour in the Death Star security system. Fearing that the e-mails could be intercepted by the Rebel Alliance, UFFS signed each e-mail with one of the 12 different anagrams of its own acronym, as FUFS or SUFF, for example. It has not taken so long to the habit turn into an addiction among the imperial organs, and some more curious stormtroopers started to ask themselves how many anagrams would have any word.\",\n    \"id\": 1580,\n    \"input\": \"The input consists of a list of words, one per line, and ends up with EOF (end of file). A word in turn is composed by at least one and at most 103 letters of the latin alphabet, capital only, with no blank spaces nor any other symbols.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Quid Est Veritas? Est Vir Qui Adest!\",\n    \"output\": \"For each word print a line containing an integer which represents the number of anagrams which is possible to form with that word. As this number can be very big, print just the remainder it leaves when divided by 109 + 7.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Rafael recently won a scholarship and is studying outside of Brazil, where he met several people from several different nationalities. The native language of this country is English, and all the people that Rafael met speak English as either first or second language.\\n\\nAs learning a second language is a hard and tiring task, some people prefer to talk in their own native language whenever possible. One exception to this rule is when there are two people in the group that doesn't have the same native language. In this kind of situation, the language they speak is English.\\n\\nFor example, if there is a group with only brazilians, the spoken language will be Portuguese, but if there is a spanish person between them, the spoken language will be English.\\n\\nRafael sometimes get confused about which language should be spoken in each group of people, and then he asked your help.\",\n    \"id\": 1581,\n    \"input\": \"The first line will contain an integer N, representing the number of test cases to follow.\\n\\nEach test case starts with an integer K (2 \\u2264 K \\u2264 100), representing the number of people in the group. Following there will be K lines, containing a string S each, representing the native language of these K people.\\n\\nEach string will contain at least 1 and at most 20 characters, with lower case letters only (a-z).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"International Chat\",\n    \"output\": \"Print one line, containing a string S, representing the most appropriate language for the situation.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Pythagoras was a greek mathematician before Euclid who lived between 570 and 495 BC, considered by Aristotle as \\u2018the first mathematician\\u2019. One of the most ancient and most important theorems in History, the Pythagorean Theorem states that, in any right triangle, the square of the hypotenuse equals the sum of the squares of the catheti. The Theorem has several applications and is the base of many results in Mathematics, Engineering, Physics and Computer Science. Although the Theorem takes Pythagoras's name, it is believed that babylonian mathematicians, even more ancient, had yet knowledge of the formula.\\n\\n                    \\n\\n                    We call a positive integers triple (x, y, z) a pythagorean triple if it is possible to exist a right triangle with sides x, y and z, no matter the order the integers appear in the triple. For example, (3, 4, 5), (6, 8, 10) and (5, 13, 12) are pythagorean triples, because 52 = 32 + 42, 102 = 62 + 82 and 132 = 52 + 122. However, triple (6, 8, 10) is just triple (3, 4, 5) multiplied by 2, and, for that, we say that (6, 8, 10) is not a primitive pythagorean triple. A pythagorean triple (x, y, z) is said to be primitive if gdc(x, y, z) = 1. Euclid proved in 3rd century BC that there are infinite primitive pythagorean triples.\",\n    \"id\": 1582,\n    \"input\": \"Each line of the input consists of 3 integers x, y e z (1 \\u2264 x, y, z \\u2264 104), separated by a blank space and given not necessarily in any order and it ends with EOF.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"The Pythagorean Theorem\",\n    \"output\": \"Print for each input line the line \\u201ctripla pitagorica primitiva\\u201d (without quotation marks) if the given integers form a primitive pythagorean triple, \\u201ctripla pitagorica\\u201d if they form a non-primitive pythagorean triple, or \\u201ctripla\\u201d if they form no pythagorean triple at all.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Hermann Negri, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The year is 2241, and the colonization of other planets is now a reality. You work in the control center of resources on the planet URI-942, mainly controlling the water supplies. The water is stored in underground tanks, protected from the high surface temperatures.\\n\\nBut, your fellow colleagues Ana and M\\u00e1rcio found some shortcomings in the walls of tanks, which can lead to contamination of the water stock. Your colleagues were able to identify the points where there may be flaws with the infiltration of contaminants. Knowing that the contaminants spread throughout the water tank affected, your task is to estimate the contamination of the water according to the maps provided by their peers.\\n\\nThe maps were discretized into cells, and cells may correspond to a region of rock, water (tank) or a contaminant. Because the cracks, a cell with contaminant contaminate adjacent cells (left, right, above and below) containing water, but contamination is barred by cells of rock.\",\n    \"id\": 1583,\n    \"input\": \"The input consists of several maps, and a description of each map starts with a line containing two integers N and M, corresponding to the number of rows and columns of the map. The following N lines describe the map, each line containing M characters, beyond the jump line. Possible characters are A, which is a cell containing water, X represents a cell with rock and T represents a cell with contaminant.\\n\\nThe entry ends when N = M = 0, the case should not be processed. In all maps, N and M are less than or equal to 50.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Contamination\",\n    \"output\": \"For each map, print an estimation of future contamination. This estimation should match the original map (as seen at the entrance), but replacing the cells with water that have been contaminated by the character T. Leave a blank line after each map (including the last map).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"The UFFS (Uni\\u00e3o Federal dos Fabricantes de Selulares[sic]), a company 100% brazilian company, of group MEC (Mercado da Espan\\u00e7\\u00e3o[sic] Comercial), has just launched Espertofone, to compete against imported smartphones. Espertofones run a proper operational system, called Androido. When a user turns an Espertofone with Androido on, appears a unlock screen with a grid of N \\u00d7 N buttons. The user is supposed to, then, without untouching the finger off the screen, slide it through the buttons in order to draw his previously recorded unlock pattern and, thus, unlock the phone to be used. The system always maintains on screen a line segment with one endpoint on the last button taken and the other under the user's finger, and considers that the user takes a button B if and only if this line segment intercepts the centre of B. Differently than what happens with the rival company, in Android the user can repeat buttons, as long as it is possible. The Figure ilustrates a unlock pattern with K = 8 segments in a 4 \\u00d7 4 grid, enumerating the segments. Notice that, in a 4 \\u00d7 4 grid, it is not possible that button (3, 3) follows button (1, 1) in a unlock pattern, because the segment would mandatorily pass through the centre of button (2, 2). Obviously, never is possible that a button follows itself. In this problem, consider that the finger's user is as thin as necessary to conect buttons that can theoretically follow each other\\n\\n                    \\n\\n\\nUFFS wants now to prove that its system is better than the rival's, calculating the number of unlock pattern with K segments.\",\n    \"id\": 1584,\n    \"input\": \"The input consists of several test cases, each one in a line and in turn consisted of two integers: N e K (2 \\u2264 N \\u2264 5, 0 \\u2264 K \\u2264 1015).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Espertofone\",\n    \"output\": \"Printf for each test case the number of possible unlock patterns with exactly K line segments, considering a grid N \\u00d7 N. As this number can be very large, print the remainder this number leaves when divided by 109 + 7.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Neilor Tonin, URI  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Anastasia really loves to build kites to her friends. Peter, knowing that, took some bamboo pieces from the furniture factory of his uncle that it would be descarted, to give to Anastasia. When Peter gave the bamboos to her, he asked what was the biggest kite that could be built with those patches of bamboo. Anastasia, that is not very good with calculus, wants you to help her with this task.\\n\\n                    Note .: Each kite is built with two pieces of bamboo tied cross-shaped, forming a lozenge.\",\n    \"id\": 1585,\n    \"input\": \"The input contains many test cases. The first line of input contains an integer N that represents the among of kites that will be built. Each one of the N following lines contains two integer numbers x (10 \\u2264 x \\u2264 100) and y (10 \\u2264 y \\u2264 100) that indicates the size of the two bambus used to built the kite.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Making Kites\",\n    \"output\": \"For each test case, print a truncate integer number corresponding to the area of the kite created, in cm2, followed by a blank space and the text \\\"cm2\\\", without the quotes.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"At 2013 ACM ICPC Regional South America/Brazil Contest in Uberl\\u00e2ndia, during a period of leisure, Prof. Carlinhos (USP) came up with an activity for all the students. He first organised the students in ascending lexicographical order, considering only the first name and ignoring diacritics. Then, he drew a student and assembled two teams, A and B: team A would consist of those students in order up to the drawn student; team B would in turn consist of those students who came after the drawn student in the order. Both teams would compete in a traditional tug of war, and the winners would win a coffee.\\n\\nMany curious things Prof. Carlinhos realised that day:\\n\\n\\n\\tThe strength of each student, when placed right in front the adversary (position 1), was exactly equal to the sum of the values corresponding to the characters in ASCII table of the first name of student. Thus, the strength of student Leandro, if placed in position 1 of a team (no matter A or B), would be equal to:\\n\\n\\n709 = 76 + 101 + 97 + 110 + 100 + 114 + 111 = \\u2018L\\u2019 + \\u2018e\\u2019 + \\u2018a\\u2019 + \\u2018n\\u2019 + \\u2018d\\u2019 + \\u2018r\\u2019 + \\u2018o\\u2019\\n\\n\\n\\tThe farther from adversary team, less intimidated \\u2014 and, in consequence, stronger \\u2014 a student gets. More specifically, a student in position 2 of a team was twice stronger than he or she would be if had been placed in position 1. In position 3, three times etc. Positions of both teams are counted starting the counting in 1 at the closest position to the adversary team. For example, if student Leandro was placed in position 3 of a team, he would have strength equal to 3 \\u00d7 709 = 2127.\\n\\tThe strength of a team was equal to the sum of the strengths of all its team members. Nevertheless, if the strength of team A was greater than the strength of team B, team A certainly would win. However, if it was less than, team B certainly would. Finally, if both strengths were equal, the teams would be tied.\\n\\n\\nIs there any student Prof. Carlinhos could draw so that the teams A and B would tie?\",\n    \"id\": 1586,\n    \"input\": \"The input consists of many test cases. The first line of each test case consists of a single integer N (1 \\u2264 N \\u2264 105), which represents the number of students. Follow then N lines, each one containing the first name of the student. The names of the students are given according to the ascending lexicographical order, and at least 1 and at most 10 latin letters form the name of a student. There is no test case with two students with the same first name, and the first letter of a name is always capital, while the other letters are small. N = 0 ends the input.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Tug of War\",\n    \"output\": \"Print the name of the student who, if drawn, would make the teams A and B to tie. If there is no such student, just print the line: \\u201cImpossibilidade de empate.\\u201d (without the quotation marks).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"The 2014 ACM ICPC South America Contest in Brazil will take place in Fortaleza, and the brave contestants from Chapec\\u00f3, excited, have already started packing their bags, hoping that they will pass in the Subregional Contest. The state capital of Cear\\u00e1, with a population of 2,551,805 inhabitants (according to the 2013 IBGE Census), is worldwide known for its beautiful beaches, its luxury hotels, inns and restaurants, its magnificent Architecture masterpieces, its cheerful and hospitable people, as also for its extraordinary water parks. Longing to defeat the hegemony of the biggest water park in town, a local IT company, named NCC (N\\u00facleo de Computa\\u00e7\\u00e3o Cearense), has built a water park even bigger, named BIT Park, which is going to be opened this year. For the opening the entire population of the city was invited, and NCC promises many activities in order to entertain the people the whole afternoon.\\n\\n                    One of the scheduled activities for the opening is going to be placed at the biggest pool in BIT Park: a huge game of waterfootball, in which all inhabitants of Fortaleza will be able to participate, since the referred pool has width and length of nothing more, nothing less than 1 km and 2 km, respectively. Waterfootball works roughly as usual football (a.k.a. soccer), but with some differences:\\n\\n                    \\n                    \\tthe game takes place inside the water, so, the ball is passed with the hands, rather than with feet;\\n                    \\tthe game can be played by any even number of players, as long as there is the same number of players in both teams \\u2014 and as long as all players fit in the pool;\\n                    \\tthere is no goalkeeper, since every player can defend the ball with the hands;\\n                    \\tas in usual football, the validity of a player's position is judged according to the line parallel to the adversary goal line where the player is, considering also the lines where the adversary player are: the position of a player J \\u2014 and thereafter the player oneself \\u2014 is considered offside if less than 2/11 of the adversary players are in lines closer to the adversary goal line than the line where J is;\\n                    \\tonly a player in onside position is allowed to catch the ball, in opposite of what happens in usual football, in which inside/offside positioning is judged in passing time, not in reception time.\\n                    \\n\\n                    In Figure, with team A playing against team B, players A4 and A5 are offside.\\n\\n                    \\n\\n\\n                    NCC realised that judging the validity of players' positions during the game would be hard-boiled; after all, the whole population of Fortaleza could be in the pool. The decision then was to leave the game go on, so a program would later rejudge all events and recalculate the final scoreboard. Once an offside player receives the ball, next goal in match must be disregarded, unless the ball leaves the pool. At the beginning of the game, and every time the balls leaves the pool or some goal comes to pass, the referee draws a player \\u2014 not necessarily offside \\u2014 and gives the ball to him or her so the game can continue.\",\n    \"id\": 1587,\n    \"input\": \"The input consists of several test cases. The first line of each test case consists of two integers N and E (1 < N < 2,551,805, 1 < E < 104), which terminate the input when are both null. N is a even number which states for the numbers of\\u00a0 fortalezenses who joined the game. E is the number of events that happened during the game. The teams are called A and B, and the players are called A1, A2, A3\\u2026 and B1, B2, B3\\u2026 All positions are determined by the distance in milimetres from the goal line of team A, i.e. the goal line of team A is in position 0 and the goal line of team B is in position 2,000,000. The second line of a test case contain N / 2 integers xiA (0 \\u2264 xiA \\u2264 2,000,000, 1 \\u2264 i \\u2264 N / 2), indicating each xiA the position of player Ai at the beginning of the match. Similarly, third line contains N / 2 integers xiB (0 \\u2264 xiB \\u2264 2,000,000, 1 \\u2264 i \\u2264 N / 2), indicating each xiB the initial position of player Bi. Follow then E lines, each describing an event of the game. The table below list all possible events and how each is described in the input.\\n\\n                    \\n                        \\n                            I Xi the referee gives the ball to the player Xi (X \\u2208 {A, B}, 1 \\u2264 i \\u2264 N / 2 ) to initiate a play;\\n                        \\n                        \\n                            M Xi x\\n                            player Xi (X \\u2208 {A, B}, 1 \\u2264 i \\u2264 N / 2) moves to position X (0 \\u2264 X \\u2264 2000000);\\n                        \\n                        \\n                            P Xi\\n                            the ball passes to the hands of player Xi (X \\u2208 {A, B}, 1 \\u2264 i \\u2264 N / 2);\\n                        \\n                        \\n                            G X\\n                            the ball enters the goal of team X (X \\u2208 {A, B});\\n                        \\n                        \\n                            S\\n                            the ball leaves the pool.\\n                        \\n\\n\\n                    \\n\\n                    Assume that an event I occurs if and only if is the first event of the match or the preceding event is and event G or S.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"BIT Park\",\n    \"output\": \"Print a line revealing the final scoreboard of the game according to the given events and to the described rules. The sample clarify the format in which the scoreboard must be printed.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The football federation hired you to organize the scoreboard of the tournament. You will receive a list with some past matches and you must sort the teams accordingly. A win grants 3 points, a draw 1 point and if the team lost it receives nothing.\\n                    Read carefully the regulation on how the scoreboard should be organized: First comes the team with more points. Then if there is a draw, the team with more wins should come first. If there is still a draw, the team with more goals should come first. At last, if none of the above sorting criterias is fulfilled, the team that comes first in the input should appear first.\\n                    Given the teams and the games, sort them and output the scoreboard.\",\n    \"id\": 1588,\n    \"input\": \"In the first line, there is an integer T (T \\u2264 100), that indicates the number of test cases.\\n                    In the first line of each test case we have two numbers, N (2 \\u2264 N \\u2264 20* or 2 \\u2264 N \\u2264 100**) and M (1 \\u2264 M \\u2264 100* or 1 \\u2264 M \\u2264 1000**), indicating how many teams are in the championship and how many matches were already played. The next N lines contain the team names. They are all unique and contain only lowercase letters of the English alphabet. The following M lines contain the match information with the following format: X teamA Y teamB, indicating that the teamA played against the teamB and the first scored X goals and the second Y goals.The strings have size between 1 and 20 and the number of goals of a team during a match will be between 0 and 100. A team never plays with itself, but it can play any number of times with another team.\\n\\n                    *for around 90% of the test cases;\\n                        **for the other cases.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Help the Federation\",\n    \"output\": \"Output the sorted scoreboard team names, one per line. It is not necessary to print anything between the test cases!\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"You have gotten two circular energy cables. The first one has radius R1 and the second R2. You need to buy a circular conduit (see the image below) that fits those two cables:\\n\\n                    \\n\\n                    What is the smallest radius of a conduit you need to buy? In other words, given two circles, what is the smallest radius of a third circle that circumscribe the other two?\",\n    \"id\": 1589,\n    \"input\": \"In the first line there is an integer T (T \\u2264 10000), indicating the number of test cases.\\n\\t\\t\\t\\t\\tOn the only line of each test case we will have the two integers R1 and R2 indicating the cables radius. The integers will be positive and all the math will fit in a regular integer of 32 bits.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Bob Conduit\",\n    \"output\": \"In each test case, output the answer in a single line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Given a list of N integers, choose K or more numbers such that the binary AND of them all is maximum. Output that value. For more information about the AND operation see: http://en.wikipedia.org/wiki/Binary_and#AND\",\n    \"id\": 1590,\n    \"input\": \"The first line contains an integer T (T = 100), that indicates the number of test cases.\\n\\t\\t\\t\\t\\tFor each case, there is a line with the integers N (1 \\u2264 N \\u2264 20* or 1 \\u2264 N \\u2264 35**) and K (1 \\u2264 K \\u2264 7). The following line will contain the N integers of the set, separated with single spaces. The numbers of the set will be between 0 and 230-1, inclusive, and may repeat.\\n                    *for around 90% of the cases;\\n                        **for the other test cases. The limits are those because 35+7=42 ;)\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cuarenta and Two\",\n    \"output\": \"Output the maximum value for each test case, in a single line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Grandma is solving a word search puzzle. You really want to help her and will build an algorithm that, given the word search puzzle and the words to be searched, will print how many times each word appears.\\n\\t\\t\\t\\t\\tIn this puzzle, the words will be only in horizontal or vertical. The words do not wrap around. The words can also overlap the others, it is, the same letter in the puzzle may be used by more than one word. Count words with a single letter only once, see the first test case sample!\",\n    \"id\": 1591,\n    \"input\": \"The first line contains an integer T (T <= 100) indicating the number of test cases.\\n\\t\\t\\t\\t\\tThe first line of each test case will have two numbers, L  (1 \\u2264 L \\u2264 10* or 1 \\u2264 L \\u2264 50**) and C (1 \\u2264 C \\u2264 10* or 1 \\u2264 C \\u2264 50**), the number of lines and columns of the word search puzzle respectively. The following L lines will have C lowercase letters of the English alphabet indicating the puzzle configuration. The next line there will be an integer P (1 \\u2264 P \\u2264 50) indicating how many words there are to be searched. The following P lines contains the words that need to be searched. The words will have the limits accordingly to the size of the word search puzzle. The strings only contains lowercase letters of the English alphabet.\\n\\n                     *for around 90% of the cases;\\n                        **for the other test cases.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Grandma's Day\",\n    \"output\": \"For each case, output for each word in a single line the number of times it appears in the word search puzzle, in the same order of the input. If the word is not found, print 0.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"There are many cities connected by roads. The N cities are named with numbers from 0 to N-1. Golias wants to travel by car from his city, identified by the number 0, to the capital, identified by the number N-1 to visit his friend Elias. Each road is one-way and costs an amount of gas.\\n\\t\\t\\t\\t\\tGiven the configuration of the cities and roads, Golias wants to know the minimum amount of fuel he needs, and he also wants to visit at most K different cities. The initial and destination cities also count, it is, he will always need to visit at least two cities.\",\n    \"id\": 1592,\n    \"input\": \"The first line contains an integer T (T = 200) indicating the number of test cases.\\n\\t\\t\\t\\t\\tFor each test case, the first contains three integers, N (2 \\u2264 N \\u2264 50* or 2 \\u2264 N \\u2264 1000**), M (1 \\u2264 M \\u2264 200* or 1 \\u2264 M \\u2264 3000**) and K (2 \\u2264 K \\u2264 N), indicating the number of cities, roads and the maximum number of different cities that he may visit, respectively. The next M lines will have three integers A (0 \\u2264 A \\u2264 N-1), B  (0 \\u2264 B \\u2264 N-1) and C  (1 \\u2264 C \\u2264 105) indicating that there is a one-way road that connects the city A to city B , and costs C units of fuel. There might be more than one road connecting the cities, or a road that connects the city to itself.\\n\\n                    *for around 90% of the cases;\\n                        **for the other test cases.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Elias and Golias\",\n    \"output\": \"Output the minimum ammount of fuel possible for each case in a single line, and if Golias can't reach Elias, output -1.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"We define the parity of an integer as the sum of its bits in the binary form modulo two. Take this example, the number 2110 = 101012 has three 1's in its binary representation and thus it has an odd parity.\\n\\t\\t\\t\\t\\tIn this problem, you need to calculate the number of bits 1 in an integer I given in the input, it is, calculate the number of 1's in the binary representation.\",\n    \"id\": 1593,\n    \"input\": \"The first line contains an integer T (T <= 100) indicating the number of test cases.\\n\\t\\t\\t\\t\\tFor each case, there will be a single line with the number I (1 \\u2264 I < 1018* or 1 \\u2264 I < 101000**).The input number won't have leading zeroes.\\n                    \\n                    *for around 90% of the cases;\\n                        **for the other test cases.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Binary Function\",\n    \"output\": \"Output the number of 1's in the binary representation for each case in a single line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Diego Silva, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Given a vector of integers of size N and an integer K, find the biggest element of each continuous sub-vector of size K. Output the sum of all those values.\\n\\n                    Example 1: If we have the vector [3, 2, 1, 4, 10] and K is 3, then we need to consider the sub-vectors [3, 2, 1], [2, 1, 4] and [1, 4, 10]. The biggest element of each sub-vector is 3, 4 and 10, summing them all gives the result of 17.\\n\\n                    Example 2: If we have the vector [1, 2, 3, 4, 5, 6] and K is 2, then we need to consider the sub-vectors [1, 2], [2, 3], [3, 4], [4, 5] and [5, 6]. The biggest element of each sub-vector is 2, 3, 4, 5 and 6, summing them all gives the result of 20.\\n\\n                    Example 3: If we have the vector [5, 4, 3] and K is 1, then we need to consider the sub-vectors [5], [4] and [3]. The biggest element of each sub-vector is 5, 4 and 3, summing them all gives the result of 12.\",\n    \"id\": 1594,\n    \"input\": \"The input for this problem is really singular, ready carefully! On the first line you have an integer T (T = 200) indicating the number of test cases. For each test case you will receive three integers, N (1 \\u2264 N \\u2264 104* or 1 \\u2264 N \\u2264 106**), K (1 \\u2264 K \\u2264 N) and S (0 \\u2264 S \\u2264 109). To generate the vector of integers use the following C/C++ code that we recommend you to copy (control+C) from this statement:\\n                    \\n                    array[0] = S;\\n                    for (i = 1; i < N; ++i)\\n                    \\u00a0\\u00a0 \\u00a0array[i] = (1LL*array[i-1]*1103515245 + 12345) % (2147483648LL);\\n                    \\n                    It is guaranteed that there is a solution that is not based on the properties of the above generator.\\n                    \\n                    *for around 90% of the cases;\\n                        **for the other test cases.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Greedy\",\n    \"output\": \"For each test case output the sum of the biggest elements in each sub-vector.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"You are walking in your city and you noticed that there are moments that you walk faster or slower, it depends on the inclination of the street.\\n\\t\\t\\t\\t\\tThe course made by you has S meters. We can divide the course in parts of 1 meter, and in the i-th part you walk with velocity Vi meters/second. With that information and some basic Physics you can calculate the time you need to reach the end.\\n\\t\\t\\t\\t\\tNow you want to run! But you don't want to get tired, that is why you will run in at most C of the S parts of the course. When you run, your speed has an addition of R meters/second! Assume that your acceleration is instantaneous. Chossing the best running strategy, compute the minimum amount of time you need to reach at the end of the course.\",\n    \"id\": 1595,\n    \"input\": \"On the first line you have an integer T (T = 100) indicating the number of test cases.\\n\\t\\t\\t\\t\\tOn the first line of each case we have the integers S (1 \\u2264 S \\u2264 100* or 1 \\u2264 S \\u2264 105**), C (0 \\u2264 C \\u2264 N\\u200b) and R (0 \\u2264 R\\u2264 100). On the following line, S integers will follow separated by spaces indicating the speed in each part of the course. In all test cases, 1 \\u2264 Vi \\u2264 100. We know that this speed is huge, but imagine you are a cousin of The Flash.\\n                    \\n                     *for around 90% of the cases;\\n                        **for the other test cases.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Humm.. Run or Walk.. That's the Question\",\n    \"output\": \"Print, for each test case, the minimum amount of time necessary to reach the end, in seconds, rounded to two decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Marcio T. I. Oshiro  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Marrakech is one of the citadels of the Arab world. The city was fortified between 1122-1123 by Ali ibn Yusuf, son of one of the first leaders of the city. One of the great city leaders was Califa Abu Yaqub Yusuf 'al-Munstansit' also known as Yusuf II. The Califa lived only until his 21 (1203-1224) and reigned since he was 10. Known as a lover of the arts and sports, he was a great supporter of the construction of palaces and museums. He idealized a great chess competition, one of his passions, disputed all over the kingdom.\\n\\n                    The scheme imagined by Yusuf II to determinate the classification of the chess championship was very interesting. All the N competitor played against each other. A player K is called \\u0645\\u0644\\u0643 (malik) if for every player J differ from K, or K beats J or K beats any player J' whom beats J. The classification of the championship is an ordination of the players J1 , J2 , . . . , JN  that each player Ji , 1 \\u2264 i < N , wins Ji+1 and it is \\u0645\\u0644\\u0643 if we consider the players who appear after him in the ordination, this mean, ignoring the previous ones.\\n\\n                    Your task will be, given the results of the matches from a chess tournament in Marrakech, determinate if it is possible to obtain a classification of Yusuf II for that championship.\",\n    \"id\": 1596,\n    \"input\": \"The input is composed by several instances and ends with end of file (EOF).\\n\\n                    The first line of each instance contains an integer N (2 \\u2264 N \\u2264 1.000) corresponding to the number of players of the tournament. The players are numbered from 1 to N. For each i = 1, . . . , N , the (i + 1)-th line contains an integer di \\u2265 0 followed by the identification of the di players beaten by player i.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Yusuf II's Tournament\",\n    \"output\": \"For each instance print one line with the players ordered according to the classification of Yusuf II. If there is more than one possible classification, anyone of them will be accepted. If there are no classifications according to Yusuf II's scheme, print \\\"inclassificavel\\\" without quotes.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Gabriel R. C. Peixoto  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"A Sultan was wary of his employee. He claimed that he worked forever, without stopping, to fulfill his tasks of N different kinds. The sultan wants to know exactly how long it takes to complete each one of the jobs, to better evaluate if the employee is lazy or really overloaded.\\n\\n                    To try to unmask the employee he started to request reports from his activities. The employee delivered N different reports, the same amount of the total of tasks, what let the sultan more and more wary. This employee works in journeys of P hours and each task takes between one and P hours to complete. All the tasks take an entire quantity of hours to complete them.\\n\\n                     The working hours happen in P early hours. \\n                    \\n                    Each report consists of the time which the employee started and finished working, relatively to the beginning of the expedient. That is, if he claims that he started to work in the hour 1 then he worked on the tasks on the report in the beginning of the expedient and if he claims that he stopped working in the hour 3 then he stopped in the end of this hour, working 3 hours in this period.\\n                    \\n                     The employee did not write down the day I started working and the day it ended. The schedules of the report does not always refer to the same day. In this case the employee claims that stopped working at the end of the workday and reinicionou the task early next day. In the previous example, the employee could have worked 4 hours, P + 4 hours, 2P + 4 hours, etc. With reports indicating that the employee started work at 3 pm and ended at 2 are perfectly valid.  \\n\\n\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0  In addition to this information, each report contains how many of each type tasks were completed. During this period, the employee claims to have worked nonstop.  \\n\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\n\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0  Your task is, given the reporting information, determine the duration in hours of each task, if that is possible.\",\n    \"id\": 1597,\n    \"input\": \"The input consists in several instances and ends with end of file(EOF).\\n                    \\n                    The first line of each instance contains two integers, N (1 \\u2264 N \\u2264 100) and P (2 \\u2264 P \\u2264 24, P is a prime number). The next N lines contain N + 2 integers each one. The i-th line, from those N lines, corresponds to the i-th report and consists of Si , Ti (1 \\u2264 Si, Ti \\u2264 P) , Ai,1 , . . . , Ai,N. Where Si and  Ti corresponds, respectively, to the time in that the employee started and finished working. Each Ai,j (0 \\u2264 Ai,j \\u2264 109 and \\u03a3jAi,j > 0) is the number of times that the task j was realized during the time of the report i.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Unmasking the Sultan's Employee\",\n    \"output\": \"For each instance print only one line in the output, which consists of:\\n                \\n                    \\u201c-1\\u201d if you can say with certainty that the employee has lied at some report;\\n                    \\u201c-2\\u201d if you can't say with certainty that the employee is lying, but also can't find the durations of each machine in a unique way; \\n                    N integers, separated by a space, which represents the duration of each task if those durations could be determined in an unique way; \",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Marcio T. I. Oshiro  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Arab mats are well known. Its quality is recognized around the world, and the characteristics of a good carpet are appreciated by all. Rate mats is a very difficult task, and experts analyze its features thoroughly to establish an appropriate price. The mats are formed by points where the wires are strung. Despite being very difficult for the average person, experts are able to tell the direction in which the wire was strung between two points. These wires form circuits in complicated patterns and they have hundreds or even thousands of circuits and are very intricate. Large circuits (where the amount of wire divided by the number of nodes is very large) devalue the carpet, because make it less resistant. Small circuits are valued, and the appraiser always seeks to find the lowest existing rug in circuit, as this is an indicator of the value of the rug. Your task in this exercise is to read data from a carpet with N nodes and M threads (connections between these nodes in the direction that was taken is determined) and determine the value of the minor circuit in the carpet, or the circuit in which the ratio between the quantity of yarn divided by the number of nodes is minimal.\",\n    \"id\": 1598,\n    \"input\": \"The entry consists of several instances and ends with the end of file (EOF).\\n\\n                    The first line of each instance contains two integers, N (3 \\u2264 N \\u2264 1.000) and M (N \\u2264 M \\u2264 N \\u00d7 N - 1), corresponding to the number of nodes and links, respectively. The nodes are numbered from 1 to N. The following M lines, each with three integers u, v and c (0 \\u2264 c \\u2264 1.000) describing a link from node u to node v using c cm wire.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Real Value of Mats\",\n    \"output\": \"For each instance, print in a single line the minimum value of a circuit in the carpet, where this value is the ratio between the amount of wire divided by the number of nodes in the circuit. The value must be printed with 3 decimal places. Print -1 if there is no circuit in the carpet.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Marcio T. I. Oshiro  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Morocco is cut by the Atlas Mountains, whose highest peak is Toubkal, with 4165 meters. These mountains give rise to many stories and myths throughout antiquity, as, for example, the 12 tasks of Hercules. Near the city of Marrakech is what is called \\\"high Atlas\\\", the highest part of these mountains.\\n\\n                    The study of the altitudes of the various peaks has been done for centuries. Ancient Berbers documents document the recording of different altitudes of the various points of the Atlas Mountains since the sixteenth century. The document is a map of the region divided into quadrants. In each quadrant is noted that the average height point. We know that a point is a peak if the height is greater than that quadrant of its neighbors (one quadrant has up to 8).\\n\\n                    Your task in this exercise is to read this map and identify the peaks in the documented region.\",\n    \"id\": 1599,\n    \"input\": \"The entry consists of several instances and ends with the end of file (EOF).\\n\\n                    Each instance corresponds to a region of the map and represented by a matrix N x M (1 \\u2264 N \\u2264 1.000). The first row in each instance contains the integers N and M. For i = 1, 2,. . . N, (i + 1)-th row corresponte the i-th row of the matrix and contains M integers separated by a space.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Peaks of Atlas\",\n    \"output\": \"For each instance print the coordinates of the peaks of the corresponding map, one per line, sorted first by rows and, in case of tie, by columns. If there are no peaks, print -1. Print a blank line at the end of each instance.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Gabriel R. C. Peixoto  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Sokoban is a well-known game. What few people know is that the game was invented by Berbers, Arab peoples who inhabited the north of Africa, where today is Morocco. For these people the cats are considered an animal that brings bad omen, mainly because of his selfish behavior (as evidenced by the saying highlighted above).\\n\\n                    In this original version of sokoban the character is a cat that is pushing blocks of earth around it. There is a board consisting of N rows and M columns. You control the cat that can move in any of the four adjacent squares, since this is free, or it may push a block in any of these four directions.\\n\\n                    As the best-known version, your goal is to push the block to a final specified position. Note that you can only push the block and never pull it.\\n\\n                    The Berber version of the game has a particularity. There are some houses that are special doors. Where the cat door occupies a position with the first time the door is opened. The block can not be pushed to the position of a door if it is closed. After the open door behaves like a free position.\\n\\n                    You want to push the block to the final position opening the fewest possible doors.\\n\\n                    Consider every position off the board as a wall.\",\n    \"id\": 1600,\n    \"input\": \"The input consists of several instances and ends with the end of file (EOF).\\n\\n                    Each instance starts with a line containing two integers separated by a space, M and N (1 \\u2264 N, M \\u2264 25).\\n\\n                    The following are N rows, each character belonging to the set M {*, j, b, x #.}, where:\\n\\n                    \\n                        '*' represents a wall;\\n                        '.'represents an empty position;\\n                        'j' represents the initial position of the cat (Each instance contains exactly one character 'j');\\n                        'b' represents the initial position of the block (Each instance contains exactly one character 'b');\\n                        'x' represents the final desired position for the block (Each instance contains exactly one character 'x');\\n                        '#' represents a door (Each instance contains at most 5 characters '#');\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Cat of The Caretaker of The Warehouse\",\n    \"output\": \"For each instance print a single line. If you can push the block to its final position this line should consist of two integers, which are the minimum number of doors that must be open to perform this action and the minimum number of moves that are necessary with this number of open boxes. Print '-1' if you can not push the block to its final position.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Marcio T. I. Oshiro  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The Moroccan cuisine is very famous for its delicious recipes that involve various kinds of roasted meats, but especially sheep, which are created in the region since the eighth century. A curious Berber tradition involves sharing the creation o fga pastor at the time of his death. Regardless of the number of children he has, only the eldest and youngest son are entitled to inheritance. The other children do not gain anything. Then, all animals are weighed, and the weights (rounded to the nearest integer) are considered. The flock is then divided into two parts so that in each of the animals have similar weights. More specifically, the flock is partitioned into two parts, A and B, such that,\\u00a0\\n\\n                    \\n\\n                    is minimal. So, the firstborn gets the part of the flock of greater weight, and the last child, gets the part of lower weight. This does not seems very fair, but it is the tradition there.\",\n    \"id\": 1601,\n    \"input\": \"The input consists of several instances and ends with the end of file (EOF).\\u00a0\\n\\n                    The first line of each instance contains an integer N (2 \\u2264 N \\u2264 1000) indicating the number of sheep in the herd. The next line contains N integers separated by a space, corresponding to the weights (0 \\u2264 weight (\\u00b7) \\u2264 100) of sheep.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Partition of The Herd\",\n    \"output\": \"For each instance, print on a single line the minimum value of S (A, B).\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Marcio T. I. Oshiro Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Several mathematical discoveries of the middle ages are due to how famous Arabic mathematicians al-Khwarizmi, Omar Khayyam, and Sharaf al-Din al-Tusi and others. One of the results somewhat unknown is about the hyperprimes numbers. We say that a number is hyperprime if it has a prime number of divisors. Thus, for example, 25 hyperprime is, because it has three dividers. However 42 is not hyperprime, because it has 8 dividers. \\n\\n                    Given an integer N, determine the number of hyperprimes in the interval [2, N].\",\n    \"id\": 1602,\n    \"input\": \"The input consists of several instances and ends with the end of file (EOF). \\n\\n                    Each instance consists of a single line containing a single integer N (2 \\u2264 N \\u2264 2 \\u00d7 106).\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Hyperprimes\",\n    \"output\": \"For each instance, print a line with the amount of hyperprimes in the interval [2, N].\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Marcio T. I. Oshiro  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The medina of Marrakech is formed by the fortified city, considered an universal heritage of UNESCO since 1995 The beginning of its construction dates back to the founding of the city in the eleventh century and includes many impressive monuments such as the Koutoubia mosque, madrassa Ben Youssef, and the Palace Bahia. Several stories surround the monuments that make up the medina. The most interesting concerns the Menara gardens. The park has gardens and artificial lakes built in the time of Sultan. Abd-el-Rhaman, who was passionate about math challenges. One of the brightest are the sets of qanat (\\u0642\\u0646\\u0627\\u0629) canals. Each set consists of a closed canal and an opened canal. The closed canal has the shape of a polygon and the opened canal consists of a sequence of edges forming a path. The challenge is whether it is possible to transform the closed canal in the opened canal through mental operations on the closed canal, such as removal of vertices and edges, translations and rotations (in the plane). \\n\\n                    The canals are given by the coordinates of its vertices and the order in which the vertices are given indicate the direction of water flow. We believe it is possible to transform the closed canal in the opened canal after several operations if the resulting canal has the same coordinates and the water flows in the same direction.\\n\\n                    \\n\\n                    Figure 1. Illustration of the first (left) and second (right) input sample.\",\n    \"id\": 1603,\n    \"input\": \"The input consists of several instances and ends with the end of file (EOF). \\n\\n                    The first line of each intance contains two integers Nf (3 \\u2264 Nf \\u2264 20,000) and Na (2 \\u2264 Na \\u2264 5.000), corresponding to the number of vertices of the closed and opened canals. The next line contains Nf pairs of integers (xi, yi) (-10000 \\u2264 x, y \\u2264 10,000), each pair representing the coordinate of a vertex of the closed canal. In the closed canal water always flows in a counterclockwise direction and the vertices are numbered from 1 to Nf. The third and last line contains Na pairs of integers (xi, yi) corresponding to the vertices of the opened canal.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Qanat Canals\",\n    \"output\": \"For each instance print -1 if it is not possible to tranform the closed canal in the opened canal, or the lowest index of the vertex of the closed canal which coincides with the first vertex of the opened canal after the transformation.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Renzo Gomez  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The neighborhood of Gueliz in Marrakech is now known to be the modern part of the city with many tourist options, restaurants and bars. Few know the formation of the district, in the sixteenth century. Originally the neighborhood, also known as \\\"New City\\\" was forming outside the fortress (Medina, the old city). The first new resident won an official permit from the city to build his house, and was responsible for giving new permits. When a street was opened, an inhabitant of the street (up to the first corner formed) was appointed representative of the street along with the first resident. And so it was for all city streets: the residents were representatives of the corners of the streets that were on that corner, so that each stretch of road without corners has exactly two representatives. There is a legend in Gueliz which prevents the formation of blocks (set of houses surrounded by streets). The elders say that once they formed a block in the neighborhood, and when a poor person died his spirit was trapped there forever, haunting the people who lived there. Ever since then they never formed blocks in the district.\\n\\n                    The board of the Gueliz district is formed by the first resident and representatives of each street. These representatives form committees to analyze the various situations. In committees the counselors are grouped in pairs, and all counselors must participate in exactly one pair. Each pair has one vote and the motion is approved when they reach majority. Each pair should be formed by representatives of counselors streets that are in some corner (or the first resident and representative of his street). Clearly, when the number of counselors is odd is not possible to find a composition of committees involving all councilors. When this occurred, the first resident had one vote alone, and the others should be divided into pairs.\\n\\n                    However, over time there have been times where it was not possible to assemble a committee, which has always been cause for suspicion among residents of Gueliz. Your task in this exercise is given N the number of street representatives (the representative number one is the first resident) decide whether it is possible to form a committee of peer counselors as described above.\",\n    \"id\": 1604,\n    \"input\": \"The input consists of several instances and ends with the end of file (EOF).\\n\\n                    The first line in each instance contains an integer N (1 \\u2264 N <105). The next N - 1 lines each contain two integers. The i-th row, these N - 1 lines, contains the representatives x and y (1 \\u2264 x, y \\u2264 N) of a stretch of street without corners.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Pair-voting in The Board of Gueliz\",\n    \"output\": \"For each instance, print the first line Y if it is possible to form a committee of pairs of counselors or N, otherwise. If it is possible to form a committee, print a list of pairs of counselors, one pair per line. A pair of members consisting of two integers xi and yi, separated by a space, so that xi <yi. Furthermore, the list of pairs of members should be ordered in ascending order by xi. If there is more than one way to set up a committee, print the lexicographically smallest. Note that when the representative has one vote alone, it does not belong to any pair.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Gabriel R. C. Peixoto  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Camels have been domesticated and they are used by the Bedouin people for several millennia. There are two main types, the bactrian camel with two humps, which are rare, and dromedaries, most common, with only one hump. For simplicity, the bactrian camels are called only camels.\\n\\n                    Dromedary and camels have different interesting characteristics: some are born leaders, others have more strength, others support longer walks, etc. However, each animal has only one of these characteristics. A caravan needs animals with several of these characteristics. In the market of these animals N1 different characteristics for dromedary and N2 different characteristics for camels are considered.\\n\\n                    The Bedouins always sell these animals in cafilas formed by groups of three. This is a Berber tradition that dates back to the ninth century, when traders of camels and dromedaries could only sell their animals that way. Buyers can not choose the animals. Lots of 3 animals are prepared by the seller and the buyer can just say the batch number that he wants to buy, no more information about it is given. Traders are known for their extreme honesty, and each batch is formed randomly. For each animal of the batch, the dealer draws with probability p1 if it will be a dromedary and with probability p2 = 1 - p1 if it will be a camel, p1 \\u2265 p2. Chosen the type of animal, a characteristic is chosen from among the Ni, with equal probability, and an animal with this characteristic is included in the batch.\\n\\n                    All sweepstakes of the trader are independent, a batch can contain two strong droomedaries and a leader camel, for example, or even three good walking camels. However, attest to his honesty, whenever the dealer produces a batch that has only dromedaries he makes a new draw. Among the characteristics to N1 dromedaries, there M1 which are desirable to the purchaser.\\n\\n                    Among the N1 characteristics of camels, there are M1 which are desirable to the purchaser. And among the N2 characteristics of camels, there are M2 which are desirable to the purchaser. What is the expected number of lots that a buyer should acquire to build a cafila that has dromedaries and camels with all M1 and M2 desired characteristics?\",\n    \"id\": 1605,\n    \"input\": \"The input consists of several instances and ends with the end of file (EOF). \\n\\n                    Each instance consists of 3 lines, each containing two integers. In the first line we have N1 and N2 (1 \\u2264 Ni \\u2264 50). The second line consists of M1 and M2 (0 \\u2264 Mi \\u2264 Ni), while the third line has W1 and W2 (1 \\u2264 W2 \\u2264 W1 \\u2264 100), which gives the probability of each category according to:\\n\\n                    \",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Building Your Own Cafila\",\n    \"output\": \"For each instance print a line containing a number with 2 decimal places, which it is the number expected of lots that the purchaser needs to buy to complete his cafila.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Marcio T. I. Oshiro  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"One Thousand and One Nights is a collection of Arabic stories that date back to the ninth century. Some translations have been made to the West from the seventeenth century, and some of these stories, such as \\\"Sinbad the Sailor\\\", \\\"Aladdin and the Magic Lamp\\\" and \\\"Ali Baba and the Forty Thieves\\\" are now known to children around the world. In the story of Ali Baba the treasures are stored in a cave that opens when the words \\\"Open Sesame\\\" is used. In fact, the treasure was hidden in a safe in the cave wall, which opened when a permutation of the integers from 1 to N was recited. Not all 40 thieves had good memory, so Ali Baba had to maintain on the walls of the cave, hints on how to reconstruct the permutation, if any of the thieves forget. He wrote down a sequence of integers a1, a2, ... , ak generated from the permutation that opened the safe after possible applications of the following operations: duplication (i, j) and mirroring (i, j), for i \\u2264 j. The doubling operation (i, j) creates a copy of the subsequence ai, ai+1, ... , aj and inserted between aj and aj+1. The mirroring operation (i, j) inserts an inverted copy of the subsequence ai to aj (aj, aj-1, ..., ai) between aj and aj+1.\\n\\n                    For exemple, given the sequence (a1, a2, a3, a4, a5, a6), the aplication of the mirroring operation (3,5) generates the sequence (a1, a2, a3, a4, a5, a'5, a'4, a'3, a6).\\n\\n                    Your task is recontruct the original permutation.\",\n    \"id\": 1606,\n    \"input\": \"The entry consists of several instances and ends with the end of file (EOF). \\n\\n                    The first line of each instance contains the integer K (2 \\u2264 K \\u2264 105) and N (1 \\u2264 N \\u2264 K) indicating, respectively, the size of the sequence written by Ali Baba and the largest integer of the original permutation. The next line contains the entire sequence K, separated by a space.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"The Hints of Ali Baba\",\n    \"output\": \"For each instance, print a single line with the permutation sequence that originated the input sequence, with a space separating consecutive integers. If there is more than one possible permutation, anyone of them will be accepted.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Consider you have the strings A and B. In one operation you can choose any letter from the first string and advance it. Advancing a letter means to transform it in the next letter of the alphabet, if this letter is zthen it will be transformed in a again!\\n\\n                    For instance, we can transform the string ab in bd using 3 operations: ab -> bb -> bc -> bd. You can apply the operations in the letters in any order, another possibility would be: ab -> ac -> bc -> bd. \\n                    \\n                    Given both strings, compute the minimum number of operations needed to transform the first string into the second one.\",\n    \"id\": 1607,\n    \"input\": \"The first line contains an integer T (T \\u2264 100) indicating the number of test cases.\\n\\n                    For each case, the only line will contain the strings A (1 \\u2264 |A| \\u2264 100* or 1 \\u2264 |A| \\u2264 104** and |A| means the length of A) and B (|B| = |A|* or |B| = |A\\u200b|**)separated by a blank space.\\n\\n                    *For around 90% of the cases;\\n                    **For the other cases.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Advancing Letters\",\n    \"output\": \"For each case print the minimum number of operations.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Fabio Lima, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Maria is an old lady that is retired and makes cakes. She started doing it to help in the family income.\\n\\n                    To bake a cake, Maria needs some amount of different ingredients. Each ingredient has a fixed cost per unit. She has D units of cash to spend. Among the cakes types, you need to choose only one type, such that the number of baked cakes is maximal.\\n\\n                    Compute the maximum number of cakes of a single type that can be baked.\",\n    \"id\": 1608,\n    \"input\": \"The first line contains an integer T (T \\u2264 100) indicating the number of test cases.\\n\\n                    In each test case, the first line contains three integers D (1 \\u2264 D \\u2264 109), I (1 \\u2264 I \\u2264 100) and B (1 \\u2264 B \\u2264 100) indicating the money Maria has, the number of existent ingredients and the quantity of cake types, respectively. In the next line there will be I integers indicating the price of one unit of each ingredient. Then B lines will follow describing each cake. The i-th cake is described as following: a number Qi (1 \\u2264 Qi \\u2264 100) that indicates how many different ingredients are necessary. Follow  Qi pairs of numbers indicating the ingredient index and the necessary amount, all in the same line separated by blank spaces.\\n\\n                    The amount of each ingredient in a cake will be between 1 and 1000. Each unit of an ingredient will cost between 1 and 1000. The ingredients in the cake description will be unique. The ingredients identifiers will be between 0 and I-1.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Maria's Cakes\",\n    \"output\": \"For each test output the maximum number of cakes of a single type that can be baked.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You have decided to count sheep to sleep. You are taking too long to fall asleep and you realized that some of the sheep are repeating! Each one is identified by a unique integer, thus you can avoid counting repeated ones.\\n\\n                    Given the sheep sequence, output how many you really counted, it is, output the number of distinct ones.\",\n    \"id\": 1609,\n    \"input\": \"The first line contains an integer T (T = 100*) indicating the number of test cases.\\n\\n                    In the first line of each case we have an integer N (1 \\u2264 N \\u2264 100* or 1 \\u2264 N \\u2264 104\\u200b**), indicating the number of sheep. The next line contains N integers separated by space indicating the sequence of sheep.\\n\\n                    The sheep identifiers will be between 0 and 109, inclusive.\\n                    *For around 90% of the cases;\\n                    **For the other cases.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Counting Sheep\",\n    \"output\": \"Output the number of distinct sheep for each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Rafael Regis, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Dudu needs a document to finalize a task in his work. After searching, he found out that this document needed other documents, which also needed other documents and so on.\\n\\n                    Dudu made a final list with the documents he will need. With that in hands, he suspects that the list contains loops. For instance, if a document A depends on the document B that also depends on A, it would make the task impossible to finish. In this case the loop contains only two documents, but there might be cases with three or more!\\n\\n                    Given the list of the dependencies, help him compute if he can obtain all the documents, it is, to compute if there isn't a loop in the given dependencies.\",\n    \"id\": 1610,\n    \"input\": \"The first line contains an integer T (T = 100) indicating the number of test cases.\\n                    \\n                    On the first line in each test case there will be the integers N (2 \\u2264 N \\u2264 100* or 2 \\u2264 N \\u2264 104**) and M (1 \\u2264 M \\u2264 300* or 1 \\u2264 M \\u2264 3*104\\u200b**), indicating the number of documents and the dependencies. In each of the following M lines, there will be two integers A (1 \\u2264 A) and B (B \\u2264 N and A != B) , indicating that the document A depends on the document B. There might be repeated dependencies!\\n                    \\n                    *For around 90% of the cases;\\n                    **For the other cases.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Dudu Service Maker\",\n    \"output\": \"For each case, print SIM (Portuguese word for YES) if there is at least one loop, and NAO otherwise (Portuguese word for NO).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"In a building with N floors there is an elevator with capacity to carry at most C people. The floors are enumerated from 0 to N-1. There is a group of M people wanting to use the elevator, all on floor 0. Each one would like to go to a specific floor. You must decide the order that those people will use the elevator in such a way that the energy used is minimized.\\n\\n                    Initially, you decide a group of at most C people to enter the elevator on floor 0. Then you must decide the order in which the floors will be visited. Logically, the floors of all people using the elevator must be visited. The energy cost is only when it moves, it is, each time you go up or down one floor you will spend one unit of energy. The process is repeated until there are no more people on floor 0. At the end the elevator must return to floor 0.\\n\\n                    Given the building size, the elevator capacity and the people information, compute the best strategy that minimizes the energy used by the elevator. Output this energy value.\",\n    \"id\": 1611,\n    \"input\": \"The first line contains an integer T (T = 100) indicating the number of test cases.\\n                    \\n                    On the first line of each case we have the integers N (1 \\u2264 N \\u2264 104), C (1 \\u2264 C \\u2264 M) and M (1 \\u2264 M \\u2264 1000* or 1 \\u2264 M \\u2264 5*104**). In the next line there will be M integers indicating the floors to be visited. The floors numbers will be between 1 and N -1, inclusive.\\n                    \\n                    *For around 90% of the cases;\\n                    **For the other cases.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Crowded Elevator\",\n    \"output\": \"For each case, output the minimum amount of energy needed.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A little ant is walking on the top of a tree trunk of length N meters. We can consider that the ant may assume the positions from 0 to N-1. Assume that it is on the X axis of the coordinate plane, but it starts in an unknown position. The only thing known about the ants initial position is that its value is an integer number. \\n\\n                    The little ant may take a step to the right or to the left, and this step will make it move one meter. If the ant is at position Pand moves to the right, it will assume the position P+1. If the step is to the left, it will assume the position P-1. If in any moment it assumes the position -1 or N, the ant will fall off the tree trunk! A step takes one second to be completed, and the ant is always moving.\\n\\n                    Considering that the ant will always choose the worst sequence of movements, you must choose an initial position that maximizes the time that the ant will stay on the top of the trunk. Output that time.\",\n    \"id\": 1612,\n    \"input\": \"The first line contains an integer T (T <= 100) indicating the number of test cases.\\n                    \\n                    For each test case we will have a single line with the integer N (1 \\u2264 N \\u2264 109) indicating the size of the tree trunk.\\n                    \",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Little Ant\",\n    \"output\": \"For each case, output the maximum amount of time the little ant can be on the trunk.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Filipe Nascimento, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"The legendary Ishikawa Goemon will be boiled alive in an iron cauldron if captured! To hide from the guards our hero ran inside a house that contains some walls. It is night and the house is dark, thus the guards threw a light bomb to locate the fugitive. All that is lightened by the explosion will be seen by the guards. The bomb emits infinite light beans, straight, in all directions from its epicenter.\\n\\n                    We can simplify this scenario with a 2D cartesian plane, where all walls are segments of the line X = 0. The explosion epicenter will always have its X coordinate with value X < 0. The points where Goemon may hide himself will always have coordinates with X > 0. The image below illustrates the iluminated scenario when the bomb at point E(-12,12) explodes:\\n\\n                    \\n                    \\n                    The walls are described by line segments, and they block the light. In the above example we have the wall A that goes from point A(0,0) to point A1(0,2), the wall B that goes from B(0,4) to B1(0,6), the wall C that goes from C(0,10) to C1(0,12) and the wall D that goes from D(0,14) to D1(0,16). The epicenter of the explosion is the point E(-12,12) and Goemon may choose to stay at the points G1(8,2), G2(12,14) and G3(10,10). From that three points, he will only be protected at the point G3, because the light beans from the explosion don't hit this point but hit the other points (including point G1), making them visible to the guards.\\n                    \\n                    Given the epicenter of the light explosion, the walls and the points Goemon might stay, compute how many of them are safe for him to hide.\",\n    \"id\": 1613,\n    \"input\": \"The first line contains an integer T (T = 100) indicating the number of test cases.\\n\\n                    In the first line of each case there will be the coordinate (x, y) of the explosion epicenter. The next line will contain an integer P (1 \\u2264 P*), indicating the number of walls. The next P lines there will be pairs of integers indicating the position of the walls, the start and end of a wall (remember that they stay in the Y axis, it is, X = 0). Then there will be an integer G (G \\u2264 100* or G \\u2264 104**) indicating the points that are candidates for Goemon to hide. Then G lines will follow with pairs of coordinates (x, y) indicating their coordinates.\\n\\n                    All the coordinates will be between -104 and 104 and will be integers. The epicenter of the explosion will have X < 0 and Goemon's positions X > 0. The initial Y of a wall will be strictly less than its end. The walls will not be sorted. The walls won't overlap each other, nor share endpoints. There might be some repeated Goemon positions.\\n\\n                   *For around 90% of the cases;\\n                   **For the other cases.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Goemon is in Trouble\",\n    \"output\": \"For each case output the number of points that are safe for Goemon to stay.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Daniel Chino, USP - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Lu\\u00eds is on vacations and would like to visit the tourist attractions of Manhattan in the next K days. Trough a map, he knows the location of the N tourist attractions and the M subway stations of the city. To enjoy the tours, he will visit only one point per day. Although, he is pretty lazy and would like to walk the least distance possible between the tourist attraction and one subway station.\\n\\n                    In another words, choose K distinct pairs of tourist attractions and subway stations, such that the sum of their distance is minimized. The distance is calculated using the Manhattan distance, it is, given a point A and a point B, the distance between them is defined by: D(A,B) = |A_x - B_x| + |A_y - B_y|. More information about this distance: http://en.wikipedia.org/wiki/Taxicab_geometry .\",\n    \"id\": 1614,\n    \"input\": \"The first line contains an integer T (T = 100) indicating the number of test cases.\\n                    \\n                    In the first line of each case, there will be the integers N (1 \\u2264 N),  M (M \\u2264 100) and K (1 \\u2264 K \\u2264 min(10, N*M)). In the next N lines there will be the tourist attractions locations and in the next M lines the locations of the subway stations, all given by a pair (x, y)(0 <= x,y <= 1000* or 0 <= x,y <= 105** ) of coordinates. All coordinates are unique.\\n                    \\n                   *For around 90% of the cases;\\n                   **For the other cases. \\n                    \",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Help the Tourist\",\n    \"output\": \"Output the sum of the distances Lu\\u00eds walked in each case. Remember that you should minimize this value.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Adami, Universidade de S\\u00e3o Paulo - S\\u00e3o Carlos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"An election was made in a small town of M citizens, where there were N candidates. People would write the candidate number in a piece of paper, and then they put it in a closed box.\\n\\n                    At the end of the election, if a candidate receives a quantity strictly greater than 50% of the votes, he is considered the winner. Otherwise a second round of elections will happen.\\n                    \\n                    As the manual counting process is very slow, you must write an algorithm that decides whose candidate is the winner or if none of them received enough votes and a second round is needed.\",\n    \"id\": 1615,\n    \"input\": \"The first line contains an integer T (T \\u2264 100) indicating the number of test cases.\\n                    \\n                    For each test case, on the first line you will have the integers N (1 \\u2264 N \\u2264 10) and M. On the following line, M (1 \\u2264 M \\u2264 103* or 1 \\u2264 M \\u2264 5*104**) integers will follow separated by spaces, indicating the candidate that each citizen voted for, it is, the number that was writen in each piece of paper inside the closed box.\\n                    \\n                    *For around 90% of the cases;\\n                    **For the other cases.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Insatisfaction on Elections\",\n    \"output\": \"For each test case, print the winning candidate, or -1 in the case of a second round of elections.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"It's the end of the year, and finally Rafael is graduating in his Computing course. His classmates decided to celebrate the graduation organizing a ball, where there would be live music, food and free drinks. As all balls, the most expected moment is the one in which everyone starts to dance in pairs.\\n\\n                    The pairs will be formed between a boy and a girl, and as Rafael's classmates are so shy, that they decided to plan ahead what the pairs would be. There is only one problem: there are more boys than girls in the class. This implies that, if everyone wants to dance at least once, one or more girls will have to dance with more than one boy.\\n\\n                    Rafael asked your help: in how many ways the pairs can be formed, in such a way that all the boys dance exactly once, and all the girls dance at least once?\",\n    \"id\": 1616,\n    \"input\": \"There will be several test cases. Each test case consists of two integers, B and G (1 \\u2264 G < B \\u2264 10\\u00b3), indicating the number of boys and girls in the class, respectively.\\n\\n                    The last test case is indicated when B = G = 0.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Prom\",\n    \"output\": \"For each test case print one line, containing one integer, indicating in how many ways it's possible that the pairs are formed in such a way that all the boys dance exactly once, and all the girls dance at least once.\\n\\n                    As the answer may be a little high, print the answer with rest of division in 1000000007 (10\\u2079+7).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Umberto Maia, Centro Universit\\u00e1rio do Tri\\u00e2ngulo  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"You, a specialized computing Lieutenant, was assigned to help the Colonel Rambo that being Italian, prefers to be called Ramboni. Ramboni is the brave commander of allied troops, who fight to maintain order in the region of Algarias.\\n\\n                    To perform the tasks, the troops need to eat well and regularly. For this, every day a truck out of the barracks in the city DETI and travels a few miles through several cities until it reaches the destination, the city DEOT where food is plentiful. However, in recent days, the attacks began to occur to steal loading of the truck.\\n\\n                    Given this critical scenario, Colonel Ramboni devised a plan. The truck should go in one path and back using other path entirely different. Being that, the truck can not pass in the same roads/freeway twice. If this is not possible, the truck should be stay on destiny to return just the other day. The indefatigable Colonel Ramboni asked one more thing: we have to be quick because the troops can not stay hungry.\",\n    \"id\": 1617,\n    \"input\": \"The input contains several test cases. Each test case starts with an integer N (2 \\u2264 N \\u2264 100) indicating the number of cities. DETI is the number one city, and the city N is DEOT. The next line contains an integer M representing the number of roads / freeways. The next M lines describe the M roads / freeway. Each line contains three integers, ie, the two cities connected by a road / freeway and the time required to traverse the distance between them (in minutes). No road / highway will take more than 1000m or less than 1m. Each road / freeway connects two different cities. No two cities will be directly connected for more than a road / highway. The last test case is followed by a line containing the number 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Safety Path\",\n    \"output\": \"For each test case, the output should be a line containing a single integer - the number of minutes that the truck will take to go and back from DETI until DEOT. (Consider negligible the time of the truck stay in DEOT). If there is no solution, write \\\"Pernoite.\\\".\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"By Jony Teixeira de Melo, Centro Universit\\u00e1rio do Tri\\u00e2ngulo  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You have been tasked to check if the robot invaded a rectangular area formed by four cardinal points (A, B, C and D). Will be informed the four cardinal points of a plan as shown. The area is formed by connecting the four points as follows AB, BC, CD and DA. The X, Y coordinate of the robot will be informed\\n\\n\",\n    \"id\": 1618,\n    \"input\": \"The input consists of several test cases. The first line is formed by a number N indicating the total number of test cases. The next N lines consist of 10 integers (Ax, Ay, Bx, By, Cx, Cy, Dx, Dy, RX, RY) representing each of the vertices A, B, C and D and the location X, Y robot. Each value is separated by a blank space.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Colision\",\n    \"output\": \"The output should print for each test case, the number 1 if the robot is within the area (considering the edges of the figure as part of the area of the figure) , and print the number 0 otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Henrique Pinto, UFMG  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Joanna is working on the new version of her company's blog. One of the changes she wants to make is how post dates are displayed. In the current version, dates are displayed in the year-month-day format (e.g. 2014-08-09). She wishes that dates would instead be displayed as the number of days elapsed between the current date and the post date. So, for example, if today is August 9, 2014, then the date 2014-05-23 would be displayed as \\\"78 days ago\\\", and the date 2014-08-07 would be \\\"2 days ago\\\".\\n\\n                    Joanna is very busy with some of the more complex problems related to the new blog, and asked you for help with this task. Given two dates, compute the number of days elapsed between them.\\n\\n                    Notes\\n\\n                    Please remember that leap years have a 366th day (February 29). A year is a leap year if its number is a multiple of 400, or if it is a multiple of 4 but not a multiple of 100.\",\n    \"id\": 1619,\n    \"input\": \"Input begins with a line containing a single integer N, the number of test cases (0 < N <= 10000). After that, there are N lines, each of which describes a test case.\\n\\n                    Each of those lines contains two dates, separated by a single space. Dates are in the YYYY-MM-DD format, where YYYY is the year, MM in the month, and DD is the day. You can assume that all dates in the input are valid (i.e., there won't be any dates like 2013-02-31 in the input). All dates are between 1970 and 2014 (including). The month and day are always given with two digits, with a leading zero if necessary. For example, February 3, 2014 would be in the input as 2014-02-03.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Date Difference\",\n    \"output\": \"For each test case, print a line containing the absolute value of the number of days elapsed between the two dates.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Roberto Costa, UNIFEI  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In mathematics, a Delaunay triangulation for a set of points P on the plane is a DT (P) where no point in P is inside the circumference formed by any triangle in DT (P). The Delaunay triangulation maximizes the smallest angle of all triangles in the triangulation; this tends to avoid triangles with very small internal angles.\\n\\n                    The triangulation was invented by Boris Delaunay in 1934 for a set of points on a line there is no Delaunay triangulation (the concept of triangulation is broken for this case). For four or more points on the same circle (ie, the vertices of a rectangle) the Delaunay triangulation is not unique: each of the two possibilities of triangulation that divides the quadrilateral into two triangles satisfy the \\\"Delaunay condition\\\", ie that the circumferences of all triangles have hollow interiors. Whereas the circles are spheres, the notion of Delaunay triangulation extends to three dimensions. Generalizations are possible for different metrics of Euclidean. However, in these cases it can not guarantee the existence or uniqueness of the Delaunay triangulation.\\n\\n                    The Mad Doctor da Silva, for his doctorate, he decided to check the statement on the Delaunay triangulation previously said was true. Analyzed settings perfect polygons, as shown.\\n\\n                    \\n\\n\\n                    It is true and found that the amount of arches that create the Delaunay triangulation for the same number of points was always the same. For example, to 3 is always three points, 4 points is always 5, 5 is always points 6 points 7 and 9 and is always so forth.\\n\\n                    He then decided to create a real number (X) determined by the ratio of the amount of arch (I) with the number of points (L) which is:\\n\\n                    \\n\\n                    Help the Doctor doing a program that calculates the value of the real number X.\",\n    \"id\": 1620,\n    \"input\": \"The input consists of a test set containing a single row with an integer value L (3 \\u2264 L \\u2264 1080). The input ends when L = 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Delaunay Triangulation\",\n    \"output\": \"For the input your program must produce one actual outcome X with accuracy of six decimal places. Use double variables.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Paper labyrinths is Rafael's favorite hobbie, but he's usually complaining that the labyrinths he finds are too easy. To be more specific, the distance between the entrance of the labyrinth and the exit is always too short.\\n\\n                    The entrance of the labyrinth is from where the player must start to solve it, and the exit is where he must get. The player can walk in four directions \\u2013 up, right, down or left \\u2013 and the distance between the entrance and the exit of the labyrinth is given by the sum of steps of the shortest path.\\n\\n                    Given a labyrinth of N lines and M columns, figure out what is the maximum distance that can be found if the entrance and exit is choosen in a optimum way.\",\n    \"id\": 1621,\n    \"input\": \"There will be several test cases. Each test case starts with two integers N and M (5 \\u2264 N, M \\u2264 500), representing the number of lines and columns of the labyrinth, respectively.\\n\\n                    Following there will be N lines containing M characters each, representing the labyrinth. The character of the i-th line and the j-th column indicates what is in the position i, j. If the character is a \\u201c.\\u201d (dot), it means that such position has an empty space, where the player can pass over. If it's \\u201c#\\u201d, it means that such position is an obstacle, where the player can't pass over.\\n\\n                    There are always at least two empty spaces in the grid, and there is only one path between any two empty spaces. The entrance and exit of the labyrinth don't necessarily need to be on the border.\\n\\n                    The last test case is indicated when N = M = 0, which shouldn't be processed.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Labyrinth\",\n    \"output\": \"For each test case print one line, containing one integer, indicating the distance between the entrance and exit of the labyrinth if the position of the entrance and exit are choosen in a optimum way.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In your last school work, you developed a project somewhat curious. It's about N lamps arranged one beside the other, enumerated from 1 to N from the left to the right, and a single switch. When this switch is pressed, he changes the state of one of the lamps (if it was on, it turns off, and vice versa).\\n\\n                    The differential of your project is the behavior of this switch. Instead of changing the state of a particular lamp, it intercalates between the lamps in which it will operate, working in the following way: in the first time it's pressed, the switch changes the state of the lamp number 1; in the second, and the next times, it changes the state of the lamp that is K positions to the right from the last lamp. If it comes to the end of the sequence, it continues to count from position 1.\\n\\n                    For example, be N = 8 and K = 3, if we press the switch 4 times it will change the lamps 1, 4, 7 and 2, respectively.\\n                    \\n                    You became intrigued with your own project, and decided to make a few tests. Given the initial state of the N lamps (on or off), the value of K and a number M of times in which the switch was pressed, say the final state of the N lamps.\",\n    \"id\": 1622,\n    \"input\": \"There will be several test cases. Each test case starts with two integers N and Q (3 \\u2264 N \\u2264 100, 1 \\u2264 Q \\u2264 1000), representing the number of lamps and the number of queries, respectively.\\n\\n                    Following there will be a line with N characters, representing the state of the N lamps. The i -th character indicates the state of the i-th lamp, being it on (character \\u201co\\u201d) or off (character \\u201cx\\u201d), for all 1 \\u2264 i \\u2264 N.\\n                    \\n                    Following there will be Q lines, each with two integers K and M (1 \\u2264 K < N, 1 \\u2264 M \\u2264 10\\u2076), indicating the size of the \\u201cjump\\u201d that the switch gives (as said in the problem description), and the number of times it was pressed, respectively. At each query the switch starts at position 1.\\n                    \\n                    The last test case is indicated when N = Q = 0, which shouldn't be processed.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Lamps\",\n    \"output\": \"For each query print one line, containing N characters each, where the i-th character indicates the state of the i-th lamp, being it on (character \\u201co\\u201d) or off (character \\u201cx\\u201d).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Umberto Maia, Centro Universit\\u00e1rio do Tri\\u00e2ngulo  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Germanium an intergalactic warrior and conqueror of planets has trouble speaking when he gets nervous, he gets a little stutter. So, words like WANT, he speaks WWANT, GO, he speaks GGO and so on.\\n                    Annoyed by this, Germanium decided that all new conquest of a new planet he would invent a new language. Given an alphabet, where there is no character repetition, for example, QABCDEFG, all of the new language words begin with the letter Q twice. In this case, the word QQABCDEFG be valid.\\n                    You reviewed the case, and made the suggestion that the characters to be repeated can occur in any part of the new word since they are always in the same order and together. In the example given, ABCDEFGQQ would be valid as well.\\n                    The Warrior beloved Germanium liked his idea and asked you to calculate how many words these new languages \\u200b\\u200bwill. But if the language has a very large number of words he wants to discard this language.\",\n    \"id\": 1623,\n    \"input\": \"There will be several test cases. Each test case starts with two integers N and Q (1 < N \\u2264 100000, 1 \\u2264 Q <N), indicating the size of the alphabet and the number of characters of the alphabet that will be considered in the repetition that can occur in anywhere in the word, respectively. The second line consists of a integer T (1 \\u2264 105000) indicating the maximum number of words allowed by the language.\\n                    The latter test case is indicated when N = Q = 0, which should not be processed.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Language\",\n    \"output\": \"For each test case, print a line containing an integer indicating the number of distinct words that have this new language. And print \\\"descartado\\\" if the word count exceeds the value of T.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Umberto Maia, Centro Universit\\u00e1rio do Tri\\u00e2ngulo  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Dr Luis Claudio, a man attuned to the deals offered by VemQueTem supermarket, which is close to your residence, walking very smiley lately. It turned out that he was drawn in a promotion offered by the supermarket. In this promotion, the person could enter the supermarket alone and take all the products that could carry. However, some rules were established.\\n                    1) Login alone\\n                    2) Only one product of each type can be selected and picked\\n                    3) A list L containing the prices and weights of products should be followed\\n                    4) A maximum weight P was established\\n                    You have been hired by the nosy neighbor Dr Luis Claudio to find out what the total value of the goods which he managed to take home.\",\n    \"id\": 1624,\n    \"input\": \"The input consists of T test cases. Each test case starts with an integer N (1 \\u2264 N \\u2264 100) indicating the number of products on the list L. The following N lines are formed by two integers pe P. The first integer p (1 \\u2264 p \\u2264 1000) represents the price of the product. The second integer P, (1 \\u2264 P \\u2264 30) represents the weight of the product. The next line contains an integer M, which indicates the maximum weight allowed. The end of input is represented by a 0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Promotion\",\n    \"output\": \"For each test case print an integer that represents the total of products Dr Luis Cl\\u00e1udio can take home.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Enrique Finn, Universidade Federal de Uberl\\u00e2ndia  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Robocopy are drones that once activated they copy rotational motion each other. When a drone is activated along with others, they work together as if they were one.\\n\\n                    Daniel recently bought a factory of robocopy. A robotic arm places each robocopy randomly in an area, thus forming a set of robocopy. Each set may be composed of different numbers of robocopy. And to test them, they are activated. The activated robocopy must pass a treadmill for later deactivated and stored. Several sets of rodocopy can go through the same treadmill. The treadmill width should always be the lowest possible, but that it contains all the sets.\\n                    \\n                    As Daniel is an inexperienced entrepreneur, did not do a proper planning and then had to hire additional staff to manually check which size mat he has to configure to support different sets of robocopy. Of course, this process is very costly and time consuming.\\n                    \\n                    To reduce costs and increase efficiency, Daniel hired you to calculate automatically, which the smaller track width for all sets robocopy can be stored properly.\\n                    \\n                   \\n                \\n                    \\n                    Figure 1.\\n                    \\n\\n                    \\n                                               \\n                    \\n                    Figure 2.\\n                    \\n                        \\n\\n                    \\n                    In Figure 1, for example, 3 robocopy were activated by the machine(A, B and C) and the smallest distance is a = 2, among BC. When the machine does the other set of robocopy (A, B, C and D) of Figure 2, the smallest distance is AB or DC, b = 3, and in this case the set of robocopy must be rotated 90 degrees to pass over the treadmill which has size 3. So, if these sets were passing by the treadmill, this would have to have a minimum width of 3.\",\n    \"id\": 1625,\n    \"input\": \"The input consists of several test cases.\\n\\n                The first line consists of an integer N (1 \\u2264 N \\u2264 10000) that represents the number of test cases.\\n\\n                Each test case consists of an integer C (1 \\u2264 C \\u2264 100) indicating the number of sets of robocopy manufactured. Each set consists of an integer c (1 \\u2264 c \\u2264 10 000) representing the number of robocopy of the set, followed by c rows of integers indicating the coordinate -100000 \\u2264 (x, y) \\u2264 100 000 of each one robocopy of the in C.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Robocopy\",\n    \"output\": \"In each row should be printed the size of the smallest treadmill to produce all sets of robocopy with accuracy of 10 decimal places.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The universities from the brazilian region known as Southern Border (Fronteira Sul, in Portuguese) have been joining ACM ICPC South America/Brazilian Subregional for many years, alternating the First Phase site especially between the cities of Erechim, in the state of Rio Grande do Sul, and Chapec\\u00f3, in the state of Santa Catarina. Since last year, our site has been being the 2nd greatest of the country. In this year of 2014, 34 teams of 12 institutions have joined the contest at UNOCHAPEC\\u00d3, at Chapec\\u00f3. The institutions involved in the organisation of the contest \\u2014 particularly UNOCHAPEC\\u00d3, UNOESC and just created UFFS \\u2014 believe that Programming contests are one of the main goals to strengthen Programming culture, promoting scientific and technological independence and inovation and greater relevance in the national scenario.\\n\\n                    After 2014 First Phase Awards, students and professors from the above institutions went to a caster pizza house for two reasons: 1. to end the hunger; 2. to talk about the organisation of the Programming contest at the knowledge, culture and education fair of Chapec\\u00f3, named \\u2018Feira de Conhecimento, Cultura e Educa\\u00e7\\u00e3o\\u2019 (FACE), which would happen two weeks later. But one of the professors during the talk  proposed: \\u201cWhy don't we realise a contest right here, not a Programming contest, but a pizza one? Whoever eats less pizza pays a round of beer for all!\\u201d. Everybody agreed, and therefore happened the 1st\\u00a0Incredible Chapecoense Pizza Contest (ICPC). The loser however wanted first to avoid paying the beer. \\u201cI pay only if someone can tell me a perfect number which is also a factorial number\\u201d, he said. \\u201c6\\u201d, answered another student quickly.\\n\\n                    Is there another perfect number which is also a factorial number? Of course not, but the loser, outraged after paying beer for all, decided to make a program to convince himself. Recall: a positive integer M is said to be perfect if it equals the sum of all its divisors different from M (e.g. 6 = 1 + 2 + 3 and 28 = 1 + 2 + 4 + 7 + 14), and is said to be a factorial if there is a natural number N such that N! = M.\",\n    \"id\": 1626,\n    \"input\": \"Each line of input consists of a single integer\\u00a0N (2 \\u2264 N \\u2264 105). The input ends in end-of-file (EOF).\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Incredible Chapecoense Pizza Contest\",\n    \"output\": \"For each integer N read from input, print a line containing two values: the sum of the divisors of N! different from N! and N! itself. As both values can be very large, print just the remainder they leave by 109 + 7.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Andre and Beto are playing a computer game that rewards the players in a very particular way: only the one that gives the last hit to defeat a monster will get all the gold that the monster leave behind. This implies that, although others players may have helped to defeat the monster, only the one who gives the last hit will be rewarded.\\n\\n                    Andre is intrigued with this system, and asked your help. Given the number of life points of the monster, the damage that Andre and Beto can cause, and the lead time necessary between two consecutive attacks, find out who will give the last hit on the monster, defeating it and getting the reward.\\n\\n                    At the beginning both Andre and Beto will attack, dealing At and Bt damage points, respectively. After each attack, both Andre and Beto have to wait exactly Ad and Bd seconds, respectively, before they can attack again. Whenever Andre and Beto can attack at the same time (as in the beginning), Andre has the priority and attacks first. A monster is defeated when its life points come to less or equal to zero.\",\n    \"id\": 1627,\n    \"input\": \"The first line contains an integer T, indicating the number of test cases to follow.\\n\\n                    Each test case starts with four integers At, Ad, Bt and Bd (1 \\u2264 At, Ad, Bt, Bd \\u2264 100), indicating the attack damage and the lead time between two consecutive attacks of Andre and Beto, respectively.\\n\\n                    Following there will be an integer H (1 \\u2264 H \\u2264 10000), indicating the number of life points of the monster.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Last Hit\",\n    \"output\": \"For each test case print one line containing one name, this being \\u201cAndre\\u201d if he's the last one to hit the monster, or \\u201cBeto\\u201d otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"A new game is becoming the biggest sensation in Nlogony. Named ChessGuess, this chess-like game is defined by the following rules, which make up ChessGuess Manifest:\\n\\n                    \\n                    \\tChessGuess can be played by any number of players greater than 1, one of them chosen by the group to be the dealer.\\n                    \\tIn each round, the dealer prepares a chessboard with any positive number of white pieces and a single black king, provided that no white king is placed at the board. The number of pieces of each kind is not limited as in traditional chess, i.e. there is no problem in placing, for example, 63 white pawns and 1 black king.\\n                    \\tAfter setting up the chessboard to a round, the dealer picks one of the other players up, so that each player, except for the dealer himself, is chosen exactly once.\\n                    \\tThe player must then choose a single white piece and move it as many times as necessary to check the black king. The piece movements are the same as in traditional chess, with the only exception that it is not allowed a pawn to move two squares in its first move.\\n                    \\tIf the player can guess an optimal choice, which checks the king in a minimal number of moves using a single piece, the dealer must drink a whole shot of tequila at once. Otherwise, who drinks up the tequila is the player. In the example shown in the Figure, 1 is the maximum number of moves the player might do in order to check the king using a single piece and get rid of the tequila.\\n                    \\n\\n                    \\n\\n                    A problem, however, is risking the success of the new game. As the play evolves, people get really drunk, particularly the dealer, who cannot decide any longer whether the choice made by the player is optimal or not. Therefore, the Federation and Association of ChessGuess for the Environment (FACE) needs a program that, given the starting board set up by the dealer, outputs the maximum number of moves the player can do in order to get\\u00a0the dealer even drunker.\",\n    \"id\": 1628,\n    \"input\": \"The input consists of several test cases, each of them consisting of 3 lines. The first line contains a single positive integer N, which represents the number of white pieces the dealer has placed at the board. The second line describes the N white pieces, following Chess Algebraic\\u00b9 Notation. The third line, at last, indicates the position of the black king. The input is ended when N = 0.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"ChessGuess\",\n    \"output\": \"For each test case, output a line containing a single integer representing the maximum number of moves the player can do in order to check the king using a single piece and get rid of the shot of tequila. If the number is not finite, output \\u201cINF\\u201d (without quotation marks).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Tiago Zonta, Unoesc  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"In 2013, FACE Fair compressed their visitors data with a free zipper. Unfortunately, this tool started to be paid and you were asked to create an algorithm to unzip the data. The data are compressed in a decimal format, and in order to run the unzipped you are asked to find each compressed line checksum. FACE organization got a documentation of how the process worked, but some information on how to get the digits are not clear, the document only provides some examples, as follow:\\n\\n                    \\n                      Compacted line composed by 54782 when unpacked would result in the binary string 00000111100000001111111100, with it, the digit value would be 8.\\n                      Compacted line composed by 045 when unpacked would result in the binary string 111100000, with it, the digit value would be 9.\\n\",\n    \"id\": 1629,\n    \"input\": \"The input contains several test cases. A test case first line contains an integer N (1 \\u2264 N \\u2264 25), representing the visitors data number from that file, wherein, each line represents a visitor. The following N lines consist of K digits (1 \\u2264 K \\u2264 103) without space representing the compacted line. The stop is given by N equals 0.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"UnzipFACE\",\n    \"output\": \"For each compacted line you must display the uncompressed checksum digit.\\u00a0\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Jeferson Tiepo, UNOESC  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Marcos works for a construction company, his task is to surround with stakes the sites where buildings will be constructed. There are two restrictions regarding these stakes distribution, they should be placed in a way the distance between two stakes is always the same, and the second restriction is that Marcos should use the smallest possible number of stakes. Marcos is your friend and he has asked you to develop a program to help him.\",\n    \"id\": 1630,\n    \"input\": \"There will be several test cases, each test case is described in a line by two numbers X and Y (1 \\u2264 X, Y \\u2264 100000000), which represent the dimensions of the site. The input end is indicated by end of file.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Stakes\",\n    \"output\": \"For each test case print a line with the minimum number of stakes needed to surround the site.\\u00a0\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Bobby is very happy, afterall he's got an amazing round birthday cake, with 1 metre of diametre, adorned with many cherries. In order to make easier the distribution of the pieces among his beloved ones, Bobby wishes initially to split the cake in two following a straight line. Though the line does not need to intercept the centre of the cake, it needs to intercept at least two cherries. Besides, let \\u03a3LEFT be the sum, for all cherries to the left of the line, of the distance from each cherry to the line, and let \\u03a3RIGHT be the sum, for all cherries to the right of the line, of the distance from each cherry to the line, then Bobby wishes the difference between \\u03a3LEFT and \\u03a3RIGHT to be as least as possible, as shown in Figure, in which the cherries are represented by points. Nevertheless, one may consider that cherries intercepted by the cut are neither to the left nor to the right of the line, and that the diametre of the cherries is negligible.\\n\\n\",\n    \"id\": 1631,\n    \"input\": \"Many test cases make up the input. The first line of each test case contains a single positive integer N (4 \\u2264 N \\u2264 100), which represents the number of cherries in the cake. Follow then N lines, each consisting of two integers X and Y (-50 \\u2264 X, Y \\u2264 50, X2 + Y2 \\u2264 502), which represent the coordinates, in centimetres, of the cherries in the cake, considering that the centre of the cake is placed at the origin of the cartesian plane. The input ends with N = 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Bobby's Amazing Cake\",\n    \"output\": \"For each test case, your program shall output a line containing a value with 3 decimal places with represents the minimal difference between \\u03a3LEFT and \\u03a3RIGHT.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"The internet is not as safe as it was in the past. One evidence of it is the increase in the number of hacker attacks. To worsen, when a hacker steals a password from a user in a specific site, he has access to all the other accounts of this user in other sites, because most of the users nowadays use the same password in all sites.\\n\\n                    One of the proposed solutions to this problem is to use different passwords for each site, or even different variations of the same password. For example, to vary the password \\u201cpotato\\u201d, it's possible to use the password \\u201cpOtaTo\\u201d, \\u201cP0tat0\\u201d, \\u201cpot4TO\\u201d, etc. In other words, for each character of the alphabet, it's possible to make a variation changing the case of the character (lower case or upper case). Moreover, to increase the total number of variations, for the characters A, E, I, O and S it's possible to use the numbers 4, 3, 1, 0 and 5, respectively.\\n\\n                    Your friend needs to increase the number of variations of his password, and asked for your help. Given the password that he chose, find out the number of different variations that it's possible to build.\",\n    \"id\": 1632,\n    \"input\": \"The first line contains an integer T, indicating the number of test cases to follow.\\n\\n                    Each test case contains a sequence of characters S, indicating your friend's password. For each password, there will be at least 1 and at most 16 characters, which can be any of the 26 letters of the alphabet, lower or upper case.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Variations\",\n    \"output\": \"For each test case print one line containing one integer, indicating the number of different variations that is possible to build with the given password, including itself.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leandro Zatesko, UFFS  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"The Federation of Awkward Cellphones and Erasers (FACE) recently signed a contract with the Federal Government to develop a low cost cellphone which is going to be distributed freely to low-income populations. Despite of being simple, many applications will be available in the device, so people will be able to enjoy all the eases that mobile platforms provide. A challenge, however, is intrigating FACE programmers: the device does not have many hardware resources, and the programmers are facing difficulties in writing the module which will manage the processes of the SBC (System for Beautiful Cellphones) operating system, developed especially for the architeture. The programmers received\\u00a0from the analysts the following directives, which must be strictly followed:\\n\\n                    \\n                    \\tThe system runs one process at a time, and each process till the end.\\n                    \\tThe system can never be idle if there are processes waiting for be attended.\\n                    \\tIn order to avoid system lock, each process, when requiring its execution, must inform the system the precise duration time of its execution, in clocks. The system never allows the execution of a process going longer than expected, aborting the process if necessary. Nevertheless, if a process terminates before the informed time, the system uses the remaining clock cycles to routines of data collection and comunication with Government. Therefore, for all purposes, the execution of a process which has informed needing c clocks always lasts precisely c clocks.\\n                    \\tThe system guarantees that is minimal the sum, for all processes, of the time each process waits until starting running.\\n                    \\n\\n                    Help FACE to complete SBC writing the module which is missing!\",\n    \"id\": 1633,\n    \"input\": \"The input consists of many test cases. The first line of each test case consists of a single integer N (1 \\u2264 N \\u2264 105), which represents the number of processes which required their execution to SBC. Each of the N following lines corresponds then to a process and consists of two integers t and c (1 \\u2264 t, c \\u2264 103), which represent respectively the system time when the process has made its requirement and the number of clocks the execution of the process will last. Consider that the system time is counted in clocks and the counter starts in 1 in each test case. Also consider that the input ends in end-of-file (EOF).\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"SBC\",\n    \"output\": \"For each test case, print the integer value which represents the sum, for all processes, of the time, in clock cycles, that each process waits until starting running. Please note that this value might not fit in 32 bits.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Even in times of an economic crisis, people in Byteland still like to participate in lotteries. With a bit of luck, they might get rid of all their sorrows and become rich.\\n\\nThe most popular lottery in Byteland consists of m rounds. In each round, everyone can purchase as many tickets as he wishes, and among all tickets sold in this round, one ticket is chosen randomly, each one with the same probability. The owner of that ticket wins the prize money of this round. Since people in Byteland like powers of 2, the prize money for the winner of round i amounts to 2i Bytelandian Dollars.\\n\\nCan you determine for each participant in the lottery the probability that he will win more money than anybody else?\",\n    \"id\": 1634,\n    \"input\": \"The input consists of several test cases. Each test case starts with a line containing two integers n and m, the number of participants in the lottery and the number of rounds in the lottery. You may assume that 1 \\u2264 n \\u2264 10000 and 1 \\u2264 m \\u2264 30.\\n\\nThe following n lines contain the description of the tickets bought by the participant. The ith such line contains m non-negative integers c1, ..., cm, where cj (1 \\u2264 j \\u2264 m) is the amount of tickets of round j bought by participant i. The total number of tickets sold in each round is between 1 and 109.\\n\\nThe input ends with a line containing 2 zeros.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Another Lottery\",\n    \"output\": \"For each test case, print n lines of output, where line i contains the probability as a reduced fraction that participant i wins the most money. See the sample output for details.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Before the 2009 elections at the European Parliament, Bill and Ted have asked their friends to make guesses about the outcome of the ballot. Now, the results have been published, so Bill and Ted want to check who was right. But checking the results of their many friends would take a very long time, and they need the evaluation to be done by a computer. Since they are not so good at programming, they ask you for help.\",\n    \"id\": 1635,\n    \"input\": \"The data provided by Bill and Ted has the following format: The first line consists of the number\\u00a0p\\u00a0of parties followed by the number\\u00a0g\\u00a0of guesses (with\\u00a01 \\u2264 p \\u2264 50\\u00a0and\\u00a01 \\u2264 g \\u2264 10000). Then follow\\u00a0p\\u00a0lines, each line consisting of a unique party name of length \\u2264 20 (only containing letters a-z, A-Z and digits 0-9) and the achieved vote percentage of this party with one digit after the decimal point. After the parties follow\\u00a0g\\u00a0lines, each consisting of a guess. A guess has the form\\u00a0P1\\u00a0+ P2\\u00a0+ ... + Pk\\u00a0COMP n, where\\u00a0P1\\u00a0to\\u00a0Pk\\u00a0are party names,\\u00a0COMP\\u00a0is one of the comparison operators <, >, <=, >= or = and\\u00a0n\\u00a0is an integer between 0 and 100, inclusively. Each party name occurs at most once in each guess.\\nObs:  Be careful with the comparison of floating point values, because some values in the input (like 0.1) do not have an exact representation as a floating point number.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Ballot Evaluation\",\n    \"output\": \"For each guess, sum up the vote percentages of the parties and compare them with the specified integer\\u00a0n. Then, print a line stating whether the guess was correct. See the sample output for details.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"A permutation is a sequence of integers which contains each integer from 1 to n exactly once. In this problem we are looking for permutations with special properties:\\r\\n\\r\\n\\r\\n\\tAntimonotonic: for each consecutive 3 values pi-1, pi, pi+1 (1 < i < n), pi should either be the smallest or the biggest of the three values.\\r\\n\\tCyclic: The permutation should consist of only one cycle, that is, when we use pi as a pointer from i to pi, it should be possible to start at position 1 and follow the pointers and reach all n positions before returning to position 1.\\r\\n\\r\",\n    \"id\": 1636,\n    \"input\": \"The input file contains several test cases. Each test case consists of a line containing an integer n, (3 \\u2264 n \\u2264 106), the number of integers in the permutation. Input is terminated by n = 0.\\r\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Cyclic Antimonotonic Permutations\",\n    \"output\": \"For each test case print a permutation of the integers 1 to n which is both antimonotonic and cyclic. In case there are multiple solutions, you may print any one. Separate all integers by whitespace characters.\\r\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"Contest Local, Universidade de Ulm  Alemanha\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The Elias gamma code is a simple code which can be used to encode a sequence of positive integers. We will use a modified code which is also able to encode zeros. To encode an integer\\u00a0n, do the following:\\n\\n\\n\\tLet k be the number of bits of n\\n\\tWrite k-1 zeros followed by a 1\\n\\tWrite n in binary\\n\\n\\nExamples\\n\\n\\n\\n    \\n        \\n            Number\\n            Binary\\n            Number of bits\\n            Prefix\\n            Code\\n        \\n    \\n    \\n        \\n            0\\n            0\\n            1\\n            1\\n            10\\n        \\n        \\n            1\\n            1\\n            1\\n            1\\n            11\\n        \\n        \\n            2\\n            10\\n            2\\n            01\\n            0110\\n        \\n        \\n            3\\n            11\\n            2\\n            01\\n            0111\\n        \\n        \\n            4\\n            100\\n            3\\n            001\\n            001100\\n        \\n        \\n            5\\n            101\\n            3\\n            001\\n            001101\\n        \\n        \\n            6\\n            110\\n            3\\n            001\\n            001110\\n        \\n        \\n            7\\n            111\\n            3\\n            001\\n            001111\\n        \\n        \\n            8\\n            1000\\n            4\\n            0001\\n            00011000\\n        \\n    \\n\\n\\n\\nA sequence of integers is encoded by writing the codes of the individual integers of the sequence in the same order as the integers appear in the sequence. The prefix of\\u00a0k\\u00a0additional bits before the binary representation of each integer is needed to be able to decode the encoded integers. So when reading the encoding of a sequence of integers, if we read\\u00a0k-1\\u00a0zeros followed by a one, it means that there are\\u00a0k\\u00a0bits following which are the binary representation of the next encoded integer.\\n\\nIf we want to shorten the length of the encoding of a sequence of integers, there may be still some room for improvement; we will consider the following two optimizations:\\n\\n\\n\\tIf there is a prefix which indicates that\\u00a0k\\u00a0bits are following, but there is no integer in the sequence with k bits, we can use this prefix to indicate that\\u00a0k+1\\u00a0bits are following. If there already was a prefix which indicates that\\u00a0k+1\\u00a0bits are following, this prefix is not needed anymore, and it can be used to indicate that\\u00a0k+2\\u00a0bits are following, and so on.\\n\\tWe can add a leading zero to the binary representation of all integers in the sequence with\\u00a0k\\u00a0bits, which then become integers with\\u00a0k+1\\u00a0bits, and then the first optimization can be used. This optimization seems especially useful if there are few integers with\\u00a0k\\u00a0bits, but many integers with more than\\u00a0k\\u00a0bits.\\n\\n\\nWhen we are minimizing the length of the encoding of a sequence of integers, we only care about how many integers in the sequence have a certain number of bits. Let\\u00a0ci\\u00a0denote the number of integers in a sequence with\\u00a0i\\u00a0bits.\\n\\nLet us look at the following example:\\u00a0c1\\u00a0= 2, c2\\u00a0= 4, c3\\u00a0= 0, c4\\u00a0= 1\\u00a0(which, for example, could correspond to a sequence\\u00a02, 1, 3, 8, 0, 2, 3). With the original elias gamma coding, the encoding of the sequence would have length\\u00a02 \\u00d7 (1 + 1) + 4 \\u00d7 (2 + 2) + 0 \\u00d7 (3 + 3) + 1 \\u00d7 (4 + 4) = 28. By using optimization 1 we can save 1 bit by using prefix\\u00a0001\\u00a0for the integer with 4 bits. Then, we could use optimization 2 and add leading zeros to the integers with 1 bit, making them use 2 bits. Then, we use optimization 1 and use prefix\\u00a01\\u00a0for the integers with 2 bits, prefix\\u00a001\\u00a0for the integer with 4 bits, and we get the new length of\\u00a06 \\u00d7 (1 + 2) + 1 \\u00d7 (2 + 4) = 24.\\n\\nBoth optimizations can possibly be used several times. Note that for the second optimization, it is not easy to decide when and how to use it. The goal is to combine these two optimizations in the best possible way, that means we want to find an encoding of a given sequence of integers that has minimum length among all encodings using elias gamma coding with any combination of these two optimizations.\",\n    \"id\": 1637,\n    \"input\": \"The input file contains several test cases. Each test case starts with a line containing an integer n, (1 \\u2264 n \\u2264 128). The next line contains the values  c1, ..., cn (0 \\u2264 ci \\u2264 10000). Input is terminated by n = 0.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Elias Gamma Coding\",\n    \"output\": \"For each test case print one line with the minimum length of an encoding of the given input sequence.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The university canteen does not want any student to leave the canteen hungry. Therefore, as long as a student is hungry, he can get another portion of food for free. The canteen uses a fixed food portion size, because it would take too much time to first ask a student how much food he wanted. It can happen that a student doesn't finish his last portion of food and the remainder has to be thrown away.\\r\\n\\r\\nTo minimize costs, the manager of the canteen wants to determine a food portion size S such that the amount of food that is wasted is small, but also the number of times the students have to fetch another portion of food is not too big. Note that these two goals can be conflicting:\\r\\n\\r\\n\\r\\n\\tBy choosing a very small food portion size, one does not waste food, but simultaneously the number of times the students have to fetch food is big.\\r\\n\\tBy choosing a large food portion size, one can make sure each student has to fetch only one portion, but at the same time it may happen that a large quantity of food is wasted.\\r\\n\\r\\n\\r\\nThe manager of the canteen has collected data about how many units of food each student eats. The problem to be solved can now be formulated mathematically as follows: Let X be the amount of food that is wasted, and Y the number of times the students go to fetch food. Then, the goal is to minimize A \\u00d7 X + B \\u00d7 Y, where A, B are weights that represent the relative importance of the two opposing goals. Note that X and Y depend on the food portion size S and the quantities of food each student eats. We impose the additional constraint that no student should have to go more than 3 times to fetch food.\\r\",\n    \"id\": 1638,\n    \"input\": \"The input file contains several test cases. Each test case starts with a line containing an integer n, (1 \\u2264 N \\u2264 1000), the number of students eating in the canteen. The next line contains the values A and B (1 \\u2264 A, B \\u2264 10). The third line of each test case consists of n integers Y1, ..., Yn (1 \\u2264 Yi \\u2264 100), where Yi is the amount of food student I eats. Input is terminated by N=0.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tOBS: In the first sample input, the optimal food portion size is 4.5. Note that a food portion size of 3 would yield a smaller cost of 16, the 5th student, however, would have to fetch food 4 times.\\n\\t\\t\\t\\t\\t\\r\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Food Portion Size\",\n    \"output\": \"For each test case print one line containing the costs resulting from an optimal choice of the food portion size. Print each value as a reduced fraction. If the result is an integer, do not print the denominator 1. See the sample output for details.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"John von Neumann suggested in 1946 a method to create a sequence of pseudo-random numbers. His idea is known as the \\\"middle-square\\\"-method and works as follows: We choose an initial value a0, which has a decimal representation of length at most n. We then multiply the value a0 by itself, add leading zeros until we get a decimal representation of length 2 \\u00d7 n and take the middle n digits to form ai. This process is repeated for each ai with i > 0. In this problem we use n = 4.\\n\\n                    Example 1: a0=5555, a02=30858025, a1=8580,...\\n\\n                    Example 2: a0=1111, a02=01234321, a1=2343,...\\n\\n                    Unfortunately, this random number generator is not very good. When started with an initial value it does not produce all other numbers with the same number of digits.\\n\\n                    Your task is to check for a given initial value a0 how many different numbers are produced.\",\n    \"id\": 1639,\n    \"input\": \"The input contains several test cases. Each test case consists of one line containing a0 (0 < a0 < 10000). Numbers are possibly padded with leading zeros such that each number consists of exactly 4 digits. The input is terminated with a line containing the value 0.\\n\\t\\t\\t\\t\\t Obs.: Note that the third test case has the maximum number of different values among all possible inputs.\\n\\n\\t\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Generate Random Numbers\",\n    \"output\": \"For each test case, print a line containing the number of different values ai produced by this random number generator when started with the given value a0. Note that a0 should also be counted.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"A transport company often needs to deliver goods from one city to another city. The transport company has made a special deal with a hotel chain which allows its drivers to stay in the hotels of this chain for free. Drivers are only allowed to drive up to 10 hours a day. The transport company wants to find a route from the starting city to the destination city such that a driver can always spend the night in one of the hotels of the hotel chain, and that he needs to drive at most 10 hours from one hotel to the next hotel (or the destination). Of course, the number of days needed to deliver the goods should also be minimized.\",\n    \"id\": 1640,\n    \"input\": \"The input file contains several test cases. Each test case starts with a line containing an integer n, (2 \\u2264 n \\u2264 10000), the number of cities to be considered when planning the route. For simplicity, cities are numbered from 1 to n, where 1 is the starting city, and n is the destination city. The next line contains an integer h followed by the numbers c1, c2, ..., ch indicating the numbers of the cities where hotels of the hotel chain are located. You may assume that 0 \\u2264 h \\u2264 min(n, 100). The third line of each test case contains an integer m (1 \\u2264 m \\u2264 105), the number of roads to be considered for planning the route. The following m lines describe the roads. Each road is described by a line containing 3 integers a, b, t (1 \\u2264 a, b \\u2264 n and 1 \\u2264 t \\u2264 600), where a, b are the two cities connected by the road, and t is the time in minutes needed by the driver to drive from one end of the road to the other. Input is terminated by n = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Hotel Booking\",\n    \"output\": \"For each test case, print one line containing the minimum number of hotels the transport company has to book for a delivery from city 1 to city n. If it is impossible to find a route such that the driver has to drive at most 10 hours per day, print -1 instead.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Traditionally after the Local Contest at Louisiana, judges and contestants go to their favourite restaurant, Alfredos Pizza Restaurant. The contestants are really hungry after trying hard for five hours. To get their pizza as quickly as possible, they just decided to order one big pizza for all instead of several small ones. They wonder whether it is possible to put the big rectangular pizza on the surface of the round table such that it does not overhang the border of the table. Write a program that helps them!\",\n    \"id\": 1641,\n    \"input\": \"The input file contains several test cases. Each test case starts with an integer number R, the radius of the surface of the round table the contestants are sitting at. Input is terminated by R = 0. Otherwise, 1 \\u2264 R \\u2264 1000. Then follow 2 integer numbers W and L specifying the width and the length of the pizza, 1 \\u2264 W \\u2264 L \\u2264 1000.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Alfredo's Pizza Restaurant\",\n    \"output\": \"Output for each test case whether the ordered pizza will fit on the table or not. Adhere to the format shown in the sample output. A pizza which just touches the border of the table without intersecting it is considered fitting on the table, see example 3 for clarification.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Bruce Force's keyboard is broken, only a few keys are still working. Bruce has figured out he can still type texts by switching the keyboard layout whenever he needs to type a letter which is currently not mapped to any of the m working keys of the keyboard.\\n\\n                    You are given a text that Bruce wishes to type, and he asks you if you can tell him the maximum number of consecutive characters in the text which can be typed without having to switch the keyboard layout. For simplicity, we assume that each key of the keyboard will be mapped to exactly one character, and it is not possible to type other characters by combination of different keys. This means that Bruce wants to know the length of the largest substring of the text which consists of at most mdifferent characters.\",\n    \"id\": 1642,\n    \"input\": \"The input contains several test cases, each test case consisting of two lines. The first line of each test case contains the number m (1 \\u2264 m \\u2264 128), which specifies how many keys on the keyboard are still working. The second line of each test case contains the text which Bruce wants to type. You may assume that the length of this text does not exceed 1 million characters. Note that the input may contain space characters, which should be handled like any other character.\\n\\n                    The last test case is followed by a line containing one zero.\\n\\n                    Hint: The largest substring for the first test case is \\\"_by_bru\\\", where _ stands for a space character.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Broken Keyboard\",\n    \"output\": \"For each test case, print one line with the length of the largest substring of the text which consists of at most m different characters.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"This year, Bruce Force spends his vacation in Flagstaff, Arizona, where he wants to practice for his next half marathon (a race over 21 km). At his first training he runs to his friend Greedy Gonzales' home which is 21 miles away from Flagstaff.\\n\\n                    Arriving there, he is very tired and realizes that 21 miles are much more than 21 km. Greedy Gonzales tells him that 21 km equals 13 miles. 21, 13? Bruce realizes immediately that there must be a deeper relation! Both, 13 and 21 are Fibonacci numbers!\\n\\n                    Fibonacci numbers can be defined as follows:\\n\\n                    F1 = 1\\n\\n                    F2 = 2\\n\\n                    Fn+1 = Fn+Fn-1 for n > 1\\n\\n                    Bruce has just learned about the Fibonacci number system at his university. Each positive integer x can be written as the sum of different Fibonacci numbers, so this means that there exists numbers k and b1, b2, ..., bk such that x = \\u2211i=1..k bi * Fi, where bk = 1 and bi (1 \\u2264 i < k) is either 0 or 1. In short, we can write the representation as: b(x) = (bk, bk-1, ..., b1). To make the representation unique, we require that bi * bi-1 = 0 for all i > 1.\\n\\n                    For example 21 can be represented as (1,0,0,0,0,0,0) and 13 as (1,0,0,0,0,0) in the Fibonacci system. Bruce notices that one can convert a distance x in kilometers into a corresponding distance y to miles as follows: First, write down x in its Fibonacci system representation b(x). Second, shift the bits of b(x) one position to the right (the last bit is deleted) and get b(y). Third, calculate y from b(y) by evaluating the sum given above.\\n\\n                    For example, the number 42 written in the Fibonacci system is (1,0,0,1,0,0,0,0). In step two we would shift the bits one position to the right and get (1,0,0,1,0,0,0). In the third step, we would calculate 0*1 + 0*2 + 0*3 + 1*5 + 0*8 + 0*13 + 1*21 = 26.\\n\\n                    Now it's your turn to write a program for Bruce that converts kilometers into miles according to Bruce's algorithm.\",\n    \"id\": 1643,\n    \"input\": \"The first line of the input contains t, the number of distances Bruce wants to convert from kilometers to miles (0<t<25000). Each of the next t\\u00a0lines contains an integer distance x\\u00a0(2 < x < 25000) in kilometers.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Convert Kilometers to Miles\",\n    \"output\": \"For each distance x in kilometers output the distance y in miles calculated according to Bruce's algorithm.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Bruce Force has had an interesting idea how to encode strings. The following is the description of how the encoding is done:\\n\\n                    Let x1,x2,...,xn be the sequence of characters of the string to be encoded.\\n\\n                    \\n                    \\tChoose an integer M and N pairwise distinct numbers p1,p2,...,pn from the set {1, 2, ..., N} (a permutation of the numbers 1 to N).\\n                    \\tRepeat the following step m times.\\n                    \\tFor 1 \\u2264 i \\u2264 N set yi to xpi, and then for 1 \\u2264 i \\u2264 N replace xi by yi.\\n                    \\n\\n                    For example, when we want to encode the string \\\"hello\\\", and we choose the value M = 3 and the permutation 2, 3, 1, 5, 4, the data would be encoded in 3 steps: \\\"hello\\\" -> \\\"elhol\\\" -> \\\"lhelo\\\" -> \\\"helol\\\".\\n\\n                    Bruce gives you the encoded strings, and the numbers M and p1, ..., pn used to encode these strings. He claims that because he used huge numbers m for encoding, you will need a lot of time to decode the strings. Can you disprove this claim by quickly decoding the strings?\",\n    \"id\": 1644,\n    \"input\": \"The input contains several test cases. Each test case starts with a line containing two numbers N and M (1 \\u2264 N \\u2264 80, 1 \\u2264 M \\u2264 109). The following line consists of N pairwise different numbers p1,...,pn (1 \\u2264 pi \\u2264 N). The third line of each test case consists of exactly N characters, and represent the encoded string. The last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Decode the Strings\",\n    \"output\": \"For each test case, print one line with the decoded string.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Bruce Force is standing in the forest. He wonders what is the tree trunk the farthest away which is not blocked from his view by other tree trunks.\\n\\n                    Bruce has made a map of the trees in the forest. The map shows his current position as the origin of a cartesian coordinate system. Tree i is shown on the map as a circle with the center (xi, yi) and radius ri. You may assume that a tree trunk is visible if and only if there exists a line segment on the map from the origin (0,0) to a point on the border of the circle representing the tree trunk, where the line segment does not intersect or touch another circle.\",\n    \"id\": 1646,\n    \"input\": \"The input contains several test cases. The first line of each test case contains one integer n (1 \\u2264 n \\u2264 1000), where n specifies how many trees are on the map. The following n lines contain 3 integers xi, yi, ri (-10000 \\u2264 xi, yi \\u2264 10000 , 1 \\u2264 ri \\u2264 1000 ) where (xi, yi) is the center of the circle representing tree trunk i, and ri is the radius of the circle. You may assume that no two circles in the input intersect, i.e., for any two circles, the distance between their centers is more than the sum of their radii. Moreover, you may assume that no circle contains the origin. The last test case is followed by a line containing one zero.\\n\\t\\t\\t\\t\\t\\n                    Hint: In the second test case, the first four trees block the view of all trees farther away than these four trees.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Forest\",\n    \"output\": \"For each test case, print one line with the maximum euclidean distance from the origin to a visible tree. The distance to a tree should be measured using the point of the tree closest to the origin, no matter if this point is in fact visible or not.\\n\\n                    Round the answer to 3 digits after the decimal point.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"There are n bowls, numbered from 1 to n. Initially, bowl i contains mi marbles. One game step consists of removing one marble from a bowl. When removing a marble from bowl i (i > 1), one marble is added to each of the first i-1 bowls; if a marble is removed from bowl 1, no new marble is added. The game is finished after each bowl is empty.\\n\\n                    Your job is to determine how many game steps are needed to finish the game. You may assume that the supply of marbles is sufficient, and each bowl is large enough, so that each possible game step can be executed.\",\n    \"id\": 1647,\n    \"input\": \"The input contains several test cases. Each test case consists of one line containing one integer n (1 \\u2264 n \\u2264 50), the number of bowls in the game. The following line contains n integers mi (1 \\u2264 i \\u2264 n, 0 \\u2264 mi \\u2264 1000), where mi gives the number of marbles in bowl i at the beginning of the game.\\n\\n                    The last test case is followed by a line containing 0.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"A Game with Marbles\",\n    \"output\": \"For each test case, print one line with the number of game steps needed to finish the game. You may assume that this number fits into a signed 64-bit integer (in C/C++ you can use the data type \\\"long long\\\", in JAVA the data type \\\"long\\\").\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Bob loves Pizza but is always out of money. One day he reads in the newspapers that his favorite pizza restaurant, Alfredo's Pizza Restaurant, is running a competition: they will donate a big pizza to the first person who will tell them the lowest price per area that can be achieved by buying any of the pizzas at most once. \\\"That task is easy!\\\", thinks Bob, \\\"For each pizza I just calculate the average price and the lowest quotient will be the answer.\\\".\\n\\n                    Unfortunately the problem is a bit more complicated: with some pizzas Alberto gives out discount coupons for getting another pizza cheaper and even worse, those coupons can be combined. The pizzas have to be bought one after the other, and it is not possible to use a coupon to get a discount retrospectively for a pizza which has already been bought. Can you help Bob to become the first to solve this task and to get a pizza for free?\",\n    \"id\": 1648,\n    \"input\": \"The input file contains several test cases. Each test case starts with a number m, the number of pizzas Alfredo offers. Input is terminated by m = 0. Otherwise, 1 \\u2264 m \\u2264 15. Then follow m lines describing the pizzas. Each of those following lines describes pizza i (1 \\u2264 i \\u2264 m) and starts with 3 integer numbers pi, ai and ni specifying the price of the pizza, its area and the number of discount coupons you get when buying it, 1 \\u2264 pi \\u2264 10000, 1 \\u2264 ai \\u2264 10000 and 0 \\u2264 ni < m. Then follow ni pairs of integer numbers xij and yij specifying the index xij (1 \\u2264 xij \\u2264 m, xij \\u2260 i) of the pizza you get a discount coupon for and the discount in percentage terms yij (1 \\u2264 yij \\u2264 50) you get when buying pizza xij. You may assume that for each i the values xij are pairwise distinct.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Help Bob\",\n    \"output\": \"For each test case print one line containing the lowest price per area that can be achieved by buying any of the pizzas at most once. Round this number to 4 places after the decimal point. Note that you can combine an arbitrary number of discount coupons: for a pizza with price 10 and two rabatt coupons for that pizza with a 50 and a 20 on it, you would only have to pay 10 * 0.8 * 0.5 = 4 monetary units.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    Local Contest, University of Ulm  Germany\\r\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\r\\n                    Maybe you wonder what an annoying painting tool is? First of all, the painting tool we speak of supports only black and white. Therefore, a picture consists of a rectangular area of pixels, which are either black or white. Second, there is only one operation how to change the color of pixels:\\r\\n\\r\\n                    Select a rectangular area of r rows and c columns of pixels, which is completely inside the picture. As a result of the operation, each pixel inside the selected rectangle changes its color (from black to white or from white to black).\\r\\n\\r\\n                    Initially, all pixels are white. To create a picture, the operation described above can be applied several times. Can you paint a certain picture which you have in mind?\\r\\n\\r\",\n    \"id\": 1649,\n    \"input\": \"\\r\\n                    \\r\\n                    The input contains several test cases. Each test case starts with one line containing four integers n, m, r and c. (1 \\u2264 r \\u2264 n \\u2264 100, 1 \\u2264 c \\u2264 m \\u2264 100), The following n lines each describe one row of pixels of the painting you want to create. The ith line consists of m characters describing the desired pixel values of the ith row in the finished painting ('0' indicates white, '1' indicates black).\\r\\n\\r\\n                    The last test case is followed by a line containing four zeros.\\r\\n\\r\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Annoying Painting Tool\",\n    \"output\": \"\\r\\n                    For each test case, print the minimum number of operations needed to create the painting or -1 if it is impossible.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"You are visiting the Centre Pompidou which contains a lot of modern paintings. In particular you notice one painting which consists solely of black and white squares, arranged in rows and columns like in a chess board (no two adjacent squares have the same colour).\\n\\n                    Since you are bored, you wonder how many 8 \\u00d7 8 chess boards are embedded within this painting. The bottom right corner of a chess board must always be white.\",\n    \"id\": 1650,\n    \"input\": \"The input contains several test cases. Each test case consists of one line with three integers n, m and c. (8 \\u2264 n, m \\u2264 40000), where n is the number of rows of the painting, and m is the number of columns of the painting. c is always 0 or 1, where 0 indicates that the bottom right corner of the painting is black, and 1 indicates that this corner is white.\\n\\n                    The last test case is followed by a line containing three zeros.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Black and White Painting\",\n    \"output\": \"For each test case, print the number of chess boards embedded within the given painting.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Using a sheet of paper and scissors, you can cut out two faces to form a cylinder in the following way:\\n\\n                    \\n                    \\tCut the paper horizontally (parallel to the shorter side) to get two rectangular parts.\\n                    \\tFrom the first part, cut out a circle of maximum radius. The circle will form the bottom of the cylinder.\\n                    \\tRoll the second part up in such a way that it has a perimeter of equal length with the circle's circumference, and attach one end of the roll to the circle. Note that the roll may have some overlapping parts in order to get the required length of the perimeter.\\n                    \\n\\n                    Given the dimensions of the sheet of paper, can you calculate the biggest possible volume of a cylinder which can be constructed using the procedure described above?\",\n    \"id\": 1651,\n    \"input\": \"The input consists of several test cases. Each test case consists of two numbers w and h (1 \\u2264 w \\u2264 h \\u2264 100), which indicate the width and height of the sheet of paper.\\n\\n                    The last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Cylinder\",\n    \"output\": \"For each test case, print one line with the biggest possible volume of the cylinder. Round this number to 3 places after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Mrs. Deli is running the delicatessen store \\\"Deli Deli\\\". Last year Mrs. Deli has decided to expand her business and build up an online store. She has hired a programmer who has implemented the online store.\\n\\n                    Recently some of her new online customers complained about the electronic bills. The programmer had forgotten to use the plural form in case that an item is purchased multiple times. Unfortunaly the programmer of Mrs. Deli is on holiday and now it is your task to implement this feature for Mrs. Deli. Here is a description how to make the plural form:\\n\\n                    \\n                    \\tIf the word is in the list of irregular words replace it with the given plural.\\n                    \\tElse if the word ends in a consonant followed by \\\"y\\\", replace \\\"y\\\" with \\\"ies\\\".\\n                    \\tElse if the word ends in \\\"o\\\", \\\"s\\\", \\\"ch\\\", \\\"sh\\\" or \\\"x\\\", append \\\"es\\\" to the word.\\n                    \\tElse append \\\"s\\\" to the word.\\n\",\n    \"id\": 1652,\n    \"input\": \"The first line of the input file consists of two integers L and N (0 \\u2264 L \\u2264 20, 1 \\u2264 N \\u2264 100). The following L lines contain the description of the irregular words and their plural form. Each line consists of two words separated by a space character, where the first word is the singular, the second word the plural form of some irregular word. After the list of irregular words, the following N lines contain one word each, which you have to make plural. You may assume that each word consists of at most 20 lowercase letters from the english alphabet ('a' to 'z').\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Deli Deli\",\n    \"output\": \"Print N lines of output, where the ith line is the plural form of the ith input word.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"Arithmetic expressions are usually written with the operators in between the two operands (which is called infix notation). For example, (x + y) * (z - w) is an arithmetic expression in infix notation. However, it is easier to write a program to evaluate an expression if the expression is written in postfix notation (also known as reverse polish notation). In postfix notation, an operator is written behind its two operands, which may be expressions themselves. For example, x y + z w - * is a postfix notation of the arithmetic expression given above. Note that in this case parentheses are not required.\\n                    To evaluate an expression written in postfix notation, an algorithm operating on a stack can be used. A stack is a data structure which supports two operations:\\n                    1. push: a number is inserted at the top of the stack.\\n                    2. pop: the number from the top of the stack is taken out.\\n                    During the evaluation, we process the expression from left to right. If we encounter a number, we push it onto the stack. If we encounter an operator, we pop the first two numbers from the stack, apply the operator on them, and push the result back onto the stack. More specifically, the following pseudocode shows how to handle the case when we encounter an operator O:\\n                    a := pop();\\n                    b := pop();\\n                    push(b O a);\\n                    The result of the expression will be left as the only number on the stack.\\n                    Now imagine that we use a queue instead of the stack. A queue also has a push and pop operation, but their meaning is different:\\n                    1. push: a number is inserted at the end of the queue.\\n                    2. pop: the number from the front of the queue is taken out of the queue.\\n                    Can you rewrite the given expression such that the result of the algorithm using the queue is the same as the result of the original expression evaluated using the algorithm with the stack?\",\n    \"id\": 1653,\n    \"input\": \"The first line of the input contains a number T (T \\u2264 200). The following T lines each contain one expression in postfix notation. Arithmetic operators are represented by uppercase letters, numbers are represented by lowercase letters. You may assume that the length of each expression is less than 10000 characters.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Expressions\",\n    \"output\": \"For each given expression, print the expression with the equivalent result when using the algorithm with the queue instead of the stack. To make the solution unique, you are not allowed to assume that the operators are associative or commutative.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"A cashier in a grocery store seems to have difficulty in distinguishing the multiplication symbol and the addition symbol. To make things easier for him, you want to buy goods in such a way that the product of their prices is the same as the sum of their prices.\\n\\n                    Of course, if you buy only one item, this is always true. With two items and three items, it still seems quite a boring task to you, so now you are interested in finding possible prices of four items such that the sum of the four prices is equal to the product of the four prices. You should consider the prices are in \\u20ac with two digits after the decimal point. Obviously, each product costs at least one cent.\",\n    \"id\": 1654,\n    \"input\": \"This problem has no input.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Grocery Store\",\n    \"output\": \"Print all solutions which have a sum of the four items of at most 20.00 \\u20ac. For each solution, print one line with the prices of the four items in non-decreasing order, with one space character between them. You may print the solutions in any order, but make sure to print each solution only once.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"In the movie \\\"Blues Brothers\\\", the orphanage where Elwood and Jake were raised may be sold to the Board of Education if they do not pay 5000 dollars in taxes at the Cook County Assessor's Office in Chicago. After playing a gig in the Palace Hotel ballroom to earn these 5000 dollars, they have to find a way to Chicago. However, this is not so easy as it sounds, since they are chased by the Police, a country band and a group of Nazis. Moreover, it is 106 miles to Chicago, it is dark and they are wearing sunglasses.\\n\\n                    As they are on a mission from God, you should help them find the safest way to Chicago. In this problem, the safest way is considered to be the route which maximises the probability that they are not caught.\",\n    \"id\": 1655,\n    \"input\": \"The input file contains several test cases.\\n\\n                    Each test case starts with two integers n and m (2 \\u2264 n \\u2264 100 , 1 \\u2264 m \\u2264 n*(n-1)/2). n is the number of intersections, m is the number of streets to be considered.\\n\\n                    The next m lines contain the description of the streets. Each street is described by a line containing 3 integers a, b and p (1 \\u2264 a, b \\u2264 n , a \\u2260 b, 1 \\u2264 p \\u2264 100): a and b are the two end points of the street and p is the probability in percent that the Blues Brothers will manage to use this street without being caught. Each street can be used in both directions. You may assume that there is at most one street between two end points. \\n\\n                    The last test case is followed by a zero.\\n                    \\n\\t\\t\\t\\t\\tObs.: The safest path for the sample input is 1 -> 4 -> 3 -> 5\\n\\t\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"106 Miles To Chicago\",\n    \"output\": \"For each test case, calculate the probability of the safest path from intersection 1 (the Palace Hotel) to intersection n (the Honorable Richard J. Daley Plaza in Chicago). You can assume that there is at least one path between intersection 1 and n.\\n\\n                    Print the probability as a percentage with exactly 6 digits after the decimal point. The percentage value is considered correct if it differs by at most 10-6 from the judge output. Adhere to the format shown below and print one line for each test case.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Every year there is the same problem at Halloween: Each neighbour is only willing to give a certain total number of sweets on that day, no matter how many children call on him, so it may happen that a child will get nothing if it is too late. To avoid conflicts, the children have decided they will put all sweets together and then divide them evenly among themselves. From last year's experience of Halloween they know how many sweets they get from each neighbour. Since they care more about justice than about the number of sweets they get, they want to select a subset of the neighbours to visit, so that in sharing every child receives the same number of sweets. They will not be satisfied if they have any sweets left which cannot be divided.\\n\\n                    Your job is to help the children and present a solution.\",\n    \"id\": 1656,\n    \"input\": \"The input contains several test cases.\\n\\n                    The first line of each test case contains two integers c and n (1 \\u2264 c \\u2264 n \\u2264 100000), the number of children and the number of neighbours, respectively. The next line contains n space separated integers a1,...,an (1 \\u2264 ai \\u2264 100000 ), where ai represents the number of sweets the children get if they visit neighbour i.\\n\\n                    The last test case is followed by two zeros.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Halloween Treats\",\n    \"output\": \"For each test case output one line with the indices of the neighbours the children should select (here, index i corresponds to neighbour i who gives a total number of ai sweets). If there is no solution where each child gets at least one sweet, print \\\"no sweets\\\" instead. Note that if there are several solutions where each child gets at least one sweet, you may print any of them.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Some text editors offer a feature to correct words which seem to be written incorrectly. In this problem you are asked to implement a simple Automatic Correction of Misspellings (ACM).\\n\\n                    ACM takes care of the following misspellings of words:\\n\\n                    \\n                    \\tOne letter is missing (e.g., letter is written leter) or too much (e.g., letter is written lettter).\\n                    \\tOne letter is wrong (e.g., letter is written ketter).\\n                    \\tThe order of two adjacent letters is wrong (e.g., letter is written letter).\\n                    \\n\\n                    ACM is based on a dictionary of known words. When a text contains a word which is not in the dictionary, ACM will try to replace it by a similar word of the dictionary. Two words are similar if we can transform one word into the other by doing exactly one of the misspellings listed above. An unknown word is left unchanged if there is no similar word in the dictionary.\",\n    \"id\": 1657,\n    \"input\": \"The first line of the input file will give the number N of words in the dictionary (N \\u2264 10000). The next N lines contain the dictionary words. The following line contains an integer Q \\u2264 1000, the number of query words. The next Q lines contain the query words. You may assume that each word in the input consists of 1 to 25 lower case letters ('a' to 'z').\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Automatic Correction of Misspellings\",\n    \"output\": \"For each query word, print one line with the query word followed by one of the following possibilities:\\n\\n                    \\n                    \\tis correct, if the word occurs in the dictionary.\\n                    \\tis a misspelling of X, where X is a word of the dictionary similar to the query word, and the query word is not in the dictionary. In the case that there are several possibilities, select the word from the dictionary which appeared earlier in the input.\\n                    \\tis unknown, if cases 1 and 2 do not apply.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Consider n points on a unit circle with numbers k = 0, 1, ..., n-1. Initially point k makes an angle of 360 \\u00b7 k / n degrees to the x-axis, measured in counter-clockwise direction. We are going to perform two different kind of operations on that set of points:\\n\\n                    \\n                    \\trotation by 360 / n degrees in clockwise direction\\n                    \\treflection with respect to the x-axis\\n                    \\n\\n                    The following picture shows an example of these operations:\\n\\n                    \\n\\n                    Given a sequence of operations, we are interested in the shortest sequence of operations which gives the same result, i.e., the position of every single point is the same after performing either of those sequences of operations.\\n\\n                    The sequence is given as a string consisting of the characters 'r' and 'm' which represent clockwise rotation and reflection respectively (\\\"to the right\\\" and \\\"mirror\\\"). Multiple consecutive occurrences of the same character are collected into the representation <character><number>, and for convenience this will also be done for single occurrences. So \\\"rrmrrrrrrrrrrrr\\\" will be abbreviated to \\\"r2 m1 r12\\\". The representations of different operations are always separated by a single space.\",\n    \"id\": 1658,\n    \"input\": \"The input file consists of several test cases. Each test case starts with a line containing n (3 \\u2264 n \\u2264 108), the number of points. The second line of each test case consists of an abbreviated sequence of operations as described above. All numbers will be positive and less than 108. There will be no empty line in the input file, and no line will contain more than 100000 characters. The last test case is followed by a line containing 0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Dihedral Groups\",\n    \"output\": \"For each test case print one line containing the abbreviated format of the sequence with the minimum number of operations which results in the same configuration of points as the input sequence. In case of multiple optimal solutions, print any solution.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The phone you bought a long time ago has a built-in memory that keeps track of all the calls you receive. It logs the date (month and day) and the time (hour and minute) of each call along with the caller's number. Only a limited number of calls can be logged (memory was still expensive then).\\n\\n                    You discover that the limit is almost reached and therefore plan to delete some entries from the log. In choosing the entries to delete you have to consider two restrictions:\\n\\n                    \\n                    \\tThere are some (important) entries you want to keep.\\n                    \\tYou want to be able to recover the year (which the phone does not log) of each call you keep. The recovery procedure is described below.\\n                    \\n\\n                    Calculate the minimal number of entries that must be kept to satisfy these requirements.\\n\\n                    Recovery of years\\n\\n                    Given a list of timestamps (consisting of month, day, hour, and minute) of calls, you find out the year of each call by the following procedure:\\n\\n                    \\n                    \\tThe last call in the list occurred in the current year.\\n                    \\tYou compare its timestamp T to the timestamp T' of the previous call. If T' < T, you assume that both calls occurred in the same year. If T' \\u2265 T, you assume that the previous call occured the year before.\\n                    \\tYou iterate backwards through the list and reason as in 2. at each step.\\n                    \\n\\n                    Note that this procedure is not correct in general, but you may assume that it is for the input you get, and you have to ensure that it gives the same result for the shortened log.\\n\\n                    P.S.: Due to an error in the phone's software no calls have been logged on February 29.\",\n    \"id\": 1659,\n    \"input\": \"The input consists of several test cases. Every test case starts with the number of entries N in the log, where 1\\u2264 N \\u22641000. Each of the next N lines contains an entry.\\n\\n                    Every entry has the format \\\"mm:dd:HH:MM number \\u00b1\\\", describing the month \\\"mm\\\", day \\\"dd\\\", hour \\\"HH\\\", minute \\\"MM\\\", and number (having 1-16 digits) of each call, followed by \\\"+\\\" marking a call you definitively want to keep and by \\\"-\\\" marking the other calls. The entries come directly from the log of the phone, that is, they are sorted by time of reception of the corresponding call (the last entry is the most recent).\\n\\n                    You may assume that the recovery procedure described above yields the correct year of each call.\\n\\n                    The last test case is followed by a 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Economic Phone Calls\",\n    \"output\": \"For each test case, output the minimal number of entries that must be kept to satisfy the requirements stated above. In particular, the recovery procedure described above must yield for each remaining entry the same year as derived from the corresponding input.\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Flavius Josephus once was trapped in a cave together with his comrade soldiers surrounded by Romans. All of Josephus' fellow soldiers preferred not to surrender but to commit suicide. So they all formed a circle and agreed on a number K. Every K-th person in the circle would then commit suicide. However, Josephus had different priorities and didn't want to die just yet. According to the legend he managed to find the safe spot in the circle where he would be the last one to commit suicide. He surrendered to the Romans and became a citizen of Rome a few years later.\\n\\n                    It is a lesser known fact that the souls of Josephus and his comrades were all born again in modern times. Obviously Josephus and his reborn fellow soldiers wanted to avoid a similar fiasco in the future. Thus they asked a consulting company to work out a better decision scheme. The company came up with the following scheme:\\n\\n                    \\n                    \\tFor the sake of tradition all soldiers should stand in a circle. This way a number between 0 and N-1 is assigned to each soldier, where N is the number of soldiers.\\n                    \\tAs changing numbers in the old scheme turned out to be horribly inefficient, the number assigned to a soldier will not change throughout the game.\\n                    \\tThe consulting company will provide two numbers A and B which will be used to calculate the number of the next soldier as follows: Let X be the number of the current soldier, then the number of the next soldier is the remainder of A\\u00b7X2< + B mod N.\\n                    \\tWe start with the soldier with number 0 and each soldier calculates the number of the next soldier according to the formula above.\\n                    \\tAs everyone deserves a second chance a soldier will commit suicide once his number is calculated for the second time.\\n                    \\tIn the event that the number of a soldier is calculated for the third time the game will end and all remaining soldiers will surrender.\\n                    \\n\\n                    You are to write a program that given the number of soldiers N and the constants A and B determines the number of survivors.\",\n    \"id\": 1660,\n    \"input\": \"The input file consists of several test cases. Each test case consists of a single line containing the three integers N (2 \\u2264 N \\u2264 109), A and B (0 \\u2264 A, B < N) separated by white space. You may safely assume that the first soldier dies after no more than one million (106) steps. The input is terminated by a single number 0 which should not be processed.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Flavius Josephus Reloaded\",\n    \"output\": \"For each test case output a single line containing the number of soldiers that survive.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"As you may know from the comic \\\"Asterix and the Chieftain's Shield\\\", Gergovia consists of one street, and every inhabitant of the city is a wine salesman. You wonder how this economy works? Simple enough: everyone buys wine from other inhabitants of the city. Every day each inhabitant decides how much wine he wants to buy or sell. Interestingly, demand and supply is always the same, so that each inhabitant gets what he wants.\\n\\n                    There is one problem, however: transporting wine from one house to another results in work. Since all wines are equally good, the inhabitants of Gergovia don't care which persons they are doing trade with, they are only interested in selling or buying a specific amount of wine. They are clever enough to figure out a way of trading so that the overall amount of work needed for transports is minimized.\\n\\n                    In this problem you are asked to reconstruct the trading during one day in Gergovia. For simplicity we will assume that the houses are built along a straight line with equal distance between adjacent houses. Transporting one bottle of wine from one house to an adjacent house results in one unit of work.\",\n    \"id\": 1661,\n    \"input\": \"The input consists of several test cases.\\n\\n                    Each test case starts with the number of inhabitants n (2 \\u2264 n \\u2264 100000). The following line contains n integers ai (-1000 \\u2264 ai \\u2264 1000). If ai \\u2265 0, it means that the inhabitant living in the ith house wants to buy ai bottles of wine, otherwise if ai < 0, he wants to sell -ai bottles of wine. You may assume that the numbers ai sum up to 0.\\n\\n                    The last test case is followed by a line containing 0.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Wine Trading in Gergovia\",\n    \"output\": \"For each test case print the minimum amount of work units needed so that every inhabitant has his demand fulfilled. You may assume that this number fits into a signed 64-bit integer (in C/C++ you can use the data type \\\"long long\\\", in JAVA the data type \\\"long\\\").\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\r\\n                    Local Contest, University of Ulm  Germany\\r\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\r\\n\\r\\n                    Assume you have a square of size n that is divided into n\\u00d7n positions just as a checkerboard. Two positions (x1,y1) and (x2,y2), where 1 \\u2264 x1,y1,x2,y2 \\u2264 n, are called \\\"independent\\\" if they occupy different rows and different columns, that is, x1\\u2260x2 and y1\\u2260y2. More generally, n positions are called independent if they are pairwise independent. It follows that there are n! different ways to choose n independent positions.\\r\\n\\r\\n                    Assume further that a number is written in each position of such an n\\u00d7n square. This square is called \\\"homogeneous\\\" if the sum of the numbers written in n independent positions is the same, no matter how the positions are chosen. Write a program to determine if a given square is homogeneous!\\r\\n\\r\",\n    \"id\": 1662,\n    \"input\": \"\\r\\n                    The input contains several test cases.\\r\\n\\r\\n                    The first line of each test case contains an integer n (1 \\u2264 n \\u2264 1000). Each of the next n lines contains n numbers, separated by exactly one space character. Each number is an integer from the interval [-1000000,1000000].\\r\\n\\r\\n                    The last test case is followed by a zero.\\r\\n\\r\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Homogeneous Squares\",\n    \"output\": \"\\r\\n                    For each test case output whether the specified square is homogeneous or not. Adhere to the format shown in the sample output.\\r\\n\\r\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Some programming contest problems are really tricky: not only do they require a different output format from what you might have expected, but also the sample output does not show the difference. For an example, let us look at permutations.\\n\\n                    A permutation of the integers 1 to n is an ordering of these integers. So the natural way to represent a permutation is to list the integers in this order. With n = 5, a permutation might look like 2, 3, 4, 5, 1.\\n\\n                    However, there is another possibility of representing a permutation: You create a list of numbers where the i-th number is the position of the integer i in the permutation. Let us call this second possibility an inverse permutation. The inverse permutation for the sequence above is 5, 1, 2, 3, 4.\\n\\n                    An ambiguous permutation is a permutation which cannot be distinguished from its inverse permutation. The permutation 1, 4, 3, 2 for example is ambiguous, because its inverse permutation is the same. To get rid of such annoying sample test cases, you have to write a program which detects if a given permutation is ambiguous or not.\",\n    \"id\": 1663,\n    \"input\": \"The input contains several test cases.\\n\\n                    The first line of each test case contains an integer n (1 \\u2264 n \\u2264 100000). Then a permutation of the integers 1 to n follows in the next line. There is exactly one space character between consecutive integers. You can assume that every integer between 1 and n appears exactly once in the permutation.\\n\\n                    The last test case is followed by a zero.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Ambiguous Permutations\",\n    \"output\": \"For each test case output whether the permutation is ambiguous or not. Adhere to the format shown in the sample output.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Strings\",\n    \"description\": \"Bullshit Bingo is a game to make lectures, seminars or meetings less boring. Every player has a card with 5 rows and 5 columns. Each of the 25 cells contains a word (the cell in the middle has always the word BINGO written in it). Whenever a player hears a word which is written on his card, he can mark it. The cell in the middle is already marked when the game starts. If a player has marked all the words in a row, a column or a diagonal, he stands up and shouts BULLSHIT. After this, the game starts over again.\\n\\n                    Sitting in a lecture, you observe that some students in the audience are playing Bullshit Bingo. You wonder what the average number of different words is until BULLSHIT is exclaimed. For the purpose of this problem, a word consists of letters of the English alphabet (a to z or A to Z). Words are separated by characters other than letters (for example spaces, digits or punctuation). Do the comparison of words case-insensitively, i.e., Bingo is the same word as bingo. When counting the number of different words, ignore the word BULLSHIT (indicating the end of the game), and consider only the words of the current game, i.e., if a word has already occurred in a previous game, you may still count it in the current game. If the last game is unfinished, ignore the words of that game.\",\n    \"id\": 1664,\n    \"input\": \"The input file consists of the text of the lecture, with BULLSHIT occurring occasionally. The first game starts with the first word in the input. Each occurrence of BULLSHIT indicates the end of one game.\\n\\n                    You may assume, that\\n\\n                    \\n                    \\tthe word BULLSHIT occurs only in uppercase letters\\n                    \\tevery word has at most 25 characters, and each line has at most 100 characters\\n                    \\tthere are at most 500 different words before a game ends\\n                    \\tthe players follow the rules, so there is no need to check if a game is valid or not\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Bullshit Bingo\",\n    \"output\": \"The output consists of one number: the average number of different words needed to win a game. Write the number as a reduced fraction in the format shown below. Reduced fraction means that there should be no integer greater than 1 which divides both the numerator and denominator. For example if there were 10 games, and the number of different words in each game summed up to 55, print 11 / 2.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"After building his huge villa, Mr. Rich cannot help but notice that the interior walls look rather blank. To change that, he starts to hang paintings from his wonderful collection. But soon he realizes that it becomes quite difficult to find a place on the wall where a painting can be placed without overlapping other paintings. Now he needs a program which would tell him, given the already placed paintings, where to place the next painting without moving any other paintings (or indicating that this is impossible). Paintings have a rectangular shape and are to be placed parallel to the side of the wall. If you do not mind a nice reward from Mr. Rich, go on and solve the problem.\",\n    \"id\": 1665,\n    \"input\": \"The first line of the input file contains a number representing the number of test cases to follow. Each test case starts with a line containing three numbers n, w and h. n is the number of paintings already hanging on the wall, w is the width of the wall and h is the height of the wall. The next n lines contain 4 integers x1, y1, x2, y2 each (0 \\u2264 x1 < x2 \\u2264 w, 0 \\u2264 y1 < y2 \\u2264 h); the x-coordinates give the distance to the left end of the wall, the y-coordinates give the distance to the bottom of the wall. (x1, y1) is the position of the lower left corner of a painting, (x2, y2) is the position of the upper right corner. The last line of each test case contains the dimensions of the next painting to be placed, first its width w', then its height h' (1 \\u2264 w' \\u2264 w, 1 \\u2264 h' \\u2264 h). You are not allowed to rotate the painting. You can assume that 0 \\u2264 n \\u2264 200 and 1 \\u2264 w, h \\u2264 1000000. Moreover, all paintings already hanging do not overlap.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Decorate the Wall\",\n    \"output\": \"Produce one line of output for each test case. Write \\\"Fail!\\\" if there is no place left on the wall where the painting could be placed without overlapping other paintings. Otherwise, write the coordinates where the lower left corner of the painting should be placed. In case there is more than one solution, select the solution with a minimum y-coordinate, and break ties using the minimum x-coordinate.\\n\\n\\n                    The following image illustrates the second sample test case:\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Surely you know someone who thinks he is very clever. You decide to let him down with the following problem:\\n\\n                    \\n                    \\t\\\"Can you tell me what the syntax for a set is?\\\", you ask him.\\n                    \\t\\\"Sure!\\\", he replies, \\\"a set encloses a possibly empty list of elements within two curly braces. Each element is either another set or a letter of the given alphabet. Elements in a list are separated by a comma.\\\"\\n                    \\t\\\"So if I give you a word, can you tell me if it is a syntactically correct representation of a set?\\\"\\n                    \\t\\\"Of course, any fool can do it!\\\" is his answer.\\n                    \\n\\n                    Now you got him! You present him with the following grammar, defining formally the syntax for a set (which was described informally by him):\\n\\n                    Set ::= \\\"{\\\" Elementlist \\\"}\\\"\\n                    Elementlist ::= <empty> | List\\n                    List ::= Element | Element \\\",\\\" List\\n                    Element ::= Atom | Set\\n                    Atom ::= \\\"{\\\" | \\\"}\\\" | \\\",\\\"\\n\\n                    <empty> stands for the empty word, i.e., the list in a set can be empty. Soon he realizes that this task is much harder than he has thought, since the alphabet consists of the characters which are also used for the syntax of the set. So he claims that it is not possible to decide efficiently if a word consisting of \\\"{\\\", \\\"}\\\" and \\\",\\\" is a syntactically correct representation of a set or not. To disprove him, you need to write an efficient program that will decide this problem.\",\n    \"id\": 1666,\n    \"input\": \"The first line of the input file contains a number representing the number of lines to follow.\\n\\n                    Each line consists of a word, for which your program has to decide if it is a syntactically correct representation of a set. You may assume that each word consists of between 1 and 200 characters from the set { \\\"{\\\", \\\"}\\\", \\\",\\\" }.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Any Fool Can Do It\",\n    \"output\": \"Output for each test case whether the word is a set or not. Adhere to the format shown in the sample output.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Ralf Engels  Germany\",\n    \"category\": \"Strings\",\n    \"description\": \"If you ever tried to read a html document on a Macintosh, you know how hard it is if no Netscape is installed. Now, who can forget to install a HTML browser? This is very easy because most of the times you don't need one on a MAC because there is a Acrobate Reader which is native to MAC. But if you ever need one, what do you do? Your task is to write a small html-browser. It should only display the content of the input-file and knows only the html commands (tags) which is a linebreak and\\n\\n                    which is a horizontal ruler. Then you should treat all tabulators, spaces and newlines as one space and display the resulting text with no more than 80 characters on a line.\",\n    \"id\": 1667,\n    \"input\": \"The input consists of a text you should display. This text consists of words and HTML tags separated by one or more spaces, tabulators or newlines.A word is a sequence of letters, numbers and punctuation. For example, \\\"abc,123\\\" is one word, but \\\"abc, 123\\\" are two words, namely \\\"abc,\\\" and \\\"123\\\". A word is always shorter than 81 characters and does not contain any '<' or '>'. All HTML tags are either <br> or <hr>.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"HTML\",\n    \"output\": \"You should display the the resulting text using this rules:\\n\\n                    If you read a word in the input and the resulting line does not get longer than 80 chars, print it, else print it on a new line.\\n\\n                    If you read a <br> in the input, start a new line.\\n                    If you read a <hr> in the input, start a new line unless you already are at the beginning of a line, display 80 characters of '-' and start a new line (again).\\n\\n                    The last line is ended by a newline character.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"Preparing a problem for a programming contest takes a lot of time. Not only do you have to write the problem description and write a solution, but you also have to create difficult input files. In this problem, you get the chance to help the problem setter to create some input for a certain problem.\\n\\n                    For this purpose, let us select the problem which was not solved during last year's local contest. The problem was about finding the optimal binary search tree, given the probabilities that certain nodes are accessed. Your job will be: given the desired optimal binary search tree, find some access probabilities for which this binary search tree is the unique optimal binary search tree. Don't worry if you have not read last year's problem, all required definitions are provided in the following.\\n\\n                    Let us define a binary search tree inductively as follows:\\n\\n                    \\n                    \\tThe empty tree which has no node at all is a binary search tree;\\n                    \\tEach non-empty binary search tree has a root, which is a node labelled with an integer, and two binary search trees as left and right subtree of the root;\\n                    \\tA left subtree contains no node with a label \\u2265 than the label of the root;\\n                    \\tA right subtree contains no node with a label \\u2264 than the label of the root;\\n                    \\n\\n                    Given such a binary search tree, the following search procedure can be used to locate a node in the tree:\\n\\n                    Start with the root node. Compare the label of the current node with the desired label. If it is the same, you have found the right node. Otherwise, if the desired label is smaller, search in the left subtree, otherwise search in the right subtree.\\n\\n                    The access cost to locate a node is the number of nodes you have to visit until you find the right node. An optimal binary search tree is a binary search tree with the minimum expected access cost.\",\n    \"id\": 1668,\n    \"input\": \"The input file contains several test cases. Each test case starts with an integer n (1 \\u2264 n \\u2264 50), the number of nodes in the optimal binary search tree. For simplicity, the labels of the nodes will be integers from 1 to n. The following n lines describe the structure of the tree. The i-th line contains the labels of the roots of the left and right subtree of the node with label i (or -1 for an empty subtree). You can assume that the input always defines a valid binary search tree.\\n\\n                    The last test case is followed by a zero.\\n\\n                    Note that the first test case in the sample input describes a tree looking like\\n\\n                    \\u00a0 \\u00a02\\n                    \\u00a0/ \\u00a0\\\\\\n                    1 \\u00a0 \\u00a03\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Help The Problem Setter\",\n    \"output\": \"For each test case, write one line containing the access frequency for each node in increasing order of the labels of the nodes. To avoid problems with floating point precision, the frequencies should be written as integers, meaning the access probability for a node will be the frequency divided by the sum of all frequencies. Make sure that you do not write any integer bigger than 263 - 1 (the maximum value fitting in the C/C++ data type long long or the Java data type long). Otherwise, you may produce any solution ensuring that there is exactly one optimal binary search tree: the binary search tree given in the input.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"Operating systems are large software artefacts composed of many packages, usually distributed on several media, e.g., discs. You probably remember the time when your favorite operating system was delivered on 21 floppy discs, or, a few years later, on 6 CDs. Nowadays, it will be shipped on several DVDs, each containing tens of thousands of packages.\\n\\n                    The installation of certain packages may require that other packages have been installed previously. Therefore, if the packages are distributed on the media in an unsuitable way, the installation of the complete system requires you to perform many media changes, provided that there is only one reading device available, e.g., one DVD-ROM drive. Since you have to start the installation somehow, there will of course be one or more packages that can be installed independently of all other packages.\\n\\n                    Given a distribution of packages on media and a list of dependences between packages, you have to calculate the minimal number of media changes required to install all packages. For your convenience, you may assume that the operating system comes on exactly 2 DVDs.\",\n    \"id\": 1669,\n    \"input\": \"The input contains several test cases. Every test case starts with three integers N1, N2, D. You may assume that 1 \\u2264 N1,N2 \\u2264 50000 and 0 \\u2264 D \\u2264 100000. The first DVD contains N1 packages, identified by the numbers 1, 2, ..., N1. The second DVD contains N2 packages, identified by the numbers N1+1, N1+2, ..., N1+N2. Then follow Ddependence specifications, each consisting of two integers xi, yi. You may assume that 1 \\u2264 xi,yi \\u2264 N1+N2 for 1 \\u2264 i \\u2264 D. The dependence specification means that the installation of package xi requires the previous installation of package yi. You may assume that there are no circular dependences. The last test case is followed by three zeros.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"All Discs Considered\",\n    \"output\": \"For each test case output on a line the minimal number of DVD changes required to install all packages. By convention, the DVD drive is empty before the installation and the initial insertion of a disc counts as one change. Likewise, the final removal of a disc counts as one change, leaving the DVD drive empty after the installation.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Propositions are logical formulas consisting of proposition symbols and connecting operators. They are recursively defined by the following rules:\\n\\n                    \\n                    \\tAll proposition symbols (in this problem, lower-case alphabetic characters, e.g., a and z) are propositions.\\n                    \\tIf P is a proposition, (!P) is a proposition, and P is a direct subformula of it.\\n                    \\tIf P and Q are propositions, (P&Q), (P|Q), (P-->Q), and (P<->Q) are propositions, and P and Q are direct subformulas of them.\\n                    \\tNothing else is a proposition.\\n                    \\n\\n                    The operations !, &, |, -->, and <-> denote logical negation, conjunction, disjunction, implication, and equivalence, respectively. A proposition P is a subformula of a proposition R if P=R or P is a direct subformula of a proposition Q and Q is a subformula of R.\\n\\n                    Let P be a proposition and assign boolean values (i.e., 0 or 1) to all proposition symbols that occur in P. This induces a boolean value to all subformulas of P according to the standard semantics of the logical operators:\\n                    \\n                    \\n                        \\n                            Negation\\u00a0 \\n                            Conjunction\\u00a0\\n                            Disjunction\\u00a0 \\n                            Implication\\u00a0 \\n                            Equivalence \\n                        \\n                    \\n\\n\\n                    \\n                    \\n                    !0=1\\n                    0&0=0\\n                    0|0=0\\n                    0-->0=1\\n                    0<->0=1\\n                    \\n                    !1=0\\n                    0&1=0\\n                    0|1=1\\n                    0-->1=1\\n                    0<->1=0\\n                    \\n                    \\n                    1&0=0\\n                    1|0=1\\n                    1-->0=0\\n                    1<->0=0\\n                    \\n                    \\n                    1&1=1\\n                    1|1=1\\n                    1-->1=1\\n                    1<->1=1\\n                    \\n                    \\n                    \\n\\n\\n                    This way, a value for P can be calculated. This value depends on the choice of the assignment of boolean values to the proposition symbols. If P contains n different proposition symbols, there are 2n different assignments. To evaluate all possible assignments we may use truth tables.\\n\\n                    A truth table contains one line per assignment (i.e., 2n lines in total). Every line contains the values of all subformulas under the chosen assignment. The value of a subformula is aligned with the proposition symbol, if the subformula is a proposition symbol, and with the center of the operator otherwise.\",\n    \"id\": 1670,\n    \"input\": \"The input contains several test cases, each on a separate line. Every test case denotes a proposition and may contain arbitrary amounts of spaces in between. The input file terminates immediately after the newline symbol following the last test case.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Boolean Logic\",\n    \"output\": \"For each test case generate a truth table for the denoted proposition. Start the truth table by repeating the input line. Evaluate the proposition (and its subformulas) for all assignments to its variables, and output one line for each assignment. The line must have the same length as the corresponding input line and must consist only of spaces and the characters 0 and 1. Output an empty line after each test case.\\n\\nLet s1,...,sn be the proposition symbols in the denoted proposition sorted in alphabetic order. Then, all assignments of 0 to s1 must precede the assignments of 1 to s1. Within each of these blocks of assignments, all assignments of 0 to s2 must precede the assignments of 1 to s2, and so on.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"KEY Inc., the leading company in security hardware, has developed a new kind of safe. To unlock it, you don't need a key but you are required to enter the correct n-digit code on a keypad (as if this were something new!). There are several models available, from toy safes for children (with a 2-digit code) to the military version (with a 6-digit code).\\n\\n                    The safe will open as soon as the last digit of the correct code is entered. There is no \\\"enter\\\" key. When you enter more than n digits, only the last n digits are significant. For example (in the 4-digit version), if the correct code is 4567, and you plan to enter the digit sequence 1234567890, the door will open as soon as you press the 7 key.\\n\\n                    The software to create this effect is rather simple. In the n-digit version the safe is always in one of 10n-1 internal states. The current state of the safe simply represents the last n-1 digits that have been entered. One of these states (in the example above, state 456) is marked as the unlocked state. If the safe is in the unlocked state and then the right key (in the example above, 7) is pressed, the door opens. Otherwise the safe shifts to the corresponding new state. For example, if the safe is in state 456 and then you press 8, the safe goes into state 568.\\n\\n                    A trivial strategy to open the safe is to enter all possible codes one after the other. In the worst case, however, this will require n * 10n keystrokes. By choosing a good digit sequence it is possible to open the safe in at most 10n + n - 1 keystrokes. All you have to do is to find a digit sequence that contains all n-digit sequences exactly once. KEY Inc. claims that for the military version (n=6) the fastest computers available today would need billions of years to find such a sequence - but apparently they don't know what some programmers are capable of...\",\n    \"id\": 1671,\n    \"input\": \"The input contains several test cases. Every test case is specified by an integer n. You may assume that 1 \\u2264 n \\u2264 6. The last test case is followed by a zero.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Code\",\n    \"output\": \"For each test case specified by n output a line containing a sequence of 10n + n - 1 digits that contains each n-digit sequence exactly once.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Flavius Josephus and 40 fellow rebels were trapped by the Romans. His companions preferred suicide to surrender, so they decided to form a circle and to kill every third person and to proceed around the circle until no one was left. Josephus was not excited by the idea of killing himself, so he calculated the position to be the last man standing (and then he did not commit suicide since nobody could watch).\\n\\nWe will consider a variant of this \\\"game\\\" where every second person leaves. And of course there will be more than 41 persons, for we now have computers. You have to calculate the safe position. Be careful because we might apply your program to calculate the winner of this contest!\",\n    \"id\": 1672,\n    \"input\": \"The input contains several test cases. Each specifies a number N, denoting the number of persons participating in the game. To make things more difficult, it always has the format XYeZ with the following semantics: when N\\u00a0is written down in decimal notation, its first digit is X, its second digit is Y, and then follow Z\\u00a0zeros. Whereas 0 \\u2264 X, Y\\u2264 9, the number of zeros is 0 \\u2264 Z \\u2264 6. You may assume that N > 0. The last test case is followed by the string 00e0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"In Danger\",\n    \"output\": \"For each test case generate a line containing the position of the person who survives. Assume that the participants have serial numbers from 1 to N and that the counting starts with person 1, i.e., the first person leaving is the one with number 2. For example, if there are 5 persons in the circle, counting proceeds as 2, 4, 1, 5 and person 3 is staying alive.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Your task is to write a program that performs a simple form of run-length encoding, as described by the rules below.\\n\\nAny sequence of between 2 to 9 identical characters is encoded by two characters. The first character is the length of the sequence, represented by one of the characters 2 through 9. The second character is the value of the repeated character. A sequence of more than 9 identical characters is dealt with by first encoding 9 characters, then the remaining ones.\\n\\nAny sequence of characters that does not contain consecutive repetitions of any characters is represented by a '1' character followed by the sequence of characters, terminated with another '1'. If a '1' appears as part of the sequence, it is escaped with a '1', thus two '1' characters are output.\",\n    \"id\": 1673,\n    \"input\": \"The input consists of letters (both upper- and lower-case), digits, spaces, and punctuation. Every line is terminated with a newline character and no other characters appear in the input.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Run Length Encoding\",\n    \"output\": \"Each line in the input is encoded separately as described above. The newline at the end of each line is not encoded, but is passed directly to the output.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"To play the \\\"fraction game\\\" corresponding to a given list f1, f2, ..., fk of fractions and starting integer N, you repeatedly multiply the integer you have at any stage (initially N) by the earliest fi in the list for which the answer is integral. Whenever there is no such fi, the game stops.\\n\\n                    Formally, we define a sequence by S0=N, and Sj+1=fiSj, if for 1 \\u2264 I \\u2264 k, the number fiSj is an integer but the numbers f1Sj, ..., fi-1Sj are not.\\n\\n                    For example, if we have the list of eight fractions f1=170/39, f2=19/13, f3=13/17, f4=69/95, f5=19/23, f6=1/19, f7=13/7, f8=1/3, and start with N=21, we produce the (finite) sequence (21,39,170,130,190,138,114,6,2). In general, the sequence may be infinite.\\n\\n                    Given a fraction list and a starting integer calculate a part of the defined sequence. Actually, we are interested only in the powers of 2 that appear in the sequence.\",\n    \"id\": 1674,\n    \"input\": \"The input contains several test cases. Every test case starts with three integers m, N, k. You may assume that 1 \\u2264 m \\u2264 40, 1 \\u2264 N \\u2264 1000, and 1 \\u2264 k \\u2264 100. Then follow k fractions f1, \\u2026, fk. For each fraction, first its numerator is given, followed by its denominator. You may assume that both are positive integers less than 1000 and their greatest common divisor is 1. The last test case is followed by a zero.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Fractran\",\n    \"output\": \"For each test case output on a line m numbers e1, ..., em, separated by one space character, such that 2e1, ..., 2ek are the first m numbers in the defined sequence that are powers of 2. You may assume that there are at least m powers of 2 among the first 7654321 elements of the sequence.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"Read the statement of problem G for the definitions concerning trees. In the following we define the basic terminology of heaps. A heap is a tree whose internal nodes have each assigned a  priority  (a number) such that the priority of each internal node is less than the priority of its parent. As a consequence, the root has the greatest priority in the tree, which is one of the reasons why heaps can be used for the implementation of priority queues and for sorting.\\n\\n                    A binary tree in which each internal node has both a label and a priority, and which is both a binary search tree with respect to the labels and a heap with respect to the priorities, is called a treap. Your task is, given a set of label-priority-pairs, with unique labels and unique priorities, to construct a treap containing this data.\",\n    \"id\": 1675,\n    \"input\": \"The input contains several test cases. Every test case starts with an integer n. You may assume that 1\\u2264 n \\u2264 50000. Then follow n pairs of strings and numbers l1/p1,...,ln/pn denoting the label and priority of each node. The strings are non-empty and composed of lower-case letters, and the numbers are non-negative integers. The last test case is followed by a zero.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Binary Search Heap Construction\",\n    \"output\": \"For each test case output on a single line a treap that contains the specified nodes. A treap is printed as (<left sub-treap > <label >/<priority><right sub-treap>). The sub-treaps are printed recursively, and omitted if leafs.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"After the 1997/1998 Southwestern European Regional Contest (which was held in Ulm) a large contest party took place. The organization team invented a special mode of choosing those participants that were to assist with washing the dirty dishes. The contestants would line up in a queue, one behind the other. Each contestant got a number starting with 2 for the first one, 3 for the second one, 4 for the third one, and so on, consecutively.\\n\\n                    The first contestant in the queue was asked for his number (which was 2). He was freed from the washing up and could party on, but every second contestant behind him had to go to the kitchen (those with numbers 4, 6, 8, etc). Then the next contestant in the remaining queue had to tell his number. He answered 3 and was freed from assisting, but every third contestant behind him was to help (those with numbers 9, 15, 21, etc). The next in the remaining queue had number 5 and was free, but every fifth contestant behind him was selected (those with numbers 19, 35, 49, etc). The next had number 7 and was free, but every seventh behind him had to assist, and so on.\\n\\n                    Let us call the number of a contestant who does not need to assist with washing up a lucky number. Continuing the selection scheme, the lucky numbers are the ordered sequence 2, 3, 5, 7, 11, 13, 17, etc. Find out the lucky numbers to be prepared for the next contest party.\",\n    \"id\": 1676,\n    \"input\": \"The input contains several test cases. Each test case consists of an integer n. You may assume that 0 \\u2264 n \\u2264 3000. A zero follows the input for the last test case.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Assistance Required\",\n    \"output\": \"For each test case specified by n output on a single line the n-th lucky number.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"We will use the following standard definitions from graph theory. Let V be a nonempty and finite set, its elements being called vertices (or nodes). Let E be a subset of the Cartesian product V\\u00d7V, its elements being called edges. Then G = (V, E) is called a directed graph.\\n\\n                    Let N be a positive integer, and let P = (e1,...,en) be a sequence of length N of edges, ei \\u2208 E such that ei = (vi ,vi+1) for a sequence of vertices (v1,...,vn+1). Then P is called a path from vertex v1 to vertex vn+1 in G and we say that vn+1 is reachable from v1, writing (v1\\u2192vn+1).\\n\\n                    Here are some new definitions. A node V in a graph G = (V, E) is called a sink, if for every node W in G that is reachable from v, v is also reachable from W. The bottom of a graph is the subset of all nodes that are sinks, i.e., bottom(G) = {v \\u2208 V|\\u2200w \\u2208 V:(v\\u2192W) \\u21d2 (W\\u2192v)}. You have to calculate the bottom of certain graphs.\\n\\n\",\n    \"id\": 1677,\n    \"input\": \"The input contains several test cases, each of which corresponds to a directed graph G. Each test case starts with an integer number v, denoting the number of vertices of G = (V, E), where the vertices will be identified by the integer numbers in the set V\\u00a0= {1,...,v}. You may assume that v(1 \\u2264 v \\u2264 5000). That is followed by a non-negative integer e and, thereafter, e pairs of vertex identifiers v1W1,...,veWe with the meaning that (vi,Wi) \\u2208 E. There are no edges other than specified by these pairs. The last test case is followed by a zero.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Bottom of a Graph\",\n    \"output\": \"For each test case output the bottom of the specified graph on a single line. To this end, print the numbers of all nodes that are sinks in sorted order separated by a single space character. If the bottom is empty, print an empty line.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\r\\n                    Local Contest, University of Ulm  Germany\\r\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n                    A technique used in early programming contest strategies involved partitioning the available intellectual capacity of a team into a number of members with each member having a fixed amount of intelligence, different members potentially having different amounts. The sum of the brightness of all members equals the total intellectual capacity of the team.\\r\\n\\r\\n                    Given a set of problems, it was the task of the team to assign the problems to different team members, so that they could be solved concurrently. This was made difficult due to the fact that the solution time of a problem might depend on the amount of intelligence available to it. Every problem has a minimum intelligence requirement, but if assigned to a brighter member its solution time might increase or decrease.\\r\\n\\r\\n                    In this task, you have to determine optimal assignments of problems to team members. Your program is given the intellectual capacities of the team members available for the solution of problems, and for each problem a description of how its solution time depends on the amount of intelligence available to it. Your program has to find the solution schedule of the problems that minimizes the average solution time for the problems. A solution schedule is an assignment of problems to team members and times, such that no two problems use the same member at the same time, and no problem is assigned to a team member with less brightness than its minimum requirement. The solution time of the problem is the difference between the time when the problem was submitted to be solved (which is the start of the contest at time zero for all problems in this task), and the time that the problem is solved.\\r\\n\\r\",\n    \"id\": 1678,\n    \"input\": \"\\r\\n                    The input data will contain multiple test cases. Each test case begins with a line containing a pair of integers m and n. The number m specifies the number of team members (1 \\u2264 m \\u2264 3), and n specifies the number of problems to be solved (1 \\u2264 n \\u2264 10).\\r\\n\\r\\n                    The next line contains m positive integers giving the intelligence amounts of the m team members. Following this are n lines, describing the time-brightness tradeoffs for each of the n problems. Each line starts with a positive integer k (k \\u2264 10), followed by k pairs of positive integers s1,t1,s2,t2,...,sk,tk that satisfy si < si+1 for 1 \\u2264 i < k. The minimum intelligence requirement of the problem is s1, i.e. it cannot be solved by a member with less intellectual capacity than this number. If the problem is solved by a team member with brightness s, where si \\u2264 s < si+1 for some i, then its solution time will be ti. Finally, if the problem is solved by a team member with intellectual capacity sk or more, then its execution time will be tk.\\r\\n\\r\\n                    A pair of zeroes will follow the input for the last test case.\\r\\n\\r\\n                    You may assume that each problem will be solved in exactly the time specified for the given brightness, regardless of the number of other problems being solved by other team members at the same time. No problem will have an intelligence requirement larger than that of the brightest team member.\\r\\n\\r\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Fixed Partition Contest Management\",\n    \"output\": \"\\r\\n                    For each test case, first display the case number (starting with 1 and increasing sequentially). Then print the minimum average solution time for the set of problems with two digits to the right of the decimal point. Follow this by the description of a solution schedule that achieves this average solution time. Display one line for each problem, in the order they were given in the input, that identifies the problem number, the member used to solve it (numbered in the order given in the input), the time when the member started to solve the problem, and the time when the problem was solved. Follow the format shown in the sample output, and print a blank line after each test case.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"A good drink is always served on ice. That said, the amount of ice is what makes the difference. If it is too much, the drink will be well cooled, however, this is a bit of fraud as there could be less ice (and more Vodka for example). On the other hand, if there is too little ice the drink is warm which is unacceptable. You are to help the bartender, of course neither with mixing nor drinking, but with calculating the expected outcome of such mixtures.\\n\\nTo make things easier, we assume that pure water is mixed with ice in a closed system, i.e., there is no problem with the outside temperature or the warming of the bottle, etc. Therefore, after a some time has passed, the system may be regarded as balanced (there is no further change in temperature and no more melting or freezing). Your job is to calculate the final temperature of this balanced system and the amount of ice and water in this equilibrium state.\\n\\nAs you know from physics, it takes 4.19 Joule to heat one gram of water one Kelvin, whereas it takes 2.09 Joule if it is ice. We define the capacities cw = 4.19 J/(g*K) and ci = 2.09 J/(g*K). Melting one gram of ice takes 335 Joule, where the temperature remains constant at zero. We define the constant em = 335 J/g. The total thermal energy of the ice and the water before the experiment is equal to the thermal energy of the final mixture.\\n\\nThe figure below shows the energy of one gram of ice, ice-water-mixture, or water, where the temperature is measured relative to -30 degrees Celsius. The jump at 0 degrees represents the melting of ice to water. The amount of energy gained is proportional to the amount of ice already melted.\",\n    \"id\": 1679,\n    \"input\": \"The input contains several test cases. Each test case consists of four real numbers mw, mi, tw, ti. The mass of water mw and the mass of ice mi are both non-negative, given in grams, and mw + mi > 0. The water temperature tw and the ice temperature ti follow, both given in degrees Celsius, and you may assume that -30 <  ti \\u2264 0 \\u2264 tw < 100. The last test case is followed by four zeroes.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Drink, on Ice\",\n    \"output\": \"For each test case output the amount of ice and water in grams and the final temperature of the mixture in degrees Celsius. All numbers must be rounded to one digit. Adhere to the sample output for the exact format to use.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"For products that are wrapped in small packings it is necessary that the sheet of paper containing the directions for use is folded until its size becomes small enough. We assume that a sheet of paper is rectangular and only folded along lines parallel to its initially shorter edge. The act of folding along such a line, however, can be performed in two directions: either the surface on the top of the sheet is brought together, or the surface on its bottom. In both cases the two parts of the rectangle that are separated by the folding line are laid together neatly and we ignore any differences in thickness of the resulting folded sheet.\\n\\nAfter several such folding steps have been performed we may unfold the sheet again and take a look at its longer edge holding the sheet so that it appears as a one-dimensional curve, actually a concatenation of line segments. If we move along this curve in a fixed direction we can classify every place where the sheet was folded as either type A meaning a clockwise turn or type V meaning a counter-clockwise turn. Given such a sequence of classifications, produce a drawing of the longer edge of the sheet assuming 90 degree turns at equidistant places.\",\n    \"id\": 1680,\n    \"input\": \"The input contains several test cases, each on a separate line. Each line contains a nonempty string of characters A and V describing the longer edge of the sheet. You may assume that the length of the string is less than 200. The input file terminates immediately after the last test case.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Edge\",\n    \"output\": \"For each test case generate a PostScript drawing of the edge with commands placed on separate lines. Start every drawing at the coordinates (300,420) with the command \\\"300 420 moveto\\\". The first turn occurs at (310,420) using the command \\\"310 420 lineto\\\". Continue with clockwise or counter-clockwise turns according to the input string, using a sequence of \\\"x y lineto\\\" commands with the appropriate coordinates. The turning points are separated at a distance of 10 units. Do not forget the end point of the edge and finish each test case by the commands stroke and showpage.\\n\\nYou may display such drawings with the gv PostScript interpreter, optionally after a conversion using the ps2ps utility.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Read the statement of problem 1680 (Edge) to understand how to fold a sheet of paper and how to interpret the input. We define a \\\"stripe\\\" to be a maximally large part of the sheet that has no folding line going through. Since the turns occur at equidistant places, all stripes are congruent.\\nIn this problem you are given the description of the result of performing several folding steps as in problem E: Edge, i.e., in the unfolded state. Additionally, you know that the length of the sheet in its folded state is exactly the length of 1 stripe (again, we ignore thickness).\\nFind the minimum number of folding steps necessary to generate the described sheet from an initially flat sheet of paper. Note that performing a folding step may create more than one turn in the result because parts of the sheet already overlay due to previous folding steps. When a step is carried out, however, all overlaying parts of the sheet are affected, i.e., it is not allowed to fold, say, only the top three layers.\\nFinally, note that every result can be obtained by iterating through the turns in a fixed direction and performing a folding step at each turn, thereby accumulating a 1 stripe long stack of all stripes. If n is the number of turns in the input description, this procedure in fact requires n folding steps, which is not necessarily minimal as can be observed in the sample output.\",\n    \"id\": 1681,\n    \"input\": \"The input contains several test cases, each on a separate line. Each line contains a nonempty string of characters A and V describing the longer edge of the sheet. You may assume that the length of the string is less than 200. The input file terminates immediately after the last test case.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Fold\",\n    \"output\": \"For each test case print on a line the minimum number of folding steps required to produce the described sheet of paper.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\r\\nThe connections between mathematics and biology are complicated. Most of the time they do not run along nice-looking links that merrily join at first glance, but they are abstract and not always easily established.\\r\\n\\r\\nLake Vostok - about 14000 square kilometers large, up to 650 meters deep, and covered by 3743 meters of ice - was recently discovered on the Antarctic continent. The lake remained under conditions of high pressure and no sunlight for several millions of years. It is believed that ordinary life has evolved to a more efficient form using a genetic code composed of only three bases (the current state of ignorance proclaims the four bases adenine, cytosine, guanine, and thymine). Until reasonable names are found, the three bases will be abbreviated as N, O, and P.\\r\\n\\r\\nMoreover, the genome is single-stranded and directed, i.e., we may see it as a sequence over the alphabet {N,O,P}. Unless risking instability, it is necessary that the genome is a Thue-sequence, due to the Norwegian mathematician A. Thue (1863-1922). Define a subsegment of a sequence to be a connected subsequence, and call two subsegments adjacent if one follows immediately after the other in the sequence. A Thue-sequence is a sequence where no adjacent subsegments are equal. For example, NOPNO is and NOPNPNO is not a Thue-sequence, so that the first may be a genome whereas the second may not.\\r\\n\\r\\nTo be able to simulate experiments with the new genomes, you are asked to generate genomes of certain lengths.\\r\",\n    \"id\": 1682,\n    \"input\": \"The input contains several test cases. Each test case consists of an integer n. You may assume that 1 \\u2264 n \\u2264 5000. The last test case is followed by a zero.\\r\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Genetic Code\",\n    \"output\": \"For each test case specified by n output on a single line any genome of length n. If no genome of length n exists, output a blank line instead.\\r\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Local Contest, University of Ulm  Germany\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"A histogram is a polygon composed of a sequence of rectangles aligned at a common base line. The rectangles have equal widths but may have different heights. For example, the figure on the left shows the histogram that consists of rectangles with the heights 2, 1, 4, 5, 1, 3, 3, measured in units where 1 is the width of the rectangles: \\n\\n\\n\\nUsually, histograms are used to represent discrete distributions, e.g., the frequencies of characters in texts. Note that the order of the rectangles, i.e., their heights, is important. Calculate the area of the largest rectangle in a histogram that is aligned at the common base line, too. The figure on the right shows the largest aligned rectangle for the depicted histogram.\",\n    \"id\": 1683,\n    \"input\": \"The input contains several test cases. Each test case describes a histogram and starts with an integer n, denoting the number of rectangles it is composed of. You may assume that 1 \\u2264 n \\u2264 100000. Then follow n integers h1, ..., hn, where 0 \\u2264 hi \\u2264 1000000000. These numbers denote the heights of the rectangles of the histogram in left-to-right order. The width of each rectangle is 1. A zero follows the input for the last test case.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Largest Rectangle in a Histogram\",\n    \"output\": \"For each test case output on a single line the area of the largest rectangle in the specified histogram. Remember that this rectangle must be aligned at the common base line.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Lu\\u00eds Dorelli, ICMC - USP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"It's time of the running marathons in the Land of Ooo again. Princess Bubblegum has got a map of the Candy Kingdom and now she's got to prepare the streets to hold the competitions.\\n\\nHer task is the following: she needs to separate the streets of the kingdom in disjoint marathon circuits, i.e., serveral disjoint paths that begin and end in the same corner. Each street must be used in exactly one circuit, or else a great rage will fall upon the kingdom. She doesn't mind the number of circuits generated, as long as there is at least one, since the marathon can be adjusted to fit the resources available.\\n\\nBubblegum believes that if any task is possible, she can do it. The question therefore is: can the streets of the kingdom be divided into disjoint circuits?\",\n    \"id\": 1684,\n    \"input\": \"The first line will contain a number T (1 \\u2264 T \\u2264 100), indicating how many test cases will follow.\\n\\nEach test begins with a number, N (0 \\u2264 N \\u2264 104), indicating the number of crossings in the kingdom and M (0 \\u2264 M \\u2264 105), the number of streets.The next M lines contains two integers each, a and b (0 \\u2264 a,b \\u2264 N-1), indicating that there is a street between crossings a and b. There may be streets connecting a crossing to itself, and there might be more than one street connecting two crossings.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Candy Marathon\",\n    \"output\": \"Print Yes if the task is possible and No otherwise.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Jonathan Alberth Quispe Fuentes, Universidad Nacional del Altiplano  Peru\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Daniel is a civil engineer, who has been assigned to find possible locations to build a square, however at the request of local people to build the square no tree should be cut.\\n                    Daniel has satellite images of the place, he needs to maximize the area of the square and report their possible locations. Could you help?\",\n    \"id\": 1685,\n    \"input\": \"The first line cantains the number of test case T (T <= 40). \\n                    The second line contains two integers n and m (1<= n, m <= 1000), the height and width of the image.\\n\\n                    The following n lines contain the information of the image, where \\\"\\u00a0* \\\" represents land occupied by trees and \\\"\\u00a0. \\\" represents free land.\\u00a0There is at least a \\\"\\u00a0.\\u00a0\\\" in the image.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Daniel's Square\",\n    \"output\": \"For each test case, print the maximun side of the square followed by the list of the left top point of each square in the image (sorted by row and in case of a tie for column). Check the sample for more detail.\\n                     Do not print blank lines between two test cases.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Marcelo Galv\\u00e3o P\\u00f3voa, UNICAMP  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Given a string s[1..N], we define a palindromic sequence of length p and displacement d (1 <= p <= d) as a sequence of k (k >= 1) disjoint substrings of s (each of which is a palindrome of length p) distant d characters from each other.\\n\\n                    More formally, it can be written as the following sequence of disjoint substrings of s : A= (s[i..i+p-1], s[i+d..i+d+p-1], s[i+2d..i+2d+p-1], ...), where each element of A is a palindrome of length p. Recall that a string is called a palindrome if it reads the same forwards and backwards.\\n\\n                    The value of a palindromic sequence is the total number of characters from string s it uses (i.e., if the sequence has k palindromes of length p, its value is k*p). Given a fixed displacement value D, calculate the largest value of a palindromic sequence contained in a string S.\",\n    \"id\": 1686,\n    \"input\": \"Each test case is described using two lines. The first line contains two integers N and D (1 <= N <=10^5), 1 <= D <=10^5) representing respectively the length of the string S and the required displacement value. The next line contains the string S of length N consisting only of lowercase letters.\\n\\n                    The last test case is followed by a line containing two zeros.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Palindromic Sequence\",\n    \"output\": \"For each test case output a line with the maximum value of a palindromic sequence with displacement D in string S.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By VC++, Col\\u00e9gio Etapa  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Henrique worked very hard during the last summer vacation helping his friends in math problems. He used the money he earned to buy a smartphone. He got really interested in the lock system of his phone.\\n                    It has a NxN grid of points and he must draw a pattern that passes through exactly P points. Passing through the same point more than once is allowed, but such repetitions cannot be consecutive (a move that goes from and to the same point is not allowed). He can go from a certain point X to another point Y if the segment that connects X and Y does not cross any other point.\\n\\n                    \\n\\n                    Henrique worked really hard for his phone and wants to be sure that no one is going to find out his unlock pattern.He wants to know how many different unlock patterns exist.  \\n                    Two patterns are considered the same if and only if both start at the same point and have the same sequence of movements.\",\n    \"id\": 1687,\n    \"input\": \"The input consists of several test cases. Each test contains two numbers in a single line: N (2 \\u2264 N \\u2264 15) and P (1 \\u2264 P \\u2264 105). The last line of the input is 0 0, case that should not be processed.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Unlock the Smartphone\",\n    \"output\": \"For each test case, you should print a single line containing the number of possible unlock patterns. As this number can get large, print it modulo 1300031.\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"By Felipe Rasinhas, IME  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"During his last visit to planet Tatooine, Han Solo was captured by Jabba, the Hutt's mercenaries and was taken to his palace. Jabba, knowing that Solo was still not able to pay his debts, proposed a deal. Both would to play a game of Intergalactic Nim, and if Han won, he would be clear of his debts, otherwise, his debt would double.\\n\\n                    Intergalactic Nim is a variation of the well known game of Nim, where stones are arranged in columns and on each turn a player must remove one or more stones from one of the columns. The player that is unable to make a move is considered the loser. On Intergalactic Nim one of the players (in this case Jabba) picks a number N and the stones are arranged in N columns, with the i-eth column having i stones (First column with 1 stone, second column with 2 stones, and so on).\\n\\n                    Having great knowledge in these kinds of games, and knowing that who makes the first move (in this case Jabba) is more likely to win the game, Han proposed a little change to the game. He would be able to pick three integers A, B and K and add K stones to every column between columns A and B (inclusive). Jabba accepted the proposal but added a limitation, Jabba's counselor would consider Q possible operations of this type and Solo would have to apply each of these operations independently to the original game. Since Han is not accompanied by his fellow friend Chewbacca (that usually helps him in these situations), he asked you to help him beat Jabba.\",\n    \"id\": 1688,\n    \"input\": \"The input consists of several test cases and ends with EOF.\\n                    \\n                    The first line of a test case consists of two integers N (1 <= N <= 1018) and Q (Q <= 105), the number picked by Jabba, and the number of operations suggested by the counselor.\\n\\n                    The next Q lines consist in 3 integers A, B (1 < = A <= B <= N) and K (-A <= K <= 1018) describing each operation selected by the counselor.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Intergalactic Nim\",\n    \"output\": \"For each test case, the output consists of Q lines containing the winner of the game (considering both players play optimally) for each one of the operations suggested.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Davi Duarte Pinheiro, UFPE  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Skyrk has developed a game called Super Circumference. Its simplicity is only rivalled by its monumental difficulty. The goal of Super Circumference is to control a point which runs around a central circumference while attempting to avoid contact with incoming circular walls.\\n\\n                    \\n\\n                    The black point circles around the red circumference at the speed of one full revolution per second. A level has several sets of incoming circular walls from which the point has to avoid contact. An incoming wall can be regarded as a circumference sector. The set of walls approach the center at the speed of one set every P seconds. The player wins the game if he successfully evade all walls.\\n\\n                    A brand new level has been created with N sets of walls. To adjust its difficulty properly, you are asked to find the minimum possible value of P that still makes the level possible to complete. \\u00a0\",\n    \"id\": 1691,\n    \"input\": \"The first line contains T (T \\u2264 100) \\u2013 the number of test cases. After this line, T test cases follows. The first line of a test case contains one integer N (1 \\u2264 N \\u2264 104) \\u2013 the number of sets of walls. Next N lines contain the description of the set of walls in the following format: First the number K (0 \\u2264 K \\u2264 10) \\u2013 the number of walls present in this set. Next, there are K tuples of floating point numbers in the form: X,Y (0 \\u2264 X, Y < 2\\u03c0) \\u2013 the wall starts at an angle X and extends along the circumference in clockwise direction until angle Y. Walls of the same set do not intersect. None of the sets will never be a full circumference. When the game starts, the first set will hit the center after P seconds and the black point can start at any position.\\n\\n                    The figure above illustrates the first sample test case.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Super Circumference\",\n    \"output\": \"For each test case print a single line with \\\"Case #A: B\\\" where A is the number of the test case (starting from 1) and B is the minimum possible P that makes the level possible to complete. B should be rounded to 4 digits after the decimal point. The input will be in a way that errors up to 10-5 will still give the correct answer.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Jose Miguel Noblecilla, Pontificia Universidad Cat\\u00f3lica del Per\\u00fa  Peru\",\n    \"category\": \"Graph\",\n    \"description\": \"A new university network is composed by N servers distributed around the campus, every pair of servers are connected by an unique path made of wires and are N - 1 wires, but the Informatics Deparment has forgotten assign a server to the mathematics faculty.\\n\\n                A lazy mathematics student, named Curo, is feeling resentful, because now he can't run his programs in a powerful machine. So, he decided to implant a tricky virus, designed by him during his free time, because he hates his theoretical mathematics courses and prefer coding something more fun rather than write down boring numbers and symbols.\\n\\n                Curo wants to infect the maximum number of servers and take his revenge upon the Informatics Department. He prepared a simulation of the attack before the real one, but his computer isn't powerful enough to execute it. So, he needs your help for this task, but first you have to know how the virus works.\\n\\n                If the virus infect a server, his adjacents servers will be infected too. Also, the virus program has a  pseudo-random variable named Kuro-number. At the end of the infection process, the largest distance between two infected servers must be exactly the Kuro-number.\\n\\n                Given a test network and a Kuro-number you must obtain if exists the maximum number of infected servers, otherwise you must print \\\"Impossible Revenge!\\\"\",\n    \"id\": 1692,\n    \"input\": \"There are several tests, the first line of each test contains two integers N and K --- number of servers in the network and the Kuro-number (2 \\u2264 K < N \\u2264 1000). Next N - 1 lines contain N - 1 wires of that network --- Each line contains a pair (u, v) means there is an connection between server u and server v (1 \\u2264 u,v \\u2264 N).\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Curo Attack\",\n    \"output\": \"Print if exists the maximum number of infected servers, otherwise you must print \\\"Impossible Revenge!\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Time da UFCG  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Rafael Richman is a realy rich kid. He's about to make 34 years old and for his next bithday gift he asked a water arena to play with his friends. The arena consists of a flat circular field with radius R. In the middle of the field there is a tower with a height H. At the top of the tower there is a cannon that launches water with inicial velocity V. To make things more interesting, his mother Matilda Richman bought a device that changes the gravity\\n                    G of the arena.\\n\\n                    Given all the information about the arena, your task is to determine if the water thrown from the cannon can reach out the field.\\n\\n                    You can consider that the difference between the reach of the cannon and the radius is always bigger than 0.01.\\n\\n                    Rafael is a physics lover, and he can give you the necessary equations to solve the problem:\\n\\n                    X(t) = Vcos(a)t\\n                    Y(t) = Vsen(a)t - Gt\\u00b2/2\\n\\n                    Where X and Y are the coordinates of the water in function of t, the elapsed time since the water came out of the cannon and \\\"a\\\" is the angle with the horizontal.\",\n    \"id\": 1693,\n    \"input\": \"There are several tests cases. Each test case is given using a single line. Each line contains 4 integers, R, H, V and G. All the integers are greater than 0 and smaller or equal than 10000. All the distance units are given in meters and all the time units are given in seconds.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Just Another Physics Problem\",\n    \"output\": \"For each test case output output a single line containing 'Y' if the reach of the cannon is bigger than the radius of the field, or 'N' otherwise.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By VC++, Col\\u00e9gio Etapa  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Pinkie Pie is feeling lucky. She is going to the local lottery office to place a bet and test her luck.\\n\\n                    The lottery ticket consists of a matrix of N rows by M columns. The cells are numbered from 0 to N*M-1 in such a way that the number located at the r-th row and c-th column (0-indexed) is r * M + c. A bet consists of choosing K distinct numbers among those displayed.\\n\\n                    \\n\\n                    Pinkie senses that the winning numbers will be close to each other, so she decides to choose numbers that are all either in the same row or in the same column. Pinkie also thinks that prime numbers bring bad luck. She will disregard any bet that contains at least one prime number.\\n\\n                    Twilight was passing by and noticed Pinkie\\u2019s incapableness of making a decision. Willing to put her math skills to the test, she decided to count, while Pinkie makes up her mind, how many different bets can Pinkie Pie place. Two bets are considered different if there is at least one element present in one bet and not present in the other.\",\n    \"id\": 1694,\n    \"input\": \"There are several tests cases. Each test case consists of a single line containing three integers N, M and K (1 \\u2264 N, M \\u2264 50; 1 \\u2264 K \\u2264 10). The last test case is followed by a line containing three zeroes.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Lottery\",\n    \"output\": \"For each test case, print a single line containing the number of different bets Pinkie Pie can place, such that every chosen number is either in the same row or same column, and no prime number is chosen. A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Carlos Guillen, ICMC - USP  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"It is well know that the he Earl of Lemongrab is the weirdest guy in the Candy Kingdom, but his latest obsession has gone too far: he is trying to find out the order of all the things!\\n\\n                    So far he has been succeeding on a lot of ordering problems, but he is getting mad because he found a problem he cannot solve: Given a rooted tree consisting of N vertices, where each vertex i has a value Vi, he tried to find out the increasing order of all the values in the subtree rooted at vertex X.\\n\\n                    He did well for a couple of subtrees, but then he got tired and noticed that no one would be able to accomplish this task in short time. In order to relieve his frustration he asked you to answer M queries: for a given vertex X tell him what is the K-th smallest value in its subtree.\",\n    \"id\": 1695,\n    \"input\": \"The first line contains an integer T (1 \\u2264 T \\u2264 35), the number of test cases.\\n\\n                    The first line of each test case contains two integers N and M (1 \\u2264 N, M \\u2264 105), the number of vertices and the number of queries, respectively.\\n\\n                    We will assume that the tree vertices are identified by integers from 1 to N and that the root of the tree is the vertex 1. The next line contains a sequence of integers V1, V2, ..., Vn (1 \\u2264 Vi \\u2264 109), the values of each vertex.\\n\\n                    Each of the next N - 1 lines contains two integers Ai and Bi (1 \\u2264 Ai, Bi \\u2264 N), the pairs of vertices connected by an edge on the tree. The tree is conected and valid.\\n\\n                    The next M lines contain the queries, each line containing two integers X and K (1 \\u2264 X, Ki \\u2264 N), it is, find the he K-th smallest value in the subtree rooted at X. It is guaranteed that each query is valid.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Ordering Trees\",\n    \"output\": \"For each test case print a single line containing the answers to the queries in the order they appear in the input, each answer should be followed by a single space (even for the last query).\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\r\\n                    By Anderson Silva, ICMC - USP  Brazil\\r\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\r\\n                    Rusa and Sanches are friends at the primary school. This month, they are learning how to sum and subtract integers numbers. Their math teacher gave a nice exercise to practice those new operators. The exercise is a game (to improve the interest of the pupils). It is necessary that the two pupils do it together and, as Rusa and Sanches are always doing tasks together, this one will not be different. The teacher gave them many integer sequences to play. For each sequence, their movements are the following:\\r\\n                    \\r\\n                    - First Player: Generate a new sequence using the sum of the first and second numbers, third and fourth, fifth and sixth, etc.\\r\\n                    - Second Player: Generate a new sequence using the subtraction of the first and second numbers (in this order), third and fourth, fifth and sixth, etc.\\r\\n                    \\r\\n                    If the size of the sequence is odd, the last number should be left unchanged. The players alternate turns. The game lasts until there is only one number in the sequence, called the last number. If it is odd, then the first player wins, otherwise the second wins. As you can see the game is very predictable, they can't change the final result given an initial sequence. Moreover, the teacher also asked them to calculate the last number of the sequence after replacing one of the numbers in the initial sequence. There will be several replacements, and for each one they must play the game again. These replacements are cumulative.\\r\\n\\r\\n                    Both of them need to learn how to add and subtract, thus on the first test case, Rusa will be the first player and Sanches the second. On the second test case, they change the order, i.e., Sanches is the first player and Rusa is the second. On the third one they swap again, and so on.\\r\\n\\r\\n                    The teacher gave too many sequences to Rusa and Sanches. They are bored of that exercise because they already learned the lesson. They need to solve all the games until the end of the week and they are asking you to help them with that.\\r\\n                    \\r\\n                    For example, let's assume that the initial sequence is (4, 2, 3, 5, 1, 6, 10, 2). Then, the movements are: (4, 2, 3, 5, 1, 6, 10, 2) \\u2192 (6, 8, 7, 12) \\u2192 (-2, -5) \\u2192 (-7). The last number is -7, and the winner is Rusa, because -7 is odd, and it is the first test case.\\r\\n                    \\r\\n                    Take a second example, let's assume that the initial sequence is (4, 2, 3). Then, the movements are: (4, 2, 3) \\u2192 (6, 3) \\u2192 (3). The last number is 3, and the winner is Sanches, because 3 is odd, and it is the second test case.\\r\",\n    \"id\": 1696,\n    \"input\": \"\\r\\n                    The first line will contain a number T (1 \\u2264 T \\u2264 100), how many test case will follow. For each test case, the first line will contain a number N (1 \\u2264 N \\u2264 104) and Q (0 \\u2264 Q \\u2264 104), the number of integers in the sequence and the number of replacements in the initial sequence, respectively. The next line contain N integers of the sequence S1, S2, \\u2026, SN (-104 \\u2264 Si \\u2264 104). The next Q lines contain 2 integers A (1 \\u2264 A \\u2264 N ) and B (-104 \\u2264 B \\u2264 104), it means that the element SA of the initial sequence is replaced by B (SA = B).\\r\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Playing With Operators\",\n    \"output\": \"\\r\\n                    For each test case, print Q + 1 lines. The first line should contain the last value and the winner of the initial sequence and the next Q lines the last value and the winner of the sequence after each replacement.\\r\\n\\r\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Bugs, Lucas y Coyote, Universidad Cat\\u00f3lica San Pablo  Peru\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Jaida likes positive integers very much, currently she is playing a game called \\\"multiply game\\\".\\n\\n                    \\\"Multiply game\\\" is just an educational game in which you have a list of N numbers. You can take two of them and add the their product to the list. You can do this as many times as you want.\\n\\n                    Jaida wants the list to contain all the numbers from 1 to X (with possible repetitions or greater numbers). Help little Jaida telling her what is the maximum value of X she can achieve.\",\n    \"id\": 1697,\n    \"input\": \"The first line in the input contains a number T which is the number of test cases. Every test case is described by 2 lines:\\n                    \\n                    The first line contains number N (0 < N <= 106) as described in the statement. The second line contains N positive integers ai, which are the initial numbers in Jaida's list (0 < ai <= 109).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Jaida and Multiply Game\",\n    \"output\": \"For each test case print a line containing the maximum value X Jaida can achieve. If it is not possible, output 0.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Caique Porto Lira, ITA  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"A big earthquake has destroyed the whole S\\u00e3o Paulo's metro system, but Brazil is going to be the host for the World Cup, so the Government has taken two measures: The first is to buy a teletransport system between two metro stations, the second is to, in order to avoid unnecessary costs, rebuild some of the metro routes so that there is exactly one path between each pair of metro stations. A configuration is any metro system that can be a result of the Government's measures. Given the old metro system, determine the pair of stations that, when connected by the teletransport system, can result in the maximal number of configurations.\",\n    \"id\": 1698,\n    \"input\": \"The input contains several test cases and ends with end-of-file (EOF).\\n                    \\n                    The first line of each test case consists of two integers N and M (1 < N <= 12 and N - 1 <= M <= N*(N - 1)/2). The next M lines contain each two integers A and B (0 <= A,B<= N - 1), meaning that stations A and B were connected before the earthquake.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Brazilian Metro\",\n    \"output\": \"For each test case, the output consists of two integers A and B (A < B), denoting the two stations that should be connected by the teletransport system in order to maximize the number of possible configurations. In case of multiple answers, print the lexicographically lowest.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Douglas Santos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Annie and Garen love playing computer games but they are not very good on counting. So they need your help in this new game. The game consists of n boxes, each one has a label x. In each box are placed d balls, where d is the number of positive divisors of x, the label of the box. In each turn, a player chooses one ball of any box and removes it from the game. The player who makes the last move is the winner. Given n and x for all boxes, they want to know who will win. Annie is always the first player to act.\",\n    \"id\": 1699,\n    \"input\": \"The input consists of several test cases. Each test case is described using two lines. The first line contains the integer n (1 \\u2264 n \\u2264 105), representing the number of boxes. The second line contains n integers, the i-th integer represents the label x (1 \\u2264 x \\u2264 1012) of the i-th box. The last test case is followed by a line containing a zero.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Very Boring Game\",\n    \"output\": \"For each test case output, in a single line, Annie or Garen, the winner of the game.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Henrique Vieira e Sousa, Universidade Estadual de Campinas  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The kindergarten teacher asked the class, as a homework, to make a robot only using toothpicks and glue. Jo\\u00e3ozinho  likes to personalize his stuff, so he decided to make his robot with as long antennas as he could. When Jo\\u00e3ozinho was constructing his robot, he got out of toothpicks, exactly when he was starting to build the antennas, as it was too late, he could not buy more toothpicks. Jo\\u00e3ozinho racked his brains to find out a way to finish his robot, then he realized that his neighbour, mr. Silva, has a bar, and maybe he could have some toothpicks to give him. \\n                     Unfortunately Jo\\u00e3ozinho was not on a lucky day, when he got to the bar, mr. Silva told him that he was out of toothpicks either, because all his toothpicks were used by his clients in that day, they were all over the floor, and some of them were dirty and broken. As Jo\\u00e3ozinho is a very persistent boy, and a little bit grubby too, he decided to use this\\n                    sticks anyway, and he made a deal with mr. Silva, he would sweep the floor of the bar in exchange for all the toothpicks he find. \\n\\n                    As it was even latter when Jo\\u00e3ozinho finished his task, he asked you to help him to find out, what was the longest pair of equal size antennas, he could make.\\n\\n                    You are given the number of toothpicks he found, N, and the length of each toothpick. Determine the length of the longest pair of antenas, such that both antennas have the same length, and they can be built concatenating any number of toothpicks by its ends.\",\n    \"id\": 1700,\n    \"input\": \"The input consist of a series of test cases. \\n                    Each test case consis of two lines. The first contain a integer N ( 1 <= N <= 1000 ), the number of toothpicks found. The second line has a sequence of N integers, S1, ..., Sn, where Si  (1 <= Si <= 100) is the length of the ith toothpick found by Jo\\u00e3ozinho.\\n\\n                    The input will be terminated by a test case starting with N = 0. This test case should not be processed.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Antennas\",\n    \"output\": \"For each test case output on a single line, the length of the longest pair of antenas, such that both antennas have the same length, and can be built using the toothpicks Jo\\u00e3ozinho as described above.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Contest Road to Fortaleza V  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Fibo is a big fan of numbers, specially of big ones. He loves sequences that grow fast, his favorite is a well known sequence, the Fibonacci Sequence. Someday he decided to create a new sequence using his favorite one. His new sequence is build multiplying consecutive Fibonacci numbers. So he gets two initial Fibonacci numbers of indexes A and B. The first element of the new sequence is the Fibonacci number of index A multiplied by the number of index B, the second  one is the Fibonacci number of index A+1 multiplied by the number of index B+1, and so on. He knows how to get any element of his sequence, but he would like to know another thing. He would like to know the sum of the first N numbers of the new sequence. Can you help him? \\n\\n                    PS: Fibonnaci(0) = 0 and Fibonnaci(1) = 1\",\n    \"id\": 1701,\n    \"input\": \"The input file has a lot of test cases. Each test case has three integers, A, B and N (1 <= A, B, N <= 1000000000), their meaning was explained in the text above. The input ends with three zeros.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Fibos's Sequence\",\n    \"output\": \"For each test case you have to print one number, the sum of the N first elements of Fibo's sequence. This number can be really large, so you have to print it MOD 1000000007.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Contest Road to Fortaleza V  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Let G be a simple graph with N colored vertices and M edges. We want to know whether it is possible to add exactly P new edges to G so that the resulting graph is simple, connected and none of its edges connect two vertices of the same color.\",\n    \"id\": 1702,\n    \"input\": \"The input consists of multiple test cases. The first line contains the number of test cases T ( T <= 70). Each test case begins with a line containing 4 integers in the following order: the number of vertices N (1 <= N <= 10^3), the number of edges in the original graph M (0 <= M <= 10^5), the number of edges to be inserted P ( 0 <= P <= 10^6) and the number of colors K (1 <= K <= 10^3). The following line has N numbers Xi indicating the color for the i-th vertex (1 <= Xi <= K). The following M lines contains a pair of integers (V_i, V_j) stating the presence of an edge between vertex V_i and V_j \\u00a0(1 <= V_i,V_j <= N).\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Graph Coloring\",\n    \"output\": \"For each test, output a single line with \\\"Y\\\" (without \\u00a0quotes) if it is possible to draw such graph or \\\"N\\\" otherwise.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Contest Road to Fortaleza V  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Petr is playing a game called \\\"Jumping Stones\\\".\\n                      \\n                    In this game, there are N slots in a line numbered from 1 to N. On each slot there is a stone with a number written on its top. The written numbers go from 1 to N and are all different. \\n                      \\n                    Petr starts at slot 1 and takes K steps. At each step, he looks the number written on the current stone and jumps to the slot correspondent to that number.\\n\\n                    Given integers N and K, determine among all possible configurations the probability that he will return to slot 1 after K steps. Assume that different configurations has the same probability.\",\n    \"id\": 1703,\n    \"input\": \"You will be given T, number of test cases, and then T lines follow with N and K from the statement (1 <= N,K <= 10^5).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Jumping Stones\",\n    \"output\": \"For each test case output a single line with the answer. Your answer will be considered correct if the absolute erro is \\n                    less than 0.00001 \\n                    Ps.: Following the example input For the second case we have the following possibilites: \\n                    1 2 3 \\n                    1 3 2 \\n                    2 1 3 \\n                    2 3 1 \\n                    3 1 2 \\n                    3 2 1 \\n                    In the first and second configurations we finish at the slot 1 after 1 step.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By UFRJ  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"You work for a big and fast-moving company. Today, one of your colleagues called in sick and you must fill in for them.\\n\\n                    Your boss has told you that you have only one computer to complete some tasks. Each of them earns the company an amount v of money and must be finished up to t hours from now. After that, it cannot be performed anymore and has no more value. The computer completes exactly one task per hour.\\n\\n                    You want to impress your boss so he might give you a promotion. To do that, you intend to use your programming skills to select which tasks execute in such a way that the amount of money lost is minimized.\",\n    \"id\": 1704,\n    \"input\": \"The input is composed of several test cases and ends with end of file. Each one describes a list of tasks and starts with two integers N (1 \\u2264N) and H (H \\u2264 1000), which are, respectively, the number of tasks and the number of hours that the computer is available. Then follow N lines, each one with two integer v (1 \\u2264 v \\u2264 1000) and t (1 \\u2264 t \\u2264 H) described above.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Arranging Tasks\",\n    \"output\": \"For each test case output a line with an integer representing the minimum lost money.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By ICMC-USP  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In order to improve her scientific skills Princess Bubblegum has learned to program using BMO (the best computer in the Candy Kingdom), and as any programmer she has become a binary lover.\\n\\n                By her addiction to binary stuff, she also loves any decimal number that looks like a binary number (i.e. a decimal number that only has digits 0 and 1, for example 101), so she was trying to find a multiple of a given decimal number N that looks like a binary number, but for some numbers it was taking a long time to find such multiple, even with the help of BMO. Due to the princess addiction to problem solving, she hasn\\u2019t been doing anything until she gets the desired multiples. That situation was perfect for the Earl of Lemongrab, who took over the Candy Kingdom. As Finn and Jake, the Candy Kingdom heroes, can\\u2019t do anything against the Earl of Lemongrab and don\\u2019t know nothing about multiples, they asked you to save the Candy Kingdom by finding the desired multiples.\",\n    \"id\": 1705,\n    \"input\": \"The input will consist of at most 2*10^5 lines, each line consist of an integer N (0 < N < 10^12) for which Princess Bubblegum wants to find the described multiple M(M != 0), this number must be less than 10^12, otherwise it wouldn\\u2019t fit in the BMO architecture.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Binary Lover\",\n    \"output\": \"For each integer in the input print a line with the required multiple, if there exist several solutions print the smallest of them, if there is no solution print -1.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By ICMC-USP  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"As it happens every new year, the Candy Kingdom will be organizing a huge new years festival. Princess Bubblegum (PB) asked for many musical towers to be built, with bridges joining them. The tower musical is the new scientific idea of PB, and works as follows. Each tower can output two musical notes: A and B. They start with a random note (A or B), and the goal of the festival is to make all towers output A. That is where the bridges goes in: if you tap a bridge with a special candy wand, it will change the output note of the two musical towers they connect.\\n\\n                Now Princess Bubblegum got lost on her design and is not sure if the festival can be completed. She gave Finn & Jake, the heroes, a map with the towers, bridges and the starting sound of each tower, and asked them if it's possible to have the festival. Since Finn & Jake are not into \\\"science stuff\\\", they asked you to solve this task.\",\n    \"id\": 1706,\n    \"input\": \"There will be several test cases. Each test case begins with two integers: N (1 \\u2264 N \\u2264 1000) and M (1 \\u2264 M \\u2264 4000). The next line contains N letters, indicating the starting note of the i-th tower outputs. Then follows M lines, each with two integers, a (1 \\u2264 a) and b (b \\u2264 N and a != b), describing that there is a bridge connecting tower a to tower b. Input ends with EOF.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Magical Candy Bridges\",\n    \"output\": \"For each test case you should output Y if it is possible the festival to happen or N if it is not.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By ICMC-USP  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Kirito loves games, especially those involving odd numbers. On a rainy day, when he couldn't go outside play with his friends, he decided to play alone. He wrote random numbers in pieces of papers and put them down on a bag. Then he mixed them, took 2 numbers (x,y) and asked himself: \\\"what is the sum of the decimal digits of the odd numbers in the range [min(x,y),max(x,y)] (including the boundaries)?\\u201d\\n\\n                Now your task is to help Kirito in his game.\",\n    \"id\": 1707,\n    \"input\": \"The input file consists of several test cases and ends with EOF. Each test case contains 2 integers x and y,the pair of numbers that Kirito got from the bag (1 \\u2264 x, y \\u2264 10^9)\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Numbers Game\",\n    \"output\": \"Output a single integer in each line, the answer to the Kirito\\u2019s question.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Vin\\u00edcius \\\"Cabessa\\\" Fernandes dos Santos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In motorsports it is very common that the leader pilot in a race, at a certain moment, overtakes the last pilot. The leader, at this moment, is one lap ahead of the last pilot, who then becomes a straggler. In this task, given the time it takes for the fastest pilot, and for the slowest pilot, to complete one lap, you have to determine in which lap the slowest pilot will become a straggler. You should consider that, at the beginning, they are side by side at the start line of the circuit, both at the start of lap number 1 (the first lap of the race); and that a new lap always begins right after the leader crosses the start line.\",\n    \"id\": 1708,\n    \"input\": \"The input contains several test cases. Each test case consists of one line with two integers X and Y (1 \\u2264 X < Y \\u2264 10000), the times, in seconds, that it takes for the fastest and the slowest pilot, respectively, to complete one lap.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Lap\",\n    \"output\": \"For each test case in the input program should output line, containing one integer: the lap in which the slowest pilot will become a straggler.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Vin\\u00edcius \\\"Cabessa\\\" Fernandes dos Santos  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"A card pack has an even number 2n of cards a1 , a2 , . . . , a2n , all distinct (a1 < a2 < \\u00b7 \\u00b7 \\u00b7 < a2n ). The pack is initially sorted, that is, the first card in the pack is a1 , the second is a2 , and so on, and\\n                    the last card in the pack is a2n.\\n\\n                    A handler then performs a shuffling procedure repeatedly. The shuffling consists of two steps:\\n\\n                    \\n                    \\tthe pack is divided in the middle;\\n                    \\tthe cards in the two halves are then interleaved so that if the original sequence at the begining of step 1 is x1, x2,. . . , x2n, then at the end of step 2 the sequence of cards becomes xn+1, x1, xn+2, x2, . . . , x2n, xn.\\n                    \\n\\n                    Given the number of cards in the pack, write a program to determine how many times the shuffling\\n                    procedure must be executed so that the pack becomes sorted again.\",\n    \"id\": 1709,\n    \"input\": \"The input contains several test cases. A test case consists of one line, which contains an even integer P (2 \\u2264 P \\u2264 2 x 105 ), where P is the number of cards in the pack (notice that the value P corresponds to the value 2n in the description above).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Shuffled Deck\",\n    \"output\": \"For each test case in the input your program must produce a single line, containing a single integer, the minimum number of times the shuffling procedure must be executed so that the set becomes sorted again.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Vin\\u00edcius \\\"Cabessa\\\" Fernandes dos Santos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The Galactic Confederation is planning an administrative reform, to better manage its resources. For that, the Confederation divided the whole space into regions. To define the regions, initially a set of planes was specified, and the regions were defined by the cuts these planes made in the space. Notice that some regions are unlimited, but there may be limited regions. The set of planes was chosen so that no plane intercepts the orbit of a planet, and therefore each planet moves within only one region\\n                    during its orbit (that is, a planet inside a region will never cross a plane to another region).\\n                    Your task is to determine, given the equations of the planes and the positions of the planets, how many planets exist within the region with the largest number of planets (in other words, what is the maximum number of planets inside any region).\",\n    \"id\": 1710,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers M (1 \\u2264 M \\u2264 500) and N (1 \\u2264 N \\u2264 10000), indicating respectively the number of planes and the number of planets. Each of the M following lines contains four integers A, B, C and D (\\u221210000 \\u2264 A, B, C, D \\u2264 10000), the coefficients and the free term of the equation Ax + By + Cz = D which defines each plane. Each of the following N lines contains three integers X, Y and Z (\\u221210000 \\u2264 X, Y, Z \\u2264 10000), representingthe position (X, Y, Z) of a planet.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Confederation\",\n    \"output\": \"For each test case in the input your program must produce a single line containing a single integer, the number of planets in the region which contains the largest number of planets.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By Ricardo Anido  Brazil\\r\",\n    \"category\": \"Graph\",\n    \"description\": \"\\r\\n                    Miss Worm is furious when she hears people say worms are palindrome animals, for which one cannot distinguish head from tail. What an outrageous lie! \\r\\n\\r\\n                    Miss Worm lives in a beautiful cave, composed of chambers and tunnels. Each tunnel connects two different chambers and can be used in both directions. A cycle in the cave is a sequence of chambers s1, s2, . . . , sn, sn+1 = s1 , where si \\u2260 si+1 and (si, si+1 ) is a tunnel, for 1 \\u2264 i \\u2264 n. Miss Worm\\u2019s cave may contain cycles, but each chamber is part of at most one cycle. Tunnels and caves are rather cramped, so that if some part of Miss Worm\\u2019s body is already ocuppying a tunnel or a cave, there is no room for Miss Worm to re-enter that tunnel or cave. \\r\\n\\r\\n                    Some cave chambers have access from the surface. Miss Worm has a map that describes the cave, informing the length of each tunnel and which two chambers each tunnel links. Miss Worm is also self-councious and knows her exact length.\\r\\n\\r\\n                    Miss Worm wants to know, for the chambers that have access to the surface, if it is possible to enter the cave by that chamber, walk the minimum possible distance inside the cave and leave the cave by the same chamber, moving always ahead, never moving backwards. Can you help her?\\r\\n\\r\",\n    \"id\": 1711,\n    \"input\": \"\\r\\n                    The input contains several test cases. The first line of a test case contains two integers S (2 \\u2264 S \\u2264 104 ) and T (1 \\u2264 T \\u2264 2S) representing respectively the number of chambers and the number of tunnels in the cave. Chambers are identified by integers from 1 to S. Each of the next T lines describes a tunnel and contains three integers A, B and C (1 \\u2264 A < B \\u2264 S; 1 \\u2264 C \\u2264 100), where A and B represent the chambers connected by the tunnel, and C represents the tunnel\\u2019s length. No chamber is connected to more than 100 other chambers. The next line contains an integer Q (1 \\u2264 Q \\u2264 100), which indicates the number of queries. Each of the next Q lines describes a query and contains two integers X (1 \\u2264 X \\u2264 S) and M (1 \\u2264 M \\u2264 105 ), indicating respectively the chamber Miss Worm wants to enter the cave and the length of Miss Worm\\u2019s body.\\r\\n\\r\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Miss Worm\",\n    \"output\": \"\\r\\n                    For each query in the input your program must produce a single line, containing a single integer, the length of the shortest walk Miss Worm must tread to enter and leave the cave by the chamber indicated in the query, moving always ahead, never moving backwards. If that is not possible, the line must contain the value \\u22121.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Guilherme Albuquerque Pinto  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The kingdom of Polyminogonia recently passed an ecological law that obligates every farm in the kingdom to preserve the maximum number of trees possible in a fixed percentage of the area of the farm. In addition, to allow wild animals to move freely, the preserved area must be connected. The farms in Polyminogonia are always a grid of N \\u00d7 N squares, one hectare each. The figure illustrates one farm, for N = 5. The preserved area should cover exactly M squares. In the example, M = 6. It should be orthogonally connected. That is, it must be possible to move between any two preserved squares making only orthogonal moves between preserved squares. The area not preserved may or may not be connected.\\n\\n                    The farmers know the number of trees inside each square, and you have to write a program that computes the maximum number of trees that can be preserved with an area of M squares. In the example, it is possible to preserve 377 trees!\",\n    \"id\": 1712,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N and M(2 \\u2264 N \\u2264 50, 1 \\u2264 M \\u2264 10). The next N lines contain, each one, N integers with values between 1 and 1000, representing the number of trees inside each square of the farm.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Ecology\",\n    \"output\": \"For each test case in the input your program should output one line containing one integer, the maximum number of trees that can be preserved, with the given restrictions.\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"By Vin\\u00edcius \\\"Cabessa\\\" Fernandes dos Santos  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"The Galactic Confederation installed a new teletransport system in its spaceships. Each spaceship received a teletransport cabin, in which there is a panel with four buttons. Each button is labeled with a different letter A, B, C or D and with a number which indicates the spaceship to which the user will be instantly transported if the respective button is pressed (as everyone knows, Confederation spaceships are identified by integers from 1 to N ). \\n\\n                    To use the system, the user must buy a ticket for each trip he wishes to make (one trip equals one button press). Notice that as the number of buttons in the panel is small compared to the number of Confederation spaceships, the user may have to buy a multiple ticket of L trips to go from a given spaceship S to another spaceship T. \\n\\n                    For example, for the spaceships in the figure below, if the user is inside the cabin of spaceship 3 and presses button B he is transported to spaceship 2. If he has a multiple ticket and presses button B again he is then transported to spaceship 1.\\n\\n                    \\n\\n                    Your task in this problem is, given the start spaceshift S, the destination spaceship T , and the number of trips L of a ticket, to determine the number of distinct sequences of L buttons that take the user from spaceship S to spaceship T . For example, for the spaceships in the figure above, there are four distinct sequences of L = 2 buttons that take the user from spaceship S = 3 to spaceship T = 1: CD, DA, AB, and BB.\",\n    \"id\": 1713,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N (1 \\u2264 N \\u2264 100) and L (0 \\u2264 L < 230 ), indicating respectively the number of spaceships and the number of trips in the ticket. The second line of a test case contains two integers S and T (1 \\u2264 S, T \\u2264 N ), indicating respectively the start spaceship and the destination spaceship. Each of the following N lines describes the panel in the cabin of a spaceship. The i-th line (1 \\u2264 i \\u2264 N ) contains four integers A, B, C and D (1 \\u2264 A, B, C, D \\u2264 N ), representing the numbers attached to the four buttons in the teletransport cabin of spaceship number i.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Teletransport\",\n    \"output\": \"For each test case in the input your program must produce a single line, containing a single integer, which must be equal to r module 104 , where r is the number of distinct sequences of L buttons that take the user from spaceship S to spaceship T.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Guilherme Albuquerque Pinto  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The parks in the City of Logic are always a grid of N \\u00d7N squares (2 \\u2264 N \\u2264 100), where each square has one of the first 10 ASCII letters, abcdefghijABCDEFGHIJ, in either lowercase or uppercase format. People from the City of Logic proudly follow only consistent paths when crossing parks. For example, if they step over a lowercase c, they will not allow themselves stepping over an uppercase C afterwards. To define this more precisely, a consistent path is a sequence of squares satisfying: consecutive squares are orthogonally adjacent; no letter occurs in both lowercase and uppercase format. That is to say, either a letter is not in the sequence at all, or it occurs only in lowercase, or only in uppercase format.\\n\\n\\n                    \\n\\n\\n                    You have to write a program to help the people from the City of Logic to find the length a shortest consistent path between the square with coordinates (1, 1), in the upper left corner, and the square with coordinates (N, N ), in the lower right corner. For the example park above, the shortest consistent path has length 13.\",\n    \"id\": 1714,\n    \"input\": \"The input contains several test cases. The first line of a test case has a integer N (2 \\u2264 N \\u2264 100), the size of the park. The next N lines contain, each one, a sequence of N letters, defining the park.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Letters\",\n    \"output\": \"For each test case in the input your program must output one line containing one integer, the length of a shortest consistent path. If there is no consistent path, output -1.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Frustrated and disappointed with the results of its football team, the Super Brazilian Club (SBC) decided to invest in the handball team. In order to better rate the players, the coaches would like to analyse their regularity. Specifically, they are interested in knowing how many players scored goals in all matches. \\n\\n                    As the data volume is very big, they would like to have a computer program to do this counting.\",\n    \"id\": 1715,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers N and M (1 \\u2264 N \\u2264 100 and 1 \\u2264 M \\u2264 100) indicating, respectively, the number of players and the number of matches. Each one of the next N lines describes the performance of one player: the i-th line contains M integers Xj (0 \\u2264 Xj \\u2264 100, for 1 \\u2264 j \\u2264 M ), giving the number of goals that the i-th player scored in each match.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Handball\",\n    \"output\": \"For each test case in the input your program must output one line, containing one integer, the number of players that scored goals in all matches!\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Vin\\u00edcius \\\"Cabessa\\\" Fernandes dos Santos  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"RSA is one of the most used cryptographic algorithms and it is considered to be one of the most secure existing alternatives. Its basic operation is described below.\\n\\n                    Two odd prime numbers P and Q are chosen and N = PQ is computed. Then the totient function \\u03c6(N) = (P \\u2212 1)(Q \\u2212 1) is computed and an integer e satisfying 1 < E < \\u03c6(N) is chosen so that gcd(\\u03c6(N), E) = 1. Finally the integer D, the inverse multiplicative of e module \\u03c6(N) is computed, that is, the integer D satisfying DE \\u2261 1 mod \\u03c6(N).\\n\\n                    In that way we obtain the public key, which consists of the pair of integers N and E, and the secret key, containing the integers N and D.\\n\\n                    To encrypt a message M, with 0 < M < N, we calculate C = Me mod N, and C is the encrypted message. To decrypt the message, that is, to recover the original message, it suffices to compute M = Cd mod N. Note that, in order to do that, the secret key must be known; knowing the public key is not enough to decrypt the message.\\n\\n                    In this problem your task is to break the RSA cryptography.\",\n    \"id\": 1716,\n    \"input\": \"The input contains several test cases. A test case consists of one line, which contains three integers N, E, and C, where 15 \\u2264 N \\u2264 109 , 1 \\u2264 E < N and 1 \\u2264 C < N , such that N and E constitute the RSA public key described above, and C is a message encrypted with that public key.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"RSA\",\n    \"output\": \"For each test case in the input your program must produce a single line, containing a single integer M , 1 \\u2264 M < N , the original message.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Guilherme Albuquerque Pinto  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Every convex polygon, with 2N vertices, can be decomposed into N \\u2212 1 quadrilaterals, by making N \\u2212 2 straight line cuts between certain pairs of vertices. The figure below shows three different decompositions of the same polygon with N = 5. The weight of the decomposition is the sum of the lengths of its N \\u22122 cuts. Your program should compute the weight of a minimum weight decomposition!\\n\\n\",\n    \"id\": 1717,\n    \"input\": \"The input contains several test cases. The first line of a test case contains one integer N (2 \\u2264 N \\u2264 100). The following 2N lines contain, each one, two real numbers X and Y (0 \\u2264 X, Y \\u2264 10000), with precision of 4 decimal digits: the coordinates of the 2N points, in counterclockwise order, of the convex polygon.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Cut\",\n    \"output\": \"\\u00a0 \\u00a0 For each test case in the input your program must output one line containing a real number, with 4 decimal digits precision. The number should be the weight of a minimum weight decomposition of the given polygon.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Anido  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Grandpa Pepe is famous for his pizzas. They are delicious, and have the format of a perfect circle. Grandpa prepared a special pizza for tonight\\u2019s dinner, and put a certain number of olives randomly distributed on the pizza, but all of them exactly on the pizza\\u2019s border.\\n\\n                    Your problem is to determine, knowing the pizza\\u2019s circumference, the number of olives and the position of each olive, if it is possible to divide the pizza in circular sectors of exactly the same size, such that each piece contains exactly one olive.\\n\\n                    The figure below shows (a) a pizza of circumference 12 with 3 olives and a possible division in equal sized pieces; and (b) a pizza of circumference 12 with 4 olives that cannot be divided in equal parts as described above. Despite being tasty, the olives are very small, and their dimensions can be disregarded when computing the division.\\n\\n\",\n    \"id\": 1718,\n    \"input\": \"The input contains several test cases. The first line of a test case contains two integers C (3 \\u2264 C \\u2264 105 ) and N (3 \\u2264 N \\u2264 104 , N \\u2264 C) indicating respectively the circumference of the pizza and the number of olives. The integer C is multiple of N . The second line contains N distinct integers Xi (0 \\u2264 X1 < X2 < . . . < XN < C), in increasing order, describing the positions of the olives, given as the length of the circular arc, clockwise, from a fixed point in the circumference.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Grandpa Pepe's Pizza\",\n    \"output\": \"For each test case in the input your program must produce a single line, containing a single letter, which must be S if it is possible to divide the pizza as described above, or N otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You are to write an interpreter for a simple computer. This computer uses a processor with a small number of machine instructions. Furthermore, it is equipped with 32 byte of memory, one 8-bit accumulator (accu) and a 5-bit program counter (pc). The memory contains data as well as code, which is the usual von Neumann architecture.\\n\\n                    The program counter holds the address of the instruction to be executed next. Each instruction has a length of 1 byte - the highest 3 bits define the type of instruction and the lowest 5 bits define an optional operand which is always a memory address (xxxxx). For instructions that don't need an operand the lowest 5 bits have no meaning (-----). Here is a list of the machine instructions and their semantics:\\n                    \\n\\n                    000xxxxx \\u00a0 STA x \\u00a0\\u00a0store the value of the accu into memory byte x\\n                    001xxxxx \\u00a0 LDA x \\u00a0\\u00a0load the value of memory byte x into the accu\\n                    010xxxxx \\u00a0 BEQ x \\u00a0\\u00a0if the value of the accu is 0 load the value x into the pc\\n                    011----- \\u00a0 NOP \\u00a0 \\u00a0\\u00a0no operation\\n                    100----- \\u00a0 DEC \\u00a0 \\u00a0\\u00a0subtract 1 from the accu\\n                    101----- \\u00a0 INC \\u00a0 \\u00a0\\u00a0add 1 to the accu\\n                    110xxxxx \\u00a0 JMP x \\u00a0\\u00a0load the value x into the pc\\n                    111----- \\u00a0 HLT \\u00a0 \\u00a0\\u00a0terminate program\\n                    \\n\\n                    In the beginning, program counter and accumulator are set to 0. After fetching an instruction but before its execution, the program counter is incremented. You can assume that programs will terminate.\",\n    \"id\": 1719,\n    \"input\": \"The input file contains several test cases. Each test case specifies the contents of the memory prior to execution of the program. Byte 0 through 31 are given on separate lines in binary representation. A byte is denoted by its highest-to-lowest bits. Input is terminated by EOF.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Simple Computers\",\n    \"output\": \"For each test case, output on a line the value of the accumulator on termination in binary representation, again highest bits first.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Squares and rectangles fascinated the famous Dutch painter Piet Mondriaan. One night, after producing the drawings in his 'toilet series' (where he had to use his toilet paper to draw on, for all of his paper was filled with squares and rectangles), he dreamt of filling a large rectangle with small rectangles of width 2 and height 1 in varying ways.\\n\\n                    \\n\\n                    Expert as he was in this material, he saw at a glance that he'll need a computer to calculate the number of ways to fill the large rectangle whose dimensions were integer values, as well. Help him, so that his dream won't turn into a nightmare!\\n\\n\",\n    \"id\": 1720,\n    \"input\": \"The input file contains several test cases. Each test case is made up of two integer numbers: the height H (1 \\u2264 H \\u2264 11) and the width W (1 \\u2264 W \\u2264 11) of the large rectangle. Input is terminated by H = W = 0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Mondriaan's Dream\",\n    \"output\": \"For each test case, output the number of different ways the given rectangle can be filled with small rectangles of size 2 times 1. Assume the given large rectangle is oriented, i.e. count symmetrical tilings multiple times.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\r\\n                    University of Ulm local Contest  Germany\\r\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\r\\n                    Alice and Bob haven't met for some time. Bob isn't very happy about this, so he urges Alice to finally make time for a meeting. Let's listen to an extract from a phone call:\\r\\n\\r\\n                    Alice: ... maybe we should meet on neutral territory. \\r\\n                    Bob: I've already heard this from you --- two years ago. \\r\\n                    Alice: I know ; I just haven't found yet a suitable place that is roughly at the same distance from both yours and mine. \\r\\n                    Bob: Well, the geometric place of the points that are equidistant from two given points on the surface of a sphere (and the earth is a sphere rather than a disc) is a great circle (namely the one which intersects the great circle through the given points orthogonally at the center of them). If you insist only on approximately equal distances though, we get a zone of some kilometers width and about 40000 km length. Not everything in this zone is water. Thus I think it is a feasible task to find a fitting place. \\r\\n                    Alice: Now, if I tell you to pick any, we'll certainly land up in Honolulu. \\r\\n                    Bob: Which is not a too bad idea. So, may I pick any ? \\r\\n                    Alice: As long as I don't have to accept --- but I'm open to suggestions. \\r\\n                    Bob: Honolulu ? \\r\\n                    Alice: Is it situated on aforementioned geometric place at all ??! \\r\\n                    Bob: Not quite ...\\r\\n\\r\\n                    Nice. Now let's stop the preliminaries and come to the facts: Given two locations on the earth's surface you can find the geometric place of all equidistant points on the surface. For another given location calculate its distance on the surface to this geometric place. Assume that the earth is a sphere with a radius of 6378 km.\\r\\n\\r\",\n    \"id\": 1721,\n    \"input\": \"\\r\\n                    The input file consists of two parts: a list of locations and a list of queries.\\r\\n\\r\\n                    The location list consists of up to 100 lines, one line per location. Each contains a string S and two floating-point numbers, La, Lo, separated by whitespace,  representing the name of the location(S), its latitude (La) and its longitude (Lo). Names are unique and shorter than 30 characters and do not contain whitespace. Latitudes are between -90 (South Pole) and 90 (North Pole) inclusive. Longitudes are between -180 and 180 inclusive where negative numbers denote locations west of the meridian and positive numbers denote locations east of the meridian. (The meridian passes through Greenwich, London.) The location list is terminated by a line consisting of a single \\\"#\\\".\\r\\n\\r\\n                    Each line in the query list contains three names of locations, A, B, M. You can assume A the first location to be Alice's home, B, the second location to be Bob's home and , M the third location to be a possible meeting point. The query list is terminated by a line consisting of a single \\\"#\\\".\\r\\n\\r\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Equidistance\",\n    \"output\": \"\\r\\n                    For each query, output a line saying \\\"M is x km off A/B equidistance.\\\" with M,x,A,B appropriately replaced, M by the Meeting point, x  the calculated distance rounded to the nearest integer, A by Alice's home location and, B by Bob's home location.\\r\\n\\r\\n                    p>If one of the locations in the query didn't occur in the list of locations replace x by \\\"?\\\" .\\r\\n\\r\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Recall the definition of the Fibonacci numbers:\\n\\n                    f1 = 1\\n\\n                    f2 = 2\\n\\n                    fn = fn-1 + fn-2\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 (n \\u2265 3)\\n\\n                    Given two numbers a and b, calculate how many Fibonacci numbers are in the range [a,b].\",\n    \"id\": 1722,\n    \"input\": \"The input contains several test cases. Each test case consists of two non-negative integer numbers a and b. Input is terminated by a = b = 0.Otherwise, a \\u2264  b  \\u226410100. The numbers a and b are given with no superfluous leading zeros.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"How many Fibs?\",\n    \"output\": \"For each test case output on a single line the number of Fibonacci numbers fi with a \\u2264 fi \\u2264 b.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\r\\n                    University of Ulm local Contest  Germany\\r\",\n    \"category\": \"Graph\",\n    \"description\": \"\\r\\n                    Among other things, Computational Molecular Biology deals with processing genetic sequences. Considering the evolutionary relationship of two sequences, we can say that they are closely related if they do not differ very much. We might represent the relationship by a tree, putting sequences from ancestors above sequences from their descendants. Such trees are called phylogenetic trees.\\r\\n\\r\\n                    Whereas one task of phylogenetics is to infer a tree from given sequences, we'll simplify things a bit and provide a tree structure - this will be a complete binary tree. You'll be given the n leaves of the tree. Sure you know, n is always a power of 2. Each leaf is a sequence of amino acids (designated by the one-character-codes you can see in the figure). All sequences will be of equal length l. Your task is to derive the sequence of a common ancestor with minimal costs.\\r\\n\\r\\n                        \\r\\n                        \\r\\n                            \\r\\n                                \\r\\n                                    Amino\\u00e1cido\\r\\n                                    Alanine AlaA  \\r\\n                                    ArginineArgR \\r\\n                                    AsparagineAsnN \\r\\n                                    Aspartic Acid AspD \\r\\n                                    CysteineCysC \\r\\n                                    Glutamine     GlnQ \\r\\n                                    Glutamic Acid GluE \\r\\n                                    Glycine       GlyG \\r\\n                                    Histidine     HisH \\r\\n                                    Isoleucine    IleI \\r\\n                                \\r\\n                            \\r\\n                            \\r\\n                                \\r\\n                                    Amino\\u00e1cido\\r\\n                                    Leucine       LeuL\\r\\n                                    Lysine        LysK\\r\\n                                    Methionine    MetM\\r\\n                                    Phenylalanine PheF\\r\\n                                    Proline       ProP\\r\\n                                    Serine        SerS\\r\\n                                    Threonine     ThrT\\r\\n                                    Tryptophan    TrpW\\r\\n                                    Tyrosine      TyrY\\r\\n                                    Valine        ValV\\r\\n                                \\r\\n                            \\r\\n                        \\r\\n                    \\r\\n\\r\\n                    \\r\\n\\r\\n                    The costs are determined as follows: every inner node of the tree is marked with a sequence of length L, the cost of an edge of the tree is the number of positions at which the two sequences at the ends of the edge differ, the total cost is the sum of the costs at all edges. The sequence of a common ancestor of all sequences is then found at the root of the tree. An optimal common ancestor is a common ancestor with minimal total costs.\\r\\n\\r\",\n    \"id\": 1723,\n    \"input\": \"\\r\\n                    The input file contains several test cases. Each test case starts with two integers N and L, denoting the number of sequences at the leaves and their length, respectively. Input is terminated by N = L = 0. Otherwise, 1 \\u2264 N \\u2264 1024 and 1 \\u2264 L \\u2264 1000. Then follow N words of length L over the amino acid alphabet. They represent the leaves of a complete binary tree, from left to right.\\r\\n\\r\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Phylogenetic Trees Inherited\",\n    \"output\": \"\\r\\n                    For each test case, output a line containing some optimal common ancestor and the minimal total costs.\\r\\n\\r\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"University of Ulm local Contest   Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"\\\"Hike on a Graph\\\" is a game that is played on a board on which an undirected graph is drawn. The graph is complete and has all loops, i.e. for any two locations there is exactly one arrow between them. The arrows are coloured. There are three players, and each of them has a piece. At the beginning of the game, the three pieces are in fixed locations on the graph. In turn, the players may do a move. A move consists of moving one's own piece along an arrow to a new location on the board. The following constraint is imposed on this: the piece may only be moved along arrows of the same colour as the arrow between the two opponents' pieces.\\n                    In the sixties (\\\"make love not war\\\") a one-person variant of the game emerged. In this variant one person moves all the three pieces, not necessarily one after the other, but of course only one at a time. Goal of this game is to get all pieces onto the same location, using as few moves as possible. Find out the smallest number of moves that is necessary to get all three pieces onto the same location, for a given board layout and starting positions.\",\n    \"id\": 1724,\n    \"input\": \"The input file contains several test cases. Each test case starts with the number n. Input is terminated by n = 0. Otherwise, 1 \\u2264 n \\u2264 50. Then follow three integers p1, p2, p3 with 1 \\u2264 pi \\u2264 n denoting the starting locations of the game pieces. The colours of the arrows are given next as a m \\u00d7 m matrix of whitespace-separated lower-case letters. The element mij denotes the colour of the arrow between the locations i and j. Since the graph is undirected, you can assume the matrix to be symmetrical.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Hike on a Graph\",\n    \"output\": \"For each test case output on a single line the minimum number of moves required to get all three pieces onto the same location, or the word \\\"impossible\\\" if that is not possible for the given board and starting locations.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Mark Dettinger  Germany\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Having realized that the quadtree-encoded treasure map was a fake, Florida Jones maliciously plans to also play a prank for the next treasure hunter after him. But for that, he needs your help once again:\\n\\n                    Can you write a program that takes a picture in the XBM format and encodes it with the quadtree scheme?\",\n    \"id\": 1725,\n    \"input\": \"\\tThe first line will be \\\"#define quadtree_width N\\\" where N is the picture size in pixels. (The picture is quadratic: N*N pixels)\\n                    \\tThe second line will be \\\"#define quadtree_height N\\\" accordingly.\\n                    \\tThe third line will be \\\"static char quadtree_bits[] = {\\\".\\n                    \\tThen, n lines will follow, each one encoding one pixel row of the picture. There will be n/8 hexadecimal numbers per line.\\n                    \\tEach hexadecimal number is composed of 8 bits that encode 8 pixels from left to right (where the leftmost bit has the value 1 and the rightmost bit has the value 128). The hexadecimal numbers are printed in the form 0xdd where d is one character of the set { 0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f }.\\n                    \\tExample: The 8 pixels WBBBBWWB are written as 0x9e. (2+4+8+16+128 = 158 = 0x9e)\\n                    \\tAfter each hexadecimal number, a comma follows.\\n                    \\tThe last line will be \\\"};\\\".\\n                    \\n\\n                    Note: The comments on the input sample (enclosed by /* and */) are not part of the input. They should help to explain the XBM format.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Quadtree II\",\n    \"output\": \"First, print the integer N (8 \\u2264 N \\u2264 512) on a line by itself. Then, print a string consisting of the letters B, W and Q that correctly encodes the picture with the quadtree scheme. Finally, terminate the string with a newline character.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ralf Engels  Germany\",\n    \"category\": \"Strings\",\n    \"description\": \"You want to plan a big birthday' party with your friends. On planning you notice that you have to do a lot of operations with sets of friends. There is one group which consist of Arthur, Biene and Clemens. Then there is a group of friends you know from snowboarding which consists of Daniel, Ernst, Frida and Gustav. If you want to invite them both, the resulting party group consists of g1 + g2 (the result is the union of both groups). Then you can compute the intersection of the two groups g1 * g2, which consists of the empty set. Maybe you want to invite a group g1, but excluding all members of an other group g2, which is written as g1 - g2. Intersection (*) has precedence over union (+) and set difference (-). All operations are left associative, which means that in A op1 B op2 C you first have to evaluate A op1 B (provided op1 and op2 have equal precedence).\",\n    \"id\": 1726,\n    \"input\": \"The input consists of one or more lines. Each line contains one expression that you have to evaluate. Expressions are syntactically correct and only consist of the characters:\\n\\n                    \\n                    \\t'{' and '}'\\n                    \\tthe elements 'A' to 'Z' meaning friend Arthur to Zora.\\n                    \\tthe operations '+', '-' and '*'\\n                    \\t'(' and ')' for grouping operations\\n                    \\tthe newline character '\\\\n' marking the end of an expression.\\n                    \\n\\n                    A line is never longer than 255 characters.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Friends\",\n    \"output\": \"Output the resulting set in curly braces '{' and '}', each on a line of its own. Print elements of sets sorted alphabetically.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Mark Dettinger  Germany\",\n    \"category\": \"Paradigms\",\n    \"description\": \"As you maybe know, the qualification for the European Soccer Championship 2000 is a tournament where in each group each team plays against each other team twice. Germany is in group 3 together with Turkey, Finland, Moldova and Northern Ireland. 14 games have been played and 6 are still to come.\\n                    A quick look at the current standings might make you think that Northern Ireland is already out of the race. But that's wrong! Imagine Northern Ireland wins their three remaining games, Germany plays remis against Turkey and loses against Finland, and Moldova defeats Turkey. Then Northern Ireland is number one!\\n                    For those who are not familiar with the scoring model: In each game a team gains 3 points for a victory, 1 point for a remis or 0 points for a loss. After all games have been played, teams are ranked according to points. In case of a tie, the additional tie breakers are: goal difference (i.e. goals scored - goals against), goals scored, and random choice, in that order.\\n                    The question your program should answer is: Regarding all possibilities of how the remaining games could end, what is the highest and lowest possible rank of each team in the group after the tournament is over?\",\n    \"id\": 1727,\n    \"input\": \"The input will consist of one or more test cases. Each test case adheres to the following format:\\n                    \\n                        On the first line there will be one integer n (1 \\u2264 n \\u2264 20), representing the number of teams in the group.\\n                        On the next n lines, the names of the teams will follow. Names are always shorter than 30 characters and do not contain whitespace.\\n                        On the next line, there will be an integer g, representing the number of completed games.\\n                        Finally, g lines will follow, each one describing one completed game in the form team1 team2 goals1 goals2.\\n                        You may further assume that at most 10 games will be remaining and each team has at least one remaining game to play. (This simplifies the problem a little.)\\n\\n                        \\n                    \\n                    Input will be terminated by a value of zero (0) for n.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Euro Cup 2000\",\n    \"output\": \"For each test case, first print a line saying \\\"Group #x\\\" where x is the number of the test case (counting from 1).\\n                    Then, print one line per team in the order they appear in the input. On each line, print the team's name, a blank character, its best possible rank, a minus sign and its worst possible rank. \\n                    Print a blank line after each test case, even after the last one.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The fight goes on, whether to store numbers starting with their most significant digit or their least significant digit. Sometimes this is also called the \\\"Endian War\\\". The battleground dates far back into the early days of computer science. Joe Stoy, in his (by the way excellent) book \\\"Denotational Semantics\\\", tells following story:\\n\\n                    \\\"The decision which way round the digits run is, of course, mathematically trivial. Indeed, one early British computer had numbers running from right to left (because the spot on an oscilloscope tube runs from left to right, but in serial logic the least significant digits are dealt with first). Turing used to mystify audiences at public lectures when, quite by accident, he would slip into this mode even for decimal arithmetic, and write things like 73+42=16. The next version of the machine was made more conventional simply by crossing the x-deflection wires: this, however, worried the engineers, whose waveforms were all backwards. That problem was in turn solved by providing a little window so that the engineers (who tended to be behind the computer anyway) could view the oscilloscope screen from the back.\\n                    [C. Strachey - private communication.]\\\"\\n\\n                    You will play the role of the audience and judge on the truth value of Turing's equations.\",\n    \"id\": 1728,\n    \"input\": \"The input contains several test cases. Each specifies on a single line a Turing equation. A Turing equation has the form \\\"a+b=c\\\", where a, b, c are numbers made up of the digits 0,...,9. Each number will consist of at most 7 digits. This includes possible leading or trailing zeros. The equation \\\"0+0=0\\\" will finish the input and has to be processed, too. The equations will not contain spaces.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Hard to Believe, But True!\",\n    \"output\": \"For each test case generate a line containing the word \\\"True\\\" or the word \\\"False\\\", if the equation is true or false, respectivelly, in Turing's interpretation, i.e. the numbers being read backwards.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"A relay is a race for two or more teams of runners. Each member of a team runs one section of the race. Your task is to help to evaluate the results of a relay race. \\n                    You have to process several teams. For each team you are given a list with the running times for every section of the race. You are to compute the average time per kilometer over the whole distance. That's easy, isn't it?\\n\\n                    So if you like the fun and challenge competing at this contest, perhaps you like a relay race, too. Students from Ulm participated e.g. at the \\\"SOLA\\\" relay in Zurich, Switzerland. For more information visit http://www.sola.asvz.ethz.ch/ after the contest is over.\",\n    \"id\": 1729,\n    \"input\": \"The first line of the input specifies the number of sections N followed by the total distance of the relay D in kilometers. You may safely assume that 1<=N<=20 and 0.0<D<200.0. Every following line gives information about one team: the team number T (an integer, right-justified in a field of width 3) is followed by the n results for each section, separated by a single space. These running times are given in the format \\\"h:mm:ss\\\" with integer numbers for the hours, minutes and seconds, respectively. In the special case of a runner being disqualified, the running time will be denoted by \\\"-:--:--\\\". Finally, the data on every line is terminated by a newline character. Input is terminated by EOF.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Average is not Fast Enough!\",\n    \"output\": \"For each team output exactly one line giving the team's number t right aligned in a field of width 3, and the average time for this team rounded to whole seconds in the format \\\"m:ss\\\". If at least one of the team's runners has been disqualified, output \\\"-\\\" instead. Adhere to the sample output for the exact format of presentation.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"A great deal in today's mobile communication depends on having a direct view to a satellite. For communication providers it is therefore crucial to know where their services are available. \\n                    You are to identify locations which have a direct view to a particular satellite, i.e. this satellite must be above the horizon. To make things easier you may assume that the earth is a perfect sphere with a radius of 6378 km (mountains will be added next year...). The satellite is a pointlike object above the earth's surface.\",\n    \"id\": 1730,\n    \"input\": \"The input file consists of several test cases. For each test case the first line contains the number of locations n to be checked followed by the position of the satellite: its latitude, its longitude (both in degrees) and its height (in km) above the earth's surface. \\n                    Each of the following n lines contains a location on the earth's surface: the location's label (a sequence of less than 60 printable ASCII characters containing no whitespace characters) followed by its latitude and longitude (both in degrees). \\n                    Input is terminated by n=0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Global Roaming\",\n    \"output\": \"For each test case output the number of the test case as formatted in the sample output. Then, output the locations from where the satellite is visible by printing the corresponding labels on separate lines in the same order as they appear in the input file. \\n                    Output a blank line after each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Mark Dettinger  Germany\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The company \\\"21st Century Fruits\\\" has specialized in creating new sorts of fruits by transferring genes from one fruit into the genome of another one. Most times this method doesn't work, but sometimes, in very rare cases, a new fruit emerges that tastes like a mixture between both of them.\\n\\n                    A big topic of discussion inside the company is \\\"How should the new creations be called?\\\" A mixture between an apple and a pear could be called an apple-pear, of course, but this doesn't sound very interesting. The boss finally decides to use the shortest string that contains both names of the original fruits as sub-strings as the new name. For instance, \\\"applear\\\" contains \\\"apple\\\" and \\\"pear\\\" (APPLEar and apPlEAR), and there is no shorter string that has the same property. \\n\\n                    A combination of a cranberry and a boysenberry would therefore be called a \\\"boysecranberry\\\" or a \\\"craboysenberry\\\", for example.\\n\\n                    Your job is to write a program that computes such a shortest name for a combination of two given fruits. Your algorithm should be efficient, otherwise it is unlikely that it will execute in the alloted time for long fruit names.\",\n    \"id\": 1731,\n    \"input\": \"Each line of the input file contains two strings that represent the names of the fruits that should be combined. All names have a maximum length of 100 and only consist of alphabetic characters. Input is terminated by end of file.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Advanced Fruits\",\n    \"output\": \"For each test case, output the shortest name of the resulting fruit on one line. If more than one shortest name is possible, any one is acceptable.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                   By Ralf Engels  Germany\\r\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n                    Maja is a bee. She lives in a bee hive with thousands of other bees. This bee hive consists of many hexagonal honey combs where the honey is stored in. But bee Maja has a problem. Willi told her where she can meet him, but because Willi is a male drone and Maja is a female worker they have different coordinate systems.\\r\\n\\r\\n                    Maja's Coordinate System\\r\\n\\r\\n                    Maja who often flies directly to a special honey comb has laid an advanced two dimensional grid over the whole hive.\\r\\n\\r\\n                    \\r\\n\\r\\n                    Willi's Coordinate System\\r\\n\\r\\n                    Willi who is more lazy and often walks around just numbered the cells clockwise starting from 1 in the middle of the hive.\\r\\n\\r\\n                    \\r\\n\\r\\n                    Help Maja to convert Willi's system to hers. Write a program which for a given honey comb number gives the coordinates in Maja's system.\\r\\n\\r\",\n    \"id\": 1732,\n    \"input\": \"\\r\\n                    The input file contains one or more integers which represent Willi's numbers. Each number stands on its own in a separate line, directly followed by a newline. The honey comb numbers are all less than 100 000.\\r\\n\\r\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Bee Maja\",\n    \"output\": \"\\r\\n                    You should output the corresponding Maja coordinates to Willi's numbers, each coordinate pair on a separate line.\\r\\n\\r\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Ralf Engels  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"Vladimir has white skin, very long teeth and is 600 years old, but this is no problem because Vladimir is a vampire.\\n\\n                    Vladimir has never had any problems with being a vampire. In fact, he is a very successful doctor who always takes the night shift and so has made many friends among his colleagues. He has a very impressive trick which he shows at dinner partys: He can tell the blood group by taste.\\n\\n                    Vladimir loves to travel, but being a vampire he has to overcome three problems.\\n\\n                    \\n                    \\tFirst, he can only travel by train because he has to take his coffin with him. (On the up side he can always travel first class because he has invested a lot of money in long term stocks.)\\n                    \\tSecond, he can only travel from dusk till dawn, namely from 6 pm to 6 am. During the day he has to stay inside a train station.\\n                    \\tThird, he has to take something to eat with him. He needs one litre of blood per day, which he drinks at noon (12:00) inside his coffin.\\n                    \\n\\n                    You should help Vladimir to find the shortest route between two given cities, so that he can travel with the minimum amount of blood. (If he takes too much with him, people will ask funny questions like \\\"What do you do with all that blood?\\\")\",\n    \"id\": 1733,\n    \"input\": \"The first line of the input will contain a single number telling you the number of test cases.\\n\\n                    Each test case specification begins with a single number telling you how many route specifications follow.\\n\\n                    Each route specification consists of the names of two cities, the departure time from city one and the total travelling time. The times are in hours. Note that Vladimir can't use routes departing earlier than 18:00 or arriving later than 6:00.\\n\\n                    There will be at most 100 cities and less than 1000 connections. No route takes less than one hour and more than 24 hours. (Note that Vladimir can use only routes with a maximum of 12 hours travel time (from dusk till dawn).) All city names are shorter than 32 characters.\\n\\n                    The last line contains two city names. The first is Vladimir's start city, the second is Vladimir's destination.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Vladimir the Vampire\",\n    \"output\": \"For each test case you should output the number of the test case followed by \\\"Vladimir needs # litre(s) of blood.\\\" or \\\"There is no route Vladimir can take.\\\"\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Signals of most probably extra-terrestrial origin have been received and digitized by The Aeronautic and Space Administration (that must be going through a defiant phase: \\\"But I want to use feet, not meters!\\\"). Each signal seems to come in two parts: a sequence of n integer values and a non-negative integer t. We'll not go into details, but researchers found out that a signal encodes two integer values. These can be found as the lower and upper bound of a subrange of the sequence whose absolute value of its sum is closest to t.\\n\\n                    You are given the sequence of n integers and the non-negative target t. You are to find a non-empty range of the sequence (i.e. a continuous subsequence) and output its lower index l and its upper index u. The absolute value of the sum of the values of the sequence from the lth to the uth element (inclusive) must be at least as close to t as the absolute value of the sum of any other non-empty range.\",\n    \"id\": 1734,\n    \"input\": \"The input file contains several test cases. Each test case starts with two numbers n (1 \\u2264 n \\u2264 105) and k. Input is terminated by n = k = 0. Otherwise, follows n integers with absolute values lower than 104 which constitute the sequence. Then follows k queries for this sequence. Each query is a target t (0 \\u2264 t \\u2264 109).\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Bound Found\",\n    \"output\": \"For each query output 3 numbers on a line: some closest absolute sum and the lower and upper indices of some range where this absolute sum is achieved. Possible indices start with 1 and go up to n.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"A tree (i.e. a connected graph without cycles) with vertices numbered by the integers 1, 2, ..., n is given. The \\\"Prufer\\\" code of such a tree is built as follows: the leaf (a vertex that is incident to only one edge) with the minimal number is taken. This leaf, together with its incident edge is removed from the graph, while the number of the vertex that was adjacent to the leaf is written down. In the obtained graph, this procedure is repeated, until there is only one vertex left (which, by the way, always has number n). The written down sequence of n-1 numbers is called the Prufer code of the tree.\\n\\n                    Your task is, given a tree, to compute its Prufer code. The tree is denoted by a word of the language specified by the following grammar:\\n\\n                    T ::= \\\"(\\\" N S \\\")\\\"\\n\\n                    S ::= \\\" \\\" T S\\n\\n                    | empty\\n\\n                    N ::= number\\n\\n                    That is, trees have parentheses around them, and a number denoting the identifier of the root vertex, followed by arbitrarily many (maybe none) subtrees separated by a single space character. As an example, take a look at the tree in the figure below which is denoted in the first line of the sample input.\\n\\n                    Note that, according to the definition given above, the root of a tree may be a leaf as well. It is only for the ease of denotation that we designate some vertex to be the root. Usually, what we are dealing here with is called an \\\"unrooted tree\\\".\\n\\n\",\n    \"id\": 1735,\n    \"input\": \"The input contains several test cases. Each test case specifies a tree as described above on one line of the input file. Input is terminated by EOF. You may assume that 1 \\u2264 n \\u2264 50.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Code the Tree\",\n    \"output\": \"For each test case generate a single line containing the Prufer code of the specified tree. Separate numbers by a single space. Do not print any spaces at the end of the line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Mathematics\",\n    \"description\": \"A tree (i.e. a connected graph without cycles) with vertices numbered by the integers 1, 2, ..., n is given. The \\\"Pr\\u00fcfer\\\" code of such a tree is built as follows: the leaf (a vertex that is incident to only one edge) with the minimal number is taken. This leaf, together with its incident edge is removed from the graph, while the number of the vertex that was adjacent to the leaf is written down. In the obtained graph, this procedure is repeated, until there is only one vertex left (which, by the way, always has number n). The written down sequence of n-1 numbers is called the Pr\\u00fcfer code of the tree.\\n\\n                    Your task is, to reconstruct a tree, given its Pr\\u00fcfer code. The tree should be denoted by a word of the language specified by the following grammar:\\n\\n                    \\n                        T ::= \\\"(\\\" N S \\\")\\\"\\n                        S ::= \\\" \\\" T S\\n                        \\u00a0\\u00a0\\u00a0\\u00a0| empty\\n                        N ::= number\\n                    \\n\\n                    That is, trees have parentheses around them, and a number denoting the identifier of the root vertex, followed by arbitrarily many (maybe none) subtrees separated by a single space character. As an example, take a look at the tree in the figure below which is denoted in the first line of the sample output.\\n\\n                    Note that, according to the definition given above, the root of a tree may be a leaf as well. It is only for the ease of denotation that we designate some vertex to be the root. Usually, what we are dealing here with is called an \\\"unrooted tree\\\".\\n\\n\",\n    \"id\": 1736,\n    \"input\": \"The input contains several test cases. Each test case specifies the Pr\\u00fcfer code of a tree on one line. You will find n-1 numbers separated by a single space. Input is terminated by EOF. You may assume that 1 \\u2264 n \\u2264 50.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Decode the Tree\",\n    \"output\": \"For each test case generate a single line containing the corresponding tree, denoted as described above. Note that, in general, there are many ways to denote such a tree: choose your favorite one.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Strings\",\n    \"description\": \"The relative frequency of characters in natural language texts is very important for cryptography. However, the statistics vary for different languages. Here are the top 9 characters sorted by their relative frequencies for several common languages:\\n\\n                    \\n                    \\tEnglish: ETAOINSHR\\n                    \\tGerman: ENIRSATUD\\n                    \\tFrench: EAISTNRUL\\n                    \\tSpanish: EAOSNRILD\\n                    \\tItalian: EAIONLRTS\\n                    \\tFinnish: AITNESLOK\\n                    \\n\\n                    Just as important as the relative frequencies of single characters are those of pairs of characters, so called digrams. Given several text samples, calculate the digrams with the top relative frequencies.\",\n    \"id\": 1737,\n    \"input\": \"The input contains several test cases. Each starts with a number n on a separate line, denoting the number of lines of the test case. The input is terminated by n = 0. Otherwise, 1 \\u2264 n \\u2264 64, and there follow n lines, each with a maximal length of 80 characters. The concatenation of these n lines, where the end-of-line characters are omitted, gives the text sample you have to examine. The text sample will contain printable ASCII characters only.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Etaoin Shrdlu\",\n    \"output\": \"For each test case generate 5 lines containing the top 5 digrams together with their absolute and relative frequencies. Output the latter rounded to a precision of 6 decimal places. If two digrams should have the same frequency, sort them in (ASCII) lexicographical order. Output a blank line after each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"University of Ulm local Contest  Germany\",\n    \"category\": \"Graph\",\n    \"description\": \"Several startup companies have decided to build a better Internet, called the \\\"FiberNet\\\". They have already installed many nodes that act as routers all around the world. Unfortunately, they started to quarrel about the connecting lines, and ended up with every company laying its own set of cables between some of the nodes. Now, service providers, who want to send data from node A to node B are curious, which company is able to provide the necessary connections. Help the providers by answering their queries.\",\n    \"id\": 1738,\n    \"input\": \"The input contains several test cases. Each test case starts with the number of nodes of the network n. Input is terminated by n = 0. Otherwise, 1 \\u2264 n \\u2264 200. Nodes have the numbers 1, ..., n. Then follows a list of connections. Every connection starts with two numbers A, B. The list of connections is terminated by A = B = 0. Otherwise, 1 \\u2264 A, B \\u2264 n, and they denote the start and the endpoint of the unidirectional connection, respectively. For every connection, the two nodes are followed by the companies that have a connection from node A to node B. A company is identified by a lower-case letter. The set of companies having a connection is just a word composed of lower-case letters.\\n\\n                    After the list of connections, each test case is completed by a list of queries. Each query consists of two numbers A, B. The list (and with it the test case) is terminated by A = B = 0. Otherwise, 1 \\u2264 A, B \\u2264 n, and they denote the start and the endpoint of the query. You may assume that no connection and no query contains identical start and end nodes.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Fiber Network\",\n    \"output\": \"For each query in every test case generate a line containing the identifiers of all the companies, that can route data packages on their own connections from the start node to the end node of the query. If there are no companies, output \\\"-\\\" instead. Output a blank line after each test case.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Victor Marcilio Peixoto, UNIVASF  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A number belongs to Threebonacci sequence if it belongs to Fibonacci (consider 1 as being the first number in this sequence) sequence and satisfy at least one criteria below:\\n\\n                    1 \\u2013 The number representation contains at least one digit 3.\\n\\n                    2 \\u2013 The number is a multiple of 3.\",\n    \"id\": 1739,\n    \"input\": \"Each test case contains an integer N (1 \\u2264 N \\u2264 60 ). Input ends with EOF.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Threebonacci Sequence\",\n    \"output\": \"For each test case print a single line containing the Nth term in Threebonacci sequence.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Paulo Cezar Pereira Costa  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Chavaska likes to play with integer sequences. He has a sequence A consisting of N integers that he modifies and analyzes. Particularly he is interested in the ordering of some contiguous subsequences.\\n\\n                He explained to Kabralouco how he is having fun and invited him to play. Kabralouco wants to play but as he can\\u2019t think as fast as Chavaska and doesn\\u2019t like to stay behind, he decided to cheat and now asks your help creating a program capable of quickly dealing with the following operations:\\n                \\n\\n                \\n                    0 X Y \\u2013 Swap the elements at positions X and Y.\\n                    1 X Y \\u2013 Change the value of element at position X to Y.\\n                    2 X Y \\u2013 Insert element Y at position X.\\n                    3 X \\u2013 Remove element at position X.\\n                    4 X Y \\u2013 Query the ordering of the elements on (the subsequence) A[X...Y] and the answers must be:\\n                \\n                    \\n                        \\u201cALL EQUAL\\u201d \\u2013 If A[i] = A[i+1] for all i in [X,Y \\u22121]\\n                        \\u201cNON DECREASING\\u201d \\u2013 If A[i] \\u2264 A[i+1] for all i in [X,Y\\u22121] and A[i] \\u2260 A[i+1] for some i in [X,Y\\u22121]\\n                        \\u201cNONINCREASING\\u201d \\u2013 If A[i] \\u2265 A[i+1] for all i in [X,Y\\u22121] and A[i] \\u2260 A[i+1] for some i in [X,Y\\u22121]\\n                        \\u201cNONE\\u201d \\u2013 If none of the above orderings happens.\\n                    \\n\",\n    \"id\": 1740,\n    \"input\": \"There might be several test cases. The first line of each test case begins with an integer 1 \\u2264 N \\u2264 104, the amount of numbers on the initial sequence. On the next line there are N integers |A[i]| \\u2264 109 (1 \\u2264 i \\u2264 N). The next line contains an integer 1 \\u2264 Q \\u2264 105, the number of operations that must be executed. The following Q lines are the operations.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Is it Ordered?\",\n    \"output\": \"Your program should output one line for each query (\\u201c4 X Y\\u201d), answering whether the subsequence A[X...Y] is NON INCREASING, NON DECREASING, ALL EQUAL or NONE as explained above.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Contest Road to Fortaleza VII  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Little John is learning how to solve arithmetic expressions. But conventional expressions are too boring to him. Because of that, his father is teaching him how to solve expressions written in different forms. The first non-traditional form he learned was the Reverse Polish Notation, a form of writing expressions that interestingly does not need parenthesis. John has a keen interest in RPN expressions, but he thinks he can create his own notation that is even more interesting. That\\u2019s why he created the Reversed John\\u2019s Notation (RJN).\\n\\n                John came up with the following recursive definition of a valid RJN expression:\\n\\n                \\n                    A single digit is a valid expression. The result of an expression of this form is the value of the digit itself.\\n                    A binary operator (+, \\u2212, * or /), followed by two valid expressions, is a valid expression. The result of the expression is the application of the operator with the arguments reversed. That means + a b means the sum of the two operands, \\u2212 a b means b \\u2212 a, * a b means the product of a and b and / a b should be evaluated to floor(b/a).\\n                \\n\\n                John now amuses himself writing and solving expressions in the RJN form. As he\\u2019s a natural adventurous kid, he likes bigger expressions the most. However, sometimes this innocent boy runs into trouble. Part of the expressions he writes are apparently unsolvable, because they seem malformed, and some other expressions cause divisions by zero. But when he solves big expressions for the second time, he generally gets different results.\\n\\n                He would like to know for sure the result of the expressions he writes. Because you really like John, you decided to write a program to help him.\",\n    \"id\": 1741,\n    \"input\": \"The input consists of several test cases. Each test case is a line with n characters (1 \\u2264 n \\u2264 2\\u00d7106) that could possibly form an expression in the RJN form. This expression contains only digits from 0 to 9 and the mentioned operators  separated by a single space.\\n\\n                    The input terminates in the end of the input file.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Reversed John\\u2019s Notation\",\n    \"output\": \"For each test case, print one single line, with the following form:\\n\\n                    \\u201cThe answer is N.\\u201d if the expression is valid and can be solved and its result is N.\\n                    \\n                    \\u201cDivision by zero.\\u201d if the expression is syntatically valid, but in the process of solving it, one tries to divide by zero.\\n                    \\n                    \\u201cInvalid expression.\\u201d if the expression can\\u2019t be solved as a RJN expression.\\n\\n                    All the results, both final and intermediate, will fit in a signed 32-bit integer.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Contest Road to Fortaleza VII  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Bob went to Nlogonia looking for a new adventure. But, as soon as he arrived, he got in trouble with the creatures of that place as they were not that nice. They had a awkward game and that time was the Bob\\u2019s turn. They would drop him in a place and his objective was to get away alive and in time. \\n\\n                As Bob knew that he would be cooked if he had not made a plan in time, he stoled a map of the field he would be dropped in. But, he still did not know where exactly would be left by them. So he had to memorize the whole map to get away from that place alive. Fortunately, the field is a (N + 1) x (M + 1) rectangular grid and the only possible directions was heading north, south, east or west. The only crucial thing in memorizing were the holes, also rectangular. As he should have done it as fast as he could, he could not take a wrong way. \\n\\n                \\n                \\n                \\n                Example of a 6 x 6 grid map with two holes and a possible way to get out.\\n\\n                 Now, he is asking you how many ways he could have left that place as fast as possible if the had being dropped in a position (xi, yi) and had to reach position (xf , yf).\",\n    \"id\": 1742,\n    \"input\": \"The input is composed of several test cases and ends with end of file. Each one describes a map and starts with three integers N, M (1 \\u2264 N, M \\u2264 1000) and H (0 \\u2264 H \\u2264 100), which are, respectively, the size of the grid and the number of holes, as described above. Then, follows H lines, each with four integers xi, yi, xf and yf (0 \\u2264 xi,xf \\u2264 N; 0 \\u2264 yi,yf \\u2264 M ) describing the bottom left and the upper right corners of a hole. Next follows a integer Q (1 \\u2264 Q \\u2264 100), the number of queries. Then, follows Q lines, each with four integers xi, yi, xf and yf (0 \\u2264 xi,xf \\u2264 N; 0 \\u2264 yi,yf \\u2264 M ), which are the starting point and the ending point as described above. Between consecutive tests, there is a blank line. It is guaranteed that in a single map, all the holes are disjoint and there is always at least one way to get out.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Getting in Trouble\",\n    \"output\": \"Your program must output one line for each query of a test case with the number of ways of getting away as fast as possible. As the number can be very large, you must output modulo 109 + 7. Print a blank line after each test case.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Ricardo Anido, UNICAMP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The Internet Computer Parts Company (ICPC) is an on-line shop that sells computer parts. Pairs of in-line electrical connectors are among the most popular parts that ICPC sells. However, they are also one of the parts that are returned more often by unsatisfied customers, because due to errors in packaging the connectors sent to the costumers may not be compatible.\\n\\n                    An in-line connector is composed of five connection points, labelled from 1 to 5. Each connection point of a connector can be either a plug or an outlet. We say two connectors are compatible if, for every label, one connection point is a plug and the other connection point is an outlet (in other words, two connectors are compatible if, for every connection point with the same label, a plug and an outlet meet when the two connectors are connected).\\n\\n                    The figure below shows examples of two connectors that are compatible and two connectors that are not compatible.\\n\\n                    \\n\\n                    ICPC is introducing a state-of-the-art Automated Checking Machine (ACM), with an optical checker, which will verify whether the two connectors packaged for a customer are indeed compatible. The com- plex and expensive hardware of the ACM is ready, but they need your help to finish the software.\\n\\n                    Given the descriptions of a pair of in-line connectors, your task is to determine if the connectors are compatible.\",\n    \"id\": 1743,\n    \"input\": \"The first line contains five integers Xi (0 \\u2264 Xi \\u2264 1 for i = 1, 2, . . . , 5), representing the connection points of the first connector in the pair. The second line contains five integers Yi (0 \\u2264 Yi \\u2264 1 for i = 1, 2, . . . , 5), representing the connection points of the second connector. In the input, a 0 represents an outlet an a 1 represents a plug.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Automated Checking Machine\",\n    \"output\": \"Output a line with a character representing whether the connectors are compatible or not. If they are compatible write the uppercase letter \\u201cY\\u201d; otherwise write the uppercase letter \\u201cN\\u201d.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Fidel I. Schaposnik Massolo, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Shagga and Dolf like to play a game with stones, each of which is either black or white. At the beginning of the game, Dolf arranges all the stones in a single line from left to right. Then, Shagga\\u2019s goal is to reorder the stones so that all the black stones are to the left of all the white stones. To do this, he can choose any pair of stones of different color and swap their positions, paying A coins to Dolf in the process. However, if the two stones whose positions he is swapping are adjacent, Dolf must give him a refund of B coins, meaning that the operation will effectively cost Shagga only A \\u2212 B coins.\\n\\n                    Shagga is not very bright, so he hasn\\u2019t realized yet that he will only loose coins while playing this game. However, he is aware of his limitations, so he knows that if he played optimally he would loose fewer coins than he is loosing right now, with his strategy of randomly choosing the stones he swaps in each movement. Therefore, he wants to know the minimum number of coins he will have to pay Dolf in order to get to the desired arrangement of stones, and is threatening to feed you to the goats if you don\\u2019t help him.\",\n    \"id\": 1744,\n    \"input\": \"The first line contains two integers A and B (0 \\u2264 B < A \\u2264 106 ), representing respectively the cost of swapping two stones and the value of the refund when swapping adjacent stones. The second line contains a non-empty string S of at most 5000 characters. The i-th character of S indicates the color of the i-th stone, from left to right, in the initial arrangement of the stones. The character is either the uppercase letter \\u201cB\\u201d or the uppercase letter \\u201cW\\u201d, indicating respectively a black or a white stone.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Black and White Stones\",\n    \"output\": \"Output a line with an integer representing the minimum number of coins Shagga will have to pay Dolf in order to arrange the stones such that all the black ones are to the left of all the white ones.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Substrings are strings formed by choosing a subset of contiguous characters from a string. This is well known. A little more obscure is the definition of substhreengs. A substhreeng is a substring which complies to the following additional requirements:\\n\\n                    1. It is non-empty, and composed entirely of base 10 digits.\\n\\n                    2. Interpreted in base 10 (allowing extra leading zeros), the resulting integer is a multiple of 3.\\n\\n                    For instance, the string \\u201c130a303\\u201d contains 9 substhreengs: the substhreeng \\u201c3\\u201d three times, the substhreengs \\u201c30\\u201d and \\u201c0\\u201d twice each, and the substhreengs \\u201c303\\u201d and \\u201c03\\u201d once each. The substring \\u201c30a3\\u201d is not a substhreeng because it is not composed entirely of base 10 digits, while the substring \\u201c13\\u201d is not a substhreeng because 13 is not a multiple of 3.\\n\\n                    Notice that two substhreengs are considered different if they are different in length or start at a different position, even if the selected characters are the same.\\n\\n                    Given a string, you are asked to count the number of substhreengs it contains.\",\n    \"id\": 1745,\n    \"input\": \"The input consists of a single line that contains a non-empty string S of at most 10 6 characters. Each character of S is either a digit or a lowercase letter.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Counting Substhreengs\",\n    \"output\": \"Output a line with an integer representing the number of substhreengs contained in S.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leopoldo Taravilse, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"The Queen of Nlogonia has decided to move the capital of the queendom to a brand new city called Sortonia. The design for the city is an N \\u00d7 N grid consisting of N avenues running in the North-South direction and N streets running in the East-West direction. Thus, each avenue intersects every street, and no two streets or two avenues intersect each other.\\n\\n                    As the city is almost finished, it is now time to assign names to its streets and avenues. The people of Nlogonia have already voted on the 2\\u00d7N names that they want to use, but it hasn\\u2019t been decided yet which of those will be used for the streets and which for the avenues. The issue is not so simple, because in each crossing there should be a sign identifying the street and the avenue that intersect there, and the Queen has expressly ordered that the letters in these signs ought to be written in gold encrusted with rubies.\\n\\n                    Being the official Accountant who Counts the Money (ACM), it is your task to find a way to minimize the total number of letters written in the crossings\\u2019 signs, for obvious reasons. Luckily, you have thought of a very clever way to achieve this, which is to use abbreviations for the names of the streets and avenues in the signs. The abbreviation for the name of an avenue (respectively a street) is the shortest prefix of its name which is not a prefix of the name of any other avenue (respectively street). Of course, the abbreviation to be used for each name depends on how the set of 2 \\u00d7 N names is split in two disjoint sets of N names to be used for the streets and avenues.\\n\\n                    For example, consider the case with N = 2 where the four chosen names are \\u201cGAUSS\\u201d, \\u201cGALOIS\\u201d, \\u201cERDOS\\u201d and \\u201cEULER\\u201d. If the streets are assigned the names \\u201cGAUSS\\u201d and \\u201cGALOIS\\u201d, whereas the avenues are assigned the names \\u201cERDOS\\u201d and \\u201cEULER\\u201d, then the abbreviations would be \\u201cGAU\\u201d for \\u201cGAUSS\\u201d, \\u201cGAL\\u201d for \\u201cGALOIS\\u201d, \\u201cER\\u201d for \\u201cERDOS\\u201d and \\u201cEU\\u201d for \\u201cEULER\\u201d. With this splitting, the total number of letters to be written in the signs would be 20, as the four intersections would be labeled by \\u201cGAU|ER\\u201d, \\u201cGAU|EU\\u201d, \\u201cGAL|ER\\u201d and \\u201cGAL|EU\\u201d.\\n\\n                    However, in the example above it would be more convenient to assign the streets the names \\u201cGAUSS\\u201d and \\u201cERDOS\\u201d, leaving \\u201cGALOIS\\u201d and \\u201cEULER\\u201d for the avenues. Then, the abbreviations would be \\u201cG\\u201d for \\u201cGAUSS\\u201d, \\u201cE\\u201d for \\u201cERDOS\\u201d, \\u201cG\\u201d for \\u201cGALOIS\\u201d and \\u201cE\\u201d for \\u201cEULER\\u201d, and the total number of letters to be written in the signs would be just 8 (as the intersections would be labeled by \\u201cG|G\\u201d, \\u201cG|E\\u201d, \\u201cE|G\\u201d and \\u201cE|E\\u201d).\\n\\n                    Fortunately, the set of names that has been chosen is such that no name in it is a prefix of some other name in the set, thereby ensuring that the scheme you propose will always be feasible. Can you calculate the minimum number of letters to be written in the signs if you split the names optimally?\",\n    \"id\": 1746,\n    \"input\": \"The first line contains an integer N (2 \\u2264 N \\u2264 100) representing both the number of streets and the number of avenues in Sortonia. Each of the next 2 \\u00d7 N lines contains a non-empty string of at most 18 uppercase letters, indicating one of the names that have been chosen. You may assume that none of the given strings is a prefix of another string in the input.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Dividing the Names\",\n    \"output\": \"Output a line with an integer representing the minimum total number of letters to be written in the signs, when the splitting of the names of streets and avenues is chosen optimally.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Bruno Junqueira Adami, Universidade de S\\u00e3o Paulo  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Endre has lots of nieces and nephews. Once a year, he takes some of them on a trip to an archipelago where a boat company operates two-way services between some pairs of islands. Since Endre and the children can fly and return directly to or from any of the islands, any trip can be described as a non-empty sequence i1, i2,..., in of islands, such that each pair of consecutive islands ij and ij+1 have a boat service between them. The first and the last islands of a trip may or may not be the same island, and the islands may be visited more than once during the trip. \\n\\n                    Each island in the archipelago produces a different peculiar variety of candy, and greets its visitors by giving each arriving group a fixed number of pieces of candy. Endre does not like candies himself, but the children eat them all almost instantly. To avoid fights, each time the group arrives to an island and receives candies, he evenly distributes them among the children.\\n\\n                    You may wonder how Endre always manages to evenly distribute the candies they receive in each island. Well, the answer is actually very simple. Each year, the travel agency sends him the trip plan (the sequence i1, i2,..., in ) beforehand. Since he wants to travel with as many of his nieces and nephews as possible, he calculates the maximum number k of kids he can take on the trip without violating the rule about the even distribution of candy. Notice that each trip plan uniquely determines the number of kids to take.\\n\\n                    This has been going on for years, and each time Endre ends up taking a different number of kids on the trip. He would like to know how many different numbers of kids he can take on a trip, that is, the number of integers k such that there is a trip plan for which he ends up taking k kids on the trip. Right now Endre is very busy preparing this year\\u2019s trip. Can you help him with the answer?\",\n    \"id\": 1747,\n    \"input\": \"The first line contains two integers I and S (1 \\u2264 I, S \\u2264 104 ), representing respectively the number of islands and the number of boat services between them. Islands are identified with distinct integers from 1 to I. The second line contains I integers C1 , C2 , . . . , CI , where Ci indicates the number of pieces of candy the group receives when arriving at island i (1 \\u2264 Ci \\u2264 105 for i = 1, 2, . . . , I). Each of the next S lines describes a different boat service with two integers A and B (1 \\u2264 A < B \\u2264 I), representing that it is possible to travel from island A to island B and from island B to island A. No two boat services allow to travel between the same pair of islands.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Even Distribution\",\n    \"output\": \"Output a line with an integer representing the number of integers k such that there is a trip plan for which Endre ends up taking k kids on the trip.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"At the early age of 40, Alice and Bob decided to retire. After more than two decades working as examples for networking protocols, game theoretical books and several other texts, they were tired. To remain active, they decided to go into gardening.\\n\\n                    Alice and Bob planted several vegetable plants in a huge field. After finishing, they realized that their plants needed protection from wild animals, so they decided to build a fence around them. The field is represented as the XY plane, and each vegetable plant as a different point in it. A fence is represented as a polygon in the plane. However, not every polygon is a valid fence.\\n\\n                    The fence needs to be a single simple polygon with each of its sides parallel to one of the axes. Of course, the polygon must contain all the points representing vegetable plants. A fence too close to the plants or to itself could make it difficult to walk around, so each side of the polygon needs to be at least 1 millimeter away from all plants and all non-adjacent sides.\\n\\n                    Among all valid fences, Alice and Bob decided to build the one with minimum perimeter, in order to save on fence material. If there are several valid fences with minimum perimeter, they want to build one with minimum area among those, to save time when watering their garden.\\n\\n                    In the following pictures, several different fences are shown in a field with four vegetable plants represented as circles.\\n\\n                    \\n\\n                    Luckily, Alice and Bob\\u2019s background of participating in rigorous scientific projects made them very thorough with their records: they know the exact location of their plants with millimeter precision.Using this data, help them calculate the perimeter and area of an optimal fence.\",\n    \"id\": 1748,\n    \"input\": \"The first line contains an integer V (1 \\u2264 V \\u2264 105 ) representing the number of vegetable plants in Alice and Bob\\u2019s field. Each of the next V lines describes a different vegetable plant with two integers X and Y (1 \\u2264 X, Y \\u2264 108 ), indicating the coordinates of the plant, in millimeters. No two plants have the same location.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Fence The Vegetables\",\n    \"output\": \"Output a line with two integers P and A representing respectively the perimeter in millimeters and the area in squared millimeters of the fence that Alice and Bob want to build.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Guilherme Albuquerque Pinto, Universidade Federal de Juiz de Fora  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"The Andromeda galaxy is expected to collide with our Milky Way in about 3.8 billion years. The collision will probably be a merging of the two galaxies, with no two stars actually colliding. That is because the distance between stars in both galaxies is so huge. Professor Andrew is building a computational model to predict the possible outcomes of the collision and needs your help! A set of points in the two dimensional plane is given, representing stars in a certain region of the already merged galaxies. He does not know which stars came originally from which galaxy; but he knows that, for this region, if two stars came from the same galaxy, then the distance between them is greater than 5 light years. Since every star in this region comes either from Andromeda or from the Milky Way, the professor also knows that the given set of points can be separated into two disjoint subsets, one comprising stars from Andromeda and the other one stars from the Milky Way, both subsets with the property that the minimum distance between two points in the subset is greater than 5 light years. He calls this a good separation, but the bad news is that there may be many different good separations. However, among all possible good separations there is a minimum number of stars a subset must contain, and this is the number your program has to compute.\\n\\n                    For example, the picture illustrates a given set of six points. Professor Andrew cannot tell which stars came from Andromeda, but note that there are four possible good sepa- rations: {{1, 2, 4, 5}, {3, 6}}; {{1, 2, 3, 4}, {5, 6}}; {{1, 4, 5}, {2, 3, 6}}; {{1, 3, 4}, {2, 5, 6}}. Therefore, at least two stars must have come from Andromeda, since this is the minimum number of points a subset may have in a good separation.\",\n    \"id\": 1749,\n    \"input\": \"The first line contains an integer N (1 \\u2264 N \\u2264 5 \\u00d7 104 ) representing the number of points in the set. Each of the next N lines describes a different point with two integers X and Y (1 \\u2264 X, Y \\u2264 5 \\u00d7 105 ), indicating its coordinates, in light years. There are no coincident points, and the set admits at least one good separation.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Galaxy Collision\",\n    \"output\": \"Output a line with an integer representing the minimum number of points a subset may have in a good separation.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Pablo Ariel Heiber, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Cupid\\u2019s job is getting harder, so he is adopting new technologies to help him with his difficult task of matching people into happy couples. He appointed the best programmers in his staff to a new project called Advanced Couples Matching (ACM). For this project, the programmers need to produce an algorithm that takes a set of an even number of N lonely persons and matches them into N/2 couples, such that each person is in exactly one couple.\\n\\n                    Sadly, the data available about each person is limited. In this modern world, using gender, ethnicity, age or nationality as criteria to form couples is not a sensible option, so the programmers can only use data about the internet connection of each candidate. They decided to focus this stage on time zones. People living in closer time zones are more likely to find time to interact with each other. Thus, the programmers decided to create couples so as to minimize the total time difference.\\n\\n                    Each time zone is identified by an integer between \\u221211 and 12, inclusive, representing its difference in hours from a particular time zone called Coordinated Universal Time (or UTC). The time difference of two people living in time zones represented by integers i and j is the minimum between |i \\u2212 j| and 24 \\u2212 |i \\u2212 j|. Given a partition of a set of an even number N of candidates into N/2 couples, its total time difference is the sum of the time difference of each couple.\\n\\n                    You are asked to write a program that receives as input the time zones of a set of N candidates. The output of the program must be the minimum total time difference among all possible partitions of the set into couples.\",\n    \"id\": 1750,\n    \"input\": \"The first line contains an even integer N (2 \\u2264 N \\u2264 1000) representing the number of candidates to be coupled. The second line contains N integers T1 , T2 , . . . , TN (\\u221211 \\u2264 Ti \\u2264 12 for i = 1, 2, . . . , N ) indicating the time zones of the candidates.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Help Cupid\",\n    \"output\": \"Output a line with an integer representing the minimum total time difference among all possible partitions of the set of candidates into couples.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, Universidade Tecnol\\u00f3gica Federal do Paran\\u00e1  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Who would guess? You climbed the highest mountain of your city. You are so excited about it that you need to tell it to all your friends, and you decided to start with those that are trying to be exactly where you are at this precise moment.\\n\\n                    The mountain has N landmarks, and one of them is the top of the mountain, where you are now. Each of your friends that is climbing the mountain is in some other landmark, and you want to visit all of them. There are tracks that connect pairs of landmarks in such a way that there exists exactly one route (that is, a sequence of consecutive tracks) that goes down from the top of the mountain to each other landmark. To visit two friends in two different landmarks, you may have to go down some tracks, climb others, and go down others again. Going down the mountain is \\u201ceasy\\u201d, so you do not consume energy when you go down through the tracks. But each time you climb a track, you consume a certain amount of energy. After visiting all your friends, you can just sit and rest.\\n\\n                    For example, consider the mountain in the picture below, which has N = 6 landmarks. If your friends are in landmarks 5 and 2, you can visit both if you follow the sequence of landmarks 1 \\u2193 2 \\u2191 1 \\u2193 3 \\u2193 5, where a \\u2193 b means that you go down a track from landmark a to landmark b, and a \\u2191 b means that you climb a track from landmark a to landmark b. Another possible sequence is 1 \\u2193 3 \\u2193 5 \\u2191 3 \\u2191 1 \\u2193 2.\\n\\n                    \\n\\n                    Given the tracks between the landmarks, the energy required to climb them, and the landmarks where your friends are, compute the minimum total amount of energy required to visit all your friends from the top of the mountain.\",\n    \"id\": 1751,\n    \"input\": \"The first line contains two integers N and F (1 \\u2264 F < N \\u2264 105 ), representing respectively the number of landmarks and the number of your friends that are climbing the mountain. Landmarks are identified with distinct integers from 1 to N , being 1 the top of the mountain, where you initially are. Each of the next N \\u2212 1 lines describes a different track with three integers A, B and C, indicating that there is a track from A to B that goes down and requires an amount C of energy to be climbed (1 \\u2264 A \\u2264 N , 2 \\u2264 B \\u2264 N , A = B and 1 \\u2264 C \\u2264 100). The next line contains F different integers L1 , L2 , . . . , LF (2 \\u2264 Li \\u2264 N for i = 1, 2, . . . , F ) representing the landmarks where your friends are. You may assume that the tracks between landmarks are such that there exists exactly one route that goes down from the top of the mountain to each other landmark.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Intrepid Climber\",\n    \"output\": \"Output a line with an integer representing the minimum total amount of energy required to visit all your friends starting from the top of the mountain.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Fidel I. Schaposnik Massolo, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"The kingdom of Quadradonia is divided into provinces forming a grid-like pattern of R rows and C columns. Legend has it many wonderful things await discovery in some of the provinces, although it\\u2019s unclear if you can actually find the elusive solid form of water stories call \\u201cice\\u201d, or if it\\u2019s just dragons.\\n\\n                    You are planning a trip through the kingdom to find out, but the roads are dangerous so you have to be very careful. To go from one province to another you would like to use the convenient escorted carriage system managed by the Interprovincial Communication & Peregrination Company (ICPC). In each province, the ICPC provides a heavily guarded carriage for you to travel to any other province in a rectangle containing it, at the same flat rate (which may however vary from one province to another). More formally, at the province in the i-th row and the j-th column you can rent an escorted carriage for a cost of Vij , allowing you to safely travel to any province at most Rij rows away from row i, and at most Cij columns away from column j (that is, having row number i' and column number j' with |i \\u2212 i' | \\u2264 Rij and |j \\u2212 j' | \\u2264 Cij ).\\n\\n                    In your journey you want to visit N provinces p1 , p2 , . . . , pN , in that order. Wandering around looking for adventures is an expensive business and your budget is limited, so you would like to spend as little as possible in transportation. Therefore, you would like to calculate the minimum cost of each leg of your trip, that is, the minimum cost of the carriages you have to rent to go from province pk to province pk+1 , for k = 1, 2, . . . , N \\u2212 1.\",\n    \"id\": 1752,\n    \"input\": \"The first line contains three integers R, C and N , representing respectively the number of rows, the number of columns and the number of provinces you want to visit (1 \\u2264 R, C \\u2264 500 and 2 \\u2264 N \\u2264 5). Rows are numbered from 1 to R and columns are numbered from 1 to C. The next 3 \\u00d7 R lines describe ICPC\\u2019s escorted carriage system by means of three groups of R lines each, with each line containing C integers. In the i-th line of the first group, the j-th number represents the cost Vij of renting a carriage in the province in row i and column j, while the corresponding numbers in the second and third group represent respectively Rij and Cij (1 \\u2264 Vij \\u2264 1000, 0 \\u2264 Rij \\u2264 R and 0 \\u2264 Cij \\u2264 C, for i = 1, 2, . . . , R and j = 1, 2, . . . , C). The next N lines describe the provinces p1 , p2 , . . . , pN you want to visit, in the same order you want to visit them. The k-th of these lines describes the province pk with two integers Ik and Jk , indicating that pk is in row Ik and column Jk (1 \\u2264 Ik \\u2264 R and 1 \\u2264 Jk \\u2264 C for k = 1, 2, . . . , N ).\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Journey Through The Kingdom\",\n    \"output\": \"Output a line with N \\u2212 1 integers representing the minimum cost of each leg of your trip, or the value \\u22121 if it is impossible to travel using ICPC\\u2019s escorted carriage system for that leg. More precisely, for k = 1, 2, . . . , N \\u2212 1, the k-th number must be the minimum cost of the carriages you have to rent to go from province pk to province pk+1 using ICPC\\u2019s escorted carriage system, or the value \\u22121 if it is impossible to travel from province pk to province pk+1 with this system.\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"By Jorge Enrique Moreira Broche, Universidad Central \\u201cMarta Abreu\\u201d de Las Villas  Cuba\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Every month King Arthur celebrates a High Council meeting. The K knights attending these meetings are known as The Knights of the Round Table, probably because they sit at a huge round oak table having K seats and a big throne with a sword and a stone carved in its back.\\n\\n                    For today\\u2019s meeting, each knight was given a number between 1 and K that indicates the seat he must take during the meeting. Seats are numbered clockwise from 1 to K, seat numbered 1 being the first to the left of the big throne. Obviously, the king himself was not given a number because he sits on the throne. King Arthur\\u2019s squire made sure that no two knights got the same number so there should be no problems.\\n\\n                    As usual, the king was the first to enter the council room today. According to the protocol rules, he sat on his throne and prepared to receive the K knights that must enter and sit one by one. After the first D knights arrived, the king noted that some of them could have sat on wrong seats, because they were distracted talking about who would win the next tournament. What a mess! King Arthur\\u2019s squire promptly intervened and gave instructions to the remaining K \\u2212 D knights. Each of them must enter the council room and try to sit on his rightful seat; if his seat is already occupied, the knight must walk clockwise around the table and sit on the first unoccupied seat he finds. Thus, the final distribution of knights around the table depends on the order in which they enter the room.\\n\\n                    King Arthur is now interested in knowing the number of distinct distributions of the K knights around the table given the seats occupied by the first D knights. Two distributions are considered distinct if there is at least one knight who sits on different seats in both distributions.\\n\\n                    As the Royal Advisor in Combinatorics and other Mathematics (or Royal ACM) the task is assigned to you. You need to provide an answer within five hours at risk of loosing the king\\u2019s favor. Hurry up!\",\n    \"id\": 1753,\n    \"input\": \"The first line contains two integers K (1 \\u2264 K \\u2264 106) and D (1 \\u2264 D \\u2264 105), representing respectively the number of knights and the number of distracted knights. Each of the next D lines describes a different distracted knight with two integers A and B (1 \\u2264 A, B \\u2264 K), indicating that the knight who was assigned seat A actually sat on seat B. It is granted that no two knights sat on the same seat.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Knights Of The Round Table\",\n    \"output\": \"Output a line with an integer representing the number of distinct distributions of the K knights around the table. This number can be rather large so output the remainder of dividing it by 109 + 7\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Victor Marcilio Peixoto, UNIVASF  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In an attempt to stop Super Buu, Goten and Trunks entered the Time Room to train. Time passes faster inside this room (1 second outside the room might be equivalent to seconds, minutes, hours or even days inside the room). Goten and Trunks need X seconds to finish training, however Super Buu has become impatient and ordered Mr. Picollo to take him to his opponents immediately.\\n\\n                    Mr. Picollo used his telephatic powers to alert the boys (who had done nothing so far but playing around the room) and they started training immediately.\\n\\n                    Mr. Picollo did his best to delay the path to the Time Room, taking Y to do so.\\n\\n                    Let K be the number of seconds that passes inside the room during 1 second outside it. Find the smallest value for K that'll give the boys enough time to finish their training before Super Buu's arrival. Consider that the boys have plenty Senzu Beans therefore they will never need to stop training to rest and the training ends when Super Buu get through the entrance door.\",\n    \"id\": 1754,\n    \"input\": \"The first input line contains an integer T (1 \\u2264 T \\u2264 100), the number of test cases. The following T lines contain 2 integers each: X (1 \\u2264 X \\u2264 1015) e Y (1 \\u2264 Y \\u2264 105), the time needed to finish the training and Super Buu's path time, respectively.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"The Time Room\",\n    \"output\": \"For each test case output a single line containing the integer K.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Victor Marcilio Peixoto, UNIVASF  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"J\\u00f5aozinho's father asked him to shop for a certain ingredient and gave him the following instructions:\\n\\n                    1 - You may choose any brand as long as you buy as many units as possible.\\n\\n                    2 - Don't come back empty-handed (buy at least one product).\\n\\n                    3 - Don't bring me products from different brands.\\n\\n                    4 - If you respect the first 3 constraints the change is yours.\\n\\n                    Jo\\u00e3ozinho is not that good in math and asked you to help him choose the brand that would maximize the change, respecting the constraints. You don't like lazy people and promissed Jo\\u00e3ozinho that you would build him a program to solve part of his problem: finding the best change (without mentioning which brand would lead to such change).\",\n    \"id\": 1755,\n    \"input\": \"The first line of input contains an integer T (1 \\u2264 T \\u2264 2000), the number of test cases.\\n\\n                    Each test case has 2 lines. The first line has the integeres D (10 \\u2264 D \\u2264 500) and N ( 2 \\u2264 N \\u2264 300), indicating the amount of money Jo\\u00e3ozinho took to the market and the number of different brands available (you may assume that the store has enough stock to supply any demand), respectively.\\n\\n                    The second line contains N floating-point numbers pi, representing the cost of one unit manufactured by brand bi. You may assume that the any price will have at most 2 digits after the decimal point.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"The Change\",\n    \"output\": \"For each test case print a single line containing a floating-point number with 2 digits after the decimal point: The largest change that Jo\\u00e3ozinho can earn.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Victor Marcilio Peixoto, UNIVASF  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Some computer science courses are too much theorical and sometimes boring. In an attempt to raise the students' interest in some topics, the Artificial Intelligence professor, always when possible, propose a challenging contemplating the topics seen in class that day.\\n\\n                    Today's lecture was about genetic algorithms and the professor explained the following procedure:\\n\\n                    From 2 individuals (two sequences of N bits: x0x1...xN-1) A and B, we choose a cut position Y ( 1 \\u2264 Y < N) and the crossover process happens, creating 2 new individuals: the first one is the concatenation of bits x0...xY-1 from individual A followed by bits xY..xN-1 from individual B, the second one is the concatenation of bits x0...xY-1 from individual B followed by bits xY..xN-1 from individual A.\\n\\n                    The following image shows the result of a crossover with Y = 5.\\n\\n                    \\n\\n                    After the crossover, each bit from the brand-new individuals may suffer mutation (change its value) according to a specified mutation probability P.\\n\\n                    The challenge's statement left by the professor was the following:\\n\\n                    \\\"Write a program that takes as input 3 individuals, the cutting position and the mutation probability. The program must calculate the probability of obtaining the third individual as a result of a crossover between the other two.\\\"\\n\\n\",\n    \"id\": 1756,\n    \"input\": \"The first line of input contains an integer T (1 \\u2264 T \\u2264 50), the number of test cases.\\n\\n                    Each test case takes 5 lines.\\n\\n                    The first line contains an integer N (2 \\u2264 N \\u2264 8), the number of bits in each individual.\\n\\n                    The second line contains an integer Y (1 \\u2264 Y < N) followed by a floating-point number P (0 \\u2264 P \\u2264 1), the cut position and the mutation probability, respectively.\\n\\n                    The third line contains the first individual to be crossedover.\\n\\n                    The fourth line contains the second individual to be crossedover.\\n\\n                    The fifth line contains the individual that will be compared to the possible crossover results.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Genetic Algorithm\",\n    \"output\": \"For each test case output a single line containing the answer with 7 digits after the decimal point.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Victor Marcilio Peixoto, UNIVASF  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Donkey Kong has unfinished business around the country and since he is in hurry to solve them, he opted to move through the UBTS (Unified Barrel Transportation System). \\n\\n                    \\n\\n                    Each city has a single barrel. This barrel can aim and fire to any other city's barrel \\\"the passenger\\\" wish.\\n\\n                    Donkey wants to make a discreet trip and asked your help to find a set of routes that minimizes the number of times he will be seen in the shots.\\n\\n                    The set of routes Donkey wants to find will depend on how the clouds are positioned in a given moment. As shown in the picture above, the barrels are located above the clouds. Donkey's plan is to use the clouds to hide his path. To assist you in your task, Donkey borrowed you a radar that shows which routes can be seen from groudn in a given moment.\\n\\n                    Your task is to tell Donkey what is the least number of visible routes that he will need to take to assure that he will be able to move to any city he wish.\\n\\n                    Each route is considered a single time in the counting, despite the direction it is used. In other words, if route A-B is visible and he takes this route 10 times, it still counts as a single route.\",\n    \"id\": 1757,\n    \"input\": \"The first input line containts the number of test cases T (1 \\u2264 T \\u2264 100).\\n\\n                    The first line of each test case contains the integers  N (1 \\u2264 N \\u2264 100) and V (0 \\u2264 V < N2/2), the number of cities and the number of visible routes, respectively.\\n\\n                    The next V lines will contain the integers Ai e Bi (Ai \\u2260 Bi; 0 \\u2264 Ai, Bi < N) , indicating that the route between the barrels of cities Ai and Bi\\u200b are currently visible from the ground. There pair Ai, Bi will never appear more than once per test case.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Barrel Travel\",\n    \"output\": \"For each test case output a single line containing the integer that represent the least number of visible routes that Donkey will have to take.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Victor Marcilio Peixoto, UNIVASF  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Professor Charles teaches in a school whose evalutation criteria is the following:\\n\\n                    \\n\\n                    average \\u2265 7.0 = PASS\\n\\n                    4.0 \\u2264 average < 7.0 = FINAL EXAM\\n\\n                    average < 4.0 = FAIL\\n\\n                    \\n\\n                    Professor Charles decided to round the student grades based on their perfomance and the following rules:\\n\\n                    1 - If the result of a rounding is lower than the original grade, the original grade will be final result. \\n\\n                    2 - Roudings that change the student final verdict (PASS, FINAL, FAIL) are not allowed.\\n\\n                    3 - Students that passed or are able to do the final exam will have their average replace by the highest grade obtained in the tests.\\n\\n                    4 - Students that failed were lazy and will not receive any bonus points.\\n\\n                    Rule 3 must be applied always when possible, as long as it does not violate rules 1 or 2.\\n\\n                    Write a program that takes as input the grades obtained by the students in each test and calcuate their average based on the criteria stablished by Professor Charles.\",\n    \"id\": 1758,\n    \"input\": \"The first input line contains the integer T ( 1 \\u2264 T \\u2264 5000), the number of test cases.\\n\\n                    The first line of a test cases contains the integers P (2 \\u2264 P \\u2264 5) and N (2 \\u2264 N \\u2264 50), indicating the number of exams the professor applied and the number of students enrolled in the course, respectively.\\n\\n                    The following N lines will have P floating point numbers (with 1 number after decimal point) each, indicating the grades (0.0 \\u2264 grade \\u2264 10.0) obtained by the ith student in each of the exams.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Bonus Grade Points\",\n    \"output\": \"For each student print a single line containing the average obtained by him after the Professor Charles' rounding rules. The average must contain 2 digits after decimal point.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\r\\n                    By Lucas Campesatto, URI Online Judge  Brazil\\r\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\r\\n                    Santa Claus is playing with his elves to entertain them during the Christmas Eve. The game consists of the elves writing numbers on pieces of paper and place on the cap of Santa Claus. After all finished to put the numbers, Santa draws a number and that number is how many \\\"Ho\\\" he should say.\\r\\n\\r\\n                        Your job is to help Santa Claus by making a problem that shows all the \\\"Ho\\\" that he should speak given the number drawn.\\r\\n\\r\",\n    \"id\": 1759,\n    \"input\": \"\\r\\n                    The input consists of a single integer N (0 < N \\u2264 106) representing how many \\\"Ho\\\" will be spoken by Santa.\\r\\n\\r\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Ho Ho Ho\",\n    \"output\": \"\\r\\n                    The output consists of all \\\"Ho\\\" that Santa should speak separated by a space. After the last \\\"Ho\\\" you must present an \\\"!\\\" ending the program.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Michele Selivon, URI  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Lapland is a quiet and very cold place. There is not much to do there after Christmas (where the elves work diligently in Santa's toy factory). The marasmus has made the elf Tod review research about the only thing that could be seen in Lapland: Snow.\\n                    In their studies, Tod found very interesting things about the snowflakes. How did incessant search the sites for information about snowflakes, eventually finding links that talk about a theory called Koch Snowflake.\\n\\n                    Tod found the very interesting theory because the Koch snowflake is a fractal that is obtained from an equilateral triangle. Then divide each of its sides into three equal parts and added, from each middle section, a new equilateral triangle of side equal to 1/3 of the measure on the side of the initial triangle.\\n\\n                    At each iteration fractal perimeter and after n iterations increases, it tends to infinity but remains smaller area than the area of the circle surrounding the original triangle. Thus, an infinitely long line is surrounded by a finite area.\\n\\n                    Based on this information and knowing that the area of a triangle is equal to l2 \\u221a3 /4 (where l is equal to measure the length of a side of the equilateral triangle) your task is to help Tod find the area of a Koch snowflake based on the measurement of the length of side of the equilateral triangle given.\",\n    \"id\": 1760,\n    \"input\": \"The input has several test cases and consists of an integer l (1mm \\u2264 l \\u2264 1000mm) that represents a measure of the length of one side of the equilateral triangle. The end of input is determined by EOF.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Koch Snowflake\",\n    \"output\": \"The output should show the value Koch Snowflake area with two decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Michele Selivon, URI Online Judge  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"This Christmas, Santa Claus appointed some of his most dedicated elves to decorate the yard in the present manufacturing at the North Pole. The yard has several pine trees of various sizes. Santa Claus instructed the elves to decorate a tree with string of lights, their size should be 5 times the size of the tree.\\n\\n                    To find the height of each tree, Santa Claus gave them an old theodolite (instrument used to measure angles) and ordered them to use trigonometric concepts to find the height of each tree.\\n\\n                    Your task is to help the elves to find a way to calculate the amount of string of lights needed for each tree.\\n\\n                    Consider for this challenge that the theodolite is positioned at the height of each elf and that this point needs to be computed. The theodolite inform values in degrees. In this problem consider PI as 3.141592654.\",\n    \"id\": 1761,\n    \"input\": \"The input is composed by several test cases. Each test case consists of a double value A that is the angle calculated by the theodolite (1.00 < A < 90.00), a value double B (1 \\u2264 B \\u2264 100) corresponding to the distance between the theodolite and the tree and a value double C (0.50 \\u2264 C \\u2264 1.50) which is the height in metres of the elf who is measuring the angle. The end of input is determined by EOF.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Christmas Decorations\",\n    \"output\": \"You should show the amount string of lights needed to adorn each tree. Note: Decimal values should be rounded to 2 decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Julio Cesar Ceron, URI Oline Judge  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Every year during Christmas season, Santa Claus has the important and difficult task of delivering thousands of gifts to all the children around the world. What no one knows is that he developed an effective way to be able to deliver all the presents before Christmas is over, and that way is a plethora of sleds around the globe simultaneously delivering all the gifts. This way is much easier to complete deliveries, but because there is an enormous number of gifts to be delivered, Santa always has difficulties in knowing how many sleds he will provide for each lot of gifts. Santa has a list with the number of gifts each batch containing the present name and its weight, and he also knows the carrying capacity of each sled. Knowing this information, every year, Santa asks help from a student to develop a program that can help him know how many sleds will be required for each lot.\\n\\n                    Your task is to develop a program that stores a number of gifts of a lot, each gift is stored with the name of the toy and its respective weight in Kilograms (consider two digits after decimal point), after that you will have the capacity of each sled, and after you will have the order list wich contains the name of the gift and its amount, done that you should calculate the total weight of the gift and determine how many sleds will be required to make the delivery.\",\n    \"id\": 1762,\n    \"input\": \"The first line contains an integer Y indicating the amount of test cases, followed by an integer T (0 < T <1000) corresponding to the number of gifts in the batch, after you must readf the gift list, a string N with the gift name and a floating point value K (0 < K \\u2264 100) that corresponds to the weight in kilograms of it, the name and weight will be on separate lines. After entering all T gifts the next value is a floating point value M (0 < M \\u2264 100) corresponding to the sled carrying capacity in kilograms, consider two digits after decimal point. After inserting the M value the next part is the list containing X applications as follows, a string P corresponding to the gift name, the next line an integer value J (0 < J \\u2264 100)  representing the quantity of each gift. This list just ends when a \\\"-\\\" is read for the gift name and \\\"0\\\" for the gift weight.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Sleds of Santa Claus\",\n    \"output\": \"In the first line of output should be informed of the total weight of all gift in the wish list, with two places after the decimal point. In the second line will be told the number of sleds necessary to get the gifts on the wish list. If inserted in the request list a gift that is not in the batch list of toys, the following message should be printed \\u201cNAO LISTADO: \\u201d followed by this name.\\n                    Leave a blank line after printing each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Jean Bez, URI Online Judge  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Nicholas is already pretty tired and his memory is not the same. You, as his navigator, should help Santa to shout the phrase \\\"Merry Christmas\\\" in the correct language according to each country.\\n\\n                    As you are a very smart elf, you have already created a small app on your mobile (yes, elves have cell phones) that will let you know the phrase in the correct language according to the name of the country. The sled is modern (it was upgraded in 2000), thus it displays the name of the current country in the navigation panel.\\n\\n                    \\n\\n                    The data you included in your app was:\\n\\n                    \\nbrasil              Feliz Natal!\\nalemanha            Frohliche Weihnachten!\\naustria             Frohe Weihnacht!\\ncoreia              Chuk Sung Tan!\\nespanha             Feliz Navidad!\\ngrecia              Kala Christougena!\\nestados-unidos      Merry Christmas!\\ninglaterra          Merry Christmas!\\naustralia           Merry Christmas!\\nportugal            Feliz Natal!\\nsuecia              God Jul!\\nturquia             Mutlu Noeller\\nargentina           Feliz Navidad!\\nchile               Feliz Navidad!\\nmexico              Feliz Navidad!\\nantardida           Merry Christmas!\\ncanada              Merry Christmas!\\nirlanda             Nollaig Shona Dhuit!\\nbelgica             Zalig Kerstfeest!\\nitalia              Buon Natale!\\nlibia               Buon Natale!\\nsiria               Milad Mubarak!\\nmarrocos            Milad Mubarak!\\njapao               Merii Kurisumasu!\\n\\n                    To avoid the risk of informing the wrong sentence to Santa you decided to test your application\\u00a0a few more times.\",\n    \"id\": 1763,\n    \"input\": \"You will test your application with different names of countries, simulating the data reported by the navigation pane present on the sleigh.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Santa's Translator\",\n    \"output\": \"Your application should display on the screen the words in the correct language. If it is not registered, you should display the message \\\"--- NOT FOUND ---\\\" so that after the tests you can complete the database.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Neilor Tonin, URI Online Judge  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Before Santa Claus begin his travels in Brazil to deliver Christmas presents, he asked you to help him drawing a map with all the cities that he should visit. Follows the rule to draw this map: the sum of all routes (distances between two cities) existing on the map should be as small as possible and must be possible to arrive in any destination from any origin. Claus does not mind to go to a particular city more than once, as long as it uses only the routes drawn on the map.\",\n    \"id\": 1764,\n    \"input\": \"The input file contains several test cases. Each test case starts with two numbers M (2 \\u2264 M < 40000) and N (1 \\u2264 N  < 50000), the number of cities and the number of roads respectively. Input is terminated by M = N = 0. Then follow N integer triples X (0 \\u2264 X), Y (Y < M) and Z (1 \\u2264 Z \\u2264 999), pecifying that there will be a bidirectional route between X and Y with Z kilometers, considering that X \\u2260 Y and the total sum of all routes in each map is less than 231.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Itinerary of Santa Claus\",\n    \"output\": \"For each test case, print a single integer indicating the sum of all distances or routes of your map.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Campesatto, URI Online Judge  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Jorge was a very determined guy to create sweet Christmas trapezoids. The trapezoids are made of yarn candy toffee and filled with ice cream. Baked after they assume a perfect two-dimensional shape of a trapezium. By default, all trapezoids have the same height, 5cm, and their bases can change size depending on the availability of taffy that Jorge has in inventory. Some day Jorge was curious to know how much ice cream was using for each trapezoid size that he did, so he called you to help him.\\n\\n                    You should make a program that given the different sizes of trapezoids that will be made, how many trapezoids that size will be produced and measurements of the bases of toffee, you tell how many cm2 of ice cream will be used for each size.\",\n    \"id\": 1765,\n    \"input\": \"The input consists of several test cases. The first line of each test case begins with an integer T (0 \\u2264 T \\u2264 50) indicating how many different sizes will be in that batch. The following T lines contain 3 values, an integer Q (0 \\u2264 Q \\u2264 50) indicating the amount of trapezoids made with the measures A and B (0 \\u2264 A, B \\u2264 50) both double precision preceded by Q. The input ends when T is zero.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Christmas Trapeziums\",\n    \"output\": \"For each test case present the value of ice cream used, in cm2 for each size. After each test case, print a blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Jean Bez, URI Online Judge  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"The stable where the reindeers were was intentionally opened by the Dark Elf allowing each of them to run and fly freely around the Santa Claus' factory, causing the greatest disorder. The elves are desperately trying to do everything possible to let the sled ready for departure. You are responsible for putting each reindeer in its correct position so that it is captured by one of the other elves.\\n\\n                    \\n\\n                    You know the stable follows an organization based on the order that the reindeers will occupy the sled. Thus, at the time of departure all of them can be easily positioned. Unlike what you may think, the reindeers are placed in a single queue ahead in the sled. Not all reindeers in the stable are used on each trip, that depends on the total load of the sled.\\n\\n                    You got the list with all the characteristics that are used to determine the reindeer order. They must first be sorted by the descending order of weight. If two or more have the same weight they should be sorted in ascending order by age and height, if the tie still remains, order by name.\\n\\n                    Using your last generation magical computer you want to write a program to order the reindeers according to informed characteristics and display only the exact number of reindeers that will be used by the sled (in an orderly manner).\",\n    \"id\": 1766,\n    \"input\": \"This problem has several test cases. The first line of the input contains an integer T (1 \\u2264 T \\u2264 105) that indicates the number of test cases that follows. The first line of each test case contains two integers N and M (5 \\u2264 N, M \\u2264 103) respectively indicating the total number of reindeers and the number of reindeers that will pull the sleigh. In the next lines it will be informed an string S followed by two integers W (1 \\u2264 W \\u2264 300) and A (1 \\u2264 A \\u2264 300) and a floating point number H (0.00 \\u2264 H \\u2264 3.00), indicating the name, weight, age and height of each raindeer.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Dark Elf\",\n    \"output\": \"For each test case you should print the message \\\"CENARIO {i}\\\" where i indicates the current test case followed by the position and the name of each of the M reindeer that will pull the sleigh, ordered as described above.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Neilor Tonin, URI Online Judge  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Santa Claus are ready to start his trips to deliver Christmas presents. The SBC (Brazilian Society of Carriers) determined that the maximum weight of each bag with gifts can be up to 50 kg, preserving the elves, who are Santa Claus helpers of any injury in the back when are carrying the sleigh and also so that Santa Claus does not hurt himself when is delivering the gifts.\\n\\n                    Once all the toys are grouped into packages, your task is help with a program that join the maximum possible of toys within the weight limit of 50 kgs. In the sequence, Y-URI which is the chief of elfs, will put this bag in the sled and this way Noel can go on with his trip.\",\n    \"id\": 1767,\n    \"input\": \"The input contain many test cases. The first line contains an integer N that is the number of test cases or the number of Santa Claus trips. Each trip begin with an integer Pac (1 < Pac < 100) that indicates the amount of packages available to this trip. The next Pac lines will contain two integer numbers qt (1 \\u2264 qt < 300) and weight (1 \\u2264 weight  \\u2264 50) that are respectively the amount of toys and the weight of each package, separated by a blank line.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Santa Claus Bag\",\n    \"output\": \"For each test case, your program should print three lines, with corresponding message in portuguese, as shown below, followed by a blank line. The first one must contain the amount of toys that Y-URI will load up the sleigh. The second line contains the total weight of toys. The last line will contain the amount of packets left over for a future trip. In the second test case below, for example, 106 toys were selected for the trip, grouped into packs with 24, 2, 3, 4, 5 and 8 kg for a total of 46 pounds.\\n\\t\\t\\t\\t\\tFor the greater amount of toy selected, will have just one amount of weight or left packages possible.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Neilor Tonin, URI Online Judge Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Children do love draw christmas trees and you challenged some of them to draw trees of many sizes just with the asterisk \\\"*\\\" char.\\n\\nThe rule is simple: from bottom to top, the trunk of the tree consists of one line with three asterisks and one line with one asterisk. Then comes the rest of the tree, with each row starting with the size ordered by you and decreasing every two caracter, until you reach the top of the tree that have just one asterisk. Note that for this to work, will only be allowed odd sizes to the trees.\",\n    \"id\": 1768,\n    \"input\": \"The input contains many test cases and ends with EOF. Each test case consist of an integer number N (2 < N < 100).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Christmas Tree\",\n    \"output\": \"For each test case, print a tree as specified above and as the example below, with a blank line after each tree.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Alexandre Campos, UNIUBE  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In Brazil, the equivalent to Social Security Number is usually called CPF. It is composed by 11 digits and the two lasts are function of the nine previous. In this way, if a person informs a CPF, by mistake or on purpose, it is possible to find out. Let us introduce some notation. Let a CPF be\\r\\n\\r\\na1a2a3.a4a5a6.a7a8a9-b1b2\\r\\n\\r\\nTo get\\u00a0b1, one can multiply\\u00a0a1\\u00a0by 1,\\u00a0a2\\u00a0by 2,\\u00a0a3\\u00a0by 3, so on, up to a9\\u00a0by 9 and sum these results. Then,\\u00a0b1\\u00a0is the remaining of this number when divided by 11, or 0 in case the remaining is 10.\\r\\n\\r\\nAnalogous, to get\\u00a0b2, one can\\u00a0multiply\\u00a0a1\\u00a0by 9,\\u00a0a2\\u00a0by 8,\\u00a0a3\\u00a0by 7, so on, up to a9\\u00a0by 1 and sum these results. Then,\\u00a0b2\\u00a0is the remaining of this number when divided by 11, or 0 in case the remaining is 10.\\r\\n\\r\\nGiven a CPF number, you have to tell whether it is valid or not.\\r\",\n    \"id\": 1769,\n    \"input\": \"The input is composed by an unknown number of CPF numbers, not more than 10000 cases. Each line has a CPF in the form\\r\\n\\r\\nd1d2d3.d4d5d6.d7d8d9-d1d2\\r\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"SSN 1\",\n    \"output\": \"If the given CPF is valid, print \\\"CPF valido\\\". Otherwise, print \\\"CPF invalido\\\".\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Your favorite band just released a new album, and to make this experience even more exciting you decided to listen to the songs in a random order. To do that you wrote an algorithm that would make a playlist with K songs of the album. The problem is that your algorithm is not very effective in the way the songs are chosen, in a way that some songs could be played more than once before other songs would be played for the first time.\\n\\n                    Given the number of songs of the album, the duration of each song, and the playlist generated by your algorithm, say how long it would take for you to listen to all the songs of the album at least once, if that is possible.\",\n    \"id\": 1770,\n    \"input\": \"There will be at most 150 test cases. Each test case starts with two integers M and K, indicating the number of songs in the album and the number of songs in your playlist (1 \\u2264 M \\u2264 100, 1 \\u2264 K \\u2264 1000).\\n\\n                    Following there will be M integers mi, indicating that the i-th song of the album has mi minutes (1 \\u2264 mi \\u2264 300, for each 1 \\u2264 i \\u2264 M).\\n\\n                    Following there will be K integers ki, indicating that the i-th song of the playlist is the track of number ki (1 \\u2264 ki \\u2264 M, for each 1 \\u2264 i \\u2264 K).\\n\\n                    The input ends with end of file (EOF).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Shuffle\",\n    \"output\": \"For each test case print one line, containing one integer, indicating how long it would take for you to listen to all the songs of the album at least once. If this is not possible, print -1.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Victor Marcilio Peixoto, UNIVASF  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You asked the trainee to make a program to generate bingo cards randomly. The trainee said he knew the bingo rules and dismissed your explanations.\\n\\n                    \\n\\n                    Guess what was the income of such hurry? The trainee simply generated 24 distinct random numbers (in the interval [1, 75] for each card, without respecting the interval each number belonged to (B -> [1, 15], I -> [16, 30], ...)).\\n\\n                    You decided to create a program do judge the cards generated by the trainee\\u2019s program.\",\n    \"id\": 1771,\n    \"input\": \"Each test case contains a single line with 24 space separated integers. For the Picture card, the input would be the sequence: 15, 28, 36, 49, 65, 13, ..., 53, 69. The Input ends with EOF.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Random Bingo Cards\",\n    \"output\": \"For each analyzed card print a single line containing one of the three possible verdicts: \\u201cOK\\u201d if the card is valid or \\u201cRECICLAVEL\\u201d if it is possible to find some permutation that would make the card valid or \\u201cDESCARTAVEL\\u201d in case such permutation doesn\\u2019t exist.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Victor Marcilio Peixoto, UNIVASF  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"To find out if his students really understood the lecture about binary representation of integer numbers, Teacher Marcelo came up with the following problem:\\n\\n                    \\u201cGiven an integer number and a sequence of bit permutations for its binary representation, find 3 numbers: the resulting number after all permutations, the maximum and minimum values found during the permutations\\u201d.\\n\\n                    Teacher Marcelo promised one extra point to whoever solved the problem first. Since he never did such thing before (giving extra points), you rushed to solve the problem as quick as you could, fearing the Professor could change his mind.\\n\\n\",\n    \"id\": 1772,\n    \"input\": \"The first line of a test case contains the integers N (0 \\u2264 N \\u2264 232 - 1) and K (1 \\u2264 K \\u2264 100), representing the starting number and the number of permutations, respectively. Each of the following K lines will contain two space separated integers A and B (0 \\u2264 A, B \\u2264 31), indicating that bits A and B must be swapped. Input ends when N = K = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Bit Shuffling\",\n    \"output\": \"For each test case print 3 integers separated by space: RES MAX MIN, where RES is the number N after all permutations, MIN and MAX are, respectively, the smallest and greatest intermediate value found in the permutation process. (MAX and MIN must consider the first and last value N assumed as well.)\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"You are locked inside a castle with N rooms and M corridors. The rooms are numbered with numbers between 1 and N, and you are initially at the room number 1. Each of the M corridors connects two distinct rooms. To try to leave you decided to visit all of the N rooms of the castle.\\n\\n                    All of the rooms, with exception of the room number 1 where you are, need a key to be visited. You had luck to find some notes in the ground, saying where all of these keys are. For exemple, be S and D two distinct rooms, to visit the room D you need to first visit the room S that has the key to open the room S.\\n\\n                    Given the information about the rooms, corridors and the key locations, find out if it's possible to visit all of the rooms of the castle.\",\n    \"id\": 1773,\n    \"input\": \"There will be at most 70 test cases. Each test case starts with two integers N and M, indicating the number of rooms and corridors of the castle (2 \\u2264 N \\u2264 103, 1 \\u2264 M \\u2264 104).\\n\\n                    Following there will be M lines containing two integers A and B each, indicating that there's a corridor that connects the room A and B, which can be traversed in both directions (1 \\u2264 A, B \\u2264 N).\\n\\n                    Following there will be N-1 integers k2, k3, \\u2026, kN, indicating that in the room ki you can find the key to open the room i (1 \\u2264 ki \\u2264 N, for all 2 \\u2264 i \\u2264 N). Note that there's no room that contains the key to the room number 1, because this is the first room you are in and it's open.\\n\\n                    The input ends with end of file (EOF).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Locked in the Castle\",\n    \"output\": \"If it's possible to visit all of the rooms of the castle print the word \\u201csim\\u201d, otherwise print the word \\u201cnao\\u201d.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Carlos Andrade, UFMS  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Bruno is responsible for configuring the routers of a company. Routers transmit data to each other through the internet cables, the transmitted data can travel by one or more routes for reach the receiver.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tThe price of network cables used in the company's routers can be very expensive, and the company needs to save money. Thinking about that, the company decided to make some changes in the network infrastructure.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tBruno must modify the network infrastructure and make sure that all routers are able to transmit data to each other and there is only one route between each pair of routers, saving as much as possible of internet cables.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tYou have to find out the total cost with cables that the company will have after the changes made by Bruno.\\u00a0The figure below shows (a) the current infrastructure networks; and (b) the infrastructure networks after the change.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\r\",\n    \"id\": 1774,\n    \"input\": \"The first line contains two integers\\u00a0R\\u00a0(3 \\u2264\\u00a0R\\u00a0\\u2264 60) and\\u00a0C\\u00a0(R\\u00a0\\u2264\\u00a0C\\u00a0\\u2264 200) representing respectively the number of routers and the number of internet cables.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tFollowed by\\u00a0C\\u00a0lines, each one containing three integers\\u00a0V\\u00a0(1 \\u2264\\u00a0V\\u00a0\\u2264\\u00a0R),\\u00a0W\\u00a0(1 \\u2264\\u00a0W\\u00a0\\u2264\\u00a0R) and\\u00a0P\\u00a0(1 \\u2264\\u00a0P\\u00a0\\u2264 10000).\\u00a0V\\u00a0and\\u00a0W\\u00a0representing a pair of routers that are connected to each other through the internet cable and\\u00a0P\\u00a0representing the price of the cable.\\r\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Routers\",\n    \"output\": \"Your program should print one integer value representing the total cost that the company will spend with cables after the modifications.\\r\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By M\\u00e1rio Henrique, UFPE  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Andre is a programming competitor in CIn-UFPE. Every saturday, during the trainings, he eats and drinks everything: snacks, soda, cookies, water and mentos. Mainly mentos. But the problem, however, is that everytime Andre takes some candies from the tube, he has to stop coding for a while, which disturbs his concentration.\\n\\n                    The mentos come in a tube with two heads. Each time Andre wants to take some candies, he chooses a certain flavour, and look for both heads of the tube. In each head, if there's a candy with the chosen flavour, he takes it. If there's no candy with that flavour in both heads, he takes none, and has just stopped coding for no reason. To cut his waste of time during the contest, Andre decided to minimize the amount of stops he makes to get candies. He made a fine cut along the tube to be able to see in advance which flavours and in which order the candies are inside the tube. But he's not able to get candies from the middle of the tube, since the cut he made is extremely thin and the only purpose of it is to decide better which flavours he'll take from each of the heads during his stops.\\n\\n                    Now, Andre needs to calculate the minimum number of times he must stop coding to get his candies, following the described method, until all the candies from the tube are over. He would calculate this easily using Fourier Transform, but he is busy coding a problem. So now it's up to you, a teammate, to make a program to help him.\",\n    \"id\": 1775,\n    \"input\": \"The first line contains an integer T (1 \\u2264 T \\u2264 200), the number of test cases. Each test case begins with a line with an integer N, the number of mentos candies inside the tube (1 \\u2264 N \\u2264 1000). In the next line, there are N integers, and the i-th of them is the flavour of the i-th candy in the tube. Each of these numbers is between 1 and 10\\u2079.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Andre and the Mentos\",\n    \"output\": \"For each test case print a line with \\\"Caso #X: Y\\\", where X is the number of the current case, starting with 1, and Y is the minimum amount of times that Andre must stop coding to get the candies.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By M\\u00e1rio Henrique, UFPE  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The class of Computer Science of CIn-UFPE 2025.1 is graduating! It is a very special graduation, not only because all major projects of students in this class have become multinational corporations, but also because the number 2025 is a perfect square! Therefore, the students decided to make all numbers of the ceremony a perfect square: dates, number of guests, hash of the name of the class, the amount of students graduating, etc.\\n\\n\\n                            \\n                    The party organizers were able to meet this requirement until the time comes to buy the snacks. They came into boxes with N snacks at a time. If N is not a perfect square, they will have to buy more than one box. Help the party organizers by making a program to calculate the minimum number of snacks they should buy to meet the eccentric requirements of the students.\",\n    \"id\": 1776,\n    \"input\": \"The first line contains an integer T (1 \\u2264 T \\u2264 1000), the number of test cases. Each of the next T lines contains an integer N (1 \\u2264 N \\u2264 10\\u2079), the number of snacks that comes in a single box.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Prom\",\n    \"output\": \"For each test case print a line with \\\"Caso #X: Y\\\", where X is he number of the current case, starting with 1, and Y is the minimum number of snacks that the party organizers should buy.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Gustavo Stor, UFPE  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"In Hollywood Walk of Fame, there are numerous stars on the sidewalk with the name of many famous artists. Some vandals, maybe because of jealousy or for just no reason at all, were defacing many of the stars and putting other names instead:\\n\\n                    \\n\\n                    The City Mayor, trying to minimize this problem, installed many surveillance cameras over the sidewalk. The sidewalk can be seen as a segment [1..N], where each position can possibly contain a star.\\n\\n                    \\n\\n                    Each camera protect a range [a..b], inclusive. The City Mayor now wants to know, for each star, if they are protected by a camera or not. You were hired to do this job.\",\n    \"id\": 1777,\n    \"input\": \"The first line contains T (1 \\u2264 T \\u2264 100), the number of test cases. Each test case begins with two integers N (1 \\u2264 N \\u2264 10\\u2079) and C (1 \\u2264 C \\u2264 10\\u2074), the length of the sidewalk and the number of installed cameras, respectively. Following there are C lines, each one describing the camera i with two integers ai and bi (1 \\u2264 ai \\u2264 bi \\u2264 N), representing the range covered by the camera. The next line contains a number E (1 \\u2264 E \\u2264 10\\u2074), the number of stars. Following, there is a line with E integers xi, indicating the position of the i-th star on the sidewalk (1 \\u2264 xi \\u2264 N).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Walk of Fame\",\n    \"output\": \"For each test case print \\u201cCaso #X: Y\\u201d, where X is the number of the current case, beginning with 1, and Y is the number of stars that are protected by some camera.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gustavo Stor, UFPE  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Tower Defense is a famous strategy game where the player must place defense towers to protect something - be it a castle, a treasure or even yourself - against a horde of monsters. There are several variations of the game: in some types, the map resembles a board, and the monsters follow a specific path; in other types, the map is open and monsters can reach the final destination by several different paths.\\n\\n                    Graph Defense is a variation of the common Tower Defense. Here, the map is represented as a graph. Each vertex is a position where a monster or a tower (or both) may be, at any given time, and the edges represent bidirectional connections between these vertices (e.g. if there is an edge from u to v, a monster which is the at the vertex u at a given moment can go to the vertex v at the next moment and vice versa). The castle, which you want to protect, is at the vertex F.\\n\\n                    Each tower i has a reach Ci, an attack Ai and is positioned at a vertex Vi. All vertices that are a maximum of Ci edges away from Vi receive a damage of Ai at every time unit. The towers do not move, and they exist since the beginning of the game. The castle has a magic shield that makes impossible for other towers to attack the vertex F where it stands, nor propagate the attack, i.e. the vertex F is a barrier and nothing passes through it but the monsters, possibly.\\n\\n                    Each monster i appears during the game at a vertex Ki, and has Hi life points. The monsters never stand still, and every time unit they move to an adjacent vertex. They will always move towards the final destination along the path that will cause the least damage possible. The monsters die when they reach 0 or less life points. A monster can only invade the castle when it reaches the vertex F alive. If there is a tower that reaches the starting vertex Ki of the monster, it will inflict damage in the first moment when the monster appears. A monster may arise already in the castle.\\n\\n                    You were hired to make a simulation of the game. After all the spawns of monsters, how many were able to invade the castle with life?\",\n    \"id\": 1778,\n    \"input\": \"The first line contains an integer T (1 \\u2264 T \\u2264 100), the number of test cases. Each test case starts with three integers N (1 \\u2264 N \\u2264 1000), M (0 \\u2264 M \\u2264 (N*(N-1))/2) and F (1 \\u2264 F \\u2264 N), the number of vertices, edges and the vertex where the castle stands, respectively. Following, there are M lines, each one with two integers u (1 \\u2264 u \\u2264 N) and v (1 \\u2264 v \\u2264 N and v != u), indicating that there's an edge between the vertices u and v. There'll be no more than one edge between the same pair of vertices. Next, there will be a number P (0 \\u2264 P \\u2264 100), the number of towers. Each of the next P lines contains three integers Vi (1 \\u2264 Vi \\u2264 N and Vi != F), Ai (1 \\u2264 Ai \\u2264 10\\u2075), and Ci (1 \\u2264 Ci \\u2264 1000), indicating that the i-th tower is at the vertex Vi with Ai of attack e Ci of reach, as explained in the description of the problem. There may be more than one tower in the same vertex, and there'll be no tower in vertex F. Finally, there'll be an integer Q (1 \\u2264  Q \\u2264 10\\u2074), indicating the number of monsters. Each of the next Q lines contains two integers Ki (1 \\u2264 Ki \\u2264 N) and Hi  (1 \\u2264 Hi \\u2264 10\\u2078), which are the vertex where the i-th monster spawns and the amount of life points he has at the beginning. It's guaranteed that there's a path that, despite the attacks of the towers, the monster would be able to reach the castle.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Graph Defense\",\n    \"output\": \"For each case print \\\"Caso #X: Y\\\", where X is the number of the current case, starting at 1, and Y is the number of monsters that made it to the castle alive.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Duhan Caraciolo, UFPE  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Guga has done N exams throughout his academic life. Now that he is close to graduate from college, he wants to know what was the longest contiguous period of time in which his arithmetic mean was the greatest.\",\n    \"id\": 1779,\n    \"input\": \"The first line contains an integer T (1 \\u2264 T \\u2264 100), the number of test cases. Each test case starts with a line containing an integer N (1 \\u2264 N \\u2264 10\\u2075), the number of exams Guga has done in his entire academic life. The next line contains N integers Pi (0 \\u2264 Pi \\u2264 10000), the i-th integer represents Guga\\u2019s grade in the i-th exam.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Estimating the Mean\",\n    \"output\": \"For each test case print a line containing \\u201cCaso #X: Y\\u201d, where X is the number of the current case, starting at 1, and Y is the length of the longest contiguous sequence of exams that has the greatest arithmetic mean.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By M\\u00e1rio Henrique, UFPE  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The inventor of Hector Con Carne, Major Dr. Ghastly, finished building a new army of robots, and it is ready to be sent to conquer the world. The robots have N different colors, each showing the type of weapon it uses. Hector told you, one of his minions, to arrange them in formation, that is, in several rows side by side, forming a matrix. Hector gave you certain rules for this:\\n\\n                    \\n                    \\tThere should be at least two rows\\n                    \\tAll rows should have the same number of robots\\n                    \\tConsidering the colors of robots, all rows must be symmetrical about a central axis parallel to the rows\\n                    \\n\\n                    \\n\\n\\n                    The images above show two possible formation of robots for different amounts of colors. The rows are arranged vertically, and in the first image the axis of symmetry parallel to the rows passes between the two rows of the center; in the second image, the axis of symmetry passes through the center of the central row.\\n\\n                    If you are not able to organize the robots how Hector asked you, Dr. Ghastly will dissect you and turn you into one of them. Given the amounts of robots of each color, decide if you can fulfill his order or if you should flee while there is still time.\",\n    \"id\": 1780,\n    \"input\": \"The first line contains an integer T (1 \\u2264 T \\u2264 1000), the number of test cases. Each test case starts with a line containing a single integer N (1 \\u2264 N \\u2264 100), the number of different colors. Following, there will be a line with N integers Ai (1 \\u2264 Ai \\u2264 1000), the number of robots with the i-th color.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Robots Formation\",\n    \"output\": \"For each case output a line containing \\\"Caso #X: Y\\\", where X is the number of the current case, starting at 1, and Y is the string \\\"Challenge Accepted!\\\" if you can arrange the robots the way Hector wants or \\\"Run for your life!\\\", otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Duhan Caraciolo, UFPE  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Guga has a string S containing only lowercase letters and he wants to do some operations in it. Each operation can be one of the following types:\\n\\n                \\n                \\t\\n                \\t0 x, move each vowel in S x positions from left to right. (starting again at the beginning if necessary)\\n                \\t\\n                \\t\\n                \\t1 x, move each consonant in S x positions from left to right. (starting again at the beginning if necessary)\\n                \\t\\n                \\t\\n                \\t2, print S as it is\\n                \\t\\n                \\n\\n                The vowels we are considering are the letters a, e, i, o and u.\\n\\n                An operation of type 0 only moves vowels through positions in S that contain vowels.\\n\\n                An operation of type 1 only moves consonants through positions in S that contain consonants.\\n\\n                \\n\\n                For example,\\n\\n                The string \\u201ccomputador\\u201d after the operation 1 2 turns into \\u201cdorcumapot\\u201d, that is, each consonant goes to the position of the next second consonant.\\n\\n                The string \\u201cabe\\u201d after the operation 0 1 turns into \\u201ceba\\u201d.\",\n    \"id\": 1781,\n    \"input\": \"The first line of input contains an integer T (1 \\u2264 T \\u2264 100), the number of test cases. The first line of each test case contains S (1 \\u2264 |S| \\u2264 10\\u2074), Guga\\u2019s string. The second line of input contains an integer Q (1 \\u2264 Q \\u2264 10\\u2075), the number of operations Guga is going to do in S. Each of the following Q lines contains an operations as described above. For each operation, 0 \\u2264 x \\u2264 |S|.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Guga and the String\",\n    \"output\": \"For each test case print \\u201cCaso #X:\\u201d, where X is the number of the current case, starting at 1. For each operation of type 2, print in a new line with the string S after all previous operations have been applied on it. The output file contains around 3*10\\u2076 characters.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Duhan Caraciolo, UFPE  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Guga won a connected graph for his birthday, with N nodes and N-1 bidirectional edges. Each edge has a weight and connects two nodes. When Andre found out about Guga\\u2019s gift, he came up with the following game: Given an integer X, how many pairs (A,B) (A \\u2264 B) exist such that all edges of the shortest path from node A to node B have weight less than or equal to X?\\n\\n                    Now Guga and Andre need a program to answer a lot of these questions, so they can play indefinitely and know whether they got the right answer.\\n\\n\",\n    \"id\": 1782,\n    \"input\": \"The first line of input contains an integer T (1 \\u2264 T \\u2264 50), the number of test cases. The first line of each test case contains N (1 \\u2264 N \\u2264 10\\u2075), the number of nodes in Guga\\u2019s graph. Each of the following N-1 lines contains three integers A (1 \\u2264 A \\u2264 N), B (1 \\u2264 B \\u2264 N) and C (1 \\u2264 C \\u2264 10\\u2076), indicating that there is an edge from node A to node B with weight C. The next line contains an integer Q (1 \\u2264 Q \\u2264 10\\u2074), the number of times that Guga and Andre will play. The following line contains Q integers Xi (1 \\u2264 Xi \\u2264 10\\u2076), the greatest weight allowed in the shortest path, as explained above.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Honorable Gift\",\n    \"output\": \"For each test case print \\u201cCaso #X:\\u201d, where X is the number of the current case, starting at 1, followed by the answers for each of the Q queries of this test case preceded by a single space.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By M\\u00e1rio Henrique, UFPE  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Andre is an amateur astronomer that struggles to reveal a truth to the world: there\\u2019s a black hole coming to Earth! All the other astronomers think he\\u2019s crazy, and consequently, the normal people too, but he doesn\\u2019t gives up bringing down this conspiracy!\\n\\n                    But how did he discovered the black hole? It happened this way: black holes have an overwhelming gravity, such that the nearest stars begin spinning around them. Some of them move faster, some move slower, some keep closer, and some keep more distant, but every affected star keeps constant angular velocity and distance from the black hole. One day, while watching the sky with his telescope, Andre recorded the positions of every star he could see. A month later, he repeated the feat and saw that two of the stars had moved, implying that they felt in the orbit of a black hole!\\n\\n                    \\n\\n                    \\n\\n                    \\n\\n                    The above image illustrates the trajectory of two stars around a black hole\\n\\n                    Andre sucks at math, so he can\\u2019t calculate the exact position of the black hole. The surface of the sky can be represented by a coordinated plain with axes X and Y, and he has the old and new coordinates of both stars. Help him by calculating the black hole\\u2019s coordinates and save the world before it\\u2019s too late!\",\n    \"id\": 1783,\n    \"input\": \"The first line of input contains an integer T (1 \\u2264 T \\u2264 10000), the number of test cases. Each test case has 4 lines, each with a pair of real numbers with 2 decimal places, X e Y (-1000.0 \\u2264 X, Y \\u2264 1000.0). Each pair represents, respectively, the old coordinates of the first and second stars, and the new coordinates of the first and second stars. The old and new positions of each star are different, as well as the positions of the two stars at the same time instant.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Oh no, a Black Hole!\",\n    \"output\": \"For each test case, print \\\"Caso #i: X Y\\\" in a line, where i is the test case number, beginning at 1, and (X, Y) are the coordinates of the black hole. X and Y must be real numbers with 2 decimal places each. For each test case there\\u2019s only one valid solution.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Gustavo Stor, UFPE  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"There are N birds in a forest, each in their respective tree. There are N tired crows in this forest, and they wish to land in different trees as soon as possible (crows are extremely quarrelsome and they can't share the same tree). Every Pi minutes, the i-th bird leaves the tree to fly a little bit, and you can consider that it returns immediately. Every Ci minutes, the i-th crow can try to land in a tree which there's no bird or can just keep flying. You can consider that crows are faster than birds and if the bird leaves the tree at the same minute that a crow tries to land in it, the crow will land faster. Given an optimal strategy between the crows, what is the earliest time in which every crow will be relaxing, each one in a different tree?\",\n    \"id\": 1784,\n    \"input\": \"The first line contains an integer T (1 \\u2264 T \\u2264 100), the number of test cases. Each test case starts with an integer N (1 \\u2264 N \\u2264 9), the number of birds and crows. The second line contains N integers Pi (1 \\u2264 Pi \\u2264 10\\u2074), as described in the problem statement. The third and last line of each test case contains N integers Ci (1 \\u2264 Ci \\u2264 10\\u2074), as also described in the problem statement.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Birds vs Crows\",\n    \"output\": \"For each test case print \\u201cCaso #X: Y\\u201d, where X is the number of the current case, starting at 1, and Y is the answer to the problem.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Duhan Caraciolo, UFPE  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The number 6174 is known as Krapekar\\u2019s constant after the Indian mathematician Dattathreya Ramachandra Kaprekar. This number is interesting because of the following fact: let X be any 4-digit number (leading 0\\u2019s are allowed) in which not all of them are the same, then Krapekar\\u2019s routine starting at this number always converge to 6174. That is, Krapekar\\u2019s routine converges to 6174 if, and only if, X is a 4-digit number and at least two of them are pairwise different. Krapekar\\u2019s routine is defined as follows:\\n\\n                    \\n\\n                    int krapekar(int X) {\\n\\n                    \\u00a0\\u00a0\\u00a0int cnt = 0;\\n\\n                    \\u00a0\\u00a0\\u00a0while (X != 6174) {\\n\\n                    \\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0int hi = highest_number_with_digits_of(X);\\n\\n                    \\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0int lo = lowest_number_with_digits_of(X);\\n\\n                    \\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0X = hi - lo;\\n\\n                    \\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0cnt = cnt + 1;\\n\\n                    \\u00a0\\u00a0\\u00a0}\\n\\n                    \\u00a0\\u00a0\\u00a0return cnt;\\n\\n                    }\\n\\n                    \\n\\n                    highest_number_with_digits_of(X) is the highest number that can be made using X\\u2019s digits.\\n\\n                    lowest_number_with_digits_of(X) is the lowest number that can be made using X\\u2019s digits.\\n\\n                    \\n\\n                    For example:\\n\\n                    highest_number_with_digits_of(3524) = 5432\\n\\n                    lowest_number_with_digits_of(3524) = 2345\\n\\n                    highest_number_with_digits_of(10) = 1000 //because 10 = 0010 with four digits.\\n\\n                    lowest_number_with_digits_of(10) = 1\",\n    \"id\": 1785,\n    \"input\": \"The first line contains an integer T (1 \\u2264 T \\u2264 10\\u2074), the number of test cases. Each test case consists of a line containing an integer X (0 \\u2264 X \\u2264 9999).\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Kaprekar\",\n    \"output\": \"For each test case print \\u201cCaso #X: Y\\u201d, where X is the number of the current case, starting at 1, and Y is the return of Krapekar\\u2019s routine or -1 in case it stays in an infinite loop.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Alexandre Campos, UNIUBE  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"You are about to write a program to predict a CPF, which, in Brazil, is equivalent to Social Security Number. It is composed by 11 digits and the lasts two (verification digits) are function of the nine previous. In this way, if a person informs a CPF, by mistake or on purpose, it is possible to find out. Let us introduce some notation. Let a CPF be\\n\\n                    a1 a2 a3 . a4 a5 a6 . a7 a8 a9 - b1 b2\\n\\n                    To get b1, one can multiply a1 by 1, a2 by 2, a3 by 3, so on, up to a9 by 9 and sum these results. Then, b1 is the remaining of this number when divided by 11, or 0 in case the remaining is 10.\\n\\n                    Analogously, to get b2, one can multiply a1 by 9, a2 by 8, a3 by 7, so on, up to a9 by 1 and sum these results. Then, b2 is the remaining of this number when divided by 11, or 0 in case the remaining is 10.\",\n    \"id\": 1786,\n    \"input\": \"The input is composed by an unknown number of sequences in the form:\\n\\n                    a1a2a3a4a5a6a7a8a9\\n\\n                    Each sequence represents the 9 firsts digits of a CPF.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"SSN 2\",\n    \"output\": \"For each sequence, you have to print the input sequence and the verification digits formated as\\n\\n                    a1a2a3.a4a5a6.a7a8a9-b1b2\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Jadson Jos\\u00e9 Monteiro Oliveira, Faculdade de Balsas  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Uilton, Rita and Ingred created a new game to decide who will not pay their part of the pizza on next weekend and gave the name \\\"URI\\\" for the game (maybe they decided to join the initials of their names to form the name of the game ). The URI consists of N rounds, each round, each of the three players speak a number, is not allowed equal numbers in a round. If the number that the player to talk is a power of 2, the same earns 1 point, and if in addition to be a power of 2, is the largest number of the round, the player earns 1 more point, if the number is not power of 2 the player does not earn any points. Your task is to create a program that helps to make the account for the score and inform the winner, given the amount of rounds, and the numbers of each round.\\n\\n                    Consider that the first 4 powers of 2: 2, 4, 8, 16.\",\n    \"id\": 1787,\n    \"input\": \"The input contains several test cases. The first line of input contains a single integer N indicating the number of rounds (1 \\u2264 10\\u2075), each of the following N lines contains 3 integers Ui, Ri, Ii (1 <Ui, Ri, Ii \\u2264 10\\u2079), representing respectively the number of Uilton, Rita and Ingred in the i-th round. The end of input is indicated when C = 0.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"URI\",\n    \"output\": \"For each test case output a single line containing the name of the player who has more points. if a draw occurs in the first place, print the name of the game \\\"URI\\\" (without quotes).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By D\\u00e2mi Henrique Pelegrino, Inatel  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Some friends, bored on a Sunday afternoon, decided to create a game. They designed a bidimentional array of L rows and C columns on a paper, and then wrote a number on each of the LxC positions.\\n\\n                    The game works as follows:\\n\\n                    \\n                    \\tA position (i, j) of the matrix is chosen to start the game, i represents a row and j a column.\\n                    \\tFrom this position, it is possible to move to the positions (i-1, j) - (i, j+1) if the game is on Normal mode or the positions (i+1, j) - (i, j-1) if the game is on Reverse mode. However, you can only move to any of these positions if the number contained there is less than the number in the current position.\\n                    \\tIn this game, there are some special positions. Those are the positions containing a prime number. When a player lands in this position, he can move to any one of the two adjacent (in accordance with the game mode), even if the number contained there is not less than the current number.\\n                    \\tIn a match, you can use only K special positions. After using the K positions, a position with prime number is treated as a normal one.\\n                    \\tThe game goal is to \\\"visit\\\" the largest number of positions as possible.\\n\",\n    \"id\": 1788,\n    \"input\": \"The input contains several test cases. The first line of a test case contains three positive integers L, C and K (1 \\u2264 L, C \\u2264 1000, 0 \\u2264 K \\u2264 5), indicating the number of rows, columns and number of special positions that can be used, respectively. The second line contains a character P (\\u2018N\\u2019 or \\u2018R\\u2019) representing the game mode, normal or reverse, respectively.\\n\\n                    Each of the following L lines contains C integers X (0 <= X <= 10^7).\\n\\n                    The end of input is indicated when L = C = K = 0 and should not be processed.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Playing with Numbers\",\n    \"output\": \"Print a single line, containing a single value, the maximum amount of possible locations that can be visited if the start position is chosen optimally.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Thalyson Nepomuceno, UECE  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"The slugs racing is a sport that has grown in recent years, causing several people dedicate their lives trying to capture fast slugs, and trains them to make millions in races around the world. But the task of capturing fast slugs is not an easy task, since almost all the slugs are very slow. Each slug is classified at a level depending on their speed:\\n\\n                    \\n                    Level 1: If speed is less than 10 cm/h.\\n                    Level 2: If speed is greater than or equal to 10 cm/h and lower than 20 cm/h.\\n                    Level 3: If speed is greater than or equal to 20 cm/h.\\n\\n                    \\n                    Your task is to identify which level of speed faster slug of a group of slugs.\",\n    \"id\": 1789,\n    \"input\": \"The entry consists consists multiple test cases, and each consists of two lines: The first line contains an integer L (1 \\u2264 L \\u2264 500) representing the number of slugs of the group, and the second line contains L integers Vi (1 \\u2264 Vi \\u2264 50) representing the speeds of each slug.\\n                    The input ends with end of file (EOF).\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"The Race of Slugs\",\n    \"output\": \"For each test case, output a single line with the level of speed faster slug of a group of slugs.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Marcos Castro, Universidade Federal de S\\u00e3o Paulo  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Pedrinho Ritchie lives in a country called Graphland. The cities of this country are interconnected by bridges. There are not isolated cities and no bridge inserted more than once. His teacher suggested a challenge: detect the number of the bridges which are not contained in any cycle. We can say that a cycle starts and ends at the same city and no city is repeated.\\n\\n                    Pedrinho likes very much of programming challenges, but needs your help to solve this problem, do you can help?\",\n    \"id\": 1790,\n    \"input\": \"The input ends with EOF. For each test case, the first line contains two positive integers C and P that represent respectively the amount of cities (2 <= C <= 50) and the amount of bridges (1 <= P <= 1250). Following are the lines where each line contains two integers positives X and Y (indexed from 1) indicating that there is a bridge linking the cities X and Y.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Detecting Bridges\",\n    \"output\": \"Your program should print the number of bridges that are not contained in any cycle.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Thalyson Nepomuceno, UECE  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"A matrix is a Matriz de Potencia if it meets three requisites:\\n\\n                    \\n                    1. It is a square matrix.\\n                    2. The first column is formed only 1's.\\n                    3. For every element (i, j), with j > 1, (i, j) = (i, 2) j-1 and (i, j) is nonzero.\\n\\n                    For example:\\n\\n                    \\n\\n                    Your task is to find out if a square matrix can be transformed into a Matriz de Potencia using two types of operations:\\n\\n                    1. Troca(x, y): Reverses the positions of all elements in columns x and y of the matrix.\\n                    2. Transposta(): The matrix is transposed.\\n\\n                    For example:\\n\\n                    \\n\\n                    Then P can be transformed into a Matriz de Pot\\u00eancia.\",\n    \"id\": 1791,\n    \"input\": \"The input consists of multiple lines. The first line contains an integer C that indicates the number of test cases. Then the first line in each test case contains an integer N (1 < N < 8) indicating the number of rows and columns of the matrix, then N lines, each with N integers d (\\udbc0\\udc00-50000 < d < 50000) represents the matrix elements.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Discovering an Matrix\",\n    \"output\": \"Each test case, print a single line with \\\"Potencia\\\" (without quotes) if the matrix can be transformed, or \\\"Nao Potencia\\\" (without quotes) if not.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"You are the leader of an elite soldier\\u2019s team, and have just been informed that the soldiers that you recently sent to attack some enemy posts were captured and kept as hostages. Your strategy now is to redeem your soldiers without losing any soldiers in battle, and without ever letting the enemies sound the alarm.\\n\\n                    There are N enemy posts and M line visions between them, in a way that if there is a line vision from post A to post B, the soldiers from post A would know if post B was being attacked and would sound the alarm. As your goal is total description, you decided to only attack a post if, and only if, all the posts that have a line vision to this one had been attacked already, this way avoiding the alarm to be sound.\\n\\n                    Initially you have S soldiers on your team. On each enemy post there are E enemy soldiers and F of your soldiers as hostages. To guarantee that each attack is a success, you decided to only attack a post when the number of soldiers on your troop is bigger than the number of soldiers on that post. After each attack, the hostage soldiers join your team to help on the next attacks.\\n\\n                    The plan sounds good, but we need absolute certainty that it is possible to execute it. With the data about the posts collected by your spy, find out if it is possible to attack all the enemies\\u2019 posts respecting the two restrictions given above.\",\n    \"id\": 1792,\n    \"input\": \"There will be at most 30 test cases. Each test case starts with three integers, N, M and S, representing the number of posts, the number of line visions, and the number of soldiers that are initially on your team, respectively (1 \\u2264 N \\u2264 104, 0 \\u2264 M \\u2264 105, 1 \\u2264 S \\u2264 100).\\n\\n                    Following there will be a line with N integers ei, where the i-th integer represents how many enemy soldiers there are on the i-th post (1 \\u2264 ei \\u2264 106, for each 1 \\u2264 i \\u2264 N).\\n\\n                    Following there will be a line with N integers fi, where the i-th integer represents how many hostage soldiers there are on the i-th post (0 \\u2264 fi \\u2264 100, for each 1 \\u2264 i \\u2264 N).\\n\\n                    Following there will be M lines, each containing two integers A and B each, representing that the post A has a line vision on the post B (1 \\u2264 A, B \\u2264 N, A <> B).\\n\\n                    The last test case is indicated when N = M = S = 0, which should not be processed.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Programmed Attack\",\n    \"output\": \"For each test case print one line, containing the word \\u201cpossivel\\u201d if it is possible to attack all the posts respecting the two restrictions given, or \\u201cimpossivel\\u201d otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Cristhian Bonilha, UTFPR  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Escalators have facilitated people\\u2019s lives a lot. Climbing stairs is one of the most boring tasks ever invented (after the invention of the stairs on the first place).\\n\\n                    After a few observations, you realized that there is a lot of energy being spent with escalators, because they continue to work even when there is nobody using it. To avoid that, the owner of a local shopping mall installed a sensor that verifies when there is someone on the escalator. When the sensor detects no presence, the escalator is deactivated, this way saving energy until the next person arrives.\\n\\n                    To be more precise, the system works on the following way: the escalator is initially inactive. The amount of time that a person takes to go from the beginning to the end of the escalator is 10 seconds. In other words, if one person arrives to the escalator on time t, the escalator will be active on times t, t+1, t+2, \\u2026, t+8 and t+9, and then will be deactivated on time t+10, when the person leaves the escalator. Such time window may be prolonged if one or more people arrive to the escalator during such process.\\n\\n                    The owner of the local shopping mall now asked for your help. Write an algorithm that, given the times at which some people arrived at the escalator, tell for how many seconds the escalator was active.\",\n    \"id\": 1793,\n    \"input\": \"There will be at most 30 test cases. Each test case starts with a line containing one integer N, representing the number of people that used the escalator on that day (1 \\u2264 N \\u2264 100).\\n\\n                    On the next line, there will be N distinct integers, given in ascending order, representing the time t at which each person arrived at the escalator (1 \\u2264 t \\u2264 1000).\\n\\n                    The last test case is indicated when N = 0, which should not be processed.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Escalator\",\n    \"output\": \"For each test case print one line, containing one integer, representing how many seconds the escalator was active.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tTired of washing your dirty clothes, your mother decided that, for now on, who washes your clothes is you.\\n\\n\\t\\t\\t\\tOn the laundry room of your home there is a washer and a dryer, each with its own limits of minimum and maximum amount of clothes to be washed and dried per time. Therefore, the washer can only be used if you put at least LA and at most LB clothes inside it, and similarly the dryer can only be used if you put at least SA and at most SB clothes inside it.\\n\\n\\t\\t\\t\\tYou currently have N clothes to be washed and dried, and you want to find out if it is possible to use the washer and dryer to wash and dry all of your clothes, following the rules described above.\\n\\n\\t\\t\\t\",\n    \"id\": 1794,\n    \"input\": \"\\t\\t\\t\\tOn the first line of input there is an integer N (1 \\u2264 N \\u2264 100).\\n\\n\\t\\t\\t\\tOn the second line of input there are two integers LA and LB (1 \\u2264 LA < LB \\u2264 100).\\n\\n\\t\\t\\t\\tOn the third line of input there are two integers SA and SB (1 \\u2264 SA < SB \\u2264 100).\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Laundry\",\n    \"output\": \"\\t\\t\\t\\tPrint the word \\\"possivel\\\" if it is possible to wash and dry all of your clothes following the rules described on the statement, or \\\"impossivel\\\" otherwise.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tThe trinomial triangle is a number triangle of trinomial coefficients. It can be obtained by starting with a row containing a single \\\"1\\\" and the next row containing three 1s and then letting subsequent row elements be computed by summing the elements above to the left, directly above, and above to the right:\\n\\n\\t\\t\\t\\t \\n\\n\\t\\t\\t\\tThe first row of the trinomial triangle is numbered as zero, the second row is numbered as one and so on.\\n\\n\\t\\t\\t\\tGiven the row number R, you are asked to write a program that prints the sum of its elements. For instance, the sum of elements at row 2 is 9 = 1 + 2 + 3 + 2 + 1.\\n\\n\\t\\t\\t\",\n    \"id\": 1795,\n    \"input\": \"\\t\\t\\t\\tThe input is the row number R (0 \\u2264 R \\u2264 20).\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Trinomial Triangle\",\n    \"output\": \"\\t\\t\\t\\tThe output is the sum of all elements at row R. Don't forget the end-of-line character after printing the sum.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Carlos Andrade, UFMS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tLately Brazilian economy has become the subject of all the newspapers. Brazilian people have different opinions about the current economic scenario. Your task is to take a look at a survey and find out if the majority of Brazilians are ok or not ok with the current economic scenario.\\n\\n\\t\\t\\t\",\n    \"id\": 1796,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer Q (4 &leq; Q &leq; 233000) representing how many citizens joined this survey. The second line contains Q integers Vi (0 &leq; Vi &leq; 1, 1 &leq; i &leq; Q) representing the opinion of the i-th Brazilian citizen surveyed about the current economic scenario. Where \\\"0\\\" represents the ones who answered that are ok with the current economic scenario and \\\"1\\\" the ones who are not ok.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Brazilian Economy\",\n    \"output\": \"\\t\\t\\t\\tYour program should print \\\"Y\\\" if the majority answered that are ok with the economic scenario. Otherwise print \\\"N\\\".\\n\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tVin Gasoline and his best friend Paul Runner are at the top floor of a building in Abu Dhabi stealing a Lykan HyperSport. It's the year of 2300, and the floors of the buildings no longer are supported one over the other, but they all float in the air and move once in a while, maintaining just their altitude. In the building in which our heroes are, the floors are all square-shaped. The figure on the left illustrates the building as seen from above and the figure on the right illustrates it as seen from the front, representing the ground for the thicker line.\\n\\n\\t\\t\\t\\t \\n\\n\\t\\t\\t\\tGasoline and Runner want to abandon the building as soon as possible, so they need to speed up the supercar in order to jump from the top floor to the penultimate floor, from the penultimate floor to the antepenultimate floor, and so on until they reach the ground and escape. They know that the Lykan HyperSport withstands a jump from an i-th floor to a j-th floor if and only j = i - 1 and the horizontal distance needed to be traveled is not greater than HAR, the Horizontal Air Reach of the car. With the onboard computer, they have all the informations about the location of the floors, but they need to quickly calculate whether the escape will be possible or not.\\n\\n\\t\\t\\t\",\n    \"id\": 1797,\n    \"input\": \"\\t\\t\\t\\tThe first line of the input determine the number N of floors in the building (1 \\u2264 N \\u2264 106) and the value of HAR (0 < HAR < 2 \\u00d7 104). Each one of the N following lines describes a floor of the building by 3 integers: XC, YC and S (0 < XC, YC, S < 104), which respectively represent the coordinates of the centre and the length of the side of the floor. The floors are described in decreasing order of altitude.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Blasted and Curious\",\n    \"output\": \"\\t\\t\\t\\tThe output of your program must consist of a single line, containing the word YEAH if the escape is possible or the word OUCH otherwise.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Lucas Hermann Negri, Universidade Tecnol\\u00f3gica Federal - Paran\\u00e1  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tOBI (Brazilian Organization of Facilities) is a company that produces pipes and fitters. The production technique used at OBI always produces long pipes, which are then cut to satisfy client needs.\\n\\n\\t\\t\\t\\tTheir clients have different applications, so they need pipes with different lengths. When the company was small and the clients were few, all the pipe cut planning process (to maximize profit) was done by a very dedicated employee. However, with the increase on the number of orders, it became prohibitive. That's where you come in: hired by OBI, your task is to write a program that, given the relation between the pipes' length and its respective sales value, determine the greatest possible value that can be obtained by cutting and selling a pipe with a determined initial length. Pipe lengths can be repeated, and there can be leftovers.\\n\\n\\t\\t\\t\",\n    \"id\": 1798,\n    \"input\": \"\\t\\t\\t\\tThe first line of input has two integers: N (0 &leq; N &leq; 1000) that indicates the number of different pipe sizes and T (0 &leq; T &leq; 2000), that is the size of each pipe produced by OBI.\\n\\n\\t\\t\\t\\tEach of the following N lines has two integers: Ci and Vi (1 &leq; Ci, Vi &leq; 5000, 1 &leq; i &leq; N), representing, respectively, the lenght and the sales value of a client ordered pipe i.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Pipe Cutting\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print in one line the greatest possible value that can be obtained by cutting and selling a pipe with original length T.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tIn 1942, Robert Tryon's study concluded that genetic traits often did, in fact, contribute to behavior, independent of the environment. To do so, Tryon created an experiment that tested the proficiency of successive generations of rats in completing a maze, separating those who made the fewest errors as \\u201cbright\\u201d, and those with the most errors as \\u201cdull\\u201d. Continuing this process for seven generations, he created two distinct breeds of \\u201cbright\\u201d and \\u201cdull\\u201d rats.\\n\\n\\t\\t\\t\\tIBO is descendent from the \\\"brilliant\\\" strain of rats, and has the best performance on this experiment. He can come in, pick up the cheese and get out of any maze without getting lost, always making the shortest possible path.\\n\\n\\t\\t\\t\\tYour task in this problem is, given the design of the labyrinth and the position of the cheese, determine how many points strategically marked by letters or words containing letters of the alphabet IBO must go through to get the cheese (indicated by the character '*') and exit, always starting at the Entrada (word in portuguese that means Entrance) point and ending at the Saida (word in portuguese that means Exit) point. In the example below, the IBO sequence from the Entrada would be: A, F, J, *, I, M, K and Exit, resulting in 8, which is the minimum amount of points in which IBO must go through to do its job. If IBO pass through a point twice (one time going for cheese and one time going to the output) it must count as two points visited.\\n\\n\\t\\t\\t\\t \\n\\n\\t\\t\\t\",\n    \"id\": 1799,\n    \"input\": \"\\t\\t\\t\\tThe first line of input contains two integers Points (4 \\u2264 Points \\u2264 4000) and Links (4 \\u2264 Links \\u2264 5000) representing respectively the number of points strategically marked by letters and the amount of links existing between these points. The following lines indicates all links between the points. The connection between two points indicates that anyone can be the origin.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"The Rat in a Maze\",\n    \"output\": \"\\t\\t\\t\\tPrint an integer number indicating the minimum amount of points that IBO must go through to do its task.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Carlos Andrade, UFMS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tGabriel works as Software Engineer at the Fingerbook Inc. On the last week he had a lot of work to do. So he decided to sleep at the FingerBook the whole week. After he finished his job, he decided to leave. then he realized he has lost his keys from home, so he decided to come back to pick up the keys.\\n\\n\\t\\t\\t\\tGabriel decided to start looking in which office that he was recently, After looking in all of the offices that he was in the last two days he hasn\\u2019t found the keys yet. So he decided to ask you to help him to search for the keys again. So he\\u2019ll tell you which ones of the offices that he was in the last week.\\n\\n\\t\\t\\t\\tHelp him to find the keys telling him in which offices is possible to find the keys.\\n\\n\\t\\t\\t\",\n    \"id\": 1800,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers Q(1 \\u2264 Q \\u2264 1*103) and E(1 \\u2264 E \\u2264 Q) representing respectively the number of offices that he was in the last week and the number of offices that he was in the last two days.\\n\\n\\t\\t\\t\\tThe second line contains E integers Si (1 \\u2264\\u00a0Si\\u00a0\\u2264\\u00a01000) containing the Identification number of each office that he was in the last two days.\\n\\n\\t\\t\\t\\tThe next line contains Q integers Ci (1 \\u2264 Ci \\u2264 1000) containing the identification number of each one of the offices that he was in the last week.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Where Are My Keys\",\n    \"output\": \"\\t\\t\\t\\tFor each office that he was in the last week your program should return \\u201c0\\u201d in case he has already visited that office while looking for the keys. Else your program should return \\u201c1\\u201d in case he hasn't visited that office yet while he was looking for the keys.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fidel I. Schaposnik Massolo, Universidad Nacional de La Plata  Argentina\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tProf. Cedrado-Cueta likes to play with numbers, and he is particularly fond of perfect squares. A natural number n is said to be a perfect square if there exists a natural number m such that n = m2. For example, 9 and 36 are perfect squares because 9 = 32 and 36 = 62, whereas 5 and 12 are not perfect squares.\\n\\n\\t\\t\\t\\tThe Prof. recently found a number x, and he would like to create a perfect square using it. In order to do so, he will reorder the digits of x to form some number y, and then calculate n = x + y. In how many ways is it possible for him to obtain a perfect square as the value of n? For example, if x = 29 the Prof. can take y = 92, so that n = 29 + 92 = 121 = 112.\\n\\n\\t\\t\\t\\tNote that when reordering the digits of x the Prof. should use all its digits and obtain a correct expression for the number y, i.e. there can be no leading 0's in y. Also note that he may choose to keep the digits of x in the same order, effectively getting for y the same value as x.\\n\\n\\t\\t\\t\",\n    \"id\": 1801,\n    \"input\": \"\\t\\t\\t\\tThe input consists of a single line containing one positive integer number x with at most 12 digits.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Playing with Numbers\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a single line containing one integer number representing the number of ways in which the Prof. can obtain a perfect square as the value of n. Two ways are considered different if they differ in the value of n obtained.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Thalyson Nepomuceno, Universidade Estadual do Cear\\u00e1  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tBino is preparing a book catalog. He is organizing a catalog with K different sets of books to sell in your online store. Each set of books consists of five books, one for each subject (portuguese, mathematics, physics, chemistry and biology). Two sets of books are considered distinct if there is at least one book that is at one and the other is not. Bino want to expose on the site only the most expensive distinct sets, and asked for your help.\\n\\n\\t\\t\\t\\t The value of each set is the sum of the values of each book that's in it. Your task is to calculate the total value of K more expensive distinct sets of books. In case of a draw among the most expensive sets, Bino choose any more expensive set.\\n\\n\\t\\t\\t\",\n    \"id\": 1802,\n    \"input\": \"\\t\\t\\t\\tThe input consists of 6 lines: The first line contains an integer P (5 \\u2264 P \\u2264 10), representing that Bino has\\u00a0P\\u00a0different types of portuguese books, followed by\\u00a0P\\u00a0integers\\u00a0vi\\u00a0(1 \\u2264\\u00a0vi\\u00a0\\u2264 1000), representing the values \\u200b\\u200bof each Portuguese book. The second line contains an integer\\u00a0M\\u00a0(5 \\u2264\\u00a0M\\u00a0\\u2264 10), representing that Bino has\\u00a0M\\u00a0different types of math books,\\u00a0M\\u00a0integers\\u00a0vi\\u00a0(1 \\u2264\\u00a0vi\\u00a0\\u2264 1000), representing the values \\u200b\\u200bof each math book. The third line contains an integers\\u00a0F\\u00a0(5 \\u2264\\u00a0F\\u00a0\\u2264 10), representing that Bino has\\u00a0F\\u00a0different types of physics books, followed by\\u00a0F\\u00a0integers\\u00a0vi\\u00a0(1 \\u2264\\u00a0vi\\u00a0\\u2264 1000) representing the values \\u200b\\u200bof each\\u00a0physics\\u00a0book. The fourth line contains an integer\\u00a0Q\\u00a0(5 \\u2264\\u00a0Q\\u00a0\\u2264 10) representing that Bino has\\u00a0Q\\u00a0different types \\u00a0of chemistry books, followed by\\u00a0Q\\u00a0integers\\u00a0vi\\u00a0(1 \\u2264\\u00a0vi\\u00a0\\u2264 1000) representing the values \\u200b\\u200bof each chemistry book. The fifth line contains an integer\\u00a0B\\u00a0(5 \\u2264\\u00a0B\\u00a0\\u2264 10), representing that Bino has\\u00a0B\\u00a0different types of biology books, followed by\\u00a0B\\u00a0integers\\u00a0vi\\u00a0(1 \\u2264\\u00a0vi\\u00a0\\u2264 1000) representing the values \\u200b\\u200bof each biology book. The sixth line contains an integer K (1 \\u2264 K \\u2264 M*P*Q*F*B) representing the amount of different sets of books in books catalog.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Books Catalog\",\n    \"output\": \"\\t\\t\\t\\tPrint the sum of K more expensive distinct sets of books.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tMatring is a mix of Matrix and String. It was developed by UNILA (Union of Nerds for Integration of Logic and Adventure) to keep messages safe from eavesdropping.\\n\\n\\t\\t\\t\\tThe first and last column of a matring keep the key to translate it to the real message. The remaining columns of a matring represent an ASCII-coded string, one column per character.\\n\\n\\t\\t\\t\\tFor a N-character long message, the corresponding matring is a 4x(N+2) matrix of digits. Each column is read as a 4-digit number; a top to bottom sequence of digits is the same as a left to right sequence in horizontal.\\n\\n\\t\\t\\t\\tLet the first number be F, the last number be L and the remaining ones to be a sequence of numbers Mi, where 1 \\u2264 i \\u2264 N. The first column of a matring is indexed as zero.\\n\\n\\t\\t\\t\\tTo decode a matring to an string, we must calculate: Ci = (F * Mi + L) mod 257, where Ci is the ASCII-coded character of the original message at position i.\\n\\n\\t\\t\\t\\tYour task is to develop an algorithm to decode matrings.\\n\\n\\t\\t\\t\",\n    \"id\": 1803,\n    \"input\": \"\\t\\t\\t\\tThe input is a matring, i.e. a 4x(N+2) matrix of digits (from 0 to 9), 0 < N < 80.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Matring\",\n    \"output\": \"\\t\\t\\t\\tThe output is given in one single line and is the decoded string. Include the end-of-line character after the string.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tThe VIII Latin-American Algorithms, Graphs and Optimisation Symposium (LAGOS 2015), a conference which gathered mathematicians and computer scientists from worldwide to discuss some computational challenges, was held in Beberibe, CE, and happened in the last week. Wanting the participants to relax a bit, the symposium organisers hired buggies to take the researchers to some touristic places in the region. The buggies left the hotel in a queue, one after the other.\\n\\n\\t\\t\\t\\tWhoever knows the buggy rides of Cear\\u00e1 knows that the tourist can ask the buggy driver a ride with emotion or without emotion. However, LAGOS excursion faced an extra emotion. Since nowadays in Mars there is a lack of researchers in Graphs, Algorithms and Optimisation, martian aliens started to abduct some buggies, with all people aboard (including the poor driver, who had nothing to do with it). It was very sad for our planet to loose such brilliant minds to Mars, but the tragedy could have been less serious if each buggy driver had been keeping updated the information of how many people in total were in the buggies behind his \\u2014 this way he would be able to notice the aproximation of the alien probe and to speed the buggy up.\\n\\t\\t\\t\",\n    \"id\": 1804,\n    \"input\": \"\\t\\t\\t\\tAn integer N (1 \\u2264 N \\u2264 105) makes the first line of the input, which represents the number of buggies that have left the hotel. The second line of the input consists of N integers pi (1 \\u2264 pi \\u2264 5, 1 \\u2264 i \\u2264 N), each one representing the number of people in the buggy i (including the buggyman). Each one of the following lines can consist:\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tof a character 'a' followed by an integer i (1 \\u2264 i \\u2264 N), which characterises the abduction of the buggy i (which had not been abducted);\\n\\n\\t\\t\\t\\t\\tof a character \\u2018?' followed by an integer i (1 \\u2264 i \\u2264 N), which characterises that, in that moment, the buggyman of the non-abducted (yet) buggy i would like to know how many people of the excursion remained behind his buggy.\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tConsider that the identifier i of a buggy does not change. Hence, the third buggy to leave the hotel shall always be identified by the integer 3, even though the buggies 1 and 2 happen to be abducted.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Mathematicians Needed in Mars\",\n    \"output\": \"\\t\\t\\t\\tFor each line \\\"? i\\\", print a line containing the number of the people of the excursion still remaining behind the buggy i in that moment. But do not be a bugman (don't put bugs in your code)!\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Caio Russi, UNOESTE  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tOne natural number is a non-negative integer (0, 1, 2, 3, 4, 5,...). Your task in this problem is to calculate the sum of the natural numbers that are present in a given interval [A, B] including.\\n\\n\\t\\t\\t\\tFor instance, the sum of the natural numbers in the range [2, 5] is 14 = (2 + 3 + 4 + 5).\\n\\n\\t\\t\\t\",\n    \"id\": 1805,\n    \"input\": \"\\t\\t\\t\\tThe test case contains two integers A e B (1 \\u2264 A \\u2264 B \\u2264 109), representing the lower limit and the upper respectively.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Natural Sum\",\n    \"output\": \"\\t\\t\\t\\tFor each test, the output consists of one line containing the sum of natural numbers in the range.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Thalyson Nepomuceno, Universidade Estadual do Cear\\u00e1  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tA criminal organization of the city is getting more powerful every day, and for to try follow this advance, the protective organization of the city is investing heavily on the training of his men. Bino, also known as Agent 004, is the best agent of the protective organization, thus he was assigned to a special mission.\\n\\n\\t\\t\\t\\tThe special mission of Bino is to deliver a secret message from a barrack of training special agents to another barracks. The city is full of criminals, and they want to intercept Bino before to deliver the secret message.\\n\\n\\t\\t\\t\\tBino not know very well the routes of the city, having spent most of the time of your life being trained in barracks of training special, unlike the criminals, who spend most of their lives on the streets and know all possible routes.\\n\\n\\t\\t\\t\\tAs Bino is the world's best agent, he is capable of instantly eliminating any number of criminals. Criminals can intercept Bino anywhere in the city (In all routes and all\\u00a0 places, even in places where the initial barrack and the destination barrack). Bino and criminals move at 12 m/s.\\u00a0Bino always use the path that will find less criminals, but criminals always use the best paths to intercept Bino.\\n\\n\\t\\t\\t\\tYour task is to find out what the minimum amount of criminals who Bino will have to eliminate to deliver a secret message from a barrack of training to another. It is guaranteed there will still be at least one path from every place in town for every other place.\\n\\n\\t\\t\\t\",\n    \"id\": 1806,\n    \"input\": \"\\t\\t\\t\\tThe first line contains four integers, N(1 \\u2264 N \\u2264 10000), C(1 \\u2264 C \\u2264 50000), S(1 \\u2264 S \\u2264 50000) and B(1 \\u2264 B \\u2264 10000), representing respectively the number of places in the city, the number of routes known by Bino, the number of routes known only by criminals and the number of criminals. Each of the next C lines contains three integers a(1 \\u2264 a \\u2264 N), b(1 \\u2264 b \\u2264 N) and v (1 \\u2264 v \\u2264 1000), representing that there is a route between locations a and b\\u00a0with distance v meters. Each of the next lines S contains three integers a(1 \\u2264 a \\u2264 N), b(1 \\u2264 b \\u2264 N), v(1 \\u2264 v \\u2264 1000) representing that there is a secret route between locations a\\u00a0and b with distance v meters. The next line contains B integers li (1 \\u2264 li \\u2264 N) representing the criminal i starts in place l. The last test case line contains two integer K(1 \\u2264 K \\u2264 N), and F(1 \\u2264 F \\u2264 N), respectively representing the initial place Bino and where he'll have to deliver a secret message.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Agent 004\",\n    \"output\": \"\\t\\t\\t\\tPrint the minimum amount of criminals who Bino will eliminate.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tThe trinomial triangle is a number triangle of trinomial coefficients. It can be obtained by starting with a row containing a single \\\"1\\\" and the next row containing three 1s and then letting subsequent row elements be computed by summing the elements above to the left, directly above, and above to the right:\\n\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tThe first row of the trinomial triangle is numbered as zero, the second row is numbered as one and so on.\\n\\n\\t\\t\\t\\tGiven the row number R, you are asked to write a program that prints the sum of its elements. For instance, the sum of elements at row 2 is 9 = 1 + 2 + 3 + 2 + 1.\\n\\n\\t\\t\\t\\tBut this time the row number R can be much bigger! Thereby the sum of elements at row R must be printed modulo (231 - 1). For instance, the sum of elements at row 20 is 3486784401 but the expected answer is 1339300754, which is congruent to 3486784401 modulo (231 - 1).\\n\\n\\t\\t\\t\",\n    \"id\": 1807,\n    \"input\": \"\\t\\t\\t\\tThe input is the row number R (0 &leq; R &leq; 999999999).\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Trinomial Triangle, the Revenge\",\n    \"output\": \"\\t\\t\\t\\tThe output is the sum modulo (231 - 1) of all elements at row R. Don't forget the end-of-line character after printing the sum.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Pablo Ariel Heiber, Universidad de Buenos Aires  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe prolific author Stephen King was entering the grades of his literature students in an on-line general average calculator. When he finished, he noticed his return key was broken so instead of entering the grades of a student in a separate line each, he entered them in a single line without any separation. Since Mr. King does not have the skills to fix his return key right away, he needs you to calculate the average of the grades of the student from the non-separated input.\\n\\nEach grade is an integer between 1 and 10. All grades were entered written in base 10 without leading zeros. For example, if the grades of Mr. King\\u2019s student were 3, 10, 1 and 10 they would be entered as \\u201c310110\\u201d.\\n\\t\\t\\t\\t\",\n    \"id\": 1808,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line that contains a non-empty string S of at most 100 base 10 digits. There is a unique way to partition S into a list of substrings such that each substring represents an integer between 1 and 10 in base 10 without leading zeros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Return of The King\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with a rational number representing the average of the grades of the student whose grades Mr. King entered as S. The result must be output as a rational number with exactly two digits after the decimal point, rounded if necessary.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Unknown  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"All people who have seen the movies or series of espionage like 007, Mission Impossible or Hawaii 5-0, know that some countries of the world keeps groups of undercover intelligence agents in governments and organizations in the Middle East , South America and Eastern Europe .\\n\\n                    An intelligence service has n agents scattered in a not very friendly country. Each agent knows other agents and has specific procedures to arrange a secret meeting with each one of them. Coded messages are usually exchanged to arrange such meetings. Given two agents i and j who known each other, there is a certain probability pij of a message exchanged between them is intercepted by hostile individuals.\\n\\n                    From time to time, the leader of the intelligence service needs to disseminate confidential information to all his field agents. To do so, he uses the messaging mechanism of the agents, ie, he contacts some of these agents he knows and they are responsible for propagating the information so that the probability of interception P is minimal. As you can see, the service is so secret that not even the leader knows all his subordinate agents. Your task in this problem is to build a program that calculates P.\",\n    \"id\": 1809,\n    \"input\": \"Your program should be prepared to work on different scenarios, ie, several broadcasts confidential information in various countries. Each scenario is described in the following way. The first line specifies the number of agents in the country, 0 < n \\u2264 100, including the leader of the intelligence service, and the number of pairs of agents who are in the country and known each other, 0 \\u2264 m \\u2264 4950. Each of the following m lines contains two integers i, j and a rational pij, 1 \\u2264 i, j \\u2264 n and 0 \\u2264 pij \\u2264 1. Each line means that agents i and j know each other and that a message exchanged between them is intercepted with probability pij. A zero value for n indicates the end of the scenarios. You can assume that it will always be possible to transmit confidential information between all agents.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Secret Agents\",\n    \"output\": \"For each scenario the input, your program should print the text Cenario x, probabilidade de interceptacao = P, where x is the position of the respective scenario in the input file (numbered from 1) and P the probability of the information being disseminated to be intercepted. This probability should be printed with three decimal places. You must leave a blank line between each scenario.\",\n    \"timelimit\": 0.0\n}""{\n    \"author\": \"By Unknown  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Beverly Hills and Century City are among the more affluent and sophisticated counties of Los Angeles. Its inhabitants have too eccentric tastes and attitudes and they are always looking for new ways to spend your money with new hobbies and fun. Currently, cryogenics has spread among residents of these cities inspired by the movie Vanilla Sky. Now, they have appealed to the local company A.C.M \\u2013 Agency of Cryogenics keith-Morris \\u2013 to extend their lives.\\n\\nDue to high demand, the company has a problem to be solved: design a production plan of their cryogenic cells in a given period of time, i.e, a production plan of minimum cost in a given period of \\\"n\\\" days, subjeto to:\\n\\n\\n\\tFixed cost of production (non-negative) ft, 1 \\u2264 t \\u2264 n;\\n\\tUnit production costs pt;\\n\\tUnit costs of storage ht;\\n\\tNon-negative demands dt;\\n\\n\\nYour task is build a program to help A.C.M solve its problem.\",\n    \"id\": 1810,\n    \"input\": \"The input has multiple test cases. Each instance has a line with a integer 0 \\u2264 n \\u2264 180 which means the number of planning days. The end of input is indicated by a test case with n = 0 and this case shouldn't be processed.\\n\\nThe next n lines contains the integers ft \\u2265 0, pt, ht e dt \\u2265 0, with 1 \\u2264 t \\u2264 n.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Beverly Hills, Century City\",\n    \"output\": \"For each test case, your program should output Instancia #x in the first line, where x is the number of test case (starting at 1). In the second line write the minimum cost of production at n days. A blank line must be printed between each test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Unknown  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"There is no moment of greatest anguish among the movie stars that the ceremony of delivery of the statues at the Kodak Theatre. Are not rare actors and actresses who see their pulse reaching alarming levels. The risk of a heart attack grows when the beats become more and faster in consecutive periods, suggesting a period of great anxiety.\\n\\n                    Concerned about this fact, the Academy of Arts and Sciences in Hollywood decided to monitor the heartbeat, at regular intervals, of several candidates to receive the statuette. With these data they intend to make a program that alerts doctors on call if one of the famous is on the verge of a heart attack. Your task in this problem is to assist the Academy in this noble mission.\",\n    \"id\": 1811,\n    \"input\": \"Several instances are given. The first line of each instance contains the number 0 \\u2264 n \\u2264 1000 of actors/actresses monitored (which will be identified by numbers 1, 2, ..., n) and the number 0 \\u2264 m \\u2264 100 beats observed in these actors. Then, in each of the next n lines are given the measurement m (the heartbeat is an integer between 0 and 200). The case in which n = 0 represents the end of the file and it must not be processed.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Oscar Goes To...\",\n    \"output\": \"You will need to print a header indicating the number of the instance that you are handling (Instancia # i) and in the following line, the number of the actor / actress who is most at risk of suffering a heart attack. The risk for heart attack increases with the number of consecutive observations when the number of beats increased. If there is a tie on this criterion, return the actor who has the biggest difference between the first and last measurement interval, where the beats were increasing. If the tie persists, the risk will be higher for those with the highest rate at the end of the interval. If there is still no decision, return the lowest index.\\n\\t\\t\\t\\t\\t A blank line must be printed after each output instance.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Unknown  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The Science Academy of Czech Republic, worried about the summer floods in Prague, is fostering the development of a new computational cluster, it has, among other tasks, to make a more accurate weather forecast. This new cluster is composed by m equally machines working in parallel. Because of budget reasons, each machine may process only a task at once, and each task can not be processed in more than one machine simultaneously. The cluster allows, however, pre-emption. In other words, it is possible to interrupt the execution of a task and return it posteriorly, in other machine if necessary.\\n\\nYou've been invited to an Computer Science related event to develop a preliminary version of task scheduler of the cluster, since you were in Prague. In this version, it's provided a set of tasks T, in which one task t \\u2208 T has:\\n\\n\\n\\tA process requirement pt that denotes the number of time units needed to accomplish the task;\\n\\tA release moment rt, that represents the time unit from which the task is available to processing (it could be waiting data, for example);\\n\\tA value dt \\u2265 pt + rt, that indicates the first moment, in time units, in which the task shall, imperatively, be done. In other words, the task t must be held in range [rt , dt).\\n\\n\\nYour scheduler must receive that data, accordingly with the format described below and it must tell if there is or not a viable scheduling, or in other words, a scheduling that completes every task in the time interval allowed.\",\n    \"id\": 1812,\n    \"input\": \"Your scheduler must be prepared to work with various instances of input. Each instance follows this format. On the first line are provided the number of machines, 0 \\u2264 m \\u2264 100, and tasks, 0 \\u2264 n \\u2264 1000, respectively. On the next n lines are provided the values pt \\u2265 0, rt \\u2265 0 and dt \\u2265 0 (one triple per line) for the tasks t \\u2208 T. The instants rt and dt are integers, and pt is decimal. Values m = 0 and n = 0 indicates that the instances processing is finished and there's nothing more to process. All the input values of the same line are separated by any number of empty spaces.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"A Cluster to Avoid Floods\",\n    \"output\": \"For each solved instance, you must print an identifier Instance h, in which h is an integer number, sequential and crescent starting from 1. On the next line it must be printed Viable or Not Viable, depending of the scheduling for the instance if it's viable or not, respectively. An empty line must separate each instance output.\",\n    \"timelimit\": 0.0\n}""{\n    \"author\": \"By Unknown  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Mr. \\u0158e\\u017e Slovankou is the owner of a company in Prague specialized in transportation of perishable products. Because his company is one of the oldest and more traditional companies in the branch, it is responsible for more than 90% of all the transportations of this kind of merchandise in the country. Daily, several loaded trucks leave from a post of the company (the place where the products are stored) on their way to the consumer centers.\\n\\n                    Aiming a future entry in the European Economic Space, the Czech Republic government, through its Healthcare Comission, imposed a series of measures to further ensure the quality of the food consumed by the population. To avoid losing its place in the market, Mr. \\u0158e\\u017e's company needs to adjust itself to the new rules as soon as possible.\\n\\n                    According to the government, from now on, products destined to different consumer centers can't share the same truck any more. Besides that, all the transportation must be completed in less time than a given limit specified for each merchandise.\\n\\n                    Adapting to these new rules will bring a meaningful increase to the company's operational costs. Worried about that, Mr. \\u0158e\\u017e decided that his trucks will obey the rules, but they also must travel through the shortest path possible, in order to save fuel, slow down the tire wear, etc.\\n\\n                    To solve this logistical issue, Mr. \\u0158e\\u017e asked you to help him, since you said you would be able to write a program that receives a map with the roads (in which each road is associated with a length in kilometers and a time in minutes that it takes to be traversed), the origin and the destiny of the transportation and the time limit, and says whether it is possible or not to deliver the products in accordance to the imposed restrictions. If so, you also said that that you will provide data about the time spent and distance traveled.\\n\\n                    Mr. \\u0158e\\u017e was very impressed and satisfied with your helpfulness, and promised you a nice reward.\",\n    \"id\": 1813,\n    \"input\": \"Your program will be able to solve several instances of the logistical problem. Each instance is structured as described below.\\n\\n                    On the first line, there will be the number of cities (O \\u2264 n \\u2264 100) and the number of roads (0 \\u2264 m \\u2264 10000) in the network. On the next m lines, there will be, in each line, four integers separated by blank spaces, x y c t, meaning that the road leads from x to y, c is its length and t is the time needed to travel through it (this datum has been obtained from the national department of roads and transportation, which evaluates the traffic regularly). Observe that 1 \\u2264 x, y \\u2264 n e that c, t \\u2265 0. An interesting fact about Czech Republic is that all of its roads are one-way in order to avoid dangerous passings, which may cause accidents.\\n\\n                    On the following line, an integer k \\u2265 0 is given, representing the number of deliveries your program should plan in this network. The next k lines give, in order, the city of origin, the city of destiny and the time limit t for the transportation of this merchandise, in minutes. According to the inspectors, no transportation lasting more than 100 hours will be admited. Therefore, 0 \\u2264 \\u1e71 \\u2264 6000. A value n\\u00a0= 0 indicates the end of the input and should not be processed.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Anachronic?\",\n    \"output\": \"For each instance solved, you should print and identifier \\\"Instancia h\\\", where h is the number of the instance, starting from 1. The next k lines refer to the possibility of the deliveries. For 1 \\u2264 j \\u2264 k, you should print on the j-th line the message \\\"Impossivel\\\" if it's not possible to make the delivery within the time limit, or \\\"Possivel - <d> km, <t> min\\\", where <d> is the distance that must be traveled and <t> is the time spent to travel this distance. If there is more than one route with the minimum possible distance, choose the one with the minimum time.\\n\\nA blank line should separate the output of each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Maratona de Programa\\u00e7\\u00e3o 2003, IME-USP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Charles University in Prague, by example of several other leading universities around the world, recently established an interdepartmental graduate program in computational biology. Ms. Dolej\\u0161kova, member of the faculty, is currently interested in the problem of phylogenetic trees, and working with n chains of DNA. To simplify the work, Ms. Dolej\\u0161kova decided to work only with gene chains of length m (i.e., all the chains have exactly m nitrogenous bases).\\n\\n                    An interesting sub-problem involves storing the n chains in a disk. Yet, Ms. Dolej\\u0161kova is using a naive scheme that requires n \\u00d7 m characters, besides the delimiters. I.e., all sequences are written in a text file, sequentially. Mr. Chuchle, a department mate and storage techniques expert, suggested an alternative that may be more economical.\\n\\n                    According to Mr. Chuchle, you can store a chain and the information that allow it to transform into other. More specifically, consider two chains of DNA D1 = ACTA and D2 = AGTC, where A, C, G, T are the nitrogenous bases adenine, cytosine, guanine and thymine, respectively. Note that it is possible to turn D1 into D2 by exchanging the nitrogenous bases C and A of the 2 and 4 positions from D1 to G and C, respectively. Consider now a third chain D3 = CGTC. Only a modification is required to turn D2 into D3 and three changes are required to transform D1 into D3. Thus, is profitable to have the transitivity of the changes between the chains.\\n\\n                    Ms. Dolej\\u0161kova quickly observed that alternative storage scheme does not offer gains if the chains involved are very different. Thus, instead of using it promptly, she asked you to build a program that receives n chains, and determines the minimum number of changes that must be written (plus a chain) to make it possible in future to obtain again the original n chains. Based on the results provided by your program, Ms. Dolej\\u0161kova will decide which system should be used in each instance of data.\",\n    \"id\": 1814,\n    \"input\": \"Your program must work with multiple instances. The first line contains two integers, n and m, (0 \\u2264 n \\u2264 100 and 1 \\u2264 m \\u2264 1000) indicating the number of DNA chains and your length. Is given n strings in the next n lines, one per row, without additional spaces. Each string is a sequence of characters chosen from the alphabetic \\u03a3 = {A, C, G, T}. The value for n = 0 indicate the end of instances and must not be processed.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"DNA Storage?\",\n    \"output\": \"For each instance solved, you must print an identifier \\u201cInstancia\\u201d h (Instance in Portuguese) which h is an integer, sequential, growing and begin in 1. In the next line, you must print the minimum number of transformation which needs to be written for that instance. A blank line must be printed after each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Maratona de Programa\\u00e7\\u00e3o IME-USP 2003  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"In the winters of Praga the cold is unbearable. To keep the body warm, many locals use warm drinks (like coffee or tea for example) or alcoholic drinks. Sometimes, Mr. T\\u0159ebo\\u0148 frequents a small bar from his neighborhood. However, after several hours, some end up exaggerating on the doses. In this moment, Mr. T\\u0159ebo\\u0148 needs to return to his house. The problem is that he's not feeling well (actually he's drunk :-) and he doesn't remember where he lives. So he begins ringing the houses' bells to ask if he lives there. He does that until he finds his house. Due to his state, Mr. T\\u0159ebo\\u0148 won't follow any logical order to ring the houses' bells. After ringing a bell and verifying that that house isn't his, he will keep searching. Also he can't memorize which bells he already rang. The way he chooses the houses to have their bells rang follows a distribution of probability conditioned only to the last house visited. Consider that someone always answers the door and responds to Mr. T\\u0159ebo\\u0148 if he lives there or not. We want to know his chances of not getting home to sleep, knowing that after ringing a ceirtain number of bells he won't be able to carry on and he'll end up staying there.\",\n    \"id\": 1815,\n    \"input\": \"The input file has the following composition for each instance: the first line contain the integers 0 \\u2264 n \\u2264 100, 0 < t \\u2264 n, 0 < k \\u2264 n, 0 < m \\u2264 100, representing the number of houses, the initial house, Mr. T\\u0159ebo\\u0148's house and the quantity of houses that he can visit to try to get home, respectively. Then n lines are gaven. The i-th line represents the house i and contain the numbers ai1, ... , aij, ... , ain, separated by whitespaces, representing the probability of Mr. T\\u0159ebo\\u0148 to go from i to j. The input ends with n = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Drunk People?\",\n    \"output\": \"The output file must contain, for each input instance, an indentifier Instancia h\\u00a0(Instance h), where h\\u00a0is an integer, sequential and ascending starting from 1. In the following line, a number (rounded to 6 decimals) indicating the probability of Mr. T\\u0159ebo\\u0148 not have found his house after m bells rang. A blank line must separate the output of each instance, including the last.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Maratona de Programa\\u00e7\\u00e3o 2003, IME-USP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Traces of an old viking civilization has been discovered around Prague, and a big amount of printed material was found near the arqueological site. As expected, the reading of this material proved to be arduous and challenging, since this civilization used a text encoding schema to avoid its knowledge to be used by its rivals.\\n\\n                    Recently, czech researchers announced with great excitement to the press the understanding of the encoding mechanism used by those vikings. According to the researchers, the viking alphabet was made by the letters from A to Z (including letters K, W and Y).\\n\\n                    The encoding we accomplished in the following way. Initially, it was built a list where the letter A appear in the first position, the letter B in the second, and so on, with the letters following the same order of our alphabet. Next, the text to be encoded was swept from left to right and, for each letter l found, the number of its position on the list was printed and l was moved to the start of the list. For instance, the viking encoding for the message:\\n\\n                    A B B B A A B B B B A C C A B B A A A B C\\n\\n                    was given by the following integer sequence:\\n\\n                    1 2 1 1 2 1 2 1 1 1 2 3 1 2 3 1 2 1 1 2 3\\n\\n                    The czech researchers are asking your help to build a program that receive a sequence of integers that represents an encoded message and decode it.\",\n    \"id\": 1816,\n    \"input\": \"Your program must be prepared to work with multiple instances. Each instance have the following structure. In the first line an integer m (0 \\u2264 m \\u2264 10000) that represents the number of integers that compose the encoded text. In the next line its given, separated by white spaces, the m integers values (each value is greater or equal to 1 and less or equal to 26). A value of m = 0 indicates the end of the instances and must not be processed.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Prague Vikings?\",\n    \"output\": \"For each solved instance, you must print the identifier Instancia h where h is an integer number that sequentially increases from 1. In the next line you must output the decoded text. A blank line must be printed after each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Unknown  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The region of Tsing Ling is internationally famous for great archaeological findings. Some of these findings, like the ruins of Ts\\u00e9 Lung Zhao, challenge the best scientists in the world. Ingrown in the ruins were found various pairs of character sequences of unknown meanings, and that fact became the biggest Tsing Ling enigma. Each pair has a smaller and a larger sequence. Above the portal of the Tsing Ling monastery is written that the one who discovers the meaning of the sequences will have the answer to all questions of the universe.\\n\\nThe german archaeologist Harry Thanan Gruber thinks he discovered the enigma, but he needs your help in the problem. He thinks the solution of the Ts\\u00e9 Lung Zhao character enigma will provide the numbers to decipher the book of Tsin Wu, found in the same region by his mastermind, Dr. Cauchy-Schwartz, in the late nineteenth century. Acording to Herr Gruber's conjecture, the number sequence that must be used to decipher the enigma is given by the number of times that the smaller sequence occurs in the larger sequence as a subsequence.\",\n    \"id\": 1817,\n    \"input\": \"Several pairs of sequences are given. For each pair is given the number 0 \\u2264 m \\u2264 100 of characters in the smaller or equal sequence and the number 0 \\u2264 n \\u2264 1000 of characters in the largest sequence. In the following lines are given the two sequences, one per line, first the smaller and then the larger. Values m = n = 0 indicate the end of the dataset.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Tsing Ling Archaeologists\",\n    \"output\": \"For each pair of sequences, from now on called instances, you must print an identifier \\\"Instancia h\\\", where h is an integer number, sequential and increasing from 1. In the next line, you must print the number of times the smaller sequence occurs as a subsequence of the larger. A blank line must separate each instance output.\",\n    \"timelimit\": 0.0\n}""{\n    \"author\": \"By Unknown  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"Now with the World Finals Programming Marathon in mind, the Chinese government started a project for the construction of a new convention center. This center will be the most modern in the world, with the entire infrastructure to host major events. The government has already decided (and if it was decided, it is decided) to build it in the shape of a circle. When viewed from above this new center, with the help of all its last generation lights, will give the impression of being a big rounded spaceship. With tricks of lights, is intended to create even an impression of movement to the majestic building.\\n\\n                    But everyone knows that China has a big problem of physical space, and the only place available for building is on the outskirts of an ancient forest of ancient trees. To make the project even more attractive, it was decided that the center will be built within the forest, but without dropping a single tree. The luck of the designer is that the forest is sparse, and there is enough space between the trees in some places. Since you want to create the largest possible (in terms of built area) convention center, your task is to help find the best place to building. Your goal is to find the coordinates of the midpoint of construction, which shall be within the convex hull induced by trees.\",\n    \"id\": 1818,\n    \"input\": \"The input is composed of several instances. Each instance starts with a line containing the number 0 \\u2264 n \\u2264 1000 of trees in the forest, followed by n lines containing the ordered pairs xi yi, representing the coordinates of the trees of the forest. All coordinates given are integers. The input ends with n = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Convention Center\",\n    \"output\": \"For each solved instance, you should print an identifier \\u2018Instancia h\\u2019 where h is an integer, increasing and sequential number starting from 1. On the next line you should print an ideal central point, x y position, for the convention center. If there are more than an ideal point for building, print the one with the lowest value for x. Provided there is more than one option, print the one with the smallest value for y. Truncate the numbers printed in exactly three decimal places. If it is unable to build the center, write the word \\u2018impossivel\\u2019 in the line.\\n\\n                    A blank line should separate the output of each instance.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Unknown  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"China is a major producer of food, but also huge consumer. Chinese researchers discover that in certain moments of their history the agricultural production was higher than consumption, and at other times this situation was reversed. Worried with the future of the great nation, they started to collect data about the plantation area, the quantity of workers e the agricultural production. To better investing their resources , now they want to make a forecast about the production of the country.\\n\\n                    The data set that the researchers collect is composed by triples (Xi, Yi, Zi), where Xi representes the area of plantation, Yi the quantity of workers and Zi the agriculture production. As this production is directly linked with the other data collected, they decided to estimate the future production using a linear function a1+a2x+a3y, that minimizes the sum of the square errors\\n\\n                     \\n\\n                    where n is the total of triples availables. Thus they will be capable to better plan the production and the consume of the next years. Your goal is to calculate the desired linear function.\",\n    \"id\": 1819,\n    \"input\": \"The input consistes of many instances. For each input instance is given one integer number 3 \\u2264 n \\u2264 1000 indicating how much triples was obtained in the data collection. In each one of the next lines is given a triple Xi, Yi and Zi as acreage (thousand acres), the number of workers involved (given in thousands), and agricultural production (given in tonnes of food), respectively. The input file ends when n = 0 is found. Assume that there is no linear relationship between the number of workers and the acreage, then, there is no constants \\u03b1,\\u03b2 such that, for every i, Xi= \\u03b1yi + \\u03b2. Assume also that 0 \\u2264 Xi,Yi,Zi \\u2264 1000 and that all data values are integers.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Estimating Production\",\n    \"output\": \"For each instance solved, you may print a identifier Instance h where h is a integer number, sequential and growing from 1. On the next line, you may print 3 numbers a1, a2 and a3, representing the quotients of the requested linear function. These numbers need to be represented in three decimal places.\\n\\n                    A blank line shoud divide the output of each instance\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By VIII Maratona de Programa\\u00e7\\u00e3o, IME\\u2013USP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In the famous university of Sing Pil the students always make the work in group. The rules for the group formation, however, are written and the rector always checks if there is a group of students who violated the rules.\\n\\n                    Well, to tell the truth, the only existing rule dates back to the creation of the university. At that time the students comprised groups of three students to do the tasks. Four students, called Ting, Ling, Xing e Ming were close friends and, for all the tasks that need be made, they used comprise a group between them. That was too bad, because forcing the tasks into groups aimed to increase interaction among students. Since then was banned in Sing Pil the square formation, i.e, that four students assemble four groups in which only they are the members.\\n\\n                    For students {Ting, Xing, Ling, Ming} (we will use only the first letter for short) a square would be formed by four groups as follows:\\n\\n                    {TLX, TXM, MXL, LMT}.\\n\\n                    Your task in this problem is write a program to help the university president to verify whether or not there are squares in groups.\",\n    \"id\": 1820,\n    \"input\": \"Several instances are given. For each instance it is given the number m (0 \\u2264 m \\u2264 50) groups. The value m = 0 indicates the end of the data and it should not be processed.\\n\\n                    Each student in Sing Pil is identified with an integer number between 1 and 100 inclusive. In the next m lines are given, in each row, three numbers corresponding to three students who form a group.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Sing Pil University Groups\",\n    \"output\": \"For each solve instence, you should print a identifier Instancia h wherein h is an integer, and increasing sequentially from number 1. If there are no squares in groups, your program should print ok. Otherwise, your program should print all found squares, one per line, with the students numbers separated by a blank space. To facillitate the readind of the rector, the students numbers in a square should be in ascending order and the squares should be listed in ascending lexicographic order.\\n\\n                    A blank line should separate the output of each instance.\",\n    \"timelimit\": 0.0\n}""{\n    \"author\": \"By Unknown  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"The problems that China is facing over time to control the population explosion that afflicts the country are notorious. To make matters worse, in the inland part of this country, traditional marriages are often arranged in families, what increases the chance of children with related parents.\\n\\n                    Aware of the problem, the Chinese government decided to create an agency official marriages. This agency shall receive information from young people who wish to marry and decide whether it is possible to perform marriages among them to prevent wedding of relatives and to guarantee that none of the young guys ends single. As in many other countries, in China, only monogamous marriages between boys and girls are allowed.\\n\\n                    Your task is to assist the government, writing a program to find out if it is possible to perform the marriages for given young groups.\",\n    \"id\": 1821,\n    \"input\": \"Your program must work with many groups of guys, hereinafter referred instances. Each instance has the following structure.\\n\\n                    In the first line, two integers are provided. n (0 \\u2264 n \\u2264 100) represents the number of boys and girls and m (0 \\u2264 m \\u2264 1000) represents the number of kinships among them. Kinships between a same gender were not included in m because that is irrelevant to the problem.\\n\\n                    In the next m lines, m pairs of numbers between 1 and n (including) are provided, one pair per line. The first number is a boy and the second a girl who are relatives.\\n\\n                    Values \\u200b\\u200bn = m = 0 indicate the end of instances and shall not be processed.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Chinese Miai\",\n    \"output\": \"For each solved instance, you must print a handle Instancia h, where h is an integer increasing and sequential number starting from 1. On the next line, you must print possivel if you can perform marriages among the n boys and the n girls without marriages of relatives, and print impossivel otherwise.\\n\\n                    A blank line must separate the output of each instance.\",\n    \"timelimit\": 0.0\n}""{\n    \"author\": \"By Unknown Author Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Due to the economic liberalization that occurred in China in recent years, much of the country was transformed into a construction site. Some buildings in progress are so monumental that, along with the already famous Wall of China can be seen from the moon to the naked eye.\\n\\n                    A contractor rooted in Shanghai is responsible for the execution of various works in the country. After some time, the contractor's engineers realized that every new work, they had to solve a similar to what had already settled at the beginning of the previous works problem. Tired of always performing the same types of calculations, requested his help in building a program that solved their problem, described below.\\n\\n                    Consider a work that lasts for n weeks. The i-th week of work, for 1 \\u2264 i \\u2264 n, fi employees are needed to run it. The costs of recruitment and education of an employee are x yuan. One spends y yuan to dismiss an employee. A necessary expense employee z yuan per week and each additional employee, i.e., that each contract employee is not required in a week of work, costs w yuan a week for the contractor. (yuan is the Chinese currency.)\\n\\n                    Staff can be hired and fired every week. Initially, the work does not have any employees. At the end of it, all employees should be fired.\\n\\n                    The problem is to determine the smallest possible value that the contractor should spend with officials throughout the work, always meeting the weekly restrictions. I.e., there can be no less than fi employees working on site in the i-th week.\",\n    \"id\": 1822,\n    \"input\": \"Your program should be prepared to work with diverse constructions, hereinafter referred to as instances. Each instance has the following structure.\\n\\n                    In the first row an integer n (0 \\u2264 n \\u2264 200) representing the number of weeks of the work is provided. In the next row are given, separated by whitespace, non-negative integers n and less than or equal to 50, in which the i-th value (1 \\u2264 i \\u2264 n) represents the number fi of employees needed in the i-th week.\\n\\n                    On the next line, also separated by whitespace, are provided four integers x, y, z and w (0 \\u2264 x, y, z, w \\u2264 1000), where x is the cost of recruitment and education of a new employee, y is the cost of firing an employed employee, z is the weekly cost of an employee required and w is the cost to maintain a surplus employee for a week's work.\\n\\n                    A value n = 0 indicates the end of the instances and should not be processed.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Constructions of China\",\n    \"output\": \"For each solved instance, you should print an identifier \\u201cInstancia h\\u201d where h is an integer, and increasing sequential number starting from 1. On the next line, you must print the smallest possible value that the contractor should spend with officials throughout this work.\\n\\n                    A blank line should separate the output of each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By VIII Maratona de Programa\\u00e7\\u00e3o, USP  Brazil\\r\",\n    \"category\": \"Graph\",\n    \"description\": \"\\r\\n                    Very much has been known about China's last emperor, immortalized in the classic Oscar-winning movie. However, his predecessor, the Emperor Thang Po Lop had a much more interesting life, once he died even in the forbidden city surrounded by concubines and eunuch servants.\\r\\n\\r\\n                    The Emperor Po Lop was a great chopsticks collector. Since the age of 9 years, he was keeping them and was building with them huge mazes using a quite interesting strategy. First Po Lop chose a rectangular yard of the forbidden city to build the maze, which always occupied all space of the chosen yard. The chopsticks were then put in the yard, apparently at random places, and always parallel to one of the yard\\u2019s corners. The emperor never put chopsticks to overlap (or even part of them), although crossing or even leaning chopsticks are possible. According to his biography, the emperor Po Lop built monstrous mazes always carefully.\\r\\n\\r\\n                    Unfortunately there was a problem. Although an expert builder of the mazes, the emperor was unable to know if the maze was finally containing a path linking its entrance to the exit (always in opposite sides of the yard) or not. To know that, he was using his eunuchs. He was instructing the eunuch to seek the path that matches. Many times, the eunuch said it was not possible. The emperor Po Lop become angry and beheaded the servant because he doubted on his servant\\u2019s answer. Happily, as being very patient (not with eunuchs) the emperor was quite careful and wrote down judiciously the information about the mazes built. His notes were found in the library of the forbidden city when the revolution occurred and were saved from destruction. Your task in this problem is to solve finally the riddle, verifying if the mazes built by Emperor Po Lop have an exit or not.\\r\\n\\r\",\n    \"id\": 1823,\n    \"input\": \"\\r\\n                    Your code must be prepared to work with several mazes, from now on designated instance. Each instance is started with one line containing 5 numbers, called  n xi  yi  xf  yf . The value of n indicates the number of chopsticks used for building the maze. The ordered pair ( xi  , yi ) is the left bottom of the yard and the base. The ordered pair ( xf  , yf ) is the right upper and the arrival point. The next n lines give the coordinates  x1  y1  x2  y2  representing the extremes ( x1  , y1 ) and ( x2  , y2 ) of one of the chopsticks used to build the maze. The input file ends with  n   < 0. It can be assumed that all numbers given are integers and that  n   \\u2264 1000.\\r\\n\\r\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Last But One Emperor\",\n    \"output\": \"\\r\\n                    For each instance resolved, you should print a identifier \\u201cInstancia h\\u201d (where \\u201cInstancia\\u201d means \\u201cinstance\\u201d in Portuguese) in which h is a integer number, sequentially growing from 1. In the next line, you should print \\u201csim\\u201d (\\u201cyes\\u201d in Portuguese) if there exists a way to go from the maze\\u2019s base to the arrival point (without crossing any chopstick...), and print \\u201cnao\\u201d (\\u201cnot\\u201d in Portuguese) otherwise.\\r\\n\\r\\n                    A blank line should separate the output of each instance.\\r\\n\\r\",\n    \"timelimit\": 0.0\n}""{\n    \"author\": \"By VIII Maratona de Programa\\u00e7\\u00e3o, IME\\u2013USP  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The sleep fly is one of the most serious pests in China, which causes huge losses to the country government. Entire populations of small towns are bitten by the fly, and fall asleep during work (many suspect that neither are the flies causing the problem, but that's another history...).\\n\\n                    Worried with this situation Genetic Engineering researchers of the University of ZhaoZhao studied the genome of a eater insects frog in the region and found that the pattern of jumps of the frog could be easily controlled if a change was made \\u200b\\u200bin their chromosome 12. Unfortunately, not all experiments resulted in success, and in addition to some frogs with no legs and 12 eyes, the experiments yielded several species of frogs with different characteristics of jumps. The goal of this problem is that you develop a program that, from the observation of the pattern of frog jumps, make sure it is of the desired type. The frog is of the desired type if is placed in the upper left corner of a rectangular lake he covers the entire length of the lake with a minimum number of hops.\\n\\n                    To note the pattern of frog jumps were made several experiments. In each experiment the frog was placed in a position of the lake and noted that neighboring position he jumped. Neighboring positions are listed 1-8 in a clockwise direction, starting at the position immediately above the position of the frog, as shown below.\\n\\n                    \\n                    \\t\\n                    \\t\\n                    \\t\\t8\\n                            1 \\n                            2\\n                        \\n                    \\n                    \\t\\t7\\n                            frog \\n                            3\\n                        \\n\\n                    \\t\\t\\n                    \\t\\t6\\n                            5 \\n                            4\\n                        \\n                    \\t\\n                    \\n\\n                    Your task is given an instance of a lake, marked on each of their positions with the pattern of frog jumps, check if this, when placed in the upper left corner of the lake, run all their positions.\",\n    \"id\": 1824,\n    \"input\": \"The input file contains several instances. Each instance begins with two integers m (0 \\u2264 m \\u2264 1000) and n (0 \\u2264 n \\u2264 1000) which defines the area of the lake. Then, each the next m lines contains n integers, describing the behavior of the frog when it placed in that position on the lake. Values m = n = 0 indicate the final of the instances and it should not be processed.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Tse Tse Frogs\",\n    \"output\": \"For each solved instance you should print a identifier Instancia h, wherein h is an integer, sequantial and crescent from 1. In the next line, you should print sim if the frog went through all mn positions of the lake, and nao otherwise. A blank line should separate the output of each instance.\",\n    \"timelimit\": 0.0\n}""{\n    \"author\": \"By Unknown  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"A group of crazy scientists from PSGA (Pindamonhangaba's Science and Gymnastics Academy) is studying the behavior of an odd spiecies of blind ants. After years of research, they concluded that:\\n\\n                \\n                \\tThese ants can only travel a straight path and their walking behavior is similar than that of the light. That is, whenever an ant hits a wall it \\\"relfects\\\" (as would a light beam when hitting a flat mirror) in such a way that the reflection angle is equal to the incidence angle;\\n                \\tThese ants only stop when encountering food and keep on moving the same way after it's eaten;\\n                \\tThe maximum an ant can travel without eating is 2 meters.\\n                \\n\\n                In order to prove these conclusions, the scientists built a series of sceneries to test the ants. Each scenery consists of a rectangle with dimensions of M x N meters. Each scenery has four entries, located on each of the vertices, that from now on shall be called by one of the cardinal points, as follows:\\n\\n                \\n\\n                Inside the rectangle, MN amounts of food were distributed in the center of each of the 1m x 1m squares contained in the scenery. The ants are inserted into each scenery through one of the four possible entries in a path that makes a 45 degrees angle with both sides of the rectangle conected in that vertex. After walking aproximately 0.707m an ant encounters its first meal and continues following a straight line after eating it until one of the following happens:\\n\\n                \\n                \\tThe ant hits a wall, in which case its path is reflected. The resulting path still has an angle of 45 degrees;\\n                \\tThe ant travels more than 2 meters and finds no food, in which case the poor thing dies...;\\n                \\tThe ant encounters a door, in which case it goes out of the testing area and the experiment ends.\\n                \\n\\n                Your mission is to write a program that predicts what's going to happen with the testing ant in each of the sceneries.\\n                The input/output should be written in portuguese. North = Norte, South = Sul, Oeste = West, Leste = East.\",\n    \"id\": 1825,\n    \"input\": \"The input consists of a series of sceneries. For each scenery will be provided, in one line, the measurements of the rectangle, first the width M (North - West) and then the height N (North - East) (0 < m,n \\u2264 100.000), the door though which the ant was inserted. A line containing a value of 0 for one of the rectangle's dimensions signals the end of the input.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Anting\",\n    \"output\": \"For each scenery, you'll have to write one line on the output file, with one of the following contents:\\n\\n\\n\\tIf the ant dies, write \\\"Dead...\\\"\\n\\tOn the contrary, write:\\n\\t\\n\\t\\tThe percentage of food eaten during the travel. It should be written using three digits followed by the % sign, if there aren't enough digits, spaces should replace the missing digits. The percentage should be rounded to the nearest integer, in case of a tie it should be rounded down;\\n\\t\\tThe amount of bumps the ant made on the walls of the testing area - It should be written with 10 digits, if there aren't enough digits, spaces should replace the missing digits;\\n\\t\\tThe door through which the ant escaped the testing area.\\n\\t\\n\\t\\n\\n\\nThe following image is related to the sample input/output:\",\n    \"timelimit\": 0.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Matheus Pimenta, UNB  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tContext-free grammar \\u2013 CFG \\u2013 is a mathematical structure used to generate strings, which are finite sequences of terminal symbols. The set of all strings that can be generated by CFG G is the language of G, written L(G). In this problem, given a CFG G, you must tell if L(G) is an empty set, finite, or infinite.\\r\\n\\r\\n\\t\\t\\t\\t\\tA CFG is a 4-tuple (V, \\u03a3, R, S), where\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\tV is a finite and non-empty set whose elements are called variables.\\r\\n\\t\\t\\t\\t\\t\\t\\u03a3 is a finite and non-empty set, disjoint of V, whose elements are called terminal symbols.\\r\\n\\t\\t\\t\\t\\t\\tR is a set of rules. A rule has the form\\r\\n\\t\\t\\t\\t\\t\\tA \\u2192 U1U2...Uk\\r\\n\\t\\t\\t\\t\\t\\twhere A \\u2208 V, k \\u2265 0 and Ui \\u2208 V \\u222a \\u03a3 for i = 1,2,...,k.\\r\\n\\t\\t\\t\\t\\t\\tS \\u2208 V is the start variable.\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tTo generate a string using a CFG, we run the following procedure.\\r\\n\\r\\n\\t\\t\\t\\t\\tFirst, write the start variable S. Next, choose a rule to substitute S, say, S \\u2192 U1U2...Uk. After this choice, erase the S and write in its place the string of variables and/or terminals U1U2...Uk. Repeat this process until no variable is left written. If it's not possible to generate a string without variables starting with the start variable, we say that the CFG's language is empty.\\r\\n\\r\\n\\t\\t\\t\\t\\tFor example, let be the CFG below, where S is the start variable.\\r\\n\\r\\n\\t\\t\\t\\t\\tS \\u2192 aSa\\r\\n\\r\\n\\t\\t\\t\\t\\tS \\u2192 bSb\\r\\n\\r\\n\\t\\t\\t\\t\\tS \\u2192 a\\r\\n\\r\\n\\t\\t\\t\\t\\tS \\u2192 b\\r\\n\\r\\n\\t\\t\\t\\t\\tS \\u2192 \\r\\n\\r\\n\\t\\t\\t\\t\\tUsing the CFG above, we can generate any palindrome made of a's and b's. For example:\\r\\n\\r\\n\\t\\t\\t\\t\\tS \\u2192 aSa \\u2192 abSba \\u2192 abba\\r\\n\\r\\n\\t\\t\\t\\t\\tObserve that the empty string is a valid string. So, if a CFG G generates, for example, only the empty string, L(G) is finite, but not empty.\\r\\n\\r\\n\\t\\t\\t\\t\\tIn this problem, the variables will be words made only of uppercase letters, that is, characters between A and Z. The terminal symbols will be lowercase letters, that is, characters between a and z. The rules will be in the format described in the next section. The start variable will always be the first variable of the test case.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 1826,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input contains many test cases. Each test case describes a context-free grammar.\\r\\n\\r\\n\\t\\t\\t\\t\\tThe first line of a test case contains two integers v and r, where v is the amount of variables of the CFG, r is the amount of rules, 1 \\u2264 v \\u2264 102 and 0 \\u2264 r \\u2264 2\\u00b7102.\\r\\n\\r\\n\\t\\t\\t\\t\\tEach one of the next v lines contains a word made of uppercase letters, a variable of the CFG. The variable in the first line is the start variable.\\r\\n\\r\\n\\t\\t\\t\\t\\tEach one of the next r lines describes a rule of the CFG. A word of uppercase letters is given, an integer 0 \\u2264 k \\u2264 102 and a sequence of k elements, where each element is a variable, or a terminal symbol.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Is The Language Infinite?\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each test case, print a line with the word \\\"vazia\\\" if the CFG generates no strings of terminals, or the word \\\"finita\\\" if the CFG generates some, but not infinite strings of terminals, or the word \\\"infinita\\\" if the CFG generates infinite strings of terminals.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tYour work in this program is to read an integer number that is the size of a square matrix (width and height) to be filled as follows: the outer part is filled with 0 in the inner part is filled with 1, the main diagonal is filled with 2, the secondary diagonal is filled with 3 and the central element is 4, as the examples below.\\r\\n\\r\\n\\t\\t\\t\\t\\tObs: square with '1' always starts at position size / 3, considering width and height and both begin in 0 (zero).\\n\\t\\t\\t\\t\",\n    \"id\": 1827,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains a number of test cases and ends with EOF (end of file). Each test case consists of an odd integer number N (5 \\u2264 N \\u2264 101) that is the size of the array. For each test case, print the corresponding array as below. After each test case, print a blank line.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Square Array IV\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the corresponding array as below. After each test case, print a blank line.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por Edson Alves, Faculdade UnB Gama Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"In the 8th episode of Big Bang Theory's second season,\\n        The Lizard-Spock Expansion, Sheldon and Raj are arguing\\n        about what is the best: the movie Saturn 3 or the TV show \\n        Deep Space 9. Raj suggests rock-paper-scissors to settle \\n        down the dispute.\\n        However, Sheldon says \\\"Ooh, I don't think so. No, anectodal evidence \\n        suggests that in the game of rock-paper-scissors, players familiar with         each other will tie 75 to 80% of the time due to the limited number of \\n        outcomes. I suggest rock-paper-scissors-lizard-Spock\\\".\\nThe rules of the game are:\\n        scissors cuts paper;paper covers rock;rock crushes lizard;lizard poisons Spock;Spock smashes scissors;scissors decapitates lizard;lizard eats paper;paper disproves Spock;Spock vaporizes rock;rock crushes scissors.\\nBoth choosed Spock and the game tied. However, it isn't hard to realize \\n        what would happened if the game had continued. In the case of Sheldon's\\n        victory, he would've\\n        said: \\\"Bazinga!\\\"; if Raj had won, Sheldon would declare: \\\"Raj\\n        trapaceou!\\\" (\\\"Raj cheated\\\" in portuguese); in ties, he would\\n        request a new game: \\\"De novo!\\\" (\\\"Again!\\\", in portuguese).\\n        Given the options chosen by both, make a program that prints \\n        Sheldon reaction to the outcome.\",\n    \"id\": 1828,\n    \"input\": \"The first line contains an integer T\\n        (T \\u2264 100) indicating the number of test cases.\\n        Each test case is described using one line. The line contains\\n        Sheldon and Raj options, separated by one blank space.\\n        The possible options are: pedra, papel, tesoura, lagarto e Spock \\n        (rock, paper, scissors, lizard and Spock).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Bazinga!\",\n    \"output\": \"For each test case your program must output a single line \\n        with the following message: \\\"Caso #t: R\\\", \\n        where t is the test case number and R is \\n        Sheldon's reaction to the outcome: \\n        \\\"Bazinga!\\\", \\\"Raj trapaceou!\\\", or \\\"De novo!\\\".\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por Edson Alves, Faculdade UnB Gama  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Lucas and Pedro are high school friends. They were really impressed\\n        after a math class that introduced factorial numbers:       \\n\\t\\t  \\n        where n is a natural number and 0! = 1. \\n        They have a question: what is the operation that produces the biggest \\n        number, factorial or exponential?\\nTrying to find out the answer, both proposed the Biggest Number\\n        Game. In this game, two players call, at same time, as fast as they can,\\n        an operation that results in a big number. The player that calls\\n        the operation that results in the biggest number is the winner. Beto, \\n        friend of both, was the judge:\\n        he wrote down the operations. Lucas only called exponentials and\\n        Pedro only called factorials.\\nAt the end of game, none of the three friends could tell who was \\n        the winner. Write a program that helps them to decide who won each round\\n        and who was the champion (the player that won most rounds).\",\n    \"id\": 1829,\n    \"input\": \"The first line contains an integer N \\n        (N \\u2264 1.000), indicating the number of rounds played.\\n Each round is described by two lines: the first contains Lucas's\\n        exponential, in the form a^b\\n        (2 \\u2264 a, b \\u2264 10.000); the second contains Pedro's\\n        factorial, in the form n! (2 \\u2264 n \\u2264 \\n        10.000).  \\n        The numbers a, b, n are integers and the expression\\n        a^b means \\\"a raised to the\\n        b-th power\\\".\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Biggest Number Game\",\n    \"output\": \"The first line of the output must be the message\\n        \\\"Campeao: C!\\\", where C is the champion, or the\\n        message \\\"A competicao terminou empatada!\\\", if the game was a tie.\\nAfter the initial message, for each round played must be printed the\\n        message \\\"Rodada #r: V foi o\\n        vencedor\\\", where r is the round number (the couting starts\\n        on one) and V is the winner of the round r.\\nAny printed message must be followed by a newline character.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Por Edson Alves, Faculdade UnB Gama  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"A chocolate factory produces three kinds of chocolates.\\n        The basic ingredients to make a unit of each kind are listed bellow:\\n        Crocante:peanut (5g), white chocolate (25g) and milk chocolate \\n            (20g);Misto:white chocolate (25g) and milk chocolate (25g);Tradicional:milk chocolate (50g).\\nThe factory sells three different boxes of chocolates. Each box\\n        contains 30 units. The name and composition of each box are:\\n        Especial:30 Crocante;Predileta:10 Crocante and 20 Misto;Sortida:10 chocolates of each kind.\\nKnowing that in a month the factory processed X kg of \\n        peanut,\\n        Y kg of white chocolate and Z kg of milk\\n        chocolate. How many boxes of each kind were produced in\\n        that month?\",\n    \"id\": 1830,\n    \"input\": \"The input is composed by several test cases. Each test case is\\n        described by a single line that contains real numbers\\n        X, Y e Z \\n        (0 \\u2264 X,Y,Z \\u2264 10000), in kilograms,\\n        separated by one space. A line with three zeros marks the end of the\\n        input: don't process this last line.\\nThe values of X, Y, Z have, at most, three decimal\\n        digits.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Boxes of Chocolates\",\n    \"output\": \"For each test case the program must print a line with the message\\n        \\\"Caso #t: A Especial, B Predileta e \\n\\t    C Sortida\\\", where integers A,B,C are the amounts \\n        of\\n        each type of box and t is the test case number (the counting\\n        starts with one).\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Por Edson Alves, Faculdade UnB Gama  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Jos\\u00e9 works selling oranges. He has a team of employees that\\n        packs the oranges in sacks for sale and distribution. Each sack has the same\\n        number of oranges.\\nHe hired new employees to match the raise in production. In the\\n        first day, the newcomers packed 5 oranges in each sack, and 2 oranges\\n        remained unpacked. The team didn't know that the number of oranges per\\n        sack was changed to 7: the work was redone, and the repacked \\n        sacks now have 7 oranges each. In the end 3 oranges were left \\n        unpacked.\\nJos\\u00e9 checked the sacks before sending them to the trucks and noted \\n        that the employees forgot the New Year promotion where each sack \\n        must contain 9 oranges. Once again the work was redone, and this\\n        time there were no leftovers.\\nAfter the trucks departure the team of workers realized that one\\n        more mistake was made: nobody counted the total of oranges packed  \\n        nor the number of sacks sent! Before telling Jos\\u00e9 the new \\n        mistake, one of them suggested that is possible deduce the missing \\n        information using only the known facts.\\nCan you write a software that helps the workers in this hard\\n        working day?\",\n    \"id\": 1831,\n    \"input\": \"The input consist of a series of test cases. Each test case is\\n        composed by three lines. Each line informs the number of unpacked \\n        oranges ri (0 \\u2264 ri <\\n        Li) and the number of oranges per sack\\n        Li (2 \\u2264 Li \\u2264 1000), separated by a single\\n        space, with i = 1, 2, 3.\\n        You may assume that Li and ri are co-prime\\n        integers (there isn't other positive common divisor between \\n        L1, L2, L3 than one).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Hard Day At Work\",\n    \"output\": \"For each case the following message must be printed: \\n        \\\"Caso #t: N laranja(s)\\\", where t is\\n        the test case number (the counting starts with one) and\\n        N is the total of oranges. If there are more \\n        than one solution to the problem, you must choose the smallest positive \\n        integer solution.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Por Edson Alves, Faculdade UnB Gama  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"EBCDIC (Extended Binary Coded Decimal Interchange Code) is a\\n        8-bits character encoding schema developed by IBM in sixties.\\n        It is based on punched cards encoding, and was used in IBM mainframes.\\n        Though it uses a larger encoding interval than ASCII 7-bits range,\\n        EBCDIC is less user friendly that ASCII because the alphanumeric \\n        characters are not contiguous as in the former schema.\\nThe following image shows the EBCDIC encoding table. White cells\\n        area unused values, and two or more uppercase characters represents\\n        non-printable chars. BLANK is the whitespace character.\\n  \\nWrite a program that convert a EBCDIC-encoded text to ASCII \\n        encoding.\",\n    \"id\": 1832,\n    \"input\": \"The input consists in several test cases. Each case is composed by\\n        a single line with the 3 digit octal values of each EBCDIC character, \\n        separated by a single space.\\nYou may assume that the messages will only correspond to \\n        alphanumeric or whitespace characters.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"EBCDIC\",\n    \"output\": \"For each test case the output must be the message in ASCII \\n        encoding, followed by a newline character.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Por Edson Alves, Faculdade UnB Gama  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Maria tried to install the Christmas decoration in her shop, but\\n        failed to put in the lamps in the desired order. She decided to hire a\\n        specialized company to finish the work: put N colored lamps\\n        in the desired order, correcting the M lamps already \\n        placed.\\nThe company has an employee that works quick and precisely, and\\n        bill the service for the time that the employee have spend working\\n        in a optimal manner. The employee takes 30 seconds to remove an \\n        installed\\n        lamp, one minute to change an installed lamp for another lamp with a \\n        different color, and two and a half minutes to insert a new lamp in the\\n        supporting wire (this operation takes longer because it's necessary\\n        to put a new socket in the electric wires).\\nGiven the value that the company asks for a minute of work, in reals,\\n        the desired sequence of N lamps and the sequence of \\n        M misplaced lamps, compute the service bill, em reals.\",\n    \"id\": 1833,\n    \"input\": \"The input consists in T (T \\u2264 1.000) test \\n        cases, and the value of T is informed in the first line.\\nEach test case is composed by five lines: the first one contains the\\n        value  R (1 \\u2264 R \\u2264 10) that the company\\n        charges for a minute of work. The second line indicates the number\\n        M (0 \\u2264 M \\u2264 100) of lamps misplaced in the\\n        sequence, and the M colors of this sequence are informed in\\n        the follow line, separated by single spaces, in the case of \\n        M greater than zero. This colors are strings of \\n        S (1 \\u2264 S \\u2264 50) characters and there is,\\n        in the most, 20 different colors in each test case.\\nThe last two lines of the input contains the number\\n        N (0 \\u2264 N \\u2264 100) of lamps in the desired\\n        sequence and the N colors that compose this sequence.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Christmas Decoration\",\n    \"output\": \"For each test case the following message  must be printed:\\n        \\\"Caso #t: R$ C\\\", where t is the test\\n        case number (the counting starts with one) and C is\\n        the service bill, with two decimal places (representing the cents),\\n        without thousands separator and with a comma separating reals from\\n        cents.\\nEach message must be followed by a newline character.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Por Edson Alves, Faculdade UnB Gama  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"According to the Douglas Adams's \\\"Hitchhiker's Guide to the Galaxy\\\",         the vogons are an alien race that inhabits the Vogosphere. In the author\\n        words:\\n\\\"Here is what to do if you want to get a lift from a Vogon: \\n        forget it. They are one of the most unpleasant races in the Galaxy. Not         actually evil, but bad-tempered, bureaucratic, officious and callous. \\n        They wouldn't even lift a finger to save their own grandmothers from \\n        the Ravenous Bugblatter Beast of Traal without orders - signed in \\n        triplicate, sent in, sent back, queried, lost, found, subjected to \\n        public inquiry, lost again, and finally buried in soft peat for three \\n        months and recycled as firelighters. The best way to get a drink out of         a Vogon is to stick your finger down his throat, and the best way to \\n        irritate him is to feed his grandmother to the Ravenous Bugblatter \\n        Beast of Traal. On no account should you allow a Vogon to read poetry \\n        at you.\\\"\\nIn the book, the vogons were responsible for Earth's destruction. The\\n        cause was simple: the planet was in the route of the new intergalactic\\n        autobahn. This is the typical vogon's way of life: too many races and\\n        several planets were destroyed to ease the intergalactic traffic.\\nGiven two reference points that the new road must cross in a\\n        straight line and the coordinates and population of each planet in \\n        the spacial sector, write a program that generates a building\\n        report for the vogons.\",\n    \"id\": 1834,\n    \"input\": \"The first line of the input contains the coordinates\\n        X1, Y1, X2, Y2 (-10.000 \\u2264 Xi, Yi \\u2264 \\n        10.000) of the two reference points P1 and P2,\\n        separated by a single space. The coordinates are integers and the \\n        distance unit is the light-year.\\nThe second line contains the number N (1 \\u2264 \\n        N \\u2264 1.000) of the planets that belong to the spatial \\n        sector that the road crosses. The next N lines consist in\\n        the coordinates X and Y (-10.000 \\u2264 \\n        X, Y \\u2264 10.000) and the number (in billions) of \\n        inhabitants H (1 \\u2264 H \\u2264 100.000) of each\\n        planet. These values are integers separated by a single space.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Vogons!\",\n    \"output\": \"The printed report has several lines. The first line contains the\\n        message \\\"Relatorio Vogon #35987-2\\\". The follow line must be the \\n        message \\\"Distancia entre referencias: d anos-luz\\\", \\n        where d is the distance between the two reference points,\\n        in light-years, with two decimal places.\\nIn the next line must be printed the message \\\"Setor Oeste:\\\" and, in\\n        the next two lines, the messages \\\"P planeta(s)\\\" and\\n        \\\"H bilhao(oes) de habitante(s)\\\", where P is the\\n        number of the planets located in the left from the road (when traveled\\n        from first to second reference point) and \\n        H is the total of inhabitants from these planets.\\n        In the same way, must be printed three similar messages in reference to\\n        the \\\"Setor Leste\\\", the right side of the road.\\nFinally, must be printed, in the last line, the message \\n        \\\"Casualidades: P planeta(s)\\\", where P is the \\n        number of planets that were in the road line and, naturally, have to\\n        be destroyed by the vogons.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Por Edson Alves, Faculdade UnB Gama  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"In the electoral campaign, the mayor of the Barro Bravo made a \\n        promise: until the end of his mandate, the citizens would be able to\\n        travel between the city's main spots with no need of drive off-road \\n        (in the beginning of his term, this wasn't possible...).\\nThe first resolution he took was to finish the partially build roads\\n        that had been started but not completed.\\n        At the end of these works, with a reduced budget, the mayor wished to\\n        know if the promise was accomplished or not, and if not, how many\\n        roads must still be constructed to honor his word.\\nWrite a program that helps the mayor to find the desired \\n        information.\",\n    \"id\": 1835,\n    \"input\": \"The input consists in a series of test cases. The number\\n        T (T \\u2264 100) of test cases is given in the \\n        first line of the input.\\nEach test case is composed by several lines. The first two lines\\n        contains, respectively, the values of\\n        N (1 \\u2264 N \\u2264 100) and M \\n        (0 \\u2264 M \\u2264 N(N - 1)/2), where \\n        N is the number of main spots of the city and \\n        M is the number of roads completed by the mayor. \\n        The main spots are identified by a sequence of integer numbers that\\n        starts with number one.\\nThe following M lines contains pairs of values \\n        X and Y \\n        (1 \\u2264 X, Y \\u2264 N) that represents a\\n        road that connects the point X to the point\\n        Y.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Campaign's Promise\",\n    \"output\": \"For each test case must be printed the message\\n        \\\"Caso #t: ainda falta(m) E estrada(s)\\\" or the\\n        message \\\"Caso #t: a promessa foi cumprida\\\" (if the promise\\n        was fulfilled), where t is the test case number\\n        and E is the minimum number of roads that must be constructed\\n        to honor the mayor promise.\\nEach message must be followed bye a newline character.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"Por Edson Alves, Faculdade UnB Gama Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In the first generation, the creatures from the Pok\\u00e9mon\\n        game have four basic attributes: hit points (HP), attack (AT), defense\\n        (DF) and speed (SP). These attributes increased as the pok\\u00e9mon gained\\n        experience levels winning battles or using special itens.\\nFor each level (from 1 to 99) the value of the attributes can be\\n        computed by the following expressions:\\n          \\n\\t    e \\n\\t    \\n        where BS is the base value of the attribute (hit points, \\n        attack, defense and speed), EV is the effort value of the\\n        pok\\u00e9mon (it depends on what and how many battles the pok\\u00e9mon entered),\\n        IV is the individual value of the pok\\u00e9mon in the given\\n        attribute (it is the pok\\u00e9mon \\\"gene\\\") and L is the level.\\nThe EV and IV values differentiate two pok\\u00e9mons\\n        of same kind, making both evolutions differ. Each attribute must have a\\n        integer value: the decimal value must be discarded after the \\n        fraction computation.\\nGiven a pok\\u00e9mon, its basic attributes values and level, compute\\n        the attributes values according to the expressions.\",\n    \"id\": 1836,\n    \"input\": \"The input consists of a series of test cases. The number of test\\n        cases T (T \\u2264 1.000) is given in the first \\n        line of the input.\\nEach test case is composed by five lines. The first one contains\\n        the pok\\u00e9mon name P and its level L (1 \\u2264 \\n        L \\u2264 99), separated by a single space. The pok\\u00e9mon's name\\n        has only alphanumeric characteres.\\nThe following lines have three integers each:\\n        BS\\n        (1 \\u2264 BS \\u2264 255), IV (1 \\u2264 IV\\n        \\u2264 15) e EV (1 \\u2264 EV \\u2264 262.140), \\n        separated by a single space, for each one of the attributes, in this\\n        order: HP, AT, DF e SP.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Pok\\u00e9mon!\",\n    \"output\": \"For each test case the output is formed by five messages, one per\\n        line: \\n        Caso #t: P nivel LHP: HPCAT: ATCDF: DFCSP: SPC\\n        where P is the pok\\u00e9mon's name, L the level and\\n        SC the attribute value for level L, according to\\n        given expressions, and t is the test case number.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tIt has begun the IV UFFS Programming Contest! We hope you enjoy the next hours you are going to spend with us, as we hope you have a lot of fun! Good luck!\\n\\n\\t\\t\\t\\t\\tThis is the 3rd year of the Programming Club, an extension program whose primary goal is to help the programmers of the Brazilian region known as Southern Border to get readier to face the computational challenges from both academic and corporate worlds. Our main strategy lies in promoting workshops and training sessions for Programming contests, not only for students of our institution (UFFS), but also for whoever wants to participate. Despite of many issues, we find ourselves very happy with the results we have been achieving. Having other institutions as partners, as UNOCHAPEC\\u00d3, URI and UNOESC, we collaborated to make Chapec\\u00f3 in the past two years the 2nd largest site of ICPC Brazilian Subregional Contest, which is another indicator of the enthusiasm our people has in Programming.\\n\\n\\t\\t\\t\\t\\tIn order to warm you up for this particular contest, we shall ask you to write a program which calculates the quotient and the remainder of the division of two integers, can that be? Recall that the quotient and the remainder of the division of an integer a by a non-zero integer b are respectively the only integers q and r such that 0 \\u2264 r < |b| and:\\n\\n\\t\\t\\t\\t\\ta = b \\u00d7 q + r\\n\\n\\t\\t\\t\\t\\tIn case you don't know it, the theorem that guarantees the existence and the uniqueness of the integers q and r is known as \\u2018Euclidean Division Theorem\\u2019 or \\u2018Division Algorithm\\u2019.\\n\\t\\t\\t\\t\",\n    \"id\": 1837,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of two integers a and b (-1,000 \\u2264 a, b < 1,000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Preface\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the quotient q followed by the remainder r of the division of a by b.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Federal University of Southern Border (in Portuguese: Universidade Federal da Fronteira Sul, or shortly UFFS) was created in September 9, 2009, having its activities of research, extension and teaching started in March 29, 2010, in rented temporary buildings. Nowadays, the University has 6 campi, in the cities of: Chapec\\u00f3, Laranjeiras do Sul, Realeza, Cerro Largo, Erechim and Passo Fundo. In Chapec\\u00f3, the moving from the temporary building to the campus happened in the 2nd semester of 2013.\\n\\n\\t\\t\\t\\t\\tIn the temporary building in which was sited the course of Computer Science were also sited many other undergraduate courses, like the course of Defence against the Dark Arts, but there were only 3 labs, 2 auditoria and 1 philosopher's stone. All the researchers interested in using the philosopher's stone needed to make their requests at least one week earlier. Based on the list of requests made for the week, the secretary could decide which requests should be attended in order to minimise the amount of time in which the philosopher's stone would be unused. The philosopher's stone was available for use 12 hours by day, which corresponds to 3,600 minutes by week. Enumerating then these 3,600 minutes by 1 to 3,600, each researcher, while making the request, should inform the minute from which the researcher would like to start using the philosopher's stone and the minute from which the philosopher's stone would be available for being used by another researcher.\\n\\n\\t\\t\\t\\t\\tWrite a program to manage the requests as described. We will be in charge of coming back in time to deliver your program to the secretary.\\n\\t\\t\\t\\t\",\n    \"id\": 1838,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input consists of a single integer N (1 \\u2264 N \\u2264 103), which represents the number of requests that have been made for the week. Each one of the N next lines, in turn, describes a request by two integers i and j (1 \\u2264 i\\u00a0<\\u00a0j \\u2264 3,600), which represent respectively the minute from which the researcher would like to start using the philosopher's stone and the minute from which the philosopher's stone would be available for being used by another researcher.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Philosopher's Stone\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line containing the maximum number of minutes of the week in which it is possible not to leave the philosopher's stone unused.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tThe city of Chapec\\u00f3, in the west of the brazilian state of Santa Catarina, is where are located the governance of the Federal University of Southern Border and one of the 6 campi of the university. In the next August 25, the 98th anniversary of the city shall be celebrated, and the city councilmen are already making the preparations for the party. The goal of this party, besides the anniversary celebration, is to raise funds to the construction of the new city Council's building, which is going to be a Chamber of Secrets, where the city councilmen will be able to vote more peacefully the increases of the bus fare without being so disturbed by the students.\\n\\n\\t\\t\\t\\t\\tThe Chamber of Secrets is going to be a real maze, so eventual invaders will not exit so easily. But the architects are not sure about the plan and want to make some changes in the project. In order to make the work easier, they have projected the entire plan of the building over a grid of square units, so that each square unit would be either fully wall or free space, as in the figure below.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tWilling to attack the problem in a more restricted manner, the architects have even picked up some regions of the plan so they could study each region isolated. Now, they want to know what is the number of possibilities they have to rearrange the square units of wall of each region only inside the region itself. For example, for the region highlighted in the figure above, there are 5 possibilities, which we illustrate in the figure below.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1839,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input tells the dimensions N and M (1 \\u2264 N, M \\u2264 50) of the plan in square units, which represent respectively the number of lines and the number of columns of the grid, and the N following lines describe the grid, so that free square units are represented by the character \\u2018.\\u2019 and wall square units by the character \\u2018#\\u2019. Each one of the remaining lines of the input consists of four integers xA, yA, xB and yB (1 \\u2264 xA < xB \\u2264 N, 1 \\u2264 yA < yB \\u2264 M), which define a region by the up-leftmost point (xA, yA) and by the down-rightmost point (xB, yB) of the regions. The input ends in end of file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"The Chamber of Secrets\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each region described in the input, print a line containing singly the number of possibilities the architects have to rearrange the square unities of wall of the region only inside the region itself. As the number of possibilities can be very large, print only the remainder that is left when this number is divided by 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIn 1950, four men were arrested, accused of setting fire to the church of Chapec\\u00f3. Whether they were guilty indeed no one will ever know, but the rage of the people is always faster in judging than the courts. Worried about maintaining the physical integrity of the prisoners, the police chief intended to transfer them to Azkaban. \\u201cThey will be safer in the hands of the dementors than in the hands of the people of Chapec\\u00f3\\u201d, he declared while making the arrangements with the Minister of Magic for the transfer, scheduled for the next morning.\\n\\n\\t\\t\\t\\t\\tWhile the prisoners were waiting sleepless for the transfer which would never occur, they decided to play Dammit, a very popular game in Brazil. In one of its many versions, the rules of the game are:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tOnly 40 cards of a traditional french pack with 52 cards are used, discarding all cards with number 8, 9 or 10. The basic ascending ordering of the ranks used in Dammit is:\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\t4 5 6 7 Q J K A 2 3\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tOne of the players deals n cards to each player. Then, this player flips a card on the table, which determines the trumps of the game, which are the cards with rank immediately above the rank of the flipped card in the basic ordering. For example, if a card with rank 7 is flipped, the cards defined as the trumps of the game are Q\\u2666, Q\\u2660, Q\\u2665 and Q\\u2663. If a card with rank 3 is flipped, the trumps are 4\\u2666, 4\\u2660, 4\\u2665 and 4\\u2663. The trumps of a match worth more than any other card. Although the suit does not interfere in the value of non-trump cards, among trumps the ascending ordering of value of the suits are:\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\t\\u2666 \\u00a0\\u2660 \\u00a0\\u2665 \\u00a0\\u2663\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tOnce the trumps of a match are defined, each player must say how many of the n rounds he thinks he will make. All players must declare their guesses even before the start of the rounds. Then begin the rounds, in each of which each player plays one of his cards revealing it on the table. A player is said to make a round if the card he plays in that round is of greater value than all the other cards played in that round. Since the suits undo a tie only among trumps, it is possible for a round not to be made by any player.\\n\\t\\t\\t\\t\\t\\tAt the end of the game, each player scores as many points as the difference between the number of rounds he said he would make and the number of rounds he has actually made. The player with lowest score wins.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1840,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input informs the integer n (1 \\u2264 n \\u2264 9), followed by the card flipped on the table in the beginning of the match. Each one of the 4 following lines informs the name of a player, followed by an integer m (0 \\u2264 m \\u2264 n), which represents the number of rounds the player declared he would make in the beginning of the match. The ordering in which the players are informed is always the same as they play in each round. Follow at last n lines, in a manner that the i-th of these lines informs the 4 cards played in the i-th round, in the ordering in which the cards were played. Each card is informed under the format XY, with X \\u2208 {4, 5, 6, 7, Q, J, K, A, 2, 3}, Y \\u2208 {D, S, H, C}, and D, S, H and C corresponding respectively to the suits \\u2666, \\u2660,\\u00a0\\u2665 and\\u00a0\\u2663. Consider that the name of each player consists of at least 1 and at most 10 characters of the set {a, b, \\u2026, z, A, B, \\u2026, Z}.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Prisoner of Azkaban\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing only the name of the winner of the match. If it is not possible to define a single winner for the match, print a line containing only the character star (*).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tOne of the trials of the Triwizard Tournament will be a football match, and Chapecoense has been training hard to face Hogwarts players. The Chapecoense Football Association (in Portuguese: Associa\\u00e7\\u00e3o Chapecoense de Futebol, or shortly ACF, or simply Chapecoense) is the football team of the city of Chapec\\u00f3. Founded in 1973, the team nowadays plays among the best teams of Brazil, and it is not some freak teenagers of hat and broomstick that are going to frighten our brave warriors, even though we all have been shocked when the Goblet of Fire chose our muggle players to participate of the Triwizard Tournament. As we have previously mentioned, the history of the team begins in 1973 when\\u2026\\n\\n\\t\\t\\t\\t\\tWe interrupt this text for the transmission of an urgent message of the Minister of Magic.\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\tGood afternoon, muggle ladies and gentlemen! Cursed be the day in which Dolores Umbridge has left the prison. Now, she lives to piss me off with those Math problems. And she knows I'm not good at these things. So, can you write a program to help me? The problem is: she says to me an integer N and asks me to tell how many divisors N has and to keep this N in my head. So far so good. I'm not that stupid and I don't need help in this part. But then she keeps saying to me some prime numbers and, for each prime p she says, I'm supposed to multiply p by N, updating the value of N in my head, and, as if it were not enough, I still have to tell her how many divisors this new N has which are composed only by prime factors less than p. For example, if I have kept in my head N = 630 and she says p = 5, I must update N to 3150 and say 6, for the only divisors of 3150 composed only by prime factors less than 5 are: 1, 2, 3, 6, 9 and 18. But the number N grows very quickly, and I don't want to lose the game to her. Please do something!\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1841,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of at least 2 and at most 105 lines. The first line consists of the single integer N (2 \\u2264 N \\u2264 1012). Each one of the next lines consist of a single prime number p (2 \\u2264 p \\u2264 107). The integers are given in the input in the order that Dolores Umbridge says them. The input ends in end of file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Goblet of Fire\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each prime number p said by Dolores Umbridge, print a line consisting only of the answer that the Minister of Magic was supposed to give her. As the answer can be a very large number, print only the remainder that is left when the answer is divided by 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tAmong the most important highways that cross the Brazilian state of Santa Catarina are the BR282, which crosses the state from east to west, and the BR153, which crosses almost the whole country from north to south. The intersection of these two highways is popularly known as Trevo de Irani (literally \\u2018Irani's Clover\\u2019, for, in Brazilian Portuguese, the same word used for clovers, \\u2018trevo\\u2019, is used for simple highway intersections), because it is located in the city of Irani, or Trevo da F\\u00eanix (literally \\u2018Phoenix's Clover\\u2019), because its shape, when viewed from above, reminds the mythical creature phoenix, as shows the Figure. The region of the state in which is located the Trevo da F\\u00eanix is called Vale do Contestado (literally \\u2018Valley of the Contested\\u2019), because it was in this region that happened one of the most important civil wars of Brazilian history: the Guerra do Contestado (literally \\u2018War of the Contested\\u2019), between rebels of the people known as caboclos, under the notorious leadership of the monk Jos\\u00e9 Maria among others, and federal troops of Brazilian Army, under the notorious leadership of the Col. Jo\\u00e3o Gualberto among others.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tIt is said that, once, a group of rebels was running desperate from the Army troops and happened to come to the Trevo da F\\u00eanix. Frustrated with the battle they had lost that day, one of them kicked the dust of the ground. The wind lifted the dust, which in fact was not dust, but ashes, and for a moment the caboclos saw a phoenix, that gave them an Order: \\u201cMorse!\\u201d. Back to the camp on the next day and having told the story to the monk Jos\\u00e9 Maria, the caboclos started to study the Morse Code, to intercept messages from the Col. Jo\\u00e3o Gualberto's troops and to try to identify repeated patterns in those messages.\\n\\t\\t\\t\\t\",\n    \"id\": 1842,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single string S of at least 1 and at most 105 characters, ended by an end-of-line, which represents an intercepted message. Aside from the end-of-line, the string consists only of the characters \\u2018.\\u2019 (dot) and \\u2018-\\u2019 (dash).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Order of the Phoenix\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line consisting only of the longest substring of S with at least 3 characters that is repeated in S at least once. If there is more than a substring which is repeated with maximum length, print the first of them in lexicographical order, remembering that the character \\u2018-\\u2019 appears in the ASCII table before the character \\u2018.\\u2019. If there are no substrings of S with length at least 3 that are repeated, the output line shall consist only of the character \\u2018*\\u2019.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tThis year, instead of submit themselves to humbling initiation rituals, the freshmen of the Computer Science undergraduate course have chosen to do something more humanitarian to celebrate their entry into a federal university. First, they have gone to donate blood at HEMOSC, the blood centre of the state of Santa Catarina. Then, still with half of the blood in the body, they have gone to a public school, the Little Prince Municipal Centre of Childhood Education (or just Little Prince), in order to do voluntary works. In one of the developed activities, the children of the school should play a very interesting single-player computer game named Flood It!.\\n\\n\\t\\t\\t\\t\\tIn Flood It!, it is presented to the player a grid N \\u00d7 M in which each cell is coloured with one colour, as in the figure to the left. When the player clicks on any cell of the grid of colour \\u03b1, the cell in the top-leftmost corner of the grid, called source, of colour \\u03b2, receives the colour \\u03b1, but not only it: all those cells which are connected to the source by paths which use only the colours \\u03b1 or \\u03b2 also receive the colour \\u03b1. The adjacencies between cells should be considered only in the horizontal and vertical directions to form the paths. For example, when the player clicks on the cell highlighted in the figure to the left, the grid receives the colouring of the figure to the right. The goal of the game is to make the grid monochromatic.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\u00a0\\u00a0\\u00a0\\u00a0 \\n\\t\\t\\t\\t\",\n    \"id\": 1843,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input consists of 2 integers N and M (1 \\u2264 N \\u2264 4, 1 \\u2264 M \\u2264 5), which represent respectively the number of lines and the number of columns of the grid. The N lines following describe the initial configuration of the grid, representing each colour by an integer between 0 and 9. The input does not consist of any other line.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Half-Blood Prince\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing a single integer that represents the minimum number of clicks that the player must do in order to make the grid monochromatic. Be careful! We have been generous while defining the test cases and the time limit of this problem, but not so much.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\t\\tThe culture of the native peoples of Brazil is dying! While it is estimated that in the 15th century there were more than one thousand native peoples in Brazil, today only 215 people are in the record. Recently, fossil hallowed relics associated to an extinct native people have been discovered in the west of the state of Santa Catarina. The relics probably were the foundations of walls of buildings. The figure below illustrates some found relics representing each by a line segment.\\n\\n\\t\\t\\t\\t\\t\\n                    \\n\\n\\n\\t\\t\\t\\t\\tNow, the Government wants to turn all the lands in which the relics are located into an environmental preservation area. In order to make the work of the archaeologists easier, the Government will also build some trails, each one connecting two relics. The intention is to build as least as possible of trail, so that the environmental impact be the least as possible, but so that there is a path between any two trails. The figure below illustrates a manner of building trails between the relics of the figure above in order to minimise the total sum of the lengths of the trails.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1844,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input consists of a single integer N (1 \\u2264 N \\u2264 103), which represents the number of relics found. Each one of the N following lines describe a relic by four integers, xA, yA, xB and yB (0 \\u2264 xA, yA, xB, yB \\u2264 104), which represent the coordinates of the endpoints (xA, yA) and (xB, yB) of the line segment, with length not necessarily positive, that represents the trail.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Deathly Hallows\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line consisting of a single value which represents the optimal total sum of the lengths of the trails that connect the relics. As the company hired to build the trails charges for integer unity of built trail, if the value is not integer then round it up.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Fatefko, UF  Frafil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tFo, hafe you enfoyed our afternoon together? Far fetter than going to the foo, ifn't it? The IF UF Frogramming Conteft if unfortunately coming to an end, fut we hofe that thif end meanf to you, who knowf, a new feginning: a feginning of a career flenty of fuccef! And the formula of fuccef if not too hard: do whatefer you really enfoy doing, fomething with which you hafe fun and keef motifated. After all, what if fuccef fut feeling fulfilled and hafy with yourfelf?\\n\\n\\t\\t\\t\\t\\tTo end thif conteft, write one little frogram more, fuft \\u2018one for the road\\u2019. Write a frogram that confertf teftf to the Dinofaur Language. In the Dinofaur Language, firft we efchange fome confonantf for the letter F (cafital or not defending on the cafe) and after that we eliminate efery occurrence of confecutife refetitionf of the letter. We are not going to fay which confonantf are thefe. You are fufofed to guef them (or deduce them).\\n\\t\\t\\t\\t\",\n    \"id\": 1845,\n    \"input\": \"\\t\\t\\t\\t\\tThe infut confiftf of feferal linef of teft. We are not going to refeal the fofitife numfer of linef not efen the limit of characterf fy line of teft.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Efilogue\",\n    \"output\": \"\\t\\t\\t\\t\\tFrint the teft of the infut conferted to the Dinofaur Language.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Alexandre Campos, UNIUBE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tThe task for this problem is very simple: given a list of numbers, write the name of each one in Portuguese.\\n\\t\\t\\t\\t\",\n    \"id\": 1846,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is a list of numbers, whose size is unknown (about 100000 numbers). Each line will have a single integer n (0 \\u2264 n < 106) \\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Number to Name\",\n    \"output\": \"\\t\\t\\t\\t\\tThe Portuguese name of the number.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tWelcome to the Erechim Winter School of the ICPC Brazilian Subregional Contest! We sincerely hope you learn a lot during these days so you can be very successful in the Programming contests yet to come, but above all we hope you enjoy the School, for when we have fun and enjoy ourselves studying and programming, the training stops being a burden and becomes a hobby. So, have fun!\\n\\nThe winter is a wonderful season, is it not? We all love wearing a poncho, joining a chimarr\\u00e3o circle, baking pinh\\u00f5es in a wooden burning stove\\u2026 But not everyone likes the winter, especially in places where winter uses to be very cruel. In Westeros, for example, the people's humour is defined according to climate tendencies. Based on the temperatures of the last three days, the people can be sad or happy, being more likely to make war or to make love, respectively. And, let us be honest, it is precisely because of the scenes of love and war that we love Game of Thrones!\\n\\n\\n\\tIf the temperature decreased from the 1st to the 2nd day, but increased or remained constant from the 2nd to the 3rd, the people are happy (first figure).\\n\\tIf the temperature increased from the 1st to the 2nd day, but decreased or remained constant from the 2nd to the 3rd, the people are sad (second figure).\\n\\tIf the temperature increased from the 1st to the 2nd day and from the 2nd to the 3rd, but increased from the 2nd to the 3rd less than what had increased from the 1st to the 2nd, the people are sad (third figure).\\n\\tIf the temperature increased from the 1st to the 2nd day and from the 2nd to the 3rd, but increased from the 2nd to the 3rd at least what had increased from the 1st to the 2nd, the people are happy (fourth figure).\\n\\tIf the temperature decreased from the 1st to the 2nd day and from the 2nd to the 3rd, but decreased from the 2nd to the 3rd less than what had decreased from the 1st to the 2nd, the people are happy (fifth figure).\\n\\tIf the temperature decreased from the 1st to the 2nd day and from the 2nd to the 3rd, but decreased from the 2nd to the 3rd at least what had decreased from the 1st to the 2nd, the people are sad (sixth figure).\\n\\tIf the temperature remained constant from the 1st to the 2nd day, the people are happy if the temperature increased from the 2nd to the 3rd or sad otherwise (respectively, seventh and eighth figures).\\n\\n\\n\\t\\t\\t\\t\\t\\n                    \\t\\t\\t\\t\",\n    \"id\": 1847,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists only of three integers, A, B e C (-100 \\u2264 A, B, C \\u2264 100), which represent respectively the temperatures recorded in the 1st, in the 2nd and in the 3rd day.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Welcome to the Winter!\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing a happy or a sad smiley, representing how is the humour of the people of Westeros according to the climate tendencies.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tAs we know, there's a three-eyed crow. What it isn't well known is that the three-eyed crow can foresaw the results of Westeros lottery. Meanwhile every other crow is flying collecting entries for the lottery, the three-eyed crow already knows the results, and when Bran dreams with the three-eyed crow, the crow tells him the result. Bran always remember these dreams very well, however, he can't understand them fast enough to know the result. Your task is write a program to calculate the result from Bran's dream.\\n\\nDuring the dream, the crow blinks many times and screams exactly 3 times. Every scream corresponds to a result.\\n\\nEvery blink of the crow communicates a binary number. An open eye means 1 and a closed eye means 0. The left eye is the most significative eye and the right eye is the least significative eye. Every blink this number is added and when the crow screams, the sum is a result.\\n\\t\\t\\t\\t\",\n    \"id\": 1848,\n    \"input\": \"\\t\\t\\t\\t\\tThe input describes, in every line, in order, a scream or a blink of the crow.\\n\\nA scream is represented by the string caw caw.\\n\\nA blink is formed by three characters * ou -, representing, respectively, an open eye or a closed eye, from left to right.\\nRemember that the crow has 3 eyes.\\nThe winning numbers at lottery do not exceed 1000.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Counting Crow\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output are 3 lines, each one with one result of the lottery.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tDaenerys Targaryen, the Stormborn, has 3 dragons: Drogon, Viserion e Rhaegal. She uses them frequently at battles and makes them spit fire by saying \\\"Dracarys!\\\".\\n\\n\\t\\t\\t\\t\\t\\n                    \\n\\n\\t\\t\\t\\t\\tIt turns out that when the dragons spit fire on a plane surface, the fire always burns a rectangular area. The dimensions of these areas depend on several factors, but Daenerys can state precisely what are the rectangle's width and length that will be burned by Drogon and by Viserion.\\n\\n\\t\\t\\t\\t\\tDaenerys demands your assistance to indicate what is the biggest possible square size that can be burned given the rectangle's dimensions that Drogon and Viserion can burn.\\n\\t\\t\\t\\t\",\n    \"id\": 1849,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has 4 positive integers LD, CD, LV, CV separated by space, indicating, respectively, the width and length of the rectangle to be burned by Drogon and the width and length of the rectangle to be burned by Viserion. None of these integers exceeds the 10000 value.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Dracarys!\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output should be a number A, indicating the area of the larger possible square to be formed with the two given rectangles.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tNever take one of the faces from the House of Black and White if you are not \\u2018No One\\u2019, even if it's to kill Meryn Trant, otherwise you shall be blind, besides receiving many other punishments. Perhaps you see yourself becoming \\u2018No One\\u2019. Perhaps that is what is happening to Arya. Or not. The fact is that now she is blind and has been put in a labyrinth full of locked doors. Can you help her?\\n\\nThe locks of the doors present in the labyrinth where Arya is are of 7 types: A, B, C, D, E, F and G. There are also some copies of keys around the labyrinth, which can be of types a, b, c, d, e, f or g. A key of type a opens a door of type A, a key of type b opens a door of type B etc. Once Arya has opened a door with a key, the door remains opened, of course, and Arya can take the key with her to open as many doors as she wants of that type. In the labyrinth there is exactly one exit: a hole in the floor through which Arya can enter the tunnel that will lead her safely to the exit of the House of Black and White.\\n\\t\\t\\t\\t\",\n    \"id\": 1850,\n    \"input\": \"\\t\\t\\t\\t\\tThe input represents the labyrinth and consists of at most 100 lines with at most 100 characters different from end-of-line each, and the number of characters per line is always the same. The character @ identifies the position where Arya is, the character * identifies the exit, the walls of the labyrinth are identified by the character #, the doors by characters in the set {A, \\u2026, G}, the keys by characters in the set {a, \\u2026, g}, and the other free positions by the character . (dot). The total of characters in the labyrinth different from # and from . is at most 100, and there is exactly one character * and one character @. Arya always spends 1 second to move from one position to another, and she moves only in horizontal or vertical directions, for she is afraid of hitting her little toe against a corner of a wall, since the walls are square-shaped. The input ends in end-of-file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"No One's Labyrinth\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing a single integer, which is meant to represent the minimum time, in seconds, that Arya needs in order to leave the labyrinth. If it is not possible for Arya to leave the labyrinth, print a line containing only two characters - (hyphen), representing the closed eyes with which Arya shall need to live until she is Arya no more.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tAfter his dragon Smaug failing in the mission of taking care of Erebor, Sauron has become very upset, and his Eye started to look everywhere for a professional dragon trainer, so his other dragons would not fail in their missions. This way Sauron knew Daenerys Targaryen. Impressed by her reputation, Sauron hired her immediately.\\n\\nSauron sends dragons to Daenerys almost daily. Some dragons take more time to be trained, others less, and she always trains one dragon at a time, never more than one in a same day, until it is ready to be returned to Sauron. During the days in which Daenerys applies herself to the training of a dragon, she leaves the other dragons sent by Sauron hibernating in a lodging until it is the turn of each one of them. But Sauron's character, although of remarkable perseverance, is not famous by his patience. For each day a dragon of his spends sleeping in the lodging, Sauron, whose Eye sees easily everything which is passed at Daenerys's domains, charges a fine from her, whose value can vary from dragon to dragon, depending on the plans that Sauron has to his dragons. Sauron sends exactly one dragon per day, and the dragon always arrives right in the beginning of the day, so Daenerys can start to train it immediately. Furthermore, if there are dragons sleeping in the lodging and none of them is being trained, Sauron sends a Nazg\\u00fbl to kill Daenerys.\\n\\nDaenerys Targaryen wants to minimise the total fine to pay to Sauron and is asking your help. You have already told her that you cannot foresee the future and the best you can do is: whenever she is not working with a dragon and wants to choose one of the lodging to start to train it, you can tell her which dragon to pick up so the choice would be optimal if no more dragons come in the days following.\\n\\t\\t\\t\\t\",\n    \"id\": 1851,\n    \"input\": \"\\t\\t\\t\\t\\tThe i-th line of input refers to a dragon sent by Sauron to Daenerys and consists of two integers: Ti e Fi (1 \\u2264 Ti, Fi \\u2264\\t103), representing respectively the number of days needed to train the i-th dragon and the fine charged per day that the dragon spends sleeping. For any distinct i\\tand j, Ti / Fi\\t\\u2260 Tj / Fj. The input has at most 105 lines and ends in end of file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"How To Train Your Dragon\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line containing singly the total value of the fine that Daenerys will pay to Sauron if she follows your advices.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tJon: \\\"Lord Stark? There are five pups, one for each of the Stark children. The direwolf is the sigil of your House. They were meant to have them.\\\"\\n\\nDuring a trip, Ned Stark found N direwolf pups and decided to give each pup to one of his N children. Ned wants to make both his children and the direwolves happy, so he wants to find the ideal assignment of children and direwolves.\\nAfter playing with the pups for a while, each children gave Ned a list of pups in order of preference, i.e., each children wants to have the pup which is on the top of his/her list; if this is not possible, the children wants the pup which appears second in the list, and so on.\\nAfter observing how each direwolf reacts to each children, Ned also deduced, for each direwolf, the list of children it wants to be its owner, also in order of preference.\\nNed must find an assignment such that, for any children Ci and any direwolf Dj, it does not happen that Ci prefers Dj over his direwolf and Dj prefers Ci over its owner. If there is more than one possible assignment, Ned wants the assignment such that each children has the best (most preferable) pup he/she can have.\\n\\t\\t\\t\\t\",\n    \"id\": 1852,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains the integer N (1\\u00a0\\u2264 N\\u00a0\\u2264 200). The next N lines describe Ned's children. Each line contains N+1 strings. The first one is the name of the children. The next N strings consists on the name of the pups in order of preference, with the first pup given in the line being the children's most preferable. The next N lines describe the direwolf pups. Each line contains the name of the pup and its lists of children, also in order of preference.\\n\\nEach string contains at most 10 lowercase and/or uppercase English letters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Stark Direwolves\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint N lines. Each line must contain two strings Ci and Dj, meaning that children Ci must own the direwolf Dj. Print the children in the same order they are described in the input.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tDaenerys: \\\"(...) so I should welcome you into my service because you murdered members of your own family?\\\"\\nTyrion: \\\"Into your service? Your Grace, we have only just met. It's too soon to know if you deserve my service.\\\"\\n\\nTo settle things between her and the imp, Daenerys decides to challenge Tyrion to play a 2-players game she invented back in the Dothraki sea.  If Tyrion beats Daenerys in the game, she will make him his advisor, as he desires. Otherwise, she will have him executed.\\n\\nThis is a game with words. In this game, it is considered only the Dothraki alphabet, which consists on the first L lowercase letters of the English alphabet.\\n\\nThe game starts with a list of S strings s1, ..., sS. The game is played by turns, and Tyrion begins. At each turn, a player chooses one string from the list and adds a letter (from the Dothraki alphabet) to its end, in the right side. However, a player cannot add a letter to a string si (1 \\u2264 i \\u2264 S) if Fi letters were already added to that string during the game. Also, a player cannot add a letter to a string if such string, including all letters added to it during the game (but not the one the player wants to add), contains a Dothraki adjective as a substring. All Dothraki adjectives are given in the input.\\n\\nIf a player is not able to add any letter to any string, the player loses the game. Both Daenerys and Tyrion play optimally. Your task is to decide whether Tyrion can beat Daenerys in the game.\\n\\nIn the first sample, Tyrion can win by first adding the letter c to the string s1: it will contain an adjective and thus won't be chosen anymore. Daenerys is then forced to add a letter to s2. Tyrion then adds another letter to s2. Daenerys will then be unable to move, since F2 = 2 letters were already added to that string.\\n\\t\\t\\t\\t\",\n    \"id\": 1853,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input contains the integers D and L (D > 0, 2 \\u2264 L \\u2264 10), where D is the number of Dothraki adjectives.  Each of the next D lines contains an adjective. The sum of the length of all adjectives does not exceed 105. The next line contains the number S (1 \\u2264 S \\u2264 300). Each of the next S lines contains a string si and an integer Fi (1 \\u2264 Fi \\u2264 50). The sum of the length of all strings si does not exceed 3\\u00d7103.\\n\\nIt is guaranteed that none of these strings contains a Dothraki adjective. Also, all Dothraki adjectives and all strings si contain only letters from the Dothraki alphabet.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Daenerys' Game of Trust\",\n    \"output\": \"\\t\\t\\t\\t\\tIn a single line, print Tyrion if Tyrion can beat Daenerys in the game, or Daenerys otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tOne afternoon, in the Winter Town, just outside the gates of Winterfell castle, children started to build snowmen, for the joy and the amusement of the plebs who were negotiating at the market. The snowmen were becoming adorable, except for a detail: none of them had a nose, since the only carrots now remaining in Westeros were in House Stark's royal larder. The king, touched, decided to give some of his carrots away so they could be distributed in rectangular-shaped regions of the Town. But the children of Westeros are greedy and do not mind putting several noses on their snowmen, no matter if other children end up with no noses to put on their snowmen. For example, if the king assigns 2 identical carrots to a region in which there are 3 snowmen, a, b and c, there are 6 possibilities to the distribution of these carrots among the snowmen after the children have stopped fighting against each other:\\n\\n\\n\\ta ends up with 2 noses and b and c with none;\\n\\ta and b ends up with 1 nose each and c with none;\\n\\ta and c ends up with 1 nose each and a with none;\\n\\tb ends up with 2 noses and a and c with none;\\n\\tb and c ends up with 1 nose each and a with none;\\n\\tc ends up with 2 noses and a and b with none.\\n\\n\\nNoticing that the fights among the children were leading a considerable number of them to death, and worrying about the future of the kingdom's population, the king decided to choose only one rectangular-shaped region per day, so that the distribution of the carrots were made always at the end of the day, when all the snowmen had already been built. It is not allowed to the children using carrots for snowmen out of the awarded region of the day, not even to take carrots home in order to use them in the next day. The king also commanded that, as soon as the night has fallen and the children have been gone, an officer should recover all the carrots, leaving however the snowmen intact. By the way, the snowmen built by the children of Westeros are very resistant, being able to stand through the whole winter, unless they are intentionally destroyed by other child.\\n\\t\\t\\t\\t\",\n    \"id\": 1854,\n    \"input\": \"\\t\\t\\t\\t\\tThe input describes, in sequence, all events that happened during the winter under the shadow of the walls of Winterfell and consists of at most 105 lines. The first line of the input consists of two integers: N and M (1 \\u2264 N, M \\u2264 103), which represent the dimensions of the Town. Each one of the following lines describes an event, characterised by the number of integers present in the line:\\n\\n\\n\\tif the line consists of three integers, X, Y and B (1 \\u2264 X \\u2264 N, 1 \\u2264 Y \\u2264 M, 1 \\u2264 B \\u2264 100), it means that a child has built B snowmen at the position in the Town of coordinates (X, Y);\\n\\tif the line consists of two integers, X and Y (1 \\u2264 X \\u2264 N, 1 \\u2264 Y \\u2264 M), it means that a child has destroyed all snowmen at the position of coordinates (X, Y);\\n\\tif the line consists of five integers, X1, Y1, X2, Y2 and C (1 \\u2264 X1 \\u2264 X2 \\u2264 N, 1 \\u2264 Y1 \\u2264 Y2 \\u2264 M, 1 \\u2264 C \\u2264 103), it means that the king has awarded C identical carrots to be distributed among the snowmen built inside the rectangular-shaped region defined by the positions of coordinates (X1, Y1) and (X2, Y2), marking the end of a day.\\n\\n\\nThe last line of the input is always a five integer line.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Winter in Winterfell\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each day of the winter, ended in the input by a five integer line, print a line containing the number of the day and the number of possibilities for the distribution of the carrots among the snowmen at the delimited area. Consider that the counting of the days starts in 1. As the number of possibilities can be very large, print only the remainder that this value leaves when divided by 109 + 7. The input and output sample clarify further details about the output format.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tSam found a big bunch of maps from old Maester Aemon, which at a first look, should point, each one, a location of a chest full of obsidian. However, after taking a better look, some maps had obvious errors, while others, only sending a team of explorers to know.\\n\\n\\t\\t\\t\\t\\tWhat is known is that some maps point to an absurd location outside of the map and some end up in circles, ending up to be completely useless.\\n\\n\\t\\t\\t\\t\\tSince the maps are many, the brothers of the Nights Watch are few and winter is comming, your work is to write a program to check if a map leads or not to a chest with obsidian.\\n\\n\\t\\t\\t\\t\\tMaps have these features:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tThe starting point is always at the top left corner.\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tThe maps are rectangular and each point of the map has one of these symbols:\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tA traversable terrain space.\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tAn arrow, representing a possible change of direction.\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tA chest.\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tSince the places these maps describe are very dangerous, it is vital that the path described in the map is strictly followed.\\n\\t\\t\\t\\t\",\n    \"id\": 1855,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains a positive\\n                    integer x < 100 with the width of the map.\\n\\n\\t\\t\\t\\t\\tThe second line contains a positive integer y < 100 with the height of the map.\\n\\n\\t\\t\\t\\t\\tThe following lines contain various characters within the map's dimensions.\\n\\t\\t\\t\\t\\tThe valid characters are:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tAn arrow to the right: >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tAn arrow to the left: <\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tAn arrow ponting down: v\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tAn arrow pointing up: ^\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tA space of traversable terrain: .\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tA chest: *\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Maester's Map\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output must consist of a single line containing a single character ! or *.\\n\\n\\t\\t\\t\\t\\t! means that the map is invalid. * means that the map is valid.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tArya: \\\"Cersei. Walder Frey. The Mountain. Meryn Trant.\\\"\\n\\nTo keep her motivation, Arya always keeps in mind the list of her enemies she hates the most. The ultimate goal of her quest is to kill everyone in her list!\\n\\nHowever, sometimes some enemy of her may be killed by someone else. When she finds out, Arya removes the enemy from her list.\\u00a0 Also, Arya may make new enemies during her quest. When Arya makes a new enemy, she adds him to her list.\\n\\nArya wants to kill her enemies one by one, in the same order they appear in her list. At any time, she may wonder how long it will take to kill everyone between two given enemies. To do so, given two enemies a and b, she must determine how many enemies are in her list between a and b, excluding both. Help Arya by answering such questions.\\n\\t\\t\\t\\t\",\n    \"id\": 1856,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (1\\u00a0\\u2264 N\\u00a0\\u2264 5\\u00d7104), the number of enemies in her initial list.\\n\\nConsider that all people in the world are numbered from 1 to 109, inclusive. The next line contains N integers, describing her initial list. The next line contains an integer Q (1\\u00a0\\u2264 Q\\u00a0\\u2264 5\\u00d7104), the number of operations. The next Q lines describe the operations. Each operation may be one of the following:\\n\\n\\n\\tI p e (1\\u00a0\\u2264 e, p\\u00a0\\u2264 109): Insert person p after enemy e in the list. It is guaranteed that e is in the list, and p is not in the list;\\n\\tR e (1\\u00a0\\u2264 e\\u00a0\\u2264 109): Remove enemy e from the list. It is guaranteed that e is in the list;\\n\\tQ a b (1\\u00a0\\u2264 a, b\\u00a0\\u2264 109): Answer how many enemies are in the list between enemies a and b, excluding both. Is is guaranteed that both a and b are in the list.\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Arya's Death List\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint one line for each operation of type Q with its answer.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\t\\tFew people know that, in the series of events preceding the bloody Red Wedding, Lord Frey promised Robb Stark a part of the Riverlands' territory, and also a mansion. The very words that Lord Frey told Robb Stark, in a meeting at the Twins, were:\\n\\n\\t\\t\\t\\t\\t\\u2014 Here is the map of the Riverlands and of all the buildings which exist in them. Put a nail on the location where you wish your mansion be built. Choose any location you want, unless it lies over or at the north of an already existing building. Yet, if the location you choose lies at the same latitude of other building, this other building must be further east than your location.\\n\\n\\t\\t\\t\\t\\tSo proceeded Robb Stark. Lord Frey, then, continued:\\n\\n\\t\\t\\t\\t\\t\\u2014 Take now these other nails and put them on already existing buildings, and they shall belong to you too. Choose whatever buildings you wish. Know that, after finishing, I shall stretch this rubber band around all the map and I shall let it go, so that the nails stop it. All the territory on the boundary or in the interior of the region defined by the rubber band shall be yours. However, do not abuse my benevolence. If the area of your territory exceeds B square metres, I will cut your head off right here.\\n\\n\\t\\t\\t\\t\\tRobb did his choice in order to own the largest possible area of land keeping his head, at least for a while. Can you guess the area that he obtained?\\n\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\",\n    \"id\": 1857,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input consists of two integers, N and B (0 \\u2264 N < 100, 1 \\u2264 B \\u2264 103), which respectively represent the number of already existing buildings in the map and the limit for the area of Robb Stark's territory set by Lord Frey. The second line consists of two integers, Xm and Ym (0 \\u2264 Xm, Ym \\u2264 104), which respectively represent the latitude and the longitude of the location that Robb chose for the construction of his mansion. Each one of the N lines following consists of two integers X and Y (0 \\u2264 X, Y \\u2264 104), which respectively represent the latitude and the longitude of each building.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Prelude of a Red Wedding\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing only the exact value of the area of the land that Robb Stark received, without unnecessary leading or trailing zeros.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tRamsay: \\\"(...) you win the game if you figure out who I am and why I'm torturing you.\\\"\\n\\n\\t\\t\\t\\t\\tTheon must think quickly and guess who his torturer is! However, Ramsey already decided what he will do after Theon gives his answer.\\n\\n\\t\\t\\t\\t\\tThere are N people Theon may say the torturer is. Let us consider that the people are numbered from 1 to N. If Theon answers the torturer is person i, Ramsay will hit him Ti times.\\n\\n\\t\\t\\t\\t\\tYou task is to help Theon and determine what he should answer in order to minimize the number of times he will be hit.\\n\\t\\t\\t\\t\",\n    \"id\": 1858,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 100). The second line contains N integers T1, T2, ..., TN (0 \\u2264 Ti \\u2264 20).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Theon's Answer\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line containing the number of the person Theon must say the torturer is. If there is more than one possible answer, print the smallest one.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tAfter undoing the malevolent Hans's malignant plan and saving the king of Arendelle, Elsa, Anna e Kristoff have started an archaeology project to know more about the prehistoric past of the continent on which nowadays Arendelle is located. During the excavations, they have discovered that the continent was actually formed geologically by the collision of four continents once separated. They have even been able to discover the names with which the peoples of that age used to call those continents: Westeros, Essos, Sothoryos and Ulthos. However, they are still in the process of identifying the families that used to inhabit the first continent, Westeros, since the promiscuity among the ancient peoples was very big and the records seem too confusing. At the present stage of the project, they are considering that the peoples were divided only in two large families: Stark and Lannister. In the future they intend to divide these families better. For instance, the goal is, given the genetic codes of the fossilised individuals, to classify the individuals in those two families in order to minimise the relations of kinship among individuals classified in different families.\\n\\n\\t\\t\\t\\t\\tMore formally, we say that an individual X is relative of an individual Y if the genetic codes of both individuals share an identical contiguous part of length at least P% of the length of one of the codes \\u2014 as all the individuals are humans, the genetic codes have always the same length. For example, take the individuals of codes GATAGACA and CATACAGA. If the kinship criterion P is set to 62, the individuals shall be considered relatives, since ACAGA is a contiguous part of both codes and has length 5 \\u2265 8 \\u00d7 62% (if you can't understand why ACAGA is a contiguous part of GATAGACA, understand that Elsa and her team consider genetic codes as circular strings). Yet, if P = 63, the individuals shall not be considered relative. This way, Arendelle researchers' goal is to classify the fossilised individuals in the families Stark and Lannister in order to minimise the number of bad pairs. We say that a pair (s, l) is bad if it satisfies the following three conditions:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\ts has been classified as Stark;\\n\\t\\t\\t\\t\\t\\tl has been classified as Lannister;\\n\\t\\t\\t\\t\\t\\ts shall be considered relative of l according to the kinship criterion set.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tMandatorily, at least one individual must be classified as Stark and at least one as Lannister.\\n\\t\\t\\t\\t\",\n    \"id\": 1859,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input consists of two integers, N and P (2 \\u2264 N \\u2264 50, 0 \\u2264 P \\u2264 100), which represent respectively he number of individuals fossilised and the kinship criterion set. Each one of the N next lines consists of at most 104 characters in the set {A, T, C, G}, representing the genetic code of an individual. Except possibly for the first, the lines of the input have all the same number of characters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Frozen Archaeology\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line containing only the least possible number of bad pairs in a classification of the individuals in the families.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tSepta Unella: \\\"Shame! Shame!\\\"\\n\\n\\t\\t\\t\\t\\tTo pay for her sins, Cersei must walk on the streets of King's Landing, naked.\\n\\n\\t\\t\\t\\t\\tLet us consider King's Landing as a Cartesian plane. Cersei must walk from the point (0, 0) to the point (X, 0), on a straight line. Note that, to complete her walk, Cersei is not supposed to leave the x-axis.\\n\\n\\t\\t\\t\\t\\tHowever, she plans to not complete her walk! At some point (xl, 0) (0 \\u2264 xl \\u2264 X), she will leave the route and run to one of the N hideouts in the city. She wants to be as far as possible from the original route, and thus she will run to the hideout which is the farthest from (xl, 0).\\n\\n\\t\\t\\t\\t\\tHowever, Cersei must be at the hideout as soon as possible. Your task is to help Cersei to determine the value for xl such that, if she leaves the route at point (xl, 0), the distance to the farthest hideout is minimized.\\n\\t\\t\\t\\t\",\n    \"id\": 1860,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N and X (1 \\u2264 N \\u2264 5\\u00d7104, 10 \\u2264 X \\u2264 104). The next N lines indicate the positions of the hideouts. Each line contains two integers xi and yi (0 \\u2264 xi \\u2264 X, -104 \\u2264 yi \\u2264 104, yi \\u2260 0) indicating a hideout at position (xi, yi).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cersei's Walk of Shame\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing two values: The value for xl and the distance to the farthest hideout. Round and print both values with exactly two decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tWho killed Meryn Trant? Who killed Syrio Forel, in the case wherein he is actually dead? Who killed Stannis Baratheon? Who killed Myrcella Baratheon? Who killed Aerys II Targaryen? Who is going to kill (spoiler alert!) Jaime Lannister? For some of these questions we had the answer already. For others, we had just speculations. However, we have received from an anonymous correspondent a list describing many murders, which have already happened or are still to happen, revealing the name of the murderers as of the murdered ones. But the murders are not in lexicographical order, not even in chronological order, and it becomes hard to count how many people each murderer has killed. Can you help us?\\n\\t\\t\\t\\t\",\n    \"id\": 1861,\n    \"input\": \"\\t\\t\\t\\t\\tEach line of input describes a murder by informing the murderer's name followed by the name of the one who has been killed. Each name consists of at least one and at most 10 characters, with the first being always in capital case and the others always in small case. The input consists of at least one and at most 105 lines and is ended in end-of-file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Hall of Murderers\",\n    \"output\": \"\\t\\t\\t\\t\\tThe first line of output shall be consisted of the sentence \\u201cHALL OF MURDERERS\\u201d, without the quotation marks. Each one of the following lines shall contain a name of a murderer followed by the number of people that he or she has killed. The list of murderers shall follow the lexicographical ordering. If a murderer has also ended up being killed, he or she shall not appear in the list.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tDaenerys: \\\"Lannister, Targaryen, Baratheon, Stark, Tyrell. They're all just spokes on a wheel.\\\"\\n\\n\\t\\t\\t\\t\\tThe noble houses of Westeros are constantly fighting for the Iron Throne. To win the Game of Thrones, one must always be aware of how many houses there are in the land. It is also important to know the size of each house, since houses with many people are usually stronger than houses with fewer people.\\n\\n\\t\\t\\t\\t\\tThere are N people in Westeros. For any pair of people, a spy told you whether they belong to the same house or not. If the information gathered by the spy is consistent, determine how many houses there are in Westeros, and how many people belong to each house.\\n\\t\\t\\t\\t\",\n    \"id\": 1862,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 1000), the number of people. The people are numbered from 1 to N.\\n\\n\\t\\t\\t\\t\\tThe next N lines contains N characters each. The j-th character in the i-th line (1 \\u2264 i, j \\u2264 N) is S if people i and j belong to the same house, or D if people i and j belong to different houses. It is guaranteed that, for all 1 \\u2264 i, j \\u2264 N, the j-th character in the i-th line is equal to the i-th character in the j-th line. Also, for all 1 \\u2264 i \\u2264 N, the i-th character in the i-th line is always S.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Houses of Westeros\",\n    \"output\": \"\\t\\t\\t\\t\\tIf the information gave by the spy is inconsistent and it is not possible to determine the number of houses, print a line containing -1. Otherwise, print two lines. The first line contains an integer K, the number of houses. The second line contains K integers, the number of people in each house. The integers must be printed in non-ascending order. A space must be printed between two consecutive integers.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tRamsay: \\\"I don't need an army. I need 20 good men.\\\"\\n\\n\\t\\t\\t\\t\\tThe Boltons have conquered the castle of Winterfell and now need to protect it from the incoming invasion of \\\"King\\\" Stannis. Stannis' N soldiers are currently positioned in the way from Castle Black, which is northeast from Winterfell, to Winterfell.  For each soldier i (1 \\u2264 i \\u2264 N), the Boltons know his position (x[i], y[i]) on the map.\\n\\n\\t\\t\\t\\t\\tRamsay Bolton decided to counter-attack before the invasion by sending his men to kill some of Stannis' soldiers. Ramsay wants them killed one by one, in an order such that his men must only travel north and east, and all soldier must be stronger than all others killed before him (that's madness, but Ramsay is mad anyway).\\n\\n\\t\\t\\t\\t\\tIn other words, Ramsay wants to find a sequence of soldiers (s1, s2, ..., sK) such that, for all 1 < i \\u2264 K:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tx[si] > x[si-1];\\n\\t\\t\\t\\t\\t\\ty[si] > y[si-1]; and\\n\\t\\t\\t\\t\\t\\tsi is stronger than si-1\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tA spy gave Ramsay a list of M ordered pairs of soldiers in the form (i, j), indicating that soldier i is stronger than soldier j. Please note that this relation is transitive, i.e., if i is stronger than j and j is stronger than k, then i is stronger than k, even if (i, k) is not in the list. Also, for any pair of soldiers i and j, if it is not possible to determine whether one solder is stronger than the other from the list, then i is not considered stronger than j, and j is not considered stronger than i. Finally, the list is given in such a way that, for all soldier i, there is at most one soldier j such that (i, j) is in the list.\\n\\n\\t\\t\\t\\t\\tYour task is to determine the maximum number of soldiers Ramsay can have killed.\\n\\t\\t\\t\\t\",\n    \"id\": 1863,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N and M (0 \\u2264 M < N \\u2264 5\\u00d7104). The next N lines give the positions of the soldiers. The i-th line contains two integers x[i] and y[i] ( -400 \\u2264 x[i], y[i] \\u2264 400 ). No two soldiers are in the same position. The last M lines contains two integers i and j each (1 \\u2264 i, j \\u2264 N, i \\u2260 j), describing the list given by the spy.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Ramsay's Counter-attack\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line containing the maximum number of soldiers that can be killed.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tSo, have you liked the Winter School this year? In order to make this School happen, many have worked, whether in writing the problems, in configuring the Portal, in making the arrengements for the event or in raising the funds. Our special acknowledgement this year goes to Professor Ricardo Oliveira, who has not only accepted our invitation to come and teach the workshops but has also been participating on the organisation of this School. We are sure that his experience and his career at ICPC as contestant and as coach have motived and inspired us all.\\n\\n\\t\\t\\t\\t\\tWe hope you have enjoyed these last days in Essos and in Westeros, we hope you have learned a lot and had fun. But it is not only in Essos and in Westeros that you should have fun. Here, in Beyond the Wall, programming is also fun. Keep studying, keep training, and more and more. What is important is the path you choose to pursue from now on. Our advice is that you should always enjoy every single moment, every workshop, every school, every training session, every time practicing or studying at home. Our days are never coming back.\\n\\t\\t\\t\\t\",\n    \"id\": 1864,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single integer N (1 \\u2264 N \\u2264 34) in a line.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Our Days Are Never Coming Back\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the N first characters of S\\u00f8ren Kierkegaard's quote defined by the letters underlined in this problem statement. Be careful, for no blank space has been underlined \\u2014 you are supposed to guess the number and the location of the blank spaces at the sentence. The only line of output shall consist only of capital letters and blank spaces, and shall be ended by end-of-line.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tOdin created to Thor the most faithful and powerful possible weapon, Mjolnir hammer. Made of a special mystical ore called Uru and forged in the heart of a star by blacksmiths Gods of Asgard , Brokk and Eitri , blacksmiths legendary.\\r\\n\\r\\nOne day , Thor challenged his friends to see who could raise the Mj\\u00f6lnir .\\r\\n\\r\\nWrite a program that , given a name , and the force in Newtons applied to try to lift the Thunder Hammer , inform the person succeeded in lifting it .\\n\\t\\t\\t\\t\",\n    \"id\": 1865,\n    \"input\": \"\\t\\t\\t\\t\\tAn integer C shall be informed , which is the amount of test cases. Each test case begins with one word , which is the first name of who is trying to raise Mj\\u00f6lnir , and an integer N ( 1 \\u2264 N \\u2264 25000 ), indicating the force applied upward in Newtons to pull the hammer of so try to lift it.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Mj\\u00f6lnir\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print a 'Y' character , if the person has managed to raise or 'N' if you have not achieved .\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tTwo friends ask the attendant a snack bar propose a challenge , so that whoever hit him more , would not pay the bill. Then the following is proposed : Given the following sum below report the result , with the same number of terms : S = 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 ... Write a program that , given a number of terms, report the result of the sum above.\\n\\t\\t\\t\\t\",\n    \"id\": 1866,\n    \"input\": \"\\t\\t\\t\\t\\tAn integer C shall be informed , which is the amount of test cases. Each test case starts with an integer N ( 1 \\u2264 N \\u2264 1000) , indicating the number of terms of the sum .\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Bill\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print a number S , which is the sum of N terms of expression.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe inhabitants of the planet Uno have a terrible numbers detection problem with more than one digit, so that , for everything that will make transform any integer value in a one-digit number by performing successive sums of the number until it is reduced a digit. For example , the number 999999999991 , the planet Uno , summing up all the numbers, resulting in 9 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 9 + 1 = 100. Since the number 100 has more than one digit, the process repeats , resulting in 0 + 0 + 1 = 1 One of the great difficulties that people have is to compare two numbers and see which one is greater , under the rules of the planet.\\n\\n\\t\\t\\t\\t\\tWrite a program that , given two integers , identify which one is the biggest one-digit number .\\n\\t\\t\\t\\t\",\n    \"id\": 1867,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases . Each test case begins with two integers N and M ( 0 \\u2264 N \\u2264 10100, 0 \\u2264 M \\u2264 10100 ), indicating the two numbers to be compared. The last test case is given when N = M = 0 , and this case will not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Greater One-digit Number\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case , print a line containing an integer, indicating 1 if the first number is the largest of a number , 2 if the second number is the largest of a number or 0 if both numbers have the same value of a number.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tThe company Animations Free Fault, or ALF, performs the most diverse animation using only characters on the screen. One day, were challenged to make an animation of a spiral Square. This should do the following: * Always display a square table with N rows and N columns, with a character in its respective place without spaces between them; * This number N will always be unique; * The first part of this animation will be with an 'X' character at the center of the table and the rest of the same characters busy with 'O'; * In the charts, the 'X' character will be moved to the other table places, where it was replaced with 'O', always exhibiting since the 'X' in each frame. The offset is in the shape of a square spiral, making the offset to right, up, and down left. Here's an example of all frames of the animation with N = 5:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n                    \\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tWrite a program that, given an integer, print all frames of the animation of the square spiral.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 1868,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThere will be several test cases . Each test case starts with an integer N ( 1 \\u2264 N \\u2264 25 ), indicating the size of the screen. The last test case is indicated when N = 0 , and this case should not be processed.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Square Spiral\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each test case print N x N tables, each separated with '@ ' according to the rules of the animation as described above .\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tIn a country called Tresdoisl\\u00e2ndia , all numbers are treated in base 32 , in which each number represents the numerical order , and the following numbers using letters from A to V. For example , the number 31 in base 32 is the fifth digit, and the number 32 on the base 32 becomes 10 .\\r\\n\\r\\nWrite a program that , given an integer in decimal base , convert to base 32 .\\n\\t\\t\\t\\t\",\n    \"id\": 1869,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases . Each test case starts with an integer N ( 0 \\u2264\\u00a0N\\u00a0\\u2264 263 ), indicating a number in decimal base. The last test case is indicated when N = 0 .\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Base 32\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case , print the amount corresponding to the input in base 32 .\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tOn holiday, the company employed manufacturer fans Doe brothers, better known as IF, proposed a contest. Given a rectangular box of large dimensions, formed by compartments containing only the front and rear wall, with all the internally accessible compartments, small fans, yet powerful, and without the protective grid, were tied internally in the enclosure, some compartments . After this, a balloon is released inside the box on the line of a particular column compartments. Each fan is connected with a certain level of strength. Then, it is checked as close to the fan left and right balloon. If both are at the same level of force, the balloon typically continues downward. If different, the balloon will be pushed to the side of the fan with the weak level, and it will shift as many columns as the difference between the highest and the lowest among the fans. Take the case below in detail:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tLoose balloon in column 6;\\n\\t\\t\\t\\t\\t\\tIn the first row, closest to the right balloon blower has more than two levels closest to the left, displacing the balloon 4 to the column;\\n\\t\\t\\t\\t\\t\\tIn the second row, closest to the right balloon blower has more than two levels closest to the left, displacing the balloon to column 2;\\n\\t\\t\\t\\t\\t\\tIn the third row, closest to the right balloon fan has the same level in relation to the nearest left, keeping the flask in column 2;\\n\\t\\t\\t\\t\\t\\tOn the fourth line, closest to the right of the balloon fan has two levels unless the closest the left, moving the balloon to the column 4, leaving without blowing;\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tIf, in the same box, the flask was released in column 2, the balloon would burst on line 1 and column 1, the fan blades lying in this location.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t                \\t\\t\\t\\n\\n\\t\\t\\t\\t\\tWrite a program that, given a matrix, representing cash and a column in which the balloon will be released, and make sure it goes through all the fans without blowing.\\n\\t\\t\\t\\t\",\n    \"id\": 1870,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases . Each test case begins with three integers , L, C and P ( 1 \\u2264 L \\u2264 C \\u2264 P \\u2264 9 ), indicating the amount of L lines and C columns of the matrix P and the position of the column to which the balloon will be released .\\n\\n\\t\\t\\t\\t\\tThe last test case is indicated when L = C = P = 0 , and this case should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Fans and Balloons\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case output if the balloon has passed unscathed , the word \\\" OUT\\\" , then the position of the column from which it came out in the end; and if it has broken out along the way , the word \\\" BOOM \\\" and in which row and column the same burst .\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tOne day Prof. Humberto Jos\\u00e9 Roberto made \\u200b\\u200bthe following question: If the zero to the left of a number has no value , why would other positions of a number? Analyzing as follows , it asks for your help , to add two integer values \\u200b\\u200b, the result is displayed according to his reasoning , that is, without the zeros . For example , to add 15 + 5, the result would be 20 , but with this new idea, the new result would be 2 , and to add 99 + 6 , the result would be 105, but with this new idea , the new result would be 15.\\r\\n\\r\\nWrite a program that , given two integers without the digit zero , some the same and, if the result has a zero digit, which remove them before display .\\n\\t\\t\\t\\t\",\n    \"id\": 1871,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases . Each test case begins with two integers M and N ( 1 \\u2264 M \\u2264 N \\u2264 999 999 999 ) .\\r\\n\\r\\nThe last test case is indicated when C = M = 0 , and this case should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Zero means Zero\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case , print the sum of the two values \\u200b\\u200bwithout Zeros .\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tA palindrome is a word , phrase or any other sequence of units (like a chain of DNA; Restriction enzyme ) that has the property of being able to be read either from right to left and from left to right. Capicua or palindrome number is a number (or set of numbers ) integers whose reverse is himself. This problem want you to analyze a real number and verify that the lowest value that should be added to this so that it becomes a real palindrome without specific name so far. For example , if the number is 101.099 , to add to 0,002 , we get the real palindrome 101.101 . Another example would be the number 13.31 , which is already a real palindrome and must add 0 so that it stays that way. A final example is the number 100.9 , which should add 0.1 so that the sum becomes 101 .\\n\\nWrite a program that , given a real number , check the lower value to be added so that it becomes a real palindrome.\\n\\t\\t\\t\\t\",\n    \"id\": 1872,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases . The first number being read C is an integer representing the number of test cases. Each test case has a real number R ( 0 \\u2264 R \\u2264 999,999.999999 ) . Recalling that the entry will have a maximum of 6 decimal places, and the decimal separator is the point instead of comma.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Palindrome Double\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case output the expected value with the amount of required homes.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tRock-paper -scissors - lizard - Spock is an expansion of the classical method of selection for playing rock-paper- scissors. It operates under the same basic principle , but includes two other additional weapons : the lizard (formed by the hand like a puppet 's mouth ) and Spock ( formed by greeting the Vulcans in Star Trek ) . This reduces the chances of a round end in a draw . The game was invented by Sam Kass and Karen Bryla like \\\" Rock Paper Scissors Lizard Spock .\\\" In this version, the possible outcomes are:\\n\\n\\t\\t\\t\\t\\t\\u2022 Scissors cuts paper\\n\\n\\t\\t\\t\\t\\t\\u2022 Paper covers rock\\n\\n\\t\\t\\t\\t\\t\\u2022 Rock tips lizard\\n\\n\\t\\t\\t\\t\\t\\u2022 Lizard Spock falls asleep\\n\\n\\t\\t\\t\\t\\t\\u2022 Spock melts scissors\\n\\n\\t\\t\\t\\t\\t\\u2022 Scissors holds lizard\\n\\n\\t\\t\\t\\t\\t\\u2022 lizard eats paper\\n\\n\\t\\t\\t\\t\\t\\u2022 Paper disproves spock\\n\\n\\t\\t\\t\\t\\t\\u2022 Spock vaporizes rock\\n\\n\\t\\t\\t\\t\\t\\u2022 Rock crushes scissors \\n\\n\\t\\t\\t\\t\\tIn Portuguese, this game is called \\\"Pedra-papel-tesoura-lagarto-Spock\\\", and the weapons are \\\"pedra\\\" (rock), \\\"papel\\\" (paper), \\\"tesoura\\\" (scissors), \\\"lagarto\\\" (lizard) and \\\"Spock\\\" (Spock).\\n\\n\\t\\t\\t\\t\\tOne day , two friends Rajesh and Sheldon, decided to bet who would pay a lunch for the other, with this joke. Its mission will be to make an algorithm that , based on what they choose , tell who will win or will tie.\\n\\t\\t\\t\\t\",\n    \"id\": 1873,\n    \"input\": \"\\t\\t\\t\\t\\tThere are many test cases. The first number is an integer C, the number of test cases. Each test case contains two words in Portuguese, the weapons chosen by Rajesh and Sheldon, respectively. \\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Rock-paper-scissors-lizard-Spock\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print who won, or \\\"empate\\\" if there was a tie.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Company Blocks Regular Inventing Usefulness of Something , better known as Brisa , build blocks, always the same size . One detail that stands out is the manner in which the blocks are stored in stock, after manufactured . They are formed by a row of cells . Withdrawal of a stock box is somewhat cluttered when , for choosing a cell at random and cut up some top block it. However , the storage medium is somewhat interesting: a conveyor located at the top of the stack straight rightmost stock is used . With this, it forms a queue with the new blocks . The belt right wheel to the left. So there is a vacant space in one of two cells, the block will be inserted in it, if there is not, it progresses to the following cells. Below is an example of insert blocks .\\r\\n\\r\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\",\n    \"id\": 1874,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases . Each test case have three integers , M , P and F , indicating the rightmost stack height , the number of stacks of blocks and the size of the row of blocks to be inserted . Following this, M lines are read with P values \\u200b\\u200b, with values \\u200b\\u200b1 , which is represented block, and 0 , representing which does not block. Next, a line is read with F values \\u200b\\u200brepresenting the queue with the new blocks . The last test case is represented by three zeros , and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Pushing Blocks\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case , print the cells after the addition of new blocks. In some cases, a row of new blocks is more than sufficient for all the cells remain the same size. In this case , disregard the blocks that are left in the queue.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the city of Triangul\\u00e2ndia, the biggest dream of its population was to build a soccer field, but there all land is triangular. If one were to make a rectangular field, a good part of the land would be seized to build the field. Then the Hypo and Tenusa brothers had a great idea: Creating a new game, derived from soccer, but played in a triangular field, and called the Tribol game. The rules were simple: They play three teams at the same time: Red, Green and Blue.\\r\\n\\r\\n\\u2022 The match a time of thirty minutes.\\r\\n\\r\\n\\u2022 The team that scores a goal in the opponent's the same counterclockwise, is a normal goal.\\r\\n\\r\\n\\u2022 The team that scores a goal in the clockwise opponent the same, worth double.\\r\\n\\r\\n\\u2022 If the three teams make the same amount of goals, there is a trempate\\r\\n\\r\\n\\u2022 If the two teams who make more goals have made the same amount, there is a tie, and the game is decided by penalties.\\r\\n\\r\\n\\u2022 The team that makes the most goals, wins. Example of departure. The teams are arranged in the same field in the image below.\\r\\n\\r\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\r\\n\\r\\n\\u2022 The Green team makes a goal in the Blue team and a goal in the Red team, totaling three goals ;\\r\\n\\r\\n\\u2022 The Blue team is two goals in the Green team, totaling 2 goals ;\\r\\n\\r\\n\\u2022 The team makes two goals in Red Green team, totaling four goals and winning the match .\\n\\t\\t\\t\\t\",\n    \"id\": 1875,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases . The first number being read C is an integer representing the number of test cases. Each test case begins with an integer P , representing the amount of goals in the match . The following will be read P lines , each with two characters M and S , indicating the first letter of the team that scored the goal and the first letter of the team that conceded the goal , respectively.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Tribol\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case output control of the game in normal time , based on the goals that have been marked .\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tEvery year, residents of the city of Pipacicaba organize the municipal championship kites. In this place, they use a special type of vine to use as Rabiola the kite. The vine is formed of a single strand formed by normal leaves and adherent sheets. In the examples, normal sheets are represented by a letter 'o' and the adherent sheets formed by a letter 'x'. To take advantage of the various colors of vines, each championship kite can just put a single tape. Each adhesive sheet to be stuck at a single point in the kite base. With this, normal leaves fillets are formed. The two outermost fillets are normally without folds. Internal fillets, always formed by an even number of leaves are bent: Below is an example of vine, and their placement in the kite:\\r\\n\\r\\nVine: ooxooooooxo\\r\\n\\r\\nAfter pasting the adhesive sheets, the Rabiola looks like this:\\r\\n\\r\\n\\n\\n\\t\\t\\t\\t\\t\\n\\r\\nFillets appear separated in the image for better viewing. In fact, the threads are superimposed. Its mission is to make an algorithm that, given a vine, enter the size of the largest Rabiola fillet done with it.\\n\\t\\t\\t\\t\",\n    \"id\": 1876,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry has multiple test cases . Each test case is given in one row containing a word composed only of the letters P 'o' and 'x' represents a vine . This word has no more than 100 characters. The entry ends with the end of the file .\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Rabiola\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case , print a line containing a single integer N , which is the size of the largest Rabiola fillet formed by this vine.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tRobin: \\\"What are you doing?\\\"\\nSansa: \\\"I'm building my home, Winterfell.\\\"\\n\\nSansa is building a snow castle at the garden of The Eyrie. The snow castle is meant to resemble the actual castle of Winterfell.\\n\\nThe snow castle can be described as a sequence of N snow towers, numbered from 1 to N from the left to the right. The height of tower i (1\\u00a0\\u2264 i\\u00a0\\u2264 N) is equal to hi centimeters.\\n\\nSansa says the castle is beautiful if it consists on a sequence of K \\\"peaks\\\" alternated with K-1 \\\"valleys\\\", like the actual castle of Winterfell. In other words, the castle is beautiful if there is a sequence of K towers T1 < T2 < ... < TK such that:\\n\\n\\n\\tThe heights of the towers in the interval [1,T1] are in ascending order;\\n\\tThere is a \\\"valley\\\" in the interval [Ti,Ti+1], for all 1\\u00a0\\u2264 i < K;\\n\\tThe heights of the towers in the interval [TK,N] are in descending order.\\n\\n\\nThere is a \\\"valley\\\" in an interval [A, B] if B\\u00a0\\u2265 A+2 and there is some tower J, A\\u00a0\\u2264 J\\u00a0\\u2264 B, such that the heights of the towers in the interval [A,J] are in descending order, and the heights of the towers in the interval [J,B] are in ascending order.\\n\\nHelp Sansa to determine whether her castle is beautiful or not!\\n\\t\\t\\t\\t\",\n    \"id\": 1877,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N\\u00a0 and K (1\\u00a0\\u2264 N\\u00a0\\u2264 1000, 1\\u00a0\\u2264 K\\u00a0\\u2264 N). The second line contains N integers h1, h2, ..., hN (1\\u00a0\\u2264 hi\\u00a0\\u2264 100), the heights of the towers, in centimetres. The first and the last tower will always be 1 centimeter high. No two consecutive towers will have the same height.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Sansa's Snow Castle\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing the word beautiful if the given castle is beautiful, or the word ugly otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Matheus Pimenta, UNB  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tDenis is a very fair competitive programming teacher. In a discipline, he makes N programming contests to evaluate his M students. The last Denis' idea is to reward the three students with the best results in the contests. For this, Denis had the idea to create the following rank function.\\n\\n\\t\\t\\t\\t\\tf(T1,T2,...,TN) = c1T1 + c2T2 + ... + cNTN\\n\\n\\t\\t\\t\\t\\tIn this function, the N-tuple (T1,T2,...,TN) indicates the rank positions of a single student in the N contests. For example, if there are two contests, a student gets the third place in the first contest and first place in the second contest, his ordered pair is (3, 1).\\n\\t\\t\\t\\t\\tAs Denis wants to be as fair as possible, he doesn't wants to exist possibility of tie. As he is also lazy for trying to prove that his function is free of ties, he asked your help to write a program that, given the coefficients c1, c2, ..., cN, determines whether the function can actually be used for ranking. In other words, if the function won't give equal scores to different students.\\n\\t\\t\\t\\t\\tNote that the software used by Denis to rank his students in a contest is free of ties. In other words, it's not possible that two students get the first place in a same contest, or the second place, etc.\\n\\t\\t\\t\\t\",\n    \"id\": 1878,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases and ends with end of file.\\n\\n\\t\\t\\t\\t\\tThe first line of a test case consists of two integers N and M, which are respectively the number of contests made by Denis and the number of students that will compete in each contest, where 1 \\u2264 N \\u2264 3 and 1 \\u2264 M \\u2264 10.\\n\\n\\t\\t\\t\\t\\tFollowing are given N integers c1, c2, ..., cN, the coefficients of the Denis' function, where ci \\u2265 1 for all i.\\n\\n\\t\\t\\t\\t\\tIn a test case, is guaranteed that the values of Denis' function are at most 109.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Contests in Sequence\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the line \\\"Lucky Denis!\\\" if the function can be used by Denis, or \\\"Try again later, Denis...\\\" otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Stefano Tommasini, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBridge is a great card game! The 2006 World Youth Team Championship in Bridge took place in Thailand, the same country that will host the 2016 ICPC World Finals! Let's describe the rules of bridge. The game is played with a standard 52-card deck, with 13 cards from each of the four suits (hearts, spades, clubs, and diamonds). The cards are ranked as A, K, Q, J, 10, 9, 8, 7, 6, 5, 4, 3, 2, with the ace having the highest rank and 2 the lowest. There is also a predetermined trump suit (H = hearts, S = spades, C = clubs, D = diamonds, NT = no trump).\\n\\nThe game is played by 4 players (N, E, S, W), as shown in the figure, and it has several rounds, called tricks. A player starts a round/trick by playing a card. Afterwards, each player plays a card, following clockwise order, until everyone has played. The trick then ends. The leading player in the trick can play whichever card she or he wants; this card's suit is defined as the current trick's suit. Every player other than the leading player must play a card of the same suit as the current trick's, unless she or he has no such card. In this case, the player can play any card.\\n\\nThe winner of a trick is defined as follows. If a trump card (a card of the trump suit) has been played, the winner is the player who played the highest ranking trump card. Otherwise, the winner is the player who played the highest ranking card of the trick's suit. The winner of a trick starts the next trick.\\n\\nPlayer N starts the first trick. Players N and S play as a team, as do E and W. The goal is to win the most tricks.\\n\\n\\n\\nIn this problem, each player has R cards and we want to know how many tricks the team NS can win if everyone plays optimally.\\n\\t\\t\\t\\t\",\n    \"id\": 1879,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input has an integer T corresponding to the number of instances.\\n\\nEach instance starts with a line containing a string (one of H, S, C, D, NT) representing the trump suit and an integer R (1 \\u2264 R \\u2264 4) representing the number of cards each player is dealt. The next 4 lines each contain a space-separated list of R cards. A card is represented as a string XY, where X is one of A, K, Q, J, T (representing 10), 9, 8, 7, 6, 5, 4, 3, 2, and Y is the suit (one of H, S, C, D). The 4 lines contain the hands of the players N, E, S, and W, in this order. Note that no card appears twice!\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Bridge\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance print a single integer, the maximum number of tricks that the NS team can win.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Marcio T. I. Oshiro, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAt the ruins of Wat Phra Si Sanphet (\\u0e27\\u0e31\\u0e14\\u0e1e\\u0e23\\u0e30\\u0e28\\u0e23\\u0e35\\u0e2a\\u0e23\\u0e23\\u0e40\\u0e1e\\u0e0a\\u0e0d\\u0e4c), one can find famous inscriptions that have only recently been decoded. Several numbers written using Thai numerals decorate these ruins.\\n\\n\\t\\t\\t\\tA couple of years ago, the famous Peruvian researcher Renzo \\\"elintr\\u00e9pido\\\" Morales found out that most numbers found at the ruins are palindromic, that is, they represent the same number when read backwards. For instance, 171 is palindromic, whereas 17 is not.\\n\\n\\t\\t\\t\\tIntrigued by the existence of non palidromic numbers as decorations in the ruins, Renzo found out that, while these numbers are not palindromic when represented in base 10 (which is the base used in the Thai numeral system), they are palindromic when represented in another base. For b > 0, the base-b representation of a number N is the sequence amam-1...a1a0 so that 0 \\u2264 ai \\u2264 b-1 for each 0 \\u2264 i \\u2264 m, am > 0, and ambm+ am-1bm-1+ ... + a1b + a0 = N. For the previous example, the base-2 representation of 17 is 10001, which is palindromic.\\n\\n\\t\\t\\t\\tTo validate his discovery, Renzo wants you to write a program that takes a number represented in base 10 and checks in which bases from 2 to 16 such number has a palindromic representation.\\n\\t\\t\\t\\t\",\n    \"id\": 1880,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several instances. The first line of the input has an integer T corresponding to the number of instances.\\n\\n\\t\\t\\t\\t\\tEach instance has a single line with an integer N (0 \\u2264 N < 231) written in base 10.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Renzo and the Palindromic Decoration\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print in a single line a space-separated list of integers, from 2 to 16 and in increasing order, of the bases for which the representation of N is palindromic. If N does not have a palindromic representation for any of the bases from 2 to 16, print -1.\\n\\n\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Antonio Roberto C. Jr., Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tMalai advanced to the Thai national robotics contest finals, to be held next week. Each contestant specifies an instruction to her or his robot and the number of times this instruction should be executed. The robot that gets to closest to a certain target wins the contest.\\n\\nEach robot is represented by a point (x,y) and it starts at the origin of the plane. Each instruction is defined as I(\\u03b1, l), where \\u03b1 is an angle in degrees and l a length in meters. To execute instruction I(\\u03b1, l), the robot must rotate \\u03b1 degrees counterclockwise around the origin and then move l meters to the right from its position.\\n\\n\\n\\nMalai is a newbie at this contest and needs your help to find the robot's final position.\\n\\t\\t\\t\\t\",\n    \"id\": 1881,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input has an integer T corresponding to the number of instances.\\n\\nEach instance consists of a single line that contains the angle \\u03b1 (0 \\u2264 \\u03b1 \\u2264 365), the length l (0 \\u2264 l \\u2264 10), and the number N (1 \\u2264 N \\u2264 1.000.000.000) of times that the instruction I(\\u03b1, l) must be executed. Consider that \\u03b1 and N are integers and that l are rational.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Robotics Competition\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print a single line with the coordinates (x, y), in meters, of the robot's final position after N executions of the instruction I(\\u03b1, l). The coordinates x and y must be rounded and printed with 2 decimal digits.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Stefano Tommasini, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThailand is made up of a few hundred islands. In each reasonably-sized island there is an airport used by small aircraft. However, the transport system seems quite peculiar for visitors...\\n\\nFerry boats are very reliable. For instance, you can depart from Ko Khang Khao (\\u0e40\\u0e01\\u0e32\\u0e30\\u0e04\\u0e49\\u0e32\\u0e07\\u0e04\\u0e32\\u0e27) and get to neighbouring islands for a reasonable price using ferry boats: Ko Sichang (\\u0e40\\u0e01\\u0e32\\u0e30\\u0e2a\\u0e35\\u0e0a\\u0e31\\u0e07), Ko Kham Yai (\\u0e40\\u0e01\\u0e32\\u0e30\\u0e02\\u0e32\\u0e21\\u0e43\\u0e2b\\u0e0d\\u0e48), Ko Kham Noi (\\u0e40\\u0e01\\u0e32\\u0e30\\u0e02\\u0e32\\u0e21\\u0e19\\u0e49\\u0e2d\\u0e22), Ko Ram Dok Mai (\\u0e40\\u0e01\\u0e32\\u0e30\\u0e23\\u0e49\\u0e32\\u0e21\\u0e14\\u0e2d\\u0e01\\u0e44\\u0e21\\u0e49), Ko Prong (\\u0e40\\u0e01\\u0e32\\u0e30\\u0e1b\\u0e23\\u0e07), or Ko Yai Thao (\\u0e40\\u0e01\\u0e32\\u0e30\\u0e43\\u0e2b\\u0e0d\\u0e48\\u0e17\\u0e49\\u0e32\\u0e27) (yes, Ko means island in Thai).\\n\\nThe airplane pilots, on the other hand, are very erratic. Once you pay the flight fare, the pilot will drop you off at a random island, each with the same probability, including the one you departed from. Even though the destination of the flight is random, the price is always K baht.\\n\\nSo when you want to go from one island to another you always have two options. Get a boat to a neighbouring island, where the price varies according to the route, or get a flight.\\n\\nThe islands are numbered from 1 to N. Your task is to determine the minimum expected price of a trip from island 1 to N.\\n\\t\\t\\t\\t\",\n    \"id\": 1882,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input has an integer T corresponding to the number of instances.\\n\\nThe first line of each instance has 3 integers, N, M (1 \\u2264 N, M \\u2264 100.000), and K (1 \\u2264 K \\u2264 1000), that represents the number of islands, the number of boats, and the cost of getting a flight, respectively.\\n\\nThe next M lines contain 3 integers each, A, B, C (1 \\u2264 C \\u2264 1000), indicating that there exists a boat trip that costs C baht to go from island A to B or from B to A. There exists at most one boat servicing each pair of islands.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Random Walks in Thailand\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print a real number rounded to 3 decimal digits with the minimum expected value. The number should be printed with exactly 3 decimal digits.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Renzo Gonzalo G\\u00f3mez Diaz, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tAyutthaya was one of the first kingdoms in Thailand, spanning since its foundation in 1350 to its collapse in 1767. The organization of Extraordinary Mystery Investigators (IME, in their language) aims to uncover the secrets of this ancient kingdom. One of IME's most notorious historians is M\\u00e1rcio \\\"the indispensable\\\" Himura. He is currently researching the laws and punishments in place during King Ramathibodi I's rule. Recent discoveries suggest how Ramathibodi I used to punish the subjects that did not convert to Theravada Buddhism, the religion he adopted.\\n\\n\\t\\t\\t\\t\\tThe punishment involved trapping the accused prisoner in a room with a single exit and to light up a fire. If the prisoner could manage to reach the exit before getting caught on fire, she or he was forgiven and allowed to live. M\\u00e1rcio has access to some records that describe the floorplans of the rooms where this punishment took place. However, there are no documents asserting whether the prisoners were forgiven. M\\u00e1rcio would like to know whether each of these prisoners had any chance at all of having been forgiven. For that, M\\u00e1rcio represented each room as a grid with N rows and M columns, where each position has a symbol with the following meaning\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\twhere \\\"start\\\" is the person's initial position in the room when fire has been lit up. Moreover, M\\u00e1rcio imposed the following constraints in his model:\\n\\n\\n\\tFire spreads in the four cardinal directions (N, S, E, O) at the speed of one cell per minute.\\n\\tThe prisoners can also move in these four directions at the same speed.\\n\\tNeither fire nor the prisoners can walk through a wall.\\n\\tIf the prisoner and fire occupy the same position at any instant, the prisoner dies instantaneously.\\n\\n\\nYou are a member of IME and M\\u00e1rcio would like to know if you deserve your position. He has charged you with the task of determining whether a prisoner had any chance to be forgiven.\\n\\t\\t\\t\\t\",\n    \"id\": 1883,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many instances. The first line of the input contains an integer T indicating the number of instances.\\n\\nEach instance consists of several lines. The first line contains two integers, N (1 \\u2264 N \\u2264 103) and M (1 \\u2264 M \\u2264 103). Each of the following N lines contains exactly M symbols representing, as described above, a room from which the prisoner must escape.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Escape From Ayutthaya\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print a single line containing a single character. Print 'Y' if the prisoner had any chance of being forgiven; otherwise, print 'N'.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Stefano Tommasini, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tMuay Thai is a martial art originated in Thailand. Many of its practitioners became legends among Thai people. Among these legendary fighters, Nai Khanom Tom is considered the very best. Here's one of his famous anecdotes.\\n\\n\\t\\t\\t\\t\\tBurma's king Mangra made Nai Khanom Tom, who was a war prisoner, duel one of the finest Burmese fighters in order to judge their fighting styles. Nai Khanom Tom effortlessly beat his opponent. However, the referee claimed that Nai Khanom Tom only won because he performed Ram Muay, a ritualistic dance move. The king then ordered Nai to duel ten Burmese warriors, one after another. Nai Khanom Tom still beat them all. Having witnessed Nai's skills, king Mangra set him free.\\n\\n\\t\\t\\t\\t\\tThis tale has been passed across generations. Some people even believe Nai Khanom Tom could beat any number of opponents, even mythic Thai creatures.\\n\\n\\t\\t\\t\\t\\tAs a big Muay Thai fan, you want to verify this claim. Suppose Nai Khanom Tom has H hit points and has to duel against N Rajasis. Each of them has xi hit points and yi recovery points. To win a fight, Nai's hit points must be greater than the Rajasi's. After fighting, Nai loses xi hit points and recovers yi points afterwards. Moreover, Nai knows K spells that can instantly beat a Rajasi. However, when a spell is used, Nai does not lose nor wins hit points as in a usual fight.\\n\\n\\t\\t\\t\\t\\tGiven the description of a set of N Rajasis, you must decide if Nai Khanom Tom can beat them all. Note that Nai Khanom Tom can choose to fight the Rajasis in any order he wants.\\n\\t\\t\\t\\t\",\n    \"id\": 1884,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many instances. The first line of the input contains an integer T which indicates the number of instances.\\n\\n\\t\\t\\t\\t\\tThe first line of each instance contains 3 integers, N (1 \\u2264 N \\u2264 2000), H (0 \\u2264 H < 109) and K (1 \\u2264 K \\u2264 2000), where H represents the initial value of Nai's hit points. Each of the N following lines contain 2 integers, xi and yi (1 \\u2264 xi, yi < 109).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Fighting the Rajasi\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print a single line containing a single character. Print 'Y' if Nai Khanom Tom can beat all the Rajasis; print 'N' otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Arthur Nascimento, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBorommarachathirat IV (\\u0e2a\\u0e21\\u0e40\\u0e14\\u0e47\\u0e08\\u0e1e\\u0e23\\u0e30\\u0e1a\\u0e23\\u0e21\\u0e23\\u0e32\\u0e0a\\u0e32\\u0e18\\u0e34\\u0e23\\u0e32\\u0e0a\\u0e17\\u0e35\\u0e48 4) was a ruler of the Ayutthaya Kingdom in the 16th century. Borommarachathirat IV decided to create a lottery for his subjects using dice. These are traditional Thai dice and they may have several faces, where each face is rolled with the same probability.\\n\\nThe ruler demands the lottery to be perfectly fair, that is, each of his subjects must have the same probability of winning. The lottery consists of a finite number of rounds of dice rolls and, after each round, it is either decided that there is a winner or that more rounds are required. The dice rolls must follows the following rules:\\n\\n\\n\\tseveral dice may be rolled at the same round;\\n\\tprevious rounds may affect the choice of dice in the next rounds;\\n\\tthe same dice can be rolled in multiple rounds.\\n\\n\\nIt is imperative to ensure that each subject has the same chance of winning the lottery. Notice that this is not always possible. For instance, if there are 5 subjects and a single 6-face die, then it is impossible to have a fair lottery. On the other hand, with such a die one can have a fair lottery if the population size is 3, 6, 18, or 36 people, and so on.\\n\\nYour task in this problem is to write a program to help the ruler decide if it is possible to have a fair lottery with the available dice.\\n\\t\\t\\t\\t\",\n    \"id\": 1885,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many instances. The first line of the input contains an integer T which indicates the number of instances.\\n\\nEach instance is composed by 2 lines. The first one contains 2 integers, N (1 \\u2264 N \\u2264 1018) and K (0 \\u2264 K \\u2264 105), that represent the number of persons and the number of dice, respectively. The second line contains K integers. The i-th integer, say fi (1 \\u2264 fi \\u2264 1018), represents the number of faces of the i-th die.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Thai Lotery\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print a single line containing a single character. Print 'Y' if its possible to do the lotery; otherwise, print 'N'.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Renzo Gonzalo G\\u00f3mez Diaz, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThere are thousands of Buddhist temples in Thailand, known as \\\"wat\\\". Some of them, such as the \\\"Wat Phra Kaew\\\" in Bangkok's Grand Palace, are specially regarded for their importance and they're called royal temples. The \\\"Wat Phra Kaew\\\" is famous for housing the Emerald Buddha statue, a national treasure. In 2016, the ACM ICPC World Finals will take place in Phuket, Thailand, and so increased tourism is expected in this city. The authorities in Phuket thus want to improve security in its royal temples.\\n\\nPhuket's Security Unit (PSU) hired the researcher Lua \\\"the ingenious\\\" Kuratowski. PSU needs to solve the following problem. Given N royal temples and M streets connecting them, they must position guards at these streets so that every royal temple can be under surveillance. They consider a temple as secured if there is a guard in at least one of the streets ending at the temple. Streets were laid out so that one can reach any temple from any other. Moreover, due to a cultural dislike of odd numbers, any time someone starts a walk at a temple and returns to it, the number of streets traversed is always even.\\n\\nLua knows you wish to advance to the World Finals next year, and she considers this to be a good test for your skills. She challenges you to find a solution with the minimum number of guards.\\n\\t\\t\\t\\t\",\n    \"id\": 1886,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many instances. The first line of the input contains an integer T which indicates the number of instances.\\n\\nEach instance spans several input lines. The first line has two integers, N (1 \\u2264 N \\u2264 103) and M (1 \\u2264 M \\u2264 5*103), the number of royal temples and the number of streets joining temples, respectively. Each temple is represented by an integer between 1 and N. The next M lines describe the streets. Each street is represented by two integers, corresponding to the temples it joins.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Protecting the Temples\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print a single line with the minimum number of guards needed to have all royal temples under surveillance.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Arthur Nascimento, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Kunming-Singapore Railway is a network of rail tracks (some already built, some under construction) connecting several Asian cities. The project started in 1900 with the goal to connect Kunming (China) to Singapore, through the British Empire. Afterwards, in 1918, the railway was connected to Thailand through rail track joining Bangkok and Singapore. In 2000, ASEAN (Association of Southeast Asian Nations) considered completing this railway system.\\n\\nThe project is scheduled for completion by 2020. Due to its importante for Southeast Asia integration, the contractors hired you to minimize the system maintenance cost. Given N cities that make up the Kunming-Singapore network, M initial rail tracks in the system and the Q tracks that will be built over time, you are required to compute the minimum cost do maintain the network connected after building each of these Q tracks. The system is initially connected if, for each pair of cities, there a set of tracks joining one to the other.\\n\\t\\t\\t\\t\",\n    \"id\": 1887,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many instances. The first line of the input contains an integer T which indicates the number of instances.\\n\\nEach instance spans several lines. The first line has three space-separated integers, N, M, and Q (described above, 1 \\u2264 N, M, Q  \\u2264 3*104). The next M lines describe the initial rail tracks, and the next Q lines describe the tracks to be added over time. Each track is represented as three space-separated integers, a, b, and c (1 \\u2264 a, b \\u2264 N e 1 \\u2264 c \\u2264 3*104), where a and b represent the cities that are endpoints of the track, and c is the maintenance cost.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Kunming-Singapore Railway\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print Q lines. The i-th line among these must have a single integer, the minimum maintenance cost after adding the i-th track.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Stefano Tommasini, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA chedi (also known as stupa, dagoba, or pagoda) is a relic usually shaped as a conic tower built over the remains of someone Buddhists consider important. Some historical Thai sites have dozens such structures, dedicated to monks or nuns or other religious leaders (known as bhikkhu - \\u0e20\\u0e34\\u0e01\\u0e29\\u0e38\\u0e13\\u0e35 in Thailand). For instance, in Kamphaeng Phet some chedi inscriptions refer to Garuda (\\u0e04\\u0e23\\u0e38\\u0e11), and similarly in Si Satchanalai and Sukhothai.\\n\\nThe differences between some Thai symbols are very subtle, making it hard for experts to analyze words. For instance, when any symbol of the word Ramakien (\\u0e23\\u0e32\\u0e21\\u0e40\\u0e01\\u0e35\\u0e22\\u0e23\\u0e15\\u0e34\\u0e4c) is changed, its meaning is altered completely. Since many of the sites are over 700 years old, the inscriptions are very worn.\\n\\nAn example is the pair of inscriptions below, found in distinct chedis:\\n\\n\\u0e08\\u0e31\\u0e14\\u0e29\\u0e38\\u0e15\\u0e31\\u0e07\\u0e02\\u0e36\\u0e49\\u0e19\\u0e42\\u0e14\\u0e22\\u0e1e\\u0e23\\u0e20\\u0e34\\u0e30\\u0e1a\\u0e21\\u0e1e\\u0e38\\u0e18\\u0e32\\u0e19\\u0e38\\u0e0d\\u0e32\\u0e29\\u0e38\\n\\n\\u0e08\\u0e31\\u0e14\\u0e15\\u0e31\\u0e49\\u0e07\\u0e02\\u0e36\\u0e49\\u0e42\\u0e01\\u0e14\\u0e22\\u0e1e\\u0e23\\u0e30\\u0e1a\\u0e23\\u0e21\\u0e29\\u0e38\\u0e1e\\u0e38\\u0e17\\u0e18\\u0e32\\u0e19\\u0e0d\\u0e32\\u0e15\\n\\nExperts believe both refer to the same entity. They developed a method to validate their hypothesis; this is called the method of minimum probabilistic difference.\\n\\nThe method works as follows. Let a = a1a2...aN and b = b1b2...bM be two inscriptions with N and M characters, respectively. The parameter called difference is initially set to zero. At each step, we analyze a pair (ai, bj) of characters with 1 \\u2264 i \\u2264 N + 1 and 1 \\u2264 j \\u2264 M + 1, starting with (a1, b1). Note that when i = N + 1, ai is the empty character. The same happens to bj when j = M + 1. If ai = bj, we consider the corresponding characters to match and we update the current pair to (ai+1, bj+1). There is not match if ai \\u2260 bj and a character from one inscription never matches two characters in the other. If there is no match between the characters of the pair, then we update the difference parameter following one of these rules:\\n\\n\\n\\t\\n\\twe increment the difference and update the current pair to (ai+1, bj) or (ai, bj+1);\\n\\t\\n\\t\\n\\twe add K to the difference and update the current pair to (ai+x, bj+y), where x and y are chosen randomly with uniform distribution in the intervals [1,N-i+1]\\u00a0and [1, M-j+1], respectively. If i > N, then only x is chosen randomly. If j > M, then only y is chosen randomly.\\n\\t\\n\\n\\nThe analysis ends when ai and bj) are both the empty character. Note that the difference parameter may vary with the choices made in the procedure.\\n\\nThe experts consider that, the smaller the computed difference, the higher correspondence between the inscriptions. They want you to write a program to compute the minimum expected difference between two inscriptions.\\n\\t\\t\\t\\t\",\n    \"id\": 1888,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input has an integer T corresponding to the number of instances.\\n\\nEach instance starts with 3 integers N, M (1 \\u2264 N, M \\u2264 3.000), and K (0 \\u2264 K \\u2264 100.000), where N is the length of the first inscription and M is the length of the second inscription. The next two lines contain, respectively, the first and second inscription. An inscription is a string of characters from 'a' to 'z'.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The chedis of Kamphaeng Phet\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print a real number rounded to 3 decimal places, the minimum expected difference between two inscriptions. Print the answer with exactly 3 decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Arthur Nascimento, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThai cuisine is known for combining seasonings so that every dish has flavors that are sweet (sugar, fruits, bell peppers), spicy, sour (vinegar, tamarind, lime), and salty (soy sauce, fish sauce). The most exotic dish, however, is the one containing fried insect larvae; naturally, it is often showcased to tourists. Westerners usually shudder at the thought of eating larvae, but they are highly valued in Thailand and they are a huge success in parties. Thai children often play with food. They specially like building triangles up using fried larvae as the edges.\\n\\nMarcos \\\"the (Rubik) solver\\\" coaches his university's team on a famous computer programming contest. Next year, the contest's world finals will take place in Phuket, Thailand.\\n\\nMarcos knows how Thai children like to play with larvae, so he had an idea for a special training session. His idea involves preparing a large amount of fried larvae of several different lengths. Each of his friends, in turn, must select three larvae to build a triangle. Then, the amount of fried larvae each friend has to eat is proportional to the area of the triangle she or he built.\\n\\nMarcos hopes that, since you want to eat as little larvae as possible, you'll write a program to choose the larvae that forms a triangle of minimum area. Thus, besides training your computer programming skills, you'll also be training to face Thai cuisine. If you actually enjoy this dish, you may use this program to help your other friends, making sure that there will be more fried larvae left for you.\\n\\t\\t\\t\\t\",\n    \"id\": 1889,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many instances. The first line of the input contains an integer T which indicates the number of instances.\\n\\nEach instance starts with an integer N, (1 \\u2264 N \\u2264 2*103) the number of larvae, followed by N space-separated real numbers, representing their lengths. The lenght of each larva is a real number between 1 and 500.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Training With the Larvae of Phuket\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print a single line containing the minimum area for the instance, rounded to 2 decimal places; if it is not possible to build a triangle from the larvae, print -1.\\n\\n.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Marcio T. I. Oshiro, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe tuk-tuk (\\u0e15\\u0e38\\u0e4a\\u0e01\\u0e15\\u0e38\\u0e4a\\u0e01), also known as \\\"auto rickshaw\\\", is a popular form of transportation in Thailand. In order to distinguish tuk-tuks from the other types of vehicles, the Phuket administration decided to create a new license plate system for them. Phuket's tuk-tuk fleet has been growing rapidly, mostly due to tourism, one of the most important economic activities in the province. The administration plans the new system to meet the demand for distinct license plates for the next 42\\u00a0years.\\n\\nA license plate system is defined by two numbers,\\u00a0C\\u00a0and\\u00a0D. A license plate in this system is a string formed by\\u00a0C\\u00a0consonants followed by\\u00a0D\\u00a0digits. A license plate cannot be empty (no consonant\\u00a0and no digit).\\n\\nIn the Thai alphabet there are 44 consonants and 10 digits. However, since the symbols of some consonants are too much alike, the administration decided to use only 26 consonants, whose symbols were considered sufficiently distinguishable.\\n\\nTo guarantee an appropriate supply of tuk-tuks for the contestants in the ICPC World Finals in 2016, Phuket's administration would like to know the number of distinct license plates it is\\u00a0possible to generate with a given license plate system.\\n\\t\\t\\t\\t\",\n    \"id\": 1890,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input has an integer T corresponding to the number of instances.\\n\\nEach instance is formed by a single line containing the integers C\\u00a0(0 \\u2264 C\\u00a0\\u2264\\u00a06) and D\\u00a0(0\\u00a0\\u2264\\u00a0D\\u00a0\\u2264\\u00a09), the number of consonants and digits, respectively, in a license plate system.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Putting Plates on the Tuk-tuks\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print a line with the amount of distinct license plates that can be generated by the corresponding system. The answer is guaranteed to be smaller than 231.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Marcos Kawakami, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAndr\\u00e9h and his friend Andr\\u00e9as are board-game aficionados. They know many of their friends would love to go on a trip to Phuket, Thailand, and so they want to challenge them at Kem Krad\\u00e3n, a\\n\\ntraditional Thai board game.\\n\\nKem Krad\\u00e3n (\\u0e40\\u0e01\\u0e21\\u0e01\\u0e23\\u0e30\\u0e14\\u0e32\\u0e19) has been played since the 2nd century AD. The game is played with N coins where each coin has two faces, one of which is golden and the other is white. The game starts with all coins arranged in a line on the board and they are numbered from 1 to N from left to right. When a coin numbered i has its golden face up, it can be removed from the board. When this is done, the coins numbered i-1 and i+1 are flipped, if they're still there. The goal is to remove all game coins.\\n\\nBefore challenging their friends, Andr\\u00e9h and Andr\\u00e9as want to make sure their initial configurations have a solution. To help them, given an initial configuration, you must determine if it is possible to remove all game coins and, if so, you must show how to do it.\\n\\t\\t\\t\\t\",\n    \"id\": 1891,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input has an integer T corresponding to the number of instances.\\n\\nEach instance is given by an integer N (0 \\u2264 N \\u2264 105), the number of coins, followed by a string of length N, containing the characters 'B' (white face up) and 'D' (golden face up). This string represents the initial configuration of the game.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Removing Coins in the Kem Kradan\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print in a single line Y if it is possible to remove all the coins, and N otherwise. If it is possible to remove all the coins, print another line containing a space-separated sequence of N integers corresponding to the sequence in which the coins can be removed. In the case that there is more than one possible sequence, choose the lexicographically smallest.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Matheus Pimenta, UNB  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tProfessor Denis is curious to know if the final ranking of his\\u00a0N\\u00a0competitive programming students follows the registration order at the university. He asked your help to, given the final ranking, count how many (i, j) pairs exist such that i < j and m[i] > m[j], where\\u00a01\\u00a0\\u2264 i,j\\u00a0\\u2264\\u00a0N\\u00a0and\\u00a0m[i] means the registration of the student who got the i-th position.\\n\\t\\t\\t\\t\",\n    \"id\": 1892,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of many test cases.\\r\\n\\r\\nThe first line of a test case contains a single integer\\u00a0N, which represents the number of students, where\\u00a01\\u00a0\\u2264\\u00a0N\\u00a0\\u2264 105.\\r\\n\\r\\nThe next\\u00a0N\\u00a0lines are the final ranking of the students. Each line contains a string with length 10.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Freshman Beats Veteran?\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print a line with the number asked in the specification.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJade won as birthday gift a telescope and is very happy, because she loves stay looking the moon at night. She was always a very good student, and just analyzing the moon for two consecutive nights, she can already identify the changes that occurred in lighting and the approximate percentage of the moon that are illuminated.\\n\\n\\n\\nYou, who is a Jade's friend and a Computer Science student, decided to make a small program that, based on her analise made in the last two nights, informs the phase in which the moon is. If the visible portion of the moon is between 0 and 2%, for example, is new moon (\\\"nova\\\" in portuguese). If it is between 3 and 96% is crescent moon (\\\"crescente\\\" in portuguese), if it is between 97 and 100% is full moon (\\\"cheia\\\" in portuguese) and it is between 3 and 96 % (decreasing) is waning moon (\\\"minguante\\\" in portuguese).\\n\\t\\t\\t\\t\",\n    \"id\": 1893,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line containing two integer numbers. The first number corresponds to the percentage observed by Jade at night two days ago. The second value corresponds to the percentage observed by jade the night before.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Moon Phases\",\n    \"output\": \"\\t\\t\\t\\t\\tBased on the two percentage observed by Jade, print on the screen at what stage the moon was in the night before. Don't forget the end-of-line character :)\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, Universidade Estadual do Cear\\u00e1  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tBino is a naturalist, and he traveled to the planet Binox because he want to study the phylogeny of the living creatures of this planet. Bino succeed drew the phylogenetic trees of living creatures of the planet Binox. However, he need your help to determine the lowest amount of possible evolutive changes that occurred between the direct descendants in the tree.\\n\\n\\t\\t\\t\\t\\tComputationally, the phylogenetic trees are represented by binary trees, where the leaves are individuals known and their internal nodes and the root are the hypothetical ancestors, which in general we don't have any genetic information about it. Therefore, Bino will provide a tree topology and the genetic code of the individuals represented by the leaves. The genetic code of the living creatures of Binox is a sequence of lowercase letters.\\n\\n\\t\\t\\t\\t\\tAs Bino will provide only the genetic codes of the individuals, which are represented by the leaves. Your task is infer the genetic codes of the individuals represented by the other nodes. Your inference have to minimize the amount of changes between the codes of the individuals directly connected. The following images show the initial setup and two possible final setups for the tree of the first case:\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tThe total cost of the final tree is calculated comparing all the positions of the genetic code of individuals directly connected. For each difference, the cost is incremented by 1. For example, for the final tree of the first case is:\\n\\n\\nThe initial cost is 0\\n\\n\\n\\t\\n\\tThe connection between 1 (\\u201cac\\u201d) and 4 (\\u201caa\\u201d): 'c' \\u2260 'a' (cost + 1).\\n\\t\\n\\t\\n\\tThe connection between 2 (\\u201cba\\u201d) and 4 (\\u201caa\\u201d): 'b' \\u2260 'a' (cost + 1).\\n\\t\\n\\t\\n\\tThe connection between 3 (\\u201cab\\u201d) and 5 (\\u201caa\\u201d): 'b' \\u2260 'a' (cost + 1).\\n\\t\\n\\t\\n\\tThe connection between 4 (\\u201caa\\u201d) and 5 (\\u201caa\\u201d): \\u201caa\\u201d = \\u201caa\\u201d.\\n\\t\\n\\t\\n\\tThe total cost is 3.\\n\\t\\n\\n\\nBoth inferred trees have total cost 3. However, Bino want the tree with the lowest possible cost and that the root has the lowest lexicographical possible value for that cost. Therefore, Bino chooses the tree with root code \\\"aa\\\".\\n\\nIt is guaranteed that all the leaves do not have children and that everyone else has exactly two children.\\n\\t\\t\\t\\t\",\n    \"id\": 1894,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of multiple rows. The first row has 2 integers N (3 \\u2264 N \\u2264 10000) and L (1 \\u2264 L \\u2264 1000), representing the amount of species and the length of the codes, respectively. The N following rows have the genetic sequence of the individuals of the leaves (1, \\u2026, N). The following (N-1)*2 rows have two integers A (1 \\u2264 A \\u2264 (N*2)-1) and B (1 \\u2264 B \\u2264 (N*2)-1) representing the existence of a connection between the individual of index A and the individual of index B.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Phylogeny\",\n    \"output\": \"\\t\\t\\t\\t\\tThe expected output consist of two rows. The first row is the minimum cost of the tree. The second row is a genetic sequence of the individual of index (N*2)-1, that is always the root of the tree.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAlice and Bob decided to play a simple game to pass their time. The game is played with a deck containing N cards, numbered from 1 to N. One card is initially on the table. Also, there is a stack containing all other cards.\\n\\n\\t\\t\\t\\t\\tAlice begins taking the card on the top of the stack. She then verifies if the absolute difference between the card which is currently on the table and the card taken from the stack is at most a limit L. In other words, if the current card on the table is T and the card taken from the stack is S, then she verifies if |T-S|\\u00a0\\u2264 L. If that is true,\\u00a0 she replaces the card on the table by the taken card, and scores |T-S| points. If it is not true, she does nothing -- the card on the table is not changed, and she does not score.\\n\\n\\t\\t\\t\\t\\tBob then plays by doing the same. He takes a card from the stack, compares it with the card on the table, and moves accordingly. Alice then plays again, then Bob plays again, and so on. They keep playing until the stack of cards is empty. Your task is to determine the final score of both players.\\n\\t\\t\\t\\t\",\n    \"id\": 1895,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains three integers N, T0 and L (1\\u00a0\\u2264 N < 60, N is odd, 1\\u00a0\\u2264 T0\\u00a0\\u2264 N, 1\\u00a0\\u2264 L\\u00a0\\u2264 10), the number of cards, the card initially on the table, and the limit L. The next N-1 lines contains an integer Si each (1\\u00a0\\u2264 Si\\u00a0\\u2264 N). These are the cards in the stack, in order. The first card given in the input is at the top of the stack. All cards used in the game are distinct.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Game of Limit\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line with two integers A and B separated by a single space, where A is Alice's final score, and B is Bob's final score.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Caio Russi, UNOESTE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tDuel Monsters is the world's most famous Cards championship. Every duel is played by two players, where each player starts with\\u00a08000 Life Points and your Deck.\\u00a0Each card is a monster that has the attributes Attack, Defense and Skill.\\u00a0We are in the final duel with the two greatest duelists of history.\\u00a0On one side Charlinho, a boy who loves to study, but also know feel the heart of the cards.\\u00a0Across Gilmar, which was not created to milk with pear, but is recognized as the Master the Cards.\\u00a0It is the turn of Charlinho, and he has just combine their monsters on the table for the forbidden \\\"Prass\\u00f3dia\\\".\\n\\t\\t\\t\\t\\tPrass\\u00f3dia is the strongest monster in the game, and when invoked the match is completed on time and the player who invoked wins the duel.\\u00a0To invoke Prass\\u00f3dia is necessary to combine two or more cards on the table by adding attack with attack, defense with defense and skill with skill\\u00a0for the Prass\\u00f3dia attributes informed at the beginning of the duel.\\n\\t\\t\\t\\t\\tIf a Card is chosen to be combined, the attributes of the card must be used in full,\\u00a0being invalid only use the attack or just use the defense or just the skill that card\\u00a0and still being able to use only a part of the attack and/or a part of defense and/or a part of skill.\\u00a0Gilmar is surprised for a moment, because he was the only one who could invoke Prass\\u00f3dia in history,\\u00a0but ends up doubting the move by Charlinho because there were several cards on the table, which would make such a very suspicious move.\\u00a0\\n\\t\\t\\t\\t\\tYou are the judge of the duel and an excellent programmer was responsible for assessing whether the Charlinho actually managed to invoke or not Prass\\u00f3dia with the cards on the table.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 1896,\n    \"input\": \"\\t\\t\\t\\t\\tThe first row entry contains 4\\u00a0integers, the first integer n (1 \\u2264 N \\u2264 20) represents the number of cards in the following table\\u00a0by three integers A, D, H (1 \\u2264 A, D, H, \\u2264 1000) representing respectively the attack, defense and the exact skill to invoke\\u00a0Prass\\u00f3dia.\\u00a0Each of the following N lines represent a card of the table, where each row contains the attributes in the order X, Y, Z (1 \\u2264 X, Y, Z \\u2264 50) attack, defense and skill respectively.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"It's Time to Duel!\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output should contain \\\"Y\\\" if Charlinho can hold a valid combination to invoke Prass\\u00f3dia or \\\"N\\\" otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, Universidade Estadual do Cear\\u00e1  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tWhile Bino rested, he invented a smart game. Given the number N and the number M, Bino want to know how many operations are necessary to convert N into M.\\n\\nSix operations are allowed:\\n\\n\\n\\tOperation 1: N = N*2\\n\\tOperation 2: N = N*3\\n\\tOperation 3: N = N/2\\n\\tOperation 4: N = N/3\\n\\tOperation 5: N = N+7\\n\\tOperation 6: N = N-7\\n\\n\\t\\t\\t\\t\",\n    \"id\": 1897,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of two integers N ( 0 \\u2264 N \\u2264 10000) and M ( 0 \\u2264 M \\u2264 10000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Smart Game\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the minimum number of operations to convert N into M.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tThe brazilian agency for criminal investigations called OBI (Operation of Big Investigation) noted that, as the has occurred in Petrobras, a lot of money was diverted from public state coffers to pay bribes to politicians in recent years, especially by the political party QU (United Quadrille).\\n\\n\\t\\t\\t\\t\\tThe investigation is still in course and the agency has recruited you to convert some values that are with strange characters after it were decrypted the original files. Your task in this case is Relatively simple: just remove all strange characters (non-numeric) of each of the two available numbers and sum these values. Just note that the first 11 valid digits of the first number corresponding to the corrupt ID :)\\n\\t\\t\\t\\t\",\n    \"id\": 1898,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains two rows, each one containing between 1 and 60 characteres ('0'-'9' and others non numeric characteres or, at least, 1 character '0'-'9') and at maximun, one decimal point \\\".\\\". Desconsidering the non-numeric digits, the final number can have up to 17 characters, at maximum (including decimal point). Any number after the second digit after the decimal point must be discarded.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Kickback Sum\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the cpf of the corrupt as shown below and the sum of the two numbers that were diverted from public funds, always with two decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\\"Hit the Target!\\\" is a very popular game in Nlogonia. The rules of the game are very simple. A ball is standing on the ground. Also, there is a wall DT meters away from the ball, in which there is a target. The target begins AT meters from the ground, and ends BT meters from the ground (hence, its length is equal to BT-AT meters).\\n\\nYou must shoot the ball to some direction. The ball will then follow a straight line on the direction it was shot. The objective of the game is to shoot the ball to such direction that it hits any point of the target.\\n\\nHowever, there are also N walls between the ball and the target. The wall i (1\\u00a0\\u2264 i\\u00a0\\u2264 N) is Di meters away from the ball. There is only one opening in each wall. The wall i has an opening beginning Ai meters from the ground and ending Bi meters from the ground.\\n\\nOf course, the ball must pass through all openings and hit the target. In the case the ball passes exactly at a point an opening starts or ends (i.e., Ai or Bi meters high), consider that the ball successfully pass through the opening.\\n\\nDepending on the positions of the walls and the openings, it may not be possible to hit the target at all. Your task is to determine whether it is possible to hit the target or not.\\n\\nThe following image shows the first sample input and a possible route for the ball, which proves that it is possible to hit the target in that case.\\n\\n \\n\\n\\t\\t\\t\\t\",\n    \"id\": 1899,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains the integer N (0\\u00a0\\u2264 N\\u00a0\\u2264 1000). The next N lines contains three integers each, describing the walls. Line i (1\\u00a0\\u2264 i\\u00a0\\u2264 N) contains the integers Di, Ai and Bi (1\\u00a0\\u2264 Di\\u00a0\\u2264 104, 1\\u00a0\\u2264 Ai < Bi\\u00a0\\u2264 104). The last line contains the integers DT, AT and BT (1\\u00a0\\u2264 DT\\u00a0\\u2264 104, 1\\u00a0\\u2264 AT < BT\\u00a0\\u2264 104). You may assume that D1 < D2 < ... < DN < DT.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Hit the Target!\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line containing Y if it is possible to hit the target, or N otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Caio Russi, UNOESTE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tChico won a list of integers on his birthday and he called his friend M\\u00e1rio to play with it. The play is: \\\"Chico will choose N numbers from the list and will put them in a random sequence, and M\\u00e1rio will have to say if there is a Null Sequence in this new sequence at least.\\\". Let's call Null Sequence a contiguous sequence of integers where in the sum of all elements are equals to zero.\\n\\n\\t\\t\\t\\t\\tGiven the result of the first test case: (-2,-1,0,1,2).\\n\\n\\t\\t\\t\\t\\tExample Null Sequences: (-2,-1,0,1,2), (-1,0,1), (0).\\n\\n\\t\\t\\t\\t\\tExample not Null Sequences: (-1,1), (-2,0,2), (1).\\n\\n\\t\\t\\t\\t\\tChico is furious because Mario is winning all the time, so he decided to hinder the game. Now he will not have to say wheter or not a Null Sequences, but to say how many sequences in the list are sequences Null. Now who's getting angry is M\\u00e1rio and you have to help him without the Chico notice.\\n\\t\\t\\t\\t\",\n    \"id\": 1900,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 105), that is the quantity of numbers chosen by Chico. In the second of the test case line contains the N integers Vi (-106 \\u2264 Vi \\u2264 106) separated by spaces representing the elements of the sequence.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Null Sequences\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print the number of sequences Null in the given sequence.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, Universidade Estadual do Cear\\u00e1  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe forests of planet called Binox have several rare species of butterflies. Bino is a butterfly hunter and he wants collect the max of different species of butterflies. The forest of Binox is represented by a square grid of size NxN. Each cell of the grid can have one butterfly. The image below represents the first example of input. The species collected were: 1, 2, 3, 4 and 8.\\n\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYour task is determine the amount of species of butterflies, which Bino is able to collect, and the only information that you have is the map of the forest and all places visited by Bino. For an unknown reason, Bino always searches in the 2*N positions in the forest.\\n\\t\\t\\t\\t\",\n    \"id\": 1901,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of multiples rows. The first row have an integer N (0 < N \\u2264 200) representing the size of the forest. The following N rows have N integers Kij (0 < Kij \\u2264 1000) each one representing one butterfly specie. The following N*2 rows, each row have 2 integers, representing the cells visited by Bino.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Butterflies\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint out one row with an amount of different species which Bino collected.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Association for Consistent Marriages (ACM) asked all people in the country that are single if they were in love and with whom they were in love. Curiously, each single person answered that was in love with exactly one other person, but was shy about declaring these feelings. With this information, ACM wants to form marriages, so people can live happier. If a person A1 is in love with a person A2 and the person A2 is also in love with the person A1, of course ACM can form the marriage {A1, A2}. However, if A1 is in love with A2, but A2 is in love with A3, who is in love with A4\\u2026 who is in love with Ak, wherein Ak in love with A1, it is also possible to form the marriage {A1, A2, \\u2026, Ak}, since recently the polygamic marriage has been approved in Brazil. More formally, ACM can form the marriage {A1, \\u2026, Ak} if and only if k \\u2265 2, the person Ak is in love with the person A1 and, for every i \\u2208 {2, \\u2026, k}, the person Ai - 1 is in love with the person Ai.\\n\\n\\t\\t\\t\\t\\tHelp ACM to form the largest number of marriages as possible.\\n\\t\\t\\t\\t\",\n    \"id\": 1902,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of at most 105 lines and it is ended by end-of-file. Each line of the input consists of the names of two people A and B, indicating that the person A is in love with the person B. Each person's name is a string of at least 1 and at most 10 letters from the Latin alphabet, without diacritics.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Association for Consistent Marriages\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program shall output a line containing a single integer, representing the largest number of marriages that ACM can form.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, Universidade Estadual do Cear\\u00e1  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tWhile Bino was traveling, he drew some food chains of living organisms of Binox. However, Bino noted in some chains that all pairs of species relate (directly of indirectly). He called these chains as Cadeias Boladas.\\n\\n\\t\\t\\t\\t\\tRepresenting the food chain as a graph, all pairs of species (u, v) relate if exist a path from u to v OR a path from v to u.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tFrom a food chain, Bino wants to know if it a Cadeia Bolada or Nao Cadeia Bolada.\\n\\t\\t\\t\\t\",\n    \"id\": 1903,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of multiple rows. The first row has two integers N (1 \\u2264 N \\u2264 100000) and M (1 \\u2264 M \\u2264 1000000), representing the amount of species and the number of relationships, respectively. The following M rows have two integers U (1 \\u2264 U \\u2264 N) and V (1 \\u2264 V \\u2264 N), representing the existence of an unidirectional relationship between U and V.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Food Chain\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint out one row with the message \\u201cBolada\\u201d (no quotes) if the chain is a Cadeia Bolada, or \\u201cNao Bolada\\u201d, otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tAlice and Bob are two friends who live in planet Earth 2.0, built after the destruction of planet Earth 1.0 by the Vogons. In Earth 2.0 everything is upgraded. Human beings, for example, do not have only 10 fingers in the hands, but 10 million: 5 million in each hand. The traditional game \\u2018Odds and Evens\\u2019, very played in Earth 1.0, has also been upgraded. Alice and Bob play \\u2018Odds and Evens 2.0\\u2019 all the time. In this version of the game, the players are supposed to show at the same time using the hands an integer between 0 and 10 million. If the numbers shown by both players are equal, we have a tie. Otherwise, the players alternate writing down numbers in a piece of paper. Let A be the integer shown by Alice in the beginning of the match and let B be the integer shown by Bob, each number written down must be a product of |A - B| factors, with all factors being prime numbers, not necessarily distinct, belonging to the interval defined by the integers A and B. Besides, a number is never allowed to be written down more than once. Loses the match the player who happens not to be able of writing down a new number when it is his or her turn to play. As Bob is a gentleman, Alice is always the first to play. Note that if there are no prime numbers in the interval defined by the integers A and B, Alice cannot write down any number in her first turn, and Bob wins the match.\\n\\nFor example, if A = 2 and B = 5, there are only 10 numbers which can be written down in the paper, which are:\\n\\n8 = 2 \\u00d7 2 \\u00d7 2\\n12 = 2 \\u00d7 2 \\u00d7 3\\n20 = 2 \\u00d7 2 \\u00d7 5\\n18 = 2 \\u00d7 3 \\u00d7 3\\n30 = 2 \\u00d7 3 \\u00d7 5\\n50 = 2 \\u00d7 5 \\u00d7 5\\n27 = 3 \\u00d7 3 \\u00d7 3\\n45 = 3 \\u00d7 3 \\u00d7 5\\n75 = 3 \\u00d7 5 \\u00d7 5\\n125 = 5 \\u00d7 5 \\u00d7 5\\n\\nThis way, if both Alice and Bob play optimally, Bob wins the match in this case. \\n\\t\\t\\t\\t\",\n    \"id\": 1904,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of two integers A and B (0 \\u2264 A, B \\u2264 107), which represent respectively the numbers shown by Alice and Bob in the beginning of the match, as explained previously.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Odds and Evens 2.0\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program shall output a single line containing singly the match winner's name, assuming that both players play optimally. If the match ties, the output line shall contain singly the symbol ?.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Carlos Andrade  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tMario always invites his friends to play in his home. This time he decided to invite his friends to play Cops and Robbers.\\n\\n\\t\\t\\t\\t\\tThe game consists of two groups, the cops and the robbers. The robbers are hiding themselves and the cops must catch them. If the cops catch the robbers, they'll win the game. Otherwise the robbers will. Mario joined the cops group and have to catch the robbers. \\n\\n\\t\\t\\t\\t\\tThe robbers group felt disadvantages because they don't have strategic places to hide in the yard.\\n\\n\\t\\t\\t\\t\\tSo they decided to create a maze with cardboard boxes, so they can let the cops locked in the maze and win the game. The walls of the maze are labeled as '0' and '1'. where '0' represents the walls that the cops can walk through it and '1' the walls that are locked\\n\\n\\t\\t\\t\\t\\tThe robbers will always hide themselves in the last slot of the labyrinth, if the cops get trapped in the maze, the robbers can escape and win the game, but if the cops group catch the robbers, the cops will win the game. Your task is to find out from the maze who will win the game.\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1905,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer number T(1 \\u2264 T \\u2264 400) representing the number of test cases.\\n\\n\\t\\t\\t\\t\\tThe next T lines consists if a 5x5 matrix, composed of integers values being 0 or 1\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Cops and Robbers\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should print \\\"COPS\\\" if the Cops are the winners and \\\"ROBBERS\\\" in case the Robbers are the winners.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tWhen Professor Ant\\u00f4nio Neri, younger, knew the Collatz Conjecture, he got very fascinated. If you do not know the Collatz Conjecture yet, it states that, for any positive integer X, the Collatz sequence for X eventually reaches 1. By the way, the Collatz sequence for a positive integer X is defined as the infinite sequence a0, a1, a2\\u2026 such that a0 = X and, for each i > 0, ai = ai-1 / 2 if ai-1 is even or ai = 3 \\u00d7 ai-1 + 1 if ai-1 is odd. For example, for X = 7, the first 20 terms of the Collatz sequence are:\\n\\n\\t\\t\\t\\t\\t7, 22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1, 4, 2, 1\\u2026\\n\\n\\t\\t\\t\\t\\tThe Collatz Conjecture has not been proved yet, despite of existing many brilliant mathematicians in this world, as Professor Ant\\u00f4nio Neri. He is still so fascinated by the subject that, the other day, while looking at the alarm system keypad of his house, which contains a key for each integer between 1 and N, he decided to reset his password so that the new password is a sequence of K numbers that appear consecutively in a Collatz sequence. For example, if N = 20 and K = 5, there are 11 possibilities for Professor Ant\\u00f4nio Neri's new password:\\n\\n\\t\\t\\t\\t\\t1, 4, 2, 1, 4\\n\\n\\t\\t\\t\\t\\t2, 1, 4, 2, 1\\n\\n\\t\\t\\t\\t\\t3, 10, 5, 16, 8\\n\\n\\t\\t\\t\\t\\t4, 2, 1, 4, 2\\n\\n\\t\\t\\t\\t\\t5, 16, 8, 4, 2\\n\\n\\t\\t\\t\\t\\t6, 3, 10, 5, 16\\n\\n\\t\\t\\t\\t\\t8, 4, 2, 1, 4\\n\\n\\t\\t\\t\\t\\t10, 5, 16, 8, 4\\n\\n\\t\\t\\t\\t\\t12, 6, 3, 10, 5\\n\\n\\t\\t\\t\\t\\t16, 8, 4, 2, 1\\n\\n\\t\\t\\t\\t\\t20, 10, 5, 16, 8\\n\\t\\t\\t\\t\",\n    \"id\": 1906,\n    \"input\": \"\\t\\t\\t\\t\\tThe single input line consists of two positive integers N and K (N, K \\u2264 107).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Collatz Passwords\",\n    \"output\": \"\\t\\t\\t\\t\\tThe single output line shall consist of only one integer, representing the number of possibilities for Professor Ant\\u00f4nio Neri's new password, considering that the keypad contains a key for each integer from 1 to N and that the new password is a sequence of K numbers that appear consecutively in a Collatz sequence.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tProfessor Fernando Bevilacqua is very worried about his newest game's scenarios. The scenarios contours have already been drawn by an artist, and now Professor Bevilacqua has just to colour them. At the present moment, each scenario is an image in which each pixel is black or white. Thus, when Professor Bevilacqua, in his image colouring software, clicks on a white pixel to be coloured with a colour \\u03b1, all the white region in which the chosen pixel is receives the colour \\u03b1. We say that a white pixel A is in the same white region of a white pixel B if there is a path between A and B passing only by white pixels and considering the adjacencies only in horizontal and vertical directions. For instance, 6 clicks are needed to colour the figure to the left.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1907,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of two positive integers N and M (N, M \\u2264 1,024), which represent the image resolution. Each one of the N lines following contains M characters, which can be . (dot) or o (small letter \\u2018o\\u2019), representing respectively a white pixel of a black pixel.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Colouring Game Scenarios\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing a single integer that represents the number of clicks needed to colour the whole figure described in the input.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tIt is the year of 2,265, and UFFS (University of the Final Frontier of Sapience) has already got 112.345 campuses around the galaxy. In order to integrate all the campuses, UFFS has created many warp drive public transport lines. The itinerary of each line L is a sequence of |L| \\u2265 2 campuses C1, C2, \\u2026, C|L|, and each line has only one ship, which passes by all campuses of the line, following the itinerary order, stopping in each of them and making a U-turn whenever it reaches an endpoint of the itinerary, reversing the itinerary order. The transport pass costs \\u02431 (1 bitcoin, the monetary unit which has become the official currency of the galaxy thanks to the works of Professor Em\\u00edlio Wuerges at the beginning of 21st century), and has to be paid by the passenger while getting onto the ship, no matter the time the passenger is going to stay in it. This way, the minimum cost to go from campus A to campus B considering the hypothetical lines in the figure below is \\u02432.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1908,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of two integers N and K (2 \\u2264 N \\u2264 104, 1 \\u2264 K \\u2264 103), which represent respectively the number of campuses and the number of public transport lines created by UFFS. Each one of the K input lines following describes a transport line L and consists of the integer |L| (2 \\u2264 |L| \\u2264 102) followed by the |L| identifiers Ci (1 \\u2264 Ci \\u2264 N, 1 \\u2264 i \\u2264 |L|) of the campuses by which the ship passes, wherein C1 and C|L| are the endpoints of L. For every campus A and every campus B it is guaranteed that it is possible to go from A to B using UFFS's public transport system.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Multicampus UFFS\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput the minimum cost to go from campus 1 to campus N.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tAfter asking for a square ball to his mother, Kiko did not receive just one, but several birthday balls! Kikos loves to drop multiple balls at once on the ground and keep watching them bounce. As the balls have size, weight and are made of different materials, the bounce time from one to another is variable. In this problem we will assume that every ball bounces infinitely according to its bouncing time.\\n\\n\\t\\t\\t\\t\\tKiko released at the same time N balls and realized that depending on the bounce time of the balls, in a few moments, all the balls bounce at the same time, and he loved it!\\n\\n\\t\\t\\t\\t\\tGiven the bounce time in seconds of the N balls that Kiko choose and a time T, which is the second that Kiko wants all the balls bounce together, your task is to find the lowest bounce time for another ball so all the N + 1 balls, when they are released together, all of them will bounce at the same time for the first time exactly in the second T.\\n\\n\\t\\t\\t\\t\\tThe bouncing time that you will choose can\\u2019t be identical to any previously chosen by Kiko and should be greater than 1.\\n\\n\\t\\t\\t\\t\\tBounce time is the difference of the time that the ball touch the ground twice in succession. If a ball has bounce time = 4, we will consider that it will bounce at seconds 4, 8, 12, 16...\\n\\t\\t\\t\\t\",\n    \"id\": 1909,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. The first line of each case begins with two integers N (1 \\u2264 N \\u2264 100) and T (1 \\u2264 T \\u2264 105) representing the amount of balls that Kiko has and the second that Kiko want to see the N+1 bouncing at the same time for the first time. On the next line, N integers in the range [1, T] follows, representing the bounce time of each ball.\\n\\n\\t\\t\\t\\t\\tThe input ends with N = T = 0, which should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Help Kiko\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, output the bounce time of the ball that you choose, or \\\"impossivel\\\" if there doesn\\u2019t exist a ball that will satisfy Kiko\\u2019s whishes.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tClotilde loves watching television, but her television control is not conventional. It has only six buttons, the on/off button and five buttons to change channels.\\n\\n\\t\\t\\t\\t\\tThe channel change buttons work as follows: +1 (advances one channel), -1 (subtract one channel), x2 (double the current channel), x3 (triple the current channel) and /2 (goes to the half of the current channel, this button only works if the current channel is even).\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\t Here\\u2019s the Clotilde famous controll.\\n\\n\\t\\t\\t\\t\\tThe Clotilde neighbors often visit her house on weekends, watch television and do not return to channel it was before, causing Clotilde waste lots of time trying to find the channel of her interest again.\\n\\n\\t\\t\\t\\t\\tYour task is, given the number of the current channel and the number of the channel that Clotilde wants to watch, you must calculate the least amount of button clicks needed to get out of one and get the other. Remeber that as Clotilde is a serious woman, she does not like to go through some specific channels even if you have to press more buttons to get to the destination channel. Another constraint is, there is no channel that is lower or equal to 0 or greater than 105. Ex: If you are in the channel number 55000, you can\\u2019t press the button x2 or x3.\\n\\t\\t\\t\\t\",\n    \"id\": 1910,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. Each one begins with three integers, O, D and K (1 \\u2264 O, D \\u2264 105, 0 \\u2264 K \\u2264 100), representing, respectively, the source channel, destination, and the amount of channels that Clotilde does not want to pass. The second line contains the K channels banned by Clotilde. It is guaranteed that the source and destination channel will never be banned.\\n\\n\\t\\t\\t\\t\\tThe input ends with O = D = K = 0, which should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Help Clotilde\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, output a single line, the least amount of button clicks required to get from the source channel to the destination or -1 if it is impossible to reach the destination channel due to the restrictions of Clotilde.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tMinutes before the end of the class, teacher Girafales passes an attendance list. One day he decided to check the signatures and noted that some students signed different in some classes and suspected that someone could be signing for them.\\n\\n\\t\\t\\t\\t\\tAs the teacher has many students and not enough time (coffee with Dona Florinda is priority), he asked you to help him validate the students signatures. A signature is considered false if there is more than one difference between the original and the one that is being checked. Consider difference an uppercase letter as a lowercase or vice versa.\\n\\t\\t\\t\\t\",\n    \"id\": 1911,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. The first line of each case starts with an integer N (1 \\u2264 N \\u2264 50) representing the amount of students in the class. The next N lines will be as follows:\\n\\n\\t\\t\\t\\t\\t\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0Student Name \\u00a0\\u00a0Student Original Signature\\n\\n\\t\\t\\t\\t\\tThen there will be an integer M (0 \\u2264 M \\u2264 N), representing the number of students attending the class. M lines follow in the following format:\\n\\n\\t\\t\\t\\t\\t\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0Student Name \\u00a0\\u00a0Signature of the day\\n\\n\\t\\t\\t\\t\\tAll students have only the first name on the list, all names are different and contain no more than 20 letters (a-z A-Z).\\n\\n\\t\\t\\t\\t\\tThe input ends with N = 0, which should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Help Girafales\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, output a single line, the amount of false signatures found.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tMadruga finally got a job, that\\u2019s his big chance to pay the 14 months of rent that are late. He is a paper cutter and he is getting lots of money with this job.\\n\\n\\t\\t\\t\\t\\tMadruga will receive N rectangular strips of paper of 1 centimeter(cm) of width and C cm of length. The strips should be placed one beside the other so that their bases are aligned(check the image). The task is, with only one straight cut, parallel to the base, Madruga needs to make the sum of the areas of the cut strips equal to A cm\\u00b2.\\n\\n\\t\\t\\t\\t\\tSee the illustration below with N = 5 and the strips 5, 3, 6, 2, and 3 cm long, respectively, for an A = 3 cm\\u00b2.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tWith a cut made at a height of 4 cm from the base, the resulting area, painted red, is exactly equal to A cm\\u00b2. Your task is to find that heigth H and help Madruga.\\n\\t\\t\\t\\t\",\n    \"id\": 1912,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. The first line in each case begins with two integers N (1 \\u2264 N \\u2264 105) and A (1 \\u2264 A \\u2264 109) representing respectively the number of strips and the expected resulting area. The next line contains N integers, representing the length Ci (1 <= Ci <= 104) of each strip.\\n\\n\\t\\t\\t\\t\\tThe input ends with A = C = 0, which should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Help Seu Madruga\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, output a single line, the height H of the cut that Madruga must do so that the sum of the area of the cut strips is equal to A cm\\u00b2. Print the answer with 4 decimal places.\\n\\n\\t\\t\\t\\t\\tOutput \\\":D\\\" if no cutting is required, or \\\"-.-\\\" if it\\u2019s impossible.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jadson Jos\\u00e9 Monteiro Oliveira, Faculdade de Balsas  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tNhonho, son of Mr. Barriga is participating of a new game created by the townhouse\\u2019s children, the game is well know by \\u201ccylinders Tower\\u201d. The game is to build the tallest tower made up of cylinders, respecting all the rules, of course! Just below it is described the operation of the game.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tWill be arranged on the table, an amount of N cylinders.\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tEach cylinder has one color: Red, orange, green or blue.\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tEach cylinder has one heigth h and a base with radius of size r.\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tTo the build the tower, the cylinders should to be stacked, and the top cylinder should ever have the base smaller that the base of the cylinder below it. Except the first cylinder, it can have the base of any size, since there is no other cylinder below it.\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tThere are also some restrictions very interesting on colors of the cylinders. They are described below.\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tA red cylinder cannot to be put on an orange cylinder\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tAn orange cylinder cannot to be put on a blue cylinder\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tA blue cylinder cannot to be put on a green cylinder\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tA green cylinder cannot to be put on a red cylinder\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tTired of seeing his son complain of losing forever and consequently to hear the phrase \\\"Look at him huh! Look at him huh! Look at him ... \\\" multiple times, Mr. Barriga want to give a small tip for Nhonho, telling the height greater than can be built given the list with the characteristics of cylinders available for construction of the tower. However, although being good at math and collect the rent properly, Mr. Barriga was unable to calculate the maximum height that the tower may have due to the large amount of available cylinders. So he hired you to write a program able to inform this value.\\n\\n\\t\\t\\t\\t\\tTo help you better understand the problem, Mr. Barriga showed him through a drawing the height of the highest possible tower to be built with five parts, following all the rules of the game. Below you can see the drawing of Mr. Barriga.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\",\n    \"id\": 1913,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 10\\u00b3), representing the number of cylinders arranged on the table, following N rows, each row having a height h (1 \\u2264 h \\u2264 1000) of the cylinder in centimeters, the radius r (1 \\u2264 r \\u2264 1000) of the cylinder base and a word p, representing the color of the cylinder. The word can be: VERMELHO (red in portuguese), LARANJA (orange in portuguese), VERDE (green in portuguese), or AZUL (blue in portuguese). The end of input is indicated as N == 0, which should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Help Mr. Barriga\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, your program should print a single line with the value the height of the largest cylinders tower that can be built, followed by the word \\\"centimetro(s)\\u201d (centimeters in portuguese).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jadson Jos\\u00e9 Monteiro Oliveira, Faculdade de Balsas  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tHopscotch is probably the game where townhouse's children more have fun, however the game has caused a good time for discussion and crying in children who practice it. The cause of the disorder is to decide who will be the next to jump, but recently Quico (The Genius!) had a great idea for to solve the problem. Basically the game can only to be played every two players in one turn and to choose the next player Quico indicated to use the traditional method even or odd, where both players report one number and if the sum these numbers is even, the player that choose PAR win or vice verse. However the use that method has left the Quico crazy, crazy, crazy... And for that reason he asked for your help, asked you a program that given the name of the players, their respective choices (PAR or IMPAR) and the numbers, tell who was the winner.\\n\\t\\t\\t\\t\",\n    \"id\": 1914,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains a single integer QT (1 \\u2264 QT \\u2264 100), indicating the number of following test cases. Each test case contains two lines. In first line will be told the name of the player 1 followed by his choice, \\u201cPAR\\u201d or \\u201cIMPAR\\u201d, and after the name of the player 2 followed by his choice, \\u201cPAR\\u201d or \\u201cIMPAR\\u201d. In second line of test case, contains two integer number N (1 \\u2264 N \\u2264 10\\u2079) and M (1 \\u2264 M \\u2264 10\\u2079), representing respectively the numbers chosen by players 1 and player 2. It it garanteed that player 1 choice's (PAR or IMPAR) will be differ from choice of player 2 (PAR or IMPAR) and that the name of the players consist only of letters and will not exceed 100 characters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Whose Turn Is It?\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print a single line containing the name of winner player.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tOne of the things that the guys do the most is play with their toys, but most of the time the game ends in confusion, because Chaves always ends with no toy. Trying to avoid the confusion and have fun playing all day, Chaves had an idea, each guy just catch one toy and spend all day with it. The process for choosing the toy is a little different and will be explained.\\n\\n\\t\\t\\t\\t\\tGiven the names of N village guys and M different toys, each name/toy will be encrypted in a sequence of numbers, according to the following table.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tValues from the table above shall be valid only for the first appearance of each letter, if a letter appears for the second time, its value is the original value + 26. If the same letter appears for the third time, its value is the original value + 26 + 26 and so on.\\n\\n\\t\\t\\t\\t\\tEx: The KIKO name will be encrypted in the following sequence: 11 9 37 15.\\n\\n\\t\\t\\t\\t\\tNow comes the necessary part on the choice of toys, a person X will only want to stay with a toy Y, if the sum of the minimum amount of required numbers being taken from their sequences so that they become equal is a multiple of five.\\n\\n\\t\\t\\t\\t\\tCheck the example:\\n\\n\\t\\t\\t\\t\\tCHAVES = 3 8 1 22 5 19 - Removing the numbers 3, 8, 22 and 19, the remaining sequence is 1 5.\\n\\n\\t\\t\\t\\t\\tPATINETE = 16 1 20 9 14 5 46 31 \\u2013 Removing the numbers 16, 20, 9, 14, 46 and 31, the same 1 5 sequence will remain.\\n\\n\\t\\t\\t\\t\\tIt was necessary to remove 4 + 6 = 10 numbers, it means that CHAVES wants to play with the toy PATINETE because 10 is a multiple of 5.\\n\\n\\t\\t\\t\\t\\tGiven the name of N friends and M toys, you should maximize the percentage of friends who will stay with a toy.\\n\\t\\t\\t\\t\",\n    \"id\": 1915,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. The first line of each case begins with two integers N and M (1 \\u2264 N, M \\u2264 100) representing the amount of friends of the village and the amount of toys. N lines follow, each containing the name of a friend, the name size will never exceed 100 characters [A-Z]. After that, M lines follow each containing the name of a toy, the size of a toy name will never exceed 100 characters [A-Z]. The input ends with N = M = 0, which should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Help Chaves\",\n    \"output\": \"\\t\\t\\t\\t\\tFor every test case, output, with two decimal places, the maximum percentage of guys that will stay with one toy. Check the output format.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jadson Jos\\u00e9 Monteiro Oliveira, Faculdade de Balsas  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe company in which the postman Jaiminho works has a bank hours policy very interesting. Every time an employee starts his activities he must register his arrival at \\\"point machine\\\" getting a little proof, just as every time the employee terminates its activities it must also record the end. Most employees never had the curiosity to know how the \\\"point machine\\\" processes the number of hours worked, but Jaiminho well as being an excellent employee is rather curious.\\n\\n\\t\\t\\t\\t\\tTo register your digital (the first day of work) Jaiminho was informed by a lady who works in the Human Resources department that there is a 5-minute tolerance in both input and output. The Jaiminho workday consists of two periods, from 08:00 hrs to 12:00 hrs and 14:00 hrs to 18:00 hrs (accounting for 8 hours worked per day), so if he gets to 07: 55 hrs and leave at 12:03 hrs, the \\\"point machine\\\" notice that he respected tolerance and not register any minute more or less in the bank of hours of Jaiminho, but in the second part of his shift, he register their input to 13:54 hrs and 18:02 hrs to his output, the machine will realize that he abused tolerance and then add six minutes extra in your bank hours.\\n\\n\\t\\t\\t\\t\\tAs Jaiminho is a dedicated employee and always tries to avoid fatigue, he set up a spreadsheet with the record (entry and exit times) every day worked, but unfortunately he is not a programmer and needs your help to simulate the bank hours of company that he works.\\n\\t\\t\\t\\t\",\n    \"id\": 1916,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line contains a single integer QT ( 1 \\u2264 QT \\u2264 100) indicating the number of test cases following. Each test case starts with a line containing a single integer N (1 \\u2264 N \\u2264 10\\u00b3) representing the number of records in Jaiminho sheet, follow N lines, each line containing the description of the entry and exit times in the following format \\\" A1:B1 A2:B2 | C1:D1 C2:D2 \\\", where A1 and B1 respectively represent the hours and minutes of input in the first period of work, A2 and B2 respectively represent the hours and minutes output of the first Labor Day period, C1 and D1 represent respectively the hours and minutes of input the second period of the work and C2 and D2 respectively represent the hour and minute output of the second period of work in the day. Jaiminho ensures that never slept at work which (A1:A2 \\u2264 B1:B2 && C1:D1 \\u2264 C2:D2) and the hours and minutes in your hour bank never exceed 2 digits. Remember, one day has 24 hours and 1 hour has 60 minutes.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Jaiminho\\u2019s Bank Hours\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, your program should print a line with the number of hours and minutes that are currently registered in the simulated hour bank for Jaiminho in the following format: \\\"S HH:MM\\\", where S may be the sign \\\"-\\\" representing negative hours in the bank, or \\\"+\\\" sign representing plus hours in the bank, HH is the number of hours and MM is the number of minutes of the hour bank simulado. In the case of the HH:MM equals midnight, you can consider how plus hours.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jadson Jos\\u00e9 Monteiro Oliveira, Faculdade de Balsas  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tTripa Seca is an accomplished computer programmer, but unfortunately he is part of an entity formed by the most ruthless villains of the universe. After mastering countless planets, the next target of this entity is the planet Earth and the focus is to capture all the technology of the Terrans. The organization's headquarters until a few days ago had never been sighted by any wight of the planet Earth, but the mighty Colorado Chapolin with all his cunning, accomplished this feat and managed to enter the meeting room of super villains. And guess what? The villains was having a large meeting!\\n\\n\\t\\t\\t\\t\\tChapolin heard all the talk of villains and discovered that the plan to conquer the planet Earth, is to create a super powerful virus able to master any device that uses some kind of terrestrial technology. Just then Chapolin Colorado took his audio recorder and began recording Tripa Seca explaining the operation of the virus. Below is described a part of the recording:\\n\\n\\t\\t\\t\\t\\t\\\"[..] First my virus is able to reproduce, but unfortunately I messed up somewhere in the algorithm and the virus has a limited lifetime (Admit, nobody's perfect!), So at the end of the second minute of life the virus dies, but the beginning of each minute 1 virus is born of another older viruses alive, and that is able to inherit the same characteristics as the parent virus, such as the ability to reproduce and also the limited lifetime. Even living with the problem of limited lifetime, I'm pretty sure that the devastation is huge and we dominate all the technology this futile planet... My idea is this: put a virus X amount of earthlings on the planet and I will let them to meet the rest of the service! For example, if I will put the beginning only 1 virus, according to my calculations already in the end of the third minute have 5 virus! [..] \\\"\\n\\n\\t\\t\\t\\t\\tAlthough Chapolin be a great hero, he's not very good to understand certain explanations and asked the teacher Girafales explained to him the ability to destroy those viruses, so it has a sense of how the Earth is in danger. After several unsuccessful attempts, the teacher Girafales decided to design the process and show Chapolin. See the teacher's drawing Girafales below:\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tHowever Chapolin found the design a great insult to his mental ability and asked to inform you that the amount of virus that will at any given minute, given the amount of virus initially inserted by Tripa Seca. An important detail, Chapolin hate broken numbers or debris, he likes to see the original number without any court!\\n\\t\\t\\t\\t\",\n    \"id\": 1917,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. Each case begins with two integers, X and Mf (1 \\u2264 X\\u2264 105, 1 \\u2264 Mf \\u2264 105) representing respectively the initial amount of inserted virus on planet earth and the minute Chapolin want to know the amount of virus that will be living on the planet.\\n\\n\\t\\t\\t\\t\\tThe input ends with X = Mf = 0, which should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Help Chapolin Colorado!\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print a single line with the amount of virus that will be alive at the end of the minutes requested by Chapolin Colorado.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jadson Jos\\u00e9 Monteiro Oliveira, Faculdade de Balsas  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAfter having done a great trip to Acapulco some time ago, the villagers held a large meeting and decided to unite to travel again to this beautiful city. Although Mr. Madruga have had great luck and won the last trip with all expenses paid, the overall spending among all the villagers was gigantic and this time they are trying to save as much as possible, especially since no one from the village won paid trip again.\\n\\n\\t\\t\\t\\t\\tTurns out they were informed by a stranger, the best hotel in town (the same as they stayed last trip) will be with a promotion for a limited time, then how they want to save, they are looking to arrive in time to get the promotion.\\n\\n\\t\\t\\t\\t\\tMr. Barriga responsible for managing the money spent is a man who understands numbers and now wants to use the power of technology to get some useful information before making the trip. As he already knows his skills as a mathematician and programmer, he hired you to develop a program that given all the information about the available cities and routes, the date and time they wish to leave the village and the date and time limit promotion hotel in Acapulco, indicate whether it is possible to reach Acapulco before the promotion ends, and which the least possible date and time, or if you cannot arrive in time to get the promotion.\\n\\t\\t\\t\\t\",\n    \"id\": 1918,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line contains a single integer QT (1 \\u2264 QT \\u2264 100), indicating the number of test cases following. The first line of each test case is composed of two integers, N (2 \\u2264 N \\u2264 105) and M (1 \\u2264 M \\u2264 3x105) representing respectively the number of cities and the number of routes connecting those cities. The second line of each test case consists of the date and time that the villagers plan to go out and the third line of each case is made by the date and the time limit that the Acapulco hotel will be in promotion. The dates and times are described in the following notation: \\\"DD/MM/YYYY - hh:mm:ss\\\", where DD (1 \\u2264 DD \\u2264 31) is the day of the month, MM (1 \\u2264 MM \\u2264 12) represents the month of the year, AAAA (1970 \\u2264 AAAA \\u2264 2100) is the year, hh (0 \\u2264 hh \\u2264 23) represents the hours, mm (0 \\u2264 mm \\u2264 59) represents minute, ss (0 \\u2264 ss \\u2264 59) represents the seconds. The following M lines, each line containing two integers a and b and a date, indicating that there is a two-way route between the city a (0 \\u2264 a \\u2264 N-1) and b (0 \\u2264 b \\u2264 N-1) and the date in the format \\\"DD -hh-mm-ss\\\", representing the time required to go from a to b and vice-verse.\\n\\n\\t\\t\\t\\t\\tConsider that the village is the city of number 0 and city of Acapulco is the city of N-1 number.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Trip to Acapulco\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, if it is possible to reach Acapulco before the promotion finalize, print two lines. In the first line the word \\\"POSSIBLE\\\" (without quotes) and the second line the smallest possible date in the following format: \\\"DD/MM/YYYY - hh:mm:ss\\\". If you cannot reach the deadline, print a single line containing the word \\\"IMPOSSIBLE\\\" (without quotes).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAfter Teacher Girafales find out that Nhonho was missing classes and asking Chaves to sign his name on the attendance list in exchange for a bread with ham, Nhonho began to receive every week a special challenge from Girafales, and if Nhonho did not solve them, Girafales would tell Nhonho fathers about the attendance list fact.\\n\\n\\t\\t\\t\\t\\tThe challenge of the week is called \\\"Permuted Sum\\\" and he needs to solve the following puzzle: abc + acb + bac + bca + cab + cba = K, given a value of K, with no digit repeats occur (a \\u2260 b \\u2260 c).\\n\\n\\t\\t\\t\\t\\tIf we have K = 1332, one of the possible solutions is to use a = 1, b = 2 and c = 3, if we sum their permutations: 123 + 132 + 213 + 231 + 312 + 321 = 1332.\\n\\n\\t\\t\\t\\t\\tAnother solution is: a = 0, b = 1, c = 5: 015 + 051 + 105 + 150 + 501 + 510 = 1332.\\n\\n\\t\\t\\t\\t\\tThe above explanations used only 3 digits to easily understanding, the real problem, which Teacher Girafales asked Nhonho and you have to help him to solve, consists of 5 digits, and you have to consider all its permutations (abcde + abced + ..... + edcba), with no digit repetition (a \\u2260 b \\u2260 c \\u2260 d \\u2260 e).\\n\\n\\t\\t\\t\\t\\tGiven the value of K, output, lexicographically, all possible sets of numbers that satisfy the Girafales puzzle.\\n\\t\\t\\t\\t\",\n    \"id\": 1919,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input has an integer T, indicating the number of test cases. Each of the following lines T contains an integer K (1 \\u2264 K \\u2264 107), as described above.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Help Nhonho\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, output lexicographically all the sets of values {a, b, c, d, e} that solve the Girafales puzzle or \\\"impossivel\\\" if there is no solution.\\n\\n\\t\\t\\t\\t\\tLeave a blank line after each test case. Check the output formatting.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tTired of throwing coins into the fountain of desires and have no wish granted, Chiquinha and Popis decided to use the source as a target in coin throwing game. They will take a distance from the source and throw alternately N coins each trying to hit it. Each coin may fall inside(dentro) the fountain, on the edge(borda) or outside.\\n\\n\\t\\t\\t\\t\\tGiven the coordinate (cx, cy) of the center of the fountain, the radius of which is considered inside (r1), and the radius of the edge (r2), your task is the check the throw of both girls and say who hit more coins into the fountain. In case of a tie, the winner is the one that hit more in the edge. If the tie persists, we consider that the game ended in a draw.\\n\\n\\t\\t\\t\\t\\tNote: If a coin fall exactly into any circle extremes, it shall be considered edge(red dots in the image below).\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1920,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. The first line in each case initiates an integer N (1 \\u2264 N \\u2264 1000) representing the number of coins that each girl launched. The second line contains four integers, CX, CY (-1000 \\u2264 CX, CY\\u2264 1000), R1 and R2\\n\\n\\t\\t\\t\\t\\t(1 \\u2264 R1 < R2 \\u2264 5000), representing respectively the center of the fountain and the radius as shown in the figure above.\\n\\n\\t\\t\\t\\t\\tAfter that, 2*N lines follow, each one having two integers X and Y representing the x and y coordinate where a coin dropped. Remember that they play alternately and Chiquinha always plays first.\\n\\n\\t\\t\\t\\t\\tThe input ends with C = 0, which should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Fountain of Desires\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, output C > P in case Chiquinha wins the dispute, P > C case Popis win or C = P case the game ends tied.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Ribeiro, IFPB - Campina Grande  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tGuilherme loves kites, kites of different colors, forms and sizes. He realized that in order to kites become stable, and thus fly higher, they must have a taut string connecting all pairs of non-neighboors tips.\\n\\n\\t\\t\\t\\t\\tDespite being a very creative and clever child, Guilherme doesn\\u2019t know how to determine the number of strings necessary to make a kite of n sides stable. Could you help him?\\n\\t\\t\\t\\t\",\n    \"id\": 1921,\n    \"input\": \"\\t\\t\\t\\t\\tThe single line of the input contains an integer 3 \\u2264 n \\u2264 105, the number of sides of the kite.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Guilherme and His Kites\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single number, the number of strings that Guilherme needs to make a kite of n sides stable.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Ribeiro, IFPB - Campina Grande  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tDuring the patron saint party of Lagoa de Ro\\u00e7a, there are different games, toys and amusement parks settle in the downtown of this small city of Para\\u00edba. One of them, it\\u2019s the not so popular Hammer Game. The game consists of a bumpy board and a hammer which fully covers the board. Besides, there are small creatures (puppets) that occasionally come out of the board holes, are visible for a second and then return to hide in the hole. The aim of the Hammer Game is to hit the largest number of creatures with at most m hammerings.\\n\\n\\t\\t\\t\\t\\tAfter staying a while watching the game, Diego realized that each of the creatures had an apparition pattern, in other words, if a certain creature i first appear at the moment di, it will appear again at the moment 2di, at the moment 3di and so on until the moment kdi arrives. After that the creature doesn\\u2019t appear anymore. Diego noted the moment of the first and the last apparition of each creature, now he needs your help. Write a program that with these informations and the number m of available hammerings, report the maximum amount of creatures that can be hammered.\\n\\n\\t\\t\\t\\t\\tObs.: When a creature is hammered, it no longer appears during the game.\\n\\t\\t\\t\\t\",\n    \"id\": 1922,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input will contain two integers, 1 \\u2264 n \\u2264 103 e 1 \\u2264 m \\u2264 10, the number of creatures and the number of available hammerings. Each of the next n lines will contain two integers 2 \\u2264 di \\u2264 500 e 2 \\u2264 kdi \\u2264 103, the moment of the first and last appariton of the ith-creature, respectively. It is guaranteed that di  \\u2264 kdi.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Diego and Hammer Game\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the maximum amount of creatures that can be hammered with at most m hammerings.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Ribeiro, IFPB - Campina Grande  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tAfter having a barbecue to celebrate the results of OPI (Para\\u00edba\\u2019s Informatics Olympiad) with his friends, Rerisson wants to have another barbecue, this time a greater one. The goal of this barbecue is to meet new people. He will invite all the persons who have a degree of relationship to him (called g) of at most G. For example, consider \\u2018>\\u2019 as a direct relationship simbol.\\n\\n\\t\\t\\t\\t\\tRerisson > Lucas\\n\\n\\t\\t\\t\\t\\tRerisson > Jonathan\\n\\n\\t\\t\\t\\t\\tLucas > Jonathan\\n\\n\\t\\t\\t\\t\\tJonathan > Pedro\\n\\n\\t\\t\\t\\t\\tPedro > Juan\\n\\n\\t\\t\\t\\t\\tLucas > Juan\\n\\n\\t\\t\\t\\t\\tFor this example, considering G = 1, just Lucas and Jonathan will be invite to the barbecue.\\n\\n\\t\\t\\t\\t\\tWith the help of a social network, Rerisson knows all direct relashionships of everybody, but he\\u2019s busy preparing the barbecue. Could you help Rerisson decide which people will be invited to the great party?\\n\\t\\t\\t\\t\",\n    \"id\": 1923,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input will contain two integers, 3 \\u2264 n \\u2264 103 e 1 \\u2264 G \\u2264 500, the quantity of relations to be considered and the maximum relashionship degree, respectively. Each of the next lines will contain two strings S and T, 1 \\u2264 |S|, |T| \\u2264 20 composed by latin american letters only, describing a direct relashionship (The relashionship is mutual).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Rerisson and The Barbecue\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the number of peoples that will be invited to the barbecue, following by their names in ascending lexicografical order.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Ribeiro, IFPB - Campina Grande  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tThere\\u2019s no one in the world more indecisive than Vit\\u00f3ria. Despite the fact that she knows she\\u2019s a great programmer, like one of the that have a lot of projects in IT field published and many others being written, she\\u2019s not sure if she\\u2019s going to be a professional programmer. There are nights that she wants to study Computer Science (Ci\\u00eancia da Computa\\u00e7\\u00e3o, in portuguese), there are days she wants to study some Engineering, some days she even talks about taking some Humanities course, what a sin! But you can help her do the right choice. Your task is simple, It\\u2019ll be given a list with the bachelor courses that Vit\\u00f3ria is in doubt, the output should be the course she must choose.\\n\\t\\t\\t\\t\",\n    \"id\": 1924,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input is an integer 1 \\u2264 n \\u2264 2000, representing the number of courses that must be considered. Each of the next n lines, there is a course S, 1 \\u2264 |S| \\u2264 100, the name of one of the courses Vit\\u00f3ria is in the doubt.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Vit\\u00f3ria and Her Indecision\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the name of the course Vit\\u00f3ria must take in portuguese without accentuation.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Ribeiro, IFPB - Campina Grande  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tOrdan is at the great Campina Grande Shopping Mall, he\\u2019s going participate of an anime and game convention. Today is the first day of the convention and the opening is about to start, it\\u2019ll be at the auditorium of the mall. Some people already took their places, there a lot of boys, but also many girls. To be around girls makes Ordan very happy.\\n\\n\\t\\t\\t\\t\\tOrdan wants to sit at a chair of the room that's adjacent to the maximum number of girls together, so then he can flirt with them, of course. The room can be seem as a two dimension matrix, and the chairs are identified by two integers, the number of the column and the number of the row.\\n\\n\\t\\t\\t\\t\\tIf there\\u2019s an \\u2018n\\u2019 in the position it means that is a girl sitting in that chair, if there\\u2019s a \\u2018b\\u2019 it means there\\u2019s a boy sitting in the chair, in the case of an \\u2018*\\u2019 it means the chair of that position is empty.\\n\\n\\t\\t\\t\\t\\t\\u00a0 \\u00a0\\u00a01 2 3 4\\n\\n\\t\\t\\t\\t\\t1 \\u00a0n n n n\\n\\n\\t\\t\\t\\t\\t2 \\u00a0b n * n\\n\\n\\t\\t\\t\\t\\t3 \\u00a0n b * b\\n\\n\\t\\t\\t\\t\\t4 \\u00a0b b n b\\n\\n\\t\\t\\t\\t\\tIn this example, there are two empty chairs, if Ordan sit in the chair (2,3) he will be close to 6 girls that are together, in the other hand if he sits in the chair (3, 3) he will be close to only a girl, so he prefers to sit in the (2,3).\\n\\n\\t\\t\\t\\t\\tYour task is to determine which empty chair Ordan must sit to be around the maximum number of girls. In the case of a draw you must pick the one in the position more at north, if it is still a draw you must pick the one more at left.\\n\\n\\t\\t\\t\\t\\tIt\\u2019s guaranteed that will always have an empty chair.\\n\\t\\t\\t\\t\",\n    \"id\": 1925,\n    \"input\": \"\\t\\t\\t\\t\\tIn the first line there\\u2019s two integers 1 \\u2264 l, c \\u2264 1000, representing respectively the number of rows and columns of the auditorium. In the next l rows there will be c characters. The characteres can be ('n','b,'*').\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Ordan and The Girls\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the position (row and column) of the chair Ordan must sit in.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Ribeiro, IFPB - Campina Grande  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tMarianne is programming her own game called \\u201cHero of the Guitar\\u201d . It\\u2019s a extremely tiresome work, that needs a lot of time and effort, but nothing that some free time doesn't solves. Someday she received an e-mail, in the e-mail Mari has encountered a very curious problem proposed by the cousins Ren\\u00e8 and Leonhard and the twins Isaac and Carl.\\n\\n\\t\\t\\t\\t\\tThe problem is described as the following:\\n\\n\\t\\t\\t\\t\\t\\u201cA natural number is prime, if it\\u2019s divided by exactly two numbers: number one and it self (one isn't prime). A number is twin prime, if and only if, it\\u2019s prime and there is another prime number b, such that |a - b| = 2. An example: number 3 is twin prime, because it\\u2019s prime and there\\u2019s another prime (5) with |3 - 5| = 2. But number 23, despite being a prime number, isn't twin prime. Could you tell me how much twin primes there is between two numbers x and y?\\u201d\\n\\n\\t\\t\\t\\t\\tMarianne loves to solve this kind of problem, but she is busy programming her game. Could you help her?\\n\\t\\t\\t\\t\",\n    \"id\": 1926,\n    \"input\": \"\\t\\t\\t\\t\\tIn the first line there is an integer 1 \\u2264 Q \\u2264 105, the number of querys, each of the next Q lines will have two numbers, 1 \\u2264 X, Y \\u2264 106.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Marianne and The Twin Cousins\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each query Q, print the quantity of twin primes between X and Y, inclusive.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Ribeiro, IFPB - Campina Grande  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tTapioca dreamed that it was raining chocolate in the city that he lives, Lagoa de Ro\\u00e7a (There already rained hail, but this is a fact for another problem). Chocolate of various types, it\\u2019s just sad that he can\\u2019t eat all the chocolate, because the chocholate that falls on the ground is completely lost. But he can try to get the maximum amount of chocholate before it falls on the ground. Fortunately, in this dream Tapioca can predict the future, he knows the moment and the position that each chocolate will fall. However, he can\\u2019t do two things in the same time and so your help is needed. Write a program that with the predictions of Tapioca, report the maximum amount of chocolate candies that he can eat.\\n\\n\\t\\t\\t\\t\\tConsider Lagoa de Ro\\u00e7a as a plane and that Tapioca is in the moment 0 in the position (6, 6). Besides, he just can move for orthogonal positions, in other words, North, South, East and West. To move he spends one second and he can get a candy, if and only if, he is in the same position and at the moment when it will fall.\\n\\t\\t\\t\\t\",\n    \"id\": 1927,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input will contain an integer 1 \\u2264 n \\u2264 2000, that is the amount of chocolate candies that will fall from the sky. Each of the next n lines will contain three integers, 0 \\u2264 xi, yi \\u2264 20 e 0 \\u2264 ti \\u2264 1000, the coordinates and the moment of the fall of the i-chocolate candy.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Tapioca and The Chocolate Rain\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single integer, the maximum number of chocolate candies that chocolate Tapioca can eat.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Guilherme Albuquerque Pinto, Universidade Federal Juiz de Fora  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tPeter and Paul decided to complicate somewhat the traditional Memory Game, where players must flip two identical cards. They put N Card on the ground, face-down. The face of each card has a picture of a number of 1 to N / 2, and exactly two cards have a picture of each number from 1 to N / 2. As the cards are face-down, they can also be identified by their positions, which are integers from 1 to N. Peter and Paul then drawing down, using chalk, some even lines calling cards so that for any pair of cards (A, B) there is one and only one sequence designed letters and lines takes A to B. The figure below shows an example of game, (a) with all the cards face-down, and (b) with all the cards face-up.\\n\\t\\t\\t\\t\\t   \\n\\t\\t\\t\\t\\tThe game is played with all the cards face-down. With each shot, a player must choose a pair of cards A and B. If the faces of the two letters chosen have the same figure, the player accumulates a number of points equal to the number of drawn lines that exist in the path between the letters A and B. Peter and Paul now are studying which is the best strategy for this game and need your help to solve a specific task: given the existing letters in each position, and the links drawn with chalk, calculate the highest total of points you can accumulate.\\n\\t\\t\\t\\t\",\n    \"id\": 1928,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains the number of letters N (2 \\u2264 N \\u2264 50000, N is even). The second line of input contains N whole Ci indicating which number is noted on the chart at position i (1 \\u2264 Ci \\u2264 N / 2 for 1 \\u2264  i  \\u2264 N ). The cards are given in ascending order of positions: the first letter occupies the position 1, the second position 2, and so on to the last letter, which occupies the position N. Each of the N - 1 following lines contains two numbers A and B, indicating that there is a line drawn between the cards in positions A and B (1 \\u2264 A \\u2264  N  and 1 \\u2264 B \\u2264 N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Memory Game\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a line containing an integer, the largest total amount of points you can accumulate.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Guilherme Albuquerque Pinto, Universidade Federal de Juiz de Fora  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tAna and her friends are making a geometry work to school, they need to create various triangles on a chart, with a few sticks of different lengths. Soon they realized that you can not form triangles with three rods of any lengths: if one of the rods is too large relative to the other two, you can't form a triangle.\\n\\n\\t\\t\\t\\t\\tIn this issue, you have to help Ana and her friends to determine if, given the lengths of four rods, it is or not possible to select three rods, among the four, and form a triangle.\\n\\t\\t\\t\\t\",\n    \"id\": 1929,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry consists of one line containing four integers A, B, C and D (1 \\u2264 A, B, C, D \\u2264 100).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Triangle\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should only produce a line containing only one character, which must be 'S' if it is possible to form the triangle or 'N' if you can not form a triangle.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor Cl\\u00e1udio L. Lucchesi, F\\u00e1bio D. Moreira  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tFinally, the team from the University managed to qualify for the Finals of the SBC Programming Marathon. The three members of the team and their coach are looking forward to represent the university, and besides trainining very much, prepare with every detail your trip to S\\u00e3o Paulo, where will be held the National Final.\\n\\n\\t\\t\\t\\t\\tThey plan to carry with them all their electronic devices: mobile phone, tablet, laptop, wifi hotspot, camera, etc, and know they will need several power outlets to connect all these devices. They were told that the four will be in the same hotel room, but have been advised that in each room there is only one available power outlet.\\n\\n\\t\\t\\t\\t\\tPrevented, the three members of the team and the coach bought each a power strip, thus connect several devices at one outlet of the hotel room; they may also connect one another in strip to further increase the number of available sockets. However, as the rules have many outlets, they asked you to write a program that, given the number of outlets in each rule, determine the maximum number of devices that can be connected to the energy in the same instant.\\n\\t\\t\\t\\t\",\n    \"id\": 1930,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a line with four integers T1, T2, T3, T4, indicating the number of taken from each of the four strips (2 \\u2264 Ti \\u2264 6).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Electrical Outlet\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing a single integer indicating the maximum number of devices that can be connected to the energy in the same instant.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Vin\\u00edcius Fernandes dos Santos, Centro Federal de Educa\\u00e7\\u00e3o Tecnol\\u00f3gica de Minas Gerais.  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tPatricia is an excellent software developer, but, as every brilliant person, she has some strange quirks. One of those is that everything she does has to be in even quantities. Most often that quirk does not\\n\\t\\t\\t\\t\\taffect her, even though it may seem strange to others. Some examples: every day she has to eat an even number of meals; during breakfast, she drinks two cups of coffee, eats two toasts and two slices of cheese; when she goes to the cinema she buys two tickets (fortunately she always has a friend that goes with her); she takes two baths per day (or four, our six...).\\n\\t\\t\\t\\t\\tSome other times, however, that quirk makes the life of Patricia more difficult. For example, no one wants to travel by car with her because if she has to pay toll, the number of tolls she pays has to be an even number.\\n\\t\\t\\t\\t\\tPatricia lives in a country where all roads are two-way and have exactly one toll each. She needs to\\n\\t\\t\\t\\t\\tvisit a client in a different city, and wants to calculate the minimum total value of tolls she has to pay\\n\\t\\t\\t\\t\\tto go from her city to the client\\u2019s city, obeying her strange quirk that she has to pay an even number\\n\\t\\t\\t\\t\\tof tolls.\\n\\t\\t\\t\\t\",\n    \"id\": 1931,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. The first line of a test case contains two integers C and V, the total number of cities and the number of roads (2 \\u2264 C \\u2264 104 and 0 \\u2264 V \\u2264 50000). The cities are identified by integer numbers from 1 to C. Each road links two different cities, and there is at most one road between each pair of cities. Each of the next V lines contains three integers C1, C2 and G, indicating that the toll value of the road linking cities C1 and C2 is G (1 \\u2264 C1, C2 \\u2264 C and 1 \\u2264 G \\u2264 104). Patricia is currently in city 1 and the client\\u2019s city is C.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Even Obsession\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case in the input your program must output exactly one line, containing exactly one integer, the minimum toll value for Patricia to go from city 1 to city C, paying an even number of tolls, or, if that is not possible, the value \\u2018-1\\u2019.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Vin\\u00edcius Fernandes dos Santos, Bruno J. Adami, Cl\\u00e1udio L. Lucchesi  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA beginner investor wants to learn how to invest in the stock market. As he does not have any experience, he selected one company and followed daily the value of the stock during N days. At the end, he wondered how much money he would have won if he had invested during the time he followed\\n\\t\\t\\t\\t\\tthe stock value. To be honest, the investor is multi billionaire and has a lot of money, enough to buy any amount of stock actions of the company. However, as he is very careful with his investments, he decided that he would never have more than one stock of the company.\\n\\t\\t\\t\\t\\tTo cover his costs, the stockbroker charges a fixed rate of C dollars for every stock purchase.\\n\\t\\t\\t\\t\\tYou have to calculate the maximum profit that the investor could have won investing during the N days, having also the option of not to invest any money.\\n\\t\\t\\t\\t\",\n    \"id\": 1932,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. The first line of a test case contains two integers, N and C (1 \\u2264 N \\u2264 2 \\u00d7 105, 0 \\u2264 C \\u2264 30). The second line contains the N prices P1, P2, \\u2026, PN of the days 1, 2,\\u2026, N, respectively. Every price Pi satisfies 1 \\u2264 Pi \\u2264 1000.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Stock Market\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case in the input your program must produce exactly one line, containing exactly one integer, the maximum profit of the investor, in dollars.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Anido, Universidade Estadual de Campinas  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tTri-du is a card game inspired in the popular game of Truco. The game uses a normal deck of 52 cards, with 13 cards of each suit, but suits are ignored. What is used is the value of the cards, considered as\\t\\t\\tintegers between 1 to 13.\\n\\t\\t\\t\\t\\tIn the game, each player gets three cards. The rules are simple:\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tA Three of a Kind (three cards of the same value) wins over a Pair (two cards of the same value).\\n\\t\\t\\t\\t\\t\\t A Three of a Kind formed by cards of a larger value wins over a Three of a Kind formed by cards of a smaller value.\\n\\t\\t\\t\\t\\t\\tA Pair formed by cards of a larger value wins over a Pair formed by cards of a smaller value.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tNote that the game may not have a winner in many situations; in those cases, the cards are returned to the deck, which is re-shuffled and a new game starts.\\n\\t\\t\\t\\t\\tA player received already two of the three cards, and knows their values. Your task is to write a program to determine the value of the third card that maximizes the probability of that player winning the game.\\n\\t\\t\\t\\t\",\n    \"id\": 1933,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. In each test case, the input consists of a single line, which contains two integers A (1 \\u2264 A \\u2264 13) and B (1 \\u2264 B \\u2264 13) that indicates the value of the two first received cards.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Tri-du\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case in the input, your program must produce a single line, containing exactly one integer, representing the value of the card that maximizes the probability of the player winning the game.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Anido, Universidade Estadual de Campinas  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tRecent discussions in the Internet caused a renewed interest in logical puzzles. In this problem your task is to write a program that solves puzzles as the one shown in the figure\\tbelow. In this kind of puzzle, the letters inside the grid represent variables, and the numbers represent the sum of the values of the variables in each line or column.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tThe objective of this type of puzzle is to determine the value of each variable so that the sum of the lines and columns shown is satisfied. But as this type of puzzle is intended for kids, it has a property that makes it easier to solve: it is always possible to find a line or column which\\n\\t\\t\\t\\t\\tcontains only one variable whose value is not yet known. So, one way to solve the problem is to proceed step by step, finding the value of one variable at each step.\\n\\t\\t\\t\\t\\tGiven a puzzle, you need to determine the values of the variables that will solve it.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 1934,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. The first line of each test case contains two integers L (1 \\u2264 L \\u2264 100) and C (1 \\u2264 C \\u2264 100) indicating the number of lines and the number of columns in the puzzle. Each of the next L lines contains C names of variables, followed by an integer S, the sum of\\n\\t\\t\\t\\t\\tthe variables in that line (\\u2212108 \\u2264 S \\u2264 108). The last line contains C integers Xi (\\u2212108 \\u2264 Xi \\u2264 108), indicating respectively the sum of the variables in column i. The names of the variables are formed by exaclty two lower case letters, from \\u2018a\\u2019 to \\u2018z\\u2019. All puzzles have a unique solution, in which all variables are integer numbers between \\u2212106 and 106.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Puzzle\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, your program must produce one line for each variable of the puzzle, containing the name of the variable and its integer value. The variables should be produced in ascending alphabetical order; in other words, respecting order\\n\\t\\t\\t\\t\\t  aa, ab, . . . , az, ba, bb, . . . , za, zb, . . . , zz.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Guilherme Albuquerque Pinto  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tGiven a board dimensions N \\u00d7 N, would like to place beans, a grain in each square, following a spiral as shown in the figure. Starting from the top left corner, with coordinates (1, 1), and then going right as possible, then down as possible, then to the left as possible and then up as possible. We repeat this pattern, right-down-left-up, until B beans are placed on the board. The problem is: given N and B data, in which coordinates will be placed the last grain of beans? In the figure, for N = 8 and B = 53, the last grain was placed on the squared coordinates (4, 6).\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1935,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry contains only one line with two integers, N and B, where 1 \\u2264 N \\u2264 230 and 1 \\u2264 B \\u2264 N2.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Spiral\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line with two integers L and C representing the coordinates of the last grain of beans.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Vin\\u00edcius Fernandes dos Santos  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe factor of a positive integer N, denoted by N!, is defined as the product of the positive integers smaller than or equal to N. For example 4! = 4 \\u00d7 3 \\u00d7 2 \\u00d7 1 = 24.\\n\\nGiven a positive integer N, you should write a program to determine the smallest number k such that N = a1! + A2! + ... + Ak!, where each ai, for 1 \\u2264 i \\u2264 k is a positive integer.\\n\\nFor example, for N = 10 the answer is 3, it is possible to write N as the sum of three numbers factor: 10 = 3! + 2! + 2!. For N = 25 the answer is 2, it is possible to write N as the sum of two factorial numbers: 25 = 4! + 1!.\\n\\t\\t\\t\\t\",\n    \"id\": 1936,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line containing an integer N (1 \\u2264 N \\u2264 105).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Factorial\",\n    \"output\": \"\\t\\t\\t\\t\\tIts program should produce a single line with an integer representing the smallest amount of factor numbers whose sum is equal to the value of N.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Stefano Tommasini  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tOa is one of the ancient worlds of the DC universe, it is there that inhabit the guardians of the universe. They administer the Green Lantern Corps, a major force in the universe! Everyone knows that the Green Lanterns can fly because of the power of the ring, but not all the inhabitants of Oa are part of the troop. For these people is difficult getting between cities, as there are no roads!\\n\\n\\t\\t\\t\\t\\tThe guardians want to connect the cities of Oa building some roads. There are N cities in Oa, and they want to build N-1 road of both hands, so that you can get from one city to any other directly or indirectly. The guardians also do not want too much focus any city, so they established that no city can have more than K roads. For example, if we have three cities and K equals 2, we have three options:\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tThe guardians though, are very curious, and asked the Green Lanterns if they were able to tell how many ways you can build N-1 road obeying these restrictions. Your task, as a member of the Green Lantern Corps is N and K data, satisfy the curiosity of guardians.\\n\\t\\t\\t\\t\",\n    \"id\": 1937,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line containing two integers N (1 \\u2264 N \\u2264 102) and K (1 \\u2264 K \\u2264 N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Curious Guardians\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing a single integer, the problem response. As this response may be very large, print it module of 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Vin\\u00edcius Fernandes dos Santos, Centro Federal de Educa\\u00e7\\u00e3o Tecnol\\u00f3gica de Minas Gerais  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\t\\tRetangol\\u00e2ndia is a very old city and therefore saves many historical riches. The city was planned several decades ago, with all its streets going in north-south or east-west directions. Currently, there is a revitalization project of the city, in which a new rectangular square will be made. The choice of the new square will be made by the government but for the moment they are interested in what are the possible positions for the square, taking into consideration that the square should be aligned with the streets and thus when viewed in a map, its sides should be horizontal and vertical segments. In order to reconcile the historical riches with the new initiatives, some precautions must be taken.\\n\\nThere light poles, of the XIX century throughout the city. For its historical value, no post can be overthrown. Because of the wear and tear and lack of maintenance, no street has more than one remaining post. For positioning the square, however, you do not want one of these poles is inside it. Moreover, the new square landscape design provides two historical poles are in two of the corners. The figure below shows an example with four poles and three possible locations for the square.\\n\\n\\n\\nThe city hall hired a georeference company to map the lampposts positions. With this data at hand,\\nthe next step is to determine how many possible locations exist for the park, so the size of the teams\\nnecessary to evaluate each location can be estimated.\\n\\t\\t\\t\\t\",\n    \"id\": 1938,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line entry contains an integer N, 1 \\u2264 N \\u2264 3000, representing about the number of poles. The following lines describe N, each of, the position of a pole. The position of a pole is given by a pair of integers X and Y, -108 \\u2264 X, Y \\u2264 108, corresponding to their coordinates in the plane.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Rectangle Park\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing the number of different possible locations of the square.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Davi Duarte Pinheiro, Universidade Federal de Pernambuco   Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Skyrk planet will never know peace while the evil mage is free. This time, the malicious magician's plan was to arm a bomb in the middle of the largest city on the planet. The Mage enjoys observing the chaos, so instead of blowing up the bomb immediately, he put a timer and left it with a challenge. The bomb has a keyboard, and the solution of the challenge disarms it.\\n\\n\\t\\t\\t\\t\\tThe challenge is called Omnibox; it consists of a rectangular box with some hubs in unit and a collection of all possible N-omnis. Skyrk should drop all omnis somewhere in the box to earn points. The maximum score is the solution of Omnibox.\\n\\n\\t\\t\\t\\t\\tA N-omni is a collection of unit squares arranged with N sides coincident. A 1-omni is a unit square, and an N-omni is a (N - 1) -omni at least one side thereof connected to a unit square.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tThe six possible 3-omnis.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tSome of the 19 possible 4-omnis.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tThe box has a rectangular surface and vertical walls; each of the squares of a grid of Cartesian coordinate system placed on the surface of the box has a non-negative cell unit cubes. The cubes can not be moved.\\n\\n\\t\\t\\t\\t\\tSkyrk will align each omni with grid squares, and drop it in the box. The omni will fall to touch a cube or background. It is not allowed to Skyrk reflect or rotate the omni, and he must lie completely within the box's boundaries. The number of points obtained after release it is the distance between the omino and the top of the box. After dropping it, Skyrk notes the number of points, remove the omni, and release the next. The final score is the sum of all points.\\n\\n\\t\\t\\t\\t\\tThe clock is ticking and the countdown on the pump says 5:00 (five hours!). You can discover the maximum score Skyrk can get to defuse the bomb and save the fate of the planet from the hands of vile magician?\\n\\t\\t\\t\\t\",\n    \"id\": 1939,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains T (T \\u2264 200) - the number of challenges, after this line will be T challenges. Each challenge begins with a line with four integers A, C, H and N (1 \\u2264 R, C, H \\u2264 30, 1 \\u2264 N \\u2264 10) - the dimensions of the carton surface are R \\u00d7 L, the height is H, and the order of omnis is N. Each of the next R lines contains C integers Hij (0 \\u2264 Hij \\u2264 H) - the number of cubes in the square (i, j) of the grid.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Ominobox\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each challenge, show a line containing X, where X is the solution of the Omnibox.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Vin\\u00edcius Fernandes dos Santos, Centro Federal de Educa\\u00e7\\u00e3o Tecnol\\u00f3gica de Minas Gerais  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA strategy game, with J players, is played around a table. The first player is the player 1, the second to play is the player 2, and so on. Once completed one round, again the first player makes his move and the order of the players is repeated again. Every move, a player guarantees a certain amount of Victory Points. The score of each player is the sum of Victory Points each of your moves.\\n\\nGiven the number of players, the number of rounds and a list representing Victory Points in the order they were obtained, you must determine what the winning player. If more than one player get the highest score, the player with the highest score that you played last is the winner.\\n\\t\\t\\t\\t\",\n    \"id\": 1940,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of two lines. The first line contains two integers J and R, the number of players and rounds respectively (1 \\u2264 J, R \\u2264 500). The second line contains integer J \\u00d7 R corresponding to Victory Points in each of the moves made in the order they happened. The Victory Points obtained in each round will always be integers between 0 and 100, inclusive.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Strategy Game\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing the integer corresponding to the winning player.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Vin\\u00edcius Fernandes dos Santos, Centro Federal de Educa\\u00e7\\u00e3o Tecnol\\u00f3gica de Minas Gerais  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tA palindrome is a string such that its reversal is equal to the original string. In other words, it is a string that, when read backwards, is equal to the original string. For example BANANAB is a palindrome, while BANANAS not. In this problem we are interested in an issue a little more interesting.\\n\\nGiven a string S, we want to find a subsequence that is a palindrome. A subsequence is a string that can be obtained from the removal of zero or more characters of the original string. For example ANNA is a subsequence of BANANAS.\\n\\nIt will also be given a set of S positions is called special positions. Its task is to find the size of the substring that is a palindrome and contains the largest number of possible special positions. If more than a subsequence maximizing the number of special positions, you must print the size of the largest.\\n\\t\\t\\t\\t\",\n    \"id\": 1941,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of two lines. The first line contains a string of capital letters S with at least 1 and a maximum of 2000 characters. The second line contains an integer N (0 \\u2264 N \\u2264 |S|), indicating the number of special positions we are interested in include the palindrome, followed by N distinct numbers from 1 to |S|, even containing the positions special S.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Palindrome\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program must print a single integer representing the size of the largest palindrome possible, as defined above.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Bruno Junqueira Adami  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe BWS lottery is done annually. In it N people bet by choosing K numbers each. Formally, we can say that Bij is the j-th amount wagered by the i-th person. So the organizers choose positive integers K. The chosen numbers are called W1, W2, ..., WK.\\n\\nWinners are calculated as follows:\\n\\n\\n\\tA non-empty subset of N participants is randomly chosen, in other words, some participants are chosen by pure luck.\\n\\tFor each person in this subset S1 value is calculated, which is the sum of all first numbers bet by them, that is, the sum of Bi1, where i would be the index of the chosen person. Likewise S2, ..., SK values are calculated.\\n\\tIt is made a parity test between Sj and Wj, in other words, it is tested whether the parities (if the number is odd or even) match between S1 and W1, W2 and S2, and so on until WK and SK.\\n\\tIf all parities matches, then this group of persons is declared the winner!\\n\\n\\nThe organizers want to know: can you choose the numbers W1, W2, ..., WK so that there is no winner subset of participants?\\n\\t\\t\\t\\t\",\n    \"id\": 1942,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains the numbers N (1 \\u2264 N \\u2264 104) and K (3 \\u2264 K \\u2264 50), representing the number of participants and the amount of numbers bet per person respectively. People bet on integers greater than 1 and smaller than 50, inclusive. Each of the following N lines contains K numbers, representing the bets of each person, one per line.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Lottery\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint 'S' if possible or 'N' otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe regional phase of the SBC Programming Contest happened recently, where more than 600 teams participated in more than 40 cities around Brazil. Your friend competed, and when asked about his position he told you: \\u201cI got placed in the top 10\\u201d.\\r\\n\\r\\nYou were happy for your friend, but you could not stop asking yourself about what was his real position. \\u201cTop 10\\u201d could mean any position between first and tenth placed, however if he had placed first he would have said \\u201cTop 1\\u201d, if he had placed second or third he would have said \\u201cTop 3\\u201d, and if he had placed fourth or fifth he would have said \\u201cTop 5\\u201d. Therefore, his real position was between sixth and tenth, because people tend to put themselves in the lowest category they belong.\\r\\n\\r\\nYou gathered all the categories people most use: 1, 3, 5, 10, 25, 50 and 100. Given a position K, write an algorithm that says the number of the lowest category this position belongs.\\n\\t\\t\\t\\t\",\n    \"id\": 1943,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case has one integer K, representing a position (1 \\u2264 K \\u2264 100).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Top N\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should print one line with the sentence \\u201cTop N\\u201d, and replace N by the number of the lowest category the position K belongs.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Tiago Zonta, Unoesc Campus Chapec\\u00f3  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tIn this year of 2015, FACE is supporting the third edition of the Programming Marathon, but, at this time, organization's  staff is requesting your help to create a lottery system by using the FACE letters. As this fair uses  a differentiated and cheerful proposal, each participant who enters into the fair receives 4 letters, each of them in a different color and in the form of a wooden block, as shown in Figure 1, and they must insert them in a panel. If, by the entering time, the 4 letters create the opposite of the 4 last letters, this visitor will receive the free gift. \\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\t Figure 1 - FACE entrance on the panel followed by ACEF.\\r\\n\\r\\n\\t\\t\\t\\t\\tFor example: suppose there have already been three visitors who entered into the fair and the letters' distribution remained as follows: F A C E E C F A A C F E A C E F. See that the panel, for being empty, the letters F A C E were inserted in order to start the process, now, as the fourth visitor enters, he has inserted the letters F E C A and, with it, they will receive the free gift as it got the opposite of A C E F. After this situation, the letters must remain F A C E E C F A A C F E. Another important fact is that, the free gifts'  distribution occurs in a certain period with a sample of a selected visitors number. REMENBER, always when the panel remains empty it is automatically inserted the letters F A C E.\\r\\n\\r\\n\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\r\\n\\t\\t\\t\\t\",\n    \"id\": 1944,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input contains several test cases. The first line of a test case contains an integer N (1 \\u2264 N \\u2264 100), representing the number of visitors who will receive the letters. In each subsequent line it must be informed the 4 letters combination separated by space that the visitor wishes to insert on the panel. The stop is determined by N equals to 0.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"FACE 2015 FREE GIFT\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each of group of visitors, it must be informed how many of them will receive free gifts. \\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tCenturies after the alien invasion, after mankind had been rebuild completely, a very old set of programs was discovered in an obsolete programming language, called Java++. For historical curiosity, you were assigned to understand the meaning of these programs.\\n\\n\\t\\t\\t\\t\\tYour task is to write a simulator for these programs, and as initial test, this simulator must be able to calculate the value of the last assigned variable of each program.\\n\\t\\t\\t\\t\",\n    \"id\": 1945,\n    \"input\": \"\\t\\t\\t\\t\\tEach input consists of 1 program. The program only contains 2 kinds of instructions. One instruction to assign a variable and one to perform a sum.\\n\\n\\t\\t\\t\\t\\tAssignment instructions have the format:\\n\\n\\t\\t\\t\\t\\tA := B\\n\\n\\t\\t\\t\\t\\tWhere A is a variable name and B is a positive integer.\\n\\n\\t\\t\\t\\t\\tSum instructions have the format:\\n\\n\\t\\t\\t\\t\\tA := B + C\\n\\n\\t\\t\\t\\t\\tWhere A is a variable name and B or C are either a variable name or a positive integer.\\n\\n\\t\\t\\t\\t\\tTokens of these programs are always separated by spaces and instructions are separated by a line break.\\n\\n\\t\\t\\t\\t\\tOnly combinations of at most 8 lower case letters are considered as valid variable names.\\n\\n\\t\\t\\t\\t\\tPrograms have, at most, 2000 instructions\\n\\n\\t\\t\\t\\t\\tVariables are assigned, at most, only once.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Simulator\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput consists of only 1 line, with only one positive integer number, containing the last value of the last variable assigned, be it by a direct assignment or by a sum.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tA great TV show gives prizes to the audience through the Pyramid of Fortune. One guest throws at the top of the pyramid (which is actually a triangle) and it goes down to the left or to the right until it hits one of the slots at the pyramid base. The guest wins the prize that is mapped to that slot.\\n\\n\\t\\t\\t\\t\\tThe grand prize is always at the middle of the pyramid base. So, its base always have an odd number of slots. The figure shows one pyramid with 15 slots.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tThe TV show producers wants to save as much as possible and have asked you to calculate what is the probability of winning the grand prize, given the number of slots at the pyramid base. Consider that, in each point of the pyramid, the ball has the same probability to go to the left or to the right.\\n\\t\\t\\t\\t\",\n    \"id\": 1946,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is given in a single line, which contains the number S of slots at the pyramid base (3 \\u2264 S \\u2264 4999). S is always an odd number.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Pyramid of Fortune\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output must be given in a single line, which contains the probability of the ball hits the slot with the grand prize. The probability must be printed with 2 decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAn important event is happening today in your city, and there are many tourists lost. To get to their destinations in this unknown city they usually order cabs. You have been hired to help the cab drivers, who are overwhelmed with so many orders.\\n\\n\\t\\t\\t\\t\\tThe city can be represented with N reference points, and M roads that connect such points. Each road has a length, and there will always exist a path between any two distinct points of the city.\\n\\n\\t\\t\\t\\t\\tThe cab driver goal is to answer to K orders. Each order consists of two points in the city, O and D (source and destiny), where the tourist is currently at the point O and wants to get to the point D. The cab driver is initially in the point 1, he intends to answer only one order at each time (in any order he wants), and after the last order he must return to the point 1.\\n\\n\\t\\t\\t\\t\\tFor example, consider a city with N = 5 reference points and K = 2 tourists, where the first tourist wants to get from point 4 to point 3, and the second wants to get from point 2 to point 4. Therefore, the cab driver has two possible routes: 1 -> 4 -> 3 -> 2 -> 4 -> 1; or 1 -> 2 -> 4 -> 3 -> 1. Notice that A -> B represents a path between the points A and B, which consists of one or more roads.\\n\\n\\t\\t\\t\\t\\tPuzzled with so many route options and wanting to save fuel, the cab driver asked you to calculate which route has the minimum travelled distance.\\n\\t\\t\\t\\t\",\n    \"id\": 1947,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case starts with three integers N, M and K (2 \\u2264 N \\u2264 104, N-1 \\u2264 M \\u2264 105, 1 \\u2264 K \\u2264 15).\\n\\n\\t\\t\\t\\t\\tFollowing there will be M rows, each with three integers A, B and C each, representing that there is a road that connects the points A and B, which can be travelled in both directions, with length C (1 \\u2264 A, B \\u2264 N, 1 \\u2264 C \\u2264 100, A <> B).\\n\\n\\t\\t\\t\\t\\tFollowing there will be K rows, each with two integers O and D each, representing that there is a tourist who wants to get from point O to point D (1 \\u2264 O, D \\u2264 N, O <> D).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Cab Driver Route\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should print one line containing one integer, representing the minimum possible distance to be travelled if the cab driver starts at point 1, answer all the orders (one at a time), and come back to point 1.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Emilio Wuerges, UFFS  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"After the alien attack that erased almost every piece of advanced human technology, you were assigned to the task force tasked to rebuild mankind.\\n        After many trials and errors, it was found that simple computers with only 2 source registers and 1 target register were somehow immune to alien radiation. The problem now is that almost no program yet written worked with these computers and there was no suitable compiler.\\n\\n        You have in your hands one of the last full feature computers, and your task is write the compiler. However, since time as money and CPU time is even more money, before performing the whole compilation process, you must only check if it is possible to compile the input program.\",\n    \"id\": 1948,\n    \"input\": \"Each input consists of 1 program. The program only contains 2 kinds of instructions. One kind to declare a variable and one to perform a sum.\\n         Declaration instructions have the format:\\n         A := B \\n         Where A is a variable name and B is a positive integer.\\n         Sum instructions have the format:\\n         A := B + C \\n         Where A is a variable name and B or C are either a variable name or a positive integer.\\n         Tokens of these programs are always separated by spaces and instructions are separated by a line break.\\n        Only combinations of at most 8 lower case letters are considered as valid variable names.\\n        Programs have, at most, 2000 instructions\\n        Variables are assigned, either by a declaration or a sum, at most, only once.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Compiler\",\n    \"output\": \"The output consists of only 1 line:\\n         OK \\n         When it is possible compile the program.\\n         Compilation Error\\n         When it is not possible to compile the program.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy F\\u00e1bio Dias Moreira, PUC-Rio  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tA shift register is a circuit that shifts the elements of a bit array by one position. A shift register has an input (one bit) and an output (also one bit), and is driven by a clock pulse. When the clock pulse happens, the input bit is shifted to the position of the least significant bit, the most significant bit is sent to the register output, and all other bits are shifted by one position to the direction of the array's most significant bit (towards the output).\\n\\n\\t\\t\\t\\t\\tA Linear Feedback Shift Register (LFSR) is a shift register in which the input bit is determined by the value of the EXCLUSIVE-OR of some of the register bits before the clock pulse. The bits that are used in the register's feedback are called taps. The figure below shows a LFSR with 8 bits and three taps (bits 0,3 and 5).\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tIn this problem you must write a program that, given the number of bits of a LFSR, the information of which of its bits are taps, a start state and a final state, determines how many clock pulses are needed so that, starting from the start state, the LFSR reaches the final state (or determines that that is impossible).\\n\\n\\t\\t\\t\\t\",\n    \"id\": 1949,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case is composed by three lines. The first line contains two integers N, T, indicating respectively the number of bits (2 \\u2264 N \\u2264 32) and the number of taps (2 \\u2264 T \\u2264 N). The bits are identified by integers from 0 (least significant) to N - 1 (most significant). The second line contains T integers, separated by spaces, describing the bits that are taps, in increasing order. Bit 0 is always a tap. The third line contains two numbers I and F in hexadecimal notation, separated by a blank space, representing respectively the start state and the final state of the lfsr.\\n\\n\\t\\t\\t\\t\\tThe end of input is indicated by a line that contains two zeros separated by a blank space.\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Shift Register\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case in the input your program must print a single line. If it is possible to reach the final state from the given start state, the line must contain a single integer, the smallest number of clock pulses needed for the lfsr to reach the final state given. If that is not the case, the line must contain just the character '*'.\\n\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\t\\u2014 Wreck-it, Marco!\\n\\n\\t\\t\\t\\t\\tThese words have got engraved forever in Dr. Marco Spohn's heart, and that is why he does everything with excellence and devotion. Lately he has been working on an operating system which controls a robot and a maze and is capable of making the robot find the maze exit. For the meanwhile, the project is at its first steps, and in the current version the robot just moves randomly in the maze.\\n\\n\\t\\t\\t\\t\\tThe maze is an electronic box whose positions form an N \\u00d7 M grid. Each position of the grid can be either blocked, when a rubber wall stands at the position from the bottom to the top of the box, or free. Assuming 1-based indexing, the exit of the maze lies always at the position (N, M) and is never blocked, being the only position not covered by the box cover. Dr. Spohn's robot is smart and, due to its cameras and sensors, it can know which positions are free or blocked among the adjacent positions in which it is. Thus, the next position to which it goes is always taken with uniform distribution among all the free adjacent positions. The adjacencies are always considered only in horizontal and vertical directions. If there are free adjacent positions, the move from the current position to the next costs a constant time unit. Otherwise, the robot stands still.\\n\\n\\t\\t\\t\\t\\tYesterday Dr. Spohn did an interesting experiment. First, he set up the maze leaving some positions free and the others blocked. Then, he put the robot at some free position of the maze, covered the box, programmed two times T1 and T2 (T1 < T2) and started the system. Once the system is started, the robot, out of Dr. Spohn's sight, began to move inside the maze as described above, until not being able to move anymore, until reaching the position (N, M), or until the time T2 had been exceeded and the experiment had been aborted. After T1 time units from the start, the system drawed K free positions at which the robot was not and blocked them, reporting in a screen to Dr. Spohn which positions were blocked.\\n\\n\\t\\t\\t\\t\\tGiven the times T1 and T2, the initial configuration of the maze and the K free positions which were blocked after T1 time units, calculate the probability of the robot having got to exit the maze in at most T2 time units counting from the beginning of the experiment.\\n\\t\\t\\t\\t\",\n    \"id\": 1950,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of four integers, N, M, T1 and T2 (1 \\u2264 N, M \\u2264 30, 1 \\u2264 T1 < T2 \\u2264 105), which represent respectively the number of lines and the number of columns of the grid and the times set in the system as previously explained. The N lines following describe the initial configuration of the maze and contain exact M characters each, wherein the jth (1 \\u2264 j \\u2264 M) character of the ith (1 \\u2264 i \\u2264 N) line is ., # or R if the position (i, j) of the grid had begun, respectively, free, blocked or containing the robot. The next input line consists of a single integer K (0 \\u2264 K \\u2264 N \\u00d7 M), which represents the number of free positions which were blocked T1 time units after the beginning of the experiment, and the last K input lines describe those positions, each one consisting of two integers i and j (1 \\u2264 i \\u2264 N, 1 \\u2264 j \\u2264 M) in order to designate the position (i, j).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Sp\\u00f6hndriger\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line consisting of a single value representing the probability of the robot having got to exit the maze in at most T2 time units counting from the beginning of the experiment. The probability must be shown as a percentage with two decimal places after the decimal point.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tProfessor Padilha asked a homework for the curricular component of Digital Circuits and now everybody is desperate! The freshers need to build a combinational circuit using only circuits from a list of circuits published by the professor. However, due to some size issues, they can barely determine whether the circuits they have built are valid, let alone decide whether they are correct. It is up to you, veteran, to write a program to validate the circuits built by the freshers. Can you help them?\\n\\nBy the way, according to what Professor Padilha has asked, a circuit C is valid if:\\n\\n\\n\\tfor every input of C and every output of a smaller circuit used internally in the construction of C there is at least one path to some output of C;\\n\\tfor every output of C there is at least a path coming from some input of C;\\n\\tthere are no cycles in C.\\n\\n\\nAll circuits published by the professor have a single output each, though the circuits built by the freshers can have several outputs. It is obvious that the circuits published by the professor are all valid.\\n\\t\\t\\t\\t\",\n    \"id\": 1951,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains the description of a circuit C, which is intended to be validated. The first input line consists of three integers, I, N and O (1 \\u2264 I, N, O \\u2264 104), which represent respectively the number of inputs of C, the number of circuits published by the professor used internally in the construction of C and the number of outputs of C, so that the inputs are identified by the integers 1, \\u2026, I, the inner circuits by the integers I + 1, \\u2026, I + N, and the outputs identified by the integers I + N + 1, \\u2026, I + N + O. Each one of the next N lines describes how each one of the inner circuits is fed, following the order I + 1, \\u2026, I + N, and consists of an integer K (1 \\u2264 K \\u2264 102), which represents the number of inputs in the inner circuit, followed by K integers, which identify the source of the signal fed in each input. The last line of the input consists of O integers, identifying the source of the signal returned by each output of C, following the order I + N + 1, \\u2026, I + N + O.\\n\\nThe figure below illustrates the circuit C described by the first input sample.\\n\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Circuit Validator\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing singly o.o if the circuit described in the input is valid or u.u otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the case you do not know it, the student Alesom Zorzi, one of our heroes of AKM (UFFS's team which has got 6 balloons in the First Phase of ICPC Latin America Brazilian Subregional Contest), is a chess player, having also conquered some medals in important tournaments.\\n\\nOf the pieces of chess, one of the most interesting is the knight, which can jump from a position of coordinates (i1, j1) to one of coordinates (i2, j2) if and only if {|i1 - i2|, |j1 - j2|} = {1, 2}.\\n\\nBased on Star Trek series, Alesom has developed his own variant of 3D Chess, in which the game consists of not 1, but L boards of dimensions N \\u00d7 M, each board at a level numbered from 1 to L. By the way, the lines from each level are numbered from 1 to N, as the columns from 1 to M, so each game position can be identified by a triple of coordinates (i, j, k), wherein i is the index of the line, j is the index of the column and k is the index of the level. A knight in this variant of 3D Chess can jump from a position of coordinates (i1, j1, k1) to one of coordinates (i2, j2, k2) if and only if {|i1 - i2|, |j1 - j2|, |k1 - k2|} = {0, 1, 2}. The figure illustrates a knight at position (5, 5, 1) in a game with 3 levels of dimensions 8 \\u00d7 8, highlighting its adjacent positions.\\n\\n\\n\\t\\t\\t\\t\",\n    \"id\": 1952,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line contains only the integers N, M and L (8 \\u2264 N, M \\u2264 100, 3 \\u2264 L \\u2264 100). The second line contains a triple of coordinates (i1, j1, k1), and the third line contains a triple of coordinates (i2, j2, k2) (1 \\u2264 i1, i2 \\u2264 N, 1 \\u2264 j1, j2 \\u2264 M, 1 \\u2264 k1, k2 \\u2264 L).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Knight in 3D Chess\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line containing a single integer, which represents the minimum number of moves needed for a knight to go from the position (i1, j1, k1) to the position (i2, j2, k2).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jos\\u00e9 Wagner de Andrade Junior, Universidade Federal de Itajub\\u00e1 - UNIFEI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tRoberto had to collect the enrollment number of students in your class production engineering and water engineering for the call. Soon, he had the great idea to talk to all students shouting the call numbers to write down his assistants. Obviously this does not work out, and soon the room collapsed. Everyone wanted to talk at once, and the competition to see who could go faster, there was a tumult of principle, with chairs being thrown on colleagues, hair pulling, and punch in the face.\\n\\nJunior as a peaceful man, he is trying to fulfill all quickly. However, as are many requests, it is getting overloaded. He then remembered that you know how to program and decided to give an idea.\\n\\nAll classroom students should give the registration name and abbreviation of the course on a sheet, and the call will be computed later. They need to know how many students from each course attended. It has the data, but unfortunately does not have the required proficiency in programming for \\\"CODE\\\" it. You could help you to know, given a list of students, how many of EPR, how many of EHD and how many intruders?\\n\\t\\t\\t\\t\",\n    \"id\": 1953,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input an integer n (1 = n = 100 000) indicating the number of students in the class.\\n\\nThe following n lines contain the registration number and the symbol of the course.\\n\\nThe program playback should end with end of file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Robert and Rampant Room\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should print three lines containing the number of students who are EPR, EHD and INTRUSOS  in the format: \\\"acronym: quantity.\\\" (See example output).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\t\\u2014 Since you are a biologist, could you define the concept of \\u2018species\\u2019? \\u2014 Madam, madam, come back here!\\n\\n\\t\\t\\t\\t\\tLaura is a biologist very interest in Computing. Recently she has written a program that, given the genetic codes of two individuals A and B, decides if A is a possible genetic parent of B, which means that there is nothing on the genetic codes of both individuals allowing us to affirm for sure that B has not been generated by A. Note that, if A is a possible genetic parent of B, it does not mean that B belongs to the same species as A, for a mutation might has happened during the generation of B. Naturally, we say that an individual A is a possible genetic ancestor of an individual B if there is a sequence of k individuals I1, I1, \\u2026, Ik such that I1 = A, Ik = B and, for every j \\u2208 {1, \\u2026, k - 1}, Ij is a possible genetic parent of Ij + 1.\\n\\nLaura is studying the fossils found last month in Chapec\\u00f3 in order to determine, through the extracted genetic codes, the species that used to live in the region. But the concept of \\u2018species\\u2019 is very controversial. Laura, who does not want to live situations like the one of the madam in the image above, has preferred adopting the following definition: two individuals A and B belong to the same species if and only if A is a possible genetic ancestor of B and B is a possible genetic ancestor of A. The diagram below illustrates a situation with 7 fossilised individuals, in which an arc from an individual A to an individual B represents that A is a possible genetic parent of B. In the example, we can identify 3 species: I, II and III.\\n\\n\\n\\nGiven the informations provided by Laura's program, help her to calculate the number of possible evolutionary paths from the species of an individual S to the species of an individual T. A possible evolutionary path from a species E1 to a species Ek is a sequence of k species E1, E2, \\u2026, Ek such that, for every j \\u2208 {1, \\u2026, k - 1}, there is some individual B belonging to the species Ij + 1 which has a possible genetic parent belonging to the species Ij.\\n\\t\\t\\t\\t\",\n    \"id\": 1954,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of 4 integers, N, M, S e T (1 \\u2264 N \\u2264 105, 0 \\u2264 M \\u2264 106, 1 \\u2264 S, T \\u2264 N), wherein N is the number of fossilised individuals, designated by the integers from 1 to N, whose genetic codes have been obtained by Laura. Each one of the M lines following consists of 2 integers, A and B (1 \\u2264 A, B \\u2264 N), representing that Laura's program considers the individual A a possible genetic parent of B.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Possible Evolutionary Paths\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program shall output a line containing a single integer, which shall represent the number of possible evolutionary paths from the species to which the individual S belongs to the species to which the individual T belongs. As this number can be very large, your program shall output only the remainder this number leaves when divided by 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tUnder the orientation of Professor Graziela Tonin, the students of Topics on Software Engineering are developing a system to help See World, the new theme park in town, allocate orcas in two huge tanks. The orcas have particularly a very complex social hierarchy, of at least 4 levels, and it is curious that orcas are capable of vocalising different dialects, depending on the level of the social hierarchy by which they are related to their interlocutor. One of the hardest difficulties about maintaining orcas in captivity is that, if two orcas are put together in a same tank but they speak no dialect in common, they will eventually fight, for they do not understand each other and they come from totally different cultures. Sometimes they can suffer severe injuries or even die. Thus, See World wants to allocate its orcas in its two tanks in such a way that, if two orcas are allocated in a same tank, it is guaranteed that they share at least one common dialect.\\n\\t\\t\\t\\t\",\n    \"id\": 1955,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of an integer N (1 \\u2264 N \\u2264 103), which represents the number of See World's orcas. By the way, each See World's orca is represented singly by a single code between 1 and N. Each one of the N lines following consists of N integers, so that the jth integer of the Ith line (1 \\u2264 i, j \\u2264 N) is 1 if the orcas of codes i and j share at least one dialect or 0 otherwise.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"See World\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing singly the expression Fail! if it is not possible to allocate the orcas in the tanks as desired or the expression Bazinga! if it is possible.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tPerhaps you don't know it, but not all elves have been gone away to Valinor. There are legends according to which some noldor live in an acacia forest to the north of Chapec\\u00f3, although no mortal man has ever seen them, for over their houses lies an invisibility enchantment sung by Lady Galadriel just before she takes the last boat to the Immortal Lands. Each house has been built on the top of an acacia, and there are many elven robe bridges connecting pairs of houses, satisfying the following ancient tradition: if two elves belong to the same family but live in different houses, then it is possible to go from the house where one lives to the house where the other lives taking a path consisting only of elven robe bridges. Conversely, if two elves do not belong to the same family, they do not live in the same house, and any way of going from one's house to the other's mandatorily has to pass by the floor.\\n\\nThe Earth has already faced terrible threats, as the threat of Morgoth and the threat of Sauron. However, none is comparable to the threat that the men are being to the Earth by themselves. For the other day a careless smoker threw a cigarette end near the acacia forest and the fire spread. The elves got to save their houses, but all the bridges were destroyed. Now, they want to rebuild the bridges, but not all of them, since the elven robes made by the ancient noldor are very precious to them. They want to rebuild only the bridges which really are needed for the previously mentioned tradition to be satisfied again, and using as less as possible of elven robe. The task of deciding which bridges should be rebuilt has been appointed to you. If you do not find a way, no one else will.\\n\\t\\t\\t\\t\",\n    \"id\": 1956,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of a single integer N (1 \\u2264 N \\u2264 104), which represents the number of elven houses in the acacia forest, which are designated by the integers from 1 to N. Each ith (1 \\u2264 i \\u2264 N - 1) of the N - 1 lines following consists of a non-negative integer k followed by k pairs of integers j and cij (i < j \\u2264 N, 1 \\u2264 cij \\u2264 106), indicating that there were a bridge between the houses i and j and rebuilding it costs cij metres of elven robe. Each bridge is described exactly once in the input and there are no more than 106 in total.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Acacias\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output line shall consist of only two values, separated by a blank space, so that the first represents the number of elven families that live in the acacia forest and the second represents the minimum cost needed to rebuild the bridges in order to satisfy the ancient tradition.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tData stored in computers are in binary. An economic way of visualizing these numbers is the usage of base 16 (hexadecimal).\\n\\nYour task is to write a program that, given a natural number at base 10, shows its representation in hexadecimal.\\n\\t\\t\\t\\t\",\n    \"id\": 1957,\n    \"input\": \"\\t\\t\\t\\t\\tThe input\\u00a0is a positive integer number V\\u00a0at base 10\\u00a0(1 \\u2264 V \\u2264 2 x 109).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Converting to Hexadecimal\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the same number V\\u00a0at base 16 in a single line (don't forget the end-of-line\\u00a0character). Use uppercase letters, as shown in the examples.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tFloating point numbers can be very long to show. In these cases, it is convenient to use the scientific notation.\\n\\nYou must write a program that, given a floating point number, shows this number in scientific notation: always show the mantissa sign; always show the mantissa with 4 decimal places; use the character 'E' between the mantissa and the exponent; always show the exponent sign; and show the exponent with at least 2 digits.\\n\\t\\t\\t\\t\",\n    \"id\": 1958,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is a double precision floating point number X\\u00a0(according to the IEEE\\u00a0754-2008 standard). There will never be a number with more than 110 characters\\u00a0long and more than 6 decimal places.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Scientific Notation\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the\\u00a0number\\u00a0X\\u00a0in a single line\\u00a0using the scientific notation\\u00a0detailed above. See the examples below.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tIn Euclidean geometry, a regular polygon is a polygon that is equiangular (all angles are equal in measure) and equilateral (all sides have the same length). A simple polygon is one that does not intersect itself anywhere. Below we can see various mosaics made of regular polygons.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYou must write a program that, given the number and the length of sides of a regular polygon, show its perimeter.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\",\n    \"id\": 1959,\n    \"input\": \"\\t\\t\\t\\t\\tThe input are two positive integers: N and L, which are, respectively, the number of sides and the length of each side of a regular polygon (3 \\u2264 N \\u2264 1000000 and 1 \\u2264 L \\u2264 4000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Regular Simple Polygons\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the perimeter P of the regular polygon in a single line.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tThe ECI (Editio Chronica Incredibilis or Amazing Chronicles Editors) is very traditional when numbering the pages of its books. It always uses the Roman numerals for that. And its books never have more than 999 pages. When necessary, the books are split into volumes.\\n\\nYou must write a program that, given an arabic number, show its equivalent in roman numerals.\\n\\nRemember that I stands for 1, V for 5, X for 10, L for 50, C for 100, D for 500 and M stands for 1000.\\n\\t\\t\\t\\t\",\n    \"id\": 1960,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is a positive integer number N (0 < N < 1000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Roman Numerals for Page Numbers\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the number N written as Roman numerals in a single line. Always use uppercase letters.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tIn each stage of the Jumping Frog game you must safely get your amphibian through a sequence of pipes of different heights to the rightmost pipe. Nevertheless the frog just survives if the height difference of consecutive pipes is at most the frog jump height. If the next pipe height is too high, the frog hits the pipe and fall. If the next pipe height is too low, the frog does not survive the fall. The frog always starts on the top of the leftmost pipe.\\n\\nIn this game the distance of pipes is irrelevant, which means that the frog always can reach the next pipe with a jump.\\n\\n\\n\\nYou must write a program that, given the pipe heights and the frog jump height, show if the game stage can be beaten or not.\\n\\t\\t\\t\\t\",\n    \"id\": 1961,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is given in two lines. The first one has two positive integer numbers P and N, the frog jump height and the number of pipes (1 \\u2264 P \\u2264 5 and 2 \\u2264 N \\u2264 100). The second line has N positive integer numbers that indicate the pipes heights ordered from left to right. There are no height greater than 10.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Jumping Frog\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is given in a single line. If the frog can reach the rightmost pipe write \\\"YOU WIN\\\". If the frog fails, write \\\"GAME OVER\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tRaul Seixas sang that he was born 10 thousand years ago and there was nothing in this world that he cannot know too much. The Mamomas Assassinas band sang that more than 10 thousand years \\\"have gone by and passed\\\" [sic] since they have failed at 5th grade. So many past events and professor MC was curious about what year each of these have happened.\\n\\nYou must write a program that, given a series of how many years have passed, show, for each number, in what year the event had happened. Remember that you must indicate if it had happened BC (Before Christ) or AD (Anno Domini). Use the portuguese A.C. for BC and D.C. for AD according to the output sample.\\n\\t\\t\\t\\t\",\n    \"id\": 1962,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has several lines. The first one has a positive integer number N (1 \\u2264 N \\u2264 100000). There are N lines after the first one. Each of these N lines has a single non negative integer T, which indicates how many years have passed until 2015 AD (0 \\u2264 T < 231).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"A Long, Long Time Ago\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output has N lines. In each one there is the year A in which the correspondent time T had happened. Look at the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tWelcome to the 3rd\\n                      UFFS Junior Programming Contest. We sincerely hope the next hours are very productive to you, you get many balloons and, above all, you have fun! Remember that you can ask for a clarification whenever you are not sure that you understand a problem description. Remember also that at 17.30 the automatic judges will be turned off and the competition will enter blind mode, so that all submissions made during this period will begin to be judged only at 18.10. Please stay with us till the end of the competition, working on solutions for the problems till the last minute, because, as long as the contest is running, there is still hope!\\r\\n\\r\\nAnd it was hope that motivated Grandma Zaz\\u00e1, a 72-year-old lady, to fulfill her dream of starting an undergraduate course. She is fascinated by everything related to the University: the classes, the library, the research and extension projects, the refectory, but especially the student card that she can use to get 50% off cinema tickets. Last week Grandma Zaz\\u00e1 and her colleagues went to the cinema to watch a movie, but they were appalled at the ticket price increase. Disgusted, they decided to make a protest, scheduled for tomorrow at General Bertaso Square, against the oppressive capitalist system. Grandma Zaz\\u00e1 wants to collaborate with the movement by making a poster with the following watchword:\\r\\n\\r\\nHOW ABSURD! THE PRICE OF CINEMA TICKETS HAS RISEN \\u2026 % !!\\r\\n\\r\\nBut she is not good at Math, so she is asking you to helpfully calculate the percentage she needs to complete the poster.\\n\\t\\t\\t\\t\",\n    \"id\": 1963,\n    \"input\": \"\\t\\t\\t\\t\\tThe only input line consists of two values A and B (0.00 < A \\u2264 B \\u2264 1000.00), given with exactly two digits after the decimal point, which represent respectively the old and the new prices of the cinema tickets.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"The Motion Picture\",\n    \"output\": \"\\t\\t\\t\\t\\tThe only output line shall consist of a single value, representing as a percentage the ticket price increase. The value shall be followed by the symbol % and shall contain two digits after the decimal point.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Khan is a very intelligent young man who studies Computer Science at the Federal University of the Southern Border (in Portuguese: Universidade Federal da Fronteira Sul, UFFS). However, yesterday afternoon he and his girlfriend had a bad fight and ended up breaking up, which pissed him off. As he had classes at night, he decided to go to the university on foot, in order to unwind a bit. When arriving at the campus, he stopped in front of the UFFS's obelisk and instantly resolved he would not use his wrath for hatred, but for love: he would be there standing still until a woman passed by him, with whom, asking her out, he would try to rebuild his life. If more than one woman passed by him at the same time, Khan would choose the prettiest.\\n\\nUFFS campus in Chapec\\u00f3 is surrounded by a road, to which one can come through a single access road from the city of Guatambu, since the former access road has been disabled. As figure above illustrates, it is right in the intersection between the access and the surrounding road that lies the UFFS's obelisk, represented in the figure by the symbol *.\\n\\nAna and Bia are two friends that also study at night at UFFS. Both are very healthy, although Ana is prettiest, and both like to work out running on the surrounding road before classes, always clockwise. They always begin to run together at some point of the surrounding road, but, as they run at constant speeds which are not necessarily equal, they can separate and meet again many times during the activity. Yesterday they started running not after Khan arrived at the obelisk, and there were no more women at the campus.\\n\\t\\t\\t\\t\",\n    \"id\": 1964,\n    \"input\": \"\\t\\t\\t\\t\\tThe single input line consists of five integers, C, VA, VB, T and D:\\n\\n\\n\\tC (0 < C \\u2264 1000) represents the length of the road that surrounds the campus, in metres;\\n\\tVA and VB (0 < VA, VB \\u2264 400) represent the constant speeds, in centimetres by second, at which respectively Ana and Bia run;\\n\\tT (0 \\u2264 T \\u2264 200) represents the time, in minutes, between the beginning of the women's running and Khan's arrival to the obelisk;\\n\\tD (0 \\u2264 D < C) represents the distance, in metres, following the clockwise direction from the point where Ana and Bia started running to the obelisk.\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Wrath of Khan\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing singly the name of the woman Khan asked out.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\u2018Coxinha\\u2019 is the name given to a traditional Brazilian food which consists of shredded chicken meat covered in dough and fried. Recently Mr. Spock, the chef of Enterprise, a restaurant in Chapec\\u00f3, has won an important gastronomy award, for making the most delicious coxinhas in the world. You should try a Mr. Spock's coxinha. They are so amazing that the flavour will boldly take you to where no man has gone before. But it is not easy to get a coxinha in Enterprise. The search for Spock is such that it is needed to place an order at least 42 days earlier.\\n\\nMr. Spock likes to make coxinhas of different sizes and shapes. In order to shape a coxinha, he first picks up at least two circular bottomless pans of same height but diameters all distinct. Then he puts one pan over the other in decreasing order of diameter from the base to the top, tying them with a string on the side. Finally, he uses the pans to shape his coxinha. The first and the second figures show the pan structure as seen respectively from above and from the front. The third and the forth figures show the resulting coxinha, also as seen respectively from above and from the front.\\n\\n\\n\\nAiming to better serve his clients, Enterprise also offers delivery service. Something important that Mr. Spock has found out is that, if he does not want the coxinhas to lose their flavour and crunchiness, he must put them in the packet sequentially, one after the other, always reclined in a manner that the bases stay perfectly perpendicular to the bottom of the packet. Further, consecutive coxinhas in the sequence must always have either their bases or their tops touching, and the touching parts must always have the same diameter. Coxinhas whose tops point to the left are called \\u2018left coxinhas\\u2019, those whose tops point to the right are called \\u2018right coxinhas\\u2019, and Mr. Spock uses the coxinhas orientation so the client can know the type of seasoning in the filling of each one. No matter the size, two coxinhas are sold by the same price if and only if either both are left coxinhas or either both are right. There is always at least one left coxinha and at least one right coxinha in a packet. The figure below illustrates a packet (dashed lines) containing 4 coxinhas (continuous lines). As you can see, the coxinhas always fit perfectly in the packet.\\n\\n\\n\\nYou have been hired to work in Enterprise quality control team. Your function is to take the already full packets, pass them through an X-ray scanner and, based on the measurements reported by the scanner, determine how many left and how many right coxinhas there are in the packets. The measurements are made from the left to the right, at a spacing identical to the height of the pans used in the shaping of the coxinhas. In each measurement it is reported the height of the coxinha inside the packet at that point, but only if the result of the measurement is different from the result of the previous measurement (otherwise, nothing is reported). In the figure above, 14 measurements are illustrated by the dotted lines. Note that only 10 of them are reported.\\n\\nAs you are new in the team, your colleagues have hidden from you the coxinhas prices and they want you not only to calculate how many left and how many right coxinhas there are in the packet, but also to guess the price of left coxinhas and the price of right coxinhas. For this purpose, they have told you the total price of the coxinhas in the packet, the difference between the two prices and the type of the coxinhas which are more expensive.\\n\\t\\t\\t\\t\",\n    \"id\": 1965,\n    \"input\": \"\\t\\t\\t\\t\\tThree lines make the input. The first input line consists of 3 values, N, D and P, such that the first is an integer and the others are given with two digits after the decimal point: N (3 \\u2264 N \\u2264 106) represents the number of measurements reported by the scanner, D (0.01 \\u2264 D \\u2264 100.00) represents the difference between the price of a left coxinha and the price of a right one, and P (0.01 \\u2264 P \\u2264 10000000.00) represents the total price of the coxinhas in the packet. The second input line consists of N positive integers not greater than 30, which represent the results of the measurements reported. The last input line consists singly: of a left coxinha, represented by , if the left coxinhas are more expensive than the right ones; or a right coxinha, represented by (>, otherwise.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Search for Spock\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program shall print two lines, informing in the first how many left coxinhas are inside the packet and the price of each one, and in the second the same information but for right coxinhas. The output must follow strictly the format clarified in the samples below.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThis problem is dedicated to all of us who study or work far from the city where our families live!\\n\\nJohn loves cheese. Mozzarella, Parmesan, Provolone, it doesn't matter, he loves them all. John likes cheese so much that he puts cheese in everything he cooks, even in desserts. John's family is as crazy about cheese as him. As this weekend he is going to visit his relatives, who live far away, he decided to take for them a bit of Chapecoense cheese. John intends to organise a party as soon as he arrives in his hometown. The idea is to chop all the cheese he takes in cubes of side 1 cm and to assemble a pyramid with them as the pyramid of the figure, which has 5 cheese cubes in its base. Maybe it won't be possible for him using all the cheese cubes in the construction of the pyramid. In this case, John eats all the cheese that is left.\\n\\n\\n\\nIn Chapec\\u00f3's cheese store, there is cheese in many sizes and prices, all of parallelepiped shape. It is not necessary to buy a whole piece of cheese. One can ask for a specific volume, for example:\\n\\n\\u2014 Mr. Chee, could you please cut for me a piece of 20 cm \\u00d7 10 cm \\u00d7 30 cm of Parmesan cheese?\\n\\nJohn was with a restrict budget for buying the cheese to take for his family, but even so he bought the greatest cheese volume he could respecting the budget he designated for that.\\n\\t\\t\\t\\t\",\n    \"id\": 1966,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of two integers, N and B (1 \\u2264 N \\u2264 105, 0 \\u2264 B \\u2264 109), which represent respectively the number of pieces of cheese in the store and John's budget. The second input line consists of N integers vi (1 \\u2264 vi \\u2264 104, 1 \\u2264 i \\u2264 N), each one representing the volume, in cubic centimetres, of the ith piece of cheese. The last input line consists of N integers pi (0 \\u2264 pi \\u2264 104, 1 \\u2264 i \\u2264 N), each one representing the price of the ith piece of cheese.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Voyage Home\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing singly the number of cheese cubes that the base of John's pyramid will have.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tIt is the year of 2,265, and the University of the Final Frontier of the Space (UFFS) has already got many campuses around the galaxy, so that all undergraduate courses of UFFS are offered at all campuses. Each course promotes many activities each year, and the activities promoted by a course are the same for all UFFS campuses. In order that every activity can happen, the University needs to buy a certain number of materials, but the prices of each material are not the same for all campuses. A pencil, for example, may cost \\u02432 (2 bitcoins) for the campus of Chapec\\u00f3, at planet Earth, and \\u02437 (7 bitcoins) for the campus of ShiKahr, at planet Vulcan. Despite cost differences, it's never a good idea to buy the materials in a campus to send them to another campus, due to the very high transportation costs and import and export duties. Thus, in order that all the University's activities can be accomplished, the Rectory needs to transfer to each course of each campus the exact amount of bitcoins needed so the courses can buy the materials by themselves.\\n\\t\\t\\t\\t\",\n    \"id\": 1967,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of four positive integers, G, A, M and C (G \\u2264 600; A, C \\u2264 100; M \\u2264 2000), which represent respectively the number of undergraduate courses, the total number of types of activity that can happen, the total number of types of material that can be needed and the number of UFFS campuses. The courses are designated in the input by the integers from 1 to G, the types of activity by the integers from 1 to A, the types of material by the integers from 1 to M and the campuses by the integers from 1 to C. Then three tables of non-negative integers follow. Each table is preceded by a blank line, between two consecutive columns of a same table there is a column of spaces of width 1, and additional spaces may precede each integer of a table in order to right align all columns of that table, existing at least one integer in a column which is not preceded by additional spaces. The first table consists of G lines, each one containing A integers not greater than 10, so that the jth integer of the ith line represents how many activities of type j an undergraduate course i needs to accomplish in the current year. The second table consists of A lines, each one containing M integers not greater than 10, so that the jth integer of the ith line represents how many materials of type j are needed in order to accomplish an activity of type i. The third and last table consists of M lines, each one containing C integers not greater than 100, so that the jth integer of the ith line represents the price, in bitcoins, of one unit of the material of type i in the planet at which the campus j is located.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Final Frontier\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint G lines containing C integers each, so that the jth integer of the ith line represents the amount of bitcoins the Rectory needs to transfer to the course i of the campus j. Follow strictly the same spacing rules between columns of the input.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tLast October 12th we celebrated in Brazil the Children's Day. We adults should live more in children's world, for the opposite is not working, not at all. We adults have split the world into nations, and the children are those who suffer the most from the wars. We adults have built a wealth distribution system, and the children are those who suffer the most from hunger. But there is an Undiscovered Country, not so far from those who still preserve a little bit of imagination, that belongs to the children. There is no war there, or poverty, or hunger. There the children play day and night.\\r\\n\\r\\nBut a catastrophe is happening to the Undiscovered Country. A catastrophe! The sheep which used to live in the Undiscovered Country have ended up getting old, or sick, or swallowed by boa constrictors. This way, the baobabs have started to grow and spread over the entire country. Now, the citizens have to move urgently. In order to facilitate the evacuation, all the citizens have been numbered from A to B (it is obvious that this idea has come from the adults \\u2014 they love these things!). In order to define who would be the leaders of the groups during the evacuation, someone has suggested that the leaders should be all those who have received a prime number (it is obvious that this idea has come from a child \\u2014 children have a lot of imagination and they love pleasing themselves with things that need no further explanation!). But soon another idea came forth:\\r\\n\\r\\n\\u2014 A prime number is a number that has exactly 2 divisors. What if the leaders were those who have received a number with exactly N divisors?\\r\\n\\r\\nAll the children loved the idea. The adults, on the other hand, needed a long time to debate how the number N should be chosen. When finally the number N was chosen, each citizen who were not leader of a group should pick up the group he or she liked the most to enter it. No other restriction was imposed to the groups. Nothing was preventing, for example, a group of consisting only of its leader. Note that, depending on the value of N, there would not be any group at all.\\r\\n\\r\\nKnowing the values of A, B and N, release the child inside you and try to figure out the total number of possibilities for the formation of the groups. If, for example, A = 5, B = 8 and N = 4, situation in which the leaders are the citizens 6 and 8, there are 4 possibilities:\\r\\n\\r\\n\\r\\n\\tboth citizens 5 and 7 choose enter the group led by citizen 6;\\r\\n\\tboth citizens 5 and 7 choose enter the group led by citizen 8;\\r\\n\\tcitizen 5 chooses enter the group led by citizen 6 and citizen 7 chooses enter the group led by citizen 8;\\r\\n\\tcitizen 5 chooses enter the group led by citizen 8 and citizen 7 chooses enter the group led by citizen 6.\\r\\n\\n\\t\\t\\t\\t\",\n    \"id\": 1968,\n    \"input\": \"\\t\\t\\t\\t\\tThe single input line consists only of the positive integers A, B and N (A \\u2264 B; B, N \\u2264 107).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"The Undiscovered Country\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line containing a single value which represents the number of possibilities for the formation of the groups. As this number can be very large, print only the remainder it leaves when divided by 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tIt is not possible yet to build a machine that allows time travel to a body made of matter. However, the physicist Asdrubal Keyla Monteiro has already developed a machine able to send messages through time, communicating with generations of the future. Theoretically it would be also possible to use this machine to send messages to generations of the past, but they would not have the technology to receive those messages. Each message is a binary sequence of a fixed length settled by the generation with which A. K. M. is communicating. The end of each message is always marked by 11, a pattern that obviously cannot happen in any other place of the message, otherwise the message would arrive truncated at its destination. For example, if the message length settled by the generation with which A. K. M. is communicating is 6, there are 5 possibilities for the message sent to that generation:\\n\\n000011\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0001011\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0010011\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0100011\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0101011\\n\\nThe interesting thing about this communication protocol is that, by concatenating the messages it is possible to enter a single file into the machine so that the machine sends a message to each one of a specified set of generations. For example, if A. K. M. wants to communicate with the generations registered in the machine respectively as 1, 2 and 3, and if the message lengths settled by the generations are respectively 3, 5 and 3, there are 3 possibilities for the file that can be entered into the machine:\\n\\n01100011011\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a001101011011\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a001110011011\\n\\nThe machine developed by A. K. M. only sends messages. For now, it is not possible to receive messages from the future. The only thing possible to receive from a generation of the future is the message length information. Often the generations update this value, and A. K. M. needs to be alert.\\n\\t\\t\\t\\t\",\n    \"id\": 1969,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of two integers, G e E (1 \\u2264 G, E \\u2264 105), which represent respectively the number of generations registered in the machine and the number of events described in the input. The generations are identified in the input by the integers from 1 to G. The second input line consists of G integers, in a way that the ith integer, Ci (2 \\u2264 Ci \\u2264 1010, 1 \\u2264 i \\u2264 G), represents the message length settled by the generation i. Each one of the E lines following represents an event and follows one of formats below:\\n\\n                    \\n                        \\n                            -> A B\\n                            indicates that A. K. M. has entered a file into the machine to send a message to each generation from A to B (1 \\u2264 A, B \\u2264 G);\\n                        \\n                        \\n                            \\n                            indicates that the message length settled by the generation A must be updated to C (1 \\u2264 A \\u2264 G, 2 \\u2264 C \\u2264 1010).\\n                        \\n                    \\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Generations\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each event of the form -> A B, output a line containing a value that represents the number of the possibilities for the file entered into the machine. After processing all events, output an extra line containing a value that represents the number of possibilities for the file which A. K. M. would enter into the machine if he wanted to send a message for all the G generations. As the numbers of possibilities represented in each output line can be very large, output only the remainder they leave when divided by 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tWhoever has already got a Super Nintendo remembers how the cartridges never used to work at the first contact with the console. Sometimes one was supposed to blow several times into the connectors of both the cartridges and the console so the connection could be successfully established. Thankfully, the technology has evolved, but, spit it out, you cannot say you do not miss that time, can you?\\n\\nFernando is a boy fascinated by studying old video games. He has found out that it is even possible to record music to Super Nintendo old cartridges. He has a collection of songs in his computer and he would like to record them to some cartridges. He knows that each cartridge has recording capacity of at most a limited number of minutes of music, and he knows the duration in minutes of each song. However, he is finding it difficult to decide which songs should be recorded to which cartridges in order to maximise the use of the cartridges.\\n\\t\\t\\t\\t\",\n    \"id\": 1970,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of two positive integers N e K (N \\u2264 100, K \\u2264 3), which represent respectively the number of songs in Fernando's computer and the number of cartridges he has got. The second input line consists of N positive integers, which represent the duration in minutes of each song. The last input line consists of K positive integers, which represent the maximum number of minutes of music that it is possible to record to each cartridge. No song has more than 50 minutes, and to no cartridge more than 50 minutes of music can be recorded.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"First Contact\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing singly the maximum total number of minutes of music that it is possible to record to the cartridges.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\t\\tIn an insurrection, a student decided to flee from Frida, but he was followed by four cops. At some time of the chase, the cops have yelled: Stop! We have you surrounded! Now the student wants to know if he really is surrounded, situation in which he must surrender, or if he can keep fleeing. We say that the student is surrounded by the cops if the cops are not all over a same line and if the student lies in the interior or on the boundary of the single polygon formed by the cops (yes, if the cops are not all over a same line, it is guaranteed that the polygon formed by all of them is unique).\\n\\t\\t\\t\\t\",\n    \"id\": 1971,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of five lines containing two integers X and Y each (0 \\u2264 X, Y \\u2264 104). The first four lines represent the coordinates of the four cops, and the last line represents the coordinates of the student. No two bodies can occupy the same place in the space.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Insurrection\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output shall consist of exactly three lines with exactly three characters each, representing whether the student must surrender or he can keep running. The samples clarify which characters shall be printed.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tNemesis, the goddess of revenge, has raged against Euterpe, the Muse of delight, and has put her in a maze infested by beasts. Now, only Hercules can save Euterpe. Starting his journey at somewhere in the maze, Hercules can only advance to a maze position guarded by a best if he kills the beast. Though terrible, a beast can never leave the position it guards. Furthermore, different beasts may require from Hercules different amounts of energy in order to be killed. Help Hercules to save Euterpe spending the minimum of energy as possible, knowing that he can move only in vertical and horizontal directions and, despite of being an invincible hero and having infinite energy, Hercules cannot destroy the walls of the maze.\\n\\t\\t\\t\\t\",\n    \"id\": 1972,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consist of two integers, N and M (2 \\u2264 N, M \\u2264 500), which represent the number of lines and the number of columns in the maze. The next N lines describe the maze and have exactly M characters each, which can be:\\n\\n\\n\\tH, if that is the position where Hercules starts his journey;\\n\\tE, if that is the position where Euterpe is arrested;\\n\\t., if that position is a free position;\\n\\t#, if that position is a wall;\\n\\tan integer X between 1 and 9, if that position is guarded by a best that requires X of Herculean energy in order to be killed.\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Nemesis\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing singly the minimum amount of energy needed for Hercules to get to Euterpe. If it is not possible for Hercules to get to Euterpe, print a line containing singly the word ARTSKJID.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tAfter buying many adjacent farms at the west region of Santa Catarina, the Star family built a single road which passes by all farms in sequence. The first farm of the sequence was named Star 1, the second Star 2, and so on. However, the brother who lives in Star 1 has got mad and decided to make a Star Trek in order to steal sheep from the proprieties of his siblings. But he is definitely crazy. When passes by the farm Star i, he steals only one sheep (if there is any) from that farm and moves on either to Star i + 1 or Star i - 1, depending on whether the number of sheep in Star i was, respectively, odd or even. If there is not the Star to which he wants to go, he halts his trek. The mad brother starts his Star Trek in Star 1, stealing a sheep from his own farm.\\n\\t\\t\\t\\t\",\n    \"id\": 1973,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of a single integer N (1 \\u2264 N \\u2264 106), which represents the number of Stars. The second input line consists of N integers, such that the ith integer, Xi (1 \\u2264 Xi \\u2264 106), represents the initial number of sheep in Star i.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Star Trek\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line containing two integers, so that the first represents the number of Stars attacked by the mad brother and the second represents the total number of non-stolen sheep.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"And this was the 3rd UFFS Junior Programming Contest! We sincerely hope you have had fun! If you have maybe not been able to solve a problem, discuss it later with your colleagues and professors, study the contents you do not master yet, and face the problem again. All the problems in this contest will be available at URI Online Judge as soon as possible. If you had never joined a Programming Contest before and have liked it, come and join our Programming Club, so you can improve your skills, learn more and train!\\n\\n                    \\n\\n\\t\\t\\t\\t\\tBut before we can say goodbye, we still have another task for you. Santa Catarina's west region has fallen into complete darkness, for a tornado devastated the region. Before, the electrical infrastructure was amazing, so that two energy towers were connected directly by energy cables if and only if between those towers there was a road. The tornado did not damage the roads, only the towers and energy cables. Among all companies which proposed to restore the electrical infrastructure of the region, the one which has presented the best proposal was Pikachu S. A. In order to start the jobs, Pikachu S. A. has asked the Government for some information. If this information does not satisfy some conditions, Pikachu S. A. will annul the contract and the Government will have to hire another company, for our sadness. By the way, the conditions required by Pikachu S. A. are:\\n\\n\\n\\tThe company will not build any new tower, only will restore all the old towers.\\n\\tThe company will not connect two towers by energy cables if those towers were not connected before.\\n\\tThe company will make only the minimum number of connections between towers needed to interconnect all towers, directly or indirectly, and will spend as least as possible of metres of cabling.\\n\\tEach tower restored will need to receive a Pikachu S. A.'s employee to monitor the tower daily. This employee can be either a permanent employee or a trainee.\\n\\tIf the employees that two towers receive are trainees, then there must be a road connecting both towers directly.\\n\\tIf the employees that two towers receive are permanent employees, then there cannot be a road connecting both towers directly.\\n\\tThe number of permanent employees must be minimal.\\n\\n\\nA curiosity about the old infrastructure is that to each tower a binary code has been assigned, so that the connection between two towers, if there was any, would cost, in centimetres of cabling, exactly the length of the greatest binary subcode common to the codes of both towers. For example, if the codes of two towers were respectively 000011 e 001100, the cost of the connection between these two towers was, and still is, 4.\\n\\t\\t\\t\\t\",\n    \"id\": 1974,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line contains two integers, N and M (2 \\u2264 N \\u2264 103, 0 \\u2264 M \\u2264 105), which respectively represent the number of towers and the number of connections in the old infrastructure, such that each connection is described in one of the M lines following by two integers, i and j (1 \\u2264 i, j \\u2264 N), which identify the towers that were connected. Finally, the ith of the N last input lines describes the binary code, of positive length not greater than 100, of the tower i.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Into Darkness\",\n    \"output\": \"\\t\\t\\t\\t\\tIf it is not possible to satisfy the conditions of Pikachu S. A., print a line containing singly the smiley :[. Otherwise, print two lines: the first containing singly the smiley :]; and the second containing three values, representing respectively the number of trainees needed, the number of permanent employees and the minimum cost needed to restore the infrastructure.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tVI is a very eccentric calculus teacher, always that corrects the proofs of the students (Which by the way are very difficult tests), she notes all the pearls that finds when corrects, so that on the day of delivery she can write all on the blackboard, to let the students embarrassed and they never make the same mistakes.\\n\\n\\t\\t\\t\\t\\tWhen the proofs are delivered, students try to discover who it was that had more pearls on the blackboard. As each test the number of pearls increases and students have to study a lot because every week happens a new calculus test, they do not have time to check all the proofs and see who appeared more times in the blackboard.\\n\\n\\t\\t\\t\\t\\tKnowing that you are programmer they asked your help to show who was the student that had more pearls written on the blackboard that day.\\n\\t\\t\\t\\t\",\n    \"id\": 1975,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains three integers P, A e R (1 \\u2264 P, A, R \\u2264 104), indicating respectively the number of pearls, number of students and the number of responses given by each student. Then have P lines with pearls written on the board that will have a maximum of 1000 characters. Then have A students, for each student the first line is your name with up to 100 lowercase or uppercase characters from 'a' to 'z', following the R lines showing their responses. The input ends when P = A = R = 0, and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Pearls\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, you should print the name of the student who had more appearances in the blackboard, in case of tie your program will show all students with more appearances separated by commas alphabetically.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tGustavo in one of his pre-calculus classes learned to do multiplication of matrices, as he is a very smart student, quickly he realized that when we do the multiplication, the order in which the matrices are multiplied can influence the total amount of necessary accounts for find the answer.\\n\\n\\t\\t\\t\\t\\tAlthough very dedicated, Gustavo is with little time to do college work, as is currently studying hard for programming contest, so he asked for his help on a task requested in  pre-calculation classes.\\n\\t\\t\\t\\t\\tThe teacher gave various matrices for the class to train multiplication, then Gustavo need a program that given the dimensions of the matrices, the program have to report on the best order to carry out the multiplications taking into account the least amount of necessary accounts to generate reply.\\n\\n\\t\\t\\t\\t\\tHow you are Gustavo friend's and has more time than he, decided to help him, but with some rules:\\n\\t\\t\\t\\t    1st Gustavo always have to inform matrices where the multiplication in the order given is always possible;\\n\\t\\t\\t\\t    2nd If there is more than a great solution, your program will only report the amount of necessary accounts for multiplication.\\n\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\",\n    \"id\": 1976,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 1000), indicating the number of matrices to be multiplied. It follows then N rows each containing two integers L and C (1 \\u2264 L, C \\u2264 100) indicating the number of rows and columns of each array. The entry ends when N = 0 and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Matrices\",\n    \"output\": \"\\t\\t\\t\\t\\tAssume that the matrices names are A1, A2, ..., AN. For each test case, your program should print a line containing the order of the matrices to be multiplied (following the example output), in case of more than one possible solution your program should print only the total amount of necessary accounts.\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Chermout, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tAnne is a very applied student in the course of computer science. She doesn't like to be late, always try arrive 18:00 o'clock what is start time of classes. However the traffic in the city of Teres\\u00f3polis between 16:30 and 19:00 is too slow, so a way that would normally take 10 minutes, it takes a much longer time. Anne leave her job at 17:00 and takes approximately X minutes to get to the point, however the buses toward the college pass exactly 17:30, at this time pass several buses with different ways that lead to college, if Anne miss it, she will have to wait until 17:50 to get another bus. From bus point what she generally wait, to college, easily take to more than 30 minutes if she doens't choose the bus that has the best way. Anne need to know what time she will get the college choosing the best route and arrive late.  \\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\tYour task is, from N possible routes, say what time Anne arrive at college going for the best way, knowing she should get out of the varzea and reach the alto, with weights T time between a local and another, taking into consideration the transit (the T of varzea to the alto is not the same as the alto to varzea because the traffic in the opposite direction may be different) and report if whether or not delay. Assume that Anne always arrive at the point before 17:50 and you will always have a way between varzea and Alto.\\n\\t\\t\\t\\t\",\n    \"id\": 1977,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line contains three integers separated by a space, X (1 \\u2264 X \\u2264 50), N (1 \\u2264 N \\u2264 90) and V (1 \\u2264 V \\u2264 10) indicating the time Anne take to go to the point of work, amount possible routes and the number of dots that it can move. The following are then N rows, each with two non-empty strings containing unique and local routes Anne can pass, and a separate integer by space, O, D and T (1 \\u2264 T \\u2264 60), indicating that there is a route to get from place O to place The D and that this path will lead T minutes. The entrance ends when X = N = V = 0, and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"I Can't be Late\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce two lines in the output. Containing the arrival time college and another containing \\\"Ira se atrasar\\\" (she will be late) or \\\"Nao ira se atrasar\\\" (she is not going to be late).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tThe computer science course coordinator want to install new cameras in a college corridor in order to be able to identify students who usually stay there in class time, so when these students are complaining that the course is difficult it, he can easily show the student that is difficult because it does not attended much the classes.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tThe cameras to be installed are of a slightly different technology, they have 360 degree view without the need to make the turn, the coordinator will install cameras in the hallway ceiling and all are exactly centered between the walls of the corridor. As these cameras are expensive and consume a lot of energy, the coordinator will have to use existing cameras in the hallway, which in saving reason were turned off, but not all are the same model, so each has a different view.\\n\\n\\t\\t\\t\\t\\tKnowing that you're the best programmer of course, the coordinator asked you to determine the minimum number of cameras required to cover all the corridor, leaving no space without vision, or say it will have to buy more cameras.\\n\\n\\t\\t\\t\\t\\tTake the corridor as a Cartesian plane, where the size of abscissas is L, starting at 0, and the size of ordinates is A. The cameras are always positioned on the x-axis.\\n\\t\\t\\t\\t\",\n    \"id\": 1978,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains three integer N, L, A (1 \\u2264 N \\u2264 10000), respectively indicating the number of cameras present in college, the corridor width and the distance between the two walls of the hall. The following N lines containing two integers X and R (R \\u2265 A), indicating the position where the camera is installed and your field of view. The input ends with N = 0 and should not be processed.\\n\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Cameras\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should print the minimum number of cameras required to cover the entire corridor. If it is not possible, you should print \\\"Tera que comprar mais cameras.\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Anderson Chaves, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tLuiz is a very dedicated coordinator of the computer science course. He knows the importance of encouraging their students to study algorithms, so decided to hold a individual programming contest between them, with awards.\\n\\n\\t\\t\\t\\t\\tLuiz would like to avoid as much as possible the possibility of fraud in the competition, and so wouldn't want two candidates had friends in the same room during the proof.\\n\\n\\t\\t\\t\\t\\tUnfortunately Luiz has only two classrooms for realize the proof, but fortunately  he know very well their students, and can tell easily who is friends with whom. However, he needs to know if it is possible, with only two classrooms available, combining the students so that friends don't stay together, for this, he called to you, dedicated student of the course, to create a program to help him.\\n\\t\\t\\t\\t\",\n    \"id\": 1979,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. The first line of each test case consists of an integer N (2 \\u2264 N \\u2264 100) indicating the number of students who will perform the proof.\\n\\t\\t\\t\\t\\tEach N couple of these lines describes the friendly relations of each participant, so that the first line consists of the participant's ID, and the next line consists of a list describing an M number of students (1 \\u2264 M < N) with which one participant has a relationship of friendship.\\n\\t\\t\\t\\t\\tYou can consider that it not relevant the number of people willing in each room, and that if there is a friendship between the students x and y  there is a friendly relationship between y and x. The entry ends when N = 0, and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Separate Rooms\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should print a line containing the \\\"SIM\\\" answer, if possible have the students so that there are no two friends doing the proof in the same classroom, and \\\"NAO\\\" otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Chermout, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tGabriel is a student of computer science course, he always liked to logic games, an example is the rubik's cube, students are surprised to see how easy to him solve it. Gabriel decided to set up his own game involving logic, the first information he will need to mount the game is how many anagrams can be formed with a certain number of distinct characters without spaces.\\n\\n\\t\\t\\t\\t\\tAs he uses much of your time for programming contest, it ends up not having time to check this, so he need your help.\\n\\t\\t\\t\\t\\tYour task is, given a word with different characters and without spaces, say how many anagrams can be formed.\\n\\t\\t\\t\\t\",\n    \"id\": 1980,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case will have a single line S with a maximum of 15 characters. The input ends with S = 0 and shouldn't be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Shuffling\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should print how many anagrams are possible form with the informed characters.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tNow you've ever helped Gabriel with the first data required for your logic game, he needs your help again.\\n\\t\\t\\t\\t\\tThis time he needs that your program can handle cases where words can has repeated letters.\\n\\t\\t\\t\\t\",\n    \"id\": 1981,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case will have a single line with an word S (1 \\u2264 S \\u2264 10000), composed only with characters from 'a' and 'z'. The entry ends when S = 0 and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Shuffling Again\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should print how many different anagrams are possible to be formed with the informed characters. As the numbers can be large, print the response module 100000007.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\t\\tHas just arrived new supercomputers for computer science labs. The Course staff are very busy and the machines are very heavy, so require a lot of time and several employees to take them from a place.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tFigure 1: The dots represent the computers and how they are arranged in the tank.\\n\\n\\t\\t\\t\\t\\tThe Course staff need to isolate the machines with a security tape in order to prevent any trouble. As in Serra everything is very expensive, they need to buy the least amount of tape to pass around computers. Due to the weight of supermachines they will just take a back tape on the machines that are on the edges, without remove any computer of place.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tFigure 2: The red line is how the computers has to be isolated.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tYou as a very enthusiastic student with the machines, will help the tape purchase, telling them the least amount of tape to buy to isolate all computers.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 1982,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case begins with an integer N (3 \\u2264 N \\u2264 2000) then have N rows, each containing two integers X and Y (-2000 \\u2264 X, Y \\u2264 2000) indicating the coordinates of each supercomputer within the deposit. The input ends with N = 0 and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"New Computers\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should print: \\\"Tera que comprar uma fita de tamanho x.\\\", Where x is the total of tape required to cover all computers, with two decimal places.\\n\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Victor Jatob\\u00e1, UNIME  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tEveryone is talking about the Jatoba Teacher classes. The MEC representatives came to the UNIME of Lauro de Freitas to know more details about this new way of teaching algorithms. In addition, they wanted to select one student to participate in the OBI-Tec (Olympiad Informatics Technical Level) and represent Kroton in the competition, because they know that there are the best. To select the best, they have available a list of the registration number of each student and their respective notes in the discipline. Your task is to help the Ministry of Education staff to find students better able to represent the institution and who knows guarantee your place. If the highest score is not greater than or equal to 8, you should print \\\"Minimum note not reached\\\" .\\n\\t\\t\\t\\t\",\n    \"id\": 1983,\n    \"input\": \"\\t\\t\\t\\t\\tThe file first contains the number of students (3 <= n <= 100) and then the n students bearing the registration number (0 < m < 1000000) each, followed by the note (0 <= note <= 10.0, with 1 decimal place).\\n\\nObs .: the notes will not be repeated. In other words, has no chance to have two students with the same note.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"The Chosen\",\n    \"output\": \"\\t\\t\\t\\t\\tYou must print the student's registration number with the highest score or \\\"Minimum note not reached\\\" (without quotes) if no student has taken greater note than or equal to 8.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Victor Jatob\\u00e1, UNIME  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tNASA scientists have discovered a new exoplanet which is 1 billion light years from earth. The name of this planet was named Pronal\\u00e2ndia in honor of the young scientists being formed in PRONATEC. But the most amazing is yet to come. Observing the planet they were able to identify that the inhabitants of Pronal\\u00e2ndia were trying to communicate with a number. But the number who have found is reversed and how they found many of them, they called you to be able to automate this process. Thus, given a number, your task is to print the invert number.\\n\\t\\t\\t\\t\",\n    \"id\": 1984,\n    \"input\": \"\\t\\t\\t\\t\\t\\u00a0The file contains only a test line which is the number found (0 < n < 9999999999).\\n\\nNote.: the read number is too high to store in a variable of type int, so you will need to use the long type, for reading and printing in C, you should use the %llu.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Pronal\\u00e2ncia Puzzle\",\n    \"output\": \"\\t\\t\\t\\t\\tprint read number inverted. Do not forget to print the end of line (\\\\n) else you will receved the Presentation Error message.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Victor Jatob\\u00e1, UNIME  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tThe MacPRONALTS is with a super promotion, exclusive to the contestants of the first Selective MaratonaTEC. But they had a problem, all runners were trying to buy at the same time, so this generated a very long queue. The worst is that the cashier girl no have calculator or a program to help her to calculate more quickly. You are the person that will help the girl and the MacPRONALTS increase their sells. Bellow has a menu day, that contains the product number and its value.\\n\\n1001 | R$ 1.50\\n\\n1002 | R$ 2.50\\n\\n1003 | R$ 3.50\\n\\n1004 | R$ 4.50\\n\\n1005 | R$ 5.50\\n\\t\\t\\t\\t\",\n    \"id\": 1985,\n    \"input\": \"\\t\\t\\t\\t\\tThe first entry is reported the number of purchased products (1 <= p <= 5). For each product follows the quantity (1 <= q <= 500) that the customer purchased.\\n\\nObs .: the product number will not be repeated.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"MacPRONALTS\",\n    \"output\": \"\\t\\t\\t\\t\\tYou must print the purchase amount with two decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor Alex Paix\\u00e3o, UNIME  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the movie \\\"The Martian,\\\" the astronaut Mark Watney is presumed dead after being caught in a storm, which was left behind while the rest of the team plan to evacuate the planet and return to Earth. Watney is so alone and abandoned, with some provisions and his wit, skill and spirit to survive and find a way to send a signal to home, knowing that even if they know that he is alive, it is very vague hypothesis of a rescue.\\n\\n\\t\\t\\t\\t\\tWatner, still alive, needed to contact NASA to tell he was still alive, but the place where he had no means of communication with Earth, it was then that he remembered the Pathfinder mission that the ship landed on the Red Planet on 4 July 1997 and released a small rover with six wheels, called Sojourner, to study the neighboring land. The mission had a duration of a few weeks but it turned out to last almost three months. The ship reported for the last time with the teams on Earth on 27 September. He analyzing on the map realized that the Pathfinder was near its \\\"station\\\", then the same thought of using it as communication.\\n\\n\\t\\t\\t\\t\\tHowever, the only communication that there was it was a camera that rotate 360 degrees on its axis, to register and send photos on Mars for NASA, as the distance from Earth to Mars are 55.76 million square kilometers (it's not exact because it depends on the position of the rotation of the earth as a reference SOL), a message that is sent from Earth to Mars lasts a time of 30 minutes (technology of the time), it is now smaller, and believe me, the message was walking at the speed of light when creating the Fold (Star Trek) this will be quiet.\\n\\n\\t\\t\\t\\t\\tWatner had an idea, as the camera rotates 360 degrees, he established at each point equidistant in the circle, a hexadecimal value, where the camera would point the desired code, in a split second, and Watner would annotate and check lestra corresponding in his ASCII table, as shown below.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYou have been selected to work at NASA and you\\u2019ll have to help Watner to survive, make a program that converts into hexadecimal to character to translate the message, the letters are only \\\"az\\\" 26 characters.\\n\\n\\t\\t\\t\\t\\tExample: n = 3, then we'll have three pairs of hexadecimal \\\"61 6F 6C\\\", and it is found in the table the letters corresponding to the 6F =, 6C = le 61 = a, turning into \\\"hello\\\".\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 1986,\n    \"input\": \"\\t\\t\\t\\t\\tIt will have a number n (1 <= n <= 100) indicating the word length, and \\\"n\\\" times two hexadecimal places, which means a letter.\\n\\n\\t\\t\\t\\t\\tSee the example below:\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"The Martian\",\n    \"output\": \"\\t\\t\\t\\t\\tOnly the translated message\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Alex Paix\\u00e3o, UNIME  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the world of mathematics to find out if a number is divisible by another there is a rule called severability rule. A natural number is divisible by 3 as the sum of all its digits forms a number divisible by 3, i.e. a multiple of 3 .\\n\\nEx1: 1.104 is divisible by 3?\\n\\nAnswer: \\u201cYES\\u201d. It is divisible by 3 , when added as their numbers : 1 + 1 + 0 + 4 = 6 , which is a number divisible by 3 (because 6 \\u00f7 3 = 2, which is a natural number).\\n\\nEx1: 2.791.035 is divisible by 3?\\n\\nAnswer: \\u201cYES\\u201d . 2791035 consists of figures added : 9 + 7 + 2 + 1 + 0 + 3 + 5 = 27 , generates a number divisible by 3 (because 27 \\u00f7 3 = 9 , natural number).\\n\\n\\n\\t\\t\\t\\t\",\n    \"id\": 1987,\n    \"input\": \"\\t\\t\\t\\t\\tThe input file contains two numbers n (1< n <10) indicating the number of digits m, (1< m < 1000000000). \\n\\t\\t\\t\\t\\tThe input ends with end of file (EOF).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Divisibility by 3\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should provide the number of the sum of the digits of m and after presenting \\\"sim\\\" if the number is divisible by 3 or \\\"nao\\\" if not. Do not forget the finish line after the product, otherwise your program will display the message: \\\"Presentation Error\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Joaquin Rodrigues, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"Everyone is aware of the existence of the well known Nordenskjold Archipelago, located in the Arctic Ocean and belonging to the Krasnoyarsk Krai of Russia. This archipelago consists of a groups of N islands and M aquatic routes between some pairs of islands. Each route connects a pair of islands and for each pair there is at most one route connecting them.\\n\\n                    Considering the popularity of Nordenskjold Archipelago, Krasnoyarsk's authorities are concerned about its touristic value. The touristic value of the archipelago is given by the total number of islands that belong to at least one \\u201ctouristic circuit\\u201d. A touristic circuit is a path starting and ending in the same island that visits at least three different islands, never visits the same island more than once and uses just aquatic routes to go from one island to the next one.\\n\\n                    Krasnoyarsk's authorities want to know the minimum number of additional aquatic routes that must be built so that every island belongs to at least one touristic circuit. Your task is to write a program that answers this question.\",\n    \"id\": 1988,\n    \"input\": \"The input contains several test cases. Each test case is described in several lines. The first line contains two integer numbers N and M (3 <= N <= 100, 1 <= M <= 1000) which indicate the number of islands and the number of aquatic routes, respectively. Each island is identified by a number between 1 and N. Each of the next M lines contains two integers U and V (1 <= U < V <= N), indicating that there is an aquatic route connecting islands U and V. You may assume that in each test case there is at most one aquatic route connecting the same pair of islands. The last line of the input contains the number -1 twice and should not be processed as a test case.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Tourists Circuits\",\n    \"output\": \"For each test case output a single line with an integer representing the minimum number of additional aquatic routes that must be built so that every island belongs to at least one touristic circuit.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo A. Heiber, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"A young couple uses to make their time as productive as possible. This activity is quite stressful, so they decided to \\\"waste\\\" some time watching their favorite TV series.\\n\\n                    The series has N seasons, and each season has a possibly different number of chapters according to its success, actors availability, production time and other external factors. Each chapter has a duration of exactly M minutes.\\n\\n                    To keep up with the plot, before watching each new season, they watch, without any rest, all the chapters of all the previous seasons. This has just made them concern about how much time they will be spending with this hobby, which should keep them calm. They need your help so they don't get back to the stressful situation they had.\",\n    \"id\": 1989,\n    \"input\": \"The input contains several test cases. Each test case is described in two lines. The first line has two integers N and M representing respectively how many seasons the series has and the duration in minutes of each chapter (1 <= N <= 105, 1 <= M <= 106). The next line has N integers C_i representing how many chapters each season has sorted chronologically. (1 <= C_i <= 100 for 1 <= i <= N). The last line of the input contains the number -1 twice and should not be processed as a test case.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Doing Nothing\",\n    \"output\": \"For each test case output a single line with an integer representing the number of minutes the couple spends in watching the whole series.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo A. Heiber, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The mean and the median usually confuse the students because of their similar spelling, but they are quite different concepts. In this problem we are going to work with the mean and the median of a set consisting of N pairwise distinct integers, where N is odd. The mean of such set is defined, as usual, as the sum of the numbers divided by N, while the median is the unique element in the set that is greater than (N-1)/2 of its elements, and less than the other (N-1)/2 elements in the set. For instance, if the set is {0, 2, 6, 4, 13}, then the mean is 5 while the median is 4.\\n\\n                    We aim to make student's lives easier by generating \\\"balanced\\\" sets, that is, sets consisting of an odd number of pairwise distinct integers where the mean and the median coincide. For example, the set {0, 2, 6, 4, -2} is balanced, since it has N=5 different integers, and the mean and the median are both equal to 2.\\n\\n                    The following procedure has been suggested in order to obtain balanced sets. A set with an even number of distinct integers is chosen, and an extra integer distinct from every element in the set is added to it, in such a way that the resulting set is balanced. We want you to check if the given procedure works. Therefore your task is, given N-1 distinct integers, with odd N, count the number of balanced sets that can be formed by following the described procedure.\",\n    \"id\": 1990,\n    \"input\": \"The input contains several test cases. Each test case is described with two lines. The first line contains a single odd positive integer N that indicates the number of elements the balanced set must have (3 <= N <= 499). The second line contains N-1 distinct integers Z_i that represent the given elements of the set (-1014<= Z_i <= 1014 for 1 <= i <= N-1). The last line of the input contains the number -1, and should not be processed as a test case.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Equilibrium\",\n    \"output\": \"For each test case, output line by line with an integer representing the total number of different balanced sets that can be obtained by adding an integer to the given set, as explained in the problem description.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Fidel I. Schaposnik, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"In the Central Area of Macedonia there is a river following the East-West direction. The region's inhabitants want to build a bridge that crosses the river in the North-South direction, a task for which they have contracted the cheapest bridge factory they know, the Short Bridge Construction Company. As shown by its name, this construction company specializes in building the shortest possible bridges for each river.\\n\\n                    The first thing that the company does is to model the river's shores (Northern and Southern). Each of these is considered as being formed by semicircles of varying radii, alternatively oriented to one side or the other, with all their centers collinear. The two lines that are defined by the centers of the semicircles of each shore have the East-West direction, and are separated by a distance A one from the other. The value A is called the width of the river. Note that both shores are aligned, that is, the Northern shore neither begins nor ends further to the West or to the East than the Southern shore.\\n\\n                    In the following figure you can see the model of a certain river. In the Northern shore the semicircle furthest to the West is oriented to the North, whereas in the Southern shore the semicircle furthest to the West is oriented to the South. In each shore the orientations of the following semicircles alternate. The shortest possible bridge in the North-South direction is the one shown.\\n\\n                    \\n                        \\n\\n                    Your task is to help the construction company finding the length of the shortest possible bridge connecting both shores of the river in the North-South direction.\",\n    \"id\": 1991,\n    \"input\": \"The input contains several test cases. Each test case is described by three lines. The first line contains an integer number A, denoting the width of the river in meters (3 <= A <= 104). The second line describes the Northern shore of the river, while the third line describes its Southern shore.\\n\\n                    The description of each shore begins with an integer number C giving the number of semicircles that are used to model that shore (1 <= C <= 1000). This is followed by a character \\\"N\\\" or \\\"S\\\", meaning that the semicircle furthest to the West in this shore is oriented to the North or to the South, respectively. The description ends with C integer numbers R_i, representing the radii in meters of the semicircles that form the shore (1 <= R_i < A/2 for 1 <= i <= C). The semicircles are given in order, from the one furthest to the West (radius R_1) to the one furthest to the East (radius R_C). The orientations of the semicircles alternate between North and South after the first semicircle, whose orientation is given as described above. Assume that in each test case both shores are aligned, which implies that the sum of the radii of the semicircles forming each shore is the same.\\n\\n                    The end of the input is denoted by a line containing the number -1.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Factory of Bridges\",\n    \"output\": \"For each test case, print a single line containing a rational number representing the length in meters of the shortest bridge that connects both shores of the given river in the North-South direction. Round the result to the nearest rational number with 2 decimal digits. In case of ties, round up. Note that you should always print 2 digits after the dot, even if this means ending with a zero.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo A. Heiber, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Gabriela drives a school bus. Being one of the few women who have that job, she is always mocked by the male drivers. To improve her status, she decided that besides driving responsibly she is going to drive more efficiently. Her idea is to finish her route spending as little time as possible, without violating any traffic rule.\\n\\n                    The bus Gabriela drives has a very modern driving system that allows her to adjust the acceleration to any real number instantly. Hence, the acceleration is constant by intervals, jumping to another acceleration whenever Gabriela decides so. If v is the bus' speed at a given instant of time, and a its acceleration that remains constant over a period of time t, then the speed at the end of that period will be v + at. Moreover, the bus will move a distance of at2/2 + vt during that period of time.\\n\\n                    The traffic rules prevent vehicles from using an acceleration greater than A, or a deceleration less than D, i.e. the acceleration a at any time must satisfy -D <= a <= A. Moreover, there are check points along the route of the bus where the speed must lie within a certain given interval.\\n\\n                    Gabriela knows in advance the location of the check points, the total length of the route, and the constants A and D. At the beginning of the route the speed and acceleration of the bus are both 0. There are no additional restrictions regarding the speed or the acceleration the bus must have at the end of the route (in particular, it is not necessary to stop in the end). Your job is to use this data to determine the minimum time that Gabriela needs in order to finish the route without violating the rules.\",\n    \"id\": 1992,\n    \"input\": \"The input contains several test cases. Each test case is described using several lines. The first line of each test case contains four integers N, L, A and D. N represents the total number of check points that are present in Gabriela's route (1 <= N <= 105). L indicates the length of the route in meters (2 <= L <= 107). A and D represent, respectively, the maximum allowed acceleration and deceleration for the bus (1 <= A, D <= 100). Each of the following N lines describe a different check point using three integers X, V and W that represent, respectively, the distance between the check point and the starting point of the route (1 <= X<= L-1), the minimum speed, and the maximum speed allowed for the bus at the time it passes by that check point (1 <= V, W <= 100). Assume that in each test case the check points are given in ascending order of distance from the start point of the route, and no two check points are at the same distance from the start point. In this problem, the length is expressed in m (meters), the speed in m/s, and the acceleration in m/s2. The end of the input is indicated by a line containing the number -1 four times, and should not be processed as a test case.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Gaining Time\",\n    \"output\": \"For each test case, output a single line containing a rational that represents the minimum time (in seconds) needed for Gabriela to finish her route without violating any traffic rule, or an asterisk if it is impossible to do that. Round the answer to the nearest rational with two decimal digits. In case of a tie, round up. Print exactly two digits after the decimal point, even if that means ending the number with 0's.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo A. Heiber, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"As we all know, Humberto is really lazy. He is so lazy that he sticks his nose out of the window so that the wind will blow it for him. Obviously, he hasn't worked at all in his whole life. However, he got lucky and won a lot of money in the lottery. With some of that money he bought an empty field, and made build several houses inside of it, where he moved with his family and friends. Thus, Humberto can go in a straight line from any point in his field to any other, without having to make detours because of urban design (for the sake of simplicity, we consider the objects in Humberto's field as dots, so they don't interfere in Humberto's way).\\n\\n                    Sadly, that was not enough for Humberto, so in order to walk even less he decided to have installed some catapults in strategic points of his field. Each catapult can send him from the point where it is installed, to any point at a certain fixed distance (that depends on the range of the catapult).\\n\\n                    But, in spite of simplifying his life, the catapults made the task of choosing a way in the field a real headache, because Humberto wants to walk as less as possible. As tired as he is of all his problems, he decided to use the rest of his money to hire you to tell him the minimum distance he has to walk to move from a given point in the field to another.\",\n    \"id\": 1993,\n    \"input\": \"The input contains several test cases. Each test case is described in several lines. The first line contains five integers N, P_X, P_Y, L_X and L_Y. N represents the number of catapults in the field (1 <= N <= 100). The pair (P_X, P_Y) indicates the coordinates in the XY plane ot the starting point for Humberto, while the pair (L_X, L_Y) indicates analogously the destination point (1 <= P_X, P_Y, L_X, L_Y <= 109). Each of the next N lines describes a different catapult, using three integers C_X, C_Y and F, that indicate the point (C_X, C_Y) where the catapult of strength F is installed. This means that Humberto may move, without walking, from the point (C_X, C_Y) to any point in the plane that is at a distance of exactly F from (C_X,C_Y). Assume that in each test case all the points given in the plane are different. The end of the input is indicated by a single line containing the number -1 five times, and it should not be processed as a test case.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"He is Lazy\",\n    \"output\": \"For each test case, output a single line containing a rational number that represents the minimum distance Humberto has to walk in order to get from the starting point to the destination point, using some or none of the catapults. Round the answer to the nearest rational with two decimal digits. In case of a tie, round up. Print exactly two digits after the decimal point, even if that means ending the number with 0's.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Joaquin Rodrigues, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"The ambition of conquest and expansion is a very well known disease in planet Earth... and also in the entire universe.\\n\\n                    In planet \\u201cImperius\\u201d several fortresses have been built one at a time and each one of them but the first was connected at the moment of its construction to a previously built fortress by a direct path, for commercial purposes.\\n\\n                    Imperius was becoming one of the most peaceful and prosperous planet in the universe, until they built no more fortresses. At that moment, N different empires emerged (numbered from 1 to N), each one of them dominating a different fortress. And the thirst of conquest took Imperius. Thus, every year, exactly one of the living empires conquers every neighbor empire, and dominates every fortress belonging to them. Two empires are considered neighbors if there exist two fortresses joined by a path, each one dominated by one different empire of these two.\\n\\n                    Eventually a single empire will dominate every fortress. Your task is to find the minimum number of years such that this can happen.\\n\\n                    As an example, on the left side of the figure below a possible scenario in which six fortresses are initially dominated by six different empires is shown. Each fortress is tagged with the identification number of the empire dominating it. If empire 2 conquered every neighbor on the first year, the the situation would be as in the central figure. Finally, if empire 5 conquered his neighbor empires, it would end up dominating every fortress, as seen on the right side of the figure.\\n\\n                    \\n\",\n    \"id\": 1994,\n    \"input\": \"The input contains several test cases. Each test case is described in two lines. The first line contains an integer N (2 <= N <= 104) representing the number of fortresses in planet Imperius. The next line contains N-1 integers P_i indicating that the fortress i+1 was connected to fortress P_i (1 <= P_i <= i for 1 <= i <=N-1). The last line of the input contains a single -1 and should not be processed as a test case.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Imperialism\",\n    \"output\": \"For each test case output a single line with an integer representing the minimum number of years such that a single empire may dominate every fortress.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Fidel I. Schaposnik, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The Modern Club Association organizes every year a tournament of CompuTenis, which is a sport specially adapted to a public without any mensurable physical qualities. The rules of CompuTenis are very complex (suffices to say that they involve coding with your elbow glued to your ear), but fortunately it is not necessary to know them in detail to solve this problem. You just need to know that in a CompuTenis match two players oppose each other, and the match is won by the player that first wins S sets; in turn, each set is composed of several games, and to win a set a player must win at least J games, with a difference of at least D more games won than the opponent.\\n\\n                    The tournament has K rounds, and there are N = 2K players in it, who all participate in the first round. In each round each of the remaining participating players is paired with another participating player, in order to play a single match. The winning player of each of these matches advances to the next round, whereas the losing player is automatically disqualified from the tournament. The winner of the only match of round K is thus the winner of the tournament.\\n\\n                    It is desirable to make the tournament as long as possible, considering that the matches are broadcast on television and the Association is paid for every minute on air. Given any pair of different players, the Association knows the probability for one of them to win a game against the other. You are a member of the organizing committee, and your task is to prepare the fixture for the matches of each round in order to maximize the expected number of games played in the tournament. Doing this involves deciding which pairs of players will play a match in the first round, and then for each of the following rounds deciding which pair of matches from the previous round will provide the winning players for each match in that round. Note that this can only depend on the identification of the matches in the previous round. The following figure shows a possible fixture for K = 3 rounds and N = 23 = 8 players.\\n\\n                    \\n                        \\n\\n                    For the moment, the Association only wants to estimate their earnings, so it is sufficient to tell them the maximum expected number of games that can be played in the tournament.\",\n    \"id\": 1995,\n    \"input\": \"The input contains several test cases. Each test case is described using several lines. The first line contains four integer numbers, K, S, J and D. The value K denotes the number of rounds in the tournament (1 <= K<= 3). The value S denotes the number of sets that a player must win to win a match (1 <= S <= 10). The value J denotes the minimum number of games that a player must win in order to win a set, whereas Dindicates that a player should win D more games than its opponent for him to win the set (1 <= D <= J <= 100). The players are identified by different integer numbers from 1 to N = 2K. Each of the following N lines contains N values.\\n\\n                    In the i-th line, the j-th value is an integer number P_ij such that p_ij = P_ij/100 is the probability that player number i wins a game against player number j (0 <= P_ij <= 100 for 1 <= i, j <= N). You may assume that P_ii = 0 (no player opposes himself) and that P_ij + P_ji = 100 for i and j different.\\n\\n                    The end of the input is denoted by a line containing four times the number -1.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Game, Set and Match\",\n    \"output\": \"For each test case, you should print a line containing a rational number representing the maximum expected number of games that the given tournament can have. The result should be rounded to the nearest rational number with 2 decimal digits. In case of ties, round up. Note that you should always print 2 digits after the dot, even if this means ending with a zero.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Pablo A. Heiber, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The International Canvas Preparation Committee (ICPC) has a peculiar procedure for setting up its canvases. The procedure depends on a bidimensional view of the canvases.\\n\\n                    A given canvas is set up using N poles of different heights. To set up the canvases, the ICPC uses the following procedure. First, N+2 points are marked on the floor, all on the same line, so that two consecutive points are always separated by a distance of exactly two feet. Afterwards, a pole is placed vertically over each of the N central points. Finally, the canvas is extended over the poles, joining the upper end of each pole with the upper end of neighboring poles. The first and last poles are joined with the free points on the floor.\\n\\n                    The next figure shows 3 possible ways of setting up a canvas using the instructions mentioned before, with pole heights of 4, 5, 7, 8 and 9.\\n\\n                     \\n                        \\n\\n                    After years of hard work, the ICPC came to the conclusion that in order to obtain useful and sturdy canvases, it is necessary that the angle formed by two consecutive patches of canvas at the end of a pole, measured towards the inside, is strictly less than 180 degrees. In the figure shown, only the canvas on the left satisfies this condition. The canvas in the middle has an angle greater than 180 degrees at poles of heights 4 and 7, while the canvas on the right has an angle of exactly 180 degrees at the pole of height 8. We say a canvas is valid when it adheres to the ICPC recommendation.\\n\\n                    Of course, given the number of poles and their heights, there are a lot of different ways of placing them, some of which will produce valid canvases and some of which will not. The task at hand is to, given this data, count the number of different valid canvases which can be set up. Two valid canvases are considered different if the sequence of heights of the poles in one of them, read from left to right, is different from the sequence of heights of the other one, read in the same way.\",\n    \"id\": 1996,\n    \"input\": \"The input contains several test cases. Each test case is described on two consecutive lines. The first line contains one integer N which indicates the number of poles (1 <= N <= 60). The second line contains N integers H_i representing the heights of the poles in feet (1 <= H_i <= 109 for 1 <= i <= N). The last line of the input contains a single -1 and should not be processed as a test case.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"A Canvas Building\",\n    \"output\": \"For each test case output a single line with an integer representing the number of different valid canvases which can be set up using the given poles.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo A. Heiber, Universidad de Buenos Aires  Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The famous game Black and White is a solitaire which is played using a set of identical chips. Each chip has two faces with different colors. Surprisingly enough, those colors are black and white.\\n\\n                    The game starts by placing N chips forming a single line. There exists an objective pattern which is a given sequence of N colors black or white. In a single move, the player can choose a group of consecutive chips and invert their color, in other words, for each chip in the group, the color which was facing up, is facing down and the one which was facing down is facing up. The game finishes when the facing up colors of the chips are equal to the objective pattern.\\n\\n                    Barby has just discovered this game and soon she realized that you can always won by inverting each chip individually if needed. To make this game more challenging to her, she wanted to win in the least possible number of moves. Note that Barby just cares about how many moves she makes, and it doesn't matter how many chips are inverted in each move. To know how well is Barby playing, she asked you to make a program that given the chip's initial position and the objective pattern, shows the least possible number of moves to win the game. Are you going to say no?\",\n    \"id\": 1997,\n    \"input\": \"The input contains several test cases. Each test case is described in a single line that contains two non-empty words S and T of equal size and at most 500 letters each. S indicates the chip's initial position while T represents the objective pattern. Both words only contain uppercase letters \\\"B\\\" and \\\"N\\\", representing respectively White and Black. The last line of the input contains two asterisks separated by a single space and should not be processed as a test case.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Black and White\",\n    \"output\": \"For each test case output a single line with an integer representing the least possible number of moves such that you can change the chip's which are initially positioned as described in S to form the pattern given by T.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Fidel I. Schaposnik, Universidad Nacional de La Plata   Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Awari is a one-player game from the Antilles, which is played with boxes and stones instead of cards. A particular variant of Awari is played with N boxes numbered from 1 to N, each containing at the beginning of the game zero or more stones. The rules of this game are very simple, because there is only one type of valid move, consisting of choosing a box numbered i containing exactly i stones, and then taking those stones from the box in order to use them to add a single stone to every box numbered 1 through i-1; the remaining stone is then kept by the player. These moves are applied in succession as long as there exists a box i containing exactly i stones. When this is no longer true, the game ends. The player wins if at this stage every box is empty, and looses otherwise.\\n\\n                    In the following figure, on the left hand side there is a possible initial state of a game with N = 5 boxes (the circles) containing P1 = 0, P2 = 1, P3 = 3, P4 = 0 and P5 = 2 stones (the black dots). If box number 3, containing P3 = 3 stones, was chosen to make the next move, then the resulting configuration would be the one shown on the right hand side of the figure. Additionally, the player would now have one stone in his power.\\n\\n                    \\n\\n                    Given the initial state of the boxes, you should determine if it is possible to win the game, that is, if there is a sequence of valid moves after which all the boxes are left empty.\",\n    \"id\": 1998,\n    \"input\": \"Each test case is described using two lines. The first line contains an integer N, indicating the number of boxes (1 \\u2264 N \\u2264 500). The second line contains N integer numbers Pi, representing the number of stones in the boxes at the beginning of the game, from box 1 to box N in that order (0 \\u2264 P_i \\u2264 500 for i = 1, ..., N). In every test case there is at least one non-empty box, that is there exists i from 1 to N such that Pi \\u2260 0. The end of the input is signalled by a line containing the number -1.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Awari 2.0\",\n    \"output\": \"For each test case, you should print a single line containing a single character. This character should be the uppercase letter 'S' if it is possible to win the game; otherwise, it should be the uppercase letter 'N'.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Fidel I. Schaposnik, Universidad Nacional de La Plata   Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Every year the kingdoms of Cubiconia, Quadradonia and Nlogonia organize a ball to commemorate the end of the war that ravaged the region for many years. A certain number of noblemen of each kingdom is invited to participate in this event, and it is expected that every pair of guests coming from different kingdoms will dance together exactly once. That is, each of the guests from Cubiconia shall dance once with every guest from Quadradonia and Nlogonia; in turn, each of the guests from ;Quadradonia shall also dance once with every guest from Nlogonia. However, guests coming from the same kingdom are not allowed to dance with one another.\\n\\n                    To help organize the ball, the total number of dances that will take place is determined beforehand, so that care must be taken when choosing the number of noblemen that shall be invited from each kingdom. For example, if it is decided that the ball must have N = 20 dances, one possibility is to invite 6 noblemen from Cubiconia, 2 from Quadradonia and 1 from Nlogonia, which can be represented by the expression(6, 2, 1). This is a valid option because the total number of dances would then be 6*2 +6*1+ 2*1 = 20.\\n\\n                    Traditions whose origins nobody can now remember indicate that the number of invited noblemen from Cubiconia must be greater or equal to the number of those coming from Quadradonia, and at the same time the number of invited noblemen from Quadradonia must be greater or equal to those coming from Nlogonia. Thus, for N = 20 dances there are exactly 5 possible ways to choose the number of guests from each kingdom, namely (5, 4, 0),(4, 2, 2), (10, 2, 0) and (20, 1, 0) as well as the aforementioned (6, 2, 1).\\n\\n                    With so many restrictions, the organizing committee has problems finding the ideal way to choose the number of guests from each kingdom. Your task is to help this committee by counting the different ways in which the number of guests can be chosen for a ball with N dances. Two of these ways are considered different if they differ in the number of invited noblemen from at least on of the three kingdoms.\",\n    \"id\": 1999,\n    \"input\": \"Each test case is described using a single line, containing an integer N representing the total number of dances that the ball must have (1 \\u2264 N \\u2264 104). The end of the input is signalled by a line containing the number -1.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Ball of Reconciliation\",\n    \"output\": \"For each test case, print a single line containing the number of different ways in which the number of guests from each kingdom can be chosen in order to have a ball where there are exactly N dances, with all the restrictions mentioned in the problem statement.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Vitor Martins, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tAdeildo do dentistry, but his real passion is for strings. It has several favorite strings. In one of his classes he met a colleague who is also a fan of strings, and that also has your favorite strings. He wondered if the strings have something in common. He asked you to find out whether two strings have the same amount of different substrings.\\n\\t\\t\\t\\t\",\n    \"id\": 2000,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input row contains a T integer representing the number of test cases. Each test case consists of two lines. Each of the two lines has a non-empty string of size up to 100000, containing only lowercase letters of the alphabet.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Adeildo of Odonto\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print a line with \\\"s\\\" (without quotes) if the two strings have the same amount of different substrings and \\\"n\\\" otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Alisson Soares, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tBile is a smart kid who likes quite recurrences. He was participating in a competition in which the best sequence wins a prize. Bile created a sequence F, in the sequence, the first N values are known, and to discover the value of Fk for a K  N is used to formulate below.\\n\\n\\n\\nFor N  K: FK = 1*FK-1 + 2*FK-2 + ... + N*FK-N\\n\\n\\n\\nBut he does not know calculate quickly the values of their sequence and asked for your help.\\n\\n\\nIn the first test case: N = 2, K = 3, F1 = 2, F2 = 5, F3 = F2 + 2*F1 = 9, F4 = F3 + 2*F2 = 19 ...\\n\\t\\t\\t\\t\",\n    \"id\": 2001,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case consists of two lines. The first line of each test case contains two integers, N ( 2 \\u2264 N \\u2264 100 ) and K ( N \\u2264 K \\u2264 1018 ), representing the number of values of the first known sequence Bile. The second line consists of N integers Fi ( F1, F2, \\u2026 ,FN ) and ( 0 \\u2264 Fi \\u2264 1010 ) representing the values initially known. The entry ends with the final file (EOF).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Bile\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should to print the value FK and the sum of all elements of bile function minor or equal to FK, separated by a single space. Your answers should be submitted in module 303700049.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tRogerio is a very smart and mischievous boy. He likes to use his spare time to create board games. The last game created by Rog\\u00e9rio was the \\\"Rogerio's House\\\".\\n\\n\\nIn this game, the board has size NxM. Each cell of the board has an integer value. Rogerio (game character) begins in the upper left cell and the Rogerio's house in the lower right cell. The goal is to move Rog\\u00e9rio to the house with the lowest possible cost.\\n\\nEach round, you can move Rogerio to one of the adjacent cells (not allowed Rogerio move in diagonals). The cost to move Rogerio a cell with value X for a cell with value Y is defined by the function C(X, Y).\\n\\n\\n\\n\\n\\tC(X, Y) = min(X,Y) XOR (min(X,Y)+1) XOR ... XOR max(X,Y).\\n\\n\\n\\nNote that if X equals Y, C(X, Y) = X. XOR is a binary operation known as \\\"exclusive or\\\".\\n\\nTo facilitate the understanding of the function C(X, Y), your code in C ++ is presented below:\\n\\n\\n\\n\\n\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2002,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. The first line of each test case contains two integers N (1\\u2264 N \\u2264 100) and M (1 \\u2264 M \\u2264 100), representing the board size.\\n Then, N lines, each with N integers, representing the values of board cells (the value of each cell may vary from 1 to 1000000000000). The input ends with the final file (EOF). It's guaranteed that the answer can be represented by a 64-bit signed integer.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Rogerio's House\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the lowest cost of moving Rogerio to Rogerio's House.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tSunday is market day. Early in the morning many people move to the Parangaba square where happens a fair, known to be the largest in the city. At the fair the Parangaba you can find everything.\\nEvery Sunday, Bino make purchases at the fair. He always mark with his friend Cino, they met at the bus terminal of Parangaba at 8 am to go together to buy at the fair. But often Bino wake up too late and is late for the meeting with his friend.\\nKnowing that Bino takes 30-60 minutes to reach the terminal. Tell the maximum delay Bino.\\n\\t\\t\\t\\t\",\n    \"id\": 2003,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of multiple test cases. Each case contains a single line containing a time H (5:00 \\u2264 H \\u2264 9:00) that Bino woken up. The input ends with the final file (EOF).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Sunday Morning\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print \\\"Atraso maximo: X\\\" (without quotes), X indicates the maximum delay (in minutes) of Bino in the encounter with Cino.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Vitor Martins, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tEnisvaldo always been a very skinny boy. He always ate little, and ate only bread with egg. One day he went to the doctor and discovered that he had a kidney stone that had to be surgically removed.\\n\\nHe decided it was time to change your diet, and eat properly. He went to the nutritionist, who gave him several tips. It is harmful to health consume more than 100g or less than 10g of the same type of food per day. But if you can not consume the right amount, it should preferably eat as much as possible the type of food.\\n\\nThe nutritionist also said it is very important to eat as much as possible of different types of food. The Enisvaldo mother always did the shopping for him, but this time he wanted to do the shopping for choosing foods he will eat that day. Enisvaldo was doing the shopping but realized he had little money, so he could only buy one of each food type, but he wanted to consume the largest amount of food possible.\\n\\nAs Enisvaldo is unable to find out the amount in grams of food that he can consume, thus you should to help him. Given a list of foods, each with its respective food type and weight, you should to say the maximum quantity in grams which Enisvaldo should consume. Remember, Enisvaldo can eat only one food for each type.\\n\\t\\t\\t\\t\",\n    \"id\": 2004,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line contains a value of Q, which is the amount of test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 1000) representing the amount of different foods at the supermarket. Each of the next N contains two integers T (1 \\u2264 T\\u2264 100) and P ( 1 \\u2264 P \\u2264 1000 ), representing the type and weight of food, respectively.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Enisvaldo's Hunger\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, you should to print larger amount of food in grams that Enisvaldo should consume.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, Universidade Estadual do Cear\\u00e1  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tFracil have a breeding N mice and has M foods to feed them.\\nEach mouse has a level of hunger.\\nEach food has a level of support.\\nWhen a rat with level of hunger h is fed with food with higher support level than or equal to h, the mouse is satiated and your hunger level is reset to zero.\\nWhen a rat with level of hunger h is fed with food with lower support level than h, the new hunger level is h-s.\\n\\nTo feed your rats, Fracil follow a strategy:\\n\\n\\n\\tThe food will be provided to the rats in sequence, first comes the food with index 1, then the index 2 and so on.\\n\\tFracil prefers feed the mice that have the highest level of hunger and can be satiated with the food.\\n\\tIf you have neither a mouse that can be satiated, Fracil prefers to feed the mice with higher levels of hunger.\\n\\tEach food can only be provided once and without division (can not supply parts from one food to different mice).\\n\\n\\n \\n\\nFracil want to know how much mice will be satisfied when they finish the food.\\n\\t\\t\\t\\t\",\n    \"id\": 2005,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. The first line of each test case contains two integers N (1 \\u2264 N \\u2264 1000) and M (1 \\u2264 M \\u2264 1000),\\nrepresenting the amount of rats and the amount of food.\\nThe second line of each test case contains N integers representing hunger levels of mice (1 \\u2264 hi \\u2264 1000).\\nThe third line of each test case contains M integers, representing food support levels (1 \\u2264 si \\u2264 1000). The input ends with the final file (EOF).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Upset Fracil\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the amount of satiated mice.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy In\\u00eas Kereki  Uruguay\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tBlind tea tasting is the skill of identifying a tea by using only your senses of smell and taste.\\n\\nAs part of the Ideal Challenge of Pure-Tea Consumers (ICPC), a local TV show is organized. During the show, a full teapot is prepared and five contestants are handed a cup of tea each. The participants must smell, taste and assess the sample so as to identify the tea type, which can be: (1) white tea; (2) green tea; (3) black tea; or (4) herbal tea. At the end, the answers are checked to determine the number of correct guesses.\\n\\nGiven the actual tea type and the answers provided, determine the number of contestants who got the correct answer.\\n\\t\\t\\t\\t\",\n    \"id\": 2006,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer T representing the tea type (1 \\u2264 T \\u2264 4). The second line contains five integers A, B, C, D and E, indicating the answer given by each contestant (1 \\u2264 A, B, C, D, E \\u2264 4).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Identifying Tea\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with an integer representing the number of contestants who got the correct answer.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Pablo Ariel Heiber  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tAt the early age of 40, Alice and Bob decided to retire. After more than two decades working as examples for networking protocols, game theoretical books and several other texts, they were tired. To remain active, they decided to get into gardening.\\n\\nAlice and Bob planted several vegetable plants in a huge field. After finishing, they realized that their plants needed protection from wild animals, so they decided to build a fence around them. The field is represented as the XY plane, and each vegetable plant as a different point in it. A fence is represented as a polygon in the plane. However, not every polygon is a valid fence. The fence needs to be a single simple polygon with each of its sides parallel to one of the axes. Of course, the polygon should contain all the points representing vegetable plants. A fence too close to the plants or to itself could make it difficult to walk around, so each side of the polygon needs to be away from all plants and all non-adjacent sides.\\n\\nUnfortunately, Alice and Bob subcontracted the construction of the fence to a nasty multinational. The company had a lot of lawyers on payroll, but no good fence designers, so they failed to comply to all requirements. They built a fence which is a simple polygon with sides parallel to the axes and whose sides are away from plants and itself. However, they forgot to make the fence contain all the plants!\\n\\nAlice and Bob want to assess the extent of the problem. Since not all plants are equally valuable to them, they want to know the total value of the plants that were left outside the fence\\n\\t\\t\\t\\t\",\n    \"id\": 2007,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers P and V , representing respectively the number of plants and the number of vertices of the polygonal fence (1 \\u2264 P, V \\u2264 105 ). Each of the next P lines describes a different plant with two integers Xp and Yp, indicating the coordinates of the plant (\\u2212109 \\u2264 Xp, Yp \\u2264 109 ). The value of the p-th plant in the input is p, for p = 1, 2, . . . , P. Each of the next V lines describes a vertex of the fence with two integers Xv and Yv, indicating the coordinates of the vertex (\\u2212109 \\u2264 Xv, Yv \\u2264 109). Vertices are given in counter clockwise order. Each of these points is an actual vertex of the polygon, that is, it is not collinear with its two adjacent vertices. The represented polygon is a simple polygon with each side parallel to an axis. No two plants are in the same position, and no plant lies on a fence\\u2019s side.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Fence the Vegetables Fail\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with an integer representing the sum of the values of all the plants that lie outside the fence.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Walter Erqu\\u00ednigo Pezo  Peru\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Central Committee in Nlogonia is formed by many congress members. As the political system is dichotomic, each congress member belongs to one of two parties: the Deadly Serious Party and the Party! Party! Party. Historical tradition calls them DSP and PPP, respectively.\\n\\t\\t\\t\\t\\t\\nEdward is an investigative journalist. He discovered that congress members are corrupt and will switch parties if offered a given amount of Nlogmoney to do so. Each congress member has his or her own specific price, but they all have a price. As usual in politics, there exist rivalries between some pairs of congress members. Rivals would never accept to be in the same party.\\n\\nEdward has a budget and wants to use it to make some congress members switch parties, thus gathering indisputable evidence for his investigation. In doing so, he has to respect rivalries: after everyone who was offered money switches, rivals must be left belonging to different parties.\\n\\nEdward wants to cause maximum impact. Can you help him find out the maximum number of congress members that can belong to DSP if he uses at most all of his budget towards that goal? Similarly, what is the maximum number of congress members that can belong to PPP under the same constraints?\\n\\t\\t\\t\\t\",\n    \"id\": 2008,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases; each test case is formatted as follows.\\nThe first line contains four integers D, P, R and B, representing respectively the number of congress members that initially belong to DSP (1 \\u2264 D \\u2264 100), the number of congress members that initially belong to PPP (1 \\u2264 P \\u2264 100), the number of rivalries among congress members (1 \\u2264 R \\u2264 2000), and the budget of the journalist expressed in Nlogmoney (1 \\u2264 B \\u2264 104 ). Members of DSP are identified with distinct integers from 1 to D, while members of PPP are identified with distinct integers from 1 to P. The second line contains D integers S1, S2, . . . , SD, indicating that member i of DSP will switch parties if offered Si Nlogmoney (1 \\u2264 Si \\u2264 100 for i = 1, 2, . . . , D). The third line contains P integers T1, T2, . . . , TP , indicating that member j of PPP will switch parties if offered Tj Nlogmoney (1 \\u2264 Tj \\u2264 100 for j = 1, 2, . . . , P). Each of the next R lines describes a rivalry with two integers X and Y , representing that member X of DSP and member Y of PPP are rivals (1 \\u2264 X \\u2264 D and 1 \\u2264 Y \\u2264 P).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Exposing Corruption\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case in the input, output a line with two integers representing the maximum number of congress members that can belong to DSP using the given budget and, similarly, the maximum number of congress members that can belong to PPP using the given budget.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jorge Enrique Moreira Broche  Cuba\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJurgen Guntherswarchzhaffenstrassen is known for his virtuous guitar playing and the cruel teaching methods he employs with his students. What most people ignore about him is that he is also a fan of numbers.\\n\\nLately Jurgen has been studying sorted lists, but he is getting bored. He thinks that such lists are too predictable and not very abundant, so he decided to spice things up a bit.\\n\\nJurgen says that a list l of N not necessarily different positive integers is just a bit sorted if and only if for each positive integer x > 1 that occurs in l, the number x \\u2212 1 appears at least once before the last occurrence of x in l. For example\\n\\n\\u2022 [ 2, 3, 1, 2 ] is just a bit sorted because a 1 appears before the last 2, and a 2 appears before the last 3;\\n\\u2022 [ 2, 3, 4, 3, 2, 1, 3, 4 ] is not just a bit sorted because every 1 appears after the last 2;\\n\\u2022 [ 1, 1, 3, 1, 3, 3, 1, 3 ] is not just a bit sorted because no 2 appears before the last 3 (since 2 doesn\\u2019t appear at all in this list).\\n\\nJurgen is trying to find out how many different just a bit sorted lists of N positive integers not greater than K exist. Two lists are different if and only if there is at least one position in which the lists have distinct elements. Can you help Jurgen in counting the number of different lists?\\n\\t\\t\\t\\t\",\n    \"id\": 2009,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N and Q, representing respectively the number of elements in the just a bit sorted lists and the number of queries to answer (1 \\u2264 N \\u2264 5000 and 1 \\u2264 Q \\u2264 1000). The second line contains Q integers K1, K2, . . . , KQ, indicating that the lists you must count in the i-th query cannot contain values greater than Ki (1 \\u2264 Ki \\u2264 109 for i = 1, 2, . . . , Q).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Just a Bit Sorted\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with Q integers, such that the i-th integer represents the number of different just a bit sorted lists of N positive integers not greater than Ki (for i = 1, 2, . . . , Q). Since this number can be very large, output the remainder of dividing it by 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Fidel I. Schaposnik Massolo  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Incredible Consoles Production Company (ICPC) is now designing its newest video game console model, the Super-Arcade Reloaded (SAR). The launch of the SAR will be accompanied by the release of a flagship game, which will only be available to its users. This game, which incidentally shall be called Adventures of Captain Mikado (ACM), even features an in-game currency which can be conveniently bought using real-world money!\\n\\nThe ACM is a very simple game consisting of N levels numbered 1, 2, . . . , N, the i-th level requiring exactly Ei units of energy to be completed. This means that in order to complete that level, the user\\u2019s energy should be at least Ei , and after doing so it will decrease in exactly that amount. To win the game the user should complete all the levels in increasing order, starting at level 1 and continuing until level N without ever going back to some already-completed level.\\n\\nInitially the user starts with no energy, and in order to get some he must buy energy packs from the ingame shops distributed among the N levels. There are M such shops. Each shop sells an energy pack having a strength S and a cost C that depend on the shop. The user can only buy energy packs from the shops in the level he is currently in, before starting to complete that level. The effect of buying an energy pack of strength S is that the user\\u2019s energy immediately turns into S, regardless of which value it had before.\\n\\nIn order to increase even further its sales, the ICPC has thought of a revolutionary promotion: it will reimburse the full cost of the SAR to whoever completes the ACM game using the minimum amount of in-game cash. Given the description of the game, can you help them find out what is the minimum amount of in-game cash required to finish the game?\\n\\t\\t\\t\\t\",\n    \"id\": 2010,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases; each test case is formatted as follows. The first line contains two integers N and M, representing respectively the number of levels and the number of shops in the game (1 \\u2264 N, M \\u2264 105 ). The second line contains N integers E1, E2, . . . , EN , where Ei is the energy required to complete the i-th level (1 \\u2264 Ei \\u2264 104 for i = 1, 2, . . . , N). Each of the next M lines describes a shop with three integers L, S and C, representing respectively the level where the shop is located, and the strength and cost of the energy pack it sells (1 \\u2264 L \\u2264 N, 1 \\u2264 S \\u2264 109 and 1 \\u2264 C \\u2264 104 ).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Keep it Energized\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case in the input, output a line with an integer representing the minimum amount of in-game cash that is required to complete all N levels in the game. If it is impossible to complete all the levels, write the value \\u2018-1\\u2019.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Rafael Armando Garcia Gomez  Colombia\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe year is 2115. The Interplanetary Commercial Planning Center (ICPC) is supported by the Autonomous Communication Ministry (ACM). A commercial operation is performed executing transactions between connected ACM offices throughout the galaxy. The execution of a transaction between two connected ACM offices involves a nonnegative tax whose value increases, or decreases, continuously as a linear function A \\u00d7 t + B of time t, where t is a real number measured in minutes during the day (0 \\u2264 t \\u2264 24 \\u00d7 60).\\n\\t\\t\\t\\t\\t\\nThe total tax of a commercial operation performed between a source ACM office and a destination ACM office at some time t, is calculated as the minimum possible sum of the taxes of the xecuted \\ntransactions between the ACM offices visited along some path from the source ACM office to the destination ACM office. The tax of each transaction is calculated at the same time t. \\nSince the tax of the transactions between connected ACM offices is continually changing during the day, it would be better to perform the commercial operation at some specific time in the day, in order to maximize the collected tax. At that time, ACM decides to perform the commercial operation, and not before or after.\\n Your task is to write a program that receives as input the description of the ACM office network and returns as output the maximum total tax of the commercial operation that can be achieved during the day, that is, the maximum total tax that ACM can collect.\\n\\t\\t\\t\\t\",\n    \"id\": 2011,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N and M, representing respectively the number of ACM offices in the network, and the number of connections (2 \\u2264 N \\u2264 1000 and 1 \\u2264 M \\u2264 104 ). The ACM offices are identified with distinct integers from 1 to N, being 1 the source ACM office and N  the destination ACM office. Each of the next M lines describes a connection with four integers I, J, A and B, indicating that there is a bidirectional connection between office I and office J (1 \\u2264 I < J \\u2264 N), such that the tax of a transaction executed between office I and office J at time t is defined by the formula A \\u00d7 t + B (\\u2212100 \\u2264 A \\u2264 100 and 0 \\u2264 B \\u2264 10^6 ). Taxes are non-negative, so A\\u00a0\\u00d7\\u00a0t\\u00a0+\\u00a0B \\u2265 0 for 0 \\u2264 t \\u2264 24\\u00d760. There is at most one connection between each pair of ACM offices, and there is at least one path between the source ACM office and the destination ACM office.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Galactic Taxes\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with a rational number representing the maximum total tax that ACM can collect. The result must be output as a rational number with exactly five digits after the decimal point, rounded if necessary.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Pablo Ariel Heiber  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA height map is a two-dimensional matrix of positive integers that represents a polyhedron. Each cell of the matrix with value V represents a parallelepiped shaped column of 1 \\u00d7 1 \\u00d7 V that is laid on one of its 1 \\u00d7 1 faces onto the cell. This creates a polyhedron with a single face in the bottom made up of all the downwards facing 1\\u00d71 faces combined, and possibly several faces on the top and on the sides.\\n\\n\\t\\t\\t\\t\\tFor instance, a 2 \\u00d7 2 matrix with all values equal to 2 represents a cube of side 2. However, if one of the values is 1, the represented polyhedron is the same cube with one corner cut off. The following picture represents both alternatives.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tWhile not every polyhedron can be represented in this fashion, there are several that can. Here are a couple of other examples.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tGiven a height map, you are asked to count the number of faces of the represented polyhedron. Notice that a face is defined as a simple polygon that describes a contiguous and maximal boundary of the polyhedron. As you can see in the last two examples, it is possible for two different coplanar faces to share a common vertex, or even a side, or portions of a side.\\n\\t\\t\\t\\t\",\n    \"id\": 2012,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers R and C, representing respectively the number of rows and columns of the height map (1 \\u2264 R, C \\u2264 100). Each of the next R lines contains C integers; the j-th integer in the i-th line is the value Vi, j located in the i-th row and j-th column of the matrix (1 \\u2264 Vi, j \\u2264 109 for i = 1, 2, . . . , R and j = 1, 2, . . . , C).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Height Map\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with an integer representing the number of faces of the polyhedron represented by the input height map.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Pablo Ariel Heiber  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tGiven a positive integer U, find the largest integer L such that L \\u2264 U and L does not contain any digit more than twice.\\n\\t\\t\\t\\t\",\n    \"id\": 2013,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line that contains an integer U (1 \\u2264 U \\u2264 1018).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"At Most Twice\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with an integer representing the largest number less than or equal to U that does not contain any digit more than twice.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Guilherme Albuquerque Pinto  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThere are four possible blood groups for humans: AB, A, B and O, meaning that the red blood cells have antigens of types, respectively, A and B, only A, only B, and no antigen at all. Our blood group is determined by two alleles in our DNA. Each allele is of type either A, B or O. The following table lists the possible allele combinations someone may have for each blood group:\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tWe inherit exactly one allele from each of our two parents. So, given the blood groups of the two parents, we can say for sure if some blood group is possible, or not, in their offspring. For example, if the blood groups of the two parents are AB and B, then the possible allele combinations for them are, respectively, {AB} and {OB,BB}. Since the order of the alleles does not matter, the possible allele combinations for the offspring are {OA,AB,OB,BB}. That means the blood groups AB, A and B are possible in their offspring, but the blood group O is not. Very nice indeed! But what if life on Earth had evolved so that a person had three parents, three alleles, and three different antigen types? The allele combinations would look like this:\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tIf the blood groups of the three parents are A, BC and O, then all blood groups are possible in their offspring, except groups BC and ABC. The universe is vast! There may be, out there in space, some form of life whose individuals have N parents, N alleles, and N different antigen types. Given the blood groups for the N parents, and a list of Q blood groups to test, your program has to determine which ones are possible, and which ones are not, in the offspring of the given parents.\\n\\t\\t\\t\\t\",\n    \"id\": 2014,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N and Q, representing respectively the number of parents (and alleles, and antigen types) and the number of queries (1 \\u2264 N \\u2264 100 and 1 \\u2264 Q \\u2264 40). Each of the next N lines describes the blood group of a parent. After that, each of the next Q lines describes a blood group to test. Antigen types are identified with distinct integers from 1 to N, not letters. Each line describing a blood group contains an integer B indicating the number of antigen types in the blood group (0 \\u2264 B \\u2264 N), followed by B different integers C1, C2, ..., CB representing the antigen types present in the blood group (1 \\u2264 Ci \\u2264 N for i = 1, 2, ..., B).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Blood Groups\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each of the Q queries, output a line with the uppercase letter \\u201cY\\u201d if the corresponding blood group is possible in the offspring of the given parents; otherwise output the uppercase letter \\u201cN\\u201d. Write the results in the same order that the queries appear in the input.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Pablo Ariel Heiber  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tCarol and Carla are roommates. Yesterday they threw a big party and today they have a partially eaten cake that they want to divide. Since people were careless when cutting themselves a slice, the cake is now shaped as a prism with its top and bottom faces being the same simple convex polygon.\\n\\nTo add some fun to the process of dividing the cake, the girls came up with the following game. Carol chooses a vertex v of the top face of the cake. Carla chooses another vertex w of the top face that is not adjacent to v. Then, they cut the cake into two pieces by extending downwards the segment vw, so as to obtain two separate pieces of cake, each in the shape of a prism. Finally, Carol chooses the piece that she prefers, and Carla gets the other one. Carla immediately saw that this system gives Carol an advantage. Carla wants to know exactly how much of an advantage Carol has.\\n\\nYou are given a polygon that represents both the top and bottom faces of the cake. The height of the cake is 2, so the volume of a piece of cake is 2 times the area of its top face. Assuming the cake is divided as explained, and that both girls make their decisions to maximize the volume of the piece they have at the end, compute the volume of the piece each girl will get.\\n\\t\\t\\t\\t\",\n    \"id\": 2015,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N representing the number of vertices of the polygonal top face of the cake (4 \\u2264 N \\u2264 105). Each of the next N lines describes a vertex of the polygon with two integers X and Y, indicating the coordinates of the vertex in the XY plane (\\u2212108 \\u2264 X, Y \\u2264 108). Vertices are given in counter clockwise order and define a simple convex polygon. No three points in the input are collinear.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Cake Cut\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with two integers representing the volume of the piece Carol and Carla will get, in that order, if both make their decisions optimally.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Guilherme Albuquerque Pinto  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tDaedalus is playing the game of \\u201cDon\\u2019t be greedy\\u201d, in which N players sit around a table having each of them five cards labelled 1, 10, 100, 1000 and 10000 points. In \\u201cDon\\u2019t be greedy\\u201d the players may not talk to each other once the game starts, and there are M rounds. In each round, the bank announces a budget B. Then each player chooses one of the cards and places it, face down, on the table. The bank then turns the cards, so that all players can see all N cards. If the sum of the points in the chosen cards is less than or equal to B, then the bank gives to each player exactly the amount of points in the card he or she chose. Otherwise, no one gets anything. Each player gets his or her card back before the next round. The players are very rational and would like to maximize their points and minimize their regrets! What would you do in this situation? Cooperate or defect?\\n\\n\\t\\t\\t\\t\\tTake the following table as an example. Daedalus won a total of 10 points, in the end, because only the first round was successful. But, looking back on the game, he sees that he could have won 110 points, if he had chosen 100 points in the first round and 10 points in the third round. That is, Daedalus could have won 100 extra points! This holds only, of course, assuming the cards chosen by the other players remain unchanged.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tGiven the budget and the cards chosen in each round, we need to compute the maximum total number of extra points Daedalus could have won, in the end, if he had chosen the best possible card in each round, assuming the cards chosen by the other players remain unchanged.\\n\\t\\t\\t\\t\",\n    \"id\": 2016,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N and M, representing respectively the number of players and the number of rounds (1 \\u2264 N \\u2264 20 and 1 \\u2264 M \\u2264 50). Each of the next M lines describes a round with an integer B indicating the budget (1 \\u2264 B \\u2264 106), followed by N integers C1, C2, ..., CN representing that the i-th player chose the card labelled with Ci points during that round (Ci \\u2208 {1, 10, 100, 1000, 10000} for i = 1, 2, ..., N). Daedalus is the first player.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"D as in Daedalus\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with an integer representing the maximum total number of extra points Daedalus could have won, if he had chosen the best possible card in each round, assuming the cards chosen by the other players remain unchanged.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Syed Sarfaraz Akhtar, International Institute of Information Technology Hyderabad  India\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tThe problem is simple. Given a string(x) and 5 other strings, find the string with the least edit distance with x.\\n\\t\\t\\t\\t\\tIf the value of this edit distance is greater than k, print -1.\\n\\t\\t\\t\\t\",\n    \"id\": 2017,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains the string x ( 1 \\u2264 len(x) ). The next line contains an integer k ( 1 \\u2264 k \\u2264 100 ). Each one of the next 5 lines contain a string y ( len(y) \\u2264 100000).\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Six Strings\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the index of the closest string on the first line. If this value was not equal to -1, so print the value of the edit distance on the second line.\\n\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tAccording to the tradition, the Christmas Olympics Games are very interesting and differents. Among the existing modalities, we can mention for example, the lifting bag of toys, climbing pine trees, riding with reindeer and the throwing of elves (with and without their consent - the second modality is more dangerous), among others. Part of the improvement of the competition proposed by Claus for this year will be the availability of the medals panel of participating countries through an electronic scoreboard. You were invited to travel to the mountains of Korvatunturi in Lapland, Finland, place that will host these games, for, starting from a list of modalities and the winners countries, develop the system for this eletronic scoreboard. It will be expected almost three hundred participating countries and the competition will have at maximum 1000 types of olympic competitions.\\n\\t\\t\\t\\t\",\n    \"id\": 2018,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains only one test case, consisting by a relation with the result of all competitions realized in the Christmas Olympics Games. Each competition or modality will contain four information lines: the first line will contain the contest description. The second line will contain the winner country in that modality. The third line will contain the vice-champion and the last line will contain the bronze medalist country. The end of input is indicated by EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Christmas Olympics\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program must print the medal table for the Christmas Olympics Games. The first line must contain the text \\\"Quadro de Medalhas\\\". Each one of the next lines will contain the name of a country followed by the respective number of gold medals, silver medals and bronze medals that this country won, separated by a blank space. The criteria for tiebrake is the number of gold medals, followed by the number of silver and bronze medals. If two or more countries have the same number of medals (gold, silver and bronze) the listing must be by ascending order of country name. \\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Gomes, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tCici, Cini and Cino traveled to the North Pole, and want to know the main sights from there. To help them, Santa Claus decided to borrow three reindeer for them. The Santa's reindeer has the ability to teleport, making travel between the sights are instant.\\n\\nSanta Claus reported that there are N sights, and his reindeer can perform two types of tours:\\n\\nTour type 1: Given a sequence of sights you want to visit, the reindeer performs a ride at each point in the sequence,For example: Given the sequence <1, 2, 1>, the reindeer will stay for one hour in 1, after, one hour in 2, after,  and one hour in 1.\\n\\nTour type 2: Given a sequence of sights you want to visit, reindeer performs a type 1 tour using a non-empty subsequence of the sequence chosen. For example, if the chosen sequence is <1, 2, 1>, the reindeer can make any one of 6 different tours, randomly chosen for her: <1>, <2>, <1, 1> <1 2 >, <2, 1>, <1,2,1>.\\n\\nCici and Cini liked the surprise factor of type 2 tour, however, Cino opted for type 1. As Cici, Cino ang Cino and have different preferences, one can choose a different sequence of places. Knowing the sequences chosen by Cici and Cini, Cino will choose the smallest sequence in which it is guaranteed that at least one site is not visited by three friends simultaneously.\\n\\n\\nFor example: Santa Claus reported that the North Pole has 3 distinct sights. Cici choose the sequence <1, 2>. Cini choose <2, 3>. So Cino can choose the sequences <1> and <3>, but can not choose the sequence <2>.\\n\\t\\t\\t\\t\",\n    \"id\": 2019,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of multiple test cases. Each test case is constituted by 3 lines. The first line of each test case contains three integers, N (1 \\u2264 N \\u2264 50), X and Y (1 \\u2264 X, Y \\u2264 103) representing respectively the number of sights, the size Cici sequence chosen and the size of the sequence chosen for Cini. The second line contains  X integers, representing the sequence chosen by Cici. The third line has Y integers representing the sequence chosen for Cini.The input ends with the final file (EOF).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Cici, Cini and Cino\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print a line containing the size of the smallest sequence and the amount of sequences that Cino can choose, separated by a single space. It is guaranteed that a 64-bit integer signed is sufficient to store the answer\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Lucas Bucior, URI Online Judge  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\r\\n                    This year Santa Claus received several lists of gifts, requests and more applications to make, all lists are encoded by elves. As there are thousands of lists and Santa is organized, decided to ask for your help, how does he know that you are dedicated and you know the standard decoding of the elves, released 26 gnomes and goblins 676. Each list is decoded through collaboration of gnomes and elves helpers of Santa Claus. The gnomes are listed from 1 to 26 and for each Gnome, 26 goblins that correspond to letters from A to Z (including the letters K, W, Y). When the decoding is initiated, every N rows are performed. Each line corresponds to a gift. Follow the steps to decode a given list created by Elves:\\r\\n\\r\\n                   \\r\\n                       1st The gnomes are organized representing lines and the goblins are organized representing the columns.\\r\\n                       \\r\\n                       \\r\\n                       2nd For each gnome, is found a goblin. For example if the integer i is 2 (line 2) the gnome is 2, the goblin is also 2, therefore corresponds to character B.\\r\\n                       \\r\\n                       \\r\\n                       3rd All the elves, at the gnome position should be moved to the end.\\r\\n                       \\r\\n                       \\r\\n                       4th The gnome line must be moved to the last valid position.\\r\\n                       \\r\\n                       \\r\\n                        For the next integer number, note that if it is 2 (line 2) the gnome now is 3, as well the Elf (3), therefore corresponding to the character D.\\r\\n                   \\r\\n       \\r\\n                   \\r\\n                 The first step is to run each new hard-coded list for elves, the 2nd, 3rd and 4th step are performed for each integer i corresponds to the row of the matrix. Let Santa know the gifts that contains the encoded list by elves.\\r\\n        \\r\\n\\t\\t\\t\\t\",\n    \"id\": 2020,\n    \"input\": \"\\r\\n                    The first line of each test case contains an integer N (1 \\u2264 N\\u2264 10000), that corresponds to the number of lines coded by elves. The N  lines contains an indefinite number of integers i (1 \\u2264 i \\u2264 27), each integer i  represents the row of the array, and if i is 27, a space. The entry ends with end-of-file (EOF).\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Elves and Their Codes\",\n    \"output\": \"\\r\\n                    For each list encoded by elves, you must submit the message \\u201cLISTA #X:\\u201d, where X is the number of the list following the sequence (1, 2, 3, ...), then you must list all alphabetically and capital gifts, one in each line.  Print a blank line between two consecutive test cases. At the end of the exit there should be a blank line.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leonardo Falk, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIt's Christmas and it is time to arrange the house to reflect the mood of the festivities of the holiday season. Jon's family has already started to decorate the house and his job is to hang countless Christmas lights around the house of a rectangle shape. However these lamps are somewhat boring, after storing them throughout the year they end broken or some other burning. He is using the rectangle shaped lights model.\\n\\n\\t\\t\\t\\t\\tJon will buy all the spare lights that need to be replaced because he doesn't know that the first column of lights runs in a parallel way while each line works in series making him think that all from a certain point are burned. What he does is actually telling, in order, the number of lights until you find one that does not light up more and then write down the number on paper and then jumps to the next line restarting the count.\\n\\n\\t\\t\\t\\t\\tFor example a 5x5 grid there are two positions that he found 5 and 1, this would have the following representation:\\n\\n\\t\\t\\t\\t\\t****-\\n\\t\\t\\t\\t\\t- - - - -\\n\\t\\t\\t\\t\\t*****\\n\\t\\t\\t\\t\\t*****\\n\\t\\t\\t\\t\\t*****\\n\\n\\t\\t\\t\\t\\tSo the amount that Jon should buy is 6.\\n\\n\\t\\t\\t\\t\\tYour task is to tell you how many lights are off from the positions that Jon wrote down so he can buy and replace them.\\n\\t\\t\\t\\t\",\n    \"id\": 2021,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of multiple test cases that begin with a line with three integers M, N and P (2 \\u2264 M, N \\u2264 500 and 1 \\u2264 P \\u2264 N) representing respectively height, width and number positions he found. The next P lines contains a number Q (1 \\u2264 Q \\u2264 M*N) which are the positions of each light off. The input ends when N = M = P = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Christmas Lights\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case print the phrase \\\"Lights: X\\\" where X is the total number of lights that Jon should buy.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jessica Dagostini, URI Online Judge  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tOh the Christmas time... magic time, time of good senses, dinners full of cool people and filled with good food and, of course: many gifts!\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tJucilena was a good girl in this year. Knowing it, she is making a list with her christmas wishes. However, Jucilena is an undecided girl (and her wishes are many), what makes Nicolau confused from what present she really wants. On their lists, cast the name of the desired gift, its value (this field prompted by her mother) and the preference of the same in a scale, from the least preferred (1) to the most desired (10). Seeing this idea, Jucilena's friends also do the same, because all have various gift options.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tAll this messing lists and gifts left, Santa Claus is crazy! Seeing this, the Christmas spirit has touched you and you decided to help Santa, creating a program that shows the list of the most desired gifts for Jucilena and his friends. Gifts should be shown in descending order of preference. If the preference of one another is the same, it should be shown the lowest value first. If there is similarity between preference and value, they should be listed in alphabetical order.\\n\\t\\t\\t\\t\",\n    \"id\": 2022,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consist in many test cases. The first line of each test case contains the Name (without spaces) of respective owner of the list, together with a integer Q (1 < Q <100) whats define a quantity of gifts listed. The next Q*2 lines consist in a name O of the desired object in a line and the P (1< P < 100.000.000) cost of the same the prefer's value E (1< E < 10)\\u200b in the next line.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Christmas Gifts\",\n    \"output\": \"\\t\\t\\t\\t\\tThe ordered list should be printed within the guidelines outlined above, being first shows the name of the owner of preceded by \\\"Lista de \\\", followed by a list that only shows the object name followed by its value in Brazilian real, with two digits after the decimal point. Should be printed a blank line after all outputs.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tSanta Claus classifies all the children of the world into two lists: the good ones and the naughty ones. He would like to know which of the children is the last in the good ones list, when sorting them in alphabetical order. To do that he asked his Cristhmas Elfs to write down all the good kids' names in a sheet of paper.\\n\\nHowever, each elf wrote the names in a different way: first letter uppercase and then lowercase; all letters uppercase; all lowercase; and all kind of combinations between upper and lowercase letters.\\n\\nSanta wants your help to tell which is the last name in the list given all the names of the good kids.\\n\\t\\t\\t\\t\",\n    \"id\": 2023,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has several lines. Each line has the name of one good kid. No elf wrote names with accented letters. The longest name is at most 80 characters long. There are no more than 1000 kids on the list. All the names are different. The names list ends with EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Last Good Kid\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is given in one line. It consists of the name of the kid that should be at the last position of the good ones list. You must print the name exactly as it was read at the input. Use alphabetical order to sort the names, but do not differ letters because of its case.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tTired of managing the gifts production and calculating the minimum path to deliver them to the children on Christmas Eve, Santa decided to take a nap. When the elves realized Santa\\u2019s absence they decided to take time off from work to play a game they\\u2019ve been planning for some time.\\n\\nThe game the elves invented involves N gifts that they had recently made, which are in format of cubes with dimensions AxBxC, or in other words, A centimeters of width, B centimeters of height and C centimeters of depth.\\n\\nThe goal is simple: given the N gifts, win the game the one who can pile all the N gifts one at the top of the other building a stack of maximum height. The gifts must be piled in order, or in other words, first the gift 1 is put on the ground, then the gift 2 is piled on the top of the gift 1, and so on.\\n\\nIt is worth noting that it is possible to rotate the gift on any axis in a way that any of its 6 faces gets parallel to the ground, however the perimeter of such face must be completely restrained inside the perimeter of the superior face of the gift below it. In the case of the first gift it is possible to choose any face, because the ground is big enough.\\n\\nFor example, be N = 2, where the first gift has dimensions 5x2x2, and the second gift has dimensions 1x3x4, it is possible to position the first gift with the face of dimensions 2x2 facing down and reach a height equal to 5, however this solution makes it impossible to pile the second gift on top of the first. A possible solution would be to position the first gift with the face of dimensions 5x2 facing down, and pile the second gift with the face of dimensions 3x1 on top of the first, reaching a valid solution with height equals to 6, as can be seen on Figure 1.\\n\\n\\n\\nAfter some time playing the elves were curious on whether they reached the best solution or not, and then they asked for your help. Given the dimensions of the N gifts, check if it is possible to build a stack with the N gifts and find out its maximum height.\\n\\t\\t\\t\\t\",\n    \"id\": 2024,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case starts with an integer N, representing the number of gifts (1 \\u2264 N \\u2264 105).\\n\\nFollowing there will be N rows, each containing three integers, A, B and C, representing the dimensions of the gifts, as explained on the problem statement (1 \\u2264 A, B, C \\u2264 104).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Piling Gifts\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print one row containing one integer, representing the maximum height of the stack if it\\u2019s possible to pile all the N gifts, or -1 otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tLapland, Finland, is the northernmost region of the European Union and its most famous inhabitant is, of course, Santa Claus or Joulupukki (his name in Finnish). Nowadays Joulupukki receives, besides the traditional letters, a lot of emails from children around the world.\\n\\n\\t\\t\\t\\tThe problem is that Noel has in his computer a virus called Amli.D that changed his name in all draft messages. The good thing is that this virus just mess his name (Joulupukki) changing sometimes the first character, sometimes the last one and often both. So, instead of \\\"Joulupukki\\\", the name may appear as \\\"Joulupukka\\\", \\\"SoulupukkA\\\" or \\\"Toulupukki\\\", among other ways.\\n\\n\\t\\t\\t\\tSo you have to build a software to correct all the wrong apparitions of \\\"Joulupukki\\\" of Noel email drafts.We have the guarantee of the gnomes that there is no word with more than 10 characters that contains the substring \\\"oulupukk\\\", but be careful with the final point, like \\\"Joulupukka.\\\", for example. In this case we have to consider 11 characteres.\\n\\t\\t\\t\\t\",\n    \"id\": 2025,\n    \"input\": \"\\t\\t\\t\\t\\tThe imput contains thousands of lines of text. The first line of input contains an integer N (1 < N < 10000) that indicates the number of text lines of Noel drafts. Each one of the N lines can contains up to 100 characters, including uppercase, lowercase, and blank spaces.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Joulupukki\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output generated by your software must fix the damage caused by virus Amli.D, printing each line of the input with the correct spelling of the word \\\"Joulupukki\\\", always with the first letter in uppercase.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Julio Cesar Ceron, URI Online Judge  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tWith the arrival of Christmas atmosphere many families around the world decorate their homes, they put lights build their own Christmas tree, putting the most varied decorations always smartly. Family Enilno Egduj, descendetes of Italians, always very organized and perfectionist created a tradition where every year someone is responsible for decorate the Christmas tree. This year the youngest child of Rolien Enilno Egduj family, was in charge of making the decor, and it needed to buy the ornaments for the tree. For those unfamiliar Rolien, he is a very perfectionist boy, such a perfectionist that descidiu make a program to assist you in your task.\\r\\n\\r\\nTo decorate the tree were available in the market where Rolien was looking for Christmas decorations, several packages with X amount of ornaments and each package its respective weight in grams. Based on this information Rolien stipulated that each branch could support a quantity K in grams.\\r\\n\\r\\nWith that I needed to find what the best option among the packages, ie packages which it should take that combined have the largest number of decorations and the branch to which it will spruce can withstand withstand the weight of ornaments.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2026,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\t  The first input line has an integer \\u00a0G\\u00a0 to the tree branches, and also representing the number of test cases, the second inlet line has an integer \\u00a0P\\u00a0(1 <\\u00a0P\\u00a0< 100) indicating the number of packets, the next an entire line has \\u00a0W\\u00a0(1 <\\u00a0W\\u00a0< 1000), which indicates the weight capacity of the tree branch supports. The next \\u00a0P\\u00a0 lines indicate the number of ornaments on fied package \\u00a0E(1 <\\u00a0E\\u00a0\\u2264 300) and the weight of each package\\u00a0PC\\u00a0(1 \\u2264\\u00a0PC\\u00a0\\u2264\\u00a0W).\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Christmas Tree\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tThe output must submit the total number of decorations for each branch. Print a blank line after the full trappings of each branch.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tNow is Christmas season, and Rolien and Naej gnomes are doing bets with Santa Claus. Rolien and Noel have 10 seconds to count the ornaments on a Christmas tree. After this, the greatest common divisor of the two numbers counted gives a value greater than 5, Noel wins, otherwise the gnomes win. Well, the problem is that someone change some parts of the gnomos code. Yesterday it was working perfectly but now, it gives a strange error: depending what was chanced, sometimes gives \\\"Presentation Error\\\" sometimes gives \\\"Compilation Error\\\" and sometimes gives \\\"Runtime Error \\\".\\n\\n\\t\\t\\t\\t\\tWith the changed code below, please fix these few errors and submit the correct the version for Santa Claus.\\n\\n\\t\\t\\t\\t\\t\\n#include <bits/stdc++.h>\\n\\nusing namespace std;\\n\\nint GCDsimp (int num, int den) {\\n\\tcout << num << den;\\n\\tif (den > 0)\\n\\t\\treturn GCDsimp (den, num % den);\\n\\t}\\n\\treturn num;\\n}\\n\\nint main() {\\n\\tint num, den, apostas [100], cont=-1;\\n\\twhile (cin >> num >> den) {\\n\\t\\t\\u00a0apostas[++cont] = GCDsimp (num,den);\\n\\t\\t\\u00a0if \\u00a0( apostas[cont] ) > 5)\\n\\t\\t\\tcout << \\\"Noel\\\" ;\\n\\t\\t\\u00a0else\\n\\t\\t\\tcout << \\\"Gnomos\\\" << endl;\\n\\t}\\n\\tfor (int i=cont; i>0; i++) {\\n\\t\\tcout << apostas[cont] << \\\" \\\";\\n\\t}\\n\\treturn 0;\\n}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 2027,\n    \"input\": \"\\t\\t\\t\\t\\tThe input may have up to 100 test cases. Each test case consists of a line containing two integers separated by a space, representing the number of ornaments counted by the gnomes and Noel respectively for one of the Noel trees.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Noel Bet\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you must print a line of output containing \\\"Noel\\\" or \\\"Gnomos\\\", as explained above. In the end, you must print all the values calculated for the 100 bets between gnomes and Noel. Each of the values is followed by a blank space, including the last. Don't forget the end of line of the last line.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Albertinin Mourato, UFPE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tHyam is a guy that loves sequences. He is finding interesting sequences that even Fibonacci would not have imagined. One day Hyam saw that given a number N, he could make a sequence like 0 1 2 2 3 3 3 4 4 4 \\u2026N N N \\u2026 N. However, Hyam saw that each value that increased in the sequence number, the total quantity increases at a factorial rate. In this case, instead of multiplying, you add the total number of numbers to the sequence with the value of the next number in the sequence. For example, if N = 2. The correct sequence would be 0 1 2 2, which is 4 digits. Now, if N = 3, the next number in the sequence would have the value 3, so the total quantity of numbers in the sequence would bem the quantiy of numbers with N = 2, which is 4, plus the value of the next number in the sequence, in this case 3, giving you 7, since the correct sequence for N = 3 is 0 1 2 2 3 3 3.\\n\\n\\t\\t\\t\\t\\tYour task is make an algorithm that given a integer N, has as answer the total quantity of numbers of this sequence and below the complete sequence.\\n\\t\\t\\t\\t\",\n    \"id\": 2028,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each case is composed of an integer N (0 <= N <= 200) that indicates the last value of the last N numbers of the sequence numbers.\\n\\t\\t\\t\\t\\tThe input ends with end of file\\u00a0(EOF).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Sequence of Sequence\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is in format Case X: N numbers\\u00a0where X is the order of number of cases and N is the number of numbers that contains the complete sequence, the next line sequence numbers with a space between them. You are asked to leave a blank line after each case.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Deocl\\u00e9cio Lima, UNIP\\u00ca  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\t Julius is the owner of a large apiry situated in Para\\u00edba. Every year, every six months, Julius collect honey produced by bees of their property and stores it in a CYLINDRICAL container format that facilitates the transport of honey for establishments who order this natural product for commercialization . Once Julio realized due to an increase in honey production, over the previous six months, the container that owned the stand the volume of honey produced by his bees. Julius needs now that you make a program that informs the volume of honey in cm3 and the diameter of the inside of the container in cm, calculate and show:\\n\\n\\t\\t\\t\\t\\t- What should be the height (in cm) of Inside the container;\\n\\t\\t\\t\\t\\t- The area (in cm2) of the mouth (entrance) of the container.\\n\\t\\t\\t\\t\\tNB .: Consider \\u03c0 = 3.14\\n\\t\\t\\t\\t\",\n    \"id\": 2029,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases and ends with EOF. Each test case consists of a line containing two floating-point values of double precision with two decimals after comma, one V (1.00 \\u2264 V \\u2264 10000.00) and one D (1.00 \\u2264 D \\u2264 100.00), respectively representing the volume and the container diameter.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Honey Reservoir\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test, the output contains the first line \\\"ALTURA = \\\" message, with a space after ALTURA and another after the symbol of equality, followed by the container height value with two decimals after comma and the second line message \\\"AREA = \\\", also with a space after AREA and another after the symbol of equality, followed by the value of the area of the mouth (entrance) of the container with two decimals after comma.\\n\\n\\t\\t\\t\\t\\t- Do not forget the line break at the end of the exit, otherwise you will get \\\"Presentation Error\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Daniel Saad, Instituto Federal de Goi\\u00e1s  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\u201cGrazie, grazie, bellissimo!\\u201d \\u2013 said a engineer of Scuderia Ferrari after an unexpected strategy which made then win the Formosa GP of 2016, famous street circuit of the Formula One calendar. \\n\\n\\t\\t\\t\\t\\tFormula One is a bit crazy sport. Sometimes, when the tyre is worn, it is worth to make a pit stop in order to put new tyres and do faster laps. \\n\\n\\t\\t\\t\\t\\tHowever, it is not always that making a pit stop translates into an advantage. It depends of the quantity of remaining laps and the pit stop time. \\n\\n\\t\\t\\t\\t\\tThe tyres have a life span of few laps until being worn. Then, possibly a pit stop could be necessary in order to gain time with fresh tyres. \\n\\n\\t\\t\\t\\t\\tAre you capable of calculating the optimal strategy as a future Ferrari engineer?\\n\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 2030,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a line containing a number N (1 \\u2264 N \\u2264 1000) indicating the number of test cases. The following N lines represent a test case. Each test case is composed by five integers:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tT1, the lap time in milliseconds with a new tyre (1 \\u2264 T1 \\u2264 106).\\n\\t\\t\\t\\t\\t\\tT2, the lap time in milliseconds with a worn tyre (1 \\u2264 T1 \\u2264 T2 \\u2264 106).\\n\\t\\t\\t\\t\\t\\tA, the time of a pit stop in milliseconds (1 \\u2264 A \\u2264 106).\\n\\t\\t\\t\\t\\t\\tV, the number of laps until a new tyre becomes a worn tyre (1 \\u2264 V \\u2264 100).\\n\\t\\t\\t\\t\\t\\tR, the number of laps of the Formosa GP (1 \\u2264 R \\u2264 100).\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Pit Stop\",\n    \"output\": \"\\t\\t\\t\\t\\tEach test case output must begin with the line \\u201cTeste #i\\u201d, indicating the test case number. After this, a new line should give the least time possible (sum of the time of each lap and pit stop) of the optimal strategy to complete the Formosa GP and the minimum number of pit stops possibles to minimize this time. These two information must be separated by a space. \\n\\n\\t\\t\\t\\t\\tAfter each test case, a blank line must be printed.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jeremias Gomes, Universidade de Bras\\u00edlia  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tRock, Paper, Airstrike is a very popular children\\u2019s game, in which two or more children form a circle and do hand gestures in an attempt to get the victory. The rules are surprisingly complex for a children\\u2019s game, but it\\u2019s still quite popular around the world. \\n\\n\\t\\t\\t\\t\\tThe games are very simple. Players can choose between the sign of a Rock (fist), the sign of a paper (an open palm), and the signal to the Air Attack (like the paper, but with only the thumb and little finger extended). \\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tA game with two players have the following rules to determine a winner:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tAirstrike vs. Rock: In this case, the player with Airstrike defeats the player with Rock for obvious reasons.\\n\\t\\t\\t\\t\\t\\tRock vs. Paper: In this case the player with Rock defeats the one with Paper, because Rock hurts more.\\n\\t\\t\\t\\t\\t\\tPaper vs. Airstrike: In here Airstrike wins because Airstrike always wins and Paper is pathetic.\\n\\t\\t\\t\\t\\t\\tPaper vs. Paper: In this variation both players win because Paper is useless and no one facing Paper can lose.\\n\\t\\t\\t\\t\\t\\tRock vs. Rock: To this case there is no winner because it depends on what the players decide to do with the Rock and usually do nothing at the end.\\n\\t\\t\\t\\t\\t\\tAirstrike vs. Airstrike: When this happens all players lose due to Mutual Annihilation.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYour task is to write a program that given the choice of two players tell who won the game.\\n\\t\\t\\t\\t\",\n    \"id\": 2031,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consist of N (1 \\u2264 N \\u2264 1000) test cases. N should be read in the first line of input. Each test case is composed of two lines each containing a string. The first string is the sign chosen by Player 1 and the second string is the sign chosen by the Player 2. These string can be:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\u201cataque\\u201d: to represents Airstrike\\n\\t\\t\\t\\t\\t\\t\\u201cpedra\\u201d: to represents Rock\\n\\t\\t\\t\\t\\t\\t\\u201cpapel\\u201d: tp represents Paper\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Rock, Paper, Airstrike\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output must be contain:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\u201cJogador 1 venceu\\u201d: if Player 1 has won the game\\n\\t\\t\\t\\t\\t\\t\\u201cJogador 2 venceu\\u201d: if Player 2 has won the game\\n\\t\\t\\t\\t\\t\\t\\u201cAmbos venceram\\u201d: if the both have won the game\\n\\t\\t\\t\\t\\t\\t\\u201cSem ganhador\\u201d: if there is no winner\\n\\t\\t\\t\\t\\t\\t\\u201cAniquilacao mutua\\u201d: if Mutual Annihilation occurs\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tEach output of a test case must be in one line.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3o is a boy who loves to play with logic games, he spends several hours of your day solving puzzles.\\nCurrently the game that he's spending more time playing is the Sliding Puzzle, also known as Game of Eight, in which he has at hand a tray of 3 rows and 3 columns where each element of this board has a number or a blank space.\\n\\nThe object of the game is simple, given a scrambled board (Figure 1), Jo\\u00e3o should leave it ordered (Figure 2) and the only movement possible to solve the problem is to move a number to the blank space.\\nSolve the toy is not a problem for Jo\\u00e3o, he's already doing it without difficulty, but he was intrigued to know what is the minimum number of moves needed to solve.\\n\\n\\n \\nFigure 1 - Figure 2\\n\\nWhat you need to do to help Jo\\u00e3o in his curiosity is simple, it will give you the initial configuration of the board and you should show, if any, the least amount of possible steps to solve the toy and what steps are needed to find the solution.\\nBut there is one detail, Jo\\u00e3o is a very methodical kid, so when he is playing and there are several possibilities at any given time it uses the following priority to set the move:\\n1) Move the piece that is on the blank space\\n2) Move the piece that is under the blank space\\n3) Move the piece that is on the right of the blank space\\n4) Move the piece that is on the left of the blank space\\nYou must use the same priority to solve the problem.\\n\\t\\t\\t\\t\",\n    \"id\": 2032,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases, each case will have 3 lines each with 3 numbers 0-8, where zero represents the blank space. Assume that the toy is always scrambled.\\nThe entry ends with the end of the file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Game of Eight\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print the message \\\"Quantidade minima de passos = X\\\", where X is the total required, followed by the steps made to resolve, each step must be separated by a blank line. if you can't solve the problem print: \\\"Problema sem solucao\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Deocl\\u00e9cio Lima, UNIP\\u00ca  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tWhere can, Danilo purchase accessories for your computer because it works as a programmer and always seeks to improve the performance of your PC. Once Danilo resolved to do a general upgrade on your computer, but as I was without money at the time, he decided to request a loan on money with his friend Maclaud that is moneylender. Maclaud then decided to borrow the money to his friend Danilo and advised him to find what would be its debt if the regime were applied \\\"Simple Interest\\\" or \\\"Interest Compound\\\" since it would know that the moneylender would not increase the value.\\n\\nDanilo got confused and decided to go to your house and calculate what would be the final values according to each interest regime. But Daniel is not very good calculation and decided to ask the help of a programmer who was able to create a program that informed the loan amount, the interest rate \\\"monthly\\\" and the term \\\"months\\\" you need to repay the loan with interest, calculate and show:\\n\\n- The Difference between the final value with simple interest and the final amount with compound interest;\\n\\n- The Difference between the amount to be borrowed and the final value with simple interest;\\n\\n- The Difference between the amount to be borrowed and the final amount with compound interest;\\n\\t\\t\\t\\t\",\n    \"id\": 2033,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases and ends with EOF. Each case contains two floating point values of double precision, a C (0.01 \\u2264 C \\u2264 20000.00) and other i (0.01 \\u2264 i \\u2264 1.00), representing, respectively, the loan amount and the interest rate, and an integer n (1 \\u2264 n \\u2264 20) representing the amount of \\\"months\\\" concerning the deadline for payment of the loan to the moneylender, as with the applied interest.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Interest on Loan\",\n    \"output\": \"\\t\\t\\t\\t\\tIn each case, the output is composed of three lines. The first contains the \\\"DIFERENCA DE VALOR = \\\" message, followed by the value of the difference between the final value with simple interest and the final amount with compound interest. In the second line will display the \\\"JUROS SIMPLES = \\\" message, followed by the value of the difference between the amount to be borrowed and the final value with simple interest. And the third line will show the message \\\"JUROS COMPOSTO = \\\" followed by the value of the difference between the amount to be borrowed and the final amount with compound interest.\\n\\n- Not sure to put the spaces in the messages and by a line break at the end of each trip.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ramiro Lafuente, Universidad Nacional de La Plata   Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The mathematician Georg Cantor was a lover of both sets and infinity, but he didn't get along too well with his colleagues. One morning he woke up with the idea of defining a set so strange that, when made public, would make the rest of the mathematicians lose their sleep for several days. And he was successful.\\n\\n                    The set he defined is called the Cantor set, and it is formed by all the real numbers in the interval [0, 1]whose decimal expression in base 3 uses exclusively the digits 0 and 2. This set has amazing properties, which we will not mention here so that you can sleep tonight. Moreover, and luckily for everyone involved, in this problem we will not be working with the Cantor set, but with a generalization of this set to the integer numbers.\\n\\n                    We will say that an integer number is of Cantor type, or a cantiger for short, if its expression in a given base B uses solely the digits in a given set C contained in {0, 1, ..., B-1}. Thus, the fact that a given number is a cantiger depends on how we choose B and C.\\n\\n                    Your task is to count cantiger numbers, in order to prevent the mathematicians of the entire world from loosing their sleep. More precisely, given two integers D and H, along with B and C, you have to count the number of cantigers with respect to B and C from D to H inclusive.\",\n    \"id\": 2034,\n    \"input\": \"Each test case is described using a single line. This line contains three integers, D, H and B, and a string L. The values of D and H indicate the endpoints of the closed interval [D, H] we are interested in (1 \\u2264 D \\u2264 H \\u2264 1016). The value of B is the base mentioned in the problem statement (2 \\u2264 B \\u2264 10). The stringL = L0 L1 ... LB-1 has exactly B characters, and describes the set C also mentioned in the problem statement. The character Li is the uppercase letter 'S' if i is in C, and the uppercase letter 'N' otherwise (i = 0, 1, ..., B-1). The set C is non-empty, so that there is at least one 'S' character in L. The end of the input is signalled by a line containing three times the number -1 and a single '*' character.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cantor\",\n    \"output\": \"For each test case, you should print a single line containing an integer number, representing the number of cantigers (with respect to B and C) that are greater or equal to D and lower or equal to H.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Leopoldo Taravilse, Universidad Nacional de La Plata   Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"Argentina's rugby is currently in one of its best moments of all time. Recently the under-18 and under-21 national teams qualified for their corresponding world cups, so the coaches of both teams have asked the Incredible Commission for the Production of Clothing (ICPC) to provide the t-shirts for these events. Each team is formed by N players, but because the two world cups do not take place simultaneously it was agreed that the ICPC would provide only N t-shirts, to be used by both teams.\\n\\n                    For this reason, the t-shirts must be a valid set of clothing for both teams. The rules of the rugby world cups state that each player must go in the field with a t-shirt imprinted with a unique number, along with a prefix of the player's surname, not necessarily unique. This includes boundary cases such as a t-shirt with no surname prefix (that is, a prefix of length 0) and a t-shirt with a complete surname.\\n\\n                    The experts of ICPC immediately realized that they could simply provide N t-shirts with only numbers and no surnames on them, and each of them would be a valid t-shirt to be used by any player of any of the two teams. However, the coaches would rather have the t-shirts with the longest possible prefixes, of course without violating world cup rules, because this way it's easier for them to identify the players while the matches are taking place.\\n\\n                    Your task is to help the ICPC finding the maximum amount of letters that can be imprinted on a set of N t-shirts, so that this set is a valid clothing set for both teams. For example, if we have N = 3 players, the under-18 team is composed of \\\"PEREZ\\\", \\\"GONZALEZ\\\" and \\\"LOPEZ\\\", whereas the under-21 team is composed of \\\"GARCIA\\\", \\\"PERALTA\\\" and \\\"RODRIGUEZ\\\", the optimal choice consists in having one t-shirt with the 1-letter prefix \\\"G\\\" (to be used by \\\"GONZALEZ\\\" and \\\"GARCIA\\\"), anotherone with the 3-letter prefix\\\"PER\\\" (to be used by \\\"PEREZ\\\" and \\\"PERALTA\\\"), and the third t-shirt with a 0-letter prefix (to be used by\\\"LOPEZ\\\" and \\\"RODRIGUEZ\\\"). This way, the answer in this case would be 1+3+0=4.\",\n    \"id\": 2035,\n    \"input\": \"Each test case is described using three lines. The first line contains a single integer number N, indicating the number of players in each of the two teams (1 \\u2264 N \\u2264 104). The second line contains the surnames of the N players in the under-18 team, whereas the third line contains the surnames of the N players in the under-21 team. Each surname is a non-empty string of at most 100 uppercase letters. In each test case the total number of characters in the 2N surnames is at most 105, and two or more players of the same or different teams may have the same surname.\\n                    The end of the input is indicated by a line containing the number -1.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Designing T-Shirts\",\n    \"output\": \"For each test case, you should print a single line containing an integer number, representing the maximum number of letters that can be imprinted on a set of N valid t-shirts to be used by both teams as explained in the problem statement.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Leopoldo Taravilse, Universidad Nacional de La Plata   Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The domino effect is a phenomenon that occurs when in a line of domino pieces, each standing on its smallest face, the first piece from one of the line's ends falls in the direction of the next piece. In turn, this second piece falls over the third one in the line, and so on until the other end of the line is reached, at which point every piece has fallen. Note that in order to produce this effect, the distance between consecutive pieces in the line must be lower or equal to their height.\\n\\n                    Emma has very recently found out about the domino effect, and she was immediately amazed by it. She spent all morning forming a line with the N domino pieces that her brother Ezequiel gave her, but just before she was going to make the first piece fall, her grandma came to her home and took her to play in the park. Ezequiel knows Emma has not taken into account the distance between consecutive pieces when she formed her domino line, and doesn't want to see her frustrated if all the pieces do not fall after she pushes the first one.\\n\\n                    Thus, Ezequiel wants to move some pieces from inside the line so that the distance between consecutive pieces is always lower or equal to their height H. Because he doesn't want Emma to find out that he has moved some of the pieces, he will leave the first and last pieces where they are, and he would also like to move as few pieces as possible from inside the line. What is the minimum number of pieces he must move?\",\n    \"id\": 2036,\n    \"input\": \"Each test case is described using two lines. The first line contains two integer numbers N and H, indicating respectively the number of pieces in the line (3 \\u2264 N \\u2264 1000) and their height (1 \\u2264 H \\u2264 50). The second line contains N-1 integers Di, representing the distances between pairs of consecutive domino pieces, in the order given by the line (1 \\u2264 Di \\u2264 100 for i = 1, 2, ..., N-1).\\n\\n                    The end of the input is signalled by a line containing two times the number -1.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Domino Effect\",\n    \"output\": \"For each test case, you should print a line containing a single integer number, representing the minimum number of pieces that must be moved in order to have the distance between consecutive pieces always lower or equal to H. Note that the first and last pieces cannot be moved, and that the relative order between the the pieces cannot be changed. If it is impossible to achieve the desired result, print the number -1.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Pablo A. Heiber, Universidad Nacional de La Plata   Argentina\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The International Committee for Professional Chess (ICPC) organizes a Tournament for Advanced Players (TAP) with a very strange methodology. As expected, in each game exactly two players face each other, but in this case only one game takes place at a time, because there is only one chess board available. After receiving the inscriptions for the competitors and assigning them a number, the organization decides arbitrarily what matches are going to take place, and in which order. Each competitor can face any other competitor any number of times, and it is even possible that some competitors never play against others. Once built the general fixture of all the matches to be played, the organization hands each competitor a non-empty list of their rivals, in chronological order (that is, the order in which the matches will take place).\\n\\n                    Florencia signed up in first place, so that she was assigned the number 1. After chatting a bit with the other competitors, she realized that she had lost her list of rivals. Because she does not want to bother the TAP's organizers, she has asked all the other competitors for a copy of their own lists of rivals, hoping that with this information she would be able to reconstruct her lost list. Florencia is not sure if there exists a unique general fixture that is compatible with all the copied lists that she was given by the other competitors. However, she knows that the list that she was given by TAP's organizers is in fact unique. Your task is to help her reconstruct this list.\",\n    \"id\": 2037,\n    \"input\": \"Each test case is described using two lines. The first line contains a single integer number N, representing the number of competitors (2 \\u2264 N \\u2264 9). Each competitor is identified by a different integer from 1 to N, and competitor number 1 is always Florencia. The second line contains N-1 non-empty strings Li of at most100 characters each (for ;i = 2, 3, ..., N). The string Li is composed solely of digits between 1 and N, excluding digit i, and represents the list of rivals of competitor number i in chronological order. Note that competitor number 1 appears at least once in one of the given lists. In each test case, there exists a unique list of rivals for competitor number 1 that is compatible with the other lists of rivals. The end of the input is signalled by a line containing the number -1.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Fixture\",\n    \"output\": \"For each test case, you should print a single line containing a string, representing the unique list of rivals of competitor number 1 (Florencia) that is compatible with the lists of rivals of the other competitors. The rivals indicated in this list must appear in chronological order.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By Nicolas A. Alvarez, Universidad Nacional de La Plata   Argentina\\r\",\n    \"category\": \"Graph\",\n    \"description\": \"\\r\\n                    GigaFarma is one of the largest pharmaceutical companies in the world, and it is currently conducting experiments using alien DNA. Its goal is to produce a chain of alien DNA that will report the maximum possible benefit when commercialized.\\r\\n\\r\\n                    A chain of alien DNA can be understood as a non-empty sequence of genes connected by links, and in turn each gene is a non-empty sequence of bases. Because not every possible sequence of bases corresponds to a valid gene, GigaFarma has created a catalogue of genes that appear in alien DNA, which are the only ones considered valid sequences of bases. Each of these genes has a value according to its functionality, and a given chain of alien DNA has a market value that is the sum of the values of the genes that compose it.\\r\\n\\r\\n                    We will represent the different bases with lowercase letters, 'a'-'z', and links using a hyphen '-'. In the following example we can see on the left a possible list of genes and their corresponding values; on the right there are some chains of alien DNA that can be formed with these genes, along with their corresponding market values.\\r\\n\\r\\n                    \\r\\n\\r\\n                    GigaFarma can only produce very specific DNA chains, which we call producible. These chains are a non-empty sequence of DNA portions that the company can synthesize, joined without any additional links between them. Each portion is a sequence of bases and links containing at least one link, but without any consecutive, initial or final links. Each portion has a given cost, determined by the difficulty associated to its production, so each producible chain of DNA has a production cost that is the sum of the costs of each of the portions that form it. In the following example, we can see on the left a list of DNA portions and their costs; on the right we have some producible chains of DNA that can be formed with these portions, along with their associated production cost.\\r\\n\\r\\n                    \\r\\n\\r\\n                    Note that there might be multiple ways of forming the same producible chain using different portions. This is the case of \\\"como-como-les\\\" in the example, which can be obtained using portions \\\"como-co\\\" and \\\"mo-les\\\" with a production cost of 7, or just using \\\"como-como-les\\\" with a production cost of 12. Of course, when there is more than one way to synthesize a given producible chain of DNA, GigaFarma will always do so using the cheapest possible process.\\r\\n\\r\\n                    Clearly, the set of alien DNA chains is infinite, just like the set of producible DNA chains. However, GigaFarma is not directly interested in any of these sets, but in their intersection. If we check the previous examples, we can see that \\\"como-les\\\" is a valid alien DNA chain, but is not producible, \\\"mo-les\\\" is producible, but is not an alien DNA chain and \\\"como-como-les\\\" is both.\\r\\n\\r\\n                    For each alien and producible DNA chain, the company can commercialize this chain to get a net benefit that equals the market value of this chain minus its production cost. Of course, if this net benefit is not positive, the corresponding chain will never be produced. Because there is so much genetic material all over the place, GigaFarma would pay anything in order to know what is the maximum net benefit it can obtain for some producible and alien DNA chain.\\r\\n\\r\",\n    \"id\": 2038,\n    \"input\": \"\\r\\n                    Each test case is described using several lines. The first line contains two integer numbers G and P, representing the number of genes in the catalogue and the number of portions GigaFarma can produce (1 \\u2264 G, P \\u2264 100).\\r\\n\\r\\n                    Each of the following G lines describes a different gene using a string S and an integer V. The string S has between 1 and 10 characters, and is formed solely by lowercase letters representing the bases that form this gene; the integer V represents the value of this gene (1 \\u2264 V \\u2264 1000).\\r\\n\\r\\n                    Each of the following P lines describe a different DNA portion, using a string T and an integer C. The stringT has between 1 and 30 characters, and is composed of lowercase letters and hyphens only, respectively representing the bases and links in this portion. T contains at least one link, but will never have initial, final or consecutive links. The integer C represents the production cost for the corresponding portion (1 \\u2264 C \\u2264 1000).\\r\\n\\r\\n                    Note that in every test case, all of the genes are different from one another, and all of the portions are also different from one another. The end of the input is signalled by a line containing two times the number-1.\\r\\n\\r\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Generating Alien DNA\",\n    \"output\": \"\\r\\n                    For each test case, you should print a single line containing an integer number, representing the maximum net benefit that GigaFarma can obtain from a producible and alien DNA chain. If no net benefit is positive, you should print the value 0. If the net benefit can be arbitrarily large, you should print an asteris '*'.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Matheus Pimenta, UnB  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tDuring his adventure in Imaginationland, Alan Leopold \\\"Butters\\\" Stotch Turing invented his famous ice cream machine. You only have to say the flavor and the machine makes a delicious ice cream!\\n\\n\\t\\t\\t\\t\\tImage source: http://southpark.cc.com/avatar\\n\\n\\t\\t\\t\\t\\tAt this moment, Butters is worried about one thing. He is capable of building his machine in many different ways; and he's doing experiments to decide which is the best. You decided to help him, because you're anxious for a vanilla ice cream. Given a description of a machine and a series of Q queries of flavors, Butters wants to know how many steps this machine takes to make the ice cream of each query.\\n\\n\\t\\t\\t\\t\\tAn ice cream machine is a configuration with a state (an integer number), a string and a position in this string. For each configuration <state,string,position>, a step is generating a new configuration: the state is updated, the symbol at the current position is updated; and the current position is moved to an adjacent one (leftward, or rightward). If the command moves the position to a position beyond the limits of the string, a white space should be concatenated in the respective end of the string; and the position of the new configuration should point to this white space. The machine starts with the configuration <1,flavor,1>, where flavor is a string and the second 1 indicates the first position of this string. The machine halts when it reaches a configuration whose state is the integer S, as in \\\"sorvete\\\" (ice cream in portuguese).\\n\\n\\t\\t\\t\\t\\tThe magical trick is that, for each configuration <state,string,position>, the Butters machine is capable of executing many different steps, so it can make the ice cream faster. Whenever the machine reaches a configuration that leads to multiple new configurations, the machine creates copies of itself, so each copy continues independently. There is a new copy for each new configuration. After creating copies for new configurations, the machine dies. If a particular configuration doesn't leads to any new configuration, it just dies. The process ends when any copy halts and finishes making the ice cream. It is guaranteed that some branch of the machine will halt and give the ice cream.\\n\\t\\t\\t\\t\",\n    \"id\": 2039,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has several test cases and finishes with end of file.\\n\\n\\t\\t\\t\\t\\tThe first line of a test case contains the integers N, S and Q, where 0 \\u2264 N \\u2264 25 and 1 \\u2264 S,Q \\u2264 10.\\n\\n\\t\\t\\t\\t\\tThe next N lines describe the commands of the machine to be tested. Each line is in the format q a t b c, indicating that if a configuration is in the state q and the symbol at the current position is a, there must be a new configuration with state t, update the symbol at the current position to b and the current position should move in direction c, according the description of the statement. Note that 1 \\u2264 q,t \\u2264 S. The input a can be a lowercase letter, '0', or '~' followed by a non-empty string w, which may contain lowercase letters or '0'. In the third case, the command should be executed when the symbol at the current position do not occurs in w. The input b can be a lowercase letter, '0', or '*'. In the third case, the symbol at the current position should not be updated. The input c is either 'E' (of \\\"esquerda\\\", left in portuguese), or 'D' (of \\\"direita\\\", right in portuguese). The symbol '0' means a white space.\\n\\n\\t\\t\\t\\t\\tThe next Q lines describe the queries. Each line is a string flavor of lowercase letters, with at least 1 and at most 20 letters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Programmers Should Learn Theory of Computation\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each query of each test case, print a line with the number of steps of the branch that produced the ice cream.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Nivaldo Carvalho, UNIPE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThyago is a big fan of Sport Club Recife Football Team and always follows the final of the championships when his team is playing. As games are usually at night and Thyago is busy at that time working or teaching class, he don't have time to watch the games of his favorite team and don't have time to accompany the total score of championship throughout the day and championship is in the final round. Deocl\\u00e9cio, who is a friend of Thyago and also very fond of football, is watching the league and annotated the score of all times so far and also the score of the final round matches.\\n\\nYour task is to help Deocl\\u00e9cio making a program that given the name of the participating teams in the league and your score so far and the score of the last game, determine which was the team champion and the final score of this team.\\n\\nChampionship Rules:\\n\\n\\n\\tEach goal scored worth 3 points to the team;\\n\\tIf teams tied the match, will be added +1 point for each team of match;\\n\\tTeam winner of a match wins +5 points.\\n\\n\\nObservations:\\n\\n\\n\\tIs guaranteed there will always have a team winner of league;\\n\\tSport' team will always appear on test cases;\\n\\tWill not have score tied on final score between two or more teams after scoreboards;\\n\\tTeam name on input will always have 1 word only;\\n\\tOn input haven't team names repeated and team names don't have special characters;\\n\\tNone of the teams play more than once (more than one match on the same test case).\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2040,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line contains an integer N (2 \\u2264 N \\u2264 100) representing the quantity of following teams are participating in the championship. Next, Ni lines containing the team name S and team score P until now (0 \\u2264 P \\u2264 100). After this, will have N/2 lines containing score of each game on the last round, in format \\\"TeamA goalsA-goalsB TeamB\\\", as illustrated in the example below. The input ends with N = 0, which shouldn't be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"The Champion\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case in input, your program must produce one line of output containing if Sport' team is the champion: \\\"O Sport foi o campeao com X pontos :D\\\", being X total number of points of team. Otherwise, your program should produce this following line: \\\"O Sport nao foi o campeao. O time campeao foi o S com X pontos :(\\\", being S name of winner team and X total number of poinst of team. Leave a blank line after each test case.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Daniele Oliveira, Universidade Federal de Uberl\\u00e2ndia  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tG\\u00f6delito is fascinated by mathematical and logical issues and spends a lot of time playing in trying to figure out the semantics behind the mathematical sequences. The most fun to G\\u00f6delito is not so much to find the next number in the sequence, but understand the axioms which determine the shape of the sequences.\\n\\t\\t\\t\\t\\tMany sequences are dictated by mathematical rules, for example the Fibonacci sequence whose axiom is that each number is the sum of the previous two. Other sequences involve more semantic axioms, for example the following: 2, 10, 12, 16, 17, 18, 19, 200 ... in which axiom is: numbers whose name starts with the letter D (in portuguese).\\n\\t\\t\\t\\t\\tG\\u00f6delito is currently faced with an interesting sequence. After some time he found that the axiom of the sequence is semantic (he tried first several mathematical accounts, which only made him happier when he discovered the meaning of the sequence). The sequence is shown below:\\n\\n\\t\\t\\t\\t\\t3\\n\\t\\t\\t\\t\\t13\\n\\t\\t\\t\\t\\t1113\\n\\t\\t\\t\\t\\t3113\\n\\t\\t\\t\\t\\t132113\\n\\t\\t\\t\\t\\t1113122113\\n\\t\\t\\t\\t\\t311311222113\\n\\t\\t\\t\\t\\t...\\n\\n\\t\\t\\t\\t\\tG\\u00f6delito was impressed with how this sequence grows quickly. And how do not want to spend sheets of his notebook to calculate all the numbers he wants he asked for your help to create an algorithm to find the other numbers in the sequence. But he explained to you the meaning of the sequence to make your life easier:\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tEach sequence number is generated by reading (describing) the above, for example, the second number is 13 because the top row contains one (1) number three (3). The third number is 1113, because the top line contains one (1) number (1) and one (1) number three (3). The fourth number of the sequence is 3113, because the top row contains three (3) numbers one (1) and one (1) number three (3). I think you get the idea, right?\\n\\t\\t\\t\\t\",\n    \"id\": 2041,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case is composed of a line having an integer N, which is the nth number of the sequence to be calculated, with 0 <N <= 40.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"G\\u00f6delito's Sequence\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output of each test case is a line containing only the nth number of the sequence.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Mattioli e Simi\\u00e3o Carvalho, UnB-Gama  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tIt\\u2019s known that an organization of extraordinary beings is arising quickly. No one knows for sure from where or how it emerged, but it is remarkable how influential and loved are its members. Scrolls found decades ago indicate that there would be a time when an organization would bring happiness to mankind. And, as it seems, this time has come; Hurricane Cart is here. The scriptures also give name to the legendary beings who are part of the organization: Popeye, Captain America, Patat\\u00e1, Ben 10, Spider Man, Mickey Mouse, Woody Woodpecker and their supreme leader: Fof\\u00e3o. Because of his from-another-world skills, he is also known as Fof\\u00e3o of Persia.\\n\\n\\n\\nDespite his superiority, Fof\\u00e3o of Persia has a problem. His city is formed by neighborhoods and bidirectional streets to connect them. There is a wall in each street. Fof\\u00e3o is aboard the Hurricane Cart\\u2019s vehicle at neighborhood P, but all the other members are at neighborhood D. In order to gather all members together and break Exodia free, Fof\\u00e3o wants to get to neighborhood D (it\\u2019s possible to get to any neighborhood leaving from any neighborhood). When the vehicle enters a street, Fof\\u00e3o doesn\\u2019t resist the temptation: he jumps off the vehicle and applies a backflip in that street\\u2019s wall and then gets back to the vehicle. Each applied backflip provides happiness to the fans inside the vehicle by an amount of Fi, which depends on the wall\\u2019s height. The sole of Fof\\u00e3o\\u2019s shoes starts with an amount B of carbon rubber and, for each backflip in a wall, the current amount of carbon rubber decreases by Si, which depends on the wall conditions. If at any time the amount of carbon rubber of Fof\\u00e3o\\u2019s sole is X and he tries to apply a backflip in a wall that has Si > X, Fof\\u00e3o explodes. Fof\\u00e3o (and the vehicle\\u2019s driver) doesn\\u2019t mind passing through the same street several times; the only thing he wants is to get to neighborhood D alive and having provided the maximum possible happiness to his fans. Note that if at any time the vehicle arrives at neighborhood D, the driver will take a nap and no street will be traveled from there on. Write a program to help Fof\\u00e3o: what is the maximum happiness he can bring to his fans while traveling from neighborhood P to neighborhood D?\\n\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2042,\n    \"input\": \"\\t\\t\\t\\t\\tThe input describes a single test. The first line consists of two integers N and M, representing the number of neighborhoods and the number of streets, respectively. The neighborhoods are numbered from 1 to N. (2 <= N <= 100, 1 <= M <= (N * (N - 1)) / 2)\\n\\nThe second line consists of two integers P and D, representing the source neighborhood and the destination neighborhood, respectively. (1 <= P, D <= N and P != D)\\n\\nThe third line consists of a single integer B, which represents the initial amount of carbon rubber on the sole of Fof\\u00e3o\\u2019s shoes. (1 <= B <= 1000).\\n\\nThe M following lines describe the streets (and its corresponding wall). Each street is described by four integers: Xi, Yi, Fi, Si, representing, respectively, the first neighborhood connected to the street, the second neighborhood connected to the street, the amount of happiness that is provided to the fans when Fof\\u00e3o applies a backflip in that street\\u2019s wall and the amount of carbon rubber that is decreased from the sole of Fof\\u00e3o\\u2019s shoes when a backflip is applied in that street\\u2019s wall. (1 <= Xi, Yi <= N, 1 <= Si <= 1000, 1 <= Fi <= 10^9 and Xi != Yi)\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Fof\\u00e3o of Persia\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line with an integer T that represents the maximum amount of happiness Fof\\u00e3o can provide to his fans while traveling from neighborhood P to neighborhood D. If it\\u2019s impossible to Fof\\u00e3o to get to neighborhood D alive, print -1.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By Pablo A. Heiber, Universidad Nacional de La Plata   Argentina\\r\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\r\\n                    To go on holidays, Horacio and Hernan have sacrificed their participation in an important programming contest. While you are in this contest, they are close to the Andes driving along Highway 40, in Argentina, enjoying a pleasant view of the mountains in the horizon. Right now the sky over the highway is a clear, uniform blue, while the visible part of the mountains is a profile presenting rich and attractive textures. This worries Horacio and Hernan, because they fear that the pictures they are taking will be very expensive to print correctly. For this reason, in the next stop they will take out their laptops and write a program to estimate the area of the mountain profile that has to be printed in each picture. Can you finish this program before them?\\r\\n\\r\\n                    Horacio and Hernan will be modeling the mountain profile in the following way. Each mountain is represented by an isosceles triangle whose base rests on the X axis of the XY plane. Two equal-length sides connect the endpoints of the base to the opposite vertex of the triangle, which is the tip of the corresponding mountain. To describe the position and shape of the triangle, we use the coordinates along the X axis of the base's endpoints, along with the height of the mountain.\\r\\n\\r\\n                    The figure below is the model of a mountain profile formed by 4 mountains that are overlapping with one another. The area of the mountain profile that you have to calculate is marked with stripes. The lowest mountain of the figure is described by the values I = 4 (the left endpoint of the mountain base), D = 5 (the right endpoint of the mountain base)  and H = 1 (the height of the mountain).\\r\\n\\r\\n                    \\r\\n\\r\\n                    In this problem, you are given the representation of the mountain profile, and you have to find the area of the union of all the corresponding triangles, in such a way that the overlapping parts are counted only once.\\r\\n\\r\",\n    \"id\": 2043,\n    \"input\": \"\\r\\n                    Each test case is described using several lines. The first line contains a single integer number N, indicating the number of mountains (1 \\u2264 N \\u2264 1000). Each of the N following lines describes a mountain using three integer numbers I, D and H, representing respectively the X coordinate of the left endpoint of the base, the same for the right endpoint of the base, and the height of the mountain (1 \\u2264 I, D, H \\u2264 105 with I < D). In each test case there are no two mountains that are exactly the same (that is, with equal values for the three parameters I, D and H). The end of the input is signalled by a line containing the number -1.\\r\\n\\r\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"High Mountains\",\n    \"output\": \"\\r\\n                    For each test case, you should print a single line containing a rational number, representing the area of the corresponding mountain profile. Round the result to the closest rational with two decimal digits. In case of ties, round up. Note that you should always use exactly two digits after the decimal dot, even if this means ending with a zero.\\r\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By Pablo A. Heiber, Universidad Nacional de La Plata   Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Ignacio and Ines really like science. Luckily they live in Nlogonia, where as everyone knows there are Nscience museums. Both Ignacio and Ines have the next N Saturdays free, so they have agreed on a schedule to visit a different science museum each of these days.\\n\\n                    Ignacio is quite stingy, so every Saturday he will tell Ines that he has forgotten to bring the money to pay the museum's entrance fee, and will therefore ask her to pay for him. Ines always does so, and because she knows him well she also knows that unless she asks for her money back, he will never pay up. In fact, Ines is certain that even if she asks Ignacio for her money back, he will only accept to pay if the cumulative debt is a multiple of 100, because otherwise he will argue that he has no change to pay exactly, and will thus pay nothing at all.\\n\\n                    This being the situation, every Sunday if the cumulative debt is a multiple of 100 Ines will go to Ignacio's house to claim her money, and because he'll have no excuse left, he will pay without any type of protest. Of course he doesn't like this, but he is comforted by the idea that if the cumulative debt after visiting theN museums is not a multiple of 100, Ines shall not claim the last part of her money.\\n\\n                    Ines would like to know how many times she will have to go to Ignacio's house to ask for her money. In order to calculate this, she can provide a list of the prices of the entrance fees to the N science museums in Nlogonia, in the order that she and Ignacio are going to visit them.\",\n    \"id\": 2044,\n    \"input\": \"Each test case is described using two lines. The first line contains a single integer number N, indicating the number of science museums in Nlogonia (1 \\u2264 N \\u2264 100). The second line contains N integers Pirepresenting the prices of the entrance fees to the different museums, in the order in which they are going to be visited (1 \\u2264 Pi \\u2264 100 for i = 1, ..., N). The end of the input is signalled by a line containing the number -1.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"In Debt\",\n    \"output\": \"For each test case, you should print a single line containing an integer number, representing the number of times Ines is going to have to go by Ignacio's house to ask for her money.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By IX Maratona de Programa\\u00e7\\u00e3o IME-USP, 2005  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"The Alamo fort, originally named Misi\\u00f3n San Antonio de Valero, was founded by missionaries to house the priests and the converted Indians in the region that was disputed by the Americans and Spanish settlers. It was founded in the eighteenth century and served as the stage for the bloodiest battle for the emancipation of Texas. Battle of the Alamo took place on February 23, 1836 when the army of the Gal. Antonio Lopes de Sant'Anna surrounded the fort. Texans and \\\"Tejanos\\\" (called \\\"defenders\\\") defended the position for 13 days.\\n\\n                    The Alamo's fort was a fortification of quite intricate shape, surrounded by a high fence. Was often difficult to tell if a soldier was inside or outside the boundaries of the fort.\\n\\n                    Your task in this problem is, given an instance of a fort, given by the coordinates of the vertices of the fence, the coordinates of the flag of Texas, and the position of several soldiers, determine which of them are \\\"defenders\\\" and which are Spanish.\",\n    \"id\": 2045,\n    \"input\": \"Several instances are given. Each instance starts with an integer that is the number 0 \\u2264 n \\u2264 1000 of vertices that the fort fence has. The value 0 indicates the end of data. In the following n lines there are the coordinates of the fence posts of the fort. The posts are data from the first, following the fence clockwise. Next is the position of the flag of Texas. On the next line, the number is 0 \\u2264 m \\u2264 1000 people to be checked. In the following m lines have the coordinates of the positions of each person. All coordinates given are integers in the range [-100000; +100000].\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Defending Alamo\",\n    \"output\": \"For each solved instance, you must print a handle Instancia h where h is an integer, and increasing sequentially from number 1. In the following m lines, you must print soldado k (for k = 1, ..., m) followed by defender or espanhol respectively if the soldier is inside or outside the fort. A blank line should separate the output of each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By IX Maratona de Programa\\u00e7\\u00e3o IME-USP, 2005  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Texas is famous for its excellent quality meat. \\\"Steaks\\\" with up to two inches thick roasted in grills are a culinary specialty of the state. In San Antonio is difficult to find pizza delivery by phone, but it is very common to find \\\"steaks disk\\\". You call the number and in few minutes there comes a succulent steak at home, hot and ready to eat. It is clear that such efficiency depends on a complicated delivery system. There are several headquarters throughout the city, and whenever a call is done the nearest headquarter is put in action, the steak is roasted and delivery follows with succulent dinner. We know that San Antonio is a planned city. We can imagine the crosses city as vertices of a grid. For some obscure reason, all headquarters are installed at crosses. Your task is to help the company to deliver the steaks.\",\n    \"id\": 2046,\n    \"input\": \"Several instances are given. For each instance are given the dimensions 0 \\u2264 M, N \\u2264 1000 of the city (will be a grid with M lines and N columns). An N = 0 or M = 0 value indicates the end of data. Next comes the number 0 < K \\u2264 100000 of the headquarters. In the following K lines have the coordinates of the headquarters. Next is the number 0 \\u2264 L \\u2264 100000 of calls requesting steaks. In the following L lines have the coordinates of each call position (which are also the vertices of the grid).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Delivers Steak\",\n    \"output\": \"For each solved instance, you should print an identifier Instance H where H is an integer, sequential and growing from 1 number. In the following L lines, you should print in which headquarter the corresponding request was attended to that line. In case of more than one headquarter at the same distance, give preference that owning the lowest line index. If the draw persists, give preference to the lowest column index. A blank line should separate the output of each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By IX Maratona de Programa\\u00e7\\u00e3o IME-USP, 2005  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Bill Poucher announced in Shanghai (China), on last April, that the thirtieth ACM-ICPC World Final will be held in San Antonio (USA) on the second week of 2006.\\n\\n                    Upon becoming aware of such information (a few months late), an air transport company on Texas - known as Fly by Night Ltd. - decided to take advantage of the event to increment its annual revenue.\\n\\n                    The goal of the company's CEO was to offer air transport to the teams (including contestants and coaches) and to the support staff (those who make things work) from their cities of origin, in their countries of origin, to the contest site. Trying to ensure the success of his idea, the same CEO offered prices slightly below the market price for those who would be transported. As they were mostly students and professors, they accepted in a minute.\\n\\n                    As you probably guessed, Fly by Night Ltd. operates night flights. However, instead of having its own airplanes, the company just sells seats in other companies' flights. The company gets a good comission due to the fact that those flights have, historically, a low occupation.\\n\\n                    However, when the company's employees were checking the flights that were available for the operation, they had a big surprise. Most flights where completely full. Those who were not full didn't have many free seats. Nobody could explain the reason for the irregular demand. Two hypotheses were raised: the proximity of the american spring-break and the popularity of the contest. :-)\\n\\n                    Trying to save the company (and his own position), the CEO realized it would be necessary to perform indirect flights and transfers. This way, the profit woud be lower, but nothing compared to the loss that the company would have by operating daytime flights or failing to transport the passengers (who, at the time, had already paid for their tickets).\\n\\n                    The Fly by Night Ltd. employees proposed a set of scenarios with the flights that could be used. What was noticed shortly thereafter was that not all scenarios were viable, since they could not transport the necessary amount of passengers. Finally, the CEO noticed that he didn't have qualified staff to deal with the situation. You were hired to develop a program that, for each built scenario, answer if the scenario is viable or not.\",\n    \"id\": 2047,\n    \"input\": \"A scenario, from now on, will be called instance. Your program must be prepared to deal with various instances.\\n\\n                    Each instance starts with an integer 0 \\u2264 m \\u2264 100 that specifies the number of origin cities of the passengers to be transported. A value m = 0 indicates the end of the instances and must not be processed. Otherwise, for each of the next m lines, the name of a city and the respective number of passengers from that city are given (an non-negative integer less than or equals to 100). The name of the city is between 1 and 20 caracters from the alphabet \\u03a3={a,b,...,z,-}\\n\\n                    In the next line are given an integer 0 \\u2264 n \\u2264 100, that represents the number of flights in the instance, and the name of the city where the event will occur (the CEO decided that the program must accept that). The name of that city follow the same rules above.\\n\\n                    In each of the n next lines are given the names of two cities of a flight (origin and destination, respectivelly), followed by a non-negative integer less than of equals to 200 that represents the number of free seats in that flight. Again, the names of the cities are from \\u03a3 and with length between 1 and 20. You can assume that there aren't two cities with the same name and that the cities of origin and destination are always different. Furthermore, Fly by Night Ltd. doesn't work with more than one flight between any two cities.\\n\\n                    In each line of the input, any number of spaces may separate the provided data.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Fly By Night\",\n    \"output\": \"For each solved instance, you must print an identifier Instancia h, where h is an integer number, sequential and increasing from 1. On the next line, you must print viavel if it is possible to transport all passengers from their origin cities to the specified destination, and inviavel otherwise. A blank line must separate the output of each instance. Including the last instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By IX Maratona de Programa\\u00e7\\u00e3o IME-USP, 2005  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"On July 1st, 1947, a strange object was detected by american force radars installed on Roswell, White Sands and Alamogordo. The tremendous speed and the erratic moves of the object indicated that it wasn't an airplane or meteorite. Four days later, a shepherd and a group of archaeologists found remains of a crashed object to the north of Roswell. Thereafter, american authorities step in and transport the remains of the object to Fort Worth, Texas. They said the wreckage were simply remains of an experimental weather balloon. Many people, however, think it was the remains of an unidentified flying object (UFO). Many years have passed since then, and the case continues to attract attention and generate controversy.\\n\\n                    A group of ufologists rooted on San Antonio, a texan city located south-southwest of Fort Worth, is convinced that extraterrestrial beings have visited the region frequently ever since. After a lot of research, the ufologists found that they could build an alternative communication network to try to contact the ETs. Such a network would use remains of the old telegraph system from the Texas desert and its alternativity comes from the attempt to avoid, according to them, the intromission of the aforementioned authorities.\\n\\n                    After a thorough survey (that identified posts, wirings, capacitors, transformers, etc.), the ufologists realized that information transmitted through certain parts of the old telegraph structure had worse quality than others. Based on statistical samples, they obtained, for some pairs of points u and v of the old network, a probability puv of having interference on information transmitted between u and v. Knowing that you would be in the region in April next year, they asked you to build a program to identify the smaller set of paths to be used so that (i) all the desired points are interconnected (even indirectly), and (ii) the total probability of interference on the messages sent through this network is minimum. Eager to discover the truth (which \\\"is out there...\\\"), you promptly responded to the request.\",\n    \"id\": 2048,\n    \"input\": \"Your program must be prepared to deal with various instances. Each instance have the following format. On the first line, are specified two integers 0 \\u2264 n \\u2264 100 and 0 \\u2264 m \\u2264 n(n-1)/2, which represent, respectivelly, the number of points on the alternative network and the number of pairs of points for which the interference probabilities were measured. On the m following lines, are given (in each line) two integers 1 \\u2264 u,v \\u2264 n and a rational 0 \\u2264 puv \\u2264 1 representing that between two points u and v, the probability of interference is puv. A value n = 0 indicates the end of the instances and must not be processed. You can assume that it's always possible to satisfy the restriction (i).\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Houston, We've Got a Problem!\",\n    \"output\": \"For each solved instance, you must print an identifier Instancia h, where h is an integer number, sequential and growing from 1. On the next line, you must print (with five decimal places) the minimum probability of interference calculated for the instance. A blank line must separate each instance's output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By IX Maratona de Programa\\u00e7\\u00e3o IME-USP, 2005  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"Before the Hispanic colonization and then the English one, the region of San Antonio was dominated by Indians ahmoc-axhozupeck, ancestors of the Sioux and Apaches. Ethnicity was completely destroyed by the colonists in the eighteenth century, making impossible the task of deciphering their large panels.\\n\\n                    The Department of Archaeology at Baylor University devotes much of his research to the panels of Ahmoc Indians. Surprisingly the Indians already knew the Hindu numerals, but they did not use it for calculations (after all trade in that civilization did not exist). Baylor archaeologists suspect that the panels full of numbers were merely decorative. Also suspect that some patterns that recurred were signatures of the artists in order to ensure the authenticity of the panel.\\n\\n                    Your task in this problem is to see if the panels are true, ie, if, indeed, contain the signature of the artist that the archaeologist suspected to be the author.\",\n    \"id\": 2049,\n    \"input\": \"Several test instances are given. Each instance starts with a positive integer 0 \\u2264 a \\u2264 1000000 which is the signature of the artist. The integer 0 indicates the end of data. The next line is the sequence number of the panel, which can be up to 300000 digits.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Numbers of Ahmoc\",\n    \"output\": \"For each solved instance, you should print \\\"Instance h\\\" where h is an integer, and increasing sequential number starting from 1. On the next line, you should print \\\"verdadeiro\\\" (true) if the sequence of numbers contains the signature of the artist or \\\"falsa\\\" (false) if otherwise. A blank line should separate the output of each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By IX Maratona de Programa\\u00e7\\u00e3o IME-USP, 2005  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Bill \\\"Snake\\\" Ramsey was one of the most famous saloon owners in San Antonio. His saloon was known up to the West Coast, and his poker tables, which were always full, were also a synonym for electrifying games, lot's of money and, quite often, bloody quarrels.\\n\\n                    Ramsey had a theory (and his .38 revolver intimidated those who disagreed with it) that at a poker table with 6 participants there would always be 3 who were friends with eachother, or 3 who were enemies between eachother (in those times in San Antonio if you weren't someones friend, he automatically became your enemy). Today we know that in fact Ramsey was right.\\n\\n                    Your job in this problem is to check Ramsey's statement for various examples.\",\n    \"id\": 2050,\n    \"input\": \"Multiple poker tables are given (each table always has 6 players). For each table the number M (-1 \\u2264 M \\u2264 15) of pairs of friends is given, followed by, in the next line, the names of the participants of that game (each name is a string with at least 1 and at most 15 characters and you can suppose that the names of the players are pairwise distinct). After that, there are M lines, each one with names of two friends in that table. You should consider that a player is not a friend of himself. The value -1 indicates the end of the data.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Ramsey's Saloon\",\n    \"output\": \"For each instance solved, you must print an identifier Instancia h, in which h is an integer, sequential and crescent, starting from 1. On the following lines, you must print the names of three players in that table, followed by sao amigos (are friends) or sao inimigos (are enemies), according to the case. There must be as many lines as cases (relations) determined. These lines must be listed in lexographical order. The same must be true for the three names on any given line. A blank line must sepparate the output of each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Lise, URI Online Judge  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tKarnaugh map is a table set up to facilitate the minimization process of logical expressions. They allow simplifications 2, 3, 4 or more variables, this problem we use expressions at most 4 variables. Your task is simple, given the truth table you should print their map Karnaugh and say if the expression is a \\\"Tautologia\\\" a \\\"Contradicao\\\" or \\\"Contingencia\\\".\\n\\t\\t\\t\\t\",\n    \"id\": 2051,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input file contains an integer N (0 \\u2264 N \\u2264 50) indicating the number of test cases in the first test case of the line contains an integer V [2, 3, 4] indicating the number of variables that will be used the next 2V lines contain the truth table.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Karnaugh Maps I\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, you should display the message \\\"Mapa de Karnaugh\\\", followed by the same as the example below, after presenting the map you must identify whether it is \\\"Tautologia\\\", \\\"Contradicao\\\" or \\\"Contingencia\\\", a blank line must separate test cases, care spaces, the values in the map should be aligned with the first digit of the column.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Bucior, URI Online Judge  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tProfessor Jack delivered a list of review exercises, saying that next time will make an assessment. The main content of this list is Karnaugh Maps. John received the list, but realized he lacked the Karnaugh Maps. John is smart and knows a friend who's always going to school, and knows how to solve Karnaugh Maps. In this problem you're the friend of John, is that you can help John? Connecting the least amount possible pairs? Following the specifications of the teacher:\\n                    \\n                        1st Form pairs: one pair is connected, when you find the smaller adjacent point present.\\n                        2nd Form isolated terms: connected pairs do not need to be connected a second time.\\n\\t\\t\\t\\t    \\n\\n\\n\\n\\t\\t\\t\\t\\t \\n\\n\\t\\t\\t\\t\\t  \\n                       In the Karnaugh Map above it is possible to identify the points connected by following the specifications of the teacher. Connected pairs: pair [2-6] indicates that the 2 point found the smaller adjacent point present 6. Isolated pairs: note that the couple [6-8] is not a pair isolated. The 6 point is connected with the 2 point, and the point 8 is connected with point 7. So it's not a valid pair. One pair is valid if, and only if, one of his points is not connected to any other point. Each pair consists of [ origin-destination ], the couple always begin to be connected to the lowest point present in the N line the entrance, origin, with the lowest adjacent destination this point, a point of origin has four destination points, for example the source point 16 is the point [ 8, 12, 14, 15 ] destination.\\n                      \\n\\t\\t\\t\\t\\t\\n                       An instance contains an integer N. The next N rows consist of real points in the Karnaugh Map. We're talking about Karnaugh Maps of four variables. Therefore a maximum 16 numbers. As the professor showed an example, everything becomes easier. In the image above you can see that there are four pairs connected: [2-6] [7-8] [12-16] [13-14]. And all points are connected. Help John solve the review exercises.\\n                    \\n\\n\\t\\t\\t\\t\",\n    \"id\": 2052,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of each instance contains an integer N ( 1 \\u2264 N \\u2264 105 ), that corresponds to the number of exercises present in the list of professor Jack. The N  lines contains an indefinite number of integers E ( 1 \\u2264 E \\u2264 16 ). Each integer E  indicates that the Karnaugh Map in position E, it's true, this is contains 1, as mentioned above. The entry ends with end-of-file (EOF).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Karnaugh Maps II\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print the message \\\"Instance #H:\\\", where H is the instance number, and growing from sequential 01. Then, for each N line of the instance, the professor asked to print, the number of pairs that are connected, the number of points not connected, followed by message \\\"->\\\". After, list all connected pairs in ascending order, with a space between two connected pairs. If you cannot connect any point, print the message \\\"No connection found\\\". Print a blank line between two consecutive instances.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By X Maratona de Programa\\u00e7\\u00e3o IME-USP, 2006  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Since early 2006 the Seti@home (search program of alien\\u2019s life) has recorded strange patterns in radio transmissions received from space. Initially it was believed to treat only about static. But with time and repetition transmissions researchers were becoming convinced that there was something more. Invited to join the project, linguists at Baylor University have identified a language in the transmission. It was a very simple language.\\n\\n                    The language has several rules of word composition. The composition rules will be described in this problem by the following elements: a set of non-terminal symbols V; a set of terminal symbols T; a special non-terminal symbol called the root; a set of rules for the composition of words.\\n\\n                    All rules of composition that will be considered here will be the form A \\u2192 BC or of the form A \\u2192 a, where A, B, C are elements of V and a is an element of T. The notation above indicates that we can replace the non-terminal A to the left of the arrow by the terminal a (the first case) or by the concatenation of non-terminals A and B (the second case) that appear to the right of the arrow.\\n\\n                    Repeatedly applying the rules of composition on the root symbol, we can assemble valid words in the language.\\n\\n                    For example, suppose the following set of composition rules is valid:\\n\\n                    S \\u2192 AB\\n\\n                    A \\u2192 a\\n\\n                    B \\u2192 b\\n\\n                    The word ab can be obtained from this set of rules of composition as follows:\\n\\n                    S \\u2192 AB\\n\\n                    AB \\u2192 aB, because A \\u2192 a\\n\\n                    aB \\u2192 ab, because B \\u2192 b\\n\\n                    However, the word b can\\u2019t be produced from S from that same set of composition rules.\\n\\n                    Given a set of composition rules and a list of words, your task is to determine, for each word, if it can be produced or not from the rules described in the current instance.\",\n    \"id\": 2053,\n    \"input\": \"The input consists of several test cases. Each test follows the rules described above.\\n\\n                    In the first line of each test appears the root symbol, which will always be a capital letter. In the second line, the set V will be provided as a word composed of only uppercase letters. Each letter of the word will be identified as a member of V.\\n\\n                    The set T will be given as a word of printable characters (except for # and blank characters) in the third row. Each character of this word will be identified as a member of T. The following several lines which describe the rules of composition for the current instance will be provided.\\n\\n                    A composition rule as # \\u2192 # indicates the end of the list of rules of composition.\\n\\n                    Finally, several lines are provided, each containing a word that we want to know whether or not it can be produced from the root through the rules of composition. These words will not contain any character in V and are composed of a maximum of 50 characters. The list of words ends with a line containing # in the first column.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"ET Phone Home\",\n    \"output\": \"At the beginning of each instance print the line Instancia k, where k is the number of the current instance. Then, for each word x in the list, print a line in the output saying x e uma palavra valida if it can be obtained from the root through the rules of composition, and x nao e uma palavra valida otherwise. Print a blank line after each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By X Maratona de Programa\\u00e7\\u00e3o IME-USP, 2006  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"During the Cold War, the city of Marienbad in Czech Republic was immortalized by the spies who used its luxiorious hotels in exchange for information and even for rest and a holiday getaway. In this city a game became famous, \\\"Streichholzpiramidentfernungspiel\\\" as known and appreciated by the spies from both sides of Germany.\\n\\n                    The game starts with 6 rows of matches. The first row contains 1 match, the second contains 3, the third 5, the fourth 7, the fifth 9 and the sisth 11. Below is a design scheme of the original game.\\n\\n                    \\n\\n                    Two people participate in this game, alternating movements. In each turn, a person must take a quantity of matches different than zero from the board. All matches taken in a turn must belong to the same row. Therefore, if a row contains k matches and a player decides to take matches from this row in his turn, he has k different move options (he can take between 1 and k matches).\\n\\n                    If after a turn the board becomes completely empty (i.e., no matches in every one of the 6 rows), the player from the last turn (the player who removed the last matches) loses the game.\\n\\n                    Given the description of the board after a few turns, you have to determine if the player who is playing the next turn can win the game, assuming that his opponent is smart, thus always chooses the best possible move.\",\n    \"id\": 2054,\n    \"input\": \"The input begins with a integer N in the first line, indicating the number of instances of the problem that your program should solve. The next N lines contain the description of the instances. Each one of these lines contain a sequence of 6 integer numbers. The i-th number of the sequence indicates how many matches still remain in the i-th row of the game. All of the sequence numbers are valid (which means that the i-th integer contains a value between 0 and the number of matches in which the i-th row starts with in the game).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Last Year at Marienbad\",\n    \"output\": \"For each instance, you must print an identifier \\\"Instancia K\\\", where K is the number of the current instance. On the next line, your program must print \\\"sim\\\" if the player wins this instance of the game, and \\\"nao\\\" otherwise. Print a new line between each instance.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By X Maratona de Programa\\u00e7\\u00e3o IME-USP, 2006  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"However, differently of traditional benchmarks, Prechelt compared different implementations of the same task made by 38 different developers (in experience and knowledge). Prechelt's study showed that Java is from 3 to 4 times slower than C or C++, but the greater variations ocurred between the programmers, not between the languages, suggesting that it's better to spend more time training the developers instead of discussing which language should be picked.\\n\\n                    Years later Garret extended this study adding Lisp as one of the possible implementations to the problem, and this time, besides considering the comparing factors used by Prechelt, he added the development time as metric. Garret's results were surprising: Lisp was the best in all aspects, requiring less time and code lines, using less memory and executing faster than the programs in C, C++ or Java. It was proven that Lisp programmers are much better than other programmers. This is your chance to prove that Garret's study was wrong. How? Solving the same problem, in less time and with faster implementations.\\n\\n                    The problem that was the base of both studies is the following: Consider the following mapping between letters and digits:\\n\\n                    \\n\\n\\n                    We want to use this mapping to code phone numbers into words in a way that it becomes easier to memorize. Your task is to write a program that finds, given a phone number, all it's possible coding in words. A phone number is an arbitrary string with only hifen (-), slashes (/) and digits. The hifen and slashes should not be encoded. The words are taken from a dictionary informed in alphabetic order. You should print only the words that completely encode the phone number. The dictionary words may have upper and lower case letters, hifen (-) and quotation marks (\\\"), but you must use only the letters to encode a number. The word must be printed as given in the dictionary. The encoding of a phone number may consist of one or more words, separated by a single space. The encoding is made word by word, from left to right. If at some point of the encoding no word from the dictionary can be inserted, then a single digit of the number can be used in the encoding, but two consecutive numbers aren't allowed in a valid encoding. In other words: in a parcial encoding that covers k digits, the digit k+1 is encoded by itself if and only if, first, the digit k wasn't encoded by a digit and, second, there isn't any word in the dictionary that can be used in the encoding starting from digit k+1.\",\n    \"id\": 2055,\n    \"input\": \"Each instance is composed by a line with an integer 0 < n \\u2264 75000, the number of words in the dictionary. The next n lines have words with at most 50 characters. After the dictionary follows an integer 1 < t < 100000, and in the t following lines follows the phone numbers the must be encoded. When n is 0, your program must stop.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Lisp is Better than Java, C and C++\",\n    \"output\": \"For each instance your program should print a line containing Instancia k, where k is the number of the k-est instance. For each phone number processed your program should print all the possible encodings in ascending lexicographical order (ASCII order). Each encoding must be printed in the following format: the phone number followed by colon (:), an empty space and the encoding. A blank line must be printed between 2 test cases.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By X Maratona de Programa\\u00e7\\u00e3o IME-USP, 2006  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"In a not too distant future, people will seek games that are increasingly dangerous in order to have fun. After ultralight and bungee-jump, games must be challenging in an intellectual manner as well. In New Zealand, a game just like this was invented; it is called \\\"The Cube\\\" or, as known for the japanese name, \\\"Sokoban\\\".\\n\\n                    In the game, there is a bi-dimensional labyrinth with square cells; each cell is either free or occupied by a rock. In each step, you may leave the cell you occupy and move to a neighbor free cell (up, down, left or right).\\n\\n                    A single cell from the labyrinth contains a stack of boxes. The stack can be moved from a cell i to a cell k (for instance, k = i + 1), neighbor of i, if and only if you are in a cell j (in this example, j = i - 1), also neighbor of i, and the direction ik is the same as the direction ji (which means you are pushing the box to the next cell). A box cannot be moved in any other way (you cannot pull it, for instance). Therefore, if the box reaches an edge of the labyrinth, you will not be able to move it again. Although each time you push a box you take a step, the contrary may not always be true.\\n\\n                    One of the empty cells is marked as the final cell; and your task is to bring the box to that final cell by a sequence of steps and push's. As the box is very heavy, you want to do it in the smalles number of push's possible.\\n\\n                    Remember that in the real life's game, there is the possibility of you stucking yourself or even get crushed by the box, making it a lot funnier.\",\n    \"id\": 2056,\n    \"input\": \"The input may contain several instances. Each instance starts with a line containing two integers r and c (20 \\u2265 r,c), representing the number of lines and columns of the labyrinth.\\n                    \\n                    Following there are r lines, each containing c characters. Each character describes a cell from the labyrinth. A cell occupied by a rock is indicated by # and an empty cell is represented by a \\\".\\\" (without quotes). Your initial position is indicated by S, the box position is indicated by B and the final position for the box is indicated by T.\\n\\n                    The input ends with r = c = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Cube\",\n    \"output\": \"For each labyrinth, print a line with the number of the instance, as shown in the example below. If it is impossible to take the box to the desired final position, print \\\"Impossivel\\\" (without quotes, meaning \\\"Impossible\\\" in Portuguese).\\n\\n                    Otherwise, you should print two integers x and y; x indicates the number of moviments (steps you walked) and y the number of push's needed for taking the box to the final cell. If there is more than a sequence with the same minimum number of push's, the number of moviments must be minimized as well. Print an empty line after each instance.\",\n    \"timelimit\": 0.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tPaul and Peter have made a long journey since they left Brazil to compete in the ICPC World Finals, in Phuket, Thailand. They noticed that in each place where they stopped, they had to adjust their watches because of the time zone.\\n\\n\\t\\t\\t\\t\\tThis way, to plan for upcoming trips, they asked you to create a mobile application that, given the departure time, travel time and the destination time zone with respect to the origin, you have to inform the time of arrival of each flight in the destination.\\n\\n\\t\\t\\t\\t\\tFor example, if they left a place at 10 am for a 4 hour journey to a destination that is on the east, in a time zone with an extra hour with respect to the time zone of the starting point, the arrival time will be 10 hours + 4 hours + 1 hour (due de time zone), i.e. they will arrive at 15 hours. Note that if the calculated time is 24, its program should print 0 (zero).\\n\\t\\t\\t\\t\",\n    \"id\": 2057,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains 3 integers: S (0 \\u2264 S \\u2264 23), T (1 \\u2264 T \\u2264 12) y F (-5 \\u2264 F \\u2264 5), separated by a space, respectively indicating the time of departure, the travel time and destination time zone with respect to the origin.\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Time Zone\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint an integer that indicates the local time specified in destination, as the examples below.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tProfessor Rafael loves Computer Graphics. Its favourite activity is rendering objects, specially dolls. But he does not like to draw regular polygons using triangles. This task is done by composing a regular polygon using only triangles, in such a way that the triangles do not intercept each other and the minimum number of them are used in this composition. In the picture below you can see a square and a pentagon with its triangles.\\n\\n\\n\\nProfessor Rafael asked you to calculate the minimum number of triangles necessary to compose a N-sided regular polygon.\\n\\t\\t\\t\\t\",\n    \"id\": 2058,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is a single number N (3 \\u2264 N \\u2264 109), indicating the number of sides of a regular polygon.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Triangles and Regular Polygons\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the minimum number of triangles necessary to compose an N-sided regular polygon.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Marianne Linhares, UFCG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tA new game called Odd, Even or Cheating is currently (OEC) is now one of the most popular games in the world. This game was created when some friends had no internet connection, no cellphone, no computer, and pretty much nothing to do. The game is so popular that is going to happen the mundial championship of OEC and each country of the world will choose a representant to compete in this championship.\\n\\nThe game works like this: it's a two players game, the player 1 chooses between odd or even, then each player chooses a positive integer, if the sum of these number is even and player 1 chose even, then player 1 wins, if the sum is odd and player 2 chose odd, then player 2 wins. If player 1 chooses odd he/she wins when the sum is odd, and player 2 wins when the sum is even. Nothing new, right?\\n\\nBut now there are two more possible moves, player 1 can cheat to make sure that he/she wins independently of the result of the conventional odd or even game, and player 2 can accuse player 1 of cheating. With these additions in the game if player 1 cheats and player 2 accuses him/her of cheating player 2 wins, if player 2 don't accuse and player 1 is cheating then player 1 wins, if player 2 accuses the cheat, but player 1 is not cheating then player 1 wins, if player 1 isn't cheating and player 2 doesn't accuse player 1 then the game will be played as described previously.\\n\\nYou were hired by OECIO (Odd, Even or Cheating International Organization) to develop a program that given an OEC match it determines the winner.\\n\\t\\t\\t\\t\",\n    \"id\": 2059,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of one line with 5 integers: p, j1, j2, r, a. ( 0 \\u2264  p, r, a \\u2264  1 e 1 \\u2264  j1, j2 \\u2264  100).\\n\\np is the player 1 choice (if p = 1 then player 1 chooses even, if p = 0 then player 1 chooses odd). j1, j2, represents respectively the numbers that player 1 chose and the number that player 2 chose. r represents if player 1 cheated (if r = 1 then player 1 cheated, if r = 0 then he/she did not), a represents if player 2 accused player 1 of cheating (if a = 1 then he/she did, if a = 0 then he/she did not).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Odd, Even or Cheating\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint \\\"Jogador 1 ganha!\\\" if player 1 won or \\\"Jogador 2 ganha!\\\" if player 2 won (no quotation marks).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tBino and Cino are close friends. Bino likes to create mathematical challenges to Cino. This time, Bino created a list of numbers and asked to Cino: How many numbers are multiples of 2, 3, 4 and 5?\\n\\nThis challenge looks simple, but when the list contains many numbers, Cino makes some miscalculations. To help Cino, make a program to solve the Bino's Challenge.\\n\\t\\t\\t\\t\",\n    \"id\": 2060,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input consists of an integer N (1 \\u2264 N \\u22641000), representing the amount of numbers in the Bino's list.\\n\\nThe second line contains N integers Li (1 \\u2264 Li \\u2264 100), representing the numbers of the Bino's list.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Bino's Challenge\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the amount of multiples of 2, 3, 4 and 5 in the list. Note the formatting of the output in the output sample, because it must be followed strictly. \\\"Multiplo(s)\\\" means  \\\"Multiple(s)\\\" in English, but you must print the message in Portuguese.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Hermann Negri, UTFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tP\\u00e9ricles has an unique interest in history. With his up-to-date internet browser chromed fox, he wandered in the most obscure sites about ancient Greek mythology.\\n\\n\\nBy some type of cosmic irony, P\\u00e9ricles' browser was infected by a malware with a peculiar characteristic: every time P\\u00e9ricles closed a tab in his browser, another two opened! However, when P\\u00e9ricles clicked one of the ads (all tabs were infested with ads), the tab crashed, and no other tabs were opened.\\n\\n\\nYour taks is to compute the final number of tabs of P\\u00e9ricles's browser, knowing the initial number of tabs and the actions taken by P\\u00e9ricles. There are two possible actions: fechou (when P\\u00e9ricles closed a tab) and clicou (when P\\u00e9ricles clicked on an ad).\\n\\t\\t\\t\\t\",\n    \"id\": 2061,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is initiated by a line containing two integer numbers, N e M (0 < N, M < 500), representing the initial number of tabs and the number of actions performed by P\\u00e9ricles. Each subsequent line contains an action (fechou or clicou). Naturally, the current number of tabs is always greater of equal to zero.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Closing Tabs\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output must consist of a line containing the final number of tabs.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tMariazinha created an exercise for her sisters Paula and Marta: she distributes a text and asks both to correct this text, knowing that only the OBI and URI words may be written incorrectly, and the error can be only in the last letter.\\n\\nYour task here is automatize this process, creating a program to make the correction of the texts distributed by Mariazinha in order to check the corrections of her sisters without much work.\\n\\nNote that if \\\"OB\\\" or \\\"UR\\\" were part of a larger word (for example, \\\"OBOS\\\"), it should not be altered.\\n\\t\\t\\t\\t\",\n    \"id\": 2062,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains two lines. The first line contain a integer number  N (1 < N < 10000) that indicates the amount of text words. The second line contains these text words, each one with up to 20 characters ('A'-'Z'), inclusive, or at least, one letter ('A'-'Z').\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"OBI URI\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program must correct the text distributed by Mariazinha, according to the criteria above defined.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Caio Russi, UNOESTE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tDiglett is a Pok\\u00e9mon type of land that is digging underground tunnels and is almost never seen. It appears on the surface through a hole in the ground time to time, where you can view only his head.\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\tThe tunnels built by them are unidirectional and always connect an origin hole to a destination hole, for example: if there is a tunnel connecting the hole A to the hole B, then it is possible to go from A to B and not the opposite. Each Diglett has its own hole, which indicates that there N holes will be N Digletts. Each hole has exactly two tunnels: the first tunnel, which runs from it to another hole and the second tunnel, which comes to him from another hole.\\n\\t\\t\\t\\t\\tThe Digletts are walking from hole to hole every moment of time, for example: consider a hole A that has a tunnel that connects to a hole B, if one Diglett in the hole A at time T, then the next moment of time T+1 it will be in the hole B. When a Diglett arrives at his hole, it appears immediately on the surface. When not in his hole, it just remains underground and waiting for the next moment of time to walk the tunnel and go to another hole. It is guaranteed that each Diglett always returns to its hole in a moment of time.\\n\\t\\t\\t\\t\\tXisto is a Pok\\u00e9mom Master and is looking to capture the greatest amount of Digletts with only a pokeball, this in turn is able to capture all visible Digletts in a given area. He needs your help to know what is the shortest time in which all Digletts will appear on the surface at the same time, so he could throw the pokeball and catch them all.\\n\\t\\t\\t\\t\\tNote: At time zero Digletts are all in their respective hole and does not appear on the surface.\\n\\t\\t\\t\\t\",\n    \"id\": 2063,\n    \"input\": \"\\t\\t\\t\\t\\tThe first row contains an integer N (2 \\u2264 N \\u2264 100) representing the amount of holes. The next line contains N integers Bi\\u00a0(1 \\u2264 Bi \\u2264\\u00a0N), where the i-th integer representing the i-th hole, and indicates a unidirectional tunnel i-th hole to Bi\\u00a0hole.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Hunting Digletts\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the shortest time in which all Digletts will appear together on the surface.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Marianne Linhares, UFCG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tPrant is a very undecided boy, making choices is a very hard and stressing task for him. But Prant has a new dog and has to choose the name of the cute puppy. He has a name in mind, but as told Prant is a very undecided boy, and from time to time Prant changes the name of the dog making a letter change operation, he chooses two letters A and B, and all letters A now become letters B, and all letters B now become letters A. It's possible that some letter (A or B) is not present in the name of the dog, and also A and B can be the same letter, because Prant gets pretty nervous to choose the letters.\\n\\t\\t\\t\\n\\t\\t\\tIn order to make a decision Prant randomly chose some letters and defined them as his favorite letters (after all Prant is a very undecided boy, what better way to choose his favorite letters than randomly?) in a way that the best name for the dog is the name that has more favorite letters in it. The problem is that Prant gets very anxious to make the operations, and sometimes he makes very illogical changes in the name.\\n\\n\\t\\t\\tFor instance if Prant's favorite letters are {a, e, i, o, u}, the dog's initial name is \\\"abccdab\\\" that has 2 favorite letters in it and Prant makes the following letter change operations:\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tchange(c, e), then \\\"abccdab\\\" -> \\\"abeedab\\\", now the dog's name is \\\"abeedab\\\" with 4 favorite letters\\n\\t\\t\\t\\t\\tchange(b, i), then \\\"abeedab\\\" -> \\\"aieedai\\\", now the dog's name is \\\"aieedai\\\" with 6 favorite letters\\n\\t\\t\\t\\t\\tchange(a, f), then \\\"aieedai\\\" -> \\\"fieedfi\\\", now the dog's name is \\\"fieedfi\\\" with 4 favorite letters\\n\\t\\t\\t\\t\\tchange(d, h), then \\\"fieedfi\\\" -> \\\"fieehfi\\\", now the dog's name is \\\"fieehfi\\\" with 4 favorite letters\\n\\t\\t\\t\\t\\n\\n\\tThe best name generated by Prant was \\\"aieedai\\\", because was the name with the maximum number of favorite letters.\\n\\n\\nYour task is given the inital name of the dog, Prant's favorite letters and the operations that were made, find the best name that Prant generated for his dog. The original name can be the answer.\\n\\t\\t\\t\\t\",\n    \"id\": 2064,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input consists of three integers: k, m, n (1 \\u2264 k \\u2264 26, 1 \\u2264 m, n \\u2264 100 000). In the next two lines there will be two strings, made of only lower-case letters, of size k and m respectively. The first string consists of non-repeated letters and represents Prant's favorite letters. The second string is the dog's original name (the first name that Prant had thought).\\n\\nThe next n lines are composed of two characters a and b representing the letters involved in each operation made by Prant.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Prant and the Indecision\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output must consist of two lines.\\nThe first one shoud be an integer V  that represents the number of favorite letters in the dog's name. The second one shoud contain the name (if there are multiple answers print the first name generated by Prant that has V favorite letters).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tToday is the inauguration of a huge supermarket in your town, and everyone are excited about the low prices promised.\\n\\nThis supermarket has N cashiers, identified by numbers from 1 to N, where each cashier takes a specific amount of time vi to process an item from a client. Therefore, if a client has cj items on his basket, a specific cashier will take vi*cj seconds to process all of the items from this client.\\n\\nWhen a client enters the line to be attended he waits until a cashier is free. If more than one cashier are free at the same time, he will be attended by the cashier with the lowest identification number. This cashier will only be free again when he finishes processing all of the clients items.\\n\\nThere are M clients on the line to be attended, each with a specific number of items on his basket. Given the information about the cashiers and the clients, the manager asked your help to find out how long it will take so all the clients are attended.\\n\\t\\t\\t\\t\",\n    \"id\": 2065,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input has two integers N and M, indicating the number of cashiers and clients, respectively (1 \\u2264 N \\u2264 M \\u2264 104).\\n\\nFollowing there will be N integers vi, indicating how long the i-th cashier takes to process an item (1 \\u2264 vi \\u2264 100, for every 1 \\u2264 i \\u2264 N).\\n\\nFollowing there will be M integers cj, indicating how many items the j-th client has (1 \\u2264 cj \\u2264 100, for every 1 \\u2264 j \\u2264 M).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Supermarket Line\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing an integer, indicating how long it will take so all the clients are attended.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tA reverse number of a natural number N is the number which we obtain when we read the digits of N from the right to the left. For example, the reverse number of 1234 is 4321 and the reverse number of 150 (a number with 3 digits) is 51 (a number with 2 digits). In this problem, we say that a number is well-reversible if it is strictly less than its reverse number. Examples of well-reversible numbers are 1234, 15 and 819.\\n\\t\\t\\t\\t\",\n    \"id\": 2066,\n    \"input\": \"\\t\\t\\t\\t\\tThe single line of the input consists of a single positive integer K (K \\u2264 18).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"melborP A\",\n    \"output\": \"\\t\\t\\t\\t\\tThe single line of the output shall consist singly of the number of numbers with exact K digits which are well-reversible.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tThe \\\"square game\\\" is a very popular game nowadays! The game is very simple: you are given a grid with N lines and M columns containing non-negative integer numbers. The following image shows a grid with 3 lines and 4 columns.\\n\\n\\n\\nYou are also given an integer S. You must then choose some square with S lines and S columns contained entirely in the grid. Your score is given by the product of all integers inside the square you chose. For example, if S=2 and you decided to choose the square shown in blue in the given image, your score will be equal to 2\\u00d73\\u00d72\\u00d71 = 12.\\n\\nYou just realized that, depending on the square you choose, your score may be equal to zero. You are given a grid and a list of queries. For each query, you are given an integer S and must decide whether it is possible to choose a SxS square such that your score is not equal to zero.\\n\\t\\t\\t\\t\",\n    \"id\": 2067,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N and M (1\\u00a0\\u2264 N, M\\u00a0\\u2264 200) indicating the number of lines and columns of the grid. The next N lines contain M integers each, indicating the grid. Each integer in the grid is not greater than 109.\\n\\nThe next line contains an integer Q (1\\u00a0\\u2264 Q\\u00a0\\u2264 200) indicating the number of queries. Each of the next Q lines describes a query. Each line contains an integer S (1\\u00a0\\u2264 S\\u00a0\\u2264 min(N,M)), the length of the square you must choose.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"The Square Game\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each query, print a single line containing yes if it is possible to choose a square such that your score is not equal to zero, or no otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Marianne Linhares, UFCG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tTaynder is a very popular app. This app is used to meet new people, have relationships and set up dates. It was on Taynder that Mel and Tob met.\\n\\nMel and Tob already chatted for more than 40 minutes, so they think it's time to know each other in person, they set up a date in the city main square. The only problem is that they didn't define a exact time to the meeting, they only know the time interval that they are supposed to meet, but they don't know when the other will arrive. So who gets there first waits a predefined time, but if no one arrives the person goes home to meet someone else in Taynder.\\n\\nAn example: if Mel and Tob will meet in the real interval [16h, 17h] with maximum wait time equals to 15 minutes, it means that Mel and Tob can arrive at any time between 16h and 17h (including 16h and 17h), and who gets there first, in the time x for instance, will wait for the other person in the time interval defined by [x, x + 15].\\n\\n\\nYour work is to write a program that, given the time interval of the meeting and the maximum wait time, determines the probability that they'll meet.\\n\\t\\t\\t\\t\",\n    \"id\": 2068,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case is an unique line with 3 integers: t1, t2, N.\\n\\t\\t\\t\\t\\tt1and t2 represent the real time interval in hours such that t2 > t1 and 1 \\u2264 t1, t2 \\u2264 10\\u2076, N represents the maximum wait time in minutes such that 1 \\u2264 N \\u2264 (t2-t1)*60.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Setting up a Date\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output must be the probability of the date happens in the format a/b, such that a/b is an irreducible fraction.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tIn\\u00eas Venezuela has decided to record on CD the videos she sent to GranHermano TV show, one video per CD. After putting each CD in a small square box, she realised that it was possible to organise the CDs in a manner that they would perfectly cover a square table of hers and no CD would be put over another CD.\\n\\nAna and Bob are two friends who are big fans of In\\u00eas Venezuela. They have also sent many videos to GranHermano and also recorded their videos on CDs, one video per CD. However, differently from Panterona (as Brazilians usually call In\\u00eas Venezuela), they want to organise their videos in knapsacks in a way that:\\n\\n\\n\\tin each knapsack there are only CDs either from Ana or from Bob;\\n\\tthe number N of CDs in every knapsack is always the same.\\n\\n\\nThey realised that there is not necessarily one possibility for the value of N, but, for all the possibilities of values for N, it would be also possible to organise all the In\\u00eas Venezuela's CDs in knapsacks in a way that in each knapsack there would be exactly N In\\u00eas Venezuela's CDs.\\n\\nKnowing how many videos Ana and Bob have sent to GranHermano each, and knowing that the length of the side of each square box used by In\\u00eas Venezuela is 1 centimetre, calculate the length of the side of In\\u00eas Venezuela's square table.\\n\\t\\t\\t\\t\",\n    \"id\": 2069,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists only of two positive integers A and B (A, B \\u2264 109), which respectively represent the number of Ana's CDs and the number of Bob's CDs.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"In\\u00eas Venezuela's Square Table\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint how many centimetres long is the side of the Internet Queen's square table. If there is more than one possible answer, print the smallest.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, UEC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tGiven an integer K and 3 sequences S1, S2 and S3, we call MadSequence, a sequence consisting of positive integers smaller or equal to K and that is not subsequence of S1, S2 or S3. Remember that a subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.\\nFor example, for K = 3, S1 = <1, 2, 3, 1, 2>, S2 = <2, 3, 1, 2> and S3 = <3, 1, 2, 3, 1, 2> , all possible sequences of size 1 (<1> <2> and <3>) are not MadSequences, because are subsequences of S1, S2 and S3.\\n\\nAnalyzing all possible sequences of length 2 for K = 3:\\n\\n\\n\\t<1, 1> is not subsequence of S2, then <1, 1> is a MadSequence;\\n\\t<1, 2> is subsequence of S1, S2 and S3;\\n\\t<1, 3> is not subsequence of S2, then <1, 3> is a MadSequence;\\n\\t<2, 1> is subsequence of S1, S2 and S3;\\n\\t<2, 2> is subsequence of S1, S2 and S3;\\n\\t<2, 3> is subsequence of S1, S2 and S3;\\n\\t<3, 1> is subsequence of S1, S2 and S3;\\n\\t<3, 2> is subsequence of S1, S2 and S3;\\n\\t<3, 3> is not subsequence of S1 and S2, then <3, 3> is a MadSequence;\\n\\n\\nThus, the size of the smallest MadSequence, for this example, is equal to 2. We also conclude that there are 3 MadSequences of length 2.\\n\\t\\t\\t\\t\",\n    \"id\": 2070,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input consists of four integers K, L1, L2 and L3 represent, respectively, the integer K and sizes of S1, S2 and S3 (1 \\u2264 K \\u2264 20 and 1 \\u2264 L1, L2 and L3 \\u2264 200). The second line consists of L1 integers, representing the elements of S1. The third line consists of L2 integers, representing the elements of S2. The fourth line consists of L3 integers, representing the elements of S3. Assume that all elements of the sequences S1, S2 and S3 are positive integers smaller than or equal to K.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Counting MadSequences\",\n    \"output\": \"\\t\\t\\t\\t\\tThe integer M is the smallest size of a MadSequence for the input data. Print a single line containing M and the amount of MadSequences with M size.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XIV Maratona de Programa\\u00e7\\u00e3o IME-USP, 2010  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Only a few people know that, but the first banks appeared in Ancient Egypt, and they were very similar to the ones we have nowadays. The main bank was the Pharaoh, who decided, from time to time, to take to the State the content of some accounts. This would occur this way: Given N, the number of account holders at the Pharaoh's Bank (this was the bank's name), each account could have an amount of menes (currency in Ancient Egypt) which could be, as well, negative (indicating the person owed that amount to the bank), in other words, the state of each account was an integer ai. The Pharaoh's objective was to make a series of checks on his sudits' accounts. Given an interval [A, B] (corresponding to the accounts aA, aA+1, ... , aB-1, aB) the Pharaoh wanted to find the sub-interval which had the max sum, in other words, which's acquisition by the State would yield the Pharaoh the greater amount of money. This was explained to the account holders as being an offerend to Amon-Ahcid, the egypt God of money. Making these offerends regularly, the god would be satisfied and would allow the economic system to work perfectly. This lasted surprisingly more than 500 years, until in one of these acquisitions the account holders rebelled, took over the palace and killed the Pharaoh. The bank was robbed and the system fell down to pieces. It was only heard about banks hundreds of years later.\\n\\n                    Your task is, given a register of accounts and a series of checks, determine for each check an interval of max sum.\",\n    \"id\": 2071,\n    \"input\": \"The input is composed of many instances. The first line of the input contains an integer T, indicating the number of instances. The first line of each instance contains an integer N, indicating the number of accounts at the Pharaoh's Bank, considering 1 \\u2264 N \\u2264 100 000. The second line of each instance contains N integers, between -10 000 and 10 000, indicating the balance in the accounts. The third line contains an integer Q, considering 1 \\u2264 Q \\u2264 100 000, indicating the number of checks that will be done. Each one of the Q following lines contains two integers A and B, considering 1 \\u2264 A, B \\u2264 N, indicating the interval that is going to be checked.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Pharaoh's Bank\",\n    \"output\": \"For each instance, your program must generate Q lines in the output, one for each check. Each one of these lines must contain two integers: the first represents the sum of the interval with the biggest sum, and the second, the number of elements in this interval. If there's more than one interval with the biggest sum, print the number of elements in the one that has more elements.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XIV Maratona de Programa\\u00e7\\u00e3o IME-USP, 2010  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Anubis is worried, French soldiers are practicing archery with cannonballs into the Sphinx again! This time he will try to prevent other parts of the Sphinx have the same fate of your favorite nose.\\n\\n                    To stop the cannons, he can summon rays, which destroy everything they touch, including bullets from cannons. But the Egyptian gods do not already have so many followers, which limits their powers.\\n\\n                    Anubis may invoke the rays at certain moments of time. Luckily one of these matches with a moment that the bullets are in the air. Anubis wants to seize this chance to overthrow the largest possible number of bullets.\\n\\n                    It turns out that to make the invocation, Anubis need to temporarily move to our plan of existence. So he can only hit targets that are all in the same plane.\\n\\n                    Help Anubis bring down the largest possible number of cannonballs.\",\n    \"id\": 2072,\n    \"input\": \"The input is composed of several instances. The first line of input contains an integer T indicating the number of instances.\\n\\n                    The first line of each instance contains an integer N, where 1 \\u2264 N \\u2264 50, indicating the number of cannonballs. Each of the next N lines contains three integers each, xi, yi and zi, where -1000 \\u2264 xi, yi, zi \\u2264 1000, indicating the coordinates of the i-th cannonball at the moment that Anubis can invoke their rays.\\n\\n                    The French have very good aim, so they sometimes shoot bullets that will cling each other to increase the damage. So, do not be surprised if there are repeated points in the input. They represent different bullets that are together. In such cases each bullet is counted separately if Anubis decides to hit them.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Anubis's Cannons\",\n    \"output\": \"For each instance print a line containing a single integer, the largest number of cannonballs that Anubis can topple.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XIV Maratona de Programa\\u00e7\\u00e3o IME-USP, 2010  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Your team is already making plans for a visit to Egypt. One of the places we want to know is the famous market of Cairo. To save time, you decided that will enter the door at the southwest corner of the market and out the door in the northeast corner. Moreover, you will always walk toward the exit, i.e., will only move to the north or east.\\n\\n                    The Egyptians sellers have a peculiar rule. If you buy something from one of them, you can only buy again from another seller who is older. The punishment for breaking this rule is to lose a hand. Of course it can harm your team at the end of the ICPC. For this reason, you think best to follow local traditions. How it\\u2019s nothing elegant to give the same type of souvenir for all your friends, you've decided that in addition to following the rules of the market will buy at most one souvenir from each salesperson. This will help you have a good variety of gifts.\\n\\n                    The market is well organized. The spans where tents can be placed have the same height and width. Each span is identified by a (x, y) coordinate that indicates the column and row of its market. From an aerial view you can see that all spans are arranged as a grid. The market tents were assembled only valid in spans (and strictly comply with the measures of the span). Being in a tent you can go to the tents that are strictly north, east and northeast.\\n\\n                    Knowing the age of the sellers and the position of the tent where everyone works, determine the maximum number of items you can buy.\",\n    \"id\": 2073,\n    \"input\": \"The input is composed of several instances. The first line of input contains an integer T indicating the number of instances.\\n\\n                    The first line of each instance contains an integer N (1 \\u2264 N \\u2264 100000), indicating the number of sellers in the market. Each of the next N lines contains two integers each, xi and yi (1 \\u2264 xi, yi \\u2264 1000), indicating the coordinates of the tent in which the i-th seller works.\\n\\n                    Sellers are listed in order of age, youngest to oldest. Two or more vendors can share the same tent. In this case you can trade (or fail to trade) with them in any order.\\n\\n                    Go north means increasing the value of y and go east means increasing the value of x. All tents are within the market.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cairo's Market\",\n    \"output\": \"For each instance print a line containing a single integer, the maximum number of items you can buy.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By XIV Maratona de Programa\\u00e7\\u00e3o IME-USP, 2010  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Nefertiti was Queen of Egypt, wife of Akhenaton, and is considered one of the most beautiful women in world history. The family life of the queen of Egypt forced her to take care of several things, including the menu of the court. Akhenaton was known to dislike the repeated food, and even at regular intervals. He wished that the menus were not only different, but practically impossible to find out when a course is repeated. This created a huge problem for cooks of King, Nefertiti took an idea. Prepared a list of N dishes, which would be repeated. It was a requirement that the difference between the dish prepared in the i-th day was in module, smaller than a certain K given. Such a requirement, besides being for religious reasons, because of the obligations of the Ra Egyptian, was also due to the fact that the ingredients of the dish were achieved in this range, and were also subject to expire for consumption. Your task in this program is to determine, given an integer N (number of different dishes) and an integer K, representing the many different schedules (which are actually permutations \\u03c0 of {1, 2, ..., n}) satisfying the constraint below:\\n\\n                    |\\u03c0(i) - i| \\u2264 K, para i = 1,...,N.\",\n    \"id\": 2074,\n    \"input\": \"The entrance is composed of several instances. The first line of input contains an integer T indicating the number of instances. The first (and only) instance of each line contains two integers N and K, where 1 \\u2264 N \\u2264 100 and 1 \\u2264 K \\u2264 6.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Varied Dishes From the Beautiful Nefertiti\",\n    \"output\": \"For each instance print a line containing the number of different plannings.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XIV Maratona de Programa\\u00e7\\u00e3o IME-USP, 2010  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Z\\u00e9 Coquinho is a crafstman that produces sculptures with coconuts. The dry coconuts are cut in half and the bowls formed by the shells are painted and used to build the sculptures. The sculptures are very famous, being sought by collectors worldwide.\\n\\n                    \\n\\n                    Figure 1: The most famous coconut sculpture made by Z\\u00e9 Coquinho.\\n\\n                    The sculptures of Z\\u00e9 Coquinho are sequences of bowls glued to each other. A well-formed sculpture is defined by the following set of rules;\\n\\n                    \\n                        A empty sequence is a well-formed sculpture.\\n                        If T is a well-formed sculpture, then a sculpture formed by (T) (i.e. a right opened bowl, followed by T, followed by a left opened bowl) is a well-formed sculpture.\\n                        If T and S are well-formed sculptures, then ST (the sculpture S followed by T) is a well-formed sculpture.\\n                    \\n\\n                    Note that all the well-formed sculptures are built using only the above set of rules. Let T be a sculpture formed by coconuts' bowls. If T isn't a well-formed sculpture, we say that T is a malformed sculpture.\\n\\n                    A striking feature of Ze Coquinho's sculptures is that they are never well-formed; all the sculptures that he did in his long live are malformed.\\n\\n                    The Graviuna's Modern Art Museum wants to make a presentation of Ze Coquinho's sculptures. To organize the presentation, the museum decided to order the sculptures in lexicographical order. In the lexicographical order defined by the museum the symbol ( comes before the symbol ). For example, ((( < (() and )( < )).\\n\\n                    The length of a malformed sculpture is the number of bowls that it possess.\\n\\n                    Given two integers N and K, you must determine the K-th malformed sculpture of length N considering the order defined by the museum. Consider that Ze Coquinho made all the malformed sculptures of length N.\",\n    \"id\": 2075,\n    \"input\": \"The input consists of several instances. The first line has a integer T that indicates the number of instances.\\n\\n                    The first (and only) line of each instance has two integers N and K, where 1 \\u2264 N \\u2264 50 e 1 \\u2264 K \\u2264 2n \\u2212 1, indicating respectively the length of the sculpture and the index of the sculpture (in the lexicographical order) that you must determine.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Z\\u00e9 Coquinho\",\n    \"output\": \"For each instance print a line containing the K-th malformed sculpture of length N. If such sculpture doesn't exist print a line containing -1.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2008  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Tjalling C. Koopmans won the Nobel Prize in economy in 1975 with the Russian mathematic Kantorovich for their contributions in important areas like the great allocation of resources. Koopmans was graduated in mathematic for the university of Utrcht, in Netherland, and specialized himself in mathematic economy. Throughout the Second World War he was involved in the study of the great allocation of resources, which 30 years later gave him the Nobel Prize. He is considering one of the pioneers in the linear theory program. His contribution has important applications in economy, mathematic, physics and in chemistry.\\n\\n                    One of Koopmans' favorite problems were the great allocation of commodities. In this problem, is given an initial value and a final value of the application to be done. Although, not all the values can be applied in several investments. Each investment is defined through the integer number, and for convention, can be applied only when the value to be applied is a multiple at least of one number that defines an investment.\\n\\n                    Your work in this problem is calculating the maximum value that can be applied. So, given the list of integer that defines the multiple applications and the initial value and in the final value to be applied, you may calculate the sum of the values that can be applied in the interval.\",\n    \"id\": 2076,\n    \"input\": \"The input is composed of several instances. The first input line contains an integer T indicating the number of instances.\\n\\n                    The first line of each instance has three integers I, F and N (1 < I < F < 1000000000 and 1 < N < 20) that represents the initial value, final value and the number of the elements in the application list. The next line contains N integers 1 < ai < 10000000000 indicating the list of applications.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Great Allocation of Commodities\",\n    \"output\": \"For each instance print a line containing the sum of values that can be apply in the break. This value can be too big so print the model result 1300031.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2008  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Gabriel Garcia Marques is a Colombian writer who authors incredible stories such as \\\"Ci\\u00e9n a\\u00f1os de soledade\\\", \\\"El amor en los tiempos del c\\u00f3lera\\\" and \\\"Memoria de mis putas tristes\\\". His stories are characterized by what is known today as \\\"magical realism\\\", in the sense that real situations are explained alongside magical elements. Despite his works' content having been lauded as rich and even of cinematographic value, actual movies based upon them have deserved neither public or critical acclaim. A most recent example is the 2007 film \\\"Love in the Time of Cholera\\\".\\n\\n                    One of his less known works is \\\"Los buses de Cartagena\\\", which presents the story of a small bus company located in the Colombian city. Mainly due to overloading which leads to bus breakage, this company planned to reduce the number of passengers taken at every departure to a given fixed number. At the same time, it would like to keep serving all requests in a satisfactory manner.\\n\\n                    Each bus gets a departure time, and each passenger has a list of preferred times when he or she would take off. Passengers wish to go Medellin only, that is, no passenger plans travelling two times on the same day.\\n\\n                    Your task is to determine the minimal number of passengers taken at each travel while respecting the restriction that all passengers must travel via the aforementioned company.\",\n    \"id\": 2077,\n    \"input\": \"Input is compound of several instances. The first instance contains an integer T for informing the number of instances.\\n\\n                    The first line of each instance contains two integers N and M (1 \\u2264 N,M \\u2264 100). Each of the following M lines has the departure time of a bus. Time format is given as hh:mm (00 \\u2264 hh \\u2264 23, 00 \\u2264 mm \\u2264 59, hh and mm have both two digits). Each of the following N lines has a list of travel times for each of the passengers. This list is formatted as: one integer K (1 \\u2264 K \\u2264 M) followed by K times, also in the aforementioned hh:mm format and separated one another by a whitespace.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Los buses de Cartagena\",\n    \"output\": \"For each instance print a line with the minimum number of passengers who must embark at a given time.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2008  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Albert Arnold Gore Jr is the full name of the former vice president of the United States, Al Gore, winner of the 2007 Nobel Peace Prize for his relentless work to educate the world's population to climate change caused by man. The documentary \\\"An Inconvenient Truth\\\" Oscar winner, shows the effects of global warming on the planet's landscape and predicts a catastrophic future for humanity is the tendency to usurp the resources of the planet is not changed.\\n\\n                    Al Gore grew up in Washington DC since his father was a member and then a senator from Tennessee. He graduated from Harvard in 1969 and was an activist against the war in Vietnam and came to support the leader Martin Luther King in his fight against racial segregation. His role as vice president of the United States in the administration of Bill Clinton was also exceptional. Despite having had more votes than the competing Republican Party, lost the presidential election and walked away from the contest the presidency.\\n\\n                    One of his most important works concerns the optimal positioning of furnaces in the production of bricks. The process of manufacture of bricks is very pollutant and requires high temperature firing of clay brick in order to reach the desired consistency. The burning consumes large quantities of wood produced on farms for this purpose. Studies of Harvard University show that there is a maximum distance for positioning these ovens: if too distant, heat radiation does not allow the burning is done equally, impairing the production of bricks and also the environment. Since the ovens are positioned in the forest (which is clipped to the burning), the distances are measured using the Manhattan metric, ie the distance between two points is given by the sum of the absolute values \\u200b\\u200bof the differences of coordinates. Your task is, given the location of various furnaces on a farm, and a distance D, determine, for each of ovens, furnaces are many distance at most D. With this information you can determine which furnaces need to be lit simultaneously without economic losses or environmental.\",\n    \"id\": 2078,\n    \"input\": \"The entrance is composed of several instances. The first line of input contains an integer T indicating the number of instances.\\n\\n                    The first row in each instance has two integers N and D (1 \\u2264 N, D \\u2264 100000) representing the number of ovens and distance, respectively. Each of the next N lines has two integers x and y (0 \\u2264 x, y \\u2264 100000) indicating the position of an oven.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Green Peace! World Hypocrisy!\",\n    \"output\": \"For each instance print a line containing N integers which indicate how many ovens are distance at most D of the furnaces 1, 2, ..., N.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By XII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2008  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"The International Committee of the Red Cross, non-profit organization whose goal is to defend and protect the victims of wars (or rather victims of capital) or natural disasters, won the Nobel Prize in 1917, 1945 and 1963 by their extremely important job. As you might imagine, the Red Cross has always had problems walking in the midst of war. Many links (roads, railways, etc.) between cities of countries at war can be destroyed by bombing or ruled by tyrants.\\n\\n                    The intelligence department of the Red Cross is committed to creating a computer program to assist the operations of the Red Cross in the future. The idea is, given a map of the region that will be helped, determine which cities the bases of the Red Cross should be made. Initially, the Department is interested in testing the first version of the program in cities with the following characteristics: (a) there is always a path between two cities which passes through one or more links; (b) There are no two different paths between any two cities. Despite the Red Cross resources are usually limited, they want to choose the largest possible number of basis, and ensure that there is a base in the town or there is a base in a neighboring town, with the additional restriction that is not allowed to create bases in two neighboring cities. This last constraint is given by the fact that if we were at war period, the Red Cross, as we should have free access in cities, and with it the suspicion of spying may arise, which may compromise the main goal of the organization.\\n\\n                    Your task is to write the first version of the program that the Department wants to test.\",\n    \"id\": 2079,\n    \"input\": \"The first line of a test case has an integer T which indicates the number of following instances.\\n\\n                    The first line of each instance has an integer N (1 \\u2264 N \\u2264 6000) indicating the number of cities on the map. Cities are identified by 1, 2, ..., N. The next N-1 lines contain two integers u and v (1 \\u2264 u, v \\u2264 N, u \\u2260 v) indicating a link between cities u and v (consider that such connections allow access from u to v and from v to u).\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"War Product\",\n    \"output\": \"For each instance print an integer indicating the maximum number of bases that the Red Cross can build taking into consideration the restrictions described above.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2008  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Wilhelm Conrad R\\u00f6ntgen was a German physicist who lived in the late 19th and early 20th centuries. His experiences in electromagnetic radiation earned him the first Nobel Prize in Physics, awarded in 1901. His main finding was the existence of the \\\"X-ray\\\" and its use in medical applications. On December 22, 1895, R\\u00f6ntgen did an x-ray of the hand of his wife (with a ring on one of her fingers). The discovery of X-rays caused a stir at the time and already in 1896 European papers reported the invention and the great possibilities of looking inside the body without having to cut it. R\\u00f6ntgen's death, caused by a certain type of cancer is attributed to the constant radiation to which he was exposed during his scientific researches.\\n\\n                    R\\u00f6ntgen began to suspect the existence of invisible radiation when, in his research, he was able to measure significant changes in the fluorescence of objects when placed in a Lenard tube who was subjected to an electric current. R\\u00f6ntgen's studies were so accurate that it could even generate the sequence that was observed in the Lenard tube at each instant of time. The observed fluorescence depended on the intensity of the electric current (X) and the time at which the tube was subjected to electric current (Y). R\\u00f6ntgen realized that given the first sequence, the next could be obtained describing the numbers of the previous sequence. For example, if the first sequence is 2 then the next is 12 (ie, the previous sequence is formed by \\\" a 2\\\"), the following 1112 (ie, the previous sequence is formed by an 1 and a 2), 3112 (ie, the previous sequence is formed by three 1 and a 2), and so on.\\n\\n                    Besides a brilliant scientist, R\\u00f6ntgen was extremely organized. He kept all records of his experiments. Unfortunately, over time some sequences were damaged and others lost. Your task is given a sequence, determine the next K sequences of the experiment.\",\n    \"id\": 2080,\n    \"input\": \"The input is composed of several instances. The first line of input contains an integer T indicating the number of instances.\\n\\n                    Each instance consists of a line containing the first sequence of the experiment, consisting of no more than 1000 characters from 0 to 9, and the K number of sequences we wish to generate (1 \\u2264 K \\u2264 50), respectively.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"R\\u00f6ntgen Sequences\",\n    \"output\": \"For each instance, print the sequence given in input followed from K lines containing the sequences in the order they were generated. The sequences generated will not have more than 2000000 characters.\\n\\n                    After each instance print a blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2008  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"One of the most important political activists of the world was Dr. Martin Luther King Jr., whose most famous speech was \\\"I have a dream\\\". In 1964, he received the Nobel Peace Prize for his commitment to the struggle to end racial prejudice in the United States, and for his leadership in nonviolent movements. Shortly after receiving the award, King was assassinated moments before a march in Memphis.\\n\\n                    In addition to the commitment to political struggle, Luther King enjoyed playing puzzles. One of the games he loved to play is as follows: two maps N-by-M, each with a robot provided. Each map contains a start and an end point. Some \\\"tiles\\\" of the map are surrounded by walls. A tile of the map may or may not be a hole. A command given (Up, Down, Left, Right) runs simultaneously to both maps. Robots do not go through the walls and even float over the holes. The goal is to get the two robots at the end point at the same time, using up to 50 movements, if possible.\\n\\n                    In this problem, your task is given two maps N-by-M, determine the minimum number of moves that solves the problem.\",\n    \"id\": 2081,\n    \"input\": \"The input is composed of several instances. The first line of input contains an integer T indicating the number of instances.\\n\\n                    The first line of the instance has two integers N and M (1 \\u2264 N, M \\u2264 50), indicating the number of lines of the maps and the number of columns of the maps, respectively. In the following lines are given the two maps. For each map we will have N rows with M characters. The character \\\".\\\" indicates a free position; \\\"#\\\" Indicates a position surrounded by walls; \\\"B\\\" indicates a hole; \\\"R\\\" indicates the starting position of the robot and \\\"F\\\" indicates the final position of the robot.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Dreams, Believe Them!\",\n    \"output\": \"For each instance print a line containing the minimum number of moves that solves the problem, or \\\"impossivel\\\" if you can not solve the problem with a maximum of 50 moves.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2008  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Albert Einstein was born in Germany but was in Switzerland, working as a public official, who wrote in 1905 the work that revolutionized modern physics and made him famous. In 1921 he won the Nobel Prize in Physics for his discovery of the law of the photoelectric effect. Many find his work on the theory of relativity the most important of his career, however were not those who have rendered valuable prize.\\n\\n                    Einstein liked to do \\\"thought experiments\\\" to evaluate their theories. One such experiment is very famous and describes a falling elevator with a clock inside. The idea of time travel just emerging as possible, since it was discovered how to build machines that could travel at speeds greater than the speed of light. Certainly, in the not too distant future this will be possible and we may travel freely between eras and see events like the discovery of Brazil in 1500, the arrival of the Royal Family in 1808 or Corinthians champion of the Libertadores in 2962 live.\\n\\n                    With constant travel in time, will be important to regulate the service. Time machines are scattered throughout history and travelers will have to take them traveling to the present or the future. Due to technical restrictions of these machines, you cannot travel to any point in time directly, but only to other historical moments, where a new machine can be used to continue the trip. However, being in a historic moment, you can go to any other time traveling by one or more machines.\\n\\n                    Along with the time travelers will also arise Pirates History, which will try to steal treasures, reverse events and change the story with the most evil purposes. This will result in the creation of the Time Police. In the year 2850 (before Corinthians winning their first Libertadores) Police Time solves isolate historical events, disabling links between some machines. Each connection has an associated cost to be disabled, and your task is to find, given a set of historical moments, a set of links - minimum cost - which when disconnected isolate the events, i.e., being in a machine you cannot travel to some of the other machines.\",\n    \"id\": 2082,\n    \"input\": \"The input is composed of several instances. The first line of input contains an integer T indicating the number of instances.\\n\\n                    The first line of each instance contains two integers N and M (1 \\u2264 N \\u2264 100 and 1 \\u2264 M \\u2264 N*(N-1)/2) indicating the number of machines and the number of connections, respectively. Each of the following M lines has three integers u, v and c (1 \\u2264 u, v \\u2264 N, 1 \\u2264 c \\u2264 100) representing the existence of a link between u and v machine with cost c. Such binding can be used to travel from machine u to machine v as well from machine v to machine u.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Time Travel\",\n    \"output\": \"For each instance to print a line having the sum of link costs that must be removed.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo A. Heiber,  Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"On the side of the road, there are palm trees, there's a bar, there's shadow, there's something more. In this problem, we are particularly interested in the palm trees.\\n\\n                    Ana, Adan, Alan and Amanda organized a trip: while Ana and Adan where dealing with petty things like checking the car, preparing the luggage and finding a place to stay, Alan and Amanda dedicated themselves to the most important part: studying the views of palm trees to which they would have access to while on the road.\\n\\n                    The road they are now driving on is completely straight, and in this problem we will represent it by the Y = 0 line of the XY plane. On the side of the road with coordinates Y > 0 there are palm trees, which we will represent by different points of the XY plane with positive Y coordinate. Alan and Amanda have noticed that from each point on the road certain palm trees are visible, and in general these vary along the road. A palm tree is said to be visible from a point on the road if and only if the segment that joins both points does not go through any other palm tree.\\n\\n                    In the following figure the unfilled circles represent palm trees in the first sample input, whereas the filled ones represent some possible points on the road.\\n\\n                    \\n\\n                    From point p the palm trees that are visible are a, b and d, since palm tree c is hidden behind palm tree a. From point q the visible palm trees are a, c and d, since palm tree b is now hidden behind palm tree a. From point r all the palm trees are visible, and from point s only palm trees a and d are visible, since palm trees b and c are hidden behind palm tree d.\\n\\n                    While Ana and Adan take turns to drive the car, Alan and Amanda discuss the benefits of knowing how many visible quantities of palm trees there are. Given a set of palm trees, an integer number m is a visible quantity of palm trees if and only if there exists at least one point on the road (i.e. a point with coordinate Y = 0) from which exactly m palm trees are visible.\\n\\n                    In the example illustrated above, 2, 3 and 4 are visible quantities of palm trees, as can be respectively testified by points s, p and ron the road. On the other hand, 0 and 1 are not visible quantities, because from every point of the road at least 2 palm trees are visible. Finally, no m > 4 is a visible quantity, since there are only 4 palm trees in total. Therefore, in this example there are 3 visible quantities of palm trees. (Note that if m is a visible quantity of palm trees, there could be more than one point on the road that testifies to this situation; in the previous example this is the case with points p and q for the visible quantity 3, as well as with infinitely many other points along with r for visible quantity 4.)\\n\\n                    Ana and Adan are getting tired. They want Alan and Amanda to let go of the palm trees and at least prepare some sandwiches. For that reason, you need to make a program to calculate how many different visible quantities of palm trees there are along the road.\",\n    \"id\": 2083,\n    \"input\": \"The first line contains an integer number N indicating the number of palm trees that there are on the side of the road (1 \\u2264 N \\u2264 1000). Each of the following N lines describes a different palm tree using two integer numbers X and Y, representing the coordinates of said palm tree in the XY plane (1 \\u2264 X, Y \\u2264 105). There are no two palm trees that share the same position.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"On The Side Of The Road\",\n    \"output\": \"Print a single line containing an integer number representing the number of visible quantities of palm trees that there are along the road.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Leopoldo Taravilse, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Right now presidential elections are being held in Nlogonia. For a candidate to win in the first round, he should obtain more votes than each of the other candidates. But that is not enough: he should also obtain at least 45% of all the votes, or at least 40% of all the votes and at least 10% more votes than each of the other candidates. This 10% has to be calculated from all votes. If no candidate wins in the first round, a new election is held as a second round.\\n\\n                    Benicio is a political journalist in Nlogonia, and he always wants to scoop everyone else. This is why he has collected information from polls, and wants to know if according to these one of the candidates will win in the first round, or on the contrary there will be a second round. Benicio needs to decide this with haste, before someone else scoops him. Can you help him?\",\n    \"id\": 2084,\n    \"input\": \"The first line contains an integer number N, representing the number of candidates (2 \\u2264 N \\u2264 10). The second line contains Ninteger numbers Vi representing the amount of votes obtained by each of the candidates (0 \\u2264 Vi \\u2264 1000 for i = 1, ..., N). At least one candidate obtained at least one vote, and there are no two candidates with the same number of votes.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Elections\",\n    \"output\": \"Print a line containing a single digit, indicating if there is a winner in the first round or not. If there is such a first round winner, the digit must be a '1'; otherwise (i.e. if there should be a second round) the digit must be '2'.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Nicolas A. Alvarez, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"Once upon a time there was a very joyous girl who was called Little Red-Cap because she always wore a red riding cap. Red-Cap enjoyed a lot her strolls in the woods, during which she collected berries in her small basket to offer them to her grandmother, who was known to prepare the most delicious pies of all the region. However, Red-Cap definitely did not enjoy the perils of the woods, and in particular the Big Bad Wolf who was always hungry and prying.\\n\\n                    One day, Red-Cap decides to go from her home to that of her grandmother, collecting berries on the way and trying to make her journey in the safest possible way. Red-Cap's house is in a clearing at the westernmost point of the woods, her grandmother's house is in another clearing at the easternmost point, and inside the woods between them there are some other clearings containing berry trees. The woods are very dense, so the only way to go through them is using the pathways between the clearings, which fortunately Red-Cap knows very well. In order not to get lost, Red-Cap always moves through pathways that take her to a point strictly to the east of the point where she is. In order not to be caught by the wolf Red-Cap finds it imperative to avoid an ambush, and for that reason she always has in mind the number of different paths that take her from her current position to her grandmother's home.\\n\\n                    A path in the woods is a sequence of clearings ordered from west to east, such that each clearing is connected with the next by a pathway. A path to the house of Red-Cap's grandmother is simply a path whose last clearing contains said house. For each clearing, its level of alternatives is the number of paths that go from it to Red-Cap's grandmother's house. In turn, for each path its level of alternatives is the sum of the levels of alternatives of all the clearings that make up that path. In order not to be captured by the wolf, Red-Cap wants to find the path with a maximum level of alternatives, starting at her house and ending at her grandmother's house. Can you help her?\",\n    \"id\": 2085,\n    \"input\": \"The first line contains two integer numbers N and S which respectively indicate the number of clearings and the number of pathways in the woods (3 \\u2264 N \\u22643 \\u00d7 104 and 2 \\u2264 S \\u2264 105). The clearings are identified by different integer numbers between 1and N, and are ordered from west to east, so that if 1 \\u2264 i < j \\u2264 N then clearing i is to the west of clearing j. Red-Cap's house is in clearing 1, whereas her grandmother's house is in clearing N.\\n\\n                    Each of the following S lines describes a pathway using two integer numbers I and J, which indicate that there is a pathway between clearing I and clearing J (1 \\u2264 I < J \\u2264 N). There is at least one path from Red-Cap's house to her grandmother's house, and the maximum level of alternatives among the set of all such paths is no greater than 1018.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Little Red-Cap\",\n    \"output\": \"Print a single line containing an integer number, representing the maximum level of alternatives for a path from Red-Cap's house to her grandmother's house.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tAs you all know, the mayoral elections are coming. This year our city has excellent candidates, all with incredible government proposals.\\r\\n\\r\\nOne candidate intends to implement a revolutionary transport system, where the streets will be removed and exchanged for bike lanes. This idea seems to be the solution to all the problems that our city is facing. But there is a flaw: dehydration when we walk long time in a bike.\\r\\n\\r\\nTo solve this problem, the applicant intends to provide chilled water for the entire population. His idea is to place distribution points in all intersections of the bike lane. But as water is a resource that is running out, the amount that it will provide will be fixed, regardless of the distance traveled by the individual.\\r\\n\\r\\nIntending to validate your idea, the candidate hired you to help. Your task is simple: will be provided the city map with all the intersections and the distances between them. Then you must answer several candidate queries, where it will provide two intersections, A and B, and your program will show what the greatest distance to be traveled by a person without water between A and B. With this information the candidate able see if the amount that it intends to provide will suffice. Do not forget that the candidate intends to reduce this distance, then your program should inform the greatest distance in the best way.\\r\\n\\r\\nAs the streets of our city are very wide, all bike lanes will be two-way.\\n\\t\\t\\t\\t\",\n    \"id\": 2086,\n    \"input\": \"\\t\\t\\t\\t\\tThe entrance has several test cases. Each test case begins with two integers N (1 \\u2264 N \\u2264 100) and M (1 \\u2264 M \\u2264 4950), respectively indicating the number of intersections in the city map and how many bike lanes will be created. In the next M lines will be provided three integers U, V (1 \\u2264 U, V \\u2264 N) and W (0 \\u2264 W \\u2264 2000), indicating that there is a bike lane between the U and V intersect wiht a distance W. The next line will have an integer Q (1 \\u2264 Q \\u2264 50), which represents the number of queries that the candidate wants to do. Here Q lines with two integers A and B (1 \\u2264 A, B \\u2264 N) indicating the pair of intersections for which the query must be made. The entry ends when N = M = 0 and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Bike Land\",\n    \"output\": \"\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tIn this issue you will find a set of several words, and you have to say if the set is good or bad (Conjunto Bom or Conjunto Ruim, respectively). By definition, a set is bad when one word of this set is a prefix of another word. Otherwise, this is considered a good set.\\r\\n\\r\\nFor example, {abc, dae, abcde} is a bad set, because abc is a prefix of abcde. When two words are equal, we defined that one word is a prefix of the other.\\n\\t\\t\\t\\t\",\n    \"id\": 2087,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case will an integer N (1 \\u2264 N \\u2264 10\\u2075) representing the number of words in the set. It follows then N rows each having a word of at most 100 lowercase letters. The entry ends when N = 0 and is not to be processed.\\r\\n\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Good And Bad Sets\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should print Conjunto Bom or Conjunto Ruim, as explained above.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tAfter John found he was with dengue, he became very angry. As in recent days he does not left home, the mosquito that bit him could only be some dengue focus near his home. Then when he had an idea.\\r\\n\\r\\nWhen he is a little better, John will kill all the mosquitoes spots that are close by from your home. To accomplish this task he got a map, which can be seen as a cartesian plane, where your home and each have a distinct focus coordinate. As dengue is a disease that makes the body well debilitated, John needs your help in this task.\\r\\n\\r\\nJohn would like to know the minimum total distance he will spend to get out of your home, visit all dengue outbreaks exactly once and return home. Can you help John in his mission?\\n\\t\\t\\t\\t\",\n    \"id\": 2088,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case will an integer N (1 \\u2264 N \\u2264 15),representing the amount of mosquito focuses on the map. Follows a line containing two integers X and Y (-100 \\u2264 X, Y \\u2264 100), representing the coordinate of John's home. Then have N rows, each containing two integers X and Y (-100 \\u2264 X, Y \\u2264 100), representing the coordinate of a focus dengue. The entrance ends when N = 0 and is not to be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Dengue\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print the minimum distance that John will travel to two decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tEvery day in college intervals you and your friend go to college cafeteria as soon as possible to buy a snack. Although you are very quick on the path between the building of the course and the snack bar, you always end up facing a huge queue.\\r\\n\\r\\nYour friend is very methodical, so every day to get in the queue it removes all your coins from his pocket and checks if he can pay the snack entirely with the money he has, without requiring the employee canteen give some change, after all the change is always given in coins and your friend does not like some have coins, so if he can not pay this way, it makes the payment on the card. As the queue is always very large and most of the time you are among the latter, his friend performs the count calmly so that there is no error.\\r\\n\\r\\nToday was a different day, to get in the cafeteria, you and your friend came across something very strange: the queue was small. His friend was very worried and nervous not get the time to check your coins and have to make the people who are behind you wait. Trying to calm down, you explain to him that the problem of checking the coins is very simple and you are able to write a program in the cell quickly that, given all the coins with their values and the price of breakfast, inquire if you can pay using only coins the total value of the snack.\\r\\n\\r\\nAs you are one of the first in line, write it the fastest program possible for your friend to make a decision before you get in the box.\\n\\t\\t\\t\\t\",\n    \"id\": 2089,\n    \"input\": \"\\t\\t\\t\\t\\tThe entrance has several test cases. Each case begins with two integers V (1 \\u2264 V \\u2264 10^5) and N (1 \\u2264 N \\u2264 10^3), representing respectively the value of the snack that your friend want to buy and the amount of coins that your friend has. The next line will be N integers, where Xi (1 \\u2264 Xi \\u2264 10^5) represents the value of the ith currency. The input ends with V = 0 and N = must not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Cafeteria\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each input your program must print a line containing sim, if possible make the payment the way you want your friend or nao, otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA common joke among children is \\\"I went to market and bought...\\\" her several children form a line and each must speak one item would buy in the market, but to increase the difficulty it is necessary that each child repeat all products that it has been said since the beginning of the game. The game ends when someone misses the order of the product or when the last child in line hits the sequence.\\n\\nLet's imagine that Mary, Peter and Amanda began to play and have already decided who will say what product, Maria will tell Bread, Peter likes cheese and Amanda will talk Apple.\\nAssuming that the queue is organized in alphabetical order the game should go as follows:\\n\\u00a0\\u00a0 \\u00a01 - Amanda says: \\\"I went to market and bought bread\\\"\\n\\u00a0\\u00a0 \\u00a02 - Mary says: \\\"I went to market and bought bread and apple\\\"\\n\\u00a0\\u00a0 \\u00a03 - Peter says: \\\"I went to market and bought bread, apple and cheese\\\"\\nTherefore the order of the products were: bread, bread, apple, bread, apple and cheese.\\n\\nHis high school friends decided to hold this game to pass the time. After some playing time the list of products that each one should say was getting too big, in this way, see if anyone missed is not a simple task. That's when your friends reminded that you are programmer and could easily solve this problem.\\n\\nGiven the amount of people in the queue and what product each will say, they need a program to inform what is the K-th product to be said. So it will be easier to determine if someone missed or not.\\nYou will be able to help your friends?\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2090,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case will have two integer N and K (1 \\u2264 N \\u2264 10\\u2075, 1 \\u2264 K \\u2264 min (2 * 10\\u2079, N * (N + 1) / 2)), representing the number of children at play and which product your friends want to know, see the example for details. The next row will have the sequence s1, s2, s3, ..., sn, where the product si is the ith product that the child will tell, each word contains a maximum of 20 lowercase letters. The entry ends when N = 0 and is not to be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"I Went to Market And Bought...\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you should print what the K-th product to be said.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tYou will be given an array of N numbers, where everyone will be in pairs. But one of those numbers ended up without peer, you can identify what is that number?\\n\\nFor example, A = {1, 1, 3, 3, 5, 5, 5}, the number stood alone was 5.\\n\\t\\t\\t\\t\",\n    \"id\": 2091,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case is composed of a line having an integer N (1 \\u2264 N < 10^5), followed by N number A (1 \\u2264 A \\u2264 10^12).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Lonely Number\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print only the number that stood alone. It is guaranteed that only one number is alone\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Fidel Schaposnik, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"In the kingdom of Nlogonia there is a lake known as the \\\"Big O\\\" because of its perfectly round shape. On the side of this lake there are N houses, each of them a distance of one nlogonic unit apart from its neighbors. The houses are numbered from 1 to N in clockwise order, as can be seen in the following figure for N = 8.\\n                    \\n                    \\n\\n                    In this way, if i < j the distance in clockwise order from house i to house j is j-i, whereas the corresponding distance in counterclockwise order is N - j + i. Note that the distance from a house to itself is N in both directions. It is well known that the people of Nlogonia are avid football fans, so when a family moves to a house on the side of the lake it is very important for them to know who are their closest neighbors that follow the same team as they do. This is not always easy, since there may be many houses around the lake, many different football teams in Nlogonia, and a lot of moving around. Given a sequence of M movings, people who live on the shore of the lake want to welcome each new family arriving by telling them the distance from their new home to the closest houses that follow the same team as they do, both in clockwise and counterclockwise order. Note that if there is no other house on the shore of the lake whose family follows the same team as the newly arrived, said distance shall be N in both directions, as the closest house would in fact be the same house involved in the moving. Do you want to take part in the welcoming committee? In Nlogonia there are F football teams, identified by different integer numbers from 0 to F-1. Because we don't want you to waste any time going from door to door asking which team is followed in each house, we will assume that initially the family living in house number i is a fan of team number ei, being this number generated in pseudo-random fashion by the recursive formula:\\n\\n                    e1 = A and ei = (B x ei-1 + C) mod F para i = 2, 3, ..., N\\n\\n                    where A, B and C are constants and the expression x mod y represents the remainder of the integer division of x by y.\",\n    \"id\": 2092,\n    \"input\": \"The first line contains two integer numbers N and F, respectively indicating the number of houses around the lake and the number of football teams in Nlogonia (3 \\u2264 N \\u2264 105 and 1 \\u2264 F \\u2264 106). The second line contains three integer numbers A, B and C, which determine which team is followed by the families initially living around the lake as is described in the problem statement (0 \\u2264 A, B, C < F). \\n\\n                    The third line contains a single integer number M, representing the number of movings that will be happening (1 \\u2264 M \\u2264 105). Each of the following M lines describes a moving using two integer numbers I and E, meaning that a family following team E is moving to house number I (1 \\u2264 I \\u2264 N and 0 \\u2264 E < F). The movings appear in the order that they occur, and should be taken into account by the committee for further welcomings.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Watching the Game\",\n    \"output\": \"Print M lines, the i-th of them indicating the result of the i-th moving described in the input. Each line should contain two integer numbers dccw and dcw, representing the distances in nlogonic units from the house involved in the moving to the first house whose family follows the same team, in counterclockwise and clockwise order respectively.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Pablo A. Heiber, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Strings\",\n    \"description\": \"A communications protocol is a set of rules designed to transfer information in a communications system. Elisa's job is to write programs that implement parts of said protocols. It is often necessary for this to transfer sequences of fields, and in order to know where a field ends and the next one begins it is customary to insert a separator between each pair of consecutive fields. Using a simple separator such as a space, a comma or a semicolon is inconvenient because sometimes the fields to be transferred contain these same characters. The standard solution in these cases is to insert an \\\"escaping\\\" character just before every appearance of a separator inside a field, so that it can be thus distinguished from a real separator. Elisa thinks this solution will increase a lot the length of the data to be transmitted, so she has decided to use a separator that is complex enough for it to never appear inside the data. In this way she hopes to escape the inefficient alternative of escaping separators.\\n\\n                    To choose the ideal separator, Elisa has compiled a log, which is nothing else than a long string of characters that is representative of the data that her protocol needs to manage. After thinking about the problem for a while, Elisa reached the conclusion that any non-empty string of characters that does not appear inside the log would be an acceptable separator for use within her protocol. But because she is interested in minimizing the length of the data to be transmitted, she would like to know the minimal length that an acceptable separator can have. \\n\\n                    She immediately wrote a program to calculate this length, and is now testing it for the particular case in which both the log and the acceptable separators only contain binary digits ('0' and '1'). Can you anticipate the results?\",\n    \"id\": 2093,\n    \"input\": \"The first line contains an integer number T, the number of test cases (1 \\u2264 T \\u2264 200). Each of the following T lines contains a log, which is a non-empty string of at most 105 binary digits.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Escaping from Escaping\",\n    \"output\": \"For each test case, print a single line containing an integer number representing the minimal length of an acceptable separator for the given log.\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Francisco Roslan, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"In Babylon grow some plants with flowers that are very much appreciated among the inhabitants. Florencio is such an inhabitant of Babylon who has a garden with N plants of these species, and he wants to collect some of their flowers. Because Florencio is quite lazy he does not want to go through a lot of effort to collect the flowers. Therefore, he has decided to walk to some point in his garden, and then with a circular movement of his scythe he shall cut a good amount of plants to later collect their flowers. Florencio is very skillful using the scythe so he will cover with it a perfect circle centered wherever he is standing, which will allow him to cut all the plants lying within this circle, including its border. The higher Florencio has to lift his scythe, the greater the radius of the corresponding circle he will cover with it. Florencio wants to cut at least P plants, but his laziness is such that he wants to do so lifting his scythe as little as possible.\\n\\n                    Florencio has managed to get his hands on a satellite image of his garden where all of his plants appear, and he has furthermore managed to get someone to convert this image to a list where each plant is represented by its coordinates in an XY plane. Now he is sitting outside, his scythe in hand, waiting for your team to tell him the minimum radius of a circle that encloses at least P plants.\",\n    \"id\": 2094,\n    \"input\": \"The first line contains a single integer number T, the number of test cases (1 \\u2264 T \\u2264 100).\\n\\n                    For each test case, the first line contains two integer numbers N and P, which respectively represent the number of plants that there are in the garden and the minimum number of plants that Florencio wants to cut (1 \\u2264 P \\u2264 N \\u2264 500). Each of the following N lines describes a different plant using two integer numbers X and Y, representing the coordinates of that plant in the XY plane (1 \\u2264 X, Y \\u2264 105). No two plants sit at the same position.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Flowers of Babylon\",\n    \"output\": \"For each test case, print a line containing a single rational number representing the minimum radius of a circle enclosing at least P plants. You should print the result using exactly 4 digits after the decimal mark, rounding if necessary (there will be no rounding ties).\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"By Joaquin Rodrigues, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"War, an event worthy only of appearance in literature, movies or perhaps programming contests, has reached the Nlogonian empire, which is facing the neighboring empire of Quadradonia. War protocols agreed upon by both parties indicate that the war will be waged in successive battles, in each of which a different soldier from each empire will face one another, so that each soldier will take part in exactly one battle. The empire that wins more battles will then win the war. Each empire has an army formed by S soldiers, and each soldier has a certain combat skill. In each battle between two soldiers, the one with greatest combat skill wins the battle. If both soldiers have the same combat skills, the battle is declared a draw and technically no side claims victory. The spies of Nlogonia have intercepted secret information concerning the combat skill of each soldier of Quadradonia's army, so Nlogonia's queen requires your assistance in order to calculate the maximum number of battles that can be won during the war if her soldiers are sent in the appropriate order.\",\n    \"id\": 2095,\n    \"input\": \"The first line contains an integer number S representing the number of soldiers in each army (1 \\u2264 S \\u2264 105). The second line contains S integer numbers Qi representing the combat skills of the different soldiers of Quadradonia's army, in the order in which the battles shall take place (1 \\u2264 Qi \\u2264 109 for i = 1, ..., S). The third line contains S integer numbers Ni representing the combat skills of the different soldiers in Nlogonia's army, in an arbitrary order (1 \\u2264 Ni \\u2264 109 for i = 1, ..., S).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"War\",\n    \"output\": \"Print a line containing a single integer number representing the maximum number of battles that Nlogonia can win during the war.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Fidel I. Schaposnik, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Horace likes to play writing natural numbers in the blackboard in his bedroom. One of his favourite games consists in first writing a number n, then the sum of all the different prime numbers that divide n, and so on until the number written on the board becomes a prime number. For example, if Horace begins writing the number n = 90, because 90 = 2 \\u00d7 32 \\u00d7 5 the next number to be written will be 2 + 3 + 5 = 10; then, as 10 = 2 \\u00d7 5 Horace will write the number 2 + 5 = 7; finally, because 7 is a prime number the game will end here.\\n                    Formally, in this game each natural number n >= 2 defines a sequence whose first element is n, and each new element is the sum of all the prime numbers that divide the previous element in the sequence. The order of the game is the position of the first prime number in the sequence, and coincides with the total number of numbers written on the blackboard one the game has ended. In the example from the previous paragraph, with n = 90 the order of the game is K = 3, because the numbers that are written will be 90, 10 and 7.\\n                    Now, not all games are equally entertaining to Horace, and in this case he prefers to begin by writing a number n such that the order of the corresponding game is a particular value K. Horace would like to know how many different values of n between A and B inclusive satisfy this condition, but because he does not know how to code he needs someone to do this calculation for him. Can you help him?\",\n    \"id\": 2096,\n    \"input\": \"The first line contains an integer P which indicates the number of questions Horace wants to ask you (1 \\u2264 P \\u2264 105). Each of the next P lines describes a question using three integer numbers A, B and K, which mean that Horace would like to know how many different values of n satisfy that A \\u2264 n \\u2264 B and the order of the game beginning with n is K (2 \\u2264 A \\u2264 B \\u2264 106 and 1 \\u2264 K \\u2264 106).\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Horace and His Primes\",\n    \"output\": \"You should print P lines, each one containing an integer number with the answer to one of the questions made by Horace, in the order in which they appear in the input.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Alexandre Campos, UNIUBE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tGiven a list of portuguese names of numbers, convert them to integer. Perhaps the problem 1846 at URI will help you.\\n\\t\\t\\t\\t\",\n    \"id\": 2097,\n    \"input\": \"\\t\\t\\t\\t\\tIn each line\\u00a0(about\\u00a0100000 lines), there's the portuguese name of an integer\\u00a0n, 0\\u00a0\\u2264\\u00a0n\\u00a0\\u2264 1015-1.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Name to Number\",\n    \"output\": \"\\t\\t\\t\\t\\tWrite the integer number\\u00a0n.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By Fidel I. Schaposnik, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Graph\",\n    \"description\": \"Finding the treasures hidden centuries ago by the pirates of the Caribbean islands is no easy task, but even more difficult is living to tell the story. This is because, as everybody knows, pirates had supernatural powers which they used to curse the person who took their treasure unauthorized.\\n\\n                    A very common curse among the most powerful of pirates, and for which it is always a good idea to be prepared, is known today as the deadly mist. Whenever a pirate's treasure is found, this curse will make a poisonous mist lift from the ground until the whole island gets covered by it. Any living creature that is touched by the mist will die instantly, something especially undesirable for those who have just found a treasure. The only way to save yourself is then to return to your boat, always going through areas that have not yet been covered by the mist, and thus flee with that part of the treasure that may have been rescued. In this problem we are interested in knowing what's the maximum amount of time that one can take to collect the treasure in such a way so as to be able to return to the boat alive.\\n\\n                    To simplify the problem, we will consider that an island can be represented by a grid with R rows and Ccolumns, in which the cell in the i-th row and the j-th column has height Hij above sea level. Furthermore, we will assume that the treasure is always hidden in the cell in row 1 and column 1, because this is the one furthest away from the only place where the boat can set anchor, which is the cell in row R and column C. The deadly mist appears at sea level at the very same instant that the treasure is found, and then rises on all the island at a rate of one unit of height per second, so that after t seconds one cannot be in any cell of height less or equal to t. In order to return to the boat, you may go from one cell to another only if they share a side, so that if you are on a given cell you can only move horizontally to the cell before or after it in the same row, or vertically to the cell before or after it in the same column, but you cannot move diagonally or cross the boundaries of the island. Each such movement from one cell to another takes exactly one second.\",\n    \"id\": 2098,\n    \"input\": \"The first line contains two integer numbers R and C, respectively the number of rows and columns of the grid that represents the island, which consists of at least two cells (1 \\u2264 R, C \\u2264 500 and R\\u00d7C \\u2265 2). Each of the following R  lines contains C values. In the i-th of these R lines, the j-th value is an integer Hij representing the height of the cell at row i and column j (1 \\u2264 Hij \\u2264 106 for i = 1, ..., R and j = 1, ..., C).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Treasure Island\",\n    \"output\": \"Print a single line containing an integer number representing the maximum amount of time in seconds that one can take to collect the treasure, so as to be able to return to the boat without being reached by the deadly mist. Print the number -1 if it is impossible to return to the boat even if one starts the way back as soon as the treasure is discovered.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Nicolas A. Alvarez, Universidad Nacional de La Plata  Argentina\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Jaimito loves to play with the N identical stones that he was given for his birthday, piling them to form mountains of various sizes. His happiness would be perfect if her mother, Jimena, did not constantly remind him that at the end of the day comes the Time to Arrange the Piles (TAP). It is then that Jaimito must destroy his mountains of stones, which he had piled up with so much effort. Because Jimena knows how much Jaimito is bothered by the TAP, she suggests to play a game with him in order to make this task more fun. Jaimito and his mother take turns to play, with Jaimito starting because he is the youngest. \\n                    Initially there are one or more mountains, each one of them composed of a certain number of stones. In his turn each player chooses a mountain with more than one stone and divides it to form two mountains, not necessarily of the same size. The game continues in this way until one of the players cannot make a valid move, at which point this player is declared the looser, the other player being the winner. \\n                    Jaimito is a very smart kid, and he has realized that he can distribute the N stones to form the mountains in a strategic way, so as to be certain that when they begin to play with these mountains he will undoubtedly win during the TAP. Because of the way the game works, Jaimito will not consider that two initial arrangements of the stones are different if they only change in the order in which the mountains are given. This means that in order for him to consider two initial distributions to be different, these need to have a different number of mountains or, if the number of mountains is the same, then the stones must be distributed in a different way among the mountains. For example, if Jaimito has N = 4 stones, there are five ways in which he can initially distribute them in mountains: four mountains of one stone each; two mountains of one stone each, and another mountain with two stones; one mountain of one stone, and another mountain with three stones; two mountains of two stones each; and, lastly, a single mountain with all four stones. Because Jaimito does not want his mother to realize that he is cheating, he wants to change the initial distribution of the N stones every day. He is convinced that there are many different ways to initially arrange the stones that will guarantee him the victory, but he does not know how many exactly. For example, in the case with N = 4 stones Jaimito only has two possible ways to choose from: a single mountain with four stones, or two mountains of one stone each and another mountain with two stones. Your team's task in this problem is to help Jaimito count the number of different ways in which he can distribute his N stones in mountains in such a way that his victory is certain when playing against Jimena. In this way, Jaimito will rest assured knowing how many days he can win without his mother doubting of his good intentions.\",\n    \"id\": 2099,\n    \"input\": \"The first line contains an integer number T, the number of test cases (1 \\u2264 T \\u2264 200). Each of the following Tlines contains an integer number N, representing the number of stones Jaimito has (2 \\u2264 N \\u2264 1000).\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Game of Stones\",\n    \"output\": \"For each test case print a line containing a single integer number representing the number of different ways in which the N stones can initially be arranged in mountains so as to guarantee that Jaimito will win the game against Jimena. Because the answer can be a very large number, you only have to print the remainder of its division by 109+7.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By XIII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2009  Brazil\\r\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\r\\n                    Harbin has one of the biggest movie theaters in the world. The \\\"Xing Tzen Zu\\\" movie theater is very wide, with few rows and many chairs. The chinese goverment has specific rules for people to go to the movies: each couple must sit on the same row (the first row is occupied by farmers, drivers, mechanics, the second by teachers, salesmen, firemen, and so on). But, at the same time, it is forbidden for people to sit on the same position in two nights. That worried the mayor, who then tried to find how many nights the movie theater could open without the need to repeat a layout that had occurred before. An important restriction is that couples must always occupy neighboring seats on the row.\\r\\n\\r\\n                    Your task on this problem is to determine, given the number of seats N and the number of couples M, how many different ways the couples can    seat on the chairs in a way they are not separated.\\r\\n\\r\",\n    \"id\": 2100,\n    \"input\": \"\\r\\n                    The input is composed by several instances. The first line of the input has an integer number T indicating the number of instances. Each instance is composed by a line that has two integer numbers N (2 \\u2264 N \\u2264 4000) and M (1 \\u2264 M \\u2264 N/2).\\r\\n\\r\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Xing Tzen Zu\\u2019s Movie Theater\",\n    \"output\": \"\\r\\n                    For each instance print a line that has the number of different ways the couples could sit on the chairs in a way they are not separated.\\r\\n\\r\\n                    The answer must be in MOD1300031.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XIII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2009  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"We are in 2433 and the Pythanic spaceship has just been launched with the first group of humans to inhabit another planet. This journey has been long awaited since the life conditions on Earth became extremelly difficult after a failed attempt of a terrorist to exterminate the human race using mutant bacteria, about 400 years ago. Once the bacteria were very poorly made, with a lot of last minute kludges, the only thing he achieved was a terrible stench in the environment.\\n\\n                    Before the beginning of the journey, some decisions had to be taken with respect to the way of life that these people would take on the other planet. One of those decisions was that the duration of a day would be the same in all planets inhabited by humans, that is, the word \\\"day\\\" becomes simply a term that means \\\"24 hours\\\" and no more a term that specifies a complete rotation of the planet around itself. However, it was decided that the duration of the month may vary from planet to planet. Worried about the confusion it could generate, the analists from the interplanetary colonization comittee asked you to create a program that, given the duration of the months (in days) in two different planets, say how much different combinations of pairs (D1, D2) exist, where D1 is a day on planet 1 and D2 is a day on planet 2 (not necessarilly days of the same month). You may assume that the first day 1/1 (the first day of the year) occurs at the same time on both planets.\\n\\n                    For example, if a planet has 2 days in a month and the other has 3, we'll have 6 different day combinations: (1,1), (2,2), (1,3), (2,1), (1,2) and (2,3). If a planet has 4 days in a month and the other has 2, there will be only 4 combinations: (1,1), (2,2), (3,1) and (4,2).\\n\\n                    Given D1 and D2, your program must determine how many combinations exist.\",\n    \"id\": 2101,\n    \"input\": \"The input contains various instances.\\n\\n                    Each instance is composed by only one line containing two integers D1 and D2 (1 \\u2264 D1, D2 \\u2264 1.000.000.000), that correspond to the number of days in a month on the two different planets. The input finishes then D1 = D2 = 0.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Day Combinations\",\n    \"output\": \"For each instance of the input, print a line containing the number of different day combinations between the two planets.\\n\\n                    The answer must be given in modulo 1713371337.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By XIII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2009  Brazil\\r\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n                    China is one of the biggest countries in the world and the most populous. To do a census in the country is almost a war effort. The government sends to each canton a huge matrix which must be filled with every citizen\\u2019s characteristics. Each one of these matrixes has the same size: on the lines there are the various ethnicities (there are thousands) and on the columns the characteristics that you want to measure (it could get to millions). We know that few elements of each of these matrixes are in fact filled with values different than zero.\\r\\n\\r\\n                    The work of the government company that does the census is, then, to receive the P matrixes M \\u00d7 N (1 \\u2264 N \\u2264 100), each one given through its non-null elements and calculate the sum matrix of the various matrixes.\\r\\n\\r\",\n    \"id\": 2102,\n    \"input\": \"\\r\\n                    The input is composed by various instances. The first line of the input has a whole number T indicating the number of instances.\\r\\n\\r\\n                    The first line of each instance has two integers, N and L representing respectively the size of the matrices and the total amount of non-null inputs. The following L lines contain four integers Pk, lk, ck and vk indicating that the matrix Pk has value vk at the position in line lk and collum ck\\r\\n\\r\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Counting in Chinese\",\n    \"output\": \"\\r\\n                    For each instance print the non-null inputs of the matrix addition. For each non-null imput of the matrix, print its line, column and value correspondent, separated by a space. The output doesn't need to be sorted\\r\\n\\r\\n                    Between two instances print a blank line.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XIII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2009  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Harbin is an organized city, but constructed in a very economic way. All the streets are two-way streets, and it's possible to go from one point of the city to any other point, always walking through paved streets, but there are not two differents paths of paved streets connecting any two different points of the city. The mayor responsible for paving the streets claims he applied some sort of holand algorithm, but no one ever understood the name of the algorithm, so no one knows if it's true or not.\\n\\n                    At the time of the ice statues festival in Harbin the statues are spread in several points of the city, and the tourists are invited to walk through the paved streets in order to visit all of it. Always thinking about economy, the mayor wants to know what is the total length, in kilometers, of the paths that connects all of the pairs of statues (each pair must be counted only once, in other words, if you have already counted the path from A to B, you shouldn't count the path from B to A). Your task in this problem is, given the position of the statues and the lenghts of the paved streets that connect the statues, determine this total length.\",\n    \"id\": 2103,\n    \"input\": \"The input is composed of several instances. The first input row of each instance contains an integer N (1 \\u2264 N \\u2264 10000), representing the number of statues. The statues are enumerated from 1 to N. Each one of the following N-1 rows contains three integers A, B and C (1 \\u2264 A, B \\u2264 N, 1 \\u2264 C \\u2264 50), indicating that the paved street that connects the statues A and B has length C.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Harbin is Too Much Money!\",\n    \"output\": \"For each instance print the sum of lenghts of the paths that connects all the pairs (not-ordered) of statues.\\n\\n                    The answer must be in MOD1300031.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XIII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2009  Brazil\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"We are in 2048. There are a lot of floating platforms orbiting Earth that defends our planet against asteroids and any other thing that might hit our planet. These platforms are equipped with cannons that shot projectiles on anything getting close.\\n\\n                    An alien civilization intends to invade our planet, but first they need to get trough the barrier of floating platforms. To do so, they are going to use a laser super multi-cannon, that shoots, at the same time, thousands of laser beams, from a single point. This way they are able to aim in all platforms of our planet and destroy all of them at the same time, without giving us any time of reaction.\\n\\n                    The biggest problem is that the laser beams are so powerful that they don't stop after destroying the floating platforms, they end up hitting earth after that. When the ray hits the solo, each laser beam turns into an energy sphere, and each energy sphere attach to another energy sphere through wires, also energized, forming a power grid that cannot be touched. It is a highly dangerous and destructive attack.\\n\\n                    Our intergalactic spy Austero Poderes made into the cannon e figured out from where the aliens want do release those rays. Since he can't simply deactivate the cannons, the spy headquarters decided that, as its not possible to save the platforms, we have to estimate the damage that Earth's soil will receive by the laser beams.\\n\\n                    Knowing where the platforms are and from where the laser beams will be shot, you have to define what will be the area compromised by the \\\"energy network\\\" that will be formed on Earth.\\n\\n                    Remember that on 2033 it was discovered that the Earth is actually flat.\",\n    \"id\": 2104,\n    \"input\": \"The input file will contain several instances.\\n\\n                    Each instance begins with an integer N (3 \\u2264 N \\u2264 1000), which represents the number of floating platforms. The next line contain coordinates (Xp, Yp, Zp), representing from where the laser beams will be shot. The N following lines contain, each one, coordinates (Xi, Yi, Zi), representing where are the floating platforms. Earth's soil is represented by XY plane. The laser beams' shooting point will always be above the platforms. The platforms will be in different points and no laser hits the ground on a coordinate (x or y) smaller than -100000 or bigger than 100000 (-100000 \\u2264 Xp,Yp,Zp,Xi,Yi,Zi \\u2264 100000).The input stops when N = 0.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Lasers\",\n    \"output\": \"For each instance on the input, print one line containing the value of the compromised area by the energetic network formed by the laser beams on Earth's soil, with two decimal places.\\n\\n                    The output must be printed on the standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XIII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2009  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"The Collegiate Programming Contest is an event that happens every year with the help of organizations and people who are enthusiastic about the idea of science competitions. Among the motivations for contestants of this event, there are the increase in knowledge related to algorithms (and all areas of mathematics in general), the improvement in the structure of reasoning, the improvement in typing speed and also the social network created with high level people in computing. For Unicamp competitors, however, the motivation is different. The opportunity to travel to stay in a hotel playing board games is what drives these people to participate in this event.\\n\\n                    In the last one there was fierce competitions of various types of games, including one called Monopoly. The object of the game is to ensure the greatest possible accumulation of capital through property speculation.\\n\\n                    Andr\\u00e9 was one of the participants of the game and ended up losing every game for his teammate, Felipe, who was accused of witchcraft by the magnitude of victories in a game that theoretically depends only on luck and persuasion. \\n\\n                    One of the things for what Andr\\u00e9 was angry he did not get to buy the most expensive land, while Felipe always bought them. Felipe tried to convince Andr\\u00e9 that no longer practiced witchcraft for years, and he did not fall in the expensive territories because the probability was very small. \\n\\n                    To help Felipe to convince Andr\\u00e9 of the odds on the board, you will write a program that, given a description of the board, calculate what is the probability of falling in a given cell of the board after endless rounds.\\n\\n                    The board is described as a sequence of N cells. The board is circular, that is, after the N-th cell, you go to the first one. Some homes are special, and immediately send you to another cell. Early in the game, everyone in the cell number 1, and each round players roll one die of D sides, which will tell the player how many cells should proceed.\\n\\n                    The description of the board is a sequence of N integers, each integer is:\\n\\n                    -1 If it is a normal cell;\\n\\n                    K if it is a special cell, where K is an integer representing the index of the cell where the player will be immediately sent (the index of the first cell is 0). The K-th cell is a normal one. \\n\\n                    For example, if the tray is described as -1 -1 0 1 -1 0, we have a board with six cells, and the first, second and fifth cells are normal. If the player lands on the third or sixth cells, it is sent immediately (in the same round) to the cell of index 0 (the first). If it falls in the fourth cell, it is sent to the cell of index 1 (the second).\\n\\n                    Furthermore, the amount of sides of the used die will be given, which can be between 3 and 20 sides.\",\n    \"id\": 2105,\n    \"input\": \"The input contains several instances. Each instance consists of two lines. In the first line, two integers are given, N (3 \\u2264 N \\u2264 1000) and D (3 \\u2264 D \\u2264 20), separated by a blank space, indicating respectively the number of cells on the board and the number of sides on the dice.\\n\\n                    In the second line, N integers are given a1, a2, ... aN (-1 \\u2264 ai \\u2264 N-1) separated by white spaces, which is the description of the board as explained in the previous section.\\n\\n                    The input ends when C = D = 0.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Monopoly\",\n    \"output\": \"For each instance in the input, print a line with N integers p1, p2, ... , pN, where pk is the probability (in percentage) that, after endless rounds, the player stops at the cell k. The numbers shall be separated by spaces and shall have 3 decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por XIII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2009  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"We are in the year 2931. Scientists detected a meteor that, in 15 months, will collide with the Earth and extinguish the life on planet. There is no remaining time to prepare offensives against the meteor, so we can only make our last wishes and wait for the collision.\\n\\n                    A group of people decided to meet and make the last wish of hundreds of thousands of people: see the team Portuguesa win the South America Libertadora's Cup. For such, they will need to hire several skilled players, that are also expensive.\\n\\n                    To do that, they studied the personality of the best players in the world, and reached the conclusion that some would accept to play at Portuguesa easily (that is, they would be hired for a less price) if they realized that they would be the only \\u201cstars\\u201d in the team. Others, would come easily if they realized that Portuguesa already had others stars.\\n\\n                    This way, through a more detailed study of the personalities, they managed to define, for each player, which would be the price to hire them in several scenarios.\\n\\n                    For example, the player X could be hired for $3 if he was the only star of the team, or $5 if there was one star on the team before he entered. On the other hand, the player Y would be hired for $4 if he was the only star of the team, or $2 if there was one star on the team.\\n\\n                    In this scenario, the best way to hire X and Y would be to first hire the player X by $3 and then hire Y by $2, spending a total of $5.\\n\\n                    You will receive the data of the costs of hiring the players in each scenario, and must say how much the Portuguesa's supporters will have to save to build a dream team and win the Libertadores.\",\n    \"id\": 2106,\n    \"input\": \"The input has several instances.\\n\\n                    The first row contains an integer N (2 \\u2264 N \\u2264 18), representing the quantity of players to be hired. Each of the next N rows represents a player. Each row contains N integers c0, c1, c2, \\u2026, cN-1 (1 \\u2264 ci \\u2264 1000, for all 0 \\u2264 i < N) separated by spaces, where c k represents the cost to hire the player c if k players are already hired.\\n\\n                    The input ends when N = 0.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Assembling\",\n    \"output\": \"For each input instance, print one row with an integer representing the minimum amount of money that they will have to spend to hire the N players.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The pyramids are very frequent structures on ancient civilizations all over the world. The most famous, the Egypt ones, were built more than 2000 years before Crist's passage on Earth. Other famous pyramids are the ones from Mexico and Central America, linked to the Mayan and Aztec civilizations.\\n\\n                    Little known, however, are the pyramids built on the Ural mountains, near the city of Ekaterinburg. These pyramids date back to the early Christian era, and is believed to have been built by Mongolian peoples, who invaded the Europe through the Ural mountains, coming from Asia. Unlike the other known pyramids, these had triangular base. Thus, these pyramids had 4 triangular faces. Many of these pyramids were built on columns, allowing non-parallel to ground constructions and even exposing the pyramid's base.\\n\\n                    That was very important, because the faces of the pyramid were painted with figures representing ancient gods, mythological figures, planets and other celestial bodies and so on. Thus, at some point in the city, a citizen could see one or more faces of the pyramid. This was important to the local religion, and find a house whose window glimpsed the best faces of the pyramids was much appreciated at the time.\\n\\n                    Your task is, given the positions on space of a pyramid's vertices, and the position on space of an observer, determine which faces of the pyramid are visible to him, considering that there is no obstacle between the observer and the pyramid.\",\n    \"id\": 2107,\n    \"input\": \"The input is composed by various instances and ends with end of file (EOF).\\n\\n                    Each instance consists of 5 lines. Each line contains three integers, separated by spaces, and represent the coordinates of the points A, B, C, D and X, respectivelly, where X is the position of the observer and the other points are the vertices of the pyramid.\\n\\n                    All points provided have integer coordinates between -100 and 100.\\n\\n                    The points A, B, C and D are not coplanar.\\n\\n                    All points provided are distinct.\\n\\n                    The point X neither belong to the interior of the pyramid nor to any face of it.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"The Ekaterinburg Pyramids\",\n    \"output\": \"For each instance, print a line containing 4 characters. The first character must be Sif the observer sees the face of the pyramid that is oposite to vertex A, and N otherwise. Analogously for the second, third and fourth characters, but relative to the vertices B, C and D respectivelly.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Matheus & Leticia Mayumi, IFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tMatheus was talking\\u00a0to his bride\\u00a0by text message,\\u00a0when she sent the following message:\\r\\n\\r\\n1-4-3\\r\\n\\r\\nHe did not understand the message,\\u00a0so he asked what it meant,\\u00a0and she said it means\\u00a0'I Love You',\\u00a0and soon he realized that each separate number by a ' - '\\u00a0is the number of letters for each of words composing the phrase.\\u00a0With that, he had the idea of creating a program\\u00a0that entering certain phrase,\\u00a0it calculates the size of each word and separates the values by ' - '.\\u00a0But he still had the idea that the program\\u00a0should receive several phrases line by line and at the end of the program the word with the greatest number of characters should be displayed.\\n\\t\\t\\t\\t\",\n    \"id\": 2108,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases.\\u00a0The first line of a test case contains a\\u00a01\\u00a0\\u2264\\u00a0String \\u2264\\u00a0100\\u00a0with a single word or a phrase.\\u00a0Test cases will be processed when the number 0 is received.\\u00a0There can be no more than a space separating each word.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Counting Characters\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case,\\u00a0display the number of characters in each word that makes up the received phrase.\\u00a0Divide the number of characters of each word for ' - '.\\u00a0Also display, the word with the greatest number of characters of all received phrases.\\r\\n\\r\\nObs: If have words with identical numbers of characters, consider last received.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Alexey and Boris were both KGB agents  that were living at Ecaterimburgo in the 70's. The city was so boring that they decided to make up a game using dice and escape from a tedious death. In this game, each agent starts with A and B life points respectively. Both Alexey and Boris have a number of possible attacks. They attack each other in turns. The attacks are described by  an amount of dice. The damage caused by an attack is the sum of the values in the dice. \\n\\n                    In order to play they have honest dice with numbers from 1 to 12. That way, if one die with L sides has been rolled  it will show an integer value between 1 and L with the same probability and in a independent way of any other dice rolled.\\n\\n                    The agents know all their own attacks  and the oponent attacks. That way they have to decide how to attack in each turn in order to maximize  their victory probability.\\n\\n                    Your task is to find what is the probability of each agent's victory.\",\n    \"id\": 2109,\n    \"input\": \"The input is composed by several instances and it ends with the end of the file (EOF).\\n\\n                    The first line of each instance has four integers:  VA, VB (1 \\u2264 VA, VB \\u2264 300), NA and NB (1 \\u2264 NA, NB \\u2264 10). Each one of the next NA lines describe an Alexey's attack, they start with an integer D (1 \\u2264 D \\u2264 3) and followed by D other integers L1 , . . . , LD (1 \\u2264 Li \\u2264 12), indicating that in this attack Alexey has rolled D dice with L1 , L2 , . . . , LD sides. The next NB lines describe Bori's attacks in the same way.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Spies's Duel\",\n    \"output\": \"For each instance, print one line with one float number rounded to 3  decimal places, indicating the probability of Alexey's victory, knowing that he starts attacking.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"A company wants bring down a building to build a garden in Ecaterimburgo's main avenues, but wants to do a study before this: discover the time of sunshine that garden will receive per day, considering that she will bring down the chosen building and build the garden in that place. This is important, because sun bath is a very popular activity between people from this city during the summer. The garden receives sunlight if at least a piece of this garden have been receiving sunlight.\\n\\n                    To turn easy this things, the builder chose a day of the year to do measurements. In that day the sun rises at 5:30 and sets at 21:30 (in the russian summer the days are long). Consider that the sun has constant angular speed in sky and it rises in the east and sets in the west.\\n\\n                    All buildings are aligned in direction east-west, they have the same width and spacing between them is constant, the garden will have the same buildings' width.\",\n    \"id\": 2110,\n    \"input\": \"The input is composed of different instances and ends with end of file(EOF).\\n\\n                    Every instance consists of 2 lines. The first line contains 3 integers N (2 \\u2264 N \\u2264 100), L, D (1 \\u2264 L, D \\u2264 100), the number of buildings, the width of each one of them, and spacing between them, respectively. The second line contains N integers hi (0 \\u2264 hi \\u2264 50), the height of the buildings. A height with value 0 mean that the garden will be built at that position and will appear exactly one time. All measurements are meters.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Sun Bath in The Garden\",\n    \"output\": \"For each test case, print a line containing the time, in minutes, of sunlight that garden will receive on the chosen day, approaching for 2 decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Tools that help calculate existed for centuries. Long before the advent of calculators in the seventeenth century, Chinese and Japanese were using abacus to do sophisticated mathematical operations on blinding speed. A similar instrument was recently discovered in excavations near the city of Yekaterinburg. Believed to be similar to the Japanese abacus, called, in Russian, sorobov (copo\\u0431o). \\n\\n                    The sorobov has nine columns, where each column corresponds to a digit. The rightmost column is the unit, the second most on the right represents the tens and so on. There are 7 lines, the first two being separated by a stripe, of the last 5. At the top (first two rows), each column has a single stone which is pressed against the spacer bar adds 5 to the value of the corresponding digit. At the bottom of each column there are 4 stones and an empty space and the amount of stones between the spacer bar and the empty space is added to the value of the corresponding digit. Thus, we say that the stones above are worth 5 and those below are 1.\\n\\n                    \\n\\n                    Figure 1: Illustration of how to represent numbers 0 to 9.\\n\\n                    Your task in this problem will be, given a number N print the representation of the sorobov configuration related to that number.\",\n    \"id\": 2111,\n    \"input\": \"The input consists of several instances and ends with the end of file (EOF).\\n\\n                    Each instance corresponds to a single line containing the number N to be inserted in sorobov.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Understanding Sorobov\",\n    \"output\": \"For each instance print the representation of the number N (0 \\u2264 N < 109) sorobov in the following format.\\n\\n                    The first two rows correspond to the stones that worth 5, the next line print --------- (nine dashes) and the next five lines correpondem the stones that worth 1. Each row of stones must contain 5 characters, '0' representing an empty spot and '1' representing a stone. Print a blank line after each instance (including the last).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Yekaterinburg University teachers don't like to travel over long distances. Each teacher want the rooms in which he will teach are in adjacent positions. At the beginning of each semester the Graduate Committee responsible for determining the classrooms in which teachers should teach. Every teacher knows that classroom of students should attend his lectures as, for example, students in the third period of mechanical engineering, or students of the first Computation, etc. The students of each class remain in the same room in every class. The important thing is that all the rooms where a teacher teaches are in adjacent positions. It is not always possible to meet the requirements of teachers. If, for example, a faculty member teaches for the third semester of mathematics and computing, a first half second teaches for the first half of computing and electrical engineering second sentence and a third teacher gives lessons to the students of the second period of electrical engineering and third semester of Math, clearly it is not possible to satisfy the three teachers. Your task is to help the responsible for allocating rooms, and determine whether it is possible to satisfy all the requirements of teachers.\",\n    \"id\": 2112,\n    \"input\": \"The entrance is composed of various bodies and ends with end-of-file (EOF). In the first line of each instance is given the number of classes T (1 < T < 103), numbered from 1 to T, and the number of professors d. In D (1 < D < 103) next lines are given the number K (0 < K < T)of classes in which the teacher teaches correspondent followed by IDs of these groups in ascending order.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Scheduling Classrooms\",\n    \"output\": \"For each instance your program should print a permutation class that meets the requirements of all teachers, i.e. every class where a teacher teaches are adjacent. If there is no such permutation your program should print \\\"impossivel\\\". If there is more than one possible permutation, any one is accepted.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"During the years of the Soviet Union, the name of the city of Yekaterinburg was Sverdlovsk, in honor of Bolshevik Iakov Sverdlov, son of a Jewish craftsman who was excellent speaker and was a major player next to Lenin in the October Revolution of 1905. He was considered honest, energetic and hardworking and respected by all sections of the party. He died at age 34. The city resumed its original name in 1991 by Boris Yeltsin first president of Russia, born in the city.\\n\\n                    On April 2, 1979, when the city was still called Sverdlovsk happened one anthrax leak of one a military factory in the city. This incident is often called \\\"biological Chernobyl\\\", and caused about 100 deaths, though the exact number of victims and contaminated's people is unknown. The Soviet Union denied for years the real causes of the accident and all records of the victims had disappeared, because it could have revealed serious violations of the Biological Weapons Convention.\\n\\n                    The Soviet authorities had to resort to highly sophisticated decontamination procedures, especially in rural areas. Each rectangular area of \\u200b\\u200bdimensions N by M yards has divided into M \\u00d7 N square sections of one square yards. These sectors are identified by the coordinates of their centers, numbered from east to west and from south to north from (1, 1).\\n\\n                    Each sector is considered decontaminated if it is covered by at least K agents health. Each agent was able to cover a circular area. The radius of this area varied depending on the equipment used and the experience of the health agent. Your task is to determine how many of these sectors are considered decontaminated, in other words, covered by at least K agents. Consider that a sector is covered if its center is an area covered by a health agent.\",\n    \"id\": 2113,\n    \"input\": \"The input consists of several test cases and ends with the end of file (EOF).\\n\\n                    The first line of each case contains two integers, N (1 \\u2264 N\\u2264 103) and M (1 \\u2264 M \\u2264 105), indicating the size of the rectangular area. The second line contains the number of agents,C, and the K number (1 \\u2264 K \\u2264 C \\u2264 103). The  C number following lines have the description of Xc (1 \\u2264 Xc \\u2264 N), Yc (1 \\u2264 Yc \\u2264 M) and Rc (0 \\u2264 Rc \\u2264 108)agents where (Xc,Yc) is the center of the circular area with of radius Rc that an agent covers.The input must be read from standard input.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Sverdlovsk's Incident\",\n    \"output\": \"For each case, print the number of sectors that are covered by at least, K agents health. The output should be written to standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Poker is played with a traditional deck of 52 cards (13 values in 4 suits). The values on the cards, in ascending order, are: 2, 3,\\u2026, 10, Jack, Queen, King, Ace. Given a round of a poker game with two players, your job is to determine the winner.\\n\\n                    Each player has two card of their own and there are five cards common to both players on the table. The player with the best hand of five cards among his own two and the five on the table wins. A card from the table can be used by both players at the same time and the player hand can be obtained by ignoring the two cards of their own and using the five cards common to both of them.\\n\\n                    In order to compare two hands, you have to check which hands they match on the list below. If a hand matches more than one type, you must choose the most valuable one. If two hands match a same type, you apply the tiebreaker rule specific to this type.\\n\\n                    The list of hands, sorted from the least valuable to the most valuable, and their respective tiebreaker criteria is:\\n\\n                    \\n                        High card: any hand that does not matches any other hand. The tiebreaker rule is to compare the five cards one by one, from the most valuable to the least, until a hand presents a card with more value than the other.\\n                        One pair: two cards of the same type. The tiebreaker rule is similar to the high card\\u2019s rule, only that you compare first the pair and then the other cards.\\n                        Two pairs: two pairs. The tiebreaker rule is similar to the high card\\u2019s rule. You first compare the most valuable pair, then the least valuable pair and then the remaining card.\\n                        Three of a kind: three cards of the same value. The tiebreaker rule is similar to the one pair\\u2019s rule.\\n                        Straight: five cards sequence of consecutive values. In this case, the Ace can take the value of both the least valuable card (before the 2) or of the most valuable (after the king). The tiebreaker rule is done by the most valuable card on the straight. Note that the Ace is the least valuable card if it appears before the 2.\\n                        Flush: five cards of the same suit. The tiebreaker rule is the same of the high card\\u2019s rule.\\n                        Full House: a three of a kind and a pair. The tiebreaker rule is done by comparing first the values of the three of a kind. If the tie remains, the pair values must be compared.\\n                        Four of a kind: four cards with the same value. The tiebreaker rule is comparing the values of the four of a kind and then the remaining card.\\n                        Straight Flush: Straight and Flush simultaneously. The tiebreaker rule is the same of the straight\\u2019s rule.\\n                    \\n\\n                    Note that it is possible for a tie to remains even after the tiebreaker rules are applied. The cards suits are only to be considered to define a flush, and are not be taken in account in any tiebreaker rule.\",\n    \"id\": 2114,\n    \"input\": \"The input has several instances and ends with an end of file (EOF).\\n\\n                    Each instance is composed of three lines. The two first lines contain the description of two cards each one, separated by a blank space. The first line corresponds to the cards of the first player while the second line corresponds to the cards of the second player. The third line contains the description of the five cards on the table, also separated by blank space.\\n\\n                    \\n                        \\n                            \\n                                Character\\n                                Card\\n                            \\n                                 '2'- '9' \\n                                2 - 9\\n                            \\n                            \\n                                 'T' \\n                                 10 \\n                            \\n                            \\n                                 'J' \\n                                 Jack \\n                            \\n                            \\n                                 'Q' \\n                                 Queen \\n                            \\n                            \\n                                 'K' \\n                                 King \\n                            \\n                            \\n                                 'A' \\n                                 Ace \\n                            \\n                            \\n                                 'e' \\n                                 Spades \\n                            \\n                            \\n                                 'c' \\n                                 Hearts \\n                            \\n                                 'o' \\n                                 Diamonds \\n                            \\n                            \\n                                 'p' \\n                                 Clubs \\n                            \\n                        \\n                    \\n\\n                    The description of a card is given by two characters, the first indicating the value of the card and the second its suit, according to the input sample.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Poker\",\n    \"output\": \"For each instance, print a line containing a single integer. Print 1 if the first player wins the instance, print 2 if the second player wins or print 0 if there is a tie, even after the tiebreaker rules are applied.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Ekaterinburg is a Russian city located at the border between Europe and Asia, Urals. It is the fourth largest city in Russia with more than 1.4 million inhabitants. The main economic activity of the city is related to the production of industrial machinery. The factories of the city produce a great part of all machines in Russia and export to many countries around the world. In particular the production of industrial tools is famous in the country. Tools are produced by highly specialized machines, and for each tool to be produced machines spend a predetermined time for its production.\\n\\n                    One of the factories has only one of these machines and their manager needs your help to improve their productivity. Requests for tools arrive at the factory continuously, ie, earlier in the day not all requests can be processed because these will be available through the day. The manager thinks that employees are not choosing the right order in which requests are attended and he wants to analyze the sequences of requests from previous days. Thus, he asks you to determine, for a given day, the lowest possible moment that all applications would be completed.\",\n    \"id\": 2115,\n    \"input\": \"The entry consists of several instances and ends with end of file (EOF).\\n\\n                    Each instance starts with the number N (1 \\u2264 N \\u2264 105) of tasks that will be processed during the day. The following N lines have the time di when the task will be available and the processing time pi of the task on the machine (1 \\u2264 di, pi \\u2264 104). The processing start occurs at time 1.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Production in Ekaterinburg\",\n    \"output\": \"For each instance of your program should print the lowest moment when the last task will finish its processing.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thiago Nepomuceno  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJuilherme and Jogerio, really like to play matemathical games. Juilherme create a new game to play while they watch this online contest.\\n\\nThe game use the following steps:\\n\\n1) Juilherme choose a integer N and Jogerio choose a integer M.\\n2) Juilherme e Jogerio should then find two prime numbers P1 and P2, that should be the closest integer possible when compared with N and M, respectively. Besides that, P1 should be equal or less then N and P2 should be equal or less then M.\\n3) The final answer of the game is find the multiplication of P1 and P2. Who find the answer first will be the winner.\\n\\nThey will try to find the answer the fastest way possible, and sometimes they can make some mistake. So, they need a algorithm that delivers the final answer of the game, that will then be compared with their answer.\\n\\n\\nUsing the information of the game, create a new program that give N and M print the final result of the game.\\n\\t\\t\\t\\t\",\n    \"id\": 2116,\n    \"input\": \"\\t\\t\\t\\t\\tThe input will be only one line with N and M (2 <= N, M <= 1000)\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Students Game\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output of the program should be only one line with the final answer of the game.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Rog\\u00e9rio J\\u00fanior, Noic  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tMaster Null Yard is coordinator of Farias Brito who uses his large network on FB (FariasBook) to help young students who want to study at the organization. Recently, he decided to increase even more his number of friends, and he will do it commenting on random photos of friends' friends.\\n\\nBased on a recent study of the reputed research institute FBideias, Master knows that certain person i will accept his friend request after he commented a string S on one of his photos if the person\\u2019s favorite letter apeears at least Ki times in S. It doesn\\u2019t matter if the letter is uppercase or lowercase.\\n\\nAs he is carrying the name of the Organization, Master sent all his possible comments to FBideias, and received a list of the N comments which were approved as pollitically correct, but since FariasBook has a very rigid policy agains SPAM, he can\\u2019t comment the same string on two distinct photos.\\n\\nJog\\u00e9rio R\\u00fanior studies for olympiads in informatics, so Master decided to ask him for help in two problems: fixing his printer and choosing what to comment on each photo in such a way that his number of friends increases the greatest possible amount. Jog\\u00e9rio noticed the the printer had only a loose cable, solved this issue and gave to you, the new student Fia Breire, the mission to comment on the photos. Help the Master!\\n\\t\\t\\t\\t\",\n    \"id\": 2117,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input contains two integers: N and M (3 \\u2264 N, M \\u2264 1000), the number of strings on the list that Master received and the number of people who are his friends' friends, respectively. The next N lines will contain each one of the strings on the list that he received. Each line represents a comment. Due to FariasBook restrictions, each comment contains no more than 140 characters, which must be letters (uppercase or lowerase) or spaces. The next M lines will contain, each one, a uppercase letter ci and and integer Ki, which represent, respectively, person\\u2019s i favorite letter and how many times it must appear in order to that person accept Master\\u2019s friend request.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Help Me Master\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program must output a single line with and only integer: the greatest number of friends Master might get.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, Universidade Estadual do Cear\\u00e1  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tIn Fortaleza, all students wishing to study in the Farias Brito, but as there are many venues in the city, some students are in doubt about which headquarter to enroll.\\n\\nA student chooses to study at the nearest headquarter where he lives. If there are headquarters with same distance from where he lives, the student chooses to study at the headquarters that won more medals in Olympics. If still remains a tie, the student chooses the oldest headquarter.\\n\\nThe map Fortress can be drawn as a graph, where the vertices represent the sites, and the edges represent the streets (Connecting two sites). The distance between two sites X and Y is given by the minimum number of streets that must be used to arrive at Y from X.\\n\\nThe big boss Parcelo Mena ordered Nhalyson Tepomuceno to make a program that indicates what the best headquarter for the students.\\n\\t\\t\\t\\t\",\n    \"id\": 2118,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of multiple lines. The first line contains four integers L, S, Q (1 \\u2264 L, S, Q \\u2264 10^5) and A (1 \\u2264 A \\u2264 10^6), representing the number of sites, the number of headquarters, the numbers of students and the number of streets. Each of the next S lines contains three integers Pi, Mi and Ti (1 \\u2264 Mi, Ti \\u2264 10^9), representing the place where headquarter is located, the number of medals and the number of days that the headquarter was built. Each of the next lines contains two integers X and Y, representing that there is a street that connects the sites X and Y. Each of the next Q lines contains the location of each student who wishes to enroll in Farias Brito.\\n\\nIt is guaranteed that for any two distinct headquarter, they were not built on the same day.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"What Headquarter?\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each location a student who wishes to enroll in Farias Brito, print the headquarter identifier that the student must enroll. If there is no headquarter that is accessible by the student using the streets, print \\\"Noic\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Guilherme Madeira Ara\\u00fajo, Noic  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tGo\\u00e3o Juilherme is a student at Educational Organization Farias Brito. Since he is often missing classes, his supervisor Parcelo Mena asks him constantly to go to his office to scold him. Farias Brito is a quite eldritch school, it has far more stairs than floors, and some stairs go directly from a floor to another many levels above. Go\\u00e3o doesn't like changes, so he decides he wants to use only the same route to get to Parcelo's office, however he doesn't want to do the same thing everyday. Go\\u00e3o then resolves he will walk up the stairs in different ways, sometimes he will jump two steps and then go up only one or he can walk up one step and jump two and so on. Juilherme now needs your help to determine the route that he can use the highest amount of times before he has to repeat the way he walks up a stair. Since he has a finite memory, he only cares about the amount modulo 109 + 9.\\nNote: To walk up a stair, the sum of the sizes of Go\\u00e3o's jumps must be equal to the amount of steps in the stair.\\n\\t\\t\\t\\t\",\n    \"id\": 2119,\n    \"input\": \"\\t\\t\\t\\t\\tThe input begins with three integers n (n \\u2264 10000), m (m \\u2264 100000) and k (k \\u2264 1000), respectively the number of floors, the number of stairs and the number of Go\\u00e3o's different jump sizes. The following line contain k numbers, Juilherme's jumps heights. The last m lines contain three integers, a, b and c (0 \\u2264 a \\u2260  b \\u2264 n - 1, 1 \\u2264 c \\u2264 1000), describing that a stair connects floors a and b and has c steps, Juilherme always starts at floor 0 and Mena's office is at floor n - 1.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Go\\u00e3o and Stairs\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput the number of times Go\\u00e3o can use the desired route mod 109 + 9.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucca Siaudzionis, University of British Columbia  Canada\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tEvery time a new student joins the Educational Organization Farias Brito, he or she gets assigned to a tutor to help him know everyone and everything in the school.\\n\\nThe school\\u2019s system to determine each new student\\u2019s tutor was designed by a mad man called Succa Liaudzionis. Succa decided to use each student\\u2019s ID number to follow the pattern of a binary search tree (because reasons), like this:\\n\\n\\n\\tThe first student, with ID X1, becomes the root of the tree and thus has no tutor.\\n\\tThe numbers X2, X3, \\u2026, Xn are added one by one to the tree. To add a number Xi one must traverse the tree starting from the root and using the following rules:\\n\\n\\n\\n\\tThe pointer is initially set to the root of the tree.\\n\\tIf Xi is smaller than the ID of the current node, then its left child becomes the current node. Otherwise, the right child does.\\n\\tIf at some point the required child does not exist, the new node is created containing the value of Xi. The ID of the tutor of the current student is the parent Xi\\u00a0 in the tree.\\n\\n\\nFor example, if the order in which the students were added was (3, 1, 4, 2, 5), the tree would look like this:\\n\\n\\n\\nSucca was in need of extra space in his computer and decided to erase all information regarding the students\\u2019 tutors. Now, Succa\\u2019s boss, Jeixeira T\\u00fanior, asked him for the very same information about Q he had just deleted! Succa consider asking each student who his/hers tutor is, but that would take a lot of time.\\n\\nOn the other hand, Succa still knows the order in which the students were added to tree. Since Succa is not as brilliant as he is mad, he needs your help to use this information to tell him each student\\u2019s tutor.\\n\\t\\t\\t\\t\",\n    \"id\": 2120,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of four lines. The first one contains an integer N (2 \\u2264 N \\u2264 100 000), the number of students in Farias Brito. The second line contains N distinct integers Xi (1 \\u2264 Xi \\u2264 109), representing the students\\u2019 ID numbers in the order in which they were added to the system. The third line contains the integer Q (1 \\u2264 Q \\u2264 99 999). The fourth line contains Q integers from 1 to N representing the students whose tutors are asked (information regarding the first student shall not be requested).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Tutors\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output consists of Q integers. The integers represent, in order, the ID numbers the tutors of all students in order in which they were requested.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Many may think: \\\"What will I do in Yekaterinburg? This town is at the end of the world! \\\". However, many interesting things happened in the city, having several monuments and historical sites. To name a few, Yekaterinburg has a monument that is a great computer keyboard located on the edge of the river Izet; a monument to Michael Jackson (!); in the Ipatiev mansion were murdered in the Romanovs (Tsar Nicholas, his wife, four daughters and son); there was a leak of anthrax in 1979; American U2 pilot was captured and condemned for espionage; among others. I.e., there is much work to do in the days when the city is visited.\\n\\n                    The tourism center of Yekaterinburg constructed a map with the major tourist attractions as well as beautiful walks linking these paths. This map also shows a level of difficulty of each ride (related to duration, paving the way, relief etc..) And the direction in which it should be done. They wanted to build a route that passed by all the tourist attractions and rides. Was then devised a contest aimed at doing this route and at the same time paid homage to one of the sister cities of Yekaterinburg: Kaliningrad, whose name until the end of World War II was K\\u00f6nigsberg. The idea was to build a route that would break one of the attractions, and going through all the rides if he returned to the starting point. We know that as in the case of Konigsberg bridges, it is not always possible to build a route as well. Therefore the central allowed, if necessary, the rides could be made more than once. However, she demanded that the overall difficulty of the route (sum of difficulty of each ride multiplied by the number of times it is done) was minimal. Thus, the contest consisted of proposing, from an initial route, which tours would be traversed more than once and how many times to obtain a route as desired by the center.\",\n    \"id\": 2121,\n    \"input\": \"The input is composed of several instances and ends with the end of file (EOF).\\n\\n                    The first line of each instance contains two integers N (2 \\u2264 N \\u2264 50) and M (0 \\u2264 M \\u2264 N2+103), the number of city attractions and the number of trips respectively. The next M lines contains three integers, ai, bi, di (1 \\u2264 ai, bi \\u2264 N) indicating that walking i get on there, finish in bi and has difficulty di (1 \\u2264 di \\u2264 3x104).\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Tourism in Yekaterinburg\",\n    \"output\": \"For each instance print the minimum total difficulty of the desired route. If unable to obtain a route the way you want, print \\u201cimpossivel\\u201d.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XVII Maratona de Programa\\u00e7\\u00e3o IME-USP, 2013  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"Yekaterinburg, Russia, is a city with a curious voting system. In an election in which there are V vacancies for a position, each voter is entitled to vote V times, arranged in order of preference. Thus, if there is, for example, 3 vacancies in the Senate, each voter votes for up to 3 names. The candidates with the highest number of votes will be elected, regardless the preference of the voters. Only if there is a tie the order given by the voters become important. In this case, the candidate with the most nominations for the first place wins. If still a tie, for second place, and so on. If two or more candidates who are in the a position to be elected have exactly the same number of nominations in all positions, all are elected (it may even exceed the number of vacancies). Candidates with zero votes can be elected if there is still places available.\",\n    \"id\": 2122,\n    \"input\": \"The input consists of several instances and ends with the end of file (EOF).\\n\\n                    Each instance starts with the number N (1 \\u2264 N \\u2264 105) of voters, the number K of candidates and the number V (1 \\u2264 V \\u2264 K \\u2264 100) of vacancies. The following N lines describe the votes of each voter. In a vote, the voter i indicates the number Li (1 \\u2264 Li \\u2264 100) of candidates in which he will vote, and the indices of these candidates in his preference order. Indices of candidates outside the range [1, K] mean blank votes only for the corresponding preference option. If more then V votes are given, the last ones must be ignored. A voter never indicates the same candidate more than once.\\n\\n                    The input must be read from standard input.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Voting at Yekaterinburg\",\n    \"output\": \"For each instance of the input your program must print, in a single line, the list of elected candidates ordered by the candidates rating in the election. If two candidates have the same rating, the lower index comes before.\\n\\n                    The output must be written to standard output.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The Royal Canadian Mounted Police is a very famous institution , whose origins date back to the nineteenth century. Your task is to bring the law to the farthest places in the continental country . Today the police have mounted a force of 25,000 men and about 5,000 horses .\\n\\n                    Each seat of the RCMP has a horse farm where the animals are very well maintained and appointed the officers who have more affinity . This affinity is inferred in the observations of officers with several years of experience , watching the cops riding animals available . At the Fairmont Banff Springs Stables , where are the horses ridden by the police in the region of Banff Springs , it is necessary to solve the problem of deciding which soldiers will ride that horse . Note that a horse can be ridden by several policemen , but only a police officer riding a certain horse . Each horse has a limit of cops who can ride him. That means, in possession of affinity of several policemen who rode with the animals in recent times, we wish to find an assignment of the various police horses, so that the largest possible number of officers have a horse to ride.\",\n    \"id\": 2123,\n    \"input\": \"The entrance is composed of several instances. The first line of each instance consists of three integers n (1 \\u2264 n \\u2264 100), m (1 \\u2264 m \\u2264 100) and k (1 \\u2264 k \\u2264 1000) indicating the number of horses, the number of soldiers and the number of affinities. The next line contains n integers c1, c2, .., cn indicating that the ith horse can ride ci (1 \\u2264 ci \\u2264 100) soldiers. In the following k lines have two integers u (1 \\u2264 u \\u2264 n) and v (1 \\u2264 v \\u2264 m) indicating that there is affinity between u and v horse soldier.\\n\\n                    The entry ends with end of file.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"The Law Goes on Horseback!\",\n    \"output\": \"For each instance, you must print an Instancia k identifier, where k is the number of the current instance. On the next line print the maximum number of officers who can take a horse to ride on an assignment.\\n\\n                    After each instance print a blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Andorra\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Mrs. Montagny is a socialite of Quebec, who spends his holidays in Banff, in his mansion on the edge of Lake Louise. Their dinners are famous because she spends a questionnaire in advance to guests where they participate in the choice of menu. In the questionnaire, the famous magnate list all the dishes that you can make for dinner, offering a guest column to select the platter and another to veto it.\\n\\n                    And allowed to make only two choices in the questionnaire, each guest can select a dish and another veto, veto two dishes or select two dishes. Mrs. Montagny ensures that all guests will have at least one of their wishes granted.\\n\\n                    Previously she herself realized assembling the menu and meet its promise, but with the growth of your parties this has become impossible. So, she decided to hire you to do a program that receives requests from guests and answer if she can mount a menu for the party.\",\n    \"id\": 2124,\n    \"input\": \"The entry consists of several cases. Each case starts with an integer N ( 1 \\u2264 N \\u2264 1000), indicating the number of questionnaires received by Mrs. Montagny. Each of the next N lines contains two food names indicating the preference of each guest. A name of food is a sequence of letters [a-z] over a maximum of 20 letters. When the name of a food starts with ''!'' means that the guest want to veto the food, otherwise he wishes to select.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Mrs. Montagny Menu!\",\n    \"output\": \"For each case, you should print a identifier \\\"Instancia K\\\", where K is the number of the current case. In the next line you should print \\\"yes\\\" if she can attend at least one desire of every guest and \\\"no\\\" otherwise. After each case, your program should print a blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By   Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Several pre-columbian civilizations inhabited tje region of Alberta in Canada. Little remained of these cultures, decimated by the intense cold, by the bear and, finally, by the British and French invaders who arrived after the discovery. Today, researches from Alberta's University try to unveil the mysteries of these people, studying totems produced in the region.\\n\\n                    Studies of the arts department of the university showed that the totems builders liked to mark them with several copies of their signatures. The artist's signature was made with vertical \\\"|\\\" and horizontal \\\"_\\\" grooves. Scholars imagine that the symbol was a representation of evil in the primitive culture and, therefore, a taboo, building a square pattern. Several signatures of artists from that era have already been identified.\\n\\n                    Your task in this problem is to make a program that receives a image of a totem, through a n x n square pattern size of vertical and horizontal grooves, and a m x m square signature size with a pattern of the same type, and find all the occurrences of the signature on the totem.\",\n    \"id\": 2125,\n    \"input\": \"The input is composed of several instances. The first line of each instance consist in two integers n (1 \\u2264 n \\u22641000) and m (1 \\u2264 m \\u2264 60 and m < n), indicating the squares' sizes. In the n following lines there are n characters \\\"|\\\" or \\\"_\\\" representing the characters of the n x n square. In them following lines there are m characters \\\"|\\\" or \\\"_\\\" representing the characters of the m x m square.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Totems Builders\",\n    \"output\": \"For each instance, you must print an identifier Instance k, in which k is the number of the current instance. Print the list of all the occurrences line column (the upper left corner is the position 0 0) of the m x m square in the n x n square. The output must be ordered first by the column and then by the lines. In case of no occurrence, print a line with no occurrence.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Igor Gomes, UEVA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tGiven two natural numbers N1 and N2, it is said that N1 is contiguous subsequence of N2 if in N1  appear all digits in the same order and contiguously. Create an program that reads two natural numbers and write if the first is a contiguous subsequence of the second.\\n\\t\\t\\t\\t\",\n    \"id\": 2126,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases and ends with the end of file (EOF). The first line of each entry is composed of anatural value N1 (1 <N1 <1010), the second line is composed of a value N2 (N1 <N2<1032).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Searching Subsequences\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print the amount of contiguous subsequences and the position where the substring starts, if there is more of a subsequence, print where it started the last substring. If no there subsequence, print \\\"Nao existe subsequencia\\\" (that means no there subsequence). Show the result as the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Researchers of the department of operational research from the University of British Columbia were hired to perform a weird task. Many countries from Africa decided to unite and use officially the means of transportation that became worldly known in the Tarzan movies: the vine. There are millions of vines in Africa and it is surprising the speed and efficiency that a person can move through the woods using this means of transportation. There was only one problem. Three big tribes dominate the vines: the makeleles, the maouhdas and the abedis. The tribes demand payment for vine used in transportation. Because the tribes still do not know the meaning of words like cartel, each one made its price, and they were very different from each other. While the makeleles were charging 1235 bongos by vine used, the malouhdas were charging 8977 and the abedis 10923 (Jane is still alive and helped intermediate the negotiation for this tribe).\\n\\n                    The researchers were hired to choose the vines that will be part of the first vine system of the world. The people hiring built millions of \\\"vine's stop\\\" through the African woods and they wish that the vines were chosen in a way that it is possible to go to any point to another using the hired vines (you may have to change vines sometimes, as Tarzan did). You must say the cost of a system that meets all of these requirements and it is the cheapest possible.\\n\\n                    You can assume that there are enough vines in the woods so that there is always a vine system that meets the requirements.\",\n    \"id\": 2127,\n    \"input\": \"The input contains several instances. The first line of each instance cointains two integers N (1 \\u2264 N \\u2264 1000) and M (1 \\u2264 M \\u2264 2000000), where N is the number of \\\"vine's stop\\\" and M is the number of vines. Each of the next M lines contains three integers U, V and C indicating that there is a vines that goes from U to V with a cost C, where 1 \\u2264 U, V \\u2264 N and C \\u2208 {1235,8977,10923}. The input ends with an end of file.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Vine System\",\n    \"output\": \"For each instance, you must print an identifier \\\"Instancia K\\\", where K is the number of the current instance. On the next line print the cost of a system that meets the requirements described above.\\n\\n                    After each instance, print a blank line\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"With the large number of Argentine immigrants in Canada, the Canadian government is creating new roads to the most distant and isolated regions inhabited by Argentines. Several bids were made to find out which companies could lead the works of each road. Each company released estimates for roads they could build.\\n\\n                    Canadians are known for intolerance against corruption and want to avoid at all costs any company being favored above the others. They decided that each company can be hired to do at most one of the roads. You can see that in Brazil things work the same way. (But let's not get into this merit!)\\n\\n                    Between two cities only one company may have been chosen to build a road.\\n                    Your task is: Given a set of estimates for construction of roads linking the cities, decide whether there is a way to assign buildings to companies, meeting the requirement of the Canadian government, and being possible to travel from any city to any other using the roads built.\",\n    \"id\": 2128,\n    \"input\": \"The input consists of several instances. The first line of each instance consists in three integers n (1 \\u2264 n \\u2264 100), m (1 \\u2264 10000) and k (1 \\u2264 k \\u2264 2n) that indicates the number of cities, number of estimates and the number of companies. The next m lines contains three integers u (1 \\u2264 u \\u2264 n), v (1 \\u2264 v \\u2264 n) and c (1 \\u2264 c \\u2264 k) indicating that the company c can build a road that connects the city u to the city v.\\n\\n                    The instances are separated by a blank line.\\n                    \\n                    The input ends with end of file.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Demonstration of Honesty!\",\n    \"output\": \"For each instance, you must print an identifier Instancia k, where k is the number of the actual instance. In the next line print sim if exists an attribution of building of roads that meets the demands described above, otherwise print nao.\\n\\n                    After each instance print a blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"John is a very smart sixth grade boy. He likes Maths a lot, and he found out that his teacher is very lazy. At the tests, the teacher asks the kids to circle their answers with a coloured square, and also asks them to make the number's first non-zero digit (right-to-left) specially big, using a pen. John suspected that the teacher used only that digit to grade the question.\\n\\n                    The class learned to calculate the factorial of a number, and that is going to be the subject for the next test. John is convinced that he doesn't need to actually write the right number, as long as the first digit (right-to-left) is right. Your task in this problem is to help John calculate, for an integer number n from the input, the first digit (right-to-left) in n! that is different to zero.\",\n    \"id\": 2129,\n    \"input\": \"The input consists in many instances. The first line for each instance consists in an integer n (1 \\u2264 n \\u2264 1000000).\\n\\n                    The input ends with file end.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Factorial\",\n    \"output\": \"For each instance, you'll have to print a k instance identifier, where k is the current instance number. At the next line, print the first digit (right-to-left) that is different to zero.\\n\\n                    After each instance, print a blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Worried about the current situation of crisis in air transport, the regional director of the ICPC contest in Brazil has already startedhis preparations to make reservations of airline tickets for worldwide finals of Banff in 2008. The first step was to study the available air mesh, in which each flight has a certain price and connects two cities (we are actually calling flight only a snippet of a non stop commercial flight). The Director's goal is to make multiple queries in this mesh of flights.\\n\\n                    In general wewant to makenonstop flights, but this can be very expensive. To work around this fact the Directorallowed some possible scales. So, he explained the various towns of the mesh in his order of preference to do thescales. In other words, the index 1 is the city that he prefers to do the scale, followed by City 2, and so on.\\n\\n                    The queries that the Director will make are of the following type: is given the city of departure and arrival and a number t of cities in which the Director allows to be made stopovers. Your program must find the minimum cost of a flight between two cities thatdoes at mostscales in these cities. For example, if t = 1 you will find the cost of a flight between the two cities: or non stop or make a stopover in the first city.\",\n    \"id\": 2130,\n    \"input\": \"The input consists of multiple instances. The first line of each instance consists of two integers n (1 \\u2264 n \\u2264 100) and m (1 \\u2264 m \\u2264 100000), indicating the number of cities and the number of scales. In the following m lines, we have three integers u, v and w (u, v \\u2264 1 \\u2264 n and 0 \\u2264 w \\u2264 100) indicating that there is a scale that goes from u to v costing w. Then there is an integer c (1 \\u2264 c \\u2264 10000) indicating the number of queries and the c lines have three integers o, d and t (1 \\u2264 o, d \\u2264 n and 1 \\u2264 t \\u2264 n) where o is the city of origin, d is the destination city and t indicates that cities 1.2, .., t can be used for stopovers.\\n\\n                    The input ends with end of file.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Worldwide Finals in 2008\",\n    \"output\": \"For each instance, you must print a handle Instantance  k, where k is the number of the current instance. For each query, in order of entry, you should print the minimum cost or -1 if there is no path between the two cities.\\n\\n                    After each instance print a blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"We have already commented about the Mrs. Montagny's parties at the edge of the Lake Louise in Banff. In her parties, she undertakes to solve another problem that shakes dinners organizers around the world: where to seat your guests. The mogul simplifies the problem by asking the guests, on the same questionnaire already mentioned, that note on the list of guests who they wish to have in front of them at the dinner table. The ideia is to have your friends always ahead, so that the conversation can flow better. Her ability is such that she was hired by Fairmont Banff Springs Hotel (hotel in which the ICPC World Finals will take place in 2008: http://en.wikipedia.org/wiki/Banff Springs Hotel) for work on arrangement of banquet tables.\\n\\n                    Your task in this problem is to assist the mogul again. Given the wishes of the guests, your program must decide whether it is possible to arrange them on a table so that each guest has all his friends on the opposite side of the table.\",\n    \"id\": 2131,\n    \"input\": \"The input is composed of several instances. The first line of each instance contains two integers n (1 \\u2264 n \\u2264 100) and m (0 \\u2264 m \\u2264 n(n\\u22121)/2), where n is the number of guests and m is the number of friendly relations. Each of the following m lines contains two integers u and v indicates that u is friend of v and v is friends of u, where 1 \\u2264 u, v \\u2264 n.\\n\\n                    The entry ends with end of file.\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Mrs. Montagny's Table\",\n    \"output\": \"For each instance, you must print an instance identifier k, where k is the number of the current instance. On the next line, print yes it is possible or no otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                    By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brazil\\r\",\n    \"category\": \"Strings\",\n    \"description\": \"\\r\\n                    Canada is a very cold country. During eight months every year temperatures make virtually impossible for the streets to be occupied by intelligent life, leaving only cold-hardy creatures such as elk, bears, and Canadians (just kidding). During these long winter months families seek fun in front of their fireplaces (or, for the most courageous, around the fire). The Smith family, from Banff, invented the game we describe below.\\r\\n\\r\\n                    The game begins with a children's drawing a diagram with states (represented by dots) connected by transitions (arrows connecting the states). Each transition has an associated letter and one number. We make several trips this diagram, starting from a start state walking through their transitions and ending in a final state . A walk form a word (obtained from the concatenation of the letters of the transitions covered) and has a cost (which is given by the product of the numbers of these transitions).\\r\\n\\r\\n                    As an example, consider the diagram below.\\r\\n\\r\\n                    \\r\\n\\r\\n                    Image 1: Diagram\\r\\n\\r\\n                    All tours start in the P state and end in the Q state. The tour that follows the transitions (P, 1A), (P, 1A), (P, 1B) and ends in state Q form the word AAB concatenating the letters of each transition has cost 1 (product of the numbers of these transitions).\\r\\n\\r\\n                    The tour that follows the transitions (P, 1A), (P, 1A), (P, 1B), (Q, 2B) and ends in the state Q generates the word AABB and has cost 2.\\r\\n\\r\\n                    The game invented by father Smith was as follows. After drawing a diagram like this, one of the family members spoke a word, and others should find out the total cost of all tours on the diagram that form the given word such that it starts in state P and ends in state Q. For the example in the diagram above, if Mr. Smith asked the word ABA the answer should be 2.\\r\\n\\r\",\n    \"id\": 2132,\n    \"input\": \"\\r\\n                    The input consists of several words (the diagram is always the one in the figure). Each case is given by a line containing a word. A word is a sequence of letters [A,  B] with a maximum of 60 letters. The input ends with end of file (EOF).\\r\\n\\r\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Not One More Canadian Game!\",\n    \"output\": \"\\r\\n                    For each case, you should print a handle K, where K is the number of the current case. On the next line print the sum of costs. After each case print a blank line.\\r\\n\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brasil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Recent archaeological discoveries of researchers from the University of Alberta in Canada, showed that a strange sequence of numbers were found on the walls of pyramids in Egypt, in ruins of Macchu Picchu and on the rocks of Stonehenge. Intrigued by the apparent coincidence, the researchers contacted the Department of Mathematics to decipher what was special about that sequence or numbers.\\n\\n                    The discovery was stunning. All numbers were generated by matrices of Dinostratus. Dinostratus was a famous greek mathematician who lived from 390 to 320 BC and had worked in important geometry problems like squaring the circle. Dinostratus studied matrices M of size 3 x 3 formed by nine distinct integers with the property that for every position (i, j), i = 1 ,..., 3, j = 1 ,..., 3 of matrix, the element Mi,j is a multiple of its neighbors Mi-1,j, Mi-1,j-1 and Mi,j-1 (if they exist). In his honor, we say that N is a Dinostratus number if exist a matrix M with the property above such that M3,3 = N.\\n\\n                    See an example for N = 36.\\n\\n                    \\n\\n                    The relationship between the Dinostratus numbers, the pyramids of Egypt, the stones of the Stonehenge and  the ruins of Machu Picchu still remains a great mystery. Even though, researchers in Alberta are willing to study these magic numbers. Your task is to make a program that receives an integer N and checks whether this is a Dinostratus number.\",\n    \"id\": 2133,\n    \"input\": \"The input consists of several instances. Each instance is given by a line containing an integer N (1 \\u2264 N \\u2264 1048576). The input ends with end of file.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Dinostratus Numbers\",\n    \"output\": \"For each instance, you must print an identifier Instancia K (which means: Instance K), where K is the number of the current instance. On the next line print sim (which means: yes) if N is a Dinostratus number otherwise print nao (which means: no).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Professor Wallywow, from British Columbia University, is really worried with the falling of students attention level. He already tried most of worldwide know techniques to stimulate the students to pay more attention to the classes and to do the tasks he gives: he gave good grades to the more participatives students, offered chocolates, took his karaoke and song in the classes, etc. As this actions dind't increased the attendance of the students (the karaoke ideia was very unhappy... the second class with karaoke had only one student and he had hearing problems) he had a brilliant ideia: start a competition between the students.\\n\\n                    Professor Wallywow gave a set of problems to the students resolve in a moth. In the end of the month, the students sent the number of problems resolved. The promisse of the brilliant professor was to flunk the student in the last place of the competition. The students were ordered by the number of problems resolved, with draws resolved with the alphabetical order of the names (there wasn't namesake in the class). That made the students with the names begging with the last letters of the alphabet worked hard in the tasks and didn't shared theirs solutions with theirs colleages (especially those who names began with previous letters). Your task in this problem is to write a program that reads the results of the Professor Wallywow students and writes the name of the unfortunate student who failed.\\n\\n                    Any similarity between Professor Wallywow and Professor Carlinhos is purely coincidental.\",\n    \"id\": 2134,\n    \"input\": \"The input is composed by many instances. The first line of each instance have one integer N (1 \\u2264 N \\u2264 100) defining the number of students in the competition. Each of the following N lines have the name of the student and the number of solved problems. The name is a sequence of letters [a-z] with the maximum size of 20 letters and each person solves 0 to 10 problems.\\n\\n                    The input finish with an end-of-file.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Who Will Fail?\",\n    \"output\": \"For each instance, you must print an identifier \\\"Instancia K\\\", where K is the number of the actual instance. In the following line print the name of the student who failed.\\n\\n                    After each instance print a blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By XI Maratona de Programa\\u00e7\\u00e3o IME-USP, 2007  Brasil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The teacher Cris became known as a machiavellian person in your institution. For those not aware of the situation, the teacher required students to form a queue in lexicographical order (by name) with at most k permutations. This meant that many students do not even enter the room to take the test. However, this selective she resolved to redeem himself against students, and decided to apply a little trouble retrieval.\\n\\n                    Your task, even if not disapproved, is given a sequence of n integers a1, a2, ..., an. Where -30 \\u2264 aj \\u2264 30 for j = 1, ..., n, print, if there is an integer ak such that  . If more than an integer that satisfies this condition, print the first in the sequence.\\n\\n                    Note from teacher: \\\"Boys, remember that the sum of any nonzero number is not zero! Okay?\\\"\",\n    \"id\": 2135,\n    \"input\": \"The entrance is composed of several instances. The first line of each instance consists of an integer; n;(1 \\u2264 n \\u2264100) indicating the number of integers in the following line should to be processed. The entry ends with end of file.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Retrieval\",\n    \"output\": \"For each instance, you must print an identifier \\\"Instancia k\\\", where k is the number of the current instance starting with 1. On the next line print the integer that satisfies the restriction described above. If no such integer exists print \\\"nao achei\\\".\\n                    \\n                    After each instance print a blank line.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tEvery end of year there is a party in Fantastic Education Institution (FEI). Early in July, the registration is open to take part in it. At registration, the user can choose whether to be \\\"O Amigo do Habay\\\" (The Friend of Habay) in the party or not. The most logical choice would be Yes, because it is a privilege to be The Friend of Habay, since he is the coolest person in FEI. However, there are some people who definitely don't want to be The Friend of Habay, and for unknown reasons.\\n\\nOnly one will be chosen. As a result, many students who chose the option Yes registered several times to increase their chance of being The Friend of Habay. The party organizer hired you to organize the website's registration, since there is a registration spam going on. The criteria to be the chosen one is the number of letters of the first name, and if there is more than one name with the same number of letters, wins the one who first registered. The final organization of the registered users should follow the order of choice (Yes or No), while respecting the alphabetical order.\\n\\nNote: No one who chose the option No registered more than once.\\n\\t\\t\\t\\t\",\n    \"id\": 2136,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. Each line consists of the user's first name (no spaces), followed by the option YES (if the user wants to be O Amigo do Habay, i.e., The Friend of Habay) or NO (if the user doesn't). Read input until the user enters \\\"FIM\\\" (without quotes).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Friends of Habay\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the registered users in order of choice, respecting the alphabetical order, then print the winner's name. Print a blank line between the list of registered users and the winner's name.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tIn a quiet country town, Mr. Severino has decided to set up his own library, as he collects several books since his youth. He knows nothing about programming, so he asked his grandson to make a program that registers and sorts his books by their code. However, his grandson is still in elementary school, and since he knows very little about programming, he ended up making a program that only registers the books, but doesn't sort them.\\n\\nThereby, Severino has turned to you, because he knows about your programming skills. Your task is simple: sort the books by their code.\\n\\t\\t\\t\\t\",\n    \"id\": 2137,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 1000). The subsequent N lines will have the books' code, which are always in the form \\\"xxxx\\\", that is, there will be no registration '1', for example, but \\\"0001\\\". Read input until EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"The Library of Mr. Severino\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the registration of the books' code sorted. There's no newline between the test cases.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIn Nlogonia, several programmers participate in a cryptography competition named \\\"Decrypt it!\\\", in which the one who decrypt more messages wins.\\n\\nIn the middle of the competition, you notice that to continue and decrypt a message, you must solve the following challenge: find the most frequent digit of a number with up to 1001 digits.\\n\\t\\t\\t\\t\",\n    \"id\": 2138,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several lines, containing an integer N (1 \\u2264 N \\u2264 101000). Read input until EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Most Frequent Digit\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the most frequent digit of the given number. If there's more than one, print the greatest one among them.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tPedrinho is a boy who loves family parties, especially Christmas, when he wins gifts from his parents and grandparents. This year, his father promised him a PS4, but only if Pedrinho could solve some challenges throughout the year, one of them, writing a program that calculates how many days are left until Christmas.\\n\\nHowever, Pedrinho is only 9 years old and knows nothing about programming, but he knows that you, his cousin, mess with \\\"computer stuff\\\" and thus, he asked you to write the program for him. Not only that, but he promised to let you play every weekend and for how long you would like to.\\n\\t\\t\\t\\t\",\n    \"id\": 2139,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each line contains the month and the day of the year 2016 (leap year). Read input until EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Pedrinho's Christmas\",\n    \"output\": \"\\t\\t\\t\\t\\tIf it's Christmas, print \\\"E natal!\\\"; if it's Christmas Eve, print \\\"E vespera de natal!\\\"; if it has already passed, print \\\"Ja passou!\\\". Otherwise, print \\\"Faltam X dias para o natal!\\\", being X the number of days left until Christmas.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tGilberto is a famous sfiha vendor. However, although everyone likes his sfihas, he can only give the change with two different bills, i.e., it's not always possible to get the right change. In order to make Gil's life easier, write a program for him to check whether it's possible to give the exact change using two different bills.\\n\\nAvailable bills: 2, 5, 10, 20, 50 and 100.\\n\\t\\t\\t\\t\",\n    \"id\": 2140,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains an integer N representing the buy price and then an integer M representing the price paid by the costumer (N < M \\u2264 104). Read input until N = M = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Two Bills\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint \\\"possible\\\" if it's possible to give the exact change or \\\"impossible\\\" if it's not.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYou, fan of \\\"The True Goddess Reincarnation\\\" video game franchise, were hired by the developer company ATULS to help make a simplified version of the video game Personality 4, spin-off of this franchise. You'll be responsible for implementing the battle system. The following table contains the available skills and their features:\\n\\n\\n\\t.p4s {\\n\\t\\tborder:1px solid #C0C0C0;\\n\\t\\tborder-collapse:collapse;\\n\\t\\tpadding:5px;\\n\\t\\twidth: 100%;\\n\\t}\\n\\t.p4s th {\\n\\t\\tborder:1px solid #C0C0C0;\\n\\t\\tpadding:5px;\\n\\t\\tbackground:#F0F0F0;\\n\\t}\\n\\t.p4s td {\\n\\t\\tborder:1px solid #C0C0C0;\\n\\t\\ttext-align:center;\\n\\t\\tpadding:5px;\\n\\t}\\n\\n\\n\\t\\n\\t\\n\\t\\tSkill\\n\\t\\tType\\n\\t\\tPower\\n\\t\\tHP Cost\\n\\t\\tMP Cost\\n\\t\\tEffect\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\tMightySwing\\n\\t\\tPhysical\\n\\t\\t270\\n\\t\\t14%\\n\\t\\t-\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tGiganticFist\\n\\t\\tPhysical\\n\\t\\t560\\n\\t\\t16%\\n\\t\\t-\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tRainyDeath\\n\\t\\tPhysical\\n\\t\\t350\\n\\t\\t20%\\n\\t\\t-\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tAgilao\\n\\t\\tMagic - Fire\\n\\t\\t200\\n\\t\\t-\\n\\t\\t8\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tAgidyne\\n\\t\\tMagic - Fire\\n\\t\\t320\\n\\t\\t-\\n\\t\\t12\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tBufula\\n\\t\\tMagic - Ice\\n\\t\\t200\\n\\t\\t-\\n\\t\\t8\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tBufudyne\\n\\t\\tMagic - Ice\\n\\t\\t320\\n\\t\\t-\\n\\t\\t12\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tMegidola\\n\\t\\tMagic\\n\\t\\t360\\n\\t\\t-\\n\\t\\t32\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tMegidolaon\\n\\t\\tMagic\\n\\t\\t420\\n\\t\\t-\\n\\t\\t60\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tBlackViper\\n\\t\\tMagic\\n\\t\\t440\\n\\t\\t-\\n\\t\\t64\\n\\t\\t-\\n\\t\\n\\t\\n\\t\\tTarukaja\\n\\t\\tSupport\\n\\t\\t-\\n\\t\\t-\\n\\t\\t12\\n\\t\\tAttacker's current phys attack increases 25% and remains active until he uses phys attack\\n\\t\\n\\t\\n\\t\\tRakukaja\\n\\t\\tSupport\\n\\t\\t-\\n\\t\\t-\\n\\t\\t12\\n\\t\\tAttacker's current defense increases 25% and remains active until he suffers any attack\\n\\t\\n\\t\\n\\t\\tTarunda\\n\\t\\tSupport\\n\\t\\t-\\n\\t\\t-\\n\\t\\t12\\n\\t\\tDefender's current phys attack decreases 25% and remains active until he uses phys attack\\n\\t\\n\\t\\n\\t\\tRakunda\\n\\t\\tSupport\\n\\t\\t-\\n\\t\\t-\\n\\t\\t12\\n\\t\\tDefender's current defense decreases 25% and remains active until he suffers any attack\\n\\t\\n\\t\\n\\n\\nNote: Support skills don't stack and always consume MP, even if it has no effect anymore. For example, if the player uses Rakunda 5 times in a row, the defender's DEF will still be 25% smaller and the MP consumption will have been 60.\\n\\nIn order to test the functionality of this system, you must consider a battle 1 vs. 1. Each battler will have level, HP (health points), MP (magic points) and the stats ATK (physical attack), MAG (magic attack) and DEF (general defense). The damage formula is:\\n\\n\\n\\nAT = Current attacker's attack. If physical attack, replace it with ATK, if magic attack, replace it with MAG.\\nDF = Current defender's defense, that is, the DEF stat.\\nP = Attack's power.\\nDIFF = Difference between the current attacker's level and the current defender's level. This value will not be smaller than -10 neither greater than 10.\\n\\t\\t\\t\\t\",\n    \"id\": 2141,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. The first line contains the name of the battler 1 and the second line, his level (integer: 1 \\u2264 N \\u2264 99), HP, MP (floating point: 1 \\u2264 HP, MP \\u2264 999), ATK, MAG and DEF (floating point: 1 \\u2264 ATK, MAG, DEF \\u2264 40). The third and the fourth line contains the same as the first and the second line, but related to the battler 2. The first one to attack is the battler 1, that is, in the first turn, the battler 1 is the current attacker and the battler 2 is the current defender. In the second turn, the battler 2 is the attacker and the battler 1 is the defender. The same logic applies to the subsequent turns. Read input until the battler X's HP reaches 0 or drops below 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"P4 Simplified\",\n    \"output\": \"\\t\\t\\t\\t\\tAs soon as the battler X's HP reaches 0 or drops below 0, print \\\"X is dead.\\\" then in the next line, the surviving battler's HP, MP, ATK, MAG and DEF.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Vulture Squadron is just sick of trying to catch the pigeon Doodle. As a result, Dick Dastardly has elaborated an infallible hunting plan, at least in his thoughts.\\n\\n\\n\\nEvery time they activate the speed turbo in their flying machines, they can reach the pigeon by flying a distance greater than what they have already flown and they can finally catch it when they fly half the distance of where they already are.\\n\\nHowever, if the pigeon flies out of the squadron's action area and, as a result of that, doesn't get caught, Dick Dastardly gets angry and mumbles: \\\"Raios! Raios Duplos! Raios Triplos\\\", which means \\\"Drat! Double Drat! Triple Drat!\\\".\\n\\t\\t\\t\\t\",\n    \"id\": 2142,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case contains the squadron's action area (25 \\u2264 A < 106), that is, always a perfect square, then the moment in which the speed turbo is activated. Read input until EOF.\\n\\nThe pigeon's flight and the squadron's flight are spiral and always start from the central element, which is the number 1.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Stop the Pigeon!\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput the pigeon route. The symbol '*' denotes the moment that the pigeon is reached and the symbol '!' denotes the moment that it is captured. If it gets out of the squadron's action area, print: \\\"Raios! Raios Duplos! Raios Triplos!\\\". There's no blank space only after the last character of the last row of the matrix, which should be justified.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tEvery year after the contest that takes place in Taxiland, contestants and coaches go to the famous and renowned restaurant Radar. However, the waiters (always very kind and polite) get overwhelmed due to the amount of people, and therefore, end up taking a while to serve them.\\r\\n\\r\\nContestants or coaches who sit at the ends are the lucky ones, because they order only once and are served right away, but the others must always order twice, because the waiters (always very kind and polite) are careless and easily forget the orders. Besides, there's a superstition going on among the contestants and coaches that if there's not an even amount of people who don't sit at the ends, none of the university's teams will win the next contest.\\r\\n\\r\\nSo your task is to determine the sum of the number of of orders of each one to know if it's worth going to Radar. But whatever the result is, remember: it's always worth going to Radar!\\n\\t\\t\\t\\t\",\n    \"id\": 2143,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of the integer T (1 \\u2264 T \\u2264 100) indicating the number of test cases and then, T integers N (3 \\u2264 N \\u2264 104) indicating the number of people. The table is rectangular and there will be at least and at most one person at one end, i.e., if an end is empty, the other must be occupied, otherwise, the two ends must be occupied, but the number of people that are not at the ends must always be even. Read input until T = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"The Return of Radar\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the sum of the number of orders of each person. There's no newline between the test cases.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBemBem is a famous bodybuilder. He's always seeking the perfect perfomance in his workouts in the gym to compete with his rivals. His friend Frenco assists him the best way possible, helping him seek the trapezius descendens and holding him from bringing down Ibirapuera Park's trees. Nevertheless, BemBem called you to help him in a specific task: to determine his 1RM (one-repetition maximum) average. To do this, you can use the following formula:\\n\\n\\n\\nW = Weight to be lifted.\\nR = Number of repetitions.\\n\\nHowever, one of BemBem's arm is weaker than the other, which makes him lift less weight with it, and that's why he asked for your help, claiming that \\\"the crazy one is sick\\\". Help him and become a codebuilder!\\n\\t\\t\\t\\t\",\n    \"id\": 2144,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains the integers W1 (weight lifted by his left arm: 1 \\u2264 W1 \\u2264 60), W2 (weight lifted by his right arm: 1 \\u2264 W2 \\u2264 100) and R (number of repetitions: 1 \\u2264 R \\u2264 12). Read input until W1 = W2 = R = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Bodybuilder\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the catch phrase that corresponds to his 1RM average (M - floating point) according to the following table:\\n\\n\\n\\nIf the average of all test cases is greater than 40, print a blank line, then print \\\"Aqui nois constroi fibra rapaz! Nao e agua com musculo!\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Joao Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tA natural number loves another number if the sum of its divisors is a divisor of the other number. For example, 9 loves 12, because the sum of the divisors of 9 is 4, which is a divisor of 12. However, 12 doesn't love 9, because 16 (sum of the divisors of 12) is not a divisor of 9. In this case, 9 loves 12 and is unrequited, which makes it a 'friendzoned' number.\\n\\nNevertheless, there are cases in which the love is requited: when the sum of the divisors of a number is equal to or a divisor of the other number and vice versa. On the other hand, an almost requited love occurs when the sum of the divisors of a number is equal to the sum of the divisors of the other number.\\n\\u00a0\\n\\t\\t\\t\\t\",\n    \"id\": 2145,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case consists of two integers N and M (2 \\u2264 N, M \\u2264 109), being N and M different numbers. Read input until N = M = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"The Love Life of the Numbers\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the connection between the given numbers, according to the conditions below:\\n\\n1 - If the love is requited, print \\\"Friends and lovers <3\\\";\\n2 - If the love is almost requited, print \\\"Almost lovers!\\\";\\n3 - If the love is unrequited, print \\\"X friendzoned Y!\\\", in which the sum of the divisors of X is different from the sum of the divisors of Y and X is a multiple of the sum of the divisors of Y (Y loves X) but Y is not a multiple of the sum of the divisors of X (X doesn't love Y);\\n4 - If there's no connection, that is, the sum of the divisors of X is different from the sum of the divisors of Y and X is not a multiple of the sum of the divisors of Y and Y is not a multiple of the sum of the divisors of X, print \\\"No connection.\\\".\\n\\nNote: In this problem, the sum of the divisors doesn't include the number itself, and in the cases in which the love is requited and also almost requited, prevails the requited love.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tMr. Amn\\u00e9sio had great difficulty in keeping passwords. To remind them, he always wore numbers, and writing on pieces of paper, which also lost easily, causing it needed to change the password every time this happened. Tired, he thought in a more practical way: put on paper the next number of password, then he always used the same account to remember the password based on the number written on paper. But he also forgot the formula, therefore, asked you to write a program that, given the number of the paper, enter the corresponding password. Write a program that, given a number, enter their password.\\n\\t\\t\\t\\t\",\n    \"id\": 2146,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry will have many test cases. Each test case will have a number N, representing the number written on paper (1001 \\u2264 N \\u2264 9999). The entry ends with the end of the file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Password\",\n    \"output\": \"For each test case, print the corresponding password. In all cases, the formula will be the same in the examples below.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tOne day, the brothers Little Chit\\u00e3o\\u00a0and Xor Or Oh, great\\u00a0typists, made \\u200b\\u200ba challenge to see who was the best in typing. For this, they obtained a computer that does not process keystrokes, ie, if it is to enter the same letter twice in a row, to press the button twice, as, press for longer, no use. They also measured the time down a key, which was exactly 1/100\\u00a0second. The challenge would be who typed the word \\\"Galopeira\\\" consisting of letters and more, but both were very good, and arrived at a point that it was not possible to count how many letters had been typed. Then asked his help to write a program that checks the typed word and see how much time was spent typing.\\n\\nWrite a program that, given a typed word, tell how much time was spent to be entered.\\n\\t\\t\\t\\t\",\n    \"id\": 2147,\n    \"input\": \"\\t\\t\\t\\t\\tAn integer C will be informed, which is the amount of test cases. Each case has a word of at least 9 and at most 10,000 letters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Galopeira\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print a T number, which is the time spent, in seconds, to enter the word of their test case, with precision of\\u00a0two decimal digits.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tEvery Sunday, a group of friends gathered in a park bench to talk. In addition, they played something called \\\"dadinho\\\" than in other regions, is called \\\"zezinho\\\". Each player started with a given and a hunch, threw it on the bench, and hit\\u00a0the result, would take over a given. Each round, the process was repeated with the guess the result of the sum of the dice\\u00a0thrown\\u00a0on the seat. Who hits, would take other dice. The game ends when a player hits a guess after 13 dice\\u00a0at hand. Consider that all data used in the game are honest and have six faces, numbered from 1 to 6. But as increasing the amount of data, was more difficult to hit the shot. Thus, they asked you to make a program which, given a sum of guess, and an amount of data, calculate the probability of hitting such a guess.\\n\\t\\t\\t\\t\\t\\n\\n\\nWrite a program that - given an integer, representing the sum of guess, and another integer, the amount of data to be played - calculate the probability guess the hit.\\n\\t\\t\\t\\t\",\n    \"id\": 2148,\n    \"input\": \"\\t\\t\\t\\t\\tThe first value being read is an integer C, indicating the number of test cases. Each test case begins with two integers S and D ( 1 \\u2264 S \\u2264 80, 1 \\u2264 D \\u2264 13 ), indicating the sum of guess and the amount of data.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Dice Seat\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print a line containing a value, double precision, with 15 decimal digits, informing the probability of hitting the tip of the corresponding round.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Will Bonati live in the city of Belo Air, along with the family of his uncle, Phill Bonati . Will usually does some things that his uncle did not like, such as, for example, listen to music at high volume. One day, Phill poses a challenge to his nephew. He would spend the first numbers of a sequence he created. If Will could find the next number in this sequence, his uncle would have to put up with his music, with high volume, and still make a soup for them. If not discovered, Will would have to stop listening to such songs, leaving the quieter uncle. The first numbers of this sequence are below. Will asked for your help to write a program that can identify the next number in this sequence .\\n\\n0 \\u00a0 \\u00a0 \\u00a0 1 \\u00a0 \\u00a0 \\u00a0 1 \\u00a0 \\u00a0 \\u00a0 1 \\u00a0 \\u00a0 \\u00a0 2 \\u00a0 \\u00a0 \\u00a0 2 \\u00a0 \\u00a0 \\u00a0 4 \\u00a0 \\u00a0 \\u00a0 8 \\u00a0 \\u00a0 \\u00a0 12\\n\\nWrite a program that, given an integer,\\u00a0tell what is the value corresponding to this position in the proposed sequence.\\n\\t\\t\\t\\t\",\n    \"id\": 2149,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. Each test case starts with an integer N ( 1 \\u2264 N \\u2264 17), indicating the position requested in sequence. The entry ends with end of file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"The Uncle Phill Bonati's Sequence\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the amount corresponding to requested position in the sequence.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tSince the Infinite Improbability Drive, many do not question about life on other planets, and deepen in the most unlikely questions, as, for example, is that beings from other planets using the same characters we write to? And if this is true, they will use the same vowels like us? With this in mind, many scientists have designed various types of alien alphabets, using our alphabet letters, and the digits 0 to 9, with their respective vowels. On this basis, they are asking for help to identify vowels in alien alphabets and make counts about.\\n\\nWrite a program that, given a sequence of vowels in a given alien alphabet, to count, in a text written with the same alphabet, how many alien vowels the text has.\\n\\t\\t\\t\\t\",\n    \"id\": 2150,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. Each test case is formed by two lines. The first line informs a word formed by all letters of a particular alien planet. The second line contains a phrase made \\u200b\\u200bup of letters of the same alphabet. The entry ends with end of file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Alien Vowels\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the amount of corresponding alien vowels.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tOne day, a group of scientists decided to calculate the power of destruction about the punch of Superhero Rulk, from the Programmers. They found that the punch itself affect any wall, from the smallest to the giants. Thus able to synthesize this effect as follows: They turned the walls into a MxN matrix in its present state of destruction by setting integer values \\u200b\\u200bto each coordinate of the wall, and 0 to less destroyed, going up to 100, more destroyed. In addition , they determined what the exact coordinates of the punch. They found that the punch coordinate value increase by 10 points in a state of destruction, becoming more fragile; and the adjacent coordinates to this point would increase by 9 points; adjacent to these coordinates increase by 8 points; and so on. And when it was 1 point , the rest of the wall also increase at one point, affecting the entire wall.\\n\\t\\t\\t\\t\",\n    \"id\": 2151,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains an integer C ( 1 \\u2264 C \\u2264 100 ) , indicating the number of test cases. This line is followed by the test cases. Each case is described by four integers M, N , X and Y ( 1 \\u2264 X \\u2264 M \\u2264 100 and 1 \\u2264 Y \\u2264 N \\u2264 100 ) representing the number of lines wall and columns, and coordinates where the punch was given away. Then follow M rows with N integers Z ( 1 \\u2264 Z \\u2264 90 ), separated by a space, representing the original values \\u200b\\u200bof each wall block.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Rulk's Punch\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, the output should appear the word Parede, followed by a space, the case number and two points. From the following line should show the wall formed by M rows and N columns, separated by a space, describing how was the wall after the punch.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tOne day, the great hero Chapolout helped a scientist who has created many inventions. One of these inventions is a system that opens the door secret laboratory. The system consists of removing a side door of the candlestick candle, that it opens, and to put the candle back to the chandelier, the door closes. But Chapolout found that the sail was just a pretend. In fact, the scientist assistant, called Pepe, that opened the lab door, inside. A while later, the system was modified to also run the initial project. A pressure sensor placed below the chandelier candle, so that the removal of the active sail system. This system issues a log report for every time the door opened or closed, but the log is quite confusing. Every record, three whole numbers are registered, and the hour and the minute the event occurred and a value that represents the door opened or closed at the time. Pepe asks for your help to convert the log data more readable data to it.\\n\\nWrite a program that, given a log record, this is converted into more readable texts.\\n\\t\\t\\t\\t\",\n    \"id\": 2152,\n    \"input\": \"The first line contains the number of test cases. Each line of a test case has three integers H, M and O, the time being, the minutes of the occurrence, and the instance itself (zero if the door closed or the door opened).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Pepe, I Already Took the Candle!\",\n    \"output\": \"For each test case, print the time of the occurrence, in due form, followed by a space, a hyphen and a space, and the phrase \\\"A porta abriu!\\\" or \\\"A porta fechou!\\\" as the occurrence recorded.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tThe nutritionist Root Escrevemos is an excellent professional in her area. One day she was interviewed live for a local newspaper. However, she was a little nervous at the time, and in such a situation, her speech is distorted a bit, repeating the end of each word after saying it. To prevent future discomfort, she asks for your help to write a program that omits the repeated part, so that the words are issued as they should be.\\n\\nWrite a program that, given a wrong word, it can be corrected.\\n\\t\\t\\t\\t\",\n    \"id\": 2153,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. Each test case is formed by a word of at most 30 characters of said wrong way. The entry ends with end of file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Sanduicheiche\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the word properly corrected. Note the examples to check the standard, in order to properly fix all cases.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tThe calculation of a derivative of a function in the form xn\\u00a0is\\u00a0defined by:\\n\\nf(x) = xn \\u00a0\\u00a0\\u00a0\\u2192 \\u00a0\\u00a0\\u00a0\\u00a0f(x)\\u2019 = n.xn-1\\n\\nHere's an example:\\n\\nf(x) = 4x3 + 3x2 \\u00a0\\u00a0\\u00a0\\u2192 \\u00a0\\u00a0\\u00a0\\u00a0f(x)\\u2019 = 12x2 + 6x\\n\\nWrite a program that, given a simple polynomial, calculate its derivative.\\n\\t\\t\\t\\t\",\n    \"id\": 2154,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. Each test case is formed by an integer T, which is the number of terms that has the polynomial. In the next line, there is the polynomial itself, formed by T ( 1 \\u2264 T \\u2264 100) terms, each separated by a space, a sum signal and another space, and each containing an integer C ( 2 \\u2264 C \\u2264 100), the letter x and an integer E ( 2 \\u2264 E \\u2264 100 ), and the coefficient C and E the exponent of the term. The entry ends with end of file.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Polynomial Derivative\",\n    \"output\": \"For each test case, print the polynomial with the derivative applied.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tLegend has it that the Icosahedrons lizard are crystalline and can invoke the Lizard Shen Long Int, which has the ability to grant wishes to anyone who can join the seven icosahedrons. The icosahedrons come in sets of seven with each showing the number of stars. These are hard to find because they are scattered around the planet, and deactivates for one year every wish, turning into stone. To have the opportunity to invoke the Lizard, one has to travel around the globe to find them. One day Kogu wins the icosahedron four stars of his grandfather, Hogan. Upon learning of the legend, Kogu decides to go after the other icosahedrons, so you can lose the fear of injection. As technology progressed, it became easier and simple with the invention of his Mulba girlfriend, Radar lizard. But, to gain time, they need to know which of icosahedrons search warrant they must follow, so that traverse the shortest distance possible with your flying cloud.\\n\\n\\n\\nWrite a program that, given the coordinates of icosahedrons, enter the path of shortest distance, leaving his house, capture all icosahedrons and go home, and tell the distance in such a way.\\n\\t\\t\\t\\t\",\n    \"id\": 2155,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line will have an integer value C indicating the number of test cases. For each test case , there will be a line with two integers, X and Y indicating the coordinates of Kogu's home, where is the four-star icosahedron. Then there will be six rows, each with three integers N, XN e YN, representing the N-star icosahedron, and coordinates where is this\\u00a0icosahedron.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Lizard's Icosahedrons\",\n    \"output\": \"\\t\\t\\t\\t\\nFor each test case print the word Caso\\u00a0followed by a space, the case number and colon. On the next line, print the made \\u200b\\u200broute, leaving home and coming there, so that it has obtained the shortest path by separating each place visited by a hyphen and a greater signal, giving an idea of arrow, followed by a colon, a space, and the distance of the total route with five decimal places. If the shortest path has more than one possibility, print the lexicographically smallest way. That is, if you have a route leaving home and going to the icosahedron of a star, and the other going to the two stars, choose to go on a first star, since both paths have the same distance.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tOnce a new game needed to be developed. Here, the players would control Pak-man, in order to eat all the pads that are scattered in a maze while avoiding four ghosts escaping from a prison. In each corner of the playing area are larger inserts that allow Pak-man hunting ghosts, instead of being hunted for a short period of time. In a first stage of the game, without the ghosts and no larger tablets, you were assigned to develop a program that, given a certain scenario, and a series of movements, tell how many tablets have been eaten.\\r\\n\\r\\nWrite a program that, given a scenario and instructions movements, tell how many tablets were eaten in the game.\\n\\t\\t\\t\\t\",\n    \"id\": 2156,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. Each test case begins with three integer values, L (3 \\u2264 L \\u2264 100), C (3 \\u2264 C \\u2264 100) and I (3 \\u2264 I \\u2264 10000), indicating the number of rows and columns of the setting and the amount of instructions. Then have L lines and C columns, informing the scenario, which will only # where is the wall, where * is a tablet, <where is the Pak-man and space, places the Pak-man can move. The next line is I characters, with the Pak-man move instructions, which L, R, U and D indicates the direction which the Pak-man is directed (L-Left, R-Right, U-Up, D-Down) and W means that the Pak-man will move toward a position in which it stands. If he is walking and the desired location for a wall, it goes nowhere. If a tablet, he eats the tablet and where it was gum becomes a free space and it is the place of the tablet. If a space he goes to the desired location. The final entry is three zeros. Detail: Pak-man will always get a new scenario facing right.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"The Adventures of Pak-man\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print an integer value with the amount of tablets.\\r\\n\\r\\n##########\\r\\n\\r\\n#<*******#\\r\\n\\r\\n##########\\r\\n\\r\\nUWWRWW\\r\\n\\r\\nIn this example, the Pak-man turns up , tries to walk two places, but as there is wall, is in the same place. Then turn right and walk two places, eating, with this two tablets.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"Print numbers in sequence is a relatively simple task. But, and when it is a sequence mirror? This is a sequence having a number of start and an end number and all numbers therebetween, including these, are arranged in an increasing sequence without spaces, and then this sequence is designed in inverted form, as a reflection in the mirror. For example, if the sequence is 7 to 12, the result would 789101112211101987\\n\\nWrite a program that, given two integers, print their mirror sequence.\\n\\t\\t\\t\\t\",\n    \"id\": 2157,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has an integer value C indicating the number of test cases. Then each case has two integer values \\u200b\\u200bE and B ( 1 \\u2264 B \\u2264 E \\u2264 12221 ), indicating the start and end of the sequence.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Mirror Sequence\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the respective mirror sequence.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Igor Gomes, UEVA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\t\\tThe year is 1986 in a scientific publication was announced the discovery of a 3D carbon molecule, where the atoms occupy the vertices of a convex polyhedron with pentagonal and hexagonal faces, like a soccer ball.\\n\\n\\n\\nIn honor of Professor Claudio Carvalho, the molecule was named Claudeno. Claudio loves to check the amount of atoms and bonds in a given molecule. Today with the advanced age of the teacher he can not do the calculations \\\"head\\\" and asks you, the caregiver trainee elderly, create a program that can help.\\n\\t\\t\\t\\t\",\n    \"id\": 2158,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry consists of several test cases, each entry is composed of two integers, FP and FH (1 <FP, FH <1015), which represents the amount of pentagonais and hexagonal faces.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Helping Uncle Cl\\u00e1udio\",\n    \"output\": \"\\t\\t\\t\\t\\tShow to each molecule amount of atoms and their connections as shown in the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tSchoenfeld and Rosser published a paper in 1962 describing a minimum and a maximum value to the quantity of prime numbers up to n, for n \\u2265 17. This quantity is represented by the function (n) and the inequality is shown below.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYour task is, given a natural number n, to compute the interval's minimum and maximum values to the approximate number of primes up to n.\\n\\t\\t\\t\\t\",\n    \"id\": 2159,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is a natural number n (17 \\u2264 n \\u2264 109).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Approximate Number of Primes\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is given as two values P and M with 1 decimal place each, such that P < (n) < M according to the given inequality above. These two values have one blank space between them.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tFilling forms is a simple task. But it is necessary to check if the reserved\\u00a0space for data is large enough.\\n\\nYour task is, given a text line, to indicate if it fits in an 80 characters length\\u00a0form.\\n\\t\\t\\t\\t\",\n    \"id\": 2160,\n    \"input\": \"\\t\\t\\t\\t\\tInput is a text line\\u00a0L (1 \\u2264 |L| \\u2264 500).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Name at Form\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is given in a single line. It must be \\\"YES\\\" (without quotes)\\u00a0if the text line L is up to 80 characters\\u00a0long. If L\\u00a0has more than 80 characters, the output must be \\\"NO\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tThe method of periodic continued fractions is one of the many ways to calculate the square root of a natural number. This method uses as denominator a repetition for fractions. This repetition can be done by a fixed number of times.\\n\\nFor example, by repeating 2 times the continued fraction to calculate the square root of 10, we have the following equation.\\n\\n\\n\\nYour task is to calculate the approximate value of square root of 10 given the number N of repetitions.\\n\\t\\t\\t\\t\",\n    \"id\": 2161,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is a natural number N (0 \\u2264 N \\u2264 100) that indicates the quantity of denominator repetitions in the continued fraction.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Square Root of 10\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the approximate value of the square root with 10 decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tProfessor MC realized that at each 100 meter interval there is a peak in the Nlogony landscape. And that at exactly half way of each two peaks there is a valley. That means that at each 50 meters there is a valley or a peak and, alongside the landscape, there is not a peak followed by another peak neither there is a valley followed by another valley.\\n\\n\\t\\t\\t\\t\\tProfessor MC got curious with that pattern and wants to know if this happens again to other landscapes. Your task is, given a landscape, to indicate if it has this pattern.\\n\\t\\t\\t\\t\",\n    \"id\": 2162,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is given in two lines. The first one has the number N of landscape measures (1 < N \\u2264 100). The second line has N integers: the height Hi of each measure (-10000 \\u2264 Hi \\u2264 10000, for all Hi, such that 1 \\u2264 i \\u2264 N). A measure is considered a peak if it is higher than the previous measure. A measure is considered a valley if it is lower than the previous measure.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Peaks and Valleys\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is given in one single line. If the landscape has the same pattern of Nlogony it must be shown the number 1. Otherwise, the number 0 must be shown.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tA long time ago, in a galaxy far, far away...\\n\\nAfter the decline of the Empire, scavengers are spread around the universe looking for a lost lightsaber. Everyone knows that a lightsaber emits an unique wave pattern: 42 surrounded by 7 all around. You have a wave sensor that scans a terrain with N x M cells. Look at the example below for an 4 x 7 terrain with a lightsaber in it (at position (2,4)).\\n\\n\\n\\nYou must write a program that, given an N x M terrain, looks for the lightsaber pattern in it. No scan have more than one lightsaber pattern.\\n\\t\\t\\t\\t\",\n    \"id\": 2163,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input has two positive integers N and M, representing respectively the number of rows and the number of columns scanned in a terrain (3 \\u2264 N, M \\u2264 1000). Each of the next N lines have M integers, describing the values scanned in each cell of the terrain (-100 \\u2264 Tij \\u2264 100, for 1 \\u2264 i \\u2264 N and 1 \\u2264 j \\u2264 M).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Force Awakens\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is a single line with 2 integers X and Y separated by one space. They represent the (X,Y)-coordinate of the lightsaber, if it is found. If the terrain doesn't have a lightsaber pattern, X and Y are both zero.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tBinet's formula is a way to calculate Fibonacci numbers.\\n\\n\\n\\nYour task is, given a natural number n, to compute the value of Fibonacci(n) using the formula above.\\n\\t\\t\\t\\t\",\n    \"id\": 2164,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is a natural number n (0 < n \\u2264 50).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Fast Fibonacci\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the value of Fibonacci(n) with 1 decimal place using the given Binet's formula.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tTwitter microblog is known for restricting its posts at 140 characters. Your task is to check if a text will fit in a tweet.\\n\\t\\t\\t\\t\",\n    \"id\": 2165,\n    \"input\": \"\\t\\t\\t\\t\\tInput is a text line T (1 \\u2264 |T| \\u2264 500).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Twitting\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is given in a single line. It must be \\\"TWEET\\\" (without quotes) if the text line T is up to 140 characters long. If T has more than 140 characters, the output must be \\\"MUTE\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tThe method of periodic continued fractions is one of the many ways to calculate the square root of a natural number. This method uses as denominator a repetition for fractions. This repetition can be done by a fixed number of times.\\n\\nFor example, by repeating 2 times the continued fraction to calculate the square root of 2, we have the following equation.\\n\\n\\n\\nYour task is to calculate the approximate value of square root of 2 given the number N of repetitions.\\n\\t\\t\\t\\t\",\n    \"id\": 2166,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is a natural number N (0 \\u2264 N \\u2264 100) that indicates the quantity of denominator repetitions in the continued fraction.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Square Root of 2\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the approximate value of the square root with 10 decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tEngineer Joe realizes that always happened a speed fall when the measures of an engine speed slope were made at 10 ms time interval. But this fall happened at varying points at each new engine test.\\n\\nJoe got curious with that lack of pattern and wants to know, for each engine test, what is the first point in which this speed fall happens.\\n\\t\\t\\t\\t\",\n    \"id\": 2167,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is an engine test and is given in two lines. The first one has the number N of speed measures (1 < N \\u2264 100). The second line has N integers: the engine RPM (revolutions per minute) Ri of each measure (0 \\u2264 Ri \\u2264 10000, for all Ri, such that 1 \\u2264 i \\u2264 N). A measure is considered a speed fall if it is lower than the previous measure.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Engine Failure\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the measure index where the first speed fall happened in the test. If no speed fall happens the output must be the number zero.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy M.C. Pinto, UNILA  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tAt Twilight the Portland city is full of vampires and werewolves. However, none of them wants to be seen while walking downtown.\\r\\n\\r\\nAt each corner of Portland downtown, one surveillance camera will be installed. A monthly updated map with all working cameras is made available at City Hall website.\\u00a0\\r\\n\\r\\nA block is considered safe if there is at least two working cameras in its four corners. At Portland downtown all the blocks are squares with the same size.\\r\\n\\r\\nYour task is, given the working cameras map, to indicate the status of all downtown blocks.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2168,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe first line of input has a positive integer N (1 \\u2264 N \\u2264 100). For the next N+1 lines there are N+1 numbers in each, indicating, for each corner, the presence or absence of a working surveillance camera. The number 1 represents a working camera at that corner, and the number zero represents there is no working camera in that corner.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Twilight at Portland\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tThe output is given in N lines. Each line has N characters, indicating whether the corresponding block is safe or unsafe. If a block is safe, you must print the character S; if it is not safe, print the character U.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Igor Gomes, UEVA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\t\\\"Leonardo Silva Kennedy was just a rookie cop when saw the dark event that happened in 1998 in the town of Raccoon City. A long time has passed and Leonardo finally managed to leave behind the images of that day. Six years later, he is an agent the US secret service, responsible for protecting the presidential family.\\n\\nThe President's daughter is kidnapped in the output of your university by an unknown organization. The only clue is that it would have been seen on a remote island in Europe. Now it's up to Leonardo to rescue her. Little did he know that it meant a new immersion in a nightmare that he believed to be over. \\\"\\n\\n\\n\\nIn a certain part of the game, Leonardo discovers a map of a shed where he should go to find a relic. Through the map he can see how many and what kind of monsters are in place. He has N guns and a Y value of ammunition. Luckily for him, there exists near an arms merchant. Leonardo then asks for your help (the merchant) to tell whether he can, with the amount of bullets and the guns he has, kill monsters or be killed.\\n\\n\\n\\nFollow the weapons that Leonardo has the time and the power of each one:\\n\\n\\n\\nAnd the monsters that may be in the shed:\\n\\n\\n\\nObs: When choosing a gun, Leonardo uses all bullets that it has.\\n\\t\\t\\t\\t\",\n    \"id\": 2169,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases, each case begins with a value QA (1 <= QA <= 7), indicating the amount of weapons. In the following section is read qa values and their respective amounts of ammunition. It is then read one QM value (1 <= QM <= 10), indicating the amount of monsters, and follow QM lines indicating the monster and the amount of each. And finally, it received a value QB (1 <QB <104), indicating the maximum amount of bullets that he can use, because that way he will not leave without bullets.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Help Leonardo!\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print if Leon will or will not complete the mission. Show as the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Igor Gomes, UEVA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tIn an investment project, whose initial capital value is X, yield after a period a Y value you want to know what this project interest rate. You want to know what the internal rate of return on investment, because that way you can check the percentage of interest.\\n\\t\\t\\t\\t\",\n    \"id\": 2170,\n    \"input\": \"\\t\\t\\t\\t\\tThere are several designs to be analyzed, and each project is given the initial capital contribution (1 < X < 1020), and its return (X < Y < 1020).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Taxes of Project\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each project show the amount of interest for each application. Show as the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy \\u00cdcaro Dantas, UFCG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tFink, the fox, very clever, needs to share half to half some food between him and Woody Woodpecker, but he's very hungry and thought in something very sagacious to get out of it, the division will be that way:\\n\\nFirst, he'll put everything under the table and start to share: One for you. One for me. Two for you. One, two for me. Three for you. One, two, three for me... This way, if que initian amount of food was 12, he would finish it with 10 and the Woody Woodpecker with 2. Obs: If Fink can't finish the last division, he cans steal from the Woody Woodpecker.\\n\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2171,\n    \"input\": \"\\t\\t\\t\\t\\tThe input will consist in a serie of lines, each one containing a number of foods N (1 \\u2264 N \\u2264 100000). The end of input is indicated by the number zero (0).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Sharing with Fink\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each input line, you must print how much food was to Fink and Woody Woodpecker at the end of the division, separated by a space.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Nivaldo Carvalho, UNIPE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tProg and Cackto recently started to play a role-playing game called Fortress. In this game, for player's evolve their level they need to defeat monsters, which gives a value of experience (XP) for player.\\n\\nThe producer of the game, Extreme Games, announced that next week will hold the first XP event of this game in which will increase monsters experience in an X value. As Prog and Cackto are at a very high level at which the monsters have a very high amount of experience points, they are having difficulties in calculating the amount of experience points that the monsters will have during the event. You can help them?\\n\\t\\t\\t\\t\",\n    \"id\": 2172,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. Each test case contains two values: X (0 < X \\u2264 3) indicating the increase in value of EXP from monsters and M (10 \\u2264 M \\u2264 232-1) indicating the EXP value of the monster. The entry ends with values X == 0 and M == 0, in which should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Event\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, your program should show a value E, value of new Monster EXP.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Guilherme Silva, ITA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Mayor of Nlogonia is being accused of using paving as slush fund. The investigators suspect that the mayor made a bigger budget than the one used in the paving.\\n\\nIn an official pronouncing, the mayor said: \\\" I've paved the least number of streets that make possible for the citizens to travel through the city only on asphalted roads\\\".\\n\\nThe NL times acquired some documents with information about the streets that could be paved and how much it would cost. This is where you enter, you were hired by NL times and received the documents they have. So you can calculate the greatest value that the politician could have stolen. Remember, you should consider that he said the truth on his speech, or he could prosecute you.\\n\\t\\t\\t\\t\",\n    \"id\": 2173,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of a test case contains two integers N (1 \\u2264N \\u2264104) and M(1 \\u2264M \\u2264105), the number of corners and number of streets respectively. Each of the following M lines has three integers X (1 \\u2264X \\u2264 N), Y(1 \\u2264 Y \\u2264 N) and C(1 \\u2264 C \\u2264 103), indicating that to pave the street from corner X to corner Y costs C.\\n\\nIt's always possible to choose the streets in such a way that the mayor can do his speech without lying.\\n\\nAfter the last case, there is a line with two zeros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Slush Fund\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case you must print a line with an integer the represents how much can the mayor steal and don't lie in his speech.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tSince it was officially released Pomekon in Brazil, Dabriel is trying to realize his biggest dream: Being a Master Pomekon. His goal is to conquer the 151 Pomekons available. He managed to capture many monsters, but in his city appear many repeated Pomekons, causing he to capture several times the same Pomekon.\\n\\nSeeing that his bag is pretty full, Dabriel asked you to do a computer program to inform him how many Pomekons are missing to complete the collection.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2174,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the test case consists of an integer N (1 \\u2264 N \\u2264 10\\u00b3), representing the amount of Pomekons that Dabriel already captured.\\nThe next N lines consists of a string S (1 \\u2264 |S| \\u2264 10\\u00b3) representing the name of each Pomekon. The name of each Pomekon consists only of uppercase and lowercase letters.\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Pomekon Collection\",\n    \"output\": \"\\t\\t\\t\\t\\tYou should print: \\\"Falta(m) X pomekon(s).\\\", where X is the amount Pomekons not captured.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jadson Jos\\u00e9 Monteiro Oliveira, Faculdade de Balsas  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tOtavio, Bruno and Ian are childhood friends, passionate about challenges and water sports. In Olympic times they challenge each other, simulating some competitions such as swimming. The problem is that swimming, for example, they train enough together and sometimes the time difference between them is very short, due to this, in most cases they are hours and hours discussing who won. Now they decided to invest in the development of electronic equipment to be used specifically in swimming, which identifies the time that each swam and displays who was the fastest. You're part of the team that will develop the equipment and your task in the project is to create a program to receive the time of 3 friends and say who was the winner.\\n\\t\\t\\t\\t\",\n    \"id\": 2175,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case consists of a single line containing three numbers, separated by a blank space, O (0 \\u2264 O \\u2264 100), B (0 \\u2264 B \\u2264 100) and I (0 \\u2264 I \\u2264 100), representing respectively the time in seconds of Otavio, Bruno and Ian. Times will have a maximum of 3 decimal places.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"What is the Fastest?\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, your program must print a single line containing the name of the winning competitor, the fastest. If there is a tie and you can not determine a single winner, you should print the word \\\"Empate\\\" (it means tie in Portuguese) without quotes.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tThe popularity of WiFi networks increased the loss rate of data being transferred, as several environment factors can easily compromise the data during traffic. The main goal of URI, Unity of Recovery of Information, is to identify and correct errors in messages being sent through WiFi networks.\\n\\nThe technique used by URI to identify errors is the parity test, which can be described as follows: Be S a message that is going to be sent from one device to another. Before S is sent, an extra bit B is added to the end of the binary representation of S. If S has an even number of bits of value 1, the extra bit B will have value 0. Otherwise, if S has an odd number of bits of value 1, B will have value 1. In this way, after the insertion of the bit B, the message S will have an even number of bits of value 1.\\n\\nWhen the receiver gets the message S he counts how many bits of value 1 the message has. If the quantity is even, it means that the message was transferred succesfully. Otherwise, it means that the message had a modification and is not correct.\\n\\nYour task is to write an algorithm that makes the insertion of the extra bit B in the message S, ensuring that after the insertion the message S has an even number of bits of value 1.\\n\\t\\t\\t\\t\",\n    \"id\": 2176,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case consists of one line containing the message S, which has at least 1 and at most 100 bits.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Parity\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint one line containing the message S with the extra bit B.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Marianne Linhares, Universidade Federal de Campina Grande  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tMaria loves sports and she is very excited about the Olympic Games Rio 2016. She was so excited that se bought a lot of tickets for the games, but unfortunately due to the distance between her house and the competition's arenas, that can be very large, she may not be able to watch all the games.\\n\\n\\t\\t\\t\\t\\tMaria knows you love programming challenges as much as she loves sports, so she asked you to make a program that given the position of the arenas of each game and how much time is left until the match begins, tells which games she will be able to watch if she leaves right now from her current position and go to the arena (she has to get there before the game starts).\\n\\n\\t\\t\\t\\t\\tMaria is at a certain position (x, y) and moves with velocity of 1 meter per minute (despite of the excitement Maria walks slowly so she can pass by the maximum number of pokestops), the distance of the locations, also in meters, is the Euclidian Distance between the positions, and the time left to the beginning of the game is also in minutes.\\n\\t\\t\\t\\t\",\n    \"id\": 2177,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input consists of Maria's position, x and y (0 \\u2264 x, y \\u2264 1000), and the number n (1 \\u2264 n \\u2264 10\\u2076) that represents the number of tickets Maria bought.\\n\\nThe next n lines consits of 3 number, xi, yi, ti, respectly the position x of game i, the position y of game i, and the time left to the beginning of the game i. (0 \\u2264 xi, yi \\u2264 1000 e 1 \\u2264 ti \\u2264 1000000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Rio 2016\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is just one line that contains the sorted indexes of the games Maria will be able to watch. If Maria will not be able to watch any game just print \\\"-1\\\" (without the quotation marks)\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Blue Lagoon is a round pond where several birds live quietly (or not so much). Bino, one facetious boy, wants to capture all the birds that live in the Blue Lagoon. There are P places in the pond where some bird can stay, as illustrated in the figure below for P = 8.\\n\\n\\n\\nEach bird can perform a number of flights, after it, the bird gets too tired to fly again. Bino will start at position 0, and then walk always in a clockwise direction, until capture all the birds.\\n\\nEach bird has an ordered list of places where it prefers to flee if Bino get to where it is. For example, for the first test case, there is only one bird which begins at site 1, when Bino comes, the bird escapes to site 2, when Bino comes, the bird escapes to site 3, and when Bino reaches 3, the bird is tired and the bird is captured.\\n\\nYour task is to find out what the minimum amount of laps in the pond that Bino must take to capture all the birds. In a complete turn, Bino visits all locations, and returns to position 0 (revisiting the position 0).\\n\\nIt is guaranteed that no bird starts at position 0, and also that no bird try to escape to the same place where it is.\\n\\t\\t\\t\\t\",\n    \"id\": 2178,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers A (1 < A \\u2264 103) and P (1 < P \\u2264 109), respectively representing the number of birds and the number of places. Then follow A lines. Each line will start with a integer Ni (1 \\u2264 Ni \\u2264 103) representing the amount of places that the bird will try to escape, then follow Ni integers, representing the list of places where the bird will escape.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Blue Lagoon\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line containing the minimum amount of laps in the pond that Bino must take to capture all the birds.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Daniel Ambort, FRSF  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBatuke is a dog with repetitive behavior that has a particular routine when he goes out for a walk around his neighborhood. The neighborhood is also particular; a N x N matrix that Batuke runs through with a routine in spiral: Batuke starts doing: 1 cell right, one down, then two left, two up, then 3 right, 3 down, then 4 left and 4 ..., and so on...\\n\\t\\t\\t\\t\\tLucas (the owner) takes Batuke by car to the starting cell, and the dog always follows his routine to runs through all the cells in his neighborhood.\\n\\t\\t\\t\\t\\t For example, if the neighborhood has size N=4 , cells are numbered as follows:\\n\\n\\t\\t\\t\\t\\t\\n                    \\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tand the path done by Batuke, starting from cell 1,1 (upper left cell is 0,0) is:\\n\\t\\t\\t\\t\\t\\t\\t6,7,11,10,9,5,1,2,3,4,8,12,16,15,14,13\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tIn this case, his routine makes Batuke to walk 16 cells in total.\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n                    \\n\\n\\t\\t\\t\\t\\tBut Batuke doesn\\u2019t understand about frontiers and he always does his routine (even if he has to walk several cells more outside his neighborhood), to traverse all his neighborhood\\u2019s cells. If the start cell is 2,2; the spiral traversal (only neighborhood\\u2019s cells are shown) is: 11,12,16,15,14,10,6,7,8,13,9,5,1,2,3,4. In this case Batuke walks 24 cells in total.\\n\\t\\t\\t\\t\\tLucas knows you are studying Systems Information Engineering, and he asks you a program to solve this problem: given a neighborhood of N rows x N columns, and a start cell, you have to display the spiral traversal, and the total cells walked.\\n\\t\\t\\t\\t\",\n    \"id\": 2179,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consist in three integer numbers: N (2 < N \\u2264 10 ), F and C. N is the number of rows (and columns) in the neighborhood (cells numbered in 1..NxN, by rows, from up to bottom and left to right). F and C indicate row and column where Batuke starts his traversal.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Batuke\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output are 2 lines: the first is a line containing a list with the cells of the Batuke's neighborhood ordered by the Batuke's traversal, and separated with a blank space. Second line shows the number of total cells walked by Batuke.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tA group of scientists are making new experiences to create a starship that allows a trip to Mars, much faster than todays day. This starship will use two rockets with a new fuel, a lot more efficient than those used until today. But the speed that new rockets can provide to the starship is directly related to the weight of the stored fuel these rockets (in kg) and a curious relation of weight primes. For example, if the total weight of the rocket fuel is 1010 kg, the attained speed (in km/h) will be the sum of the tenth prime number starting from 1010 (including it): 1013 -> 1019 -> 1021 -> 1031 -> 1033 -> 1039 -> 1049 -> 1051 -> 1061 -> 1063, or 10380 km/h.\\n\\nScientists are very intrigued by this existing mathematical relationship and want that you build a program that calculate how much the starship would take to get from Earth to Mars with this new fuel given the weigh of rockets (of course, they are trying to create the biggest possible rockets) and assuming that the distance from earth to mars on the launch day will be 60 million kilometers.\\n\\t\\t\\t\\t\",\n    \"id\": 2180,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains a single integer weight (1000 < weight \\u2264 60000) indicating the maximum weight of fuel (in kg) that can stored by the rockets.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Travel to Mars in Primo Speed\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program must print two lines. The first line contains the velocity acchieved by the starship, followed by text \\\"km/h\\\". The second line contains the estimated time to travel to Mars in hours and days (truncated) with corresponding text messages, like shown below.\\u200b\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leandro Zatesko, UFFS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Uireb Rhom uin Iavas (translating: Eternal Horn of the Autumn), an important company in Valinor, is researching the several target audiences in the blessed kingdom. For URI, a target audience is a non-empty maximal set of elves S such that any two elves taken from S belong to the same age group. By the way, URI considers that two elves belong to the same age group if and only if the difference between their ages does not exceed a determined parameter D. For example, under D = 500, if Aegnor, Beleg and Celeborn are respectively 1300, 500 and 1000 years old, Aegnor and Celeborn are considered to belong to the same age group, as well as Beleg and Celeborn, but not Aegnor and Beleg. Moreover, if the only elves in Valinor were Aegnor, Beleg, Celeborn and Daeron, the latter 700 years old, the two target audiences would be {Aegnor, Celeborn} and {Beleg, Celeborn, Daeron}. Note that the set {Beleg, Celeborn}, although containing two elves of a same age group, is not deemed a target audience because it is not maximal.\\n\\nURI wants to know which is best for the release of a product: focus on a target audience as large as possible, or focus on a target audience perhaps smaller, but of greater purchasing power? Therefore, the information which URI needs to gather are crucial in order for the company to make the right choice!\\n\\t\\t\\t\\t\",\n    \"id\": 2181,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of three lines. The first line consists of two positive integers N and D (N \\u2264 105, D \\u2264 107), which respectively represent the number of elves in Valinor and the parameter that defines the adopted concept of age group. The second line consists of N integers ai (1 \\u2264 i \\u2264 N, 0 \\u2264 ai \\u2264 107), which represent the ages of each one of the elves. At last, the third line consists of N values ci (1 \\u2264 i \\u2264 N, 0.00 \\u2264 ci \\u2264 10000.00), given with exact two places after the decimal point, which represent the corresponding incomes of the elves, following the order in which the elves were given in the previous line.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"URI - Uireb Rhom uin Iavas\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line containing three values, which represent, in this order, the number of target audiences in Valinor, the maximum number of elves in a target audience in Valinor and the maximum sum of the incomes of the elves of a same target audience in Valinor. Print the last value with exact two places after the decimal point.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, INATEL  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tLuciano is a fan of sports, even more when it comes to cycling. Luciano has a bicycle and takes care as if it were his child, avoiding the maximum to walk in bad streets, that is, streets with a lot of holes. Luciano gonna change city and needs your help to find the best district to live in.\\n\\nFor Luciano, the best district is the one where the average number of holes between all paths of the district is the smallest possible. Two houses are in the same district if it is possible to leave from one and reach the other using the existing paths. After deciding which district to live, Luciano chooses the house based on his identifier, he prefers the house with the largest possible identifier.\\n\\nYou will receive a list with N houses available for Luciano live and M paths between these houses. In each of these paths there is an amount of holes. There will never be more than one direct path between two\\u00a0 houses. Each house has an identifier [1, N].\\n\\nIf there is a district with only one house, the amount of holes in this district will be 0, since there is no path.\\n\\nHelp Luciano and tell him the identifier of the house where he should live in.\\n\\t\\t\\t\\t\",\n    \"id\": 2182,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N, M, indicating, respectively, the number of available house and the number of paths between. (1 \\u2264 N \\u2264 104, 0 \\u2264 M \\u2264 105).\\n\\nThen M lines follows, containing three integers X, Y, B, indicating that there is a bidirectional connection between the houses X and Y containing B holes. (1 \\u2264\\u00a0X, Y\\u00a0\\u2264\\u00a0N,\\u00a0X\\u00a0\\u2260\\u00a0Y,\\u00a00 \\u2264\\u00a0B\\u00a0\\u2264 100).\\u00a0\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Luciano and the Bike\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line, the identifier of the house where Luciano should live in.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, INATEL  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tBia is playing a zombie game and she is about to start the final challenge. We are going to model the challenge as a NxN matrix, where Bia's goal is to get out of the room situated at the position [1, 1] and reach the room at the position [N, N]. However, as nothing in this life is so simple, there are rooms that contain zombies, rooms that are locked, and rooms that contain magical items to be caught, and when merged, Bia earns a great power.\\n\\n\\n\\tRoom [1, 1] contains always a character \\u2018I\\u2019 and room [N, N] a character \\u2018F\\u2019, meaning, respectively, the begin and end of the challenge.\\n\\tLocked rooms will be represented by the character \\u2018#\\u2019, meaning that it\\u2019s impossible to pass through them.\\n\\tRoom with an integer D means that there are zombies and, when Bia pass through it, she loses D health points.\\n\\tThe others rooms contain one of the following letters: \\u2018P\\u2019, \\u2018O\\u2019, \\u2018W\\u2019, \\u2018E\\u2019 or \\u2018R\\u2019, meaning the initial of each of the five magic items. When Bia pass through a room with any of these items, she pick it up and keep it in her backpack, and at the exact moment that she collect all of them, Bia becomes immune to the zombies in the next K rooms that she enters. It\\u2019s possible to have only one of each item at the same time in the backpack, and, when used, they will be lost, and may be collected again during the battle.\\n\\n\\nIf Bia collect all the five items at a time that she is still under the effect of an earlier junction, the amount of immune room will not accumulate, it will return to the maximum value of K.\\n\\nYour task is to find out which is the lowest starting amount of health points for Bia, so she can still be able to win the challenge, given that she always choose the best possible path. She wins the challenge if she arrive in the room [N, N] with at least 1 heath point left.\\n\\nIf Bia is standing at the room [X, Y], she can only walk to the room [X+1, Y] or [X, Y+1].\\n\\t\\t\\t\\t\",\n    \"id\": 2183,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N, K, indicating, respectively, the dimension of the matrix and the amount of immune rooms that Bia get when she collect all the five magical items. (2 \\u2264 N \\u2264 100, 1 \\u2264 K \\u2264 10).\\n\\nThen we have N lines that describe the matrix, each one of these lines will contain the information of N rooms, the characters: \\u2018I\\u2019, \\u2018F\\u2019, \\u2018#\\u2019, \\u2018P\\u2019, \\u2018O\\u2019, \\u2018W\\u2019, \\u2018E\\u2019, \\u2018R\\u2019, or an integer D, all described above.\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Final Battle\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line, the smaller initial amount of\\u00a0 health points that Bia needs to be able to overcome the challenge. If it is impossible to reach the final room, print -1.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy D\\u00e2mi Henrique, INATEL  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tPomekon GO has been released and it is already a fever among the people. After several days walking in his town looking for a pattern where the pomekons appear, Geraldinho drew some conclusions and wants to use his programming skills to get out in front in the capture of the pomekons. Geraldinho have mapped his city at various points. Between each pair of points that connect directly, he knows the strength of the pomekons that appears there.\\n\\nNow, Geraldinho wants to expand his pomekon journey all over the world, and for this, he needs your help.\\n\\nThere are Q possible routes in the format [A, B]. It means that you must walk from point A to point B. (Note that there is only one path between any pair of points). Each route can be used only once and is possible to capture only one pomekon per route, since the pobekolas are expensive nowadays. Another important fact is that Geraldinho can visit at most K points in his journey.\\n\\n\\n\\tIf there are two routes that pass through a point P, it will be counted twice.\\n\\tIf there are two routes that goes through the same link, it is possible to capture the pomekon in both walk.\\n\\n\\nGeraldinho wants to maximize the sum of the strength of the pomekons that can capture, help him in this journey!\\n\\t\\t\\t\\t\",\n    \"id\": 2184,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N, K, indicating, respectively, the number of points mapped in the city and the maximum amount of points that Geraldinho can pass. (2 \\u2264 N \\u2264 105, 2 \\u2264 K \\u2264 103).\\n\\nThen follows N-1 lines containing three integers X, Y, F, indicating that there is a bidirectional connection between the point X and Y containing a pomekon with strength of F. (1 \\u2264 X, Y \\u2264 N, X \\u2260 Y, 1 \\u2264 F \\u2264 1000).\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Pomekons\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a single line, the greater sum of the forces of the pomekons captured that Geraldinho can achieve, respecting the given conditions. If he is unable to capture any pomekon, print -1.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tAfter capturing many Pomekons, Dabriel and Guarte decided to create a game with the little monsters and who win the game, will be with them all.\\n\\nThe created game\\u00a0 works as follows: All Pomekons are separated into N stacks, they do not necessarily have the same number of monsters, the player of the round chooses a stack and removes one or more Pomekons. The game ends when there is no monster to be selected, and the player of this round is considered the loser.\\n\\nAs Dabriel is always the first to play and in the later rounds he's winning, Guarte is suspicious that Dabriel discovered a trick of the game, so he proposed a new rule. In the new version of the game, Guarte will select three integers X, Y, and V, and the number of monsters in each stack between X and Y, will have the V amount of Pomekons. Dabriel accepted the proposal, but he asked for your help to tell if he will have chance to win always that there is a change in the stacks. As Dabriel and Duarte are very good in this game, you can assume that both players always play the best possible way.\\n\\t\\t\\t\\t\",\n    \"id\": 2185,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the test case consists of two integers N (1 \\u2264 N \\u2264 10\\u2075) and M (1 \\u2264 M \\u2264 10\\u2075) representing the amount of stacks and the amount of changes that are made, respectively.\\nThe second line consists of N integers vi (1 \\u2264 i \\u2264 N, 0 \\u2264 vi \\u2264 10\\u2074), representing the amount of Pomekons that i stack contains.\\nThe next M lines consist of three integers X, Y, V (1 \\u2264 X \\u2264 Y \\u2264 N, 1 \\u2264 V \\u2264 10\\u2074), describing the changes that Guarte will perform.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Playing with Pomekons\",\n    \"output\": \"\\t\\t\\t\\t\\tFor every change in the cells of the game, you should print \\\"Possivel\\\" if Dabriel have a chance to win, or \\\"Impossivel\\\", otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tAs you may already know, Prant is a very indecisive kid, so it was very difficult for him to choose the name of his dog. After Prant choose the name S to his dog, Bino proposed a challenge. The Bino's challenge consisting of N rounds, and in each round can be performed one of the operations:\\n\\n1 A B C: Returns the number of occurrences of a character C in the range between positions A and B. For example, for S = \\\"abcda\\\" A = 1, B = 5 and C = 'a', the answer is 2.\\n\\n2 A B C: Finds the first and the last occurrence of a character C in the range between positions A and B. For example, for S = \\\"abcda\\\" A = 1, B = 5 and C = 'a', the first occurrence is in position 1, and the latter is in position 5.\\n\\n3 A B: Inverts all letters in the range between positions A and B. For example, for S = \\\"abcd\\\" A = 2 and B = 4, after the operation S = \\\"adcb\\\".\\n\\n4 A C: Adds a character C before the character of position A. For example, for S = \\\"abcd\\\" A = 2 and C = 'z', after the operation S = \\\"azbcd\\\".\\n\\t\\t\\t\\t\",\n    \"id\": 2186,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of two integers L (1 \\u2264 L \\u2264 106) and N (1 \\u2264 N \\u2264 105) representing the number of letters that form initially named S, and the number of rounds respectively. The second line contains a string S, representing the initial name of the Prant's dog. Then follow N lines, representing the N rounds.\\n\\nIt is guaranteed that the string S contains only lowercase letters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Bino, Prant and Indecision\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each operation 1, print a single line containing the amount of C character occurrences in the interval between positions A and B.\\n\\nFor each operation 2, print the first and the last occurrence of the character C in the range between positions A and B. If there is no character in the C range, print -1.\\n\\nAt the end of the N operations, print the resulting string of operations.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2000  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Weblads islands form an independent kingdom in the Pacific seas. How is a new kingdom, the society is greatly influenced by computer. The official currency is the Bit; there are notes of B$50,00 B$10,00 B$5,00 to B$1,00. You have been hired to assist in the programming of the ATMs of a large bank of Weblands Islands.\\n\\nThe ATMs of Weblands Islands operate with all types of available notes, keeping a stock of ballots for each value (B$50,00 B$10,00 B$5,00 to B$1,00). Bank customers use ATMs to make withdrawals from a certain integer bits.\\u00a0\\n\\nYour task is to write a program that, given the Bit value desired by the client, determine the number of each of the notes required for this total value to minimize the amount of delivered bills. For example, if the customer wishes to withdraw B$50,00, simply deliver a fifty-one Bits. If the client wishes to withdraw B$72,00, it is necessary to deliver a note of B$50,00 B$10,00 two, and two B$1,00.\\n\\t\\t\\t\\t\",\n    \"id\": 2187,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed by multiple test sets. Each test set is composed by a single line, that contains a positive integer numberV (0 \\u2264 V \\u2264 10000), that indicates the solicited number by the costumer. The end of the input is indicated by V = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Bits Exchanged\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test set of the input your program must produce three lines in the output. The first line must contain a test set identifier, in the format \\u201cTeste n\\u201d, where n it is numbered from 1. In the second line must appear 4 integer I, J, K e L that represent the result found by your program: I indicates the number of ballots B$50,00, J indicates the number of ballots B$10,00, K indicates the number of ballots B$5,00 e L indicates the number of ballots B$1,00. The third line must be left in blank. The spelling shown in Output Example, below, should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2000   Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe capuchin monkey is a pet restless and noisy, worthy also of disorderly and unashamed adjectives. His head, surmounted by thick black or dark brown coat, similar to a cap, makes its unmistakable appearance. Despite being the most common monkey in the forests of the country, one of his sub-species is seriously endangered: the capuchin monkey yellow breast, which distinguishes itself by yellowing of the chest and the front of the arms.\\n\\nA great effort was made by primatologists to increase the population of capuchin monkeys-of-yellow-breast. It is known that they feed on plants, which consume preferably fruits and sprouts. They feed too many animals, preferably slugs, caterpillars and frogs, and prefer the densest forests. To determine the best place in the country to create a new environmental reserve for capuchin monkeys-of-yellow-breast, the government made a survey of the regions in the country where the preferred conditions of these animals occur: regions of dense forest regions with fruits , regions with many shoots, etc. Help to save the capuchin-monkeys-of-yellow-breast.\\n\\nThe regions suitable for the capuchin monkey-of-yellow-breast were determined as rectangles whose sides are all vertical or horizontal. Your task is to find the ideal place for environmental reserves, defined as the intersection of all the given regions.\\n\\n\\n\\nThe regions were divided so that a region not tangent to any other region. Thus the intersection of any two or regions is a rectangle or is empty.\\n\\t\\t\\t\\t\",\n    \"id\": 2188,\n    \"input\": \"\\t\\t\\t\\t\\tYour program must read multiple test sets. The first line of a test set contains a non-negative integer, N (0 \\u2264 N \\u2264 10000), that indicates the number of regions (the value N = 0 indicates the final of the input). It follows N lines, each one contains four integer numbers X, Y, U e V (-10000 \\u2264 X,Y,U,V \\u2264 10000) that describe a region: the pair X, Y represents the coordinate of the upper left corner and the pair U, V represents the coordinate of the upper right corner and the pair\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Capuchin Monkey\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each input test set your program must produce three lines in the output. The first line should contain a test set identifier in the format \\\"Teste n\\\", where n is numbered from 1. The second line should contain the intersection rectangle coordinates found by your program in the same format used in entry . If the intersection is empty, the second line should contain the word \\\"nenhum\\\". The third line should be left blank. The spelling shown in Output Sample below should be followed strictly.\\u00a0\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2000  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe senior students decided to organize a bazaar to raise funds for the graduation party. The party promised to be a success, because the father of one of the trainees, Theophilus, who owns a computer store, decided to donate a computer to be raffled among those who attend. Students prepared mulled wine stalls, popcorn, candy, rehearsed the gang and put on sale tickets numbered sequentially from 1. The ticket number would serve to draw the computer. It was agreed that Theophilus would decide the draw method; in principle the draw would be, of course, computerized.\\n\\nThe venue for the party was the school gym. The entrance of the participants was the main door, which has a wheel where a person spends at a time. At the entrance, an employee entered in a list in school computer, the ticket number, in order of arrival of the participants. After the input of all participants, Theophilus began working on the computer to prepare the draw. Checking the list of gifts, he noticed a notable feature: there was only one case in the entire list, the participant that had the numbered ticket with i, was the ith person to enter the gym. Theophilus was so delighted by the coincidence that decided that the draw would not be necessary: this person would be the winner of the computer.\\n\\nKnowing the list of participants, in order of arrival, your task is to determine the winning ticket number, knowing that the winner is the only participant who has the ticket number equal to its input position in the party.\\n\\t\\t\\t\\t\",\n    \"id\": 2189,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets. The first line of a test set contains a positive integer N (0 \\u2264 N \\u2264 10000) that indicates the number of partygoers. The next line contains the following, in order of entry, ofN tickets of people who attended the party. The end of input is indicated when N = 0. For each input test set there will be a single winner.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Kermesse\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each input test set your program should produce three lines. The first line identifies the test set, in the form \\\"Teste n\\\", onde n is numbered from 1. The second 5 line should contain the winning ticket number, as determined by your program. The third line should be left blank. The spelling shown in Example output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2000  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tThe caciques of Tutua\\u00e7u region intend to integrate their tribes called the \\\"global village\\\". The first step was the distribution of mobile phones to all shamans. Now, they plan to set up an optical fiber network connecting all tabas. This contract requires that new bites are opened in the woods, through the flora and fauna reserves. Aware of the need to preserve as much as possible the environment, the chiefs commissioned a study of the environmental impact of the project. Can you help them design the fiber optic network?\\n\\n\\t\\t\\t\\t\\tWe will call an optical fiber connection between two tabas a branch network. To enable communication between all tabas is necessary that all of them are connected directly (using a branch network) or indirectly (using more than one branch). The caciques managed the environmental impact information that will cause the construction of branches. Some branches, however, were not considered in the environmental study because their construction is impossible.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYour task is to write a program to determine which branches are to be built, in order to enable communication between all tabas, causing the least possible environmental impact.\\n\\t\\t\\t\\t\",\n    \"id\": 2190,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets. The first line of a test set contains two positive integers N (0 \\u2264 N \\u2264 100) e M (1 \\u2264 M \\u2264 N(N-1)/2) indicating respectively the number of lands and the possible number of network branches. The tabas are numbered from 1 to N. The M following lines contain three positive integers X, Y e Z (1 \\u2264 X,Y,Z \\u2264 100), that indicate that the network branch which connects the taba X to taba Y has environmental impact Z. With data test sets it is always possible to interconnect all tabas. The end of input is indicated when N = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Optical Network\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each entry test set your program should produce a list of the branches of networks that must be built. The list must be preceded by a line that identifies the test set, in the form \\\"Teste n\\\", where n is numbered from 1. The list consists of a sequence of branches to be built, for a branch line. A branch is depicted by a pair of tabas X e Y , with X < Y. The network branches can be listed in any order, but should not be repeated. If there is more than one possible solution, print only one. The end of the list of branches is marked with a blank line. The spelling shown in Example output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2000  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tHippolytus is a fanatical fan. Collects streamers, flags, newspaper clippings, figurines of players, shirts and everything else that relates to his favorite team. When he won this one computer at a party, decided to set up a database with the results of every game of his team occurred since its founding in 1911. After the data entered, Hip\\u00f3lito started to get curious about performance statistics of team. For example, he wants to know what was the period when his team has accumulated the highest goal difference. As Hippolytus has the computer very recently, he does not know to program very well, and needs your help.\\n\\nIt's given a list, numbered sequentially from 1, with the results of all team games (first game: 3 x 0, second game: 1 x 2, third match: 0 x 5 ...) is given. Your task is to write a program to determine in which period the team managed to accumulate the highest goal difference. A period is defined by two matches sequence numbers, A and B (A \\u2264 B \\u2264 N). The balance of accumulated goals between A and B is the sum of the goals scored by the team in all matches played between A and B (including the same) minus the sum of the goals scored by the opposing teams in the period. If there is more than one period with the same goal difference, select the longest period (ie the period in which B - is greater). If there is still more than one possible solution, choose any one of them in response.\\n\\t\\t\\t\\t\",\n    \"id\": 2191,\n    \"input\": \"\\t\\t\\t\\t\\tYour program should read multiple test sets. The first line of a test set contains a non-negative integer, N (0 \\u2264 N \\u2264 10000), that indicates the number of matches played by the team (the value N = 0 indicates the end of the input). It follows N lines, each one containing a pair of non-negative integer numbers X e Y (0 \\u2264 X,Y \\u2264 50) representing the result of the match: X are the goals for and Y the goals against the team of Hippolytus. The matches are numbered sequentially from 1, in the order they appear in the entry.\\u00a0\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Goal Difference\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each entry test set your program should produce three lines in the output. The first line should contain a test set identifier in the format \\\"Teste\\u00a0n\\u201d, where\\u00a0n\\u00a0is numbered from 1. The second line must contain a pair of integers\\u00a0I\\u00a0e\\u00a0J\\u00a0which respectively indicate the first and last matches of the best period, as determined by your program, except when the goal difference of the best period is less than or equal to zero; in this case the second line should contain the word \\\"nenhum\\\". The third line should be left blank. The spelling shown in Example output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor ICPC 2011 World Finals  United States\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Industrial Computer Processor Company offers very fast, special purpose processing units tailored to customer needs. Processors of the a-C-m family (such as the 1-C-2 and the 5-C-3) have an instruction set with only two different operations:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tA add a\\n\\t\\t\\t\\t\\t\\tM multiply by m\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tThe processor receives an integer, executes a sequence of A and M operations (the program) that modifies the input, and outputs the result. For example, the 1-C-2 processor executing the program AAAM with the input 2 yields the output 10 (the computation is 2 \\u2192 3 \\u2192 4 \\u2192 5 \\u2192 10), while the 5-C-3 processor yields 51 with the same program and input (2 \\u2192 7 \\u2192 12 \\u2192 17 \\u2192 51).\\n\\n\\t\\t\\t\\t\\tYou are an a-C-m programmer assigned to a top secret project. This means that you have not been told the precise computation your program should perform. But you are given particular values p, q, r, and s and the following conditions:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tThe input is guaranteed to be a number between p and q.\\n\\t\\t\\t\\t\\t\\tThe output must be some number between r and s.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tGiven an a-C-m processor and the numbers p, q, r, and s, your job is to construct the shortest a-C-m program which, for every input x such that p \\u2264 x \\u2264 q, yields some output y such that r \\u2264 y \\u2264 s. If there is more than one program of minimum length, choose the one that come first lexicographically, treating each program as a string of As and Ms.\\n\\t\\t\\t\\t\",\n    \"id\": 2192,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case is given by a line with the six integers a, m, p, q, r, and s as described above (1 \\u2264 a, m, p, q, r, s \\u2264 109 , p \\u2264 q and r \\u2264 s).\\n\\n\\t\\t\\t\\t\\tThe last test case is followed by a line with six zeros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"To Add or to Multiply\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by the best program as described above. Display the word \\u201cempty\\u201d if the best program uses no operations. Display the word \\u201cimpossible\\u201d if there is no program meeting the specifications.\\n\\n\\t\\t\\t\\t\\tDisplay the program as a sequence of space-separated strings, alternating between strings of the form \\u201cnA\\u201d and strings of the form \\u201cnM\\u201d, where n > 0. Strings of the former type indicate n consecutive A operations, and strings of the latter type indicate n consecutive M operations.\\n\\n\\t\\t\\t\\t\\tFollow the format of the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2011 World Finals  United States\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tTess L. Ation ran into a little problem last week when she demonstrated the beta version of her new drawing software. On the screen she had an elegant demonstration design that illustrated every feature of her program; it had taken her hours to produce it. She was just putting the finishing touches on it as a group of potential investors entered the room to see the demonstration.\\n\\n\\t\\t\\t\\t\\tThe presentation went well. Near the end, Tess clicked on a control panel button and told her audience, \\u201cThis is the \\u2018snap to grid\\u2019 control. It forces control points, such as vertices, to jump to the nearest grid point. Here, let me show you,\\u201d and she placed three bright red dots on the screen. Each one appeared at the grid point nearest to where she clicked. (\\u201cLuckily all control points in my demo design were already at integer coordinates. But I will have to remember to delete these three red dots before I save my diagram,\\u201d she thought to herself.) \\u201cNow I\\u2019ll step into the next room and get out of your way so you can discuss the system among yourselves and get a closer look at the screen, but please don\\u2019t touch anything, since I haven\\u2019t saved that file yet.\\u201d\\n\\n\\t\\t\\t\\t\\tA few minutes later, the group joined Tess. One of the visitors stepped up to Tess and said, \\u201cI hope you don\\u2019t mind, but I wanted to try it myself. Don\\u2019t worry, I just played with the x-scale and y-scale controls a little bit.\\u201d The next person said, \\u201cSorry if this is a problem, but I really wanted to get a feel for the speed of display, so I just played around with the translation tool.\\u201d And a third person said, \\u201cI couldn\\u2019t resist just one tiny test: I rotated the image just so I could see all of the vertices snap to the nearest grid points after the rotation.\\u201d\\n\\n\\t\\t\\t\\t\\tThe person who played with the rotation tool remembered going first, but the other two could not recall their order. The three remembered only a few details of the changes. The x- and y-scaling factors had been (possibly negative) nonzero integers; the center of scaling was the origin (0, 0). The x- and y-translation amounts had been integers. Rotation had been specified by a point with integer coordinates (x, y) on the perimeter of a square of width 20 centered at the origin (hence, \\u221210 \\u2264 x, y \\u2264 10 and the absolute value of x or y or both was 10). The tool rotated the drawing around the origin such that the positive x-axis would pass through (x, y) afterwards. Snapping took place after this rotation (coordinates with a fractional part of 0.5 were rounded away from zero).\\n\\n\\t\\t\\t\\t\\tAfter they left, Tess looked at her design \\u2013 it was completely changed! She had not yet implemented the \\u201cundo\\u201d feature, and she had not saved the diagram prior to giving the demonstration. However, the three identical red dots were still there (transformed to other integer grid locations, of course), and Tess could remember the integer coordinates where she had originally placed them. Obviously, someone else might have altered the drawing without saying anything to her, but she could write a program to see if it was possible to reconstruct the sequence of alterations. Can you too?\\n\\t\\t\\t\\t\",\n    \"id\": 2193,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case consists of six pairs of integers xi and yi (\\u2212500 \\u2264 xi , yi \\u2264 500 for 1 \\u2264 i \\u2264 6), three pairs per input line. The first three pairs represent the distinct initial locations of the three red dots. The last three pairs represent the distinct final locations of the three dots. The indexing of the pairs in each group of three is not significant: for example, (x1, y1) could have been mapped to any of (x4, y4), (x5, y5) or (x6, y6).\\n\\n\\t\\t\\t\\t\\tThe last test case is followed by a line with six zeros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Affine Mess\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by one of the following three messages:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\u201cequivalent solutions\\u201d to indicate that there are one or more valid transformations, and all of them have the same effect on the whole drawing (no matter what the whole drawing looks like).\\n\\t\\t\\t\\t\\t\\t\\u201cinconsistent solutions\\u201d to indicate that there are several valid transformations, but in general not all of them map the entire drawing in the same way (some drawing is mapped differently by two valid transformations). \\n\\t\\t\\t\\t\\t\\t\\u201cno solution\\u201d to indicate that neither of the first two cases occurs.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tA valid transformation is a combination of rotation, translation and scaling (or rotation, scaling and translation) which satisfies the restrictions described above and maps the initial set of red dots to the final set (occupying all three final locations).\\n\\n\\t\\t\\t\\t\\tFollow the format of the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2011 World Finals  United States\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIn order to understand early civilizations, archaeologists often study texts written in ancient languages. One such language, used in Egypt more than 3000 years ago, is based on characters called hieroglyphs. Figure C.1 shows six hieroglyphs and their names. In this problem, you will write a program to recognize these six characters.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tFigure C.1: Six hieroglyphs\\n\\n\\t\\t\\t\\t\\t\",\n    \"id\": 2194,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases, each of which describes an image containing one or more hieroglyphs chosen from among those shown in Figure C.1. The image is given in the form of a series of horizontal scan lines consisting of black pixels (represented by 1) and white pixels (represented by 0). In the input data, each scan line is encoded in hexadecimal notation. For example, the sequence of eight pixels 10011100 (one black pixel, followed by two white pixels, and so on) would be represented in hexadecimal notation as 9c. Only digits and lowercase letters a through f are used in the hexadecimal encoding. The first line of each test case contains two integers, H and W. H (0 < H \\u2264 200) is the number of scan lines in the image. W (0 < W \\u2264 50) is the number of hexadecimal characters in each line. The next H lines contain the hexadecimal characters of the image, working from top to bottom. Input images conform to the following rules:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tThe image contains only hieroglyphs shown in Figure C.1.\\n\\t\\t\\t\\t\\t\\tEach image contains at least one valid hieroglyph.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tEach black pixel in the image is part of a valid hieroglyph.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tEach hieroglyph consists of a connected set of black pixels and each black pixel has at least one other black pixel on its top, bottom, left, or right side.\\n\\t\\t\\t\\t\\t\\tThe hieroglyphs do not touch and no hieroglyph is inside another hieroglyph. \\u2022 Two black pixels that touch diagonally will always have a common touching black pixel.\\n\\t\\t\\t\\t\\t\\tThe hieroglyphs may be distorted but each has a shape that is topologically equivalent to one of the symbols in Figure C.11.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tThe last test case is followed by a line containing two zeros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Ancient Messages\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by a string containing one character for each hieroglyph recognized in the image, using the following code:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tAnkh: A\\n\\t\\t\\t\\t\\t\\tWedjat: J\\n\\t\\t\\t\\t\\t\\tDjed: D\\n\\t\\t\\t\\t\\t\\tScarab: S\\n\\t\\t\\t\\t\\t\\tWas: W\\n\\t\\t\\t\\t\\t\\tAkhet: K\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tIn each output string, print the codes in alphabetic order. Follow the format of the sample output.\\n\\n\\t\\t\\t\\t\\tThe sample input contains descriptions of test cases shown in Figures C.2 and C.3. Due to space constraints not all of the sample input can be shown on this page.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy ICPC 2011 World Finals  United States\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tA prominent microprocessor company has enlisted your help to lay out some interchangeable components (widgets) on some of their computer chips. Each chip\\u2019s design is an N \\u00d7N square of slots. One slot can hold a single component, and you are to try to fit in as many widgets as possible.\\r\\n\\r\\n\\t\\t\\t\\t\\tModern processor designs are complex, of course. You unfortunately have several restrictions:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\tSome of the slots are disabled.\\r\\n\\t\\t\\t\\t\\t\\tSome of the slots are already occupied by other components and cannot be used for widgets.\\r\\n\\t\\t\\t\\t\\t\\tThere are sibling memory buses connected to the horizontal and vertical edges of the chip and their bandwidth loads need to match. As such, there must be exactly as many components in the first row as in the first column, exactly as many in the second row as in the second column, and so on. Component counts include both the components already specified on the chip and the added widgets.\\r\\n\\t\\t\\t\\t\\t\\tSimilarly, the power supply is connected at the end of each row and column. To avoid hot spots, any given row or column must have no more than A/B of the total components on the chip for a given A and B.\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tA specification for a chip is N lines of N characters, where \\u2018.\\u2019 indicates an open slot, \\u2018/\\u2019 indicates a disabled slot, and \\u2018C\\u2019 indicates a slot already occupied by a component. For example:\\r\\n\\r\\n\\t\\t\\t\\t\\tCC/..\\r\\n\\r\\n\\t\\t\\t\\t\\t././/\\r\\n\\r\\n\\t\\t\\t\\t\\t..C.C\\r\\n\\r\\n\\t\\t\\t\\t\\t/.C..\\r\\n\\r\\n\\t\\t\\t\\t\\t/./C/\\r\\n\\r\\n\\t\\t\\t\\t\\tIf no more than 3/10 of the components may be in any one row or column, the maximum number of widgets that can be added to this 5 \\u00d7 5 chip is 7. A possible arrangement is below, where \\u2018W\\u2019 indicates a widget added in an open slot.\\r\\n\\r\\n\\t\\t\\t\\t\\tCC/W.\\r\\n\\r\\n\\t\\t\\t\\t\\tW/W//\\r\\n\\r\\n\\t\\t\\t\\t\\tW.C.C\\r\\n\\r\\n\\t\\t\\t\\t\\t/.CWW\\r\\n\\r\\n\\t\\t\\t\\t\\t/W/C/\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2195,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input consists of several test cases. Each case starts with a line containing three integers: The size of the chip N (1 \\u2264 N \\u2264 40), and A and B (1 \\u2264 B \\u2264 1000, 0 \\u2264 A \\u2264 B) as described above. Each of the following N lines contains N characters describing the slots, one of \\u2018.\\u2019, \\u2018/\\u2019 or \\u2018C\\u2019, as described above.\\r\\n\\r\\n\\t\\t\\t\\t\\tThe last test case is followed by a line containing three zeros.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Chips Challenge\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each test case, display a single line beginning with the case number. If there is a solution, display the maximum number of widgets that can be added to the chip. Display \\u201cimpossible\\u201d if there is no solution.\\r\\n\\r\\n\\t\\t\\t\\t\\tFollow the format of the sample output.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 15.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor ICPC 2011 World Finals  United States\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIs it just a fad or is it here to stay? You\\u2019re not sure, but the steadily increasing number of coffee shops that are opening in your hometown has certainly become quite a draw. Apparently, people have become so addicted to coffee that apartments that are close to many coffee shops will actually fetch higher rents.\\n\\n\\t\\t\\t\\t\\tThis has come to the attention of a local real-estate company. They are interested in identifying the most valuable locations in the city in terms of their proximity to large numbers of coffee shops. They have given you a map of the city, marked with the locations of coffee shops. Assuming that the average person is willing to walk only a fixed number of blocks for their morning coffee, you have to find the location from which one can reach the largest number of coffee shops. As you are probably aware, your hometown is built on a square grid layout, with blocks aligned on north-south and east-west axes. Since you have to walk along streets, the distance between intersections (a, b) and (c, d) is |a \\u2212 c| + |b \\u2212 d|.\\n\\t\\t\\t\\t\",\n    \"id\": 2196,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case describes a city. The first line of each test case contains four integers dx, dy, n, and q. These are the dimensions of the city grid dx \\u00d7 dy (1 \\u2264 dx, dy \\u2264 1000), the number of coffee shops n (0 \\u2264 n \\u2264 5 \\u00b7 105 ), and the number of queries q (1 \\u2264 q \\u2264 20). Each of the next n lines contains two integers xi and yi (1 \\u2264 xi \\u2264 dx, 1 \\u2264 yi \\u2264 dy); these specify the location of the ith coffee shop. There will be at most one coffee shop per intersection. Each of the next q lines contains a single integer m (0 \\u2264 m \\u2264 106 ), the maximal distance that a person is willing to walk for a cup of coffee.\\n\\n\\t\\t\\t\\t\\tThe last test case is followed by a line containing four zeros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Coffee Central\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case in the input, display its case number. Then display one line per query in the test case. Each line displays the maximum number of coffee shops reachable for the given query distance m followed by the optimal location. For example, the sample output shows that 3 coffee shops are within query distance 1 of the optimal location (3, 4), 4 shops are within query distance 2 of optimal location (2, 2), and 5 shops are within query distance 4 of optimal location (3, 1). If there are multiple optimal locations, pick the location that is furthest south (minimal positive integer y-coordinate). If there is still a tie, pick the location furthest west (minimal positive integer x-coordinate).\\n\\n\\t\\t\\t\\t\\tFollow the format of the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2011 World Finals  United States\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYou are the director of Arbitrarily Complex Machines (ACM for short), a company producing advanced machinery using even more advanced machinery. The old production machinery has broken down, so you need to buy new production machines for the company. Your goal is to make as much money as possible during the restructuring period. During this period you will be able to buy and sell machines and operate them for profit while ACM owns them. Due to space restrictions, ACM can own at most one machine at a time.\\n\\n\\t\\t\\t\\t\\tDuring the restructuring period, there will be several machines for sale. Being an expert in the advanced machines market, you already know the price Pi and the availability day Di for each machines Mi. Note that if you do not buy machine Mi on day Di, then somebody else will buy it and it will not be available later. Needless to say, you cannot buy a machine if ACM has less money than the price of the machine.\\n\\n\\t\\t\\t\\t\\tIf you buy a machine Mi on day Di , then ACM can operate it starting on day Di + 1. Each day that the machine operates, it produces a profit of Gi dollars for the company.\\n\\n\\t\\t\\t\\t\\tYou may decide to sell a machine to reclaim a part of its purchase price any day after you\\u2019ve bought it. Each machine has a resale price Ri for which it may be resold to the market. You cannot operate a machine on the day that you sell it, but you may sell a machine and use the proceeds to buy a new machine on the same day.\\n\\n\\t\\t\\t\\t\\tOnce the restructuring period ends, ACM will sell any machine that it still owns. Your task is to maximize the amount of money that ACM makes during the restructuring.\\n\\t\\t\\t\\t\",\n    \"id\": 2197,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case starts with a line containing three positive integers N, C, and D. N is the number of machines for sale (N \\u2264 105 ), C is the number of dollars with which the company begins the restructuring (C \\u2264 109 ), and D is the number of days that the restructuring lasts (D \\u2264 109 ).\\n\\n\\t\\t\\t\\t\\tEach of the next N lines describes a single machine for sale. Each line contains four integers Di , Pi , Ri and Gi , denoting (respectively) the day on which the machine is for sale, the dollar price for which it may be bought, the dollar price for which it may be resold and the daily profit generated by operating the machine. These numbers satisfy 1 \\u2264 Di \\u2264 D, 1 \\u2264 Ri < Pi \\u2264 109 and 1 \\u2264 Gi \\u2264 109.\\n\\n\\t\\t\\t\\t\\tThe last test case is followed by a line containing three zeros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Machine Works\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by the largest number of dollars that ACM can have at the end of day D + 1.\\n\\n\\t\\t\\t\\t\\tFollow the format of the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2011 World Finals  United States\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJohn Digger is the owner of a large illudium phosdex mine. The mine is made up of a series of tunnels that meet at various large junctions. Unlike some owners, Digger actually cares about the welfare of his workers and has a concern about the layout of the mine. Specifically, he worries that there may a junction which, in case of collapse, will cut off workers in one section of the mine from other workers (illudium phosdex, as you know, is highly unstable). To counter this, he wants to install special escape shafts from the junctions to the surface. He could install one escape shaft at each junction, but Digger doesn\\u2019t care about his workers that much. Instead, he wants to install the minimum number of escape shafts so that if any of the junctions collapses, all the workers who survive the junction collapse will have a path to the surface.\\n\\n\\t\\t\\t\\t\\tWrite a program to calculate the minimum number of escape shafts and the total number of ways in which this minimum number of escape shafts can be installed.\\n\\t\\t\\t\\t\",\n    \"id\": 2199,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. The first line of each case contains a positive integer N (N \\u2264 5\\u00b7104 ) indicating the number of mine tunnels. Following this are N lines each containing two distinct integers s and t, where s and t are junction numbers. Junctions are numbered consecutively starting at 1. Each pair of junctions is joined by at most a single tunnel. Each set of mine tunnels forms one connected unit (that is, you can get from any one junction to any other).\\n\\n\\t\\t\\t\\t\\tThe last test case is followed by a line containing a single zero.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Mining Your Own Business\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by the minimum number of escape shafts needed for the system of mine tunnels and the total number of ways these escape shafts can be installed. You may assume that the result fits in a signed 64-bit integer.\\n\\n\\t\\t\\t\\t\\tFollow the format of the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2011 World Finals  United States\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tDuring an excursion to the desert at the 2011 ACM-ICPC World Finals, you come across an old Egyptian tomb. Unfortunately, opening the tomb turns out to be a bad idea: all of a sudden, what was just a few moments ago an empty desert has now become a desert crawling with grumpy mummies (you would be grumpy too if you were suddenly awakened after a few thousand years of peaceful sleep).2\\n\\n\\t\\t\\t\\t\\tFaced with this murderous mass of mad mummies, your only chance is to run for it and try to escape before they catch you. The question is: how long will it take before a mummy catches you, assuming neither you nor the mummies ever get tired?\\n\\n\\t\\t\\t\\t\\tWe model the desert as a grid of squares. You and the mummies take turns making moves on the grid. You make the first move. In your turns, you can move to any of the eight squares adjacent to your current location, or you can choose to stand still. In the mummies\\u2019 turns, each mummy simply moves to the adjacent square that brings it closest to you (measured by Euclidean distance, assuming that you and all the mummies stand in the centers of their respective squares). It is possible for two mummies to occupy the same square.\\n\\n\\t\\t\\t\\t\\tA time step consists of your move followed by the mummies\\u2019 moves. A mummy catches you if it moves to the square where you are located, or if you move to the square occupied by the mummy. Of course, you try to avoid being caught for as long as possible. After how many time steps will you be caught?\\n\\n\\t\\t\\t\\t\\t \\n\\n\\t\\t\\t\\t\\tFigure I.1: A mummy chase\\n\\n\\t\\t\\t\\t\\tThe figure illustrates what might happen if you are being chased by four mummies. The square labeled H is your initial position, and the squares labeled M are the initial positions of mummies. After four time steps, you are caught by the mummy whose initial position was (3, 4) with respect to your initial position.\\n\\n\\t\\t\\t\\t\\t2Fortunately, after solving this problem, you woke up safe and sound in a hotel room in Florida. The enraged mummies had just been a dream. Or had they?\\n\\t\\t\\t\\t\",\n    \"id\": 2200,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case begins with an integer n (0 \\u2264 n \\u2264 105 ) giving the number of mummies in the desert. The following n lines each contain two integers x and y, indicating that there is initially a mummy at coordinates (x, y) of the desert, where x and y are both bounded by 106 in absolute value. Your starting position is (0, 0), and no mummy starts at this position.\\n\\n\\t\\t\\t\\t\\tThe last test case is followed by a line containing the number \\u22121.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Mummy Madness\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its test case number followed by the maximum number of time steps until you are caught (measured as the total number of turns that you get), or the word \\u201cnever\\u201d if you can avoid capture indefinitely.\\n\\n\\t\\t\\t\\t\\tFollow the format of the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 20.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2011 World Finals  United States\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIt is not too hard to build a pyramid if you have a lot of identical cubes. On a flat foundation you lay, say, 10 \\u00d7 10 cubes in a square. Centered on top of that square you lay a 9 \\u00d7 9 square of cubes. Continuing this way you end up with a single cube, which is the top of the pyramid. The height of such a pyramid equals the length of its base, which in this case is 10. We call this a high pyramid.\\n\\n\\t\\t\\t\\t\\tIf you think that a high pyramid is too steep, you can proceed as follows. On the 10 \\u00d7 10 base square, lay an 8 \\u00d7 8 square, then a 6 \\u00d7 6 square, and so on, ending with a 2 \\u00d7 2 top square (if you start with a base of odd length, you end up with a single cube on top, of course). The height of this pyramid is about half the length of its base. We call this a low pyramid.\\n\\n\\t\\t\\t\\t\\tOnce upon a time (quite a long time ago, actually) there was a pharaoh who inherited a large number of stone cubes from his father. He ordered his architect to use all of these cubes to build a pyramid, not leaving a single one unused. The architect kindly explained that not every number of cubes can form a pyramid. With 10 cubes you can build a low pyramid with base 3. With 5 cubes you can build a high pyramid of base 2. But no pyramid can be built using exactly 7 cubes.\\n\\n\\t\\t\\t\\t\\tThe pharaoh was not amused, but after some thinking he came up with new restrictions.\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tAll cubes must be used.\\n\\t\\t\\t\\t\\t\\tYou may build more than one pyramid, but you must build as few pyramids as possible.\\n\\t\\t\\t\\t\\t\\tAll pyramids must be different.\\n\\t\\t\\t\\t\\t\\tEach pyramid must have a height of at least 2.\\n\\t\\t\\t\\t\\t\\tSatisfying the above, the largest of the pyramids must be as large as possible (i.e., containing the most cubes).\\n\\t\\t\\t\\t\\t\\tSatisfying the above, the next-to-largest pyramid must be as large as possible.\\n\\t\\t\\t\\t\\t\\tAnd so on...\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tDrawing figures and pictures in the sand, it took the architect quite some time to come up with the best solution.\\n\\n\\t\\t\\t\\t\\tWrite a program that determines how to meet the restrictions of the pharaoh, given the number of cubes.\\n\\t\\t\\t\\t\",\n    \"id\": 2201,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases, each one on a single line. A test case is an integer c, where 1 \\u2264 c \\u2264 106 , giving the number of cubes available.\\n\\n\\t\\t\\t\\t\\tThe last test case is followed by a line containing a single zero.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Pyramids\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by the pyramids to be built. The pyramids should be ordered with the largest first. Pyramids are specified by the length of their base followed by an L for low pyramids or an H for high pyramids. If two differenct pyramids have the same number of cubes, list the high pyramid first. Print \\u201cimpossible\\u201d if it is not possible to meet the requirements of the pharaoh.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2011 World Finals  United States\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAllied Chute Manufacturers is a company that builds trash chutes. A trash chute is a hollow tube installed in buildings so that trash dropped in at the top will fall down and be collected in the basement. Designing trash chutes is actually highly nontrivial. Depending on what kind of trash people are expected to drop into them, the trash chute needs to have an appropriate size. And since the cost of manufacturing a trash chute is proportional to its size, the company always would like to build a chute that is as small as possible. Choosing the right size can be tough though.\\n\\n\\t\\t\\t\\t\\tWe will consider a 2-dimensional simplification of the chute design problem. A trash chute points straight down and has a constant width. Objects that will be dropped into the trash chute are modeled as polygons. Before an object is dropped into the chute it can be rotated so as to provide an optimal fit. Once dropped, it will travel on a straight path downwards and will not rotate in flight. The following figure shows how an object is first rotated so it fits into the trash chute.\\n\\n\\t\\t\\t\\t\\t \\n\\n\\t\\t\\t\\t\\tYour task is to compute the smallest chute width that will allow a given polygon to pass through.\\n\\t\\t\\t\\t\",\n    \"id\": 2202,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case starts with a line containing an integer n (3 \\u2264 n \\u2264 100), the number of points in the polygon that models the trash item.\\n\\n\\t\\t\\t\\t\\tThe next n lines then contain pairs of integers xi and yi (0 \\u2264 xi , yi \\u2264 104 ), giving the coordinates of the polygon vertices in order. All points in one test case are guaranteed to be mutually distinct and the polygon sides will never intersect. (Technically, there is one inevitable exception of two neighboring sides sharing their common vertex. Of course, this is not considered an intersection.)\\n\\n\\t\\t\\t\\t\\tThe last test case is followed by a line containing a single zero.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Trash Removal\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by the width of the smallest trash chute through which it can be dropped. Display the minimum width with exactly two digits to the right of the decimal point, rounding up to the nearest multiple of 1/100. Answers within 1/100 of the correct rounded answer will be accepted.\\n\\n\\t\\t\\t\\t\\tFollow the format of the sample output.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 15.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy \\u00cdcaro Dantas, UFCG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tFiddlesticks is a champion of League of Legends, he has as his ultimate ability \\\"CrowStorm\\\", it works as follows:\\n\\nFirst Fiddlesticks chooses a strategic location and promptly he prepares to resurface in one direction within a certain distance, then it is rooted and channels the ultimate by just 1.5 seconds, after that time it resurfaces immediately at the target site with a flock of crows flying in the around and causing much damage.\\n\\nFiddlesticks want your help to find out if in a certain position it is possible to achieve an invader with his ultimate skill.\\n\\nNote: Consider that Fiddlesticks always uses his ultimate exactly in the direction of ivasor and the invader always tries to flee in the opposite direction to Fiddlesticks, at a constant speed.\\n\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2203,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry consists of several lines, each line contains the following integer values: Xf, Yf, Xi, Yi, Vi, R1 e R2(0 \\u2264 Xf, Yf, Xi, Yi, Vi, R1 e R2 \\u2264 100), representing respectively the coordinates of Fiddlesticks, the initial coordinates of the invader, the speed of the invader, the ultimate of casting radius and flight radius of crows. Consider the unit of measurement as the meter.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Crowstorm\",\n    \"output\": \"\\t\\t\\t\\t\\tIn the output you should print for each line the 'Y' character if it is possible to achieve the invasor or 'N' otherwise, both followed by a line break.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Erzinger, Universidade Federal de Itajub\\u00e1  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tWith the games coming, like in any other big event, the public security forces realize many trainings and simulations in order to be ready for anythings. Your friend David, who does'nt feel happy with his Computer Science course - result of his poor programming skills, dream to join one of the public security forces and, when he was studying about those simulations, he found the following problem:\\n\\n\\\"In a given situation, the tatical defense team must find an alarm clock - which simulates a bomb - which will have a screen showing two numbers A and B. To disarm the bomb, the team need to write the Gratest Common Divisor of all numbers from A to B.\\\"\\n\\nNobody knows why someone would simulate a bomb which such requisit, but, David is curious to know which should be the correct numbers to stop the bomb. As you know, he's not good with those 'programming or math stuff' so, he asks your help to find out the answer to the following problem:\\n\\n\\\"Given two integers A and B, print the greates common divisor of all integers in the interval [A, A+1, A+2, ... B]\\\" \\n\\t\\t\\t\\t\",\n    \"id\": 2204,\n    \"input\": \"\\t\\t\\t\\t\\tThe input start with an integer T that represents the number of test cases. Follows T lines, each one with two integers A and B ( 1 <= A <= B <= 10\\u00b9\\u00b0\\u00b0).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Stop The Bomb!\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case your problem should print in a single line, the answer to the problem.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe year is 2112 and humankind has conquered the solar system. The Space Ranger Corps have set up bases on any hunk of rock that is even remotely inhabitable. Your job as a member of the Asteroid Communications Ministry is to make sure that all of the Space Ranger asteroid bases can communicate with one another as cheaply as possible. You could set up direct communication links from each base to every other base, but that would be prohibitively expensive. Instead, you want to set up the minimum number of links so that everyone can send messages to everyone else, potentially relayed by one or more bases. The cost of any link is directly proportional to the distance between the two bases it connects, so this doesn\\u2019t seem that hard of a problem.\\n\\n\\t\\t\\t\\t\\tThere is one small difficulty, however. Asteroids have a tendency to move about, so two bases that are currently very close may not be so in the future. Therefore as time goes on, you must be willing to switch your communication links so that you always have the cheapest relay system in place. Switching these links takes time and money, so you are interested in knowing how many times you will have to perform such a switch.\\n\\n\\t\\t\\t\\t\\tA few assumptions make your task easier. Each asteroid is considered a single point. Asteroids always move linearly with a fixed velocity. No asteroids ever collide with other asteroids. Also, any relay system that becomes optimal at a time t \\u2265 0 will be uniquely optimal for any time s satisfying t < s < t+10\\u22126 . The initial optimal relay system will be unique.\\n\\t\\t\\t\\t\",\n    \"id\": 2205,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case starts with a line containing an integer n (2 \\u2264 n \\u2264 50) indicating the number of asteroid bases. Following this are n lines, each containing six integers x, y, z, vx, vy, vz. The first three specify the initial location of an asteroid (\\u2212150 \\u2264 x, y, z \\u2264 150), and the last three specify the x, y, and z components of that asteroid\\u2019s velocity in space units per time unit (\\u2212100 \\u2264 vx, vy, vz \\u2264 100).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Asteroid Rangers\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display a single line containing the case number and the number of times that the relay system needs to be set up or modified.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 30.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tImagine you are a tourist in Warsaw and have booked a bus tour to see some amazing attraction just outside of town. The bus first drives around town for a while (a long while, since Warsaw is a big city) picking up people at their respective hotels. It then proceeds to the amazing attraction, and after a few hours goes back into the city, again driving to each hotel, this time to drop people off.\\n\\n\\t\\t\\t\\t\\tFor some reason, whenever you do this, your hotel is always the first to be visited for pickup, and the last to be visited for dropoff, meaning that you have to suffer through two not-so-amazing sightseeing tours of all the local hotels. This is clearly not what you want to do (unless for some reason you are really into hotels), so let\\u2019s fix it. We will develop some software to enable the sightseeing company to route its bus tours more fairly\\u2014though it may sometimes mean longer total distance for everyone, but fair is fair, right?\\n\\n\\t\\t\\t\\t\\tFor this problem, there is a starting location (the sightseeing company headquarters), h hotels that need to be visited for pickups and dropoffs, and a destination location (the amazing attraction). We need to find a route that goes from the headquarters, through all the hotels, to the attraction, then back through all the hotels again (possibly in a different order), and finally back to the headquarters. In order to guarantee that none of the tourists (and, in particular, you) are forced to suffer through two full tours of the hotels, we require that every hotel that is visited among the first [h/2] hotels on the way to the attraction is also visited among the first [h/2] hotels on the way back. Subject to these restrictions, we would like to make the complete bus tour as short as possible. Note that these restrictions may force the bus to drive past a hotel without stopping there (this is not considered visiting) and then visit it later, as illustrated in the first sample input.\\n\\t\\t\\t\\t\",\n    \"id\": 2207,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of each test case consists of two integers n and m satisfying 3 \\u2264 n \\u2264 20 and 2 \\u2264 m, where n is the number of locations (hotels, headquarters, attraction) and m is the number of pairs of locations between which the bus can travel.\\n\\n\\t\\t\\t\\t\\tThe n different locations are numbered from 0 to n\\u22121, where 0 is the headquarters, 1 through n\\u22122 are the hotels, and n \\u2212 1 is the attraction. Assume that there is at most one direct connection between any pair of locations and it is possible to travel from any location to any other location (but not necessarily directly).\\n\\n\\t\\t\\t\\t\\tFollowing the first line are m lines, each containing three integers u, v, and t such that 0 \\u2264 u, v \\u2264 n\\u22121, u != v, 1 \\u2264 t \\u2264 3600, indicating that the bus can go directly between locations u and v in t seconds (in either direction).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Bus Tour\",\n    \"output\": \"\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"timelimit\": 20.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Fibonacci word sequence of bit strings is defined as:\\n\\n\\t\\t\\t\\t\\t$$F(n) =\\\\begin{cases}\\n\\t\\t\\t\\t\\t& \\\\text 0 \\\\\\\\ \\n\\t\\t\\t\\t\\t& \\\\text 1 \\\\\\\\ \\n\\t\\t\\t\\t\\t& \\\\text F(n-1)+F(n-2)\\\\\\\\\\n\\t\\t\\t\\t\\t\\\\end{cases} \\\\begin{matrix}\\n\\t\\t\\t\\t\\t\\\\mathbf{if} n = 0 \\\\\\\\ \\n\\t\\t\\t\\t\\t\\\\mathbf{if} n = 1\\\\\\\\ \\n\\t\\t\\t\\t\\t\\\\mathbf{if} n \\\\geqslant 2\\n\\t\\t\\t\\t\\t\\\\end{matrix}$$\\n\\n\\t\\t\\t\\t\\tHere + denotes concatenation of strings. The first few elements are:\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tGiven a bit pattern p and a number n, how often does p occur in F(n)?\\n\\t\\t\\t\\t\",\n    \"id\": 2208,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of each test case contains the integer n (0 \\u2264 n \\u2264 100). The second line contains the bit pattern p. The pattern p is nonempty and has a length of at most 100 000 characters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Fibonacci Words\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by the number of occurrences of the bit pattern p in F(n). Occurrences may overlap. The number of occurrences will be less than 263 .\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tGood morning, agent W-12. Your mission, should you choose to accept it, is as follows.\\n\\n\\t\\t\\t\\t\\tWe are infiltrating the ever so insidious Association of Chaos and Mischief (ACM) in order to take down their command structure. Unfortunately, they appear to be prepared for such an eventuality, and have given their command structure an annoyingly complex design which makes our infiltration quite difficult.\\n\\n\\t\\t\\t\\t\\tThe ACM command structure is divided into several cells. For each pair of cells A and B, either A controls B or B controls A. But this \\u201ccontrol\\u201d relation can be cyclic, so it could happen that A controls B and B controls C and C controls A.\\n\\n\\t\\t\\t\\t\\tWe can send in agents to infiltrate any particular cell, which gives us control over that cell and the cells that it controls, but not any other cells. So in the example above, infiltrating A would give us control over A and B, but not C.\\n\\n\\t\\t\\t\\t\\tFor a successful infiltration of the ACM, we must obtain control over all of its cells, otherwise the cells that are out of our control will discover us and start causing some of their trademark chaos and mischief. As you know, we\\u2019re on a tight spending leash from higher authority these days, so we need to execute this mission as efficiently as possible. Your mission is to figure out the minimum number of cells we need to infiltrate in order to succeed.\\n\\n\\t\\t\\t\\t\\tThis mission briefing will self-destruct in five hours. Good luck!\\n\\t\\t\\t\\t\",\n    \"id\": 2209,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of a test case contains the number n of cells the ACM has (1 \\u2264 n \\u2264 75). Each of the next n lines contains a binary string of length n where the ith character of the jth line is 1 if cell j controls cell i, and 0 otherwise (1 \\u2264 i, j \\u2264 n).\\n\\n\\t\\t\\t\\t\\tThe ith character of the ith line is 0 and for i != j, either the ith character of the jth line is 1 or the jth character of the ith line is 1, but not both.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Infiltration\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by the minimum number m of cells that must be infiltrated to obtain complete control of the ACM. Then display m numbers c1, . . . , cm in any order, indicating the list of cells to infiltrate (cells are numbered from 1 to n). If more than one set of m cells gives complete control, any one will be accepted.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 30.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAdam carries a bunch of keys attached to key rings, some of which may be connected to each other. The rings are common key rings, so a key can be attached to or detached from a ring by sliding along the spiral. In the same way, two rings can be connected or disconnected. Adam wants to give some of the keys to Brenda. Since manipulating the keys and rings is often an annoying task (and also dangerous to one\\u2019s fingernails), Adam is looking for a way to minimize the number of key and ring operations.\\n\\n\\t\\t\\t\\t\\tEvery key attachment, key detachment, ring connection, or ring disconnection is considered one operation. Since manipulating two rings is significantly easier than sliding a key, we first want to minimize the number of keys being detached and attached. Among solutions with the same minimal number of key operations, you need to find the one with the minimal number of ring connections and disconnections.\\n\\n\\t\\t\\t\\t\\tWhen all the operations are complete, Adam and Brenda must each carry one connected group of rings and keys. The only exception is when either of them would have no keys at all\\u2014in such a case, no ring is needed. Each key must be attached to exactly one ring. Some rings (but not keys) may be considered leftovers and may remain disconnected from the two groups.\\n\\n\\t\\t\\t\\t\\tThe left side of the following figure shows an initial configuration consisting of four keys on three rings. Adam wishes to give Brenda the two keys labeled N and R. This can be accomplished by two key operations and one ring operation, resulting in the configuration shown on the right side of the figure.\\n\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\",\n    \"id\": 2210,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case contains one or more lines, each containing a two letter string. Lowercase letters (a - z) represent key rings and uppercase letters (A - Z) represent keys. The two letters on a line specify either a key attached to a ring or two rings connected together. The end of each test case is denoted by a line containing the digit zero.\\n\\n\\t\\t\\t\\t\\tKeys denoted by letters A through M remain with Adam, and keys denoted by letters N through Z are given to Brenda.\\n\\n\\t\\t\\t\\t\\tNo line contains two uppercase letters. No pair of letters are specified more than once in the same test case. Each key is connected to exactly one ring. There are no \\u201ccircles\\u201d in the ring configurations (disconnecting any two rings will increase the number of connected groups). All existing keys and rings are mentioned at least once.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Keys\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display the case number followed by the minimal number of key attach/detach operations and the minimal number of ring connect/disconnect operations.\\n\\n\\t\\t\\t\\t\\tIf there is no way to split the keys as requested, display the case number and the word 'impossible' instead of the two integers.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYou have been hired to construct a system to transport water between two points in an old factory building using some existing components of the old plumbing. The old components consist of pipes and junctions. Junctions are points where pipes may have previously been joined. We say previously joined, because some of the old pipes were damaged and have been removed, effectively leaving open holes in the junctions to which they were connected. If water should enter one of these junctions, it would pour out of an open hole and eventually flood the building\\u2014clearly an undesirable event.\\n\\n\\t\\t\\t\\t\\tYou can remedy this situation by installing new pipes between some of the open holes and installing plugs to close other open holes as necessary. When you install a new pipe connecting two holes (which must be in two different junctions), the two holes are no longer open and water will be able to flow through the new pipe. The cost of installing a new pipe is equal to the distance between the centers of the two junctions the pipe connects. The cost of installing a plug in an open hole is 0.5. You are not concerned about open holes in junctions that will never be reached by water.\\n\\n\\t\\t\\t\\t\\tTwo of the junctions are special. One, called the source, is the point where water will be pumped into the new system. The other, called the destination, is where the water is needed. After any plugs and new pipes have been added to the system, water will be pumped into it at the source with a pressure sufficient to reach a specified height (in the absence of leaks, of course). You are allowed to select the pressure arbitrarily, and are guaranteed that the pressure will not change during the operation of the system. Naturally the pressure must be sufficient to force water up to the heights of both the source and the destination. Your task is simply to find the most inexpensive way of getting water from the source junction to the destination junction without flooding the building.\\n\\n\\t\\t\\t\\t\\tThe figure below corresponds to the first sample input case, where black dots represent open holes, junction 1 is the source, and junction 7 is the destination. (The position of a black dot on its circle has no significance and is used for illustration purposes only.)\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tWater flows through the system according to the laws of physics. If the pressure is sufficient to fill a junction with water, then that junction will remain filled with water. If there are pipes extending horizontally or downward from a junction, then water will also flow through those pipes. Water will also flow upward through pipes connected to a junction up to the height determined by the water pressure. Of course, if the water reaches an open hole in a junction, it will flow through the hole and flood the building.\\n\\n\\t\\t\\t\\t\\tIn the first sample input case, you can connect junctions 1 and 5 at a cost of 3, plug the open holes in junction 2, and set the pressure so that the water flows up to junction 7 only. The water will fill junctions 1, 2, 5, 6 and 7, and will flow no higher. A different (more expensive) solution would be to simply plug all the holes at a total cost of 5, and let the water flow through all the junctions. You cannot solve this case by connecting junctions 1 and 6 and plugging holes in junctions 2 and 5, since junction 6 has no open holes to which a new pipe can be connected.\\n\\n\\t\\t\\t\\t\\tAssume existing pipes and any new pipes do not interfere with each other or with any junctions, except those to which they are connected. That is, even if a straight line from junction A to junction B passes through junction C, any pipe from A to B will not touch C.\\n\\t\\t\\t\\t\",\n    \"id\": 2211,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of each test case contains two integers N and M, where N (2 \\u2264 N \\u2264 400) is the number of junctions in the building (numbered 1 through N) and M (0 \\u2264 M \\u2264 50 000) is the number of existing usable pipes. Each of the next N lines contains four integers xi , yi , zi , and ki satisfying \\u221210 000 \\u2264 xi , yi , zi \\u2264 10 000 and 0 \\u2264 ki \\u2264 400, i = 1, 2, ..., N. The ith line describes junction i: (xi , yi , zi) is the location of the ith junction where the z-axis is the vertical axis; ki indicates the number of open holes in the junction. Each of the next M lines contains two integers aj and bj satisfying 1 \\u2264 aj < bj \\u2264 N. The jth line indicates that pipe j connects junctions aj and bj . At most one pipe connects any pair of junctions, and no two junctions share the same coordinates. The source is junction 1, and the destination is junction N.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Minimum Cost Flow\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, display the case number. Then if suitable new pipes and plugs can be used to construct the desired system, display the minimum cost of connecting the source junction to the destination junction, accurate to four decimal places. If it is impossible to connect the source to the destination, display the word 'impossible'.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYou are working for a company designing cute, funny robot vacuum cleaners. At a high level, the robots\\u2019 behavior is divided into three modes:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tExploration\\n\\t\\t\\t\\t\\t\\tVacuuming\\n\\t\\t\\t\\t\\t\\tRampant Killing\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tUnfortunately, while consumer testing shows that the last two modes are working perfectly, the exploration mode still has bugs. You\\u2019ve been put in charge of debugging.\\n\\n\\t\\t\\t\\t\\tAt the beginning of the exploration mode, the robot is placed into a convex polygonal room. It has sensors that should tell it where all the walls are. Your job is to write a program that verifies that these readings are correct. To do this, the robot needs to physically touch every wall in the room.\\n\\n\\t\\t\\t\\t\\tYour problem is this: given the shape of a convex polygonal room with N walls and a starting point P inside it, determine the shortest route that touches each wall and then returns to P. Touching a corner counts as touching both incident walls.\\n\\t\\t\\t\\t\",\n    \"id\": 2212,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case starts with a line containing the number of vertices N of the polygon (3 \\u2264 N \\u2264 100) and the integer coordinates Px and Py of the robot\\u2019s starting point (\\u221210 000 \\u2264 Px, Py \\u2264 10 000). This is followed by N lines, each containing two integers x, y (\\u221210 000 \\u2264 x, y \\u2264 10 000) defining a vertex of the polygon. Vertices are given in counterclockwise order, all interior angles are less than 180 degrees, the polygon does not self-intersect, and the robot\\u2019s starting point is strictly inside the polygon\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Room Service\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display the case number and the length of the desired route, accurate to two decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tSafe Ltd. is a company that manufactures high-quality safes. Its latest invention is an optical closure mechanism that uses a laser beam passing through a rectangular grid with several mirrors.\\n\\n\\t\\t\\t\\t\\t \\n\\n\\t\\t\\t\\t\\tWhen the laser is activated, a beam enters the top row of the grid horizontally from the left. The beam is reflected by every mirror that it hits. Each mirror has a 45 degree diagonal orientation, either / or \\\\ . If the beam exits the bottom row of the grid horizontally to the right, it is detected and the safe opens (see the left side of the figure above). Otherwise the safe remains closed and an alarm is raised.\\n\\n\\t\\t\\t\\t\\tEach safe has a missing mirror, which prevents the laser beam from traveling successfully through the grid (see the right side of the figure above). The safe has a mechanism that enables the user to drop a single mirror into any empty grid cell. A legitimate user knows the correct position and orientation of the missing mirror ( / in row 4 column 3 above) and can thus open the safe. Without this knowledge the user has to guess correctly, which can be difficult for safes with large grids.\\n\\n\\t\\t\\t\\t\\tYour job is to determine if particular safes are actually secure. A secure safe does not open right away without inserting a mirror, and there is at least one valid location and orientation for the missing mirror. There may indeed be multiple such locations and orientations.\\n\\t\\t\\t\\t\",\n    \"id\": 2213,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case describes a single safe and starts with a line containing four integer numbers r, c, m, and n (1 \\u2264 r, c \\u2264 1 000 000 and 0 \\u2264 m, n \\u2264 200 000). The mechanism\\u2019s grid has r rows and c columns. Each of the next m lines contains two integer numbers ri and ci (1 \\u2264 ri \\u2264 r and 1 \\u2264 ci \\u2264 c) specifying that there is a / mirror in row ri column ci . The following n lines specify the positions of the \\\\ mirrors in the same way. The m + n positions of the mirrors are pairwise distinct.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"A Safe Bet\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display its case number followed by:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t0 if the safe opens without inserting a mirror.\\n\\t\\t\\t\\t\\t\\tk r c if the safe does not open without inserting a mirror, there are exactly k positions where inserting a mirror opens the safe, and (r, c) is the lexicographically smallest such row, column position. A position where both a / and a \\\\ mirror open the safe counts just once.\\n\\t\\t\\t\\t\\t\\t'impossible' if the safe cannot be opened with or without inserting a mirror.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tCommercial flights are statistically quite safe (in terms of number of deaths per passenger-kilometer, only going to the moon is safer). But there are still reasons for precautions and safety regulations. An early such rule was the so-called \\u201c60-minute rule,\\u201d which required that a two-engine plane must always be within 60 minutes of the nearest adequate airport along its entire flight path. A variety of similar rules have existed, but at their core, they remain the same: the flight path can not take the airplane more than a certain maximum allowed distance from the nearest airport. With these restrictions, planes cannot always use a direct route for flying from one airport to another.\\n\\n\\t\\t\\t\\t\\tIn this problem we will compute the shortest flight path between two airports while adhering to a maximum allowed distance rule. In the figure below, which illustrates the first sample test case, any flight route has to stay within the three circles. Thus a plane going from airport 2 to airport 3 has to detour from the direct route via the region around airport 1. Note that the plane would not necessarily have to go to airport 1 itself.\\n\\n\\t\\t\\t\\t\\t \\n\\n\\t\\t\\t\\t\\tThings are further complicated by the fact that planes have limited fuel supply, and to go longer distances they may need to make a stopover at intermediate airports. Thus, depending on the fuel capacity, a plane going from airport 2 to airport 3 in the figure might have to stop over at airport 1 (or the fuel capacity might be too low even to go to airport 1, in which case the trip would be impossible to make).\\n\\n\\t\\t\\t\\t\\tWe make the following simplifying assumptions:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tThe surface of the earth is a sphere of radius 6370 km.\\n\\t\\t\\t\\t\\t\\tBoth time and fuel consumption are directly proportional to distance traveled. In other words we are interested only in total distance traveled.\\n\\t\\t\\t\\t\\t\\tThe difference in distance caused by planes flying at different altitudes is negligible. Thus, effectively, we assume them to be flying along the earth\\u2019s surface.\\n\\t\\t\\t\\t\\t\\tA plane may stop for refueling at as many intermediate airports as needed, each time getting a full tank.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 2214,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of each test case contains two integers N and R, where 2 \\u2264 N \\u2264 25 is the number of airports and 1 \\u2264 R \\u2264 10 000 is the maximum allowed flight distance (in km) from the nearest airport. Each of the next N lines contains two integers \\u03c6, \\u03b8 satisfying 0 \\u2264 \\u03c6 < 360 and \\u221290 \\u2264 \\u03b8 \\u2264 90, the longitude and latitude (respectively) of an airport, in degrees. The airports are numbered according to their order in the input starting from one. No two airports are at the same position.\\n\\n\\t\\t\\t\\t\\tFollowing this is a line containing an integer Q, satisfying 1 \\u2264 Q \\u2264 100. Each of the next Q lines contains three integers s, t, c satisfying 1 \\u2264 s, t \\u2264 N, s != t, and 1 \\u2264 c \\u2264 50 000, indicating a plane going from airport s to airport t with a fuel capacity yielding a range of c km.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Shortest Flight Path\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display the case number followed by one line for each query containing the length in km of the shortest flight path between airport s and t, subject to the fuel constraint c. Display the length accurate to three decimal places. If there is no permissible path between the two airports, then display the word impossible instead.\\n\\n\\t\\t\\t\\t\\tYou may assume the answer is numerically stable for perturbations of up to 0.1 km of R or c.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 30.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Plate Shipping Company is an Internet retailer that, as their name suggests, exclusively sells plates. They pride themselves in offering the widest selection of dinner plates in the universe from a large number of manufacturers.\\n\\n\\t\\t\\t\\t\\tIn a recent cost analysis the company has discovered that they spend a large amount of money on packing the plates for shipment. Part of the reason is that plates have to be stacked before being put into shipping containers. And apparently, this is taking more time than expected. Maybe you can help.\\n\\n\\t\\t\\t\\t\\tA shipment of plates consists of plates from several manufacturers. The plates from each manufacturer come stacked, that is, each arranged in a single stack with plates ordered by size (the smallest at the top, the largest at the bottom). We will call such a stack properly ordered. To ship all these plates, you must combine them into a single stack, again properly ordered. To join the manufacturers\\u2019 stacks into a single stack, two kinds of operations are allowed:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tSplit: a single stack can be split into two stacks by lifting any top portion of the stack and putting it aside to form a new stack.\\n\\t\\t\\t\\t\\t\\tJoin: two stacks can be joined by putting one on top of the other. This is allowed only if the bottom plate of the top stack is no larger than the top plate of the bottom stack, that is, the joined stack has to be properly ordered.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tNote that a portion of any stack may never be put directly on top of another stack. It must first be split and then the split portion must be joined with the other stack. Given a collection of stacks, you have to find the minimum number of operations that transforms them into a single stack. The following example corresponds to the sample input, and shows how two stacks can be transformed to a single stack in five operations:\\n\\n\\t\\t\\t\\t\\t \\n\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2215,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case starts with a line containing a single integer n (1 \\u2264 n \\u2264 50), the number of stacks that have to be combined for a shipment. This is followed by n lines, each describing a stack. These lines start with an integer h (1 \\u2264 h \\u2264 50), the height of the stack. This number is followed by h positive integers that give the diameters of the plates, from top to bottom. All diameters are at most 10 000. These numbers will be in non-decreasing order.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Stacking Plates\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display the case number and the minimum number of operations (splits and joins) that have to be performed to combine the given stacks into a single stack.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2012 World Finals  Poland\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYou are studying a takeover war between two large corporations, Takeover Incorporated and Buyout Limited. Each of these corporations controls a number of subsidiaries. The aim in this war is simply to drive the competition out of the market. There are N subsidiaries of Takeover Incorporated and M subsidiaries of Buyout Limited, and you know the market value of each subsidiary.\\n\\n\\t\\t\\t\\t\\tEach company can designate one of its subsidiaries to perform a takeover. The takeover can either be friendly or hostile. A friendly takeover means a subsidiary of a corporation merges with a different subsidiary of the same corporation. The market value of the merged subsidiary is the sum of the market values of the constituent subsidiaries. There is no constraint on the relative sizes of the subsidiaries participating in a friendly takeover.\\n\\n\\t\\t\\t\\t\\tA hostile takeover means a subsidiary A of a corporation attempts to take over a subsidiary B of the other corporation. For this to succeed, the market value of A has to be greater than the market value of B. After this move, B disappears from the market. The market value of A does not change (the gain of incorporating B\\u2019s assets is offset by the monetary cost of the takeover). For simplicity we assume that no sequence of moves leads to two subsidiaries of different corporations having the same market value.\\n\\n\\t\\t\\t\\t\\tThe companies take turns making moves in this takeover war, with Takeover Incorporated going first. A company will do nothing on its turn only if it cannot make a takeover. A company loses the takeover war if all its subsidiaries are taken over.\\n\\n\\t\\t\\t\\t\\tYour aim is to learn which company can guarantee a victory from this war. In the first case of the sample data, Takeover Incorporated can simply take over one of the companies of Buyout Limited in its first move with the 7-value subsidiary. Then it will lose one of its small (1-value) subsidiaries to a hostile takeover, and then it will take over the second subsidiary of Buyout Limited. In the second case, Takeover has to make a friendly takeover in its first move. Buyout Limited will join its two subsidiaries into a single company with market value 10. Takeover will have to make a friendly takeover again (as again it will not have a large enough subsidiary to take over Buyout\\u2019s giant). Now Takeover will have two subsidiaries, valued either 9 and 3 or 6 and 6. In either case, Buyout takes over one of these subsidiaries, Takeover has to pass, and Buyout takes over the other one\\n\\t\\t\\t\\t\",\n    \"id\": 2216,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case is described by three lines of input. The first line contains two numbers 1 \\u2264 N \\u2264 105 and 1 \\u2264 M \\u2264 105 denoting respectively the number of subsidiaries of Takeover Incorporated and Buyout Limited. The next line lists the N sizes ai of the subsidiaries of Takeover Incorporated (1 \\u2264 ai \\u2264 1012), and the third line lists the M sizes bj of the subsidiaries of Buyout Limited (1 \\u2264 bj \\u2264 1012).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Takeover Wars\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display the case number and either the phrase 'Takeover Incorporated' or the phrase 'Buyout Limited' depending on who wins the takeover war if both corporations act optimally.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"By Pedro Michael, IFCE  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Paulo Bruno is a boy that like Pokemons, whoever he hates math, he hates exponentiation and for some reason\\n          he doesn't calculate correctly operations with the number 9. Knowing about that, his friend Werlesson\\n          decided to do a challenge for Paulo. Werlesson wants Paulo calculates the N-th power of 9\\n          and answer the last digit of that. For example: given N=2, the answer should be 1, because\\n          92=81. The difficulty is that 9N for a big N is a very very huge number.\\n          Without ideas, Paulo decided ask for your help.\",\n    \"id\": 2217,\n    \"input\": \"The input consists of many instances of the problem. The first line\\n          contains just an integer T that represents the\\n          number of instances.\\n         Each instance is composed by one line that has an integer number\\n          N(0 \\u2264 N \\u2264 109).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Nove\",\n    \"output\": \"For each instance in the input, your must print a line with the last digit of 9N.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por Joel Uchoa, IFCE  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"So so far away there is a pacific kingdom called L\\u00e1-Ara.\\n          L\\u00e1-Ara leader, the king Naldo, a great pokemon master,\\n          is in trouble. A rare mathematician pokemon called\\n          Evil-Son invades his territory and it threatened \\n          to destroy everything if nobody answer the challenge described\\n          as follow.\\n        \\n\\n        \\n          A set of lines in the pane is said to be in general position\\n          if no two lines are parallel and no three lines intersect at a common point.\\n          Inside the rectangle of figure (A) we have a set of lines in general position,\\n          in other hand, inside the rectangle of figure (B) we have represented a set of \\n          lines that isn't in general position.\\n        \\n\\n        \\n          \\n        \\n\\n        \\n          The challenge consists in compute the number of regions in the plane\\n          created by a set of N lines in general position.\\n          The king Naldo needs your mathematics and programming skills to save\\n          the L\\u00e1-Ara kingdom of evil Evil-Son.\\n\",\n    \"id\": 2218,\n    \"input\": \"The input consists of many instances of the problem. The first line\\n          contains just an integer T that represents the\\n          number of instances.\\n        \\n          Each instance consists of one line thats has the number N\\n          representing the number of lines in the set.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"The Fearful Evil-Son\",\n    \"output\": \"For each instance in the input, prints a line with the number of \\n          regions created in the plane by the lines in the set.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Marianne Linhares Monteiro, UFCG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tRhayane loves math and of course she also loves pok\\u00e9mons. She belives that her mathematical knowledge will help in her jorney as a pok\\u00e9mon trainer. Right now she is at a long road (straight line) with many PokeStops in the way, Rhayane wants to know the maximum distance she will walk without passing by any PokeStop and of course she asked your help for this task.\\n\\nGiven the length of the road in meters and the PokeStop's distances, also in meters, from Rhayane's initial position (beginning of the road, where there is no PokeStop) make a program that determines such a distance. Per instance, if the distances are: {2, 4, 5, 1} and the length of the road is 7, then the biggest distance she will walk without passing by any PokeStop is 2 meters (between 2 and 4, or 5 and 7).\\n\\t\\n\\t\\t\\t\\t\",\n    \"id\": 2219,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of many instances of the problem. The first line contains just an integer T (1 \\u2264 T \\u2264 20) that represents the number of instances.\\n\\t\\t\\t\\t\\tFor each instance is given a line with two integers n and m (1 \\u2264 n, m \\u2264 10^5) respectly the length of the road and the number of PokeStops in the road.\\n\\n\\t\\t\\t\\t\\tIn the next line there will be m integers representing the distance of the PokeStops from Rahayane's position. The distance of a PokeStop form Rhayane initial's position is always less of equal to 10^6.\\n\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Passing By The PokeStops\",\n    \"output\": \"\\t\\t\\t\\t\\t\\t\\tFor each instance print an integer that represents the maximum distance she will walk without passing by any PokeStop.\\n\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"Por Joel Uchoa, IFCE  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"K-rina is a young pokemon master and she likes help ancient pokemons.\\n          In her's last hunting, she has capture a old and stutterer writer \\n          pokemon called Gust-Av\\u00f4. Because his stuttering, when Gust-Av\\u00f4 writes\\n          a word, sometimes, he repeats or add some letters from/to the word.\\n          K-rina wants help it interpreting it's texts. To that she needs\\n          solve the problem described below.\\n        \\n\\n        \\n          Given A and B two sequences os letter,\\n          we say B is a subsequence of A if we\\n          can find all letter of B into A in the\\n          same order (not necessarily adjacent). For example, abc\\n          is a subsequence of xaywbzc, instead that, xyz\\n          isn't subsequence of xabzcy.\\n        \\n\\n        \\n          Given a sequence B, we define Bi\\n          as a sequence where each letter of B is repeated i times.\\n          For example, if B=xyzzx, then B3=xxxyyyzzzzzzxxx.\\n        \\n\\n        \\n          To help K-rina and Gust-Av\\u00f4, your task is: Given two sequences\\n          A and B, find the maximum \\n          value to i, such that Bi\\n          is a subsequence of A.\\n\",\n    \"id\": 2220,\n    \"input\": \"The input consists of many instances of the problem. The first\\n          line contains just an integer T (1 \\u2264\\n          T \\u2264 20) that represents the number of\\n          instances.\\n        \\n          Each instance is composed by two lines. The first line\\n          has a sequence A of letters (|A|\\u2264105)\\n          and the second line has a sequence B of letter (|B|\\u2264104).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Helping Gust-Av\\u00f4\",\n    \"output\": \"For each instance in the input, your must print a line with the\\n          maximum integer i, such that Bi\\n          is a subsequence of A. In the case of B isn't\\n          subsequence of A, prints 0 (zero).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Duarte, UNIFESO  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"After capturing many Pomekons, Dabriel and Guarte resolved to make a battle. The way of the duel is simple, each Master puts a Pomekon in battle and wins who has the Pomekon with the bigger value, which is defined as follows:\\n\\n        \\n\\n        The Bonus will be given to the Master Pomekon that are on a level of a value even.\\n\\n        This issue will be given to you the value of the applied bonuses, attack and defense values of Pomekon of Dabriel and Guarte and their levels,  you have to inform the winner of the battle.\",\n    \"id\": 2221,\n    \"input\": \"The entrance is composed of several instances. The first line of input contains an integer T indicating the number of instances.\\n          \\n          Each instance starts with a integer B (0 \\u2264\\n          B \\u2264 100), which indicates the value of the applied bonus.\\n          In the following two lines will have three integers Ai,\\n          Di and Li (1 \\u2264 Ai,\\n          Di \\u2264 100, 1 \\u2264 Li \\u2264 50),\\n          represented the attack value of Pokemon, the defense value and the level of the Master Pomekon. The first line is the Dabriel Pomekon and the second the Guarte.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Pomekons Battle\",\n    \"output\": \"For each instance in the input you should print the Master's name that will win the battle, in the event of a tie print: \\\"Empate\\\" without quotes.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tDabriel is a fissured boy for mathematics, today he learned at his school some set operations.\\nAfter spending the afternoon playing with some sets that he has, it's time to solve the homework, but he is already very tired and afraid to make some mistakes, asked for your help.\\n\\nDabriel wants a computer program that given N sets and the elements of each set, it can perform some operations, they are:\\n\\n1 X Y: Returns the number of distinct elements in the intersection of the set X and Y.\\n\\n2 X Y: RReturns the number of distinct elements in the union of the set X and Y.\\n\\t\\t\\t\\t\",\n    \"id\": 2222,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case starts with an integer N (1 \\u2264 N \\u2264 10\\u2074), representing the number of sets that Dabriel has. The next N lines begin with a integer Mi (1 \\u2264 Mi \\u2264 60), indicating the total number of elements that set i have, then follows Mi integers Xij (1 \\u2264 Xij \\u2264 60), representing the value of each element. The next line has a integer Q (1 \\u2264 Q \\u2264 10\\u2076), representing how many operations Dabriel want to perform. In the next Q  lines have the description of an operation. \\n\\t\\t\\t\\t\\tThe input ends with N = 0 and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Playing with Sets\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each operation, your program should print the number of elements, as explained in the description.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Duarte, UNIFESO  Brazil\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"After capturing several Pokemons, Dabriel decided to separate them into different stacks and apply some operations on them. As you all know, Dabriel is a Pomekon Master, then your knowledge with programming are very limited, in that it has requested your help to solve his problem.\\n\\n        Dabriel want to perform Q  operations on the stacks, each operation can be two types as described below:\\n\\n        1 X Y K: Returns the number of Pomekon that exist in the interval between X and Y positions after the K-th operation type 2. It is ensured that the K-th operation has already been made.\\n\\n        2 X W: Update the total of Pomekons on the X stack with the value W.\",\n    \"id\": 2223,\n    \"input\": \"The input consists of several test cases. Each test case starts with an integer N  (1 \\u2264 N \\u2264 10\\u2075), representing the quantity of stacks. The second line will have N integers pi (1 \\u2264 pi \\u2264 10\\u2075), representing how many Pomekons exist in the stack i.\\n        On the next line will be an integer Q (1 \\u2264 Q \\u2264 10\\u2075), which represents the amount of operations to be performed. Then follow Q lines, representing the Q operations.\\n        The input ends with N = 0 and should not be processed.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Pomekon Catalog\",\n    \"output\": \"For each operation of type 1, print a single line containing the amount of Pomekons that exist between X and Y  stacks after the K-th operation.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tIt will be held in your city a great tournament Pomekon where all the great Masters will play battles. The organizer of the event  did not count with a lot of registrations, so the team modified a bit the tournament rules.\\n\\nInstead of each Master Pomekon play alone the battles, doubles will be formed, the selection of pairs will be made by the organizing team, because as everyone knows the Pomekons Masters are solitary in their journeys, so no participant knows the other.\\n\\nParticipants of the tournament like the new rule, but were worried of not knowing your partner and end up not getting a good performance in the competition, so it was decided that the double would be formed by people who live as close as possible.\\n\\nYour task in this problem is to form pairs so that the sum of the distances between the homes of each pair is the lowest possible. In other words, are X1 the distance between team members 1 and X2 the distance between team members 2, you should minimize the value of X1 + X2.\\n\\t\\t\\t\\t\",\n    \"id\": 2224,\n    \"input\": \"\\t\\t\\t\\t\\tThe entrance is composed of several instances. The first line of input contains an integer T indicating the number of instances.\\nEach instance begins with an even integer N (1 < N \\u2264 16), which represents the amount of Master attached Pomekons. In the next N lines will have two integers Xi, Yi (0 \\u2264 Xi, Yi \\u2264 1000), describing the coordinate of the participant's i home.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Pomekon Tournament\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance print the sum of the distances of the houses of all doubles, with two decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, UECE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the game Pomekon, one of the goals is to visit real places to get new items and experience. Fulyane does not like to leave the house, she made a program that simulates its location, providing false coordinates of her location to the game. She also made a romote control that allows to move with fake coordinates, pretending as if she were really walking, but without leaving home.\\n\\nSearching forums, she found that for not to be banned from the game, she would have to move using only the real routes, but also found that he could move instantly from one place to another, without using real routes no more than K times per day, because if she to teleport more than K times, she could be banned from the game forever.\\n\\nFulyane always starts at the location identified by the index 1, and wants to visit the all locations, using the teleport no more than K times.\\n\\t\\t\\t\\t\",\n    \"id\": 2225,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several instances. The first line of input contains an integer T indicating the number of instances. The first line in each instance contains three integers N (1 \\u2264 N \\u2264 15), M (1 \\u2264 M \\u2264 N2) and K (0 \\u2264 K \\u2264 5) representing respectively the number of locations, number of routes and the amount maximum allowable of teleporters. Then, follows M lines, each line containing three integers A, B and C (1 \\u2264 C \\u2264 30000), representing respectively that the location A is connected with the location B by a route, and Fulyane takes C minutes to get from A to B using this route.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Penalization\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print the minimum amount of minutes that Julyane takes to visit all locations, using no more than K teleporters. If you can not visit all places, print -1.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maycon Alves, INATEL  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tDamian just got a job at the new balloon factory in Nlogonia. In this new job he should ensure that every pack of balloons has a different bar code. Trying to do a optimal work he programmed the bar code machine to generate the codes in sequential order starting at zero. Since he is from a foreign country he didn't know about the local superstition about numbers, only after a few days doing this job he was warned that there are M numbers considered unlucky, and because of that, packs with those numbers in the bar code, even if the number is a part of a greater number, can not be sold. Since he knows the bar code of the machine, he thinks you would be able to help him find how many useless packs he produced.\\n\\t\\t\\t\\t\",\n    \"id\": 2226,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case consists of two lines. The first line of each test case contains an integers, N ( 0 \\u2264 N \\u2264 1018 ) representing the number of the last generated bar code, the next line contains an integer M ( 1 \\u2264 M \\u2264 5000 ), representing the number of forbiden numbers, followed by the M unlucky numbers. The last line contain the number zero (0), and should not be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Balloon Factory\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print a single line with the number of useless packs.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2002  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe growing use of air transport concerns the experts who predict that congestion at airports could become a big problem in the future. The current numbers are already alarming: official reports show that in Europe, in June 2001, there was an average of 7,000 flights a day late. Concerned with the prediction of the experts in air traffic, the International Air Transport Association (ATAI) is beginning a study to find out which are the airports where air traffic might be more problematic in the future.\\r\\n\\r\\nAs a new developer hired by ATAI you have been in charge of writing a program to determine, from a list of airports and flights, which airport is more likely congestion in the future. As a measure of the probability of congestion will be used in this study the total number of flights arriving or departing from each airport.\\n\\t\\t\\t\\t\",\n    \"id\": 2227,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets. The first line of a test set contains two integers\\u00a0A\\u00a0(0 \\u2264\\u00a0A\\u00a0\\u2264 100)\\u00a0e\\u00a0V\\u00a0(0 \\u2264\\u00a0V\\u00a0\\u2264 10000), which respectively indicate the number of airports and the number of flights. Airports are identified by integers from 1 to A. The\\u00a0V\\u00a0following lines each one contains information from a flight, represented by a pair of positive integers\\u00a0X\\u00a0e\\u00a0Y\\u00a0(1 \\u2264\\u00a0X\\u00a0\\u2260\\u00a0Y\\u00a0\\u2264\\u00a0A), indicating that there is an airport flight\\u00a0X\\u00a0to the airport\\u00a0Y. The end of the input is indicated when\\u00a0A\\u00a0=\\u00a0V\\u00a0= 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Airport\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each entry test set your program should produce three lines. The first line identifies the test set, the form \\\"Teste n\\\", where n is numbered from 1. The second line should contain the airport identifier that has increased air traffic. If more than \\u00a0one airport has this maximum value, you must list all these airports, in ascending order of identification, and separated by at least one blank. The third line should be left blank. The spelling shown in the Output Sample below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2002  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tWhen were cleaning the basement of the recently inherited house, cousins John and Joseph found an ancient map stored in the trunk that had been his great-grandfather. The map seemed to describe an island, it was very old, and amid indications of ways the island, contained only a name: Huyn Chong Chong. Curious, John and Joseph searched the name in the college bilbioteca and the Internet. To his surprise and excitement, the name was related to an ancient legend of a treasure hidden by pirates in the eighteenth century.\\n\\nDelighted with the legend, cousins believed they had found the map that would lead them to the treasure hidden on the island of Huyn Chong Chong, close to South Korea. The treasure, said the legend, contained a chest full of very rare and valuable gems . Certain they would find the treasure, cousins sailed towards the island. Each of the cousins imagined smarter than the other, and believed he would find the treasure first. So they agreed that each would get a share of the treasure he found. Cousins then broke up, and began to look for treasure, especially the ark. Each of the cousins took the way he imagined it would take him to the ark, and following the map display, both were finding various jewelry along the way. Coincidentally, the two cousins arrived at the same time at the place where the ark was hidden. As the two found the ark at the same time, they now had to decide how to split the treasure. After analyzing some alternatives, the cousins agreed to the division as follows. Each would take the part of the treasure found before reaching the ark, and the ark of the content would be divided so that the two parts stay with the total value of the same treasure. To make the division in this way, to come back to Brazil, cousins sent evaluate each treasure jewelry. However, they are now in doubt whether you can make the division as they had agreed. You, as a friend of the two cousins (now millionaire), and hoping to get some reward, was willing to help them find out if you can make such a division.\\n\\nAre given:\\n\\n\\u2022 the value of the objects collected by John and Joseph before finding the ark;\\n\\n\\u2022 a list of values corresponding to the objects found inside the ark.\\n\\nSince jewelry is very valuable, these values are given in units of R $ 1,000.00, that is, the value 10 means R $ 10,000.00. You should write a program that determines whether it is possible to divide the objects of the ark so that also considered the values of the objects found above (which will be with the one who found them), cousins receive parts of the treasure with the same value.\\n\\t\\t\\t\\t\",\n    \"id\": 2228,\n    \"input\": \"\\t\\t\\t\\t\\tYour program should read several sets of tests. The first line of a test set contains three integers X (0 \\u2264 X \\u2264 50), Y (0 \\u2264 Y \\u2264 50) e N (0 \\u2264 N \\u2264 100). The values X and Y respectively represent the sum of the values found by John and Joseph before reaching the ark. The value N indicates the number of objects found in the ark. The following are N lines, each one containing an integer number V (1 \\u2264 V \\u2264 100), corresponding to the value of one of the objects of the ark. The end of input is indicated by X = Y = N = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Treasure Hunt\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each entry test set your program should produce three lines in the output. The first line should contain a test set identifier in the format \\\"Teste n\\\", where n is numbered from 1. The second line should contain the 'S' character if it is possible to divide the treasure as agreed by the two cousins, or the character 'N' otherwise. The third line should be left blank. The spelling shown in Output Sample below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2002  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tZezinho has Artistic Initiation classes at his school, and recently learned how to make paper folding. He was fascinated by the many possibilities of folding a single sheet of paper. As Zezinho very fond of mathematics, he decided to invent a puzzle involving folding. Zezinho defines a folding operation D consisting of folding twice a square sheet of paper in order to achieve a square with 1/4 of original size, as shown in Fig.\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tAfter repeating N times this folding operation D on paper, Zezinho cut the resulting square with a vertical section and a horizontal section, as shown below.\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tZezinho then challenged his colleagues, who guesses how many pieces of paper were produced?\\n\\t\\t\\t\\t\",\n    \"id\": 2229,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets. Each test set consists of a single line containing an integer\\u00a0N\\u00a0(-1 \\u2264\\u00a0N\\u00a0\\u2264 15)\\u00a0indicating the number of times folding operation\\u00a0D\\u00a0was applied. The end of the input is indicated by \\u00a0N\\u00a0= -1.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Folding\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each entry test set your program should produce three lines in the output. The first line should contain a test set identifier in the format \\\"Teste n\\\", where n is numbered\\u00a0from 1. The second line should contain the number of pieces of paper obtained after cutting folding calculated by your program. The third line should be left blank. The spelling shown in Example output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2002  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe prize for first place in the Brazilian Olympiad of Informatics, Juquinha and his family have won a one week trip to South Korea. As the country is stunning, with traditions, culture, very different architecture and cuisine of Brazil, the father of Juquinha Mr. Juca, decided to rent a car to explore the country. The roads are well maintained; all are two-way, and two cities can be directly connected by more than one road. However, on all roads you pay a fixed amount of toll (there is a toll each way between two cities). As Mr. Juca does not have much money to spend, travel with the car should be very thoughtful.\\r\\n\\r\\nWrite a program that known cities and existing roads in the country and the city where Juquinha and your family are, find each city (not the city where they are) that can be visited by them, given the restriction that Mr . Juca want to pay at most P tolls (considering only the outward journey).\\n\\t\\t\\t\\t\",\n    \"id\": 2230,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets. The first line of a test set contains four integers\\u00a0C\\u00a0(0 \\u2264\\u00a0C\\u00a0\\u2264 50),\\u00a0E\\u00a0(0 \\u2264\\u00a0E\\u00a0\\u2264 2500),\\u00a0L\\u00a0(0 \\u2264\\u00a0L\\u00a0\\u2264\\u00a0C) e\\u00a0P\\u00a0(0 \\u2264\\u00a0P\\u00a0\\u2264\\u00a0C). The values\\u00a0C\\u00a0e\\u00a0E\\u00a0respectively indicate the number of cities and the number of roads. Cities are identified by integers from 1 to\\u00a0C. the values\\u00a0L\\u00a0e\\u00a0P\\u00a0indicate, respectively, the city where the Juquinha family is at the time and the maximum number of tolls that Mr. Juca is willing to pay. At\\u00a0E\\u00a0following lines each one contains information of a road represented by a pair of positive integers\\u00a0X\\u00a0e\\u00a0Y\\u00a0(1 \\u2264\\u00a0X,Y\\u00a0\\u2264\\u00a0C), indicating that there is a road (two-way) of the city\\u00a0X\\u00a0 to the city\\u00a0Y. The end of the input is indicated by\\u00a0C\\u00a0=\\u00a0E\\u00a0=\\u00a0L\\u00a0=\\u00a0P\\u00a0= 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Toll\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each entry test set your program should produce three lines in the output. The first line should contain a test set identifier in the format \\\"Teste n\\\", where n is numbered from 1. In the second line should appear the identifiers of the cities that can be reached, in ascending order, separated by at least a blank. The third line should be left blank. The spelling shown in Example output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tOBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2002  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tWithout the protection of the atmosphere and the magnetic belt that exist on Earth, the moon is exposed to attack from the Sun, which is a star ever atomic explosion. The explosions from the Sun emit lethal waves of particles. A person to remain unprotected on the surface of the moon, a place where the sun was incident directly, would suffer a radioactive bombardment as intense as it was in the vicinity of the Russian plant of Chernobyl at the time of the accident that killed 31 people in 1986. In addition to solar radiation another effect of this lack of protection from the sun that exists on the Moon is the huge variation in temperature. In the regions near the lunar equator, the temperature variation is brutal, from about 130 degrees above zero during the day to 129 degrees negative at night.\\n\\nTo study more accurately the temperature variations on the surface of the moon, NASA sent to the moon a probe with a sensor that measures the temperature of 1 in 1 minute. An important fact that researchers want to find out is how it behaves the average temperature considered at intervals of a given time (one hour, half hour, eight hours, etc.). For example, for the sequence of measurements 8, 20, 30, 50, 40, 20, -10, and four minutes intervals, respectively the averages are 108/4 = 27 140/4 = 35 140/4 = 35 and 100/4 = 25.\\n\\nYou were recently hired by NASA, and your first task is to write a program, known the sequence of temperatures measured by the sensor, and the size of the desired range, tell which most and which the lowest average temperature observed, considering the size range given away.\\u00a0\\n\\t\\t\\t\\t\",\n    \"id\": 2231,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets. The first line of a test set contains two positive integers N (0 \\u2264 N \\u2264 10000) and M (1 \\u2264 M \\u2264 N), which respectively indicate the total number of measurements temperature (-200 \\u2264 temperature \\u2264 200) of a sequence obtained by the sensor, and the size of the interval, in minutes, that the average should be calculated. The N each following lines contain an integer, representing the sequence of sensor measurements. The end of input is indicated when N = M = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Lunar Temperature\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each entry test set your program should produce three lines. The first line identifies the test set, the form \\\"Teste n\\\", where n is numbered from 1. The second line must contain two integers X and Y, separated by at least one blank space, representing respectively the values the lowest and highest average temperature, as determined by your program. The average value should be truncated if the mean is not an integer (that is, only to be printed the integer part). The third line should be left blank. The spelling shown in Example output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Taets, Universidade Federal de Itajub\\u00e1  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tPascal's Triangle (also known as Tartaglia Triangle in some countries), is an infinite numeric triangle formed by binomial numbers , where n represents the row number and k represents the column number (0-indexed). The triangle was discovered by the chinese mathematician Yang Hui, and 500 years later, many of its properties was studied by Blaise Pascal. Each number in Pascal's Triangle is equal to the sum of the number immediately above it and its predecessor.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tDavid, the mastermind of your competitive programming team, found that the sum of the ith row of the Pascal's Triangle is 2i. Now, he wants to find the sum of the first N rows of the triangle. However, he thinks this problem is too easy and does not deserve his attention (he decided to try to solve a problem about bipartite graphs instead, a much harder topic), thus, you are the one who must solve this problem.\\n\\t\\t\\t\\t\",\n    \"id\": 2232,\n    \"input\": \"\\t\\t\\t\\t\\tFirst line of input contains an integer T, the number of test cases. The next T lines contain a number N (1 \\u2264 N \\u2264 31), the number of lines in the Pascal's Triangle you must solve.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Pascal's Triangle\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, the output must contain a line with an integer S, the sum of the first N lines in the Pascal's Triangle.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o SBC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tWe have a red square label entire side R, an unlimited amount of green stickers the entire side G and an unlimited amount of blue stickers whole square side B. We can always paste the red sticker on the wall. A green label only can be pasted on the wall of the red label and have to be fully on it. A blue label can be pasted on the wall of a single green label and have to be fully on it. There can be no overlap of the same color label and the bases of all the labels have to be horizontal. In the figure, we paste 14 stickers on the wall. In this problem, your program must compute the maximum number of labels that can stick to the wall. Only one detail: the entire R, G, and B will be given in hexadecimal and the response must also be in hexadecimal.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"id\": 2233,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of three lines respectively containing the entire R, G and B, 1 \\u2264 R, G, B \\u2264 ffffff. All three integers at the entrance are in hexadecimal, with lowercase letters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Colorful Labels\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line in the output containing a positive integer, in hexadecimal with lowercase letters, representing the maximum number of labels that can stick to the wall.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o SBC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tIn 2012 it was achieved a new world record in the famous Competition Hot Dogs Nathan: the champion, Joey Chestnut devoured 68 hot dogs in ten minutes, an increase\\namazing compared to 62 sandwiches devoured by the same Chestnut in 2011.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tNathan's Famous Corporation restaurant, located in Brooklyn, NY, is responsible for the\\ncompetition. They produce delicious hot dogs, world famous, but when it comes\\nmath is they are not as good. They wish to be listed in the Guinness Book of Records,\\nbut they should fill out a form describing the basic facts of the competition. In particular,\\nthey must inform the average number of hot dogs consumed by participants\\nduring the competition.\\n\\n You can help them? They promised to pay it with one of their tasty hot dogs. Given the total of hot dogs consumed and the total of participants in the competition,\\nyou should write a program to determine the average number of hot dogs consumed\\nby participants.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2234,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line containing two integers  M  and  P  (1 \\u2264  H, P  \\u2264 1000) indicating\\nrespectively the total number of consumed hot dogs and the total number of participants in the competition.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Hot Dogs\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line with a rational number representing the\\naverage hot dogs consumed by the participants. The result should be written as a\\nrational number with exactly two digits after the decimal point, rounded if necessary.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o SBC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tImagine you have a time machine that can be used up to three times, and every\\nuse of the machine you can choose to go back to the past or go to the future. The machine has three fixed loans; each credit represents a certain number of years, and can be used to get this amount of years for the past or for the future. You can make one, two or three trips, and each of these three credits can only be used once. For example, if the credits are 5, 12 and 9, you could decide to make two trips: go five years into the future and then go back nine years to the past. This way, you end four years in the past, in 2012. It could also make three trips, all going to the future, using the credits in any order, ending in 2042.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tIn this problem, given the values of the three machine credits, your program should say if is possible or not travel back in time and return to the present, making at least one trip and at most\\nthree trips; always using each of the three credit at most once.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2235,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line containing three credits A, B e C (1 \\u2264 A, B, C \\u2264 1000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Walking in Time\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should print a line containing the character 'S' if it possible travel in time and back to present, or 'N' if it's not possible.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o SBC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tHot potato is a popular game among children in school. The game is simple: the child who is with the potato lance the potato for another child. At some point, the professor, who is not looking at what is going on, will say that the game is over. When this happens, the child is with the potato loses. \\n A variation of the game, played in the canteen queue, is proposed by a teacher. Children are numbered from 1 to  N  according to their position in the queue, where the child with the number 1 is the first in line. Each will receive a paper with a number, and when you receive potatoes, should pass it on to the child in the position noted in his role. The game ends with the victorious teacher potatoes arrive at a lower position than or equal to  X  in line with  X  set at the start of the game. If this ever happens, the game never ends, but the kids come out victorious: the next day all get a discount in the cafeteria.\\n\\nThe teacher starts the game playing potato for any child in line. As your sight is not very good, it can only guarantee that will play the potato for any child in a invervalo  L . . .  R  in line with the same probability. He is considering several possible queue intervals to start the game. For this, the teacher would like to find out, for each of these intervals, which the value of  X  that he should choose for the game to be as fair as possible, ie, the probability that the game ends is as close as possible to the probability that the game does not end.\\n\\nYou should help the teacher to evaluate the proposals. Given the roles of each child in line and several possible ranges, respond, for each interval, the value of  X  that makes the fairest game possible. If there is a tie, answer the  X  closer to the front of the line.\\n\\t\\t\\t\\t\",\n    \"id\": 2236,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains two integers,  N  and  Q  (2 \\u2264  N \\u2264 50000, 1 \\u2264  Q  \\u2264 10  5 ). The next line contains  N  whole  p  1  ,  p  2  . . .  p  N   (1 \\u2264  p  i   \\u2264  N ), the values of roles received by each of the children. Here then  Q  lines, each with two integers  L  and  R  (1 \\u2264  L  \\u2264  R  \\u2264  N ), an interval considered by the teacher.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Hot Potato\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint  Q  lines, each containing, for each interval considered by the teacher, the integer  X  that the teacher should choose for the game to be as fair as possible.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tThe SBC-System Containers Balancing needs to be updated to work with a new class of ships, the \\\"two by four\\\", which are ships that can carry eight large containers in an arrangement of two rows and four columns, as shown in the figure to side. These ships have a fixed crane which is capable of producing a single type of movement: up two adjacent containers in the row or column, and exchange them position. To speed up the loading ports, eight containers are shipped in any one of eight positions, defining an initial configuration. After the ship leaves the port, the crane must move the containers to make them a final default setting for the trip.\\n\\n\\t\\t\\t\\t\\tThe problem is that the fuel cost for the crane perform a movement equals the sum of the weights of two adjacent containers whose positions have been changed. Given the weight of the containers in each position in the initial and final configurations, the SBC must compute the minimum possible total cost of a sequence of movements which takes the containers from initial configuration to the final configuration.\\n\\t\\t\\t\\t\",\n    \"id\": 2237,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry consists of four rows, each containing four integers between 1 and 1000, inclusive. The first two lines define the weights in the initial configuration and the last two lines, the weights in the final configuration. There is always a solution, because the containers in the initial and final configurations are the same, with possibly changed positions.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Containers\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing an integer, representing the minimum total cost of a sequence of movements that take the initial configuration to the final configuration.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tThink a positive number n. Now tell me an A divisor of n. Now give me another B number than n divider. Now a multiple C. and a non multiple D. The number you thought is ...\\n\\nIt looks like a magic trick, but math! Does knowing the numbers A, B, C and D, you can discover what the original number n? Note that there may be more than one solution!\\n\\nThis problem, given the values of A, B, C and D, you should write a program that determines which the smallest number n that may have been thought or conclude that there is no possible value.\\n\\t\\t\\t\\t\",\n    \"id\": 2238,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single row containing four integers A, B, C, and D, as described above (1 \\u2264 A, B, C, D \\u2264 109).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Dividers\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line. If there is at least a number n for which A, B, C and D make sense, the line must contain the lowest possible n. Otherwise, the line must contain -1.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tGiven a sequence of positive integers in hexadecimal, for example, S = [9af47c0b, 2,545,557, ff6447979], we define the sum (S) as the sum of all elements S. Now consider some permutation of the 16 hexadecimal digits, e.g. p = [4, 9; 5, 0, c, f, 3 d, 7, 8, b, 1, 2, 6, and]. From the S base sequence, we can define a transformed S[4] sequence, which is obtained by removing all ocorr\\u00eacias hexadecimal digit 4 of all integers of S, S[4] = [9af7c0b, 255557, ff67979]. Then we can remove the digit 9 and get S[4,9] = [af7c0b, 255557, ff677]. Following the order of the digits in the permutation p, we can define this way 16 sequences: S[4] , S[4,9] , S[4,9,5] ,...,S[4,9,5,a,0,c,f,3,d,7,8,b,1,2,6,e]. We are interested in adding all the elements of these 16 sequences:\\n\\ntotal (S, p) = sum (S [4]) + sum (S [4,9]) + sum (S [4,9,5]) + \\u00b7\\u00b7\\u00b7 + sum (S [4,9,5 , a, 0, c, f, 3, d, 7.8, b, 1,2,6, e])\\n\\nClearly, all this depends on the permutation p\\u00a0used in subsequent removal. Given a positive integer N sequence in hex, your program must compute, considering all the possible permutations of the 16 hexadecimal digits: the minimum total, the maximum total and the sum of the total of all permutations. For the sum total of all the permutations, print the result 3b9aca07 module (109 + 7 in base 10).\\n\\t\\t\\t\\t\",\n    \"id\": 2239,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains an integer N, 1 \\u2264 N \\u2264 3f, representing the size of the sequence. The following N lines contain each a positive integer P, 0 \\u2264 P \\u2264 fffffffff setting the initial sequence S integers. All numbers in the input are in hexadecimal, with lowercase letters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Hex Statistics\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line in the output containing three positive integers in hexadecimal with lowercase letters, representing the total minimum, the maximum total and the total sum of considering all the possible permutations of the 16 hexadecimal digits.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tComputing trees are foreign objects: the root is at the top and the leaves are down! A tree is a data structure comprised of N vertices connected by edges N-1 so that it is possible to reach an apex at any other vertex following the edges. In a rooted tree, each edge connects a vertex parent to a child vertex. A single vertex has no father, and is called the root. Thus, from the root it is possible to reach any other vertex of the tree following the edges in the direction of father to son.\\n\\n\\t\\t\\t\\t\\tIn a ternary tree each node can have up to three children vertices, called the left, center and right. Handed a ternary tree is a rooted ternary tree in which no vertex has right child. A right hand ternary tree is a rooted ternary tree in which no vertex has left child. The root of a ternary tree is always a central apex. The figure below shows examples of a left-handed tree and a right hand tree.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tThe superposition S of a left-handed tree C with a right-hand tree D is a rooted ternary tree in which the root is either the root of C or the root of D or both roots, C and D, superimposed, and which contains the Structure of both superimposed trees. The figure below shows some trees formed by the superposition of the left-handed tree and the right tree of the figure above.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tNote that in Figure (a) is the root vertex x (the right hand tree) and the pairs of vertices (a, y) and (c, u) are superposed. In Figure (b) is the root vertex (the left-handed tree) and the pairs of vertices (d, x), (e, y) and (f u) are superposed. In Figure (c) it is also the root vertex (the left-handed tree) and the pair of vertices (f, x) is superimposed.\\n\\n\\t\\t\\t\\t\\tGiven a left-handed tree and a tree right hand, your task is to determine the minimum number of vertices needed to build a ternary tree which is a superposition of the given trees.\\n\\t\\t\\t\\t\",\n    \"id\": 2240,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of a test case contains an integer N indicating the number of vertices of the left-handed tree (1 \\u2264 N \\u2264 104). Vertices in this tree are identified by numbers from 1 to N, and the root is the number of vertex 1. Each of the following N lines contains three integers I, L and K, respectively, indicating a vertex I identifier, the left L child identifier I and the central child identifier K of I (0 \\u2264 I, L, K \\u2264 N). The next line contains an integer M indicating the number of vertices of the right hand tree (1 \\u2264 M \\u2264 104).Vertices in this tree are identified by numbers from 1 to M, and the root is the number of vertex 1. Each of the next M lines contains three integers P, Q and R, respectively indicating the identifier of a vertex P, the son of the identifier central Q of P and the son of the right identifier R of P (0 \\u2264 P, Q, R \\u2264 N). The value zero indicates a non-existing vertex (a vertex is used when no one or both of its children).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Merging Trees\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint the minimum number of vertices of a tree that is the superposition of the two trees given at the entrance.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tGo-- is to like the traditional game of Go, but is much easier! It is played on a square board of size N, initially empty, in which two players, one playing with black stones and the other with white, take turns placing a stone at a time into any cell that is not yet occupied. The game ends after each player put P stones on the board. Consider all possible square sub-areas of size from 1 to N. A sub-area belongs to the player who plays with black stones if it contains at least one black and no white stone stone. Likewise, a square sub-area belongs to the player who plays with white stones contains at least one white stone and no black stone. Note that the areas that contain no stone, or that contain both black as white stones, do not belong to any player.\\n\\nThis problem, given the final position of the board, your program should calculate how many square sub-areas belonging to each player, to find out who won the match. In the figure, black having 12 sub-fields (five dimension 1, six 2 dimensional and one dimension 3). White, who lost the match, have only 10.\\n\\t\\t\\t\\t\",\n    \"id\": 2241,\n    \"input\": \"\\t\\t\\t\\t\\tThe first row entry contains two integers N and P, 2 \\u2264 N \\u2264 500, 1 \\u2264 P \\u2264 500 and P \\u2264 N2 / 2, representing, respectively, the size of the board and the number of stones that each player places. Each of the following lines P contains two integers L and C (1 \\u2264 L, C \\u2264 N) setting the coordinates (row, column) of black stones. Then each of the next P lines contains two integers L and C (1 \\u2264 L, C \\u2264 N) defining the coordinates (row, column) of white stones. All stones are placed in separate cells.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Go--\",\n    \"output\": \"\\t\\t\\t\\t\\tPrint a line containing two integers separated by a space: how many different areas belonging to black and white.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tIn chats, it is very common among young people and adolescents use strings of letters, which often seem random to represent laughter. Some common examples are:\\r\\n\\r\\nhuaauhahhuahau\\r\\nhehehehe\\r\\nahahahaha\\r\\njaisjjkasjksjjskjakijs\\r\\nhuehuehue\\r\\n\\r\\nClaudia is a young programmer who was intrigued by the sound of \\\"digital laughter.\\\" Some of them she can not even pronounce! But she realized that some of them seem better convey the feeling of laughter than others. The first thing she noticed is that the consonants do not interfere in how digital laughter influence the feeling of transmission. The second thing she noticed is that the funniest digital laughter are those in which the sequences of vowels are the same when read in the natural order (from left to right) or in reverse order (from right to left), ignoring consonants. For example, \\\"hahaha\\\" and \\\"huaauhahhuahau\\\" are among the funniest laughs while \\\"riajkjdhhihhjak\\\" and \\\"huehuehue\\\" are not among the funniest.\\r\\n\\r\\nClaudia is very busy with the statistical analysis of digital laughter and asked for his help to write a program that determines, to a digital laugh, if she is the funniest or not.\\n\\t\\t\\t\\t\",\n    \"id\": 2242,\n    \"input\": \"\\t\\t\\t\\t\\tThe input comprises a line containing a sequence of up to 50 characters, formed only by small letters without accent. Vowels are the letters 'a', 'e', 'i', 'o', 'u'. The sequence contains at least one vowel.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Huaauhahhuahau\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a line containing a character, \\\"S\\\" if the laughter is of the funniest, or \\\"N\\\" otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tThe brothers Sergio and Luiz were playing with wooden cubes and wanted to build a wall, which ended up being incomplete, with the columns having different heights, as in this figure.\\r\\n\\r\\n\\r\\n\\r\\nThey decided now that the game would remove cubes, always from top to bottom in columns so that the end was left only an isosceles triangle cubes. They can only take small cubes of the wall, without replacing in another column, and the triangles have to be complete. The figure below illustrates the top five isosceles triangles, cubes, the kind they want, with heights 1, 2, 3, 4 and 5 respectively.\\r\\n\\r\\n\\r\\n\\r\\nGiven the sequence of heights of the wall columns, your program should help Sergio Luiz and figure out what is the maximum height that the triangle could be the end. In the first figure wall 30 columns of cubes, the highest triangle can have a height equal to seven.\\n\\t\\t\\t\\t\",\n    \"id\": 2243,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains an integer N, 1 \\u2264 N \\u2264 50000, representing the number of the wall columns. The second line contains N integers Ai, 1 \\u2264 Ai \\u2264 N, for 1 \\u2264 i \\u2264 N, indicating the heights of each column.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Isosceles\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line with an integer M, representing the maximum height that a triangle could be the end.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA group of investors are thinking of investing heavily in athletes of the Brazilian delegation after the Olympics in Rio. For this, they have observed N athletes and realized that some are in decay and others rising. In particular, the group is looking at two factors on each athlete: his weariness and his ability. They noted the ability scores and fatigue of each athlete soon to end the 2016 Olympics Then the group estimated the rate at which each athlete loses or gains skill and the rate at which each athlete gets tired over time, and realized that these rates are constant for both attributes.\\n\\nInvestors realized that these data allow them to define what they decided to call the golden athlete: an athlete who, in a given period of time, the athlete is less tired and more skilled. It was decided that investments will be made only in gold athletes. Find out how many players, between the observed initially receive some investment. Assume that time t = 0 is the time of upcoming Rio: no athlete gold was before that time can receive investment. Also consider that any time after the Rio Olympics should be considered, however large. An athlete is gold exactly at t = 0 time should be counted.\\n\\t\\t\\t\\t\",\n    \"id\": 2244,\n    \"input\": \"\\t\\t\\t\\t\\tThe first row entry contains an integer N (1 \\u2264 N \\u2264 105), the number of athletes. Following N lines, each with four integers: Hi, Hti , Ci, Cti (-106 < Hi, Hti , Ci, Cti \\u2264 106, Hti, Cti \\u2260 0), representing, respectively, the ability at the end of the Olympics, the ability change rate, tiredness at the end of the olympics and the rate of change of the ith athlete fatigue.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Olympic Games\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line with an integer O, representing the number of athletes who receive some investment group.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\t\\tA Polygon Shrinkage Kit is a widely used material in geometrical magic classes at Nlogonia. The kit consists of two points A and B in the Cartesian plane. Consider a convex polygon given by the vertices 1, 2 ... N, in that order. To shrink this polygon using the kit, some rules must be respected. X Each vertex of the polygon must be moved only once: at the midpoint of the segment Ax or Bx the midpoint of the segment. The shrinking operation is to produce a new convex polygon that preserves the relative order of vertices of the original polygon. In other words, considering all possible ways of applying the kit, only those whose final sequence of vertices 1, 2 ... N is a convex polygon are valid. See the original convex polygon can be clockwise and a valid shrink operation takes a convex polygon in counter-clockwise, in the order of the vertices. Only the relative order of the points is important, not the meaning.\\r\\n\\r\\nIt is known that geometrical magic is not the forte of most students. The teacher asked them to use the shrinking kit to shrink a convex polygon provided by it in order to obtain the smallest possible area and a friend begged her to you to solve the issue for him. Answer the smallest possible area of \\u200b\\u200bthe polygon for it.\\r\\n\\r\\n\\r\\n\\r\\nThe above figure illustrates a valid use of the kit, where the shaded polygon is the smallest possible area that preserves the order of the vertices. Points A and B correspond to the kit points. Note that, despite the shrinkage name, it is sometimes possible to use the kit to increase the area of \\u200b\\u200bthe polygons! As geometry is hard!\\r\\n\\r\\nNote that a single point or a line are not considered polygons. Therefore, a use of kit produced as a result of a somewhat different convex polygon, this is not a valid use.\\n\\t\\t\\t\\t\",\n    \"id\": 2245,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains an integer N (3 \\u2264 N \\u2264 105), the Number, polygon vertices. Here N rows, each of two integers x, y (-106 \\u2264 x, y \\u2264 106),\\u00a0the vertices of the polygon. The last line of input contains four integers, Ax, Ay, Bx e By (-106 \\u2264 Ax, Ay, Bx, By \\u2264 106), the x and y coordinates of A and the x and y coordinates of B, respectively. The entry points will be given in the correct order in which they appear in the polygon, clockwise or counterclockwise. There will be no repeated points and the polygon is convex.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Shrinking Polygons Kit\",\n    \"output\": \"\\t\\t\\t\\t\\tIts program should produce a line containing a real number with 3 decimal places of precision, representing the smallest area possible for a polygon obtained using the kit.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Maratona de Programa\\u00e7\\u00e3o da SBC 2016  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAvelino has a mosaic on one wall of your home. It is a very ancient mosaic, composed of small colored tiles. How is an ancient mosaic, some tiles fell off over the years forming holes.\\r\\n\\r\\nNow Avelino want to restore the mosaic covering the holes with new tiles. However, to save, Avelino want to buy tiles of a single color to fill the holes. In particular, wants to buy a tiling of the original colors or a color that is not contained in the mosaic.\\r\\n\\r\\nBeing a mosaic, you do not want that have very large areas with the same color. Avelino decided who will choose the color of the tiles trying to make the size of the smallest monochrome area as small as possible, so there is more detail. Note that there may be more than one possible color. A monochromatic area is that all the tiles in it are of the same color. Two adjacent tiles belonging to the same area will have the same color and two tiles are adjacent if they share one side.\\r\\n\\r\\nSee the first example case, there are three color areas (1 a size two size 3 and 2), a color area 2 (size 3) and a color area size of 3 7. A possible answer would be to choose 2 color, causing the monochromatic area is smaller in size 2. If we choose the color of the lower area would be one size 3.\\r\\n\\r\\nCreate a program that prints the size of the smallest possible area.\\n\\t\\t\\t\\t\",\n    \"id\": 2246,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers H and L, the height and width of the mosaic, respectively, satisfying 1 \\u2264 M \\u2264 200 and 1 \\u2264 L \\u2264 200. Then M lines each contain integers L, separated by a space, corresponding to the colors of the tiles. An integer of 0 corresponds to a hole and an integer i \\u2260 0 corresponds to a tile with the ith color, may range from 1 to 40,000 at most.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Tiles\",\n    \"output\": \"\\t\\t\\t\\t\\tIts program should produce a line containing a whole, the size of the smallest area possible.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2003  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tGrandma Victoria maintains since the birth of the grandsons Hansel and Zezinho , a ritual that is the delight of boys. She keeps all the coins received as change in two small piggy banks, one for each grandson. When one of piggy banks becomes full, she calls the two grandsons for a lively lunch at the end of which the delivery boys saved the coins in each piggy banks.\\r\\n\\r\\nShe was always very zealous about the equal distribution of the collected change. Where by reason of the value of coins, she can not put the same amount in the two piggy banks, she memorizes the difference in order to make up for it next deposit.\\r\\n\\r\\nGrandma Victoria is getting old and is afraid that memory lapses to do commit injustices with her grandsons, failing to compensate for differences between the piggy banks. Your task is to help Grandma Victoria, writing a computer program that displays the differences between the deposits, so that it does not have to worry about memorizing them.\\n\\t\\t\\t\\t\",\n    \"id\": 2247,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets. The first line of a test set contains an integer\\u00a0N\\u00a0(0 \\u2264\\u00a0N\\u00a0\\u2264 100), indicating the number of deposits in piggy banks. The\\u00a0N\\u00a0following lines describe each of a deposit in piggy banks; the deposit is indicated by two integer values\\u00a0J\\u00a0e\\u00a0Z\\u00a0(0 \\u2264\\u00a0J,Z\\u00a0\\u2264 100), separated by a blank space, representing respectively the values in cents, deposited in the vaults of the grandsons Hansel and Zezinho. The end of input is indicated by\\u00a0N\\u00a0= 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Grandma Vit\\u00f3ria's Piggy Banks\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each input set of test his program to produce a set of rows in the output. The first line should contain a test set identifier in the format \\\"Teste n\\\", where n is sequentially numbered from 1. Then your program must write one line for each tank set of tests. Each line should contain an integer representing the difference (in cents) between the amount deposited in piggy banks of Hansel and Zezinho. Let a blank line at the end of each test set. The spelling shown in Example output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2003  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYou got an internship to work as a programmer in the office of your school. As a first task, Dona Vilma, the coordinator, asked you to enhance a program that was developed by the former trainee. This program has as input a list of names and final average of students in a class, and provides the student with the highest average in the class. Dona Vilma want to use the program to reward the best student from each school class. The program developed by the former intern is on the following pages (Pascal program on page 5, C program on page 6, C ++ program on page 7).\\r\\n\\r\\nAs you can see, the program in its current form has a flaw: if there tied students with the best average in the class, it prints only the first student that appears in the list.\\r\\n\\r\\nDona Vilma wants you to change the program so that it produces a list of all students in the class who have obtained the highest average, and not just one. Can you help her in this task?\\n\\t\\t\\t\\t\",\n    \"id\": 2248,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets, representing several classes. The first line of a set of tests contains an integer number\\u00a0N\\u00a0(1 \\u2264\\u00a0N\\u00a0\\u2264 1000) indicating the total number of students in the class. The\\u00a0N\\u00a0following lines contain, each, a pair of integers\\u00a0C\\u00a0(1 \\u2264\\u00a0C\\u00a0\\u2264 20000) and\\u00a0M\\u00a0(0 \\u2264\\u00a0M\\u00a0\\u2264 100), respectively indicating the code and the average of a student. The end of input is indicated by a class with\\u00a0N\\u00a0= 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Internship\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each entry in the class your program should produce three lines in the output. The first line should contain a test set identifier in the format \\\"Turma n\\\", where n is numbered from 1. The second line should contain the codes of the students who obtained the highest average in the class. The students of codes must appear in the same order of entry, and each must be followed by a blank space. The third line should be left blank. The format shown in no\\u00a0 the sample output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2003  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Hungarian mathematician Paul Erdos (1913-1996), one of the brightest of the twentieth century, is considered the most prolific mathematician in history. Erdos published over 1500 articles, in collaboration with about 450 other mathematicians. In honor of this Hungarian genius, mathematicians created a number called \\\"number of Erdos.\\\" Every person who wrote a paper with Erdos has the number 1. All that do not have number 1, but wrote an article with someone who has number 1, have number 2. And so on. When no connection can be established between Erdos and a person, it is said that it has infinite number of Erdos. For example, the number of Erdos Albert Einstein is 2. And, perhaps surprisingly, the number of Erdos Bill Gates is 4.\\r\\n\\r\\nYour task is to write a program that, from a list of authors of articles, determine the number of Erdos authors.\\n\\t\\t\\t\\t\",\n    \"id\": 2249,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets. The first line of a test set contains an integer\\u00a0A\\u00a0(1 \\u2264\\u00a0A\\u00a0\\u2264 100),indicating the number of articles. Each one of\\u00a0A\\u00a0the following lines contain the list of authors of an article. Each author is identified by the initial of his name (capitalized), followed by a point and a blank (indicating that the name is abbreviated), followed by his/her last name (\\u2018P. Erdos\\u2019, for example). The last name of an author has a maximum of 15 letters, and only the first letter appears in uppercase. The authors are separated by commas, and the list of authors of an article ends with a point (see the examples below). A single white space separates the name abbreviation of the last name and the name of the previous author. Blanks are not used elsewhere. An article has a maximum of 10 authors, and the total of authors does not exceed 100. The end of entry is indicated by\\u00a0A\\u00a0= 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Erdos Number\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each input set of test his program to produce a set of rows in the output. The first line should contain a test set identifier in the format \\\"Teste n\\\", where n is sequentially numbered from 1. The following should appear a line for each & nbsp; author of set of tests (except the very P. Erdos ). Each line should contain the author's name followed by the character ':', a blank space and the number of Erdos. If the number of Erdos of a particular author is infinite, type 'infinito'. The output should be ordered alphabetically by author's last name, and if the same last name, the tie should be done by the initial of the first name. Print a blank line at the end of each test set. The spelling shown in Output Sample below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2003  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYour school class decided to organize a championship tetris. After discussion of the rules, it was decided that each student would play a total of 12 matches. Of the 12 points obtained by a student, the highest and lowest are discarded, and the others are added, resulting in the final score of the student.\\n\\nAs you have programming skills, it ended up being assigned the class to write a program to print the final classification of the championship, from the scores of each player.\\n\\t\\t\\t\\t\",\n    \"id\": 2250,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test sets. The first line contains a set of tests an integer\\u00a0J\\u00a0(0 \\u2264\\u00a0J\\u00a0\\u2264 1000), indicating the number of players who participated in the championship. Next, for each player there are two lines at the entrance: the first has the name of the player (formed only by letters, being only the initial capital, and with a maximum of 15 letters), and the second has 12 scores the player obtained, separated by a space. The scores are integers between 0 and 1000. The end of entry is indicated by a test set with\\u00a0J\\u00a0= 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Tetris\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test set, your program must write one line containing the test set identifier in the \\\"Teste n\\\" format, where n is sequentially numbered from 1. Next, your program should write the final classification in championship, using one line\\u00a0for each attendee. Each line must contain three pieces of information, separated by a blank space: the classification of the player, your final score and your name. The rating of a player is equal to 1 plus the number of players who scored more than his. In case of a tie, the players must be sorted in alphabetical order. After all the classification should be left with a blank line. The format of the sample output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2003  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe puzzle Towers of Hanoi is very old and known, consisting of a set of N disks of different sizes and three vertical pins, in which the disks can be fitted.\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tEach pin may contain a stack with any number of disks, since each disk is not placed above the other smaller sized disc. The initial configuration consists of all disks on pin 1. The aim of the puzzle is to move all disks to one of the other pins, always obeying the restriction not put a disc on another smaller.\\r\\n\\r\\n\\t\\t\\t\\t\\tAn algorithm to solve this problem is the following.\\r\\n\\r\\n\\t\\t\\t\\t\\tprocedure\\u00a0Hanoi(N, Orig, Dest, Temp)\\r\\n\\r\\n\\t\\t\\t\\t\\t\\u00a0\\u00a0\\u00a0if\\u00a0N = 1\\u00a0so\\r\\n\\r\\n\\t\\t\\t\\t\\t\\u00a0 \\u00a0 \\u00a0 move the smaller disc Orig pin for pin Dest;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\u00a0 \\u00a0if no\\r\\n\\r\\n\\t\\t\\t\\t\\t\\u00a0 \\u00a0 \\u00a0 Hanoi(N-1, Orig, Temp, Dest);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\u00a0 \\u00a0 \\u00a0 moving the Nth lower disc Src Dest pin for pin;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\u00a0 \\u00a0 \\u00a0 Hanoi(N-1, Temp, Dest, Orig);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\u00a0 \\u00a0end-if\\r\\n\\r\\n\\t\\t\\t\\t\\tend\\r\\n\\r\\n\\t\\t\\t\\t\\tYour task is to write a program to determine how many moves to change a disk from a pin to the other will be executed by the above algorithm to solve the puzzle.\\n\\t\\t\\t\\t\",\n    \"id\": 2251,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has multiple test sets. Each test set consists of a single line containing a single integer\\u00a0N\\u00a0(0 \\u2264\\u00a0N\\u00a0\\u2264 30), indicating the number of disks. The end of input is indicated by\\u00a0N\\u00a0= 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Towers of Hanoi\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test set, your program must write three lines in the output. The first line should contain a test set identifier in the format \\\"Teste n\\\", where n is sequentially numbered from 1. The second line should contain the number of movements that are performed by the given algorithm to solve the problem of Torres Hanoi with N disks. The third line should be left blank. The spelling shown in Example output below should be followed strictly.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy George Albuquerque Pinto, UEVA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tSherlock is a very smart boy, who was born in London in England. Since two years he always liked to solve challenges. With three years was school champion Sudoku. His uncle Paul Harrison always liked to challenge the boy bringing logic problems. This time Paul issued a challenge, but it is not only a challenge, he wants to find out his boss room password to be able to pick up some important documents of the company. Your task is to build a program that will help your uncle with this problem, given the information on the amount of oil on each key.\\n\\n\\t\\t\\t\\t\\tFor example, 0 = 0.80, 1 = 12:12, 2 = 0.01, 3 = 00:22, 4 = 00:35, 5 = 12:25, 6 = 0.77, 7 = 12:50, 8 = 0.63, 9 = 0:45 and n = 5, the password will be 06,879 .\\n\\t\\t\\t\\t\",\n    \"id\": 2252,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases, and is completed with file end. The first line in each case consists of an integer value N (0 < N < 11) which corresponds to the number of digits of the password. In the following section reads 10 values Vi, where (0 <= Vi <1), the i-th value corresponds to the level of oiliness\\u00a0i-th lock key. The higher the level oleosedade more times it has been used key. The password does not contain repeated digits formed and is formed by N digits plus ultilizados.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Discovering Password\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print a line with the message \\\"Case k\\\" where k indicates the test case number followed by access to the boss room password. Show results as the sample output. If two keys have the same level of greasiness, the key with the smaller value must precede the other. Print the password so that it starts showing the highest oiliness key to the smallest.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gustavo Marmentini, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tRolien and Naej are the developers of a big programming portal. To help the new site registration system, they requested your help. Your job is write a code that validates passwords that are registered on the portal, for that you should be aware for the following requirements:\\n\\n\\n\\tThe password must contain at least one uppercase letter, one lowercase letter and a number;\\n\\tIt can\\u2019t have any punctuation character, accent or space;\\n\\tMoreover, the password must be 6 to 32 characters.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2253,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases and ends with EOF. Each line has a string S, corresponding to the password that is entered by the user at registration.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Passwords Validator\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output contains a line, which can be \\\"Senha valida.\\\", if the password has all previously requested requirements, or \\\"Senha invalida.\\\", if one or more requirements aren\\u2019t met.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Felipe Fragoso, UFPB  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIn Japan, spring always give the air of grace and everyone is looking forward to the Hanami, a ritual to admire the blooming of cherry blossoms, better known as sakura.\\n\\n\\n\\nKikuka Bakana, an intelligent and passionate young man, lives in Japan and decided to invent the chomsky\\u2019s daisy game. He plans to count the amount of sakura petals that are scattered throughout the yard to serve as an index for the generated sequence of his game. Obviously, he isn't crazy to sweep all the yard and count how many petals are on the floor. So he intends to estimate the amount of petals using his math skills and use a program made by his best Brazilian friend to know if \\\"she loves me\\\" or \\\"she loves not\\\".\\n\\nChomsky\\u2019s daisy game has an initial symbol and a set of generating rules. From each symbol of the sequence, we can apply the generating rules (ad infinitum) to generate a new sequence.\\n\\n \\n\\nKikuka Bakana used the following definition for his game:\\n\\nInitial symbol: she loves not\\n\\nRules: (she loves not ==> she loves not, she loves me), (she loves me ==> she loves me, she loves not)\\n\\n \\n\\nSample for a 3-step generation:\\n\\n{she loves not} ==> {she loves not, she loves me}  ==> {she loves not, she loves me, she loves me, she loves not}\\n\\n \\n\\t\\t\\t\\t\",\n    \"id\": 2254,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has several test cases. Each test case contains a number N (0 <= N <= 10 ^ 9) of estimated petals. The input ends with EOF.\\n\\n \\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Japanese Daisy Game\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each case, print the corresponding sentence in the sequence generated by the chomsky\\u2019s daisy game in a line. (The first element of the sequence has index 0)\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2013 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAutomatic Chemical Manufacturing is experimenting with a process called self-assembly. In this process, molecules with natural affinity for each other are mixed together in a solution and allowed to spontaneously assemble themselves into larger structures. But there is one problem: sometimes molecules assemble themselves into a structure of unbounded size, which gums up the machinery.\\n\\n\\t\\t\\t\\t\\tYou must write a program to decide whether a given collection of molecules can be assembled into a structure of unbounded size. You should make two simplifying assumptions: 1) the problem is restricted to two dimensions, and 2) each molecule in the collection is represented as a square. The four edges of the square represent the surfaces on which the molecule can connect to other compatible molecules.\\n\\n\\t\\t\\t\\t\\tIn each test case, you will be given a set of molecule descriptions. Each type of molecule is described by four two-character connector labels that indicate how its edges can connect to the edges of other molecules. There are two types of connector labels:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tAn uppercase letter (A, . . . , Z) followed by + or \\u2212. Two edges are compatible if their labels have the same letter but different signs. For example, A+ is compatible with A\\u2212 but is not compatible with A+ or B\\u2212.\\n\\t\\t\\t\\t\\t\\tTwo zero digits 00. An edge with this label is not compatible with any edge (not even with another edge labeled 00).\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tAssume there is an unlimited supply of molecules of each type, which may be rotated and reflected. As the molecules assemble themselves into larger structures, the edges of two molecules may be adjacent to each other only if they are compatible. It is permitted for an edge, regardless of its connector label, to be connected to nothing (no adjacent molecule on that edge).\\n\\n\\t\\t\\t\\t\\tFigure A.1 shows an example of three molecule types and a structure of bounded size that can be assembled from them (other bounded structures are also possible with this set of molecules).\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tFigure A.1: Illustration of Sample Input 1.\\n\\t\\t\\t\\t\",\n    \"id\": 2255,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. A test case consists of two lines. The first contains an integer n (1 \\u2264 n \\u2264 40 000) indicating the number of molecule types. The second line contains n eight-character strings, each describing a single type of molecule, separated by single spaces. Each string consists of four two-character connector labels representing the four edges of the molecule in clockwise order.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Self-Assembly\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the word 'unbounded' if the set of molecule types can generate a structure of unbounded size. Otherwise, display the word 'bounded'.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2013 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYou are in charge of designing an advanced centralized traffic management system for smart cars. The goal is to use global information to instruct morning commuters, who must drive downtown from the suburbs, how best to get to the city center while avoiding traffic jams.\\n\\n\\t\\t\\t\\t\\tUnfortunately, since commuters know the city and are selfish, you cannot simply tell them to travel routes that take longer than normal (otherwise they will just ignore your directions). You can only convince them to change to different routes that are equally fast.\\n\\n\\t\\t\\t\\t\\tThe city\\u2019s network of roads consists of intersections that are connected by bidirectional roads of various travel times. Each commuter starts at some intersection, which may vary from commuter to commuter. All commuters end their journeys at the same place, which is downtown at intersection 1. If two commuters attempt to start travelling along the same road in the same direction at the same time, there will be congestion; you must avoid this. However, it is fine if two commuters pass through the same intersection simultaneously or if they take the same road starting at different times.\\n\\n\\t\\t\\t\\t\\tDetermine the maximum number of commuters who can drive downtown without congestion, subject to all commuters starting their journeys at exactly the same time and without any of them taking a suboptimal route.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tFigure C.1: Illustration of Sample Input 2.\\n\\n\\t\\t\\t\\t\\tIn Figure C.1, cars are shown in their original locations. One car is already downtown. Of the cars at intersection 4, one can go along the dotted route through intersection 3, and another along the dashed route through intersection 2. But the remaining two cars cannot reach downtown while avoiding congestion. So a maximum of 3 cars can reach downtown with no congestion.\\n\\t\\t\\t\\t\",\n    \"id\": 2257,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. The first line contains three integers n, m, and c, where n (1 \\u2264 n \\u2264 25 000) is the number of intersections, m (0 \\u2264 m \\u2264 50 000) is the number of roads, and c (0 \\u2264 c \\u2264 1 000) is the number of commuters. Each of the next m lines contains three integers xi , yi , and ti describing one road, where xi and yi (1 \\u2264 xi , yi \\u2264 n) are the distinct intersections the road connects, and ti (1 \\u2264 ti \\u2264 10 000) is the time it takes to travel along that road in either direction. You may assume that downtown is reachable from every intersection. The last line contains c integers listing the starting intersections of the commuters.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Surely You Congest\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the maximum number of commuters who can reach downtown without congestion.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"By ICPC 2013 World Finals  Andorra\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The fundamental theorem of arithmetic states that every integer greater than 1 can be uniquely represented as a product of one or more primes. While unique, several arrangements of the prime factors may be possible. For example:\\n\\n                    10 = 2 \\u00b7 5\\n\\n                    10 = 5 \\u00b7 2\\n\\n                    \\n\\n                    20 = 2 \\u00b7 2 \\u00b7 5\\n\\n                    20 = 2 \\u00b7 5 \\u00b7 2\\n\\n                    20 = 5 \\u00b7 2 \\u00b7 2\\n\\n                    Let f(k) be the number of different arrangements of the prime factors of k. So f(10) = 2 and f(20) = 3. Given a positive number n, there always exists at least one number k such that f(k) = n. We want to know the smallest such k.\",\n    \"id\": 2258,\n    \"input\": \"The input consists of at most 1 000 test cases, each on a separate line. Each test case is a positive integer n < 263 .\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Factors\",\n    \"output\": \"For each test case, display its number n and the smallest number k > 1 such that f(k) = n. The numbers in the input are chosen such that k < 263. Remember to let a blank space at the end of the line.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2013 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tThe term \\u201cHarvard architecture\\u201d applies to a computer that has physically separate memories for instructions and data. The term originated with the Harvard Mark I computer, delivered by IBM in 1944, which used paper tape for instructions and relays for data.\\n\\n\\t\\t\\t\\t\\tSome modern microcontrollers use the Harvard architecture \\u2013 but not paper tape and relays! Data memory is organized in banks, each containing the same number of data items. Each data-referencing instruction has a byte offset f to a bank, and a bit a that is used to select the bank to be referenced. If a is 0, then bank 0 is referenced. If a is 1, then the value in a bank select register (BSR) identifies the bank to be used. Assume each instruction takes the same time to execute, and there is an instruction that can set the BSR\\u2019s value.\\n\\n\\t\\t\\t\\t\\tFor example, suppose there are 4 banks of 8 bytes each. To access location 5, either use a single instruction with a = 0 and f = 5, or set the BSR to 0 in one instruction and then use an instruction with a = 1 and f = 5. The first approach is faster since it does not require setting the BSR.\\n\\n\\t\\t\\t\\t\\tNow suppose (with the same memory) the location to access is 20. Only one approach will work here: execute an instruction that sets the BSR to 2 (unless the BSR already has the value 2) and then use an instruction with a = 1 and f = 4.\\n\\n\\t\\t\\t\\t\\tA program is a sequence of operations. Each operation is either\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\ta variable reference, written as Vi, where i is a positive integer, or\\n\\t\\t\\t\\t\\t\\ta repetition, written as Rn <program> E, where n is a positive integer and <program> is an arbitrary program. This operation is equivalent to n sequential occurrences of <program>.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYour problem is to determine the minimum running time of programs. In particular, given the number and size of the memory banks and a program to be executed, find the minimum number of instructions (which reference memory location and possibly set the BSR) that must be executed to run the program. To do this you must identify a mapping of variables to memory banks that yields the smallest execution time, and report that execution time \\u2013 that is, the number of memory references and BSR register settings required. The BSR\\u2019s value is initially undefined, and changes only when an instruction explicitly sets its value.\\n\\t\\t\\t\\t\",\n    \"id\": 2259,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. A test case consists of two lines. The first line contains two integers b and s, where 1 \\u2264 b \\u2264 13 is the number of memory banks and 1 \\u2264 s \\u2264 13 is the number of variables that can be stored in each memory bank. The second line contains a non-empty program with at most 1 000 space-separated elements (each Rn, Vi, and E counts as one element).\\n\\n\\t\\t\\t\\t\\tYou may assume the following:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tIn a repetition Rn, the number of repetitions satisfies 1 \\u2264 n \\u2264 106 .\\n\\t\\t\\t\\t\\t\\tIn a loop operation Rn <program> E, the loop body <program> is not empty.\\n\\t\\t\\t\\t\\t\\tIn a variable reference Vi, the variable index satisfies 1 \\u2264 i \\u2264 min(b \\u00b7 s, 13).\\n\\t\\t\\t\\t\\t\\tThe total number of variable references performed by an execution of the program is at most 1012.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Harvard\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the minimum number of instructions that must be executed to complete the program.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 10.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2013 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYou are building advanced chips for machines. Making the chips is easy, but the power supply turns out to be an issue since the available batteries have varied power outputs.\\n\\n\\t\\t\\t\\t\\tConsider the problem of n machines, each with two chips, where each chip is powered by k batteries. Surprisingly, it does not matter how much power each chip gets, but a machine works best when its two chips have power outputs as close as possible. The power output of a chip is simply the smallest power output of its k batteries.\\n\\n\\t\\t\\t\\t\\tYou have a stockpile of 2nk batteries that you want to assign to the chips. It might not be possible to allocate the batteries so that in every machine both chips have equal power outputs, but you want to allocate them so that the differences are as small as possible. To be precise, you want to tell your customers that in all machines the difference of power outputs of the two chips is at most d, and you want to make d as small as possible. To do this you must determine an optimal allocation of the batteries to the machines.\\n\\n\\t\\t\\t\\t\\tConsider Sample Input 1. There are 2 machines, each requiring 3 batteries per chip, and a supply of batteries with power outputs 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12. You can, for instance, assign the batteries with power outputs 1, 3, 5 to one chip, those with power 2, 4, 12 to the other chip of the same machine, those with power 6, 8, 9 to the third chip, and those with power 7, 10, 11 to the fourth. The power outputs of the chips are 1, 2, 6, and 7, respectively, and the difference between power outputs is 1 in both machines. Note that there are many other ways to achieve this result.\\n\\t\\t\\t\\t\",\n    \"id\": 2260,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. A test case consists of two lines. The first line contains two positive integers: the number of machines n and the number of batteries per chip k (2nk \\u2264 106 ). The second line contains 2nk integers pi specifying the power outputs of the batteries (1 \\u2264 pi \\u2264 109 )\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Low Power\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the smallest number d such that you can allocate the batteries so that the difference of power outputs of the two chips in each machine is at most d.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2013 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tPublishing maps is not an easy task. First you need some appropriate transformation to display the earth\\u2019s spherical shape in a two-dimensional plane. Then another issue arises \\u2013 most high-quality maps are too large to be printed on a single page of paper. To cope with that, map publishers often split maps into several rectangular tiles, and print each tile on one page. In this problem, you will examine this \\u201ctiling\\u201d process.\\n\\n\\t\\t\\t\\t\\tThe International Cartographic Publishing Company (ICPC) needs to cut their printing costs by minimizing the number of tiles used for their maps. Even with a fixed tile size (determined by the page size) and map scale, you can still optimize the situation by adjusting the tile grid.\\n\\n\\t\\t\\t\\t\\tThe left side of Figure G.1 shows 14 map tiles covering a region. The right side shows how you can cover the same region with only 10 tiles, without changing the tile sizes or orientation.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tFigure G.1: Two possible ways of tiling Texas.\\n\\n\\t\\t\\t\\t\\tYour task is to help the ICPC find the minimum number of tiles needed to cover a given region. For simplicity, the region will be given as a closed polygon that does not intersect itself.\\n\\n\\t\\t\\t\\t\\tNote that the tiles must be part of a rectangular grid aligned with the x-axis and y-axis. That is, they touch each other only with their whole sides and cannot be rotated. Also note that although all input coordinates are integers, tiles may be located at non-integer coordinates.\\n\\n\\t\\t\\t\\t\\tThe polygon may touch the edges of marginal lines (as in Sample Input 2). However, to avoid floatingpoint issues, you may assume the optimal answer will not change even if the polygon is allowed to go outside the map tiles by a distance of 10\\u22126 .\\n\\t\\t\\t\\t\",\n    \"id\": 2261,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. The first line of a test case contains three integers: n, xs, and ys. The number of polygon vertices is n (3 \\u2264 n \\u2264 50), and xs and ys (1 \\u2264 xs, ys \\u2264 100) are the dimensions of each tile. Each of the next n lines contains two integers x and y (0 \\u2264 x \\u2264 10xs, 0 \\u2264 y \\u2264 10ys), specifying the vertices of the polygon representing the region (in either clockwise or counter-clockwise order).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Map Tiles\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the minimal number of tiles necessary to cover the whole interior of the polygon.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 20.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2013 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tMatryoshkas are sets of traditional Russian wooden dolls of decreasing size placed one inside the other. A matryoshka doll can be opened to reveal a smaller figure of the same sort inside, which has, in turn, another figure inside, and so on.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tThe Russian Matryoshka Museum recently exhibited a collection of similarly designed matryoshka sets, differing only in the number of nested dolls in each set. Unfortunately, some over-zealous (and obviously unsupervised) children separated these sets, placing all the individual dolls in a row. There are n dolls in the row, each with an integer size. You need to reassemble the matryoshka sets, knowing neither the number of sets nor the number of dolls in each set. You know only that every complete set consists of dolls with consecutive sizes from 1 to some number m, which may vary between the different sets.\\n\\n\\t\\t\\t\\t\\tWhen reassembling the sets, you must follow these rules:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tYou can put a doll or a nested group of dolls only inside a larger doll.\\n\\t\\t\\t\\t\\t\\tYou can combine two groups of dolls only if they are adjacent in the row.\\n\\t\\t\\t\\t\\t\\tOnce a doll becomes a member of a group, it cannot be transferred to another group or permanently separated from the group. It can be temporarily separated only when combining two groups.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYour time is valuable, and you want to do this reassembly process as quickly as possible. The only time-consuming part of this task is opening and subsequently closing a doll, so you want to minimize how often you do this. For example, the minimum number of openings (and subsequent closings) when combining group [1, 2, 6] with the group [4] is two, since you have to open the dolls with sizes 6 and 4. When combining group [1, 2, 5] with the group [3, 4], you need to perform three openings.\\n\\n\\t\\t\\t\\t\\tWrite a program to calculate the minimum number of openings required to combine all disassembled matryoshka sets.\\n\\t\\t\\t\\t\",\n    \"id\": 2262,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. A test case consists of two lines. The first line contains one integer n (1 \\u2264 n \\u2264 500) representing the number of individual dolls in the row. The second line contains n positive integers specifying the sizes of the dolls in the order they appear in the row. Each size is between 1 and 500 inclusive.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Matryoshka\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the minimum number of openings required when reassembling the matryoshka sets. If reassembling cannot be done (some of the kids might have been excessively zealous and taken some dolls), display the word 'Impossible'.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2013 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tPirate Dick finally had enough of fighting, marauding, theft, and making life miserable for many on the open seas. So he decided to retire, and he found the perfect island to spend the rest of his days on, provided he does not run out of money. He has plenty of gold coins now, and he wants to store them in a chest (he is a pirate after all). Dick can construct a rectangular chest with integer dimensions of any size up to a specified maximum size for the top but with an arbitrary integer height. Now he needs a place to hide the chest. While exploring the island, he found the perfect solution.\\n\\n\\t\\t\\t\\t\\tDick will hide his chest by submerging it in a murky pond. The pond has a rectangular surface, and it completely fills the bottom of a valley that has high vertical rocky walls. Dick surveyed the pond and knows its depth for each of the squares of a Cartesian coordinate grid system placed on the pond surface. When Dick submerges the chest, it will sink as far as possible until it touches the bottom. The top of the chest will remain parallel to the pond\\u2019s surface and the chest will be aligned with the grid squares. The water displaced by the submerged chest will raise the level of the pond\\u2019s surface (this will occur even if there is no space around the chest for the displaced water to rise). The walls of the valley are high enough that the water can never splash out of the valley. Of course, since the chest must be invisible, its top must be strictly below the surface of the pond. Your job is to find the volume of the largest chest that Pirate Dick can hide this way.\\n\\n\\t\\t\\t\\t\\tIn Figure I.1, the leftmost image shows a pond, the middle image shows a possible placement of a chest of volume 3, and the rightmost image shows a placement of a chest of volume 4, which is the maximum possible volume. Note that if the second chest were made one unit taller, its top would be visible because it would be at exactly the same height as the surface of the water.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tFigure I.1: Illustration of Sample Input 1.\\n\\t\\t\\t\\t\",\n    \"id\": 2263,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. A test case starts with a line containing four integers a, b, m, and n (1 \\u2264 a, b, m, n \\u2264 500). The pond\\u2019s surface dimensions are m \\u00d7 n and the maximum size of the top (and bottom) of the chest is a \\u00d7 b. In addition, a and b are small enough that it is not possible to cover the entire pond with a chest with top size a \\u00d7 b. Each of the remaining m lines in a test case contains n integers di,j specifying the pond\\u2019s depth at grid square (i, j), where 0 \\u2264 di,j \\u2264 109 for each 1 \\u2264 i \\u2264 m and 1 \\u2264 j \\u2264 n.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Pirate Chest\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the maximum volume of a rectangular chest with integer dimensions (where one of the dimensions of the top is bounded by a and the other is bounded by b) that can be completely submerged below the surface of the pond. If no chest can be hidden in the pond, display 0.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 15.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2013 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAnatoly Cheng McDougal is a typical student in many ways. Whenever possible he tries to cut and paste code instead of writing it from scratch. Unavoidably this approach causes him problems. For example, when he first learned about preorder, inorder and postorder traversals of trees, and was given code for a preorder print of a tree (shown on the left below), he simply cut and pasted the code, then moved the print statement to the correct location and renamed the procedure. However, he forgot to rename the procedure calls inside the code, resulting in the defective inorder print and postorder print code shown below.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tAt this point, Anatoly did not behave like a typical student. He actually tested his code! Unfortunately, when the results were not correct, he reverted back to typical student behavior. He panicked and started randomly changing calls in all three procedures, hoping to get things right. Needless to say, the situation became even worse now than when he started.\\n\\n\\t\\t\\t\\t\\tAnatoly\\u2019s professor tested the code on a random tree of characters. When she looked at the output of his three print routines, she correctly guessed what had happened. However, instead of going directly to his code, she decided to try to reconstruct Anatoly\\u2019s code just by observing the output. In order to do this, she correctly made the following assumptions:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tThe output statement in each print routine is in the correct location (for example, between the two recursive calls in the inPrint routine).\\n\\t\\t\\t\\t\\t\\tAmong the six recursive calls made by the three routines, exactly two calls are to prePrint, exactly two are to inPrint, and exactly two are to postPrint, though potentially in the wrong routines.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tSoon the professor realized that reconstructing Anatoly\\u2019s code and the test tree from his output was not a simple task and that the result might be ambiguous. You will have to help her find all possible reconstructions of Anatoly\\u2019s code. In addition, for each such reconstruction, you are to find the alphabetically first tree (as described in the output section) giving the observed output.\\n\\t\\t\\t\\t\",\n    \"id\": 2265,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. A test case consists of three strings on three separate lines: the observed output of Anatoly\\u2019s prePrint, inPrint and postPrint routines (in that order) on some test tree. Each of these strings consists of n uppercase letters (4 \\u2264 n \\u2264 26), with no repeated letters in any string. The test case is guaranteed to have at least one solution.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Up a Tree\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay all possible reconstructions for the test case, ordered as described in the last paragraph below. The output for each reconstruction consists of two parts. The first part is a single line and describes the six calls in Anatoly\\u2019s routines: first the two (recursive) calls in Anatoly\\u2019s prePrint routine, followed by the calls in his inPrint routine, and finally the calls in his postPrint routine. The calls are described by the words Pre, In, and Post, separated by spaces. For example, if Anatoly\\u2019s routines were correct, the resulting output of the first part of the reconstruction would be Pre Pre In In Post Post.\\n\\n\\t\\t\\t\\t\\tThe second part consists of three lines and describes the first test tree that could have generated the observed outputs. The first line is the correct preorder print of the tree, and the second and third lines contain the correct inorder and postorder prints, respectively. The first tree is the one with the alphabetically first preorder print. If there are multiple such trees, the first of these is the one with the alphabetically first inorder print.\\n\\n\\t\\t\\t\\t\\tEvery reconstruction is a sequence of 6 tokens chosen from Pre, In, and Post. The ordering of reconstructions is lexicographic with respect to the following ordering of tokens: Pre < In < Post.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2014 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAn airline has two flights leaving at about the same time from ICPCity, one to city B and one to city A. The airline also has n counters where passengers check their baggage. At each counter there is a pair of identical baggage bins, one for city B and one for city A.\\n\\n\\t\\t\\t\\t\\tJust before the flights depart, each pair of baggage bins is moved by a motorized cart to a sorting area. The cart always moves two bins at a time, one for city B and one for city A. After all the bins have been moved, they line up in the sorting area like this:\\n\\n\\t\\t\\t\\t\\tB A B A B A ... B A\\n\\n\\t\\t\\t\\t\\tThat is, there are 2n baggage bins in a row, starting with a bin for city B, then one for city A, and so forth. The task now is to reorder them so all the baggage bins for city A precede the baggage bins for city B. Then the bins can be loaded on the appropriate aircraft.\\n\\n\\t\\t\\t\\t\\tThe reordering is done by moving pairs of adjacent baggage bins (not necessarily B then A), again via the motorized cart. For proper balance, the cart must always carry two bins, never just one. A pair of bins must always be moved to an empty space that is at least two bins wide. On the left of the first bin are some empty spaces that can be used as needed during the reordering.\\n\\n\\t\\t\\t\\t\\tWhen the reordering process begins, the bin locations are numbered from 1 (initially containing the leftmost B baggage bin) to 2n (initially containing the rightmost A baggage bin). There are 2n initially empty spaces to the left of the bins, numbered from 0 to \\u22122n + 1, as shown in Figure A.1 for the case n = 4.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tFigure A.1: Initial configuration of bins and empty spaces for n = 4\\n\\n\\t\\t\\t\\t\\tGiven n, find a shortest sequence of moves that will reorder the bins so that all the A bins are to the left of all the B bins. At the end of the process, it is possible that the leftmost A bin is at some location other than 1, but the bins must be adjacent in a sequence of 2n locations.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2266,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case, which consists of the integer n (3 \\u2264 n \\u2264 100).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Baggage\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay a shortest sequence of moves that will correctly reorder the bins. Each move is of the form \\u201cf to t\\u201d, where f and t are integers representing the movement of the bins in locations f and f + 1 to locations t and t + 1. If multiple solutions are possible, display any one of them.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2014 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tWherever there is large-scale construction, you will find cranes that do the lifting. One hardly ever thinks about what marvelous examples of engineering cranes are: a structure of (relatively) little weight that can lift much heavier loads. But even the best-built cranes may have a limit on how much weight they can lift.\\n\\n\\t\\t\\t\\t\\tThe Association of Crane Manufacturers (ACM) needs a program to compute the range of weights that a crane can lift. Since cranes are symmetric, ACM engineers have decided to consider only a cross section of each crane, which can be viewed as a polygon resting on the x-axis.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tFigure C.1: Crane cross section\\n\\n\\t\\t\\t\\t\\tFigure C.1 shows a cross section of the crane in the first sample input. Assume that every 1 \\u00d7 1 unit of crane cross section weighs 1 kilogram and that the weight to be lifted will be attached at one of the polygon vertices (indicated by the arrow in Figure C.1). Write a program that determines the weight range for which the crane will not topple to the left or to the right.\\n\\t\\t\\t\\t\",\n    \"id\": 2268,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. The test case starts with a single integer n (3 \\u2264 n \\u2264 100), the number of points of the polygon used to describe the crane\\u2019s shape. The following n pairs of integers xi , yi (\\u22122 000 \\u2264 xi \\u2264 2 000, 0 \\u2264 yi \\u2264 2 000) are the coordinates of the polygon points in order. The weight is attached at the first polygon point and at least two polygon points are lying on the x-axis.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Crane Balancing\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the weight range (in kilograms) that can be attached to the crane without the crane toppling over. If the range is [a, b], display [a] .. [b]. For example, if the range is [1.5, 13.3], display 1 .. 14. If the range is [a, \\u221e), display [a] .. inf. If the crane cannot carry any weight, display unstable instead.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2014 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJay runs a small carnival that has various rides and attractions. Unfortunately, times are tough. A recent roller coaster accident, flooding in the restrooms, and an unfortunate clown incident have given Jay\\u2019s carnival a bad reputation with the public. With fewer paying customers and reduced revenue, he will need to cut some costs to stay in business.\\n\\n\\t\\t\\t\\t\\tOne of the biggest carnival attractions is a large, confusing maze. It consists of a variety of circular rooms connected by narrow, twisting corridors. Visitors love getting lost in it and trying to map it out. It has come to Jay\\u2019s attention that some of the rooms might be effectively identical to each other. If that\\u2019s the case, he will be able to reduce its size without anyone noticing.\\n\\n\\t\\t\\t\\t\\tTwo rooms A and B are effectively identical if, when you are dropped into either room A or B (and you know the map of the maze), you cannot tell whether you began in A or B just by exploring the maze. The corridor exits are evenly spaced around each room, and you cannot mark or leave anything in a room (in particular, you cannot tell whether you have previously visited it). The only identifying feature that rooms have is their number of exits. Corridors are also twisty enough to be indistinguishable from each other, but when you enter a room you know which corridor you came from, so you can navigate a little by using the order they appear around the room.\\n\\n\\t\\t\\t\\t\\tJay has appealed to the Association for Carnival Mazery for help. That\\u2019s you! Write a program to determine all the sets of effectively identical rooms in the maze.\\n\\t\\t\\t\\t\",\n    \"id\": 2270,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. The first line contains an integer n, the number of rooms in the maze (1 \\u2264 n \\u2264 100). Rooms are numbered from 1 to n. Following this are n lines, describing each room in order. Each line consists of an integer k, indicating that this room has k corridors (0 \\u2264 k < 100), and then k distinct integers listing the rooms each corridor connects to (in clockwise order, from an arbitrary starting point). Rooms do not connect to themselves.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Maze Reduction\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay one line for each maximal set of effectively identical rooms (ignoring sets of size 1) containing the room numbers in the set in increasing order. Order the sets by their smallest room numbers. If there are no such sets, display 'none' instead.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2016 World Finals  Thailand\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYulia works for a metal processing plant in Ekaterinburg. This plant processes ores mined in the Ural mountains, extracting precious metals such as chalcopyrite, platinum and gold from the ores. Every month the plant receives n shipments of unprocessed ore. Yulia needs to partition these shipments into two groups based on their similarity. Then, each group is sent to one of two ore processing buildings of the plant.\\n\\n\\t\\t\\t\\t\\tTo perform this partitioning, Yulia first calculates a numeric distance d(i, j) for each pair of shipments 1 \\u2264 i \\u2264 n and 1 \\u2264 j \\u2264 n, where the smaller the distance, the more similar the shipments i and j are. For a subset S \\u2286 {1, . . . , n} of shipments, she then defines the disparity D of S as the maximum distance between a pair of shipments in the subset, that is,\\n\\n\\t\\t\\t\\t\\t$$D(S) = \\\\ _{i,j\\\\in S}^{max}d(i,j)$$\\n\\n\\t\\t\\t\\t\\tYulia then partitions the shipments into two subsets A and B in such a way that the sum of their disparities D(A) + D(B) is minimized. Your task is to help her find this partitioning.\\n\\t\\t\\t\\t\",\n    \"id\": 2272,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. The first line contains an integer n (1 \\u2264 n \\u2264 200) indicating the number of shipments. The following n \\u2212 1 lines contain the distances d(i, j). The ith of these lines contains n \\u2212 i integers and the jth integer of that line gives the value of d(i, i + j). The distances are symmetric, so d(j, i) = d(i, j), and the distance of a shipment to itself is 0. All distances are integers between 0 and 109 (inclusive).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Metal Processing Plant\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the minimum possible sum of disparities for partitioning the shipments into two groups.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2014 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAs you know, the ACM ICPC is not the only major sporting event taking place in Russia this year. Several months ago, the 2014 Winter Olympics were held in Sochi, which is about 3 000 km from Ekaterinburg.\\n\\n\\t\\t\\t\\t\\tIn an increasing number of sports, it is not only the ability of the athletes that determines who wins a competition but also their equipment. For example in downhill skiing, having the latest ski technology enables athletes to increase their speeds and improve their turning ability.\\n\\n\\t\\t\\t\\t\\tYou have been hired to determine the effect of the latest ski technology on the ability of skiers to navigate a downhill course. The course contains several target locations, and the skier wants to pass over as many of them as possible. Naturally, the better the ski technology, the easier it will be to do this.\\n\\n\\t\\t\\t\\t\\tFor simplicity, use a two-dimensional coordinate system where the skier starts at position (0,0) and where \\u201cdownhill\\u201d corresponds to the direction of the positive y-axis.\\n\\n\\t\\t\\t\\t\\tAssume the y-component of the athlete\\u2019s velocity is a constant vy. The athlete can change speed laterally (in the x-direction), but the skiing equipment limits this to a maximal lateral acceleration amax. The skier starts with a lateral velocity of 0.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tFigure J.1: Downhill ski path passing over three targets\\n\\n\\t\\t\\t\\t\\tIn Figure J.1 (which corresponds to the first sample input), the optimal path passes over three out of four possible targets. If amax were smaller, then the skier might be able to pass over only two or fewer of the targets.\\n\\t\\t\\t\\t\",\n    \"id\": 2275,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains a single test case. The first line contains three integers n, vy, and amax (0 \\u2264 n \\u2264 250, 0 \\u2264 vy \\u2264 105 and 0 \\u2264 amax \\u2264 107 ), where n is the number of targets, vy is the y-component of the skier\\u2019s velocity, and amax is the maximum lateral acceleration. Here vy is given in meters per hour and amax in meters per hour squared.\\n\\n\\t\\t\\t\\t\\tFollowing this are n lines, each containing two integers xi and yi (\\u2212105 \\u2264 xi , yi \\u2264 105 ). These give the coordinates of each target to be visited on the course. All coordinates are given in meters. Targets are numbered 1, 2, ..., n in the order they are given.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Skiing\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the maximal-length sequence of targets that the athlete could pass over on the course in a single run. Display the targets in the order they are visited. If there are multiple maximal-length sequences, display only the lexicographically first one. (So the sequence 2 15 would come before the sequence 10 15.) If the athlete cannot pass over any targets, print 'Cannot visit any targets' instead.\\n\\n\\t\\t\\t\\t\\tTo ensure floating-point stability, you may assume the answer will not change if amax is perturbed by up to 0.1.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2014 World Finals  Russian Federation\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe International Corporation for Protection and Control (ICPC) develops efficient technology for, well, protection and control. Naturally, they are keen to have their own headquarters protected and controlled. Viewed from above, the headquarters building has the shape of a convex polygon. There are several suitable places around it where cameras can be installed to monitor the building. Each camera covers a certain range of the polygon sides (building walls), depending on its position. ICPC wants to minimize the number of cameras needed to cover the whole building.\\n\\t\\t\\t\\t\",\n    \"id\": 2276,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single test case. Its first line contains two integers n and k (3 \\u2264 n \\u2264 106 and 1 \\u2264 k \\u2264 106 ), where n is the number of walls and k is the number of possible places for installing cameras. Each of the remaining k lines contains two integers ai and bi (1 \\u2264 ai , bi \\u2264 n). These integers specify which walls a camera at the ith place would cover. If ai \\u2264 bi then the camera covers each wall j such that ai \\u2264 j \\u2264 bi . If ai > bi then the camera covers each wall j such that ai \\u2264 j \\u2264 n or 1 \\u2264 j \\u2264 bi .\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Surveillance\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the minimal number of cameras that suffice to cover each wall of the building. The ranges covered by two cameras may overlap. If the building cannot be covered, display 'impossible' instead.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2015 World Finals  Morocco\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tFatima Cynara is an analyst at Amalgamated Artichokes (AA). As with any company, AA has had some very good times as well as some bad ones. Fatima does trending analysis of the stock prices for AA, and she wants to determine the largest decline in stock prices over various time spans. For example, if over a span of time the stock prices were 19, 12, 13, 11, 20 and 14, then the largest decline would be 8 between the first and fourth price. If the last price had been 10 instead of 14, then the largest decline would have been 10 between the last two prices.\\n\\n\\t\\t\\t\\t\\tFatima has done some previous analyses and has found that the stock price over any period of time can be modelled reasonably accurately with the following equation:\\n\\n\\t\\t\\t\\t\\tprice(k) = p \\u00b7 (sin(a \\u00b7 k + b) + cos(c \\u00b7 k + d) + 2)\\n\\n\\t\\t\\t\\t\\twhere p, a, b, c and d are constants. Fatima would like you to write a program to determine the largest price decline over a given sequence of prices. Figure A.1 illustrates the price function for Sample Input 1. You have to consider the prices only for integer values of k.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tFigure A.1: Sample Input 1. The largest decline occurs from the fourth to the seventh price.\\n\\t\\t\\t\\t\",\n    \"id\": 2278,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line containing 6 integers p (1 \\u2264 p \\u2264 1 000), a, b, c, d (0 \\u2264 a, b, c, d \\u2264 1 000) and n (1 \\u2264 n \\u2264 106 ). The first 5 integers are described above. The sequence of stock prices to consider is price(1), price(2), . . . , price(n).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Amalgamated Artichokes\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the maximum decline in the stock prices. If there is no decline, display the number 0. Your output should have an absolute or relative error of at most 10\\u22126.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2015 World Finals  Morocco\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe year is 2115. The asteroid communication relay system was set up a decade ago by the Asteroid Communication Ministry. It is running fine except for one small problem \\u2013 there are too many asteroids! The smaller ones not only keep interfering with the signals from the relay stations but they are also a danger to all the maintenance aircrafts that fly between the stations. These small asteroids must be destroyed! The Interplanetary Coalition to Prevent Catastrophes (ICPC) has been charged with removing these dangerous asteroids and has hired an elite team of hot-shot pilots for the job. Han Duo is the captain of this team of asteroid destroyers. Armed with his missiles, Han flies through the asteroid belt blowing up any asteroid that the ICPC deems a nuisance.\\n\\n\\t\\t\\t\\t\\tThe ICPC is having some unfortunate budgetary problems. One result of this is that Han and his team do not have as many missiles as they would like, so they cannot blow up all the troublesome asteroids. But the asteroids are small and the missiles are powerful. So if two asteroids are near each other and line up properly, it is possible to take out both with a single missile.\\n\\n\\t\\t\\t\\t\\tHan\\u2019s screen displays asteroids as non-rotating two-dimensional simple convex polygons, each of which moves at a fixed velocity. He has decided that the best time to hit two asteroids is when the overlap of the two polygons is at a maximum. For example, Figure B.1, which illustrates Sample Input 1, shows two asteroids and snapshots of their subsequent positions at 1-second intervals. The two asteroids start touching after 3 seconds and the maximum overlap area occurs between 4 and 5 seconds.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tFigure B.1: Sample Input 1. Two asteroids with crossing paths.\\n\\n\\t\\t\\t\\t\\tCalculating when the maximum overlap occurs for two asteroids requires a bit of programming, but unfortunately Han slept through most of his coding classes at the flight academy. This is where you come in.\\n\\t\\t\\t\\t\",\n    \"id\": 2279,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of two asteroid specifications. Each has the form n x1 y1 x2 y2 . . . xn yn vx vy where n (3 \\u2264 n \\u2264 10) is the number of vertices, each xi , yi (\\u221210 000 \\u2264 xi , yi \\u2264 10 000) are the coordinates of a vertex of the asteroid on Han\\u2019s screen given in clockwise order, and vx, vy (\\u2212100 \\u2264 vx, vy \\u2264 100) are the x and y velocities (in units/second) of the asteroid. The xi , yi values specify the location of each asteroid at time t = 0, and the polygons do not intersect or touch at this time. The maximum length of any side of an asteroid is 500. All numbers in the input are integers.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Asteroids\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the time in seconds when the two polygons have maximum intersection, using the earliest such time if there is more than one. If the two polygons never overlap but touch each other, treat it as an intersection where the common area is zero and display the earliest such time. If the polygons never overlap or touch, display never instead. You should consider positive times only. Your output should have an absolute or relative error of at most 10\\u22123 .\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2015 World Finals  Morocco\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\n\\n\\n\\t\\t\\t\\t\\tPaul owns a catering company and business is booming. The company has k catering teams, each in charge of one set of catering equipment. Every week, the company accepts n catering requests for various events. For every request, they send a catering team with their equipment to the event location. The team delivers the food, sets up the equipment, and instructs the host on how to use the equipment and serve the food. After the event, the host is responsible for returning the equipment back to Paul\\u2019s company.\\n\\n\\t\\t\\t\\t\\tUnfortunately, in some weeks the number of catering teams is less than the number of requests, so some teams may have to be used for more than one event. In these cases, the company cannot wait for the host to return the equipment and must keep the team on-site to move the equipment to another location. The company has an accurate estimate of the cost to move a set of equipment from any location to any other location. Given these costs, Paul wants to prepare an Advance Catering Map to service the requests while minimizing the total moving cost of equipment (including the cost of the first move), even if that means not using all the available teams. Paul needs your help to write a program to accomplish this task. The requests are sorted in ascending order of their event times and they are chosen in such a way that for any i < j, there is enough time to transport the equipment used in the ith request to the location of the jth request.\\n\\t\\t\\t\\t\",\n    \"id\": 2280,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains two integers n (1 \\u2264 n \\u2264 100) and k (1 \\u2264 k \\u2264 100) which are the number of requests and the number of catering teams, respectively. Following that are n lines, where the ith line contains n \\u2212 i + 1 integers between 0 and 1 000 000 inclusive. The jth number in the ith line is the cost of moving a set of equipment from location i to location i + j. The company is at location 1 and the n requests are at locations 2 to n + 1.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Catering\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the minimum moving cost to service all requests. (This amount does not include the cost of moving the equipment back to the catering company.)\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2015 World Finals  Morocco\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tOf course you have all heard of the International Cheese Processing Company. Their machine for cutting a piece of cheese into slices of exactly the same thickness is a classic. Recently they produced a machine able to cut a spherical cheese (such as Edam) into slices \\u2013 no, not all of the same thickness, but all of the same weight! But new challenges lie ahead: cutting Swiss cheese.\\n\\n\\t\\t\\t\\t\\tSwiss cheese such as Emmentaler has holes in it, and the holes may have different sizes. A slice with holes contains less cheese and has a lower weight than a slice without holes. So here is the challenge: cut a cheese with holes in it into slices of equal weight.\\n\\n\\t\\t\\t\\t\\tBy smart sonar techniques (the same techniques used to scan unborn babies and oil fields), it is possible to locate the holes in the cheese up to micrometer precision. For the present problem you may assume that the holes are perfect spheres.\\n\\n\\t\\t\\t\\t\\tEach uncut block has size 100\\u00d7100\\u00d7100 where each dimension is measured in millimeters. Your task is to cut it into s slices of equal weight. The slices will be 100 mm wide and 100 mm high, and your job is to determine the thickness of each slice.\\n\\t\\t\\t\\t\",\n    \"id\": 2281,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input contains two integers n and s, where 0 \\u2264 n \\u2264 10 000 is the number of holes in the cheese, and 1 \\u2264 s \\u2264 100 is the number of slices to cut. The next n lines each contain four positive integers r, x, y, and z that describe a hole, where r is the radius and x, y, and z are the coordinates of the center, all in micrometers.\\n\\n\\t\\t\\t\\t\\tThe cheese block occupies the points (x, y, z) where 0 \\u2264 x, y, z \\u2264 100 000, except for the points that are part of some hole. The cuts are made perpendicular to the z axis.\\n\\n\\t\\t\\t\\t\\tYou may assume that holes do not overlap but may touch, and that the holes are fully contained in the cheese but may touch its boundary.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Cutting Cheese\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the s slice thicknesses in millimeters, starting from the end of the cheese with z = 0. Your output should have an absolute or relative error of at most 10\\u22126.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2015 World Finals  Morocco\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIt is 2178, and alien life has been discovered on a distant planet. There seems to be only one species on the planet and they do not reproduce as animals on Earth do. Even more amazing, the genetic makeup of every single organism is identical!\\n\\n\\t\\t\\t\\t\\tThe genetic makeup of each organism is a single sequence of nucleotides. The nucleotides come in three types, denoted by \\u2018A\\u2019 (Adenine), \\u2018C\\u2019 (Cytosine), and \\u2018M\\u2019 (Muamine). According to one hypothesis, evolution on this planet occurs when a new nucleotide is inserted somewhere into the genetic sequence of an existing organism. If this change is evolutionarily advantageous, then organisms with the new sequence quickly replace ones with the old sequence.\\n\\n\\t\\t\\t\\t\\tIt was originally thought that the current species evolved this way from a single, very simple organism with a single-nucleotide genetic sequence, by way of mutations as described above. However, fossil evidence suggests that this might not have been the case. Right now, the research team you are working with is trying to validate the concept of \\u201cparallel evolution\\u201d \\u2013 that there might actually have been two evolutionary paths evolving in the fashion described above, and eventually both paths evolved to the single species present on the planet today. Your task is to verify whether the parallel evolution hypothesis is consistent with the genetic material found in the fossil samples gathered by your team.\\n\\t\\t\\t\\t\",\n    \"id\": 2282,\n    \"input\": \"\\t\\t\\t\\t\\tThe input begins with a number n (1 \\u2264 n \\u2264 4 000) denoting the number of nucleotide sequences found in the fossils. The second line describes the nucleotide sequence of the species currently living on the planet. Each of the next n lines describes one nucleotide sequence found in the fossils.\\n\\n\\t\\t\\t\\t\\tEach nucleotide sequence consists of a string of at least one but no more than 4 000 letters. The strings contain only upper-case letters A, C, and M. All the nucleotide sequences, including that of the currently live species, are distinct.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Evolution in Parallel\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay an example of how the nucleotide sequences in the fossil record participate in two evolutionary paths. The example should begin with one line containing two integers s1 and s2, the number of nucleotide sequences in the fossil record that participate in the first path and second path, respectively. This should be followed by s1 lines containing the sequences attributed to the first path, in chronological order (from the earliest), and then s2 lines containing the sequences attributed to the second path, also in chronological order. If there are multiple examples, display any one of them. If it is possible that a sequence could appear in the genetic history of both species, your example should assign it to exactly one of the evolutionary paths.\\n\\n\\t\\t\\t\\t\\tIf it is impossible for all the fossil material to come from two evolutionary paths, display the word impossible.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2015 World Finals  Morocco\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tHow many keystrokes are necessary to type a text message? You may think that it is equal to the number of characters in the text, but this is correct only if one keystroke generates one character. With pocketsize devices, the possibilities for typing text are often limited. Some devices provide only a few buttons, significantly fewer than the number of letters in the alphabet. For such devices, several strokes may be needed to type a single character. One mechanism to deal with these limitations is a virtual keyboard displayed on a screen, with a cursor that can be moved from key to key to select characters. Four arrow buttons control the movement of the cursor, and when the cursor is positioned over an appropriate key, pressing the fifth button selects the corresponding character and appends it to the end of the text. To terminate the text, the user must navigate to and select the Enter key. This provides users with an arbitrary set of characters and enables them to type text of any length with only five hardware buttons.\\n\\n\\t\\t\\t\\t\\tIn this problem, you are given a virtual keyboard layout and your task is to determine the minimal number of strokes needed to type a given text, where pressing any of the five hardware buttons constitutes a stroke. The keys are arranged in a rectangular grid, such that each virtual key occupies one or more connected unit squares of the grid. The cursor starts in the upper left corner of the keyboard and moves in the four cardinal directions, in such a way that it always skips to the next unit square in that direction that belongs to a different key. If there is no such unit square, the cursor does not move.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tFigure F.1: Sample Input 1. An example virtual keyboard and hardware buttons.\\n\\n\\t\\t\\t\\t\\tFigure F.1, illustrating Sample Input 1, shows a possible way to type CONTEST using 30 strokes on an example virtual keyboard. The red dots represent the virtual keys where the select button was pressed.\\n\\t\\t\\t\\t\",\n    \"id\": 2283,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input contains two integers r and c (1 \\u2264 r, c \\u2264 50), giving the number of rows and columns of the virtual keyboard grid. The virtual keyboard is specified in the next r lines, each of which contains c characters. The possible values of these characters are uppercase letters, digits, a dash, and an asterisk (representing Enter). There is only one key corresponding to any given character. Each key is made up of one or more grid squares, which will always form a connected region. The last line of the input contains the text to be typed. This text is a non-empty string of at most 10 000 of the available characters other than the asterisk.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Keyboarding\",\n    \"output\": \"\\t\\t\\t\\t\\tDisplay the minimal number of strokes necessary to type the whole text, including the Enter key at the end. It is guaranteed that the text can be typed.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy ICPC 2015 World Finals  Morocco\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tYour hometown has hired some contractors \\u2013 including you! \\u2013 to manage its municipal pipe network. They built the network, at great expense, to supply Flubber to every home in town. Unfortunately, nobody has found a use for Flubber yet, but never mind. It was a Flubber network or a fire department, and honestly, houses burn down so rarely, a fire department hardly seems necessary.\\n\\n\\t\\t\\t\\t\\tIn the possible event that somebody somewhere decides they want some Flubber, they would like to know how quickly it will flow through the pipes. Measuring its rate of flow is your job.\\n\\n\\t\\t\\t\\t\\tYou have access to one of the pipes connected to the network. The pipe is l meters long, and you can start the flow of Flubber through this pipe at a time of your choosing. You know that it flows with a constant real-valued speed, which is at least v1 meters/second and at most v2 meters/second. You want to estimate this speed with an absolute error of at most t/2 meters/second.\\n\\n\\t\\t\\t\\t\\tUnfortunately, the pipe is opaque, so the only thing you can do is to knock on the pipe at any point along its length, that is, in the closed real-valued range [0, l]. Listening to the sound of the knock will tell you whether or not the Flubber has reached that point. You are not infinitely fast. Your first knock must be at least s seconds after starting the flow, and there must be at least s seconds between knocks.\\n\\n\\t\\t\\t\\t\\tDetermine a strategy that will require the fewest knocks, in the worst case, to estimate how fast the Flubber is flowing. Note that in some cases the desired estimation might be impossible (for example, if the Flubber reaches the end of the pipe too quickly).\\n\\t\\t\\t\\t\",\n    \"id\": 2284,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of multiple test cases. The first line of input contains an integer c (1 \\u2264 c \\u2264 100), the number of test cases. Each of the next c lines describes one test case. Each test case contains the five integers l, v1, v2, t and s (1 \\u2264 l, v1, v2, t, s \\u2264 109 and v1 < v2), which are described above.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Pipe Stream\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, display the minimal number of knocks required to estimate the flow speed in the worst case. If it might be impossible to measure the flow speed accurately enough, display impossible instead.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIn information theory, the Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different. In another way, it measures the minimum number of substitutions required to change one string into the other, or the minimum number of errors that could have transformed one string into the other.\\n\\nThe Hamming distance is named after Richard Hamming, who introduced it in his fundamental paper on Hamming codes Error detecting and error correcting codes in 1950.\\n\\nIt is used in telecommunication to count the number of flipped bits in a fixed-length binary word as an estimate of error, and therefore is sometimes called the signal distance. Hamming weight analysis of bits is used in several disciplines including information theory, coding theory, and cryptography.\\n\\nFor example , the binary representation of 910 is 10012 and 1010 is 10102 therefore distance Hamming between them is 2 because you only need to switch the last two bits 10012 to turn in 10102.\\n\\nYour task is , given two positive integers , calculate the Hamming distance between them.\\n\\t\\t\\t\\t\",\n    \"id\": 2289,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases . Each test case is composed of two positive integers in decimal base X and Y (0 \\u2264 X, Y < 264) provided on a single line. The input ends when X=Y=0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Hamming Distance\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output has a line per test case containing the Hamming distance of binary representations of X and Y.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tYou will be given an array of N numbers, where everyone will be in pairs. But two of those numbers ended up without peer, these numbers are said apaixornados numbers, you can identify what are that numbers?\\n\\nFor example, A = {1, 1, 3, 3, 5, 5, 5,7}, the apaixornados numbers are 5 and 7.\\n\\t\\t\\t\\t\",\n    \"id\": 2290,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case is composed of a line having an integer N (1 \\u2264 N \\u2264 105), followed by N numbers (-1012 < A < 1012). The input ends when N = 0 and it should not to be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Apaixornados Numbers\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case print only the apaixornados numbers in ascending order. It is guaranteed that only two numbers are alone.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tPerfect numbers are numbers that are equal to the sum of its divisors , excluding himself. Based on this concept, divine numbers are numbers that are equal to the sum of the sum of each divisor of which number from 1 to N.\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFor example , 15 is the fourth divine number because\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1 is the sum of divisors of 1 ,\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t3 is the sum of the divisors of 2,\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t4 is the sum of the divisors 3 ,\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t7 is the sum of divisors of 4 ,\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand 15 = 1 + 3 + 4 + 7 .\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tGiven a number N find the Nth Divine number.\\n\\t\\t\\t\\t\",\n    \"id\": 2291,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases . Each test case contains a single integer N (1 \\u2264 N \\u2264 106) which corresponds to the Divine order number as specified. The input ends when N = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Divine Numbers\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output consists of one line per test case containing the Nth Divine number.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tIn Nlogonia are made LED panels for christmas that work like fairy lights. Those panels are composed of N lamps placed horizontally side to side. And those panels have an especific behavior: soon as it is plugged, some lamps light up instantly . After that the lamp placed at the extreme left (the first one) switches between on and off after each flash. All the other lamps switch if the one placed at it's left turns off.\\nVitor, a boy who lives in Nlogonia, has a big curiosity and wants to know if given the number of switches of the first lamp, what is the panel's final configuration.\\n\\t\\t\\t\\t\",\n    \"id\": 2292,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input\\u00a0 contains a integer number N that especifies the quantity of test cases. Then the following N lines contains each one a P (1 \\u2264  |P|  \\u2264 60) string that represents the first configuration of the panel lamps. The lighted up lamps are represented by a character 'O' and the lighted off are represented by a 'X'. In the same line will have an integer number C (1 \\u2264 C \\u2264 1018) that represents the amount of changes of the first lamp.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"LED Panel\",\n    \"output\": \"\\t\\t\\t\\t\\tThe outputs consists in one line per test case that has the final configuration after the first switches of the first lamp.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2005  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tMinhocas s\\u00e3o muito importantes para a agricultura e como insumo para produ\\u00e7\\u00e3o de ra\\u00e7\\u00e3o animal. A Organiza\\u00e7\\u00e3o para Bioengenharia de Minhocas (OBM) \\u00e9\\u00a0uma entidade n\\u00e3o governamental que promove o aumento da produ\\u00e7\\u00e3o, utiliza\\u00e7\\u00e3o e exporta\\u00e7\\u00e3o de minhocas.\\r\\n\\r\\n\\t\\t\\t\\t\\tUma das atividades promovidas pela OBM \\u00e9 a manuten\\u00e7\\u00e3o de uma fazenda experimental para pesquisa de novas tecnologias de cria\\u00e7\\u00e3o de minhocas. Na fazenda, a \\u00e1rea destinada \\u00e0s pesquisas \\u00e9 de formato retangular, dividida em c\\u00e9lulas quadradas de mesmo tamanho. Em cada c\\u00e9lula \\u00e9 criada apenas uma esp\\u00e9cie de minhoca. As c\\u00e9lulas s\\u00e3o utilizadas para testar os efeitos, sobre a produ\\u00e7\\u00e3o de minhocas, de varia\\u00e7\\u00f5es de esp\\u00e9cies de minhoca, de tipos de terra, de adubo, de umidade, etc. Os pesquisadores da OBM mant\\u00eam um acompanhamento constante do desenvolvimento das minhocas em cada c\\u00e9lula, e t\\u00eam uma estimativa extremamente precisa da produtividade de cada uma das c\\u00e9lulas.\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tUm pesquisador da OBM inventou e construiu uma m\\u00e1quina colhedeira de minhocas, e quer test\\u00e1- la na fazenda. A m\\u00e1quina tem a largura de uma c\\u00e9lula, e em uma passada pelo terreno de uma c\\u00e9lula colhe todas as minhocas dessa c\\u00e9lula, separando-as, limpando-as e empacotando-as. Ou seja, a m\\u00e1quina eliminara uma das etapas mais intensivas de m\\u00e3o de obra no processo de produ\\u00e7\\u00e3o de minhocas. A m\\u00e1quina, por\\u00e9m, ainda est\\u00e1 em desenvolvimento e tem uma restri\\u00e7\\u00e3o: n\\u00e3o faz curvas, podendo movimentar-se somente em linha reta.\\r\\n\\r\\n\\t\\t\\t\\t\\tDecidiu-se ent\\u00e3o que seria efetuado um teste com a m\\u00e1quina, de forma a colher o maior n\\u00famero poss\\u00edvel de minhocas em uma unica passada, em linha reta, de lado a lado do campo de minhocas. Ou seja, a m\\u00e1quina deve colher todas as minhocas de uma \\u2018coluna\\u2019 ou de uma \\u2018linha\\u2019 de c\\u00e9lulas do campo de minhocas (a linha ou coluna cuja soma das produtividades esperadas das c\\u00e9lulas \\u00e9 a maior poss\\u00edvel).\\r\\n\\r\\n\\t\\t\\t\\t\\tEscreva um programa que, fornecido o mapa do campo de minhocas, descrevendo a produtividade estimada em cada c\\u00e9lula, calcule o n\\u00famero esperado total de minhocas a serem colhidas pela m\\u00e1quina durante o teste, conforme descrito acima.\\n\\t\\t\\t\",\n    \"id\": 2293,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois n\\u00fameros inteiros N e M, representando respectivamente o n\\u00famero de linhas (1 \\u2264 N \\u2264\\u00a0100) e o n\\u00famero de colunas (1 \\u2264 M \\u2264 100) de c\\u00e9lulas existentes no campo experimental de minhocas. Cada uma das N linhas seguintes cont\\u00e9m M inteiros, representando as produtividades estimadas das c\\u00e9lulas correspondentes a uma linha do campo de minhocas.\\r\\n\\r\\nA entrada deve ser lida do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Campo de Minhocas\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda deve ser composta por uma unica linha contendo um inteiro, indicando o n\\u00famero esperado total de minhocas a serem colhidas pela m\\u00e1quina durante o teste.\\r\\n\\r\\nA sa\\u00edda deve ser escrita no dispositivo de sa\\u00edda padr\\u00e3o (normalmente a tela).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2005  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tGugo, o duende, ficou preso em uma caverna e precisa sair o mais rapidamente poss\\u00edvel. A caverna \\u00e9\\u00a0formada por sal\\u00f5es interligados por t\\u00faneis, na forma de uma grade retangular, com N linhas e M colunas. Alguns dos sal\\u00f5es da caverna t\\u00eam paredes de cristal. Duendes, como todos sabem, n\\u00e2o gostam de ficar em ambientes com qualquer tipo de cristal, pois seus organismos entram em resson\\u00e2ncia com a estrutura de cristais, e em casos extremos os duendes podem at\\u00e9\\u00a0mesmo explodir. Compreensivelmente, Gugo n\\u00e3o quer entrar em nenhum sal\\u00e3o com parede de cristal.\\r\\n\\r\\n\\t\\t\\t\\t\\tA figura abaixo mostra uma caverna com quatro linhas e cinco colunas de sal\\u00f5es; os sal\\u00f5es cinza t\\u00eam paredes de cristal. posi\\u00e7\\u00e3o inicial de Gugo \\u00e9\\u00a0indicada com um caractere \\u2018*\\u2019.\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tVoc\\u00ea\\u00a0deve escrever um programa que, dadas a configura\\u00e7\\u00e3o da caverna e a posi\\u00e7\\u00e3o inicial de Gugo dentro da caverna, calcule qual o n\\u00famero m\\u00ednimo de sal\\u00f5es pelos quais o duende deve passar antes de sair da caverna (n\\u00e3o contando o sal\\u00e3o em que o duende est\\u00e1\\u00a0inicialmente), mas contando o sal\\u00e3o que tem sa\\u00edda para o exterior).\\n\\t\\t\\t\\t\",\n    \"id\": 2294,\n    \"input\": \"\\t\\t\\t\\t\\tA caverna ser\\u00e1\\u00a0modelada como uma matriz de duas dimens\\u00f5es, cujos elementos representam os sal\\u00f5es. Um sal\\u00e3o que n\\u00e3o tem parede de cristal e que tem sa\\u00edda para o exterior da caverna \\u00e9\\u00a0representado pelo valor 0; um sal\\u00e3o que n\\u00e3o tem parede de cristal e n\\u00e3o tem sa\\u00edda para o exterior \\u00e9\\u00a0representado pelo valor 1; um sal\\u00e3o que tem parede de cristal \\u00e9\\u00a0representado pelo valor 2; e o sal\\u00e3o em que o duende est\\u00e1\\u00a0inicialmente (que n\\u00e3o tem sa\\u00edda para o exterior e nem paredes de cristal) \\u00e9\\u00a0representado pelo valor 3. A figura abaixo mostra a representa\\u00e7\\u00e3o da caverna apresentada acima.\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois n\\u00fameros inteiros N e M que indicam respectivamente o n\\u00famero de linhas (1 \\u2264 N \\u2264 10) e o n\\u00famero de colunas (1 \\u2264 M \\u2264 10) da representa\\u00e7\\u00e3o da caverna. Cada uma das N linhas seguintes cont\\u00e9m M n\\u00fameros inteiros Ci , descrevendo os sal\\u00f5es da caverna e a posi\\u00e7\\u00e3o inicial do duende (0 \\u2264 Ci \\u2264 3). Voc\\u00ea\\u00a0pode supor que sempre h\\u00e1\\u00a0um trajeto que leva Gugo \\u00e0\\u00a0sa\\u00edda da caverna.\\r\\n\\r\\n\\t\\t\\t\\t\\tA entrada deve ser lida do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Duende Perdido\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha na sa\\u00edda, contendo um n\\u00famero inteiro representando a quantidade m\\u00ednima de sal\\u00f5es pelos quais Gugo deve passar antes de conseguir sair da caverna (n\\u00e3o contando o sal\\u00e3o em que ele est\\u00e1\\u00a0inicialmente, mas contando o sal\\u00e3o que tem sa\\u00edda para o exterior).\\r\\n\\r\\nA sa\\u00edda deve ser escrita no dispositivo de sa\\u00edda padr\\u00e3o (normalmente a tela).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2005  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA Companhia de T\\u00e1xi Tabajara (CTT) \\u00e9\\u00a0uma das maiores empresas de transporte do pa\\u00eds. Possui uma vasta frota de carros e opera em todas as grandes cidades. Recentemente a CTT modernizou a sua frota, adquirindo um lote de 500 carros bi-combust\\u00edveis (carros que podem utilizar como combust\\u00edvel tanto \\u00e1lcool quanto gasolina). Al\\u00e9m do maior conforto para os passageiros e o menor gasto com manuten\\u00e7\\u00e3o, com os novos carros \\u00e9\\u00a0poss\\u00edvel uma redu\\u00e7\\u00e3o adicional de custo: como o pre\\u00e7o da gasolina est\\u00e1\\u00a0sujeito a varia\\u00e7\\u00f5es muito bruscas e pode ser vantagem, em certos momentos, utilizar \\u00e1lcool como combust\\u00edvel. Entretanto, os carros possuem um melhor desempenho utilizando gasolina, ou seja, em geral, um carro percorre mais quil\\u00f4metros por litro de gasolina do que por litro de \\u00e1lcool.\\r\\n\\r\\nVoc\\u00ea\\u00a0deve escrever um programa que, dados o pre\\u00e7o do litro de \\u00e1lcool, o pre\\u00e7o do litro de gasolina e os quil\\u00f4metros por litro que um carro bi-combust\\u00edvel realiza com cada um desses combust\\u00edveis, determine se \\u00e9\\u00a0mais econ\\u00f4mico abastecer os carros da CTT com \\u00e1lcool ou com gasolina. No caso de n\\u00e3o haver diferen\\u00e7a de custo entre abastecer com \\u00e1lcool ou gasolina a CTT prefere utilizar gasolina.\\n\\t\\t\\t\\t\",\n    \"id\": 2295,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9\\u00a0composta por uma linha contendo quatro n\\u00fameros reais com precis\\u00e3o de duas casas decimais A e\\u00a0G (0.01 \\u2264 A, G  \\u2264 10.00)\\u00a0Ra e Rg (0.01 \\u2264\\u00a0Ra\\u00a0,\\u00a0Rg \\u2264 20.00)\\u00a0representando respectivamente o pre\\u00e7o por litro do \\u00e1lcool, o pre\\u00e7o\\u00a0por litro da gasolina, o rendimento (km/l) do carro utilizando \\u00e1lcool e o rendimento (km/l) do carro utilizando gasolina.\\r\\n\\r\\nA entrada deve ser lida do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Frota de T\\u00e1xi\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda deve ser composta por uma \\u00fanica linha contendo o caractere \\u2018A\\u2019 se \\u00e9\\u00a0mais econ\\u00f4mico abastecer a frota com \\u00e1lcool ou o caractere \\u2018G\\u2019 se \\u00e9\\u00a0mais econ\\u00f4mico ou indiferente abastecer a frota com gasolina.\\r\\n\\r\\nA sa\\u00edda deve ser escrita no dispositivo de sa\\u00edda padr\\u00e3o (normalmente a tela).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2005  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tNos finais de semana Paulo faz longas caminhadas pelas bonitas trilhas que atravessam as matas vizinhas \\u00e0\\u00a0sua cidade. Recentemente Paulo adquiriu um aparelho de GPS (siglas do ingl\\u00eas Sistema de Posicionamento Global) e com ele mapeou as mais belas trilhas da regi\\u00e3o. Paulo programou o GPS para armazenar, a intervalos regulares, a altitude do ponto corrente durante o trajeto. Assim, ap\\u00f3s percorrer as trilhas com o seu GPS, Paulo tem informa\\u00e7\\u00f5es que permitem por exemplo produzir gr\\u00e1ficos como os abaixo:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tPaulo tem uma nova namorada, e quer convenc\\u00ea-la a passear junto com ele pelas trilhas. Para o primeiro passeio juntos, Paulo quer escolher uma trilha \\u201cf\\u00e1cil\\u201d. Segundo o seu crit\\u00e9rio, a trilha mais f\\u00e1cil \\u00e9\\u00a0a que, em um dos sentidos do percurso, exige o menor esfor\\u00e7o de subida. O esfor\\u00e7o exigido em um trecho de subida \\u00e9\\u00a0proporcional ao desn\\u00edvel do trecho.\\r\\n\\r\\n\\t\\t\\t\\t\\tDadas as informa\\u00e7\\u00f5es colhidas por Paulo sobre dist\\u00e2ncias e altitudes de um conjunto de trilhas, voc\\u00ea\\u00a0deve escrever um programa que determine qual \\u00e9\\u00a0a trilha que exige o menor esfor\\u00e7o de subida.\\n\\t\\t\\t\\t\",\n    \"id\": 2296,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um n\\u00famero inteiro N que indica o n\\u00famero de trilhas. Cada uma das N linhas seguintes cont\\u00e9m a descri\\u00e7\\u00e3o de uma trilha (1 \\u2264 N \\u2264 100). As trilhas s\\u00e3o identificadas por n\\u00fameros de 1 a N. A ordem em que as trilhas aparecem na entrada determina os seus identificadores (a primeira trilha \\u00e9\\u00a0a de n\\u00famero 1, a segunda a de n\\u00famero 2, a \\u00faltima a de n\\u00famero N). A descri\\u00e7\\u00e3o de uma trilha inicia com um n\\u00famero inteiro M que indica a quantidade de pontos de medi\\u00e7\\u00e3o da trilha (2 \\u2264 M \\u2264 1000), seguido de M n\\u00fameros inteiros Hi\\u00a0(0 \\u2264 Hi \\u2264 1000) representando a altura dos pontos da trilha (medidos a intervalos regulares e iguais para todas as linhas). Paulo pode percorrer a trilha em qualquer sentido (ou seja, partindo do ponto de altitude H1 em dire\\u00e7\\u00e3o ao ponto de altitude HM, ou partindo do ponto de altitude HM em dire\\u00e7\\u00e3o ao ponto de altitude H1).\\r\\n\\r\\nA entrada deve ser lida do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Trilhas\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha na sa\\u00edda, contendo um n\\u00famero inteiro representando o identificador da melhor trilha, conforme determinado pelo seu programa. Em caso de empate entre duas ou mais trilhas, imprima a de menor identificador.\\r\\n\\r\\nA sa\\u00edda deve ser escrita no dispositivo de sa\\u00edda padr\\u00e3o (normalmente a tela).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2005  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\u00c1lbuns de figurinhas \\u2013 sejam de times de futebol, princesas ou super-her\\u00f3is \\u2013 t\\u00eam marcado gera\\u00e7\\u00f5es de crian\\u00e7as e adolescentes. Conseguir completar um \\u00e1lbum \\u00e9 uma tarefa muitas vezes \\u00e1rdua, envolvendo negocia\\u00e7\\u00f5es com colegas para a troca de figurinhas. Mas a exist\\u00eancia das figurinhas propicia uma outra brincadeira, que foi muito popular entre crian\\u00e7as no s\\u00e9culo passado: o jogo de bater figurinhas (o famoso \\u201cBafo\\u201d). O jogo \\u00e9 muito simples, mas divertido (e muito competitivo). No in\\u00edcio de uma partida, cada crian\\u00e7a coloca em uma pilha um certo n\\u00famero de figurinhas. Uma partida \\u00e9 composta de rodadas; a cada rodada as crian\\u00e7as batem com a m\\u00e3o sobre a pilha de figurinhas, tentando vir\\u00e1-las com o v\\u00e1cuo formado pelo movimento da m\\u00e3o. As crian\\u00e7as jogam em turnos, at\\u00e9 que a pilha de figurinhas esteja vazia. Ganha a partida a crian\\u00e7a que conseguir virar mais figurinhas.\\r\\n\\r\\nAldo e Beto est\\u00e3o jogando bafo com todas as suas figurinhas e pediram sua ajuda para calcular quem \\u00e9 o vencedor.\\r\\n\\r\\nVoc\\u00ea deve escrever um programa que, dada a quantidade de figurinhas que Aldo e Beto viraram em cada rodada, determine qual dos dois \\u00e9 o vencedor.\\n\\t\\t\\t\\t\",\n    \"id\": 2297,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 composta de v\\u00e1rios casos de teste, cada um correspondendo a uma partida entre Aldo e Beto. A primeira linha de um caso de teste cont\\u00e9m um n\\u00famero inteiro R\\u00a0(1 \\u2264 R \\u2264 1000) que indica quantas rodadas ocorreram na partida. Cada uma das R linhas seguintes cont\\u00e9m dois inteiros, A e B\\u00a0(0 \\u2264 A, B\\u00a0\\u2264 100), que correspondem, respectivamente, ao n\\u00famero de figurinhas que Aldo e Beto conseguiram virar naquela rodada. Em todos os casos de teste h\\u00e1 um \\u00fanico vencedor (ou seja, n\\u00e3o ocorre empate). O final da entrada \\u00e9 indicado por\\u00a0R = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Bafo\",\n    \"output\": \"\\t\\t\\t\\t\\tPara cada caso de teste da entrada, seu programa deve produzir tr\\u00eas linhas na sa\\u00edda. A primeira linha deve conter um identificador do caso de teste, no formato \\u201cTeste n\\u201d, onde n \\u00e9 numerado seq\\u00fcencialmente a partir de 1. A segunda linha deve conter o nome do vencedor (Aldo ou Beto). A terceira linha deve ser deixada em branco. A grafia mostrada no Exemplo de Sa\\u00edda, abaixo, deve ser seguida rigorosamente.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2005  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tMini-Poker \\u00e9 o nome de um jogo de cartas que \\u00e9 uma simplifica\\u00e7\\u00e3o de Poker, um dos mais famosos jogos de cartas do mundo. Mini-Poker \\u00e9 jogado com um baralho normal de 52 cartas, com quatro naipes (copas, paus, espadas e ouro), cada naipe compreendendo treze cartas (\\u00c1s, 2, 3, 4, 5, 6, 7, 8, 9, 10, Valete, Dama, Rei).\\r\\n\\r\\nNo in\\u00edcio do jogo, cada jogador recebe cinco cartas. O conjunto de cinco cartas vale um certo n\\u00famero de pontos, de acordo com as regras descritas abaixo. Diferentemente do jogo de Poker normal, em Mini-Poker o naipe das cartas \\u00e9 desconsiderado. Assim, para simplificar a descri\\u00e7\\u00e3o do jogo, vamos utilizar os n\\u00fameros de 1 a 13 para identificar as cartas do baralho, na ordem dada acima. Uma outra diferen\\u00e7a \\u00e9 que pode ocorrer empate entre mais de um vencedor; nesse caso os vencedores dividem o pr\\u00eamio.\\r\\n\\r\\nAs regras para pontua\\u00e7\\u00e3o em Mini-Poker s\\u00e3o as seguintes:\\r\\n\\r\\n\\r\\n\\tSe as cinco cartas est\\u00e3o em seq\\u00fc\\u00eancia a partir da carta x (ou seja, os valores das cartas s\\u00e3o x, x+1, x+2, x+3 e x+4), a pontua\\u00e7\\u00e3o \\u00e9 x+200 pontos. Por exemplo, se as cartas recebidas s\\u00e3o 10, 9, 8, 11 e 12, a pontua\\u00e7\\u00e3o \\u00e9 208 pontos.\\r\\n\\tSe h\\u00e1 quatro cartas iguais x (uma quadra, ou seja, os valores das cartas s\\u00e3o x, x, x, x e y), a pontua\\u00e7\\u00e3o \\u00e9 x+180 pontos. Por exemplo, se as cartas recebidas s\\u00e3o 1, 1, 1, 10 e 1, a pontua\\u00e7\\u00e3o \\u00e9 181 pontos.\\r\\n\\tSe h\\u00e1 tr\\u00eas cartas iguais x e duas outras cartas iguais y (uma trinca e um par, ou seja, os valores das cartas s\\u00e3o x, x, x, y e y), a pontua\\u00e7\\u00e3o \\u00e9 x + 160 pontos. Por exemplo, se as cartas recebidas s\\u00e3o 10, 4, 4, 10 e 4, a pontua\\u00e7\\u00e3o \\u00e9 164 pontos.\\r\\n\\tSe h\\u00e1 tr\\u00eas cartas iguais x e duas outras cartas diferentes y e z (uma trinca, ou seja, os valores das cartas s\\u00e3o x, x, x, y e z), a pontua\\u00e7\\u00e3o \\u00e9 x + 140 pontos. Por exemplo, se as cartas recebidas s\\u00e3o 2, 3, 2, 2 e 13, a pontua\\u00e7\\u00e3o \\u00e9 142 pontos.\\r\\n\\tSe h\\u00e1 duas cartas iguais x, duas outras cartas iguais y (x != y) e uma outra carta distinta z (dois pares, ou seja, os valores das cartas s\\u00e3o x, x, y, y e z), a pontua\\u00e7\\u00e3o \\u00e9\\u00a03 \\u00d7 x + 2 \\u00d7 y + 20\\u00a0pontos, em que x > y. Por exemplo, se as cartas recebidas s\\u00e3o 12, 7, 12, 8 e 7, a pontua\\u00e7\\u00e3o \\u00e9 70 pontos.\\r\\n\\tSe h\\u00e1 apenas duas cartas iguais x e as outras s\\u00e3o todas distintas (um par, ou seja, os valores das cartas s\\u00e3o x, x, y, z e t), a pontua\\u00e7\\u00e3o \\u00e9 x pontos. Por exemplo, se as cartas recebidas s\\u00e3o 12, 13, 5, 8 e 13, a pontua\\u00e7\\u00e3o \\u00e9 13 pontos.\\r\\n\\tSe todas as cartas s\\u00e3o distintas, n\\u00e3o h\\u00e1 pontua\\u00e7\\u00e3o.\\r\\n\\r\\n\\r\\nEscreva um programa que, fornecidas as cartas dadas a um jogador, calcule pontua\\u00e7\\u00e3o do jogador naquela jogada.\\n\\t\\t\\t\\t\",\n    \"id\": 2298,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 composta por v\\u00e1rios casos de teste, cada um correspondendo a uma jogada. A primeira linha da entrada cont\\u00e9m um inteiro N que indica o n\\u00famero de casos de teste (1 \\u2264 N \\u2264 100). Cada uma das N linhas seguintes cont\\u00e9m cinco n\\u00fameros inteiros C1,C2,C3,C4 e C5, representando as cinco cartas recebidas por um jogador (1 \\u2264 C1,C2,C3,C4,C5 \\u2264 13).\\r\\n\\r\\nA entrada deve ser lida do dispositivo de entrada padr\\u00e3o (normalmente o teclado)\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Mini-Poker\",\n    \"output\": \"\\t\\t\\t\\t\\tPara cada caso de teste da entrada, seu programa deve produzir tr\\u00eas linhas na sa\\u00edda. A primeira linha deve conter um identificador do caso de teste, no formato \\u201cTeste n\\u201d, onde n \\u00e9 numerado seq\\u00fcencialmente a partir de 1. A segunda linha deve conter a pontua\\u00e7\\u00e3o do jogador considerando as cinco cartas recebidas. A terceira linha deve ser deixada em branco. A grafia mostrada no Exemplo de Sa\\u00edda, abaixo, deve ser seguida rigorosamente.\\r\\n\\r\\nA sa\\u00edda deve ser escrita no dispositivo de sa\\u00edda padr\\u00e3o (normalmente a tela).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2005  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tCuca saiu para jogar futebol com os amigos e esqueceu do encontro que tinha com a namorada. Ciente da mancada, Cuca deseja elaborar um pedido especial de desculpas. Resolveu ent\\u00e3o enviar flores e usar o cart\\u00e3o da floricultura para escrever um pedido especial de desculpas.\\r\\n\\r\\nCuca buscou na internet um conjunto de frases bonitas contendo a palavra \\u2018desculpe\\u2019 (que pode ocorrer mais de uma vez na mesma frase). No entanto, o cart\\u00e3o da floricultura \\u00e9 pequeno, e nem todas as frases que Cuca colecionou poder\\u00e3o ser aproveitadas.\\r\\n\\r\\nCuca quer aproveitar o espa\\u00e7o do cart\\u00e3o, onde cabe um n\\u00famero limitado de caracteres, para escrever um sub-conjunto das frases coletadas de modo que apare\\u00e7a o m\\u00e1ximo de vezes poss\\u00edvel a palavra \\u2018desculpe\\u2019.\\r\\n\\r\\nEscreva um programa que, dados o n\\u00famero de caracteres que cabem no cart\\u00e3o e a quantidade de frases coletadas (com os respectivos comprimentos e os n\\u00fameros de ocorr\\u00eancias da palavra \\u2018desculpe\\u2019), determine o n\\u00famero m\\u00e1ximo de vezes que a palavra aparece, utilizando apenas as frases colecionadas, sem repet\\u00ed-las.\\n\\t\\t\\t\\t\",\n    \"id\": 2299,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 constitu\\u00edda de v\\u00e1rios casos de teste. A primeira linha de um caso de teste cont\\u00e9m dois n\\u00fameros inteiros C e F indicando respectivamente o comprimento do cart\\u00e3o em caracteres (8 \\u2264 C \\u2264 1000) e o n\\u00famero de frases coletadas (1 \\u2264\\u00a0\\u00a0F \\u226450). Cada uma das F linhas seguintes descreve uma frase coletada. A descri\\u00e7\\u00e3o \\u00e9 composta por dois inteiros N e D que indicam respectivamente o n\\u00famero de caracteres na frase (8 <= N <= 200) e quantas vezes a palavra \\u2018desculpe\\u2019 ocorre na frase (1 \\u2264 D \\u2264 25). O final da entrada \\u00e9 indicado por C = F = 0.\\r\\n\\r\\nA entrada deve ser lida do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Pedido de Desculpas\",\n    \"output\": \"\\t\\t\\t\\t\\tPara cada caso de teste seu programa deve produzir tr\\u00eas linhas na sa\\u00edda. A primeira identifica o conjunto de teste no formato \\u201cTeste n\\u201d, onde n \\u00e9 numerado a partir de 1. A segunda linha deve conter o m\\u00e1ximo n\\u00famero de vezes que a palavra \\u2018desculpe\\u2019 pode aparecer no cart\\u00e3o, considerando que apenas frases coletadas podem ser utilizadas, e cada frase n\\u00e3o \\u00e9 utilizada mais de uma vez. A terceira linha deve ser deixada em branco. A grafia mostrada no Exemplo de Sa\\u00edda, abaixo, deve ser seguida rigorosamente.\\r\\n\\r\\nA sa\\u00edda deve ser escrita no dispositivo de sa\\u00edda padr\\u00e3o (normalmente a tela).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2005  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tA distribui\\u00e7\\u00e3o de energia para as diversas regi\\u00f5es do pa\\u00eds exige um investimento muito grande em linhas de transmiss\\u00e3o e esta\\u00e7\\u00f5es transformadoras. Uma linha de transmiss\\u00e3o interliga duas esta\\u00e7\\u00f5es transformadoras. Uma esta\\u00e7\\u00e3o transformadora pode estar interligada a uma ou mais outras esta\\u00e7\\u00f5es transformadoras, mas devido ao alto custo n\\u00e3o pode haver mais de uma linha de transmiss\\u00e3o interligando duas esta\\u00e7\\u00f5es.\\r\\n\\r\\n\\t\\t\\t\\t\\tAs esta\\u00e7\\u00f5es transformadoras s\\u00e3o interconectadas de forma a garantir que a energia possa ser distribu\\u00edda entre qualquer par de esta\\u00e7\\u00f5es. Uma rota de energia entre duas esta\\u00e7\\u00f5es\\u00a0e1\\u00a0e\\u00a0ek\\u00a0\\u00e9 de\\ufb01nida como uma sequ\\u00eancia (e1\\u00a0, l1\\u00a0, e2\\u00a0, l2\\u00a0, ...ek\\u22121\\u00a0, lk\\u22121\\u00a0, ek\\u00a0) onde cada\\u00a0ei\\u00a0\\u00e9 uma esta\\u00e7\\u00e3o transformadora e cada li\\u00a0\\u00e9 uma linha de transmiss\\u00e3o que conecta\\u00a0ei\\u00a0ei+1.\\r\\n\\r\\n\\t\\t\\t\\t\\tOs engenheiros de manuten\\u00e7\\u00e3o do sistema de transmiss\\u00e3o de energia consideram que o sistema est\\u00e1 em estado normal se h\\u00e1 pelo menos uma rota entre qualquer par de esta\\u00e7\\u00f5es, e em estado de falha caso contr\\u00e1rio.\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tFigura 1: Dois exemplos de sistemas de transmiss\\u00e3o: (a) sistema em estado normal; (b) sistema em estado de falha.\\r\\n\\r\\n\\t\\t\\t\\t\\tUm grande tornado passou pelo pa\\u00eds dani\\ufb01cando algumas das linhas de transmiss\\u00e3o, e os engenheiros de manuten\\u00e7\\u00e3o do sistema de transmiss\\u00e3o de energia necessitam de sua ajuda.\\r\\n\\r\\n\\t\\t\\t\\t\\tDada a con\\ufb01gura\\u00e7\\u00e3o atual do sistema de transmiss\\u00e3o de energia, descrevendo as interconex\\u00f5es existentes entre as esta\\u00e7\\u00f5es, escreva um programa que determine o estado do sistema.\\n\\t\\t\\t\\t\",\n    \"id\": 2300,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 composta de v\\u00e1rios casos de teste. A primeira linha de um caso de teste cont\\u00e9m dois n\\u00fameros inteiros E e L indicando respectivamente o n\\u00famero de esta\\u00e7\\u00f5es\\u00a0(3 \\u2264 E \\u2264 100)\\u00a0e o n\\u00famero de linhas de transmiss\\u00e3o do sistema\\u00a0(E \\u2212 1 \\u2264 L \\u2264 E \\u00d7 (E \\u2212 1)/2)que continuam em funcionamento ap\\u00f3s o tornado. As esta\\u00e7\\u00f5es s\\u00e3o identi\\ufb01cadas por n\\u00fameros de 1 a E. Cada uma das L linhas seguintes cont\\u00e9m dois inteiros X e Y que indicam que existe uma linha de transmiss\\u00e3o interligando a esta\\u00e7\\u00e3o X \\u00e0 esta\\u00e7\\u00e3o Y. O \\ufb01nal da entrada \\u00e9 indicado por E = L = 0.\\r\\n\\r\\nA entrada deve ser lida do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Transmiss\\u00e3o de Energia\",\n    \"output\": \"\\t\\t\\t\\t\\tPara cada caso de teste seu programa deve produzir tr\\u00eas linhas na sa\\u00edda. A primeira identi\\ufb01ca o conjunto de teste no formato \\u201cTeste n\\u201d, onde n \\u00e9 numerado a partir de 1. A segunda linha deve conter a palavra \\u201cnormal\\u201d, se, para cada par de esta\\u00e7\\u00f5es, houver uma rota que as conecte, e a palavra \\u201cfalha\\u201d caso n\\u00e3o haja uma rota entre algum par de esta\\u00e7\\u00f5es. A terceira linha deve ser deixada em branco. A gra\\ufb01a mostrada no Exemplo de Sa\\u00edda, abaixo, deve ser seguida rigorosamente.\\r\\n\\r\\nA sa\\u00edda deve ser escrita no dispositivo de sa\\u00edda padr\\u00e3o (normalmente a tela).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2005  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tToda crian\\u00e7a certamente j\\u00e1 brincou de \\u201cvivo ou morto\\u201d. A brincadeira \\u00e9 dirigida por um \\u201cchefe\\u201d (um adulto), que comanda dois ou mais participantes (crian\\u00e7as). A brincadeira \\u00e9 composta de rodadas. No in\\u00edcio, os participantes s\\u00e3o organizados pelo chefe em fila \\u00fanica. A cada rodada o chefe grita \\u201cvivo\\u201d ou \\u201cmorto\\u201d e todos os participantes tentam seguir sua ordem, levantando-se ao ouvir a palavra \\u201cvivo\\u201d ou abaixando-se ao ouvir a palavra \\u201cmorto\\u201d. Um participante que n\\u00e3o segue a ordem do chefe \\u00e9 eliminado, deixando o seu lugar na fila. Os participantes remanescentes agrupam-se novamente em fila \\u00fanica, preenchendo as posi\\u00e7\\u00f5es dos participantes eliminados, mas mantendo suas posi\\u00e7\\u00f5es relativas. O jogo continua at\\u00e9 que uma rodada seja composta por exatamente um participante. Tal participante \\u00e9 dito o vencedor do jogo.\\r\\n\\r\\nPor exemplo, considere que a brincadeira inicie com cinco participantes, identificados por n\\u00fameros inteiros de 1 a 5, e que o chefe organize a fila na ordem m 3 \\u2192 2 \\u2192 1 \\u2192 4 \\u2192 5. Se na primeira rodada forem eliminados os participantes 2 e 4, a fila da segunda rodada ser\\u00e1 formada por 3 \\u2192 1 \\u2192 5; se na segunda rodada for eliminado o participante 1, a fila da terceira rodada ser\\u00e1 formada por 3 \\u2192 5. Se na terceira rodada o participante 3 for eliminado, o vencedor da brincadeira ser\\u00e1 o participante 5.\\r\\n\\r\\nSua tarefa \\u00e9 escrever um programa que determine o vencedor de uma partida de \\u201cvivo ou morto\\u201d, a partir da informa\\u00e7\\u00e3o das ordens dadas pelo chefe e das a\\u00e7\\u00f5es executadas pelos participantes em cada rodada.\\n\\t\\t\\t\\t\",\n    \"id\": 2301,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 constitu\\u00edda de v\\u00e1rios casos de teste, cada um representando uma partida. A primeira linha de um caso de teste cont\\u00e9m dois n\\u00fameros inteiros P e R indicando respectivamente a quantidade inicial de participantes (2 \\u2264 P \\u2264 100) e quantidade de rodadas da partida (1 \\u2264 R \\u2264 100). Os participantes s\\u00e3o identificados por n\\u00fameros de 1 a P. A segunda linha de um caso de teste descreve a fila organizada pelo chefe, contendo P n\\u00fameros inteiros distintos x1, x2, . . . xP , onde x1 representa o identificador do participante no primeiro lugar na fila, x2 representa o identificador do participante no segundo lugar na fila, e assim por diante (1 \\u2264 xi \\u2264 P). Cada uma das R linhas seguintes representa uma rodada, contendo um n\\u00famero inteiro inteiro N indicando o n\\u00famero de participantes da rodada (2 \\u2264 N \\u2264 P), um n\\u00famero inteiro inteiro J representando a ordem dada pelo chefe (0 \\u2264 J \\u2264 1) e N n\\u00fameros inteiros Ai representando a a\\u00e7\\u00e3o do participante colocado na i-\\u00e9sima posi\\u00e7\\u00e3o na fila (0 \\u2264 Ai \\u2264 1). Ordens e a\\u00e7\\u00f5es \\u201cvivo\\u201d s\\u00e3o representadas pelo valor 1, ordens e a\\u00e7\\u00f5es \\u201cmorto\\u201d pelo valor zero. Cada partida tem exatamente um vencedor, determinado somente na \\u00faltima rodada fornecida no caso de teste correspondente. O final da entrada \\u00e9 indicado por\\u00a0P = R = 0.\\r\\n\\r\\nA entrada deve ser lida do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Vivo ou Morto\",\n    \"output\": \"\\t\\t\\t\\t\\tPara cada caso de teste seu programa deve produzir tr\\u00eas linhas. A primeira identifica o conjunto de teste no formato \\u201cTeste n\\u201d, onde n \\u00e9 numerado a partir de 1. A segunda linha deve conter o identificador do vencedor. A terceira linha deve ser deixada em branco. A grafia mostrada no Exemplo de Sa\\u00edda, abaixo, deve ser seguida rigorosamente.\\r\\n\\r\\nA sa\\u00edda deve ser escrita no dispositivo de sa\\u00edda padr\\u00e3o (normalmente a tela).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2006  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA pol\\u00edcia desconfia que dois homens que passeiam todos os dias pelo parque s\\u00e3o na verdade criminosos. O parque \\u00e9\\u00a0plano, de formato retangular, e estreitas faixas de grama o dividem em quadrados de mesmo tamanho, formando uma grade de N por M quadrados.\\r\\n\\r\\nOs dois homens t\\u00eam um comportamento curioso e suspeito em seu passeio: ap\\u00f3s encontrarem-se, conversam durante um minuto, andam mudando rapidamente de lugar, passando a ocupar um novo quadrado do parque, conversam mais um minuto, andam novamente (mudando de quadrado), conversam mais um minuto, e assim sucessivamente. A cada minuto escolhem uma dire\\u00e7\\u00e3o (Norte, Sul, Leste ou Oeste) e andam at\\u00e9\\u00a0o quadrado imediatamente vizinho na dire\\u00e7\\u00e3o escolhida.\\r\\n\\r\\nTentando escutar trechos das conversas dos homens, a pol\\u00edcia instalou um pequeno microfone multi-direcional em um dos quadrados do parque. O microfone \\u00e9\\u00a0capaz de captar conversas realizadas no quadrado onde est\\u00e1\\u00a0instalado e em todos os quadrados imediatamente vizinhos.\\r\\n\\r\\nOs dois homens sempre iniciam o passeio no quadrado de coordenadas (0,0).\\r\\n\\r\\nDadas as coordenadas do microfone e a sequ\\u00eancia de movimentos que os dois homens realizaram durante seu passeio no parque, seu programa deve determinar quantos minutos de conversa foram captados pelo microfone.\\n\\t\\t\\t\\t\",\n    \"id\": 2302,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha cont\\u00e9m dois inteiros N e M que indicam respectivamente o n\\u00famero de linhas e o n\\u00famero de colunas do parque (0 \\u2264 N \\u2264 1000000 e 0 \\u2264 M \\u2264 1000000). A segunda linha cont\\u00e9m dois inteiros X e Y que indicam a coordenada do microfone em termos de linhas e colunas (0 \\u2264 X \\u2264 N e 0 \\u2264 Y \\u2264 M). A terceira linha cont\\u00e9m um inteiro K, indicando o n\\u00famero de quadrados pelos quais os dois homens passearam. A quarta linha cont\\u00e9m K inteiros, entre 1, 2, 34, que indicam a rota tomada pelos dois homens durante o passeio; cada inteiro indica a dire\\u00e7\\u00e3o tomada ao final de um minuto de conversa, com 1 representando o Norte, 2 representando o Sul, 3 representando o Leste e 4 representando o Oeste.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Conversa n\\u00e3o t\\u00e3o Secreta\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, uma \\u00fanica linha contendo um inteiro: o n\\u00famero de minutos de conversa\\u00e7\\u00e3o captados pelo microfone.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2006  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tLeopoldo \\u00e9\\u00a0gerente de uma planta\\u00e7\\u00e3o de flores da Associa\\u00e7\\u00e3o de Cultivo de Margaridas (ACM), um grupo que cultiva margaridas em grandes propriedades para abastecer floriculturas em grandes cidades.\\r\\n\\r\\nAs margaridas s\\u00e3o plantadas em vasos dispostos em linhas e colunas, formando uma esp\\u00e9cie de grade. Na planta\\u00e7\\u00e3o administrada por Leopoldo existem L linhas de vasos de margaridas, cada uma formada por C vasos. Para facilitar o gerenciamento, os vasos s\\u00e3o organizados em lotes de M linhas e N colunas de vasos, sendo que n\\u00e3o existem sobreposi\\u00e7\\u00f5es entre os lotes (n\\u00e3o existe nenhuma linha ou coluna comum a mais de um lote) e todos os lotes t\\u00eam exatamente M linhas e N colunas.\\r\\n\\r\\nA colheita \\u00e9\\u00a0sempre feita em um \\u00fanico lote, coletando-se todas as margaridas daquele lote que estejam prontas para a venda. Uma semana antes de fazer a colheita, os funcion\\u00e1rios da planta\\u00e7\\u00e3o analisaram cada vaso e anotaram quantas margaridas estar\\u00e3o prontas para venda na semana seguinte. Leopoldo agora precisa da sua ajuda para determinar qual o n\\u00famero m\\u00e1ximo de margaridas que poder\\u00e1\\u00a0ser colhido em um \\u00fanico lote de M \\u00d7 N vasos.\\r\\n\\r\\nSua tarefa \\u00e9\\u00a0escrever um programa que, dado um mapa da planta\\u00e7\\u00e3o contendo o n\\u00famero de margaridas prontas para venda em cada vaso, encontre qual o n\\u00famero m\\u00e1ximo de margaridas que podem ser colhidos por Leopoldo.\\n\\t\\t\\t\\t\",\n    \"id\": 2303,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha da entrada cont\\u00e9m quatro n\\u00fameros inteiros, L, C, M e N. L e C representam respectivamente o n\\u00famero de linhas (1 \\u2264 L \\u2264 1000) e de colunas (1 \\u2264 C \\u2264 1000) de vasos existentes na planta\\u00e7\\u00e3o. M e N representam respectivamente o n\\u00famero de linhas (1 \\u2264 M \\u2264 L) e de colunas (1 \\u2264 N \\u2264 C) dos lotes. As L linhas seguintes cont\\u00eam C inteiros cada, representando n\\u00famero de margaridas prontas para colheita no vaso localizado naquela linha e coluna. Note que L M e C N s\\u00e3o sempre inteiros, pois n\\u00e3o h\\u00e1\\u00a0linha ou coluna de vasos que perten\\u00e7a a mais de um lote.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Margaridas\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, uma \\u00fanica linha que cont\\u00e9m o n\\u00famero m\\u00e1ximo de margaridas que podem ser colhidos em um lote de M \\u00d7 N. Esse n\\u00famero n\\u00e3o pode ser superior a 1000000.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leonardo Fernandes, IFSC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tA volleyball coach would like to keep statistics about his team. In every game he keeps track of the number of services, blocks and attacks of each player, as well as how many of these services, blocks and attacks were successful (scored points). Your program must show, with two decimal points what is the total percentage of services, blocks and attacks by the whole team that were successful.\\n\\t\\t\\t\\t\",\n    \"id\": 2310,\n    \"input\": \"\\t\\t\\t\\t\\tInput starts with the number of players N (1 \\u2264 N \\u2264 100), followed by the names of each of these players. Below the name of each player, two rows of integers are presented. In the first row, the numbers represent the service, blocks and attack attempts (0 \\u2264 S,B,A \\u2264 10000) by the specific player. In the second row there is the number of these services, blocks and attacks (0 \\u2264 S1 \\u2264 S; 0 \\u2264 B1 \\u2264 B; 0 \\u2264 A1 \\u2264 A) that were successful.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Volleyball\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output must contain the total percentage of successful services, blocks and attacks by the whole team, with two digits after the decimal point, as shown in the example.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leonardo Fernandes, IFSC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tIn a given diving competition, each dive has a degree of difficulty and is evaluated by seven judges. After each jump, the judges, who don't communicate with each other, show their scores. A dive is evaluated between zero and ten by each judge. After the scores are presented, the highest and the lowest scores are discarded. The remaining scores are added and the sum is multiplied by the degree of difficulty of the dive, which is a number between 1.2 and 3.8 defined before the dive. So, for example, assuming a diver's jump has difficulty 2.0 and his scores are 6,0, 5,0, 5,0, 5,0, 5,0, 5,0 and 4,0. Discarding the highest and lowest scores, we get to a result of 25.0. This result is then multiplied by the degree of difficulty 2.0 for a final score of 50.0. You program must display the results of a competition following these rules.\\n\\t\\t\\t\\t\",\n    \"id\": 2311,\n    \"input\": \"\\t\\t\\t\\t\\tThe first row of input has the number of diversN (0 \\u2264 N \\u2264 100). Next, the name of each competitor is followed by the degree of difficulty D (1.2 \\u2264 D \\u2264 3.8) of the dive and, in the next line, the seven scores S1 to S7 (0 \\u2264 S1 to S7 \\u2264 10)given by the judges.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Diving\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output must show the results of the competition, with the name of each diver followed by the final score, in the order in which the data was input.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leonardo Fernandes, IFSC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tSomebody messed up the olympic medal table. Your program must put it back in the right order. The order of the countries in the medal table is given by the number of gold medals. If there's a tie in the number of gold medals, than the country with more silver medals win. If there's a tie in both gold and silver medals, the country with more bronze medals should be above. If two or more nations tie in the three kinds of medals, your program must show them in alphabetic order.\\n\\t\\t\\t\\t\",\n    \"id\": 2312,\n    \"input\": \"\\t\\t\\t\\t\\tInput is the number of participating nations N (0 \\u2264 N \\u2264 500), followed by the list of countries and their gold G (0 \\u2264 G \\u2264 10000), silver S (0 \\u2264 S \\u2264 10000) and bronze B (0 \\u2264 B \\u2264 10000) medals.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Medal Table\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput should be the list of countries and their gold, silver and bronze medals shown in the specified order.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Alexandre A. Melo, IFSC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tGiven three values, find out if they form a triangle. If so, check if the triangle is scalene, isoceles or equilateral and if it is a triangle rectangle or not.\\n\\t\\t\\t\\t\",\n    \"id\": 2313,\n    \"input\": \"\\t\\t\\t\\t\\tInput is given by three integers A,B e C (0 < A,B,C < 105).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Which Triangle\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output must be the one single line containing the string \\\"Invalido\\\" if the input values do not represent a triangle.\\n\\nIf the values can be the sides of a triangle the output must be \\\"Valido-Equilatero\\\" if such triangle is equilateral, \\\"Valido-Escaleno\\\" if it is scalene or \\\"Valido-Isoceles\\\" if it is isoceles. The next line of output must read \\\"Retangulo: S\\\" if the triangle is rectangle or \\\"Retangulo: N\\\" otherwise, as shown in the examples.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Erick Seo, FATEC-SP  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tNishi is a college freshman in computer science, a lover of C language and has likes to program all of code in just one line. Lucius, his teacher, fortnightly send an EP (Exercise Project) and deducts 10% of the note every wrong indentation. Afraid of failing in PL (Programming Language), Nishi need your help to write a program that indents the code automatically.\\n\\n\\n\\n- He uses only the operation commands learned (if, else, for, while, switch) and functions, defines, printf, scanf;\\n\\n- There is no variable with similar command names;\\n\\n- \\u2018;\\u2019 is guaranteed only in \\u201cfor\\u201d\\u00a0 and at the end of the commands based on syntax used in C;\\n\\nWrong command example:\\n\\nprintf(\\u201c;\\u201d);\\n\\nRigth command example:\\n\\nfor(i=0;i<10;i++){printf(\\u201cHello World\\u201d);}\\n\\n- Ternary operator is not used;\\n\\nIndentation patterns:\\n\\n\\u00a0 - Every command (if, else, for, while, switch) starts with '{' in the next line, and ends with '}'in the next line, even if you have a single command; (mind the line break after '}')\\n\\nExample:\\n\\nif(1)\\n\\n{\\n\\n....printf(\\u201cHello World\\\\n\\u201d);\\n\\n}\\n\\n- All content whithin the key opening and closing should have a tab to the right, the rule applies to the sub-keys too;\\n\\t\\t\\t\\t\",\n    \"id\": 2314,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry contains various functions and ends with EOF. Each line can be up to 2000 characters (0 <C<2000). The inputs follow the above criteria.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Indenter\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output should follow the indentation (made with four dots \\\"....\\\") according to Nishi standards, the last '}' of the whole block is terminated with a line break, as the model below.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leonardo Fernandes, IFSC  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYour program must read two dates (day and month) and calculate the difference between them, in days. Consider it's a regular year (february has 28 days).\\n\\t\\t\\t\\t\",\n    \"id\": 2315,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has two rows with two integers each, representing day and month of the first and second dates. The first date is always smaller than or equal to the second.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Easy Difference Between Dates\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output is the number of days between the first and second date.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2006  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tSeu Diniz possui uma pista de autorama profissional. Nessa pista a marca\\u00e7\\u00e3o de tempo \\u00e9\\u00a0feita com sensores que fazem leitura da passagem de cada cada carrinho pelo ponto onde o sensor est\\u00e1\\u00a0instalado. K sensores s\\u00e3o distribu\\u00eddos ao longo da pista nos chamados postos de checagem.\\r\\n\\r\\nDurante uma corrida, os carrinhos devem passar pelos postos de checagem na ordem pr\\u00e9-estabelecida, ou seja, primeiro no posto de checagem 1, depois no 2, at\\u00e9\\u00a0o posto de checagem K, quando ele deve retornar ao posto de checagem 1 para completar uma volta. Entretanto, \\u00e0s vezes, quando os carrinhos saem da pista os competidores os recolocam mais \\u00e0\\u00a0frente na pista, pulando alguns postos de checagem. Nesse caso, todas as passagens daquele carrinho por postos de checagem devem ser ignoradas at\\u00e9\\u00a0que ele passe pelo posto de checagem correto.\\r\\n\\r\\nA posi\\u00e7\\u00e3o de um carrinho na corrida \\u00e9\\u00a0determinada pelo n\\u00famero de postos de checagem que ele passou na ordem correta. Caso dois carrinhos tenham passado pelo mesmo n\\u00famero de postos de checagem, a ordem utilizada \\u00e9\\u00a0a ordem cronol\\u00f3gica, ou seja, est\\u00e1\\u00a0mais \\u00e0\\u00a0frente o carrinho que passou pelo \\u00faltimo posto de checagem primeiro.\\r\\n\\r\\nA pista de autorama do Seu Diniz possui um computador central que recebe os sinais lidos pelos sensores, mas ainda n\\u00e3o possui um programa que permita determinar a posi\\u00e7\\u00e3o dos carrinhos ao final da corrida.\\r\\n\\r\\nEscreva um programa que, dado uma lista de leituras feitas pelos sensores, determine a classifica\\u00e7\\u00e3o dos carrinhos na corrida.\\n\\t\\t\\t\\t\",\n    \"id\": 2316,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha da entrada cont\\u00eam tr\\u00eas inteiros, K, N e M. K representa o n\\u00famero de postos de checagem (1 \\u2264 K \\u2264 100), N o n\\u00famero de carrinhos (1 \\u2264 N \\u2264 100) e M o n\\u00famero de leituras feitas pelos sensores (1 \\u2264 M \\u2264 10000). Os carrinhos s\\u00e3o identificados por inteiros de 1 a N e os postos de checagem por inteiros de 1 a K. As M linhas seguintes cont\\u00eam cada uma dois inteiros X e Y, separados por espa\\u00e7o. Eles indicam que o carrinho n\\u00famero X (1 \\u2264 X \\u2264 N) passou pelo posto de checagem Y (1 \\u2264 Y \\u2264 K). Os eventos s\\u00e3o apresentados na ordem cronol\\u00f3gica. Sempre \\u00e9\\u00a0poss\\u00edvel determinar a classifica\\u00e7\\u00e3o de todos os pilotos com os dados fornecidos.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Autorama\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, uma linha contendo N inteiros, sendo que o i-\\u00e9simo inteiro representa o carrinho que ocupa a posi\\u00e7\\u00e3o i na corrida. Ou seja, o primeiro inteiro \\u00e9\\u00a0o que ocupa o primeiro lugar, o segundo inteiro \\u00e9\\u00a0o carrinho que ocupa o segundo lugar, e assim por diante.\\r\\n\\r\\nCada inteiro I contendo o n\\u00famero do carrinho que ocupa a posi\\u00e7\\u00e3o de n\\u00famero I na corrida: o primeiro colocado ocupa a posi\\u00e7\\u00e3o de n\\u00famero 1, o segundo colocado a posi\\u00e7\\u00e3o de n\\u00famero 2, etc.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2006  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tNa fazenda do Sr. Amarante existe um certo n\\u00famero de ovelhas. Enquanto elas est\\u00e3o dormindo profundamente, alguns lobos famintos tentam invadir a fazenda e atacar as ovelhas. Ovelhas normais ficariam indefesas diante de tal amea\\u00e7a, mas felizmente as ovelhas do Sr. Amarante s\\u00e3o praticantes de artes marciais e conseguem defender-se adequadamente.\\r\\n\\r\\nA fazenda possui um formato retangular e consiste de campos arranjados em linhas e colunas. Cada campo pode conter uma ovelha (representada pela letra \\u2018k\\u2019), um lobo (letra \\u2018v\\u2019), uma cerca (s\\u00edmbolo \\u2018#\\u2019) ou simplesmente estar vazio (s\\u00edmbolo \\u2018.\\u2019). Consideramos que dois campos pertencem a um mesmo pasto se podemos ir de um campo ao outro atrav\\u00e9s de um caminho formado somente com movimentos horizontais ou verticais, sem passar por uma cerca. Na fazenda podem existir campos vazios que n\\u00e3o pertencem a nenhum pasto. Um campo vazio n\\u00e3o pertence a nenhum pasto se \\u00e9\\u00a0poss\\u00edvel \\u201cescapar\\u201d da fazenda a partir desse campo (ou seja, caso exista um caminho desse campo at\\u00e9\\u00a0a borda da fazenda).\\r\\n\\r\\nDurante a noite, as ovelhas conseguem combater os lobos que est\\u00e3o no mesmo pasto, da seguinte forma: se em um determinado pasto houver mais ovelhas do que lobos, as ovelhas sobrevivem e matam todos os lobos naquele pasto. Caso contr\\u00e1rio, as ovelhas daquele pasto s\\u00e3o comidas pelos lobos, que sobrevivem. Note que caso um pasto possua o mesmo n\\u00famero de lobos e ovelhas, somente os lobos sobreviver\\u00e3o, j\\u00e1\\u00a0que lobos s\\u00e3o predadores naturais, ao contr\\u00e1rio de ovelhas.\\r\\n\\r\\nEscreva um programa que, dado um mapa da fazenda do Sr. Amarante indicando a posi\\u00e7\\u00e3o das cercas, ovelhas e lobos, determine quantas ovelhas e quantos lobos estar\\u00e3o vivos na manh\\u00e3\\u00a0seguinte.\\n\\t\\t\\t\\t\",\n    \"id\": 2317,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha da entrada cont\\u00e9m dois inteiros R e C que indicam o n\\u00famero de linhas (3 \\u2264 R \\u2264 250) e de colunas (3 \\u2264 C \\u2264 250) de campos da fazenda. Cada uma das R linhas seguintes cont\\u00e9m C caracteres, representando o cont\\u00e9udo do campo localizado naquela linha e coluna (espa\\u00e7o vazio, cerca, ovelha ou lobo).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Lobo Mau\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, uma \\u00fanica linha, contendo dois inteiros, sendo que o primeiro representa o n\\u00famero de ovelhas e o segundo representa o n\\u00famero de lobos que ainda est\\u00e3o vivos na manh\\u00e3\\u00a0seguinte.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2006  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tSenhor Coelho \\u00e9\\u00a0conhecido mundialmente pela fabrica\\u00e7\\u00e3o de quadrados m\\u00e1gicos de dimens\\u00f4es 3 \\u00d7 3. Um quadrado \\u00e9\\u00a0chamado m\\u00e1gico quando a soma dos elementos de uma determinada linha, coluna ou diagonal \\u00e9\\u00a0sempre igual.\\r\\n\\r\\nInfelizmente, assaltantes invadiram recentemente a oficina do Sr. Coelho e roubaram alguns dos n\\u00fameros de seus quadrados m\\u00e1gicos. Felizmente os meliantes n\\u00e3o conseguiram roubar mais do que 3 n\\u00fameros de cada quadrado. Desesperado, pois devia entregar os quadrados naquele dia, o Sr. Coelho veio procurar a sua ajuda para tentar completar os quadrados com os n\\u00fameros faltantes.\\r\\n\\r\\nEscreva um programa que, dado um quadrado m\\u00e1gico com alguns n\\u00fameros faltando, determine qual era o quadrado m\\u00e1gico original.\\n\\t\\t\\t\\t\",\n    \"id\": 2318,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A entrada cont\\u00e9m tr\\u00eas linhas, cada uma contendo tr\\u00eas inteiros N (0 \\u2264 N \\u2264 20000). O n\\u00famero zero representa os digitos que foram roubados. Existem no m\\u00e1ximo tr\\u00eas n\\u00fameros zero na entrada.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Quadrado M\\u00e1gico\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, tr\\u00eas linhas, cada uma contendo tr\\u00eas inteiros, descrevendo a configura\\u00e7\\u00e3o original do quadrado m\\u00e1gico.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2006  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA Sra. Bastos \\u00e9\\u00a0uma elaboradora de passatempos matem\\u00e1ticos e pediu para que voc\\u00ea\\u00a0criasse um programa que conseguisse jogar de forma eficiente a sua mais nova cria\\u00e7\\u00e3o.\\r\\n\\r\\nO jogo consiste em um tabuleiro formado por casas dispostas em N linhas por N colunas. Cada casa cont\\u00e9m um inteiro n\\u00e3o-negativo. No come\\u00e7o do jogo, uma pe\\u00e7a \\u00e9\\u00a0colocada na casa localizada no canto superior esquerdo, ou seja, na posi\\u00e7\\u00e3o (1,1). O objetivo do jogo \\u00e9\\u00a0mover a pe\\u00e7a at\\u00e9\\u00a0a casa localizada no canto inferior direito (posi\\u00e7\\u00e3o (N,N)) somente movendo um \\u00fanico quadrado para baixo ou para a direita em cada passo. Al\\u00e9m disso, a pe\\u00e7a n\\u00e3o pode ser colocada em nenhum quadrado que contenha o n\\u00famero zero.\\r\\n\\r\\nO custo do caminho utilizado para percorrer o tabuleiro corresponde ao produto de todos os n\\u00fameros das casas percorridos no caminho. A penalidade \\u00e9\\u00a0definida utilizando a representa\\u00e7\\u00e3o decimal do custo, sendo representada pelo n\\u00famero de d\\u00edgitos zeros, contados da direita para a esquerda, antes do primeiro d\\u00edgito diferente de zero. Por exemplo, um custo igual a 501000 tem penalidade 3, e um custo igual a 501 tem penalidade zero.\\r\\n\\r\\nO objetivo do jogo \\u00e9\\u00a0conseguir chegar \\u00e0\\u00a0casa (N,N) atrav\\u00e9s de um caminho \\u201cotimizado\\u201d. Dizemos que o caminho foi otimizado se a penalidade for m\\u00ednima.\\r\\n\\r\\nEscreva um programa que, dado um tabuleiro, determine a penalidade do custo otimizado.\\n\\t\\t\\t\\t\",\n    \"id\": 2319,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha da entrada cont\\u00e9m um inteiro N que indica o n\\u00famero de linhas e colunas do tabuleiro (1 \\u2264 N \\u2264 1000). As N linhas seguintes cont\\u00eam N inteiros I cada (1 \\u2264 I \\u2264 1000000), que representam o valor da casa do tabuleiro naquela posi\\u00e7\\u00e3o. Existe pelo menos uma solu\\u00e7\\u00e3o poss\\u00edvel para todos os casos de teste.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Penalidade M\\u00ednima\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, uma \\u00fanica linha, contendo a penalidade do custo \\u201cotimizado\\u201d.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2007  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tDetec\\u00e7\\u00e3o de colis\\u00e3o \\u00e9 uma das opera\\u00e7\\u00f5es mais comuns (e importantes) em jogos eletr\\u00f4nicos. O objetivo, basicamente, \\u00e9 verificar se dois objetos quaisquer colidiram, ou seja, se a interse\\u00e7\\u00e3o entre eles \\u00e9 diferente de vazio. Isso pode ser usado para saber se duas naves colidiram, se um monstro bateu numa parede, se um personagem pegou um item, etc.\\r\\n\\r\\nPara facilitar as coisas, muitas vezes os objetos s\\u00e3o aproximados por figuras geom\\u00e9tricas simples (esferas, paralelep\\u00edpedos, tri\\u00e2ngulos etc). Neste problema, os objetos s\\u00e3o aproximados por ret\\u00e2ngulos num plano 2D.\\r\\n\\r\\nEscreva um programa que, dados dois ret\\u00e2ngulos, determine se eles se interceptam ou n\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"id\": 2321,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do\\u00a0dispositivo de entrada padr\\u00e3o\\u00a0(normalmente o teclado). Cada caso de teste cont\\u00e9m duas linhas. Cada linha cont\\u00e9m quatro inteiros (x0,\\u00a0y0,\\u00a0x1,\\u00a0y1, sendo 0 \\u2264\\u00a0x0\\u00a0<\\u00a0x1\\u00a0\\u2264 1.000.000 e 0 \\u2264\\u00a0y0\\u00a0<\\u00a0y1\\u00a0\\u2264 1.000.000) separados por um espa\\u00e7o em branco representando um ret\\u00e2ngulo. Os lados do ret\\u00e2ngulo s\\u00e3o sempre paralelos aos eixos\\u00a0x\\u00a0e\\u00a0y.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Detectando Colis\\u00f5es\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na\\u00a0sa\\u00edda padr\\u00e3o, uma \\u00fanica linha para cada caso de teste, contendo o n\\u00famero 0 (zero) caso n\\u00e3o haja interse\\u00e7\\u00e3o ou o n\\u00famero 1 (um) caso haja.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2007  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3ozinho adora quebra-cabe\\u00e7as, essa \\u00e9 sua brincadeira favorita. O grande problema, por\\u00e9m, \\u00e9 que \\u00e0s vezes o jogo vem com uma pe\\u00e7a faltando. Isso irrita bastante o pobre menino, que tem de descobrir qual pe\\u00e7a est\\u00e1 faltando e solicitar uma pe\\u00e7a de reposi\\u00e7\\u00e3o ao fabricante do jogo. Sabendo que o quebra-cabe\\u00e7as tem\\u00a0N\\u00a0pe\\u00e7as, numeradas de 1 a\\u00a0N\\u00a0e que exatamente uma est\\u00e1 faltando, ajude Jo\\u00e3ozinho a saber qual pe\\u00e7a ele tem de pedir.\\r\\n\\r\\nEscreva um programa que, dado um inteiro\\u00a0N\\u00a0e\\u00a0N\\u00a0- 1 inteiros numerados de 1 a\\u00a0N, descubra qual inteiro est\\u00e1 faltando.\\n\\t\\t\\t\\t\",\n    \"id\": 2322,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do\\u00a0dispositivo de entrada padr\\u00e3o\\u00a0(normalmente o teclado). A entrada cont\\u00e9m 2 linhas. A primeira linha cont\\u00e9m um inteiro\\u00a0N\\u00a0(2 \\u2264\\u00a0N\\u00a0\\u2264 1.000). A segunda linha cont\\u00e9m\\u00a0N\\u00a0- 1 inteiros numerados de 1 a\\u00a0N\\u00a0(sem repeti\\u00e7\\u00f5es).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Pe\\u00e7a Perdida\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na\\u00a0sa\\u00edda padr\\u00e3o, uma \\u00fanica linha, contendo o n\\u00famero que est\\u00e1 faltando na sequ\\u00eancia dada.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2007  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tM\\u00f3biles s\\u00e3o objetos muito populares hoje em dia, sendo encontrados at\\u00e9 em ber\\u00e7os, para divers\\u00e3o de beb\\u00eas, mas foram concebidos h\\u00e1 muito tempo (em 1931) pelo ent\\u00e3o jovem artista americano Alexander Calder como esculturas em movimento. Um m\\u00f3bile \\u00e9 uma estrutura composta de pe\\u00e7as unidas por fios. O m\\u00f3bile \\u00e9 preso por um fio a uma argola pela qual ele \\u00e9 suspenso, permitindo que a estrutura movimente-se livremente. A argola \\u00e9 presa a uma \\u00fanica pe\\u00e7a, chamada de pe\\u00e7a-raiz do m\\u00f3bile. A pe\\u00e7a-raiz pode ter zero ou mais sub-m\\u00f3biles pendurados nela, cada sub-m\\u00f3bile sendo composto por uma pe\\u00e7a-raiz na qual por sua vez podem estar pendurados zero ou mais sub-m\\u00f3biles, e assim sucessivamente. Abaixo podemos ver dois exemplos de m\\u00f3biles:\\r\\n\\r\\n\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\tVictor \\u00e9 dono de uma fabrica de m\\u00f3biles que emprega centenas de artes\\u00e3os. Cada m\\u00f3bile produzido na f\\u00e1brica \\u00e9 confeccionado por um artes\\u00e3o, que cria m\\u00f3biles de acordo com o seu gosto pessoal, utilizando pe\\u00e7as de formatos distintos. Entretanto, Victor tem notado que nem todos os seus artes\\u00e3os possuem a mesma habilidade art\\u00edstica, de forma que \\u00e0s vezes o m\\u00f3bile produzido nem sempre \\u00e9 bem balanceado, segundo a sua concep\\u00e7\\u00e3o. Para Victor, um m\\u00f3bile \\u00e9 bem balanceado se, para cada pe\\u00e7a, todos os sub-m\\u00f3biles pendurados nela s\\u00e3o compostos pelo mesmo n\\u00famero de pe\\u00e7as. O n\\u00famero de pe\\u00e7as de um sub-m\\u00f3bile \\u00e9 determinado contando-se o n\\u00famero de pe\\u00e7as que o comp\\u00f5e, incluindo a sua pe\\u00e7a-raiz. Note que cada pe\\u00e7a do m\\u00f3bile, exceto a pe\\u00e7a-raiz, \\u00e9 pendurada em exatamente uma outra pe\\u00e7a.\\r\\n\\r\\n\\t\\t\\t\\t\\tPor exemplo, o m\\u00f3bile da figura (a) acima \\u00e9 um m\\u00f3bile bem balanceado: a pe\\u00e7a-raiz possui um \\u00fanico sub-m\\u00f3bile, que por sua vez possui tr\\u00eas sub-m\\u00f3biles, todos com o mesmo n\\u00famero de pe\\u00e7as (uma \\u00fanica). J\\u00e1 o m\\u00f3bile da figura (b) \\u00e9 um m\\u00f3bile mal balanceado: a pe\\u00e7a-raiz possui dois sub-m\\u00f3biles, um com o total de duas pe\\u00e7as e outro com o total de uma pe\\u00e7a.\\r\\n\\r\\n\\t\\t\\t\\t\\tDada a descri\\u00e7\\u00e3o de um m\\u00f3bile, voc\\u00ea deve escrever um programa para determinar se o m\\u00f3bile est\\u00e1 bem balanceado ou n\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"id\": 2323,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do\\u00a0dispositivo de entrada padr\\u00e3o\\u00a0(normalmente o teclado). A primeira linha da entrada cont\\u00e9m um inteiro\\u00a0N\\u00a0que indica o n\\u00famero de pe\\u00e7as utilizadas no m\\u00f3bile (1 \\u2264\\u00a0N\\u00a0\\u2264 10.000). As pe\\u00e7as s\\u00e3o identificadas por inteiros de 1 a\\u00a0N\\u00a0. Cada uma das\\u00a0N\\u00a0linhas seguintes cont\\u00e9m dois n\\u00fameros inteiros\\u00a0I\\u00a0e\\u00a0J\\u00a0, indicando que a pe\\u00e7a de n\\u00famero\\u00a0I\\u00a0est\\u00e1 pendurada na pe\\u00e7a de n\\u00famero\\u00a0J\\u00a0(a pe\\u00e7a raiz est\\u00e1 pendurada na argola, que \\u00e9 identificada pelo o n\\u00famero 0).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"M\\u00f3bile\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na\\u00a0sa\\u00edda padr\\u00e3o, uma \\u00fanica linha, contendo a palavra bem se o m\\u00f3bile estiver bem balanceado ou mal caso esteja mal balanceado. A palavra deve ser escrita com todas as letras em min\\u00fasculas.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2007  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tEstela \\u00e9 uma secret\\u00e1ria dedicada da OBI (Organiza\\u00e7\\u00e3o Burocr\\u00e1tica Internacional), um megaconglomerado empresarial voltado a cria\\u00e7\\u00e3o de documentos e preenchimento de formul\\u00e1rios. Todo dia ela recebe milhares de pastas suspensas e seu objetivo \\u00e9 organiz\\u00e1-las de uma forma que seja simples recuperar uma pasta do arquivo.\\r\\n\\r\\nCada pasta possui uma pequena aba, que fica anexada \\u00e0 pasta e \\u00e9 vis\\u00edvel quando a pasta est\\u00e1 suspensa em seu arquivo. Todo funcion\\u00e1rio fixa a aba em uma das posi\\u00e7\\u00f5es especificadas pelo manual de fixa\\u00e7\\u00e3o de abas, embora ele possa escolher, ao acaso, qualquer uma das posi\\u00e7\\u00f5es descritas no manual. Tais posi\\u00e7\\u00f5es s\\u00e3o numeradas de 1 at\\u00e9 P .\\r\\n\\r\\nEstela notou que fica consideravelmente mais f\\u00e1cil encontrar as pastas se elas forem arquivadas da seguinte forma: primeiro uma pasta com aba na posi\\u00e7\\u00e3o 1, depois uma com aba na posi\\u00e7\\u00e3o 2, e assim sucessivamente, at\\u00e9 que uma pasta com aba na posi\\u00e7\\u00e3o P seja arquivada. Logo ap\\u00f3s, repete-se o processo, arquivando uma pasta com aba na posi\\u00e7\\u00e3o 1. Para Estela, um conjunto de pastas \\u00e9 arquivado de forma perfeita se todas as pastas desse conjunto forem arquivadas da forma descrita anteriormente, ou seja:\\r\\n\\r\\n\\r\\n\\tImediatamente ap\\u00f3s toda pasta com aba na posi\\u00e7\\u00e3o I , I < P , existe uma pasta com aba na posi\\u00e7\\u00e3o I + 1 ou n\\u00e3o h\\u00e1 nenhuma pasta.\\r\\n\\tImediatamente ap\\u00f3s toda pasta com aba na posi\\u00e7\\u00e3o P , existe uma pasta com aba na posi\\u00e7\\u00e3o 1 ou n\\u00e3o h\\u00e1 nenhuma pasta.\\r\\n\\tTodas as pastas do conjunto s\\u00e3o armazenadas.\\r\\n\\r\\n\\r\\nDado um conjunto de pastas e a posi\\u00e7\\u00e3o de suas abas, determinar se \\u00e9 poss\\u00edvel arquivar esse conjunto de pastas de forma perfeita.\\n\\t\\t\\t\\t\",\n    \"id\": 2324,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do\\u00a0dispositivo de entrada padr\\u00e3o\\u00a0(normalmente o teclado). A primeira linha da entrada cont\\u00e9m dois inteiros\\u00a0P\\u00a0e\\u00a0N\\u00a0que indicam, respectivamente, o n\\u00famero de posi\\u00e7\\u00f5es poss\\u00edveis para se colar as abas (1 \\u2264\\u00a0P\\u00a0\\u2264 1.000) o n\\u00famero pastas a serem armazenadas (1 \\u2264\\u00a0N\\u00a0\\u2264 1.000.000). As\\u00a0N\\u00a0linhas seguintes cont\\u00e9m um inteiro\\u00a0I\\u00a0(1 \\u2264\\u00a0I\\u00a0\\u2264\\u00a0P\\u00a0) cada representando a posi\\u00e7\\u00e3o onde a aba da\\u00a0I\\u00a0-\\u00e9sima pasta foi colada.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Pastas\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na\\u00a0sa\\u00edda padr\\u00e3o, uma \\u00fanica linha, contendo a letra\\u00a0S\\u00a0se for poss\\u00edvel fazer um arquivamento perfeito ou\\u00a0N\\u00a0caso contr\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2007  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tUma das boas pr\\u00e1ticas ao administrar um conjunto de computadores \\u00e9 manter os aplicativos sempre atualizados. Entretanto, em uma grande corpora\\u00e7\\u00e3o com milhares de aplicativos instalados, a simples verifica\\u00e7\\u00e3o do que precisa ser atualizado pode tornar-se uma tarefa bem complicada. Para facilitar isso, alguns fabricantes armazenam todos os aplicativos existentes em grandes bases de dados chamadas reposit\\u00f3rios e um programa \\u00e9 respons\\u00e1vel por verificar esse reposit\\u00f3rio e atualizar as vers\\u00f5es dos aplicativos.\\r\\n\\r\\nM.V.Lzr, um administrador de sistemas e rapper nas horas vagas, trabalha em uma empresa que, infeliz-mente, n\\u00e3o utiliza um sistema com reposit\\u00f3rios. Para facilitar sua vida, ele decidiu que era a hora de ter o seu pr\\u00f3prio sistema e pediu a sua ajuda.\\r\\n\\r\\nPeriodicamente ele varre a Internet em busca das p\\u00e1ginas que possam conter os aplicativos e constr\\u00f3i uma lista com as vers\\u00f5es dos aplicativos que deseja instalar dispon\\u00edveis em cada p\\u00e1gina. Um programa deve verificar ent\\u00e3o qual a vers\\u00e3o de cada programa instalado nos computadores (todos eles possuem os mesmos aplicativos instalados e nas mesmas vers\\u00f5es) e instalar todos aqueles que ainda n\\u00e3o foram instalados ou cuja vers\\u00e3o instalada seja anterior a vers\\u00e3o mais recente. Como ele n\\u00e3o sabe programar direito, ele pediu sua ajuda.\\r\\n\\r\\nDado uma lista de aplicativos instaladas nos computadores da empresa, com suas respectivas vers\\u00f5es e uma lista de aplicativos dispon\\u00edveis na internet que devem ser instalados, determinar quais devem ser instalados e em quais vers\\u00f5es.\\n\\t\\t\\t\\t\",\n    \"id\": 2325,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha da entrada cont\\u00e9m dois inteiros C (1 \\u2264 C \\u2264 10.000) e N (1 \\u2264 N \\u2264 1.000) que representam o n\\u00famero total de aplicativos e vers\\u00f5es dispon\\u00edveis na internet e o n\\u00famero total de programas instalados na empresa, respectivamente. As C linhas seguintes possuem dois inteiros cada, Pc (1 \\u2264 Pc \\u2264 1.000.000.000) e Vc (1 \\u2264 Vc \\u2264 1.000.000.000), representando o n\\u00famero do programa e o n\\u00famero da vers\\u00e3o instalada nos computadores. Todo aplicativo est\\u00e1 instalado uma \\u00fanica vez em cada m\\u00e1quina e em uma \\u00fanica vers\\u00e3o. Em seguida, as As N linhas seguintes possuem dois inteiros cada, Pn (1 \\u2264 Pn \\u2264 1.000.000.000) e Vn (1 \\u2264 Vn \\u2264 1.000.000.000), representando o n\\u00famero do programa e o n\\u00famero da vers\\u00e3o dispon\\u00edvel na internet. Um dado programa pode estar dispon\\u00edvel em mais de uma vers\\u00e3o na internet.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Reposit\\u00f3rios\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, diversas linhas, cada uma contendo dois inteiros, Ps e Vs com o n\\u00famero do programa e a vers\\u00e3o que deve ser instalada. Em todo caso de teste existe pelo menos um programa que deve ser instalado\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2007  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tSeu amigo sacoleiro pediu sua ajuda num problema que ele est\\u00e1 enfrentando. Ele tem um mapa de cidades que ele j\\u00e1 conhece e que s\\u00e3o interessantes para ele, al\\u00e9m das rotas entre as mesmas. Ele pretende fazer uma viagem para comprar presentes para seu filho e para sua filha. O problema \\u00e9 que nem todos os presentes t\\u00eam o mesmo pre\\u00e7o, alguns s\\u00e3o obviamente mais caros que os outros, e ele n\\u00e3o quer ser injusto dando presentes mais caros para um ou para outro. O objetivo \\u00e9 fazer com que diferen\\u00e7a entre a soma dos valores dos presentes seja a menor poss\\u00edvel (de prefer\\u00eancia que sejam iguais, naturalmente). H\\u00e1, tamb\\u00e9m, um limite de quanto ele pode gastar na viagem.\\r\\n\\r\\nO sacoleiro tem um mapa com N cidades e as rotas que as ligam. Al\\u00e9m disso, cada cidade pertence ao grupo A ou ao grupo B. No grupo A est\\u00e3o as cidades em que h\\u00e1 presentes para o filho, enquanto que no grupo B est\\u00e3o as cidades com presentes para a filha. Sempre que ele para numa cidade ele pode comprar ou n\\u00e3o o presente, mesmo que ele j\\u00e1 tenha estado l\\u00e1 antes, inclusive pode comprar mais de uma unidade do mesmo presente (enquanto tiver dinheiro dispon\\u00edvel, naturalmente). As cidades s\\u00e3o numeradas de 0 a N - 1. O trajeto deve sempre come\\u00e7a na cidade 0. O tamanho do percurso n\\u00e3o importa para o sacoleiro. O total dispon\\u00edvel de dinheiro para os presentes \\u00e9 T. O sacoleiro n\\u00e3o pode terminar a viagem sem ter comprado pelo menos um presente para algum dos filhos.\\r\\n\\r\\nEscreva um programa que, dadas N cidades, as rotas entre elas e os valores de presentes de cada cidade, retorne qual a diferen\\u00e7a m\\u00ednima poss\\u00edvel entre a soma dos presentes do grupo A e a soma dos presentes do grupo B.\\n\\t\\t\\t\\t\",\n    \"id\": 2326,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha da entrada cont\\u00e9m um inteiro N (2 \\u2264 N \\u2264 30) que indica a quantidade de cidades. A segunda linha cont\\u00e9m um inteiro T (10 \\u2264 T \\u2264 100) que indica a quantidade de dinheiro que o sacoleiro tem para gastar. As N linhas seguintes cont\\u00eam a descri\\u00e7\\u00e3o cada cidade. Cada uma dessas linhas tem o formato XPCKV0V1...VK-1, onde X \\u00e9 um inteiro que representa a cidade (numeradas de 0 a N - 1); P \\u00e9 um inteiro (1 \\u2264 P \\u2264 10) que indica o valor do presente da cidade X; C \\u00e9 um caractere A ou B, indicando a que grupo a cidade X pertence; K \\u00e9 um inteiro (0 \\u2264 K < N ) que indica quantas rotas saem da cidade X; e cada Vi \\u00e9 um inteiro indicando um dos poss\\u00edveis destinos a partir da cidade X. Note que as rotas n\\u00e3o s\\u00e3o bidirecionais. Uma cidade nunca ter\\u00e1 rota para ela mesma e pode-se assumir que i \\u2260 j => Vi \\u2260 Vj.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Sacoleiro\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, uma \\u00fanica linha com um inteiro representando a menor diferen\\u00e7a poss\\u00edvel de valores entre os presentes comprados para o grupo A e para o grupo B.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2007  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tP\\u00e3o a metro \\u00e9 um tipo de sandu\\u00edche gigante que \\u00e9 uma excelente op\\u00e7\\u00e3o de lanche para torneios de programa\\u00e7\\u00e3o, embora a experi\\u00eancia j\\u00e1 tenha mostrado que o oferecimento de sanduiches pode gerar reclama\\u00e7\\u00e3o dos competidores. Outro grande problema \\u00e9 que algumas pessoas s\\u00e3o mais gulosas que outras e, dessa maneira, acabam pegando peda\\u00e7os maiores que os peda\\u00e7os dos outros. Para a \\ufb01nal da OBI, a coordena\\u00e7\\u00e3o estava pensando em providenciar p\\u00e3o a metro para os competidores, por\\u00e9m tais problemas os \\ufb01zeram recuar na id\\u00e9ia.\\n\\n\\t\\t\\t\\t\\tEmbora a id\\u00e9ia tenha sido momentaneamente abandonada, uma id\\u00e9ia simples surgiu: cortar previamente o p\\u00e3o em fatias de tamanho iguais e distribu\\u00ed-las entre as pessoas. O \\u00fanico problema com tal id\\u00e9ia \\u00e9 que se o n\\u00famero de pessoas for muito grande, \\ufb01ca impratic\\u00e1vel ter apenas um p\\u00e3o. Por exemplo, se quisermos que 1.000 pessoas recebam 20 cent\\u00edmetros de sandu\\u00edche, seria necess\\u00e1rio um sandu\\u00edche de 20.000 cent\\u00edmetros, ou 200 metros!\\n\\n\\t\\t\\t\\t\\tAlgu\\u00e9m levantou a seguinte hip\\u00f3tese: se houvessem N pessoas e fossem encomendados K sandu\\u00edches de empresas diferentes, cada qual com uma determinada metragem (tamanho) Mi (1 \\u2264 i \\u2264 K), seria poss\\u00edvel retirar desses p\\u00e3es N fatias de mesmo tamanho, possivelmente sobrando partes nao utilizadas. A quest\\u00e3o seria: qual o tamanho inteiro m\\u00e1ximo que essas fatias poder\\u00e3o ter?\\n\\n\\t\\t\\t\\t\\tPor exemplo, se tivermos K = 4, com os tamanhos (em cent\\u00edmetros) M1 = 120, M2 = 89, M3 = 230 e M4 = 177 e N = 10, podemos retirar N fatias iguais de tamanho m\\u00e1ximo 57, pois assim conseguimos 2 fatias no primeiro p\\u00e3o, 1 no segundo, 4 no terceiro e 3 no quarto, totalizando as 10 fatias necess\\u00e1rias. Se tentarmos cortar fatias de tamanho 58, s\\u00f3 ser\\u00e1 poss\\u00edvel obter 3 fatias do terceiro p\\u00e3o, totalizando 9 e, portanto, 57 \\u00e9 realmente o melhor que podemos obter. Note que n\\u00e3o podemos usar duas ou mais fatias menores de diferentes p\\u00e3es para formarmos uma fatia do tamanho selecionado. (\\ufb01caria muito deselegante dar um lanche recortado \\u00e0s pessoas).\\n\\n\\t\\t\\t\\t\\tEscreva um programa que, dados os tamanhos de p\\u00e3o dispon\\u00edveis (em cent\\u00edmetros) e a quantidade de pessoas a serem atendidas, retorne o tamanho inteiro m\\u00e1ximo (em cent\\u00edmetros) da fatia que pode ser cortada de maneira a atender todas as pessoas.\\n\\t\\t\\t\\t\",\n    \"id\": 2329,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha da entrada cont\\u00e9m um inteiro N que indica a quantidade pessoas (1 \\u2264 N \\u2264 10.000). A segunda linha cont\\u00e9m um inteiro K (1 \\u2264 K \\u2264 10.000) que \\u00e9 a quantidade de sandu\\u00edches dispon\\u00edvel. Na terceira linha h\\u00e1 K inteiros M (1 \\u2264 M \\u2264 10.000) separados por um espa\\u00e7o em branco representando o tamanho de cada p\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"P\\u00e3o a Metro\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, uma \\u00fanica linha, contendo o tamanho inteiro m\\u00e1ximo da fatia que pode ser cortada.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2007  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tO telemarketing foi patenteado em 1982 pelo empres\\u00e1rio Nadji Tehrani e consiste em vender produtos atrav\\u00e9s do telefone. Uma das formas de venda utilizadas hoje em dia \\u00e9 obter-se uma lista de poss\\u00edveis compradores para os produtos vendidos e seus respectivos telefones e utilizar um time de vendedores para ligar para esse conjunto de pessoas.\\n\\n\\t\\t\\t\\t\\tBo Ber Man \\u00e9 um empres\\u00e1rio estrangeiro dono da Mar Ato Na, cujos ideogramas em seu idioma significam \\\"Empresa Nacional de Telemarketing\\\". Sua empresa realiza vendas dos produtos mais variados para diversas companhias.\\n\\n\\t\\t\\t\\t\\tEle possui um time de N vendedores e uma lista de liga\\u00e7\\u00f5es a serem feitas. Para cada liga\\u00e7\\u00e3o sabe-se o tempo T em minutos que ela vai durar. Os vendedores s\\u00e3o identificados por n\\u00fameros de 1 a N e fazem as liga\\u00e7\\u00f5es da seguinte forma:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tInicialmente, todos os vendedores est\\u00e3o inativos.\\n\\t\\t\\t\\t\\t\\tSempre que um vendedor realizar uma liga\\u00e7\\u00e3o, ele ficar\\u00e1 ocupado pelos T minutos descritos na lista para aquela liga\\u00e7\\u00e3o. O tempo entre duas liga\\u00e7\\u00f5es consecutivas as do mesmo vendedor \\u00e9 desprez\\u00edvel.\\n\\t\\t\\t\\t\\t\\tUm vendedor n\\u00e3o pode fazer mais de uma liga\\u00e7\\u00e3o ao mesmo tempo.\\n\\t\\t\\t\\t\\t\\tUm vendedor que esteja inativo dever\\u00e1 fazer a liga\\u00e7\\u00e3o que estiver no topo da lista. Caso mais de um vendedor esteja inativo no mesmo instante, o vendedor com o menor identificador dentre os vendedores inativos dever\\u00e1 fazer a liga\\u00e7\\u00e3o que estiver no topo da lista.\\n\\t\\t\\t\\t\\t\\tAssim que uma liga\\u00e7\\u00e3o \\u00e9 atribu\\u00edda a um vendedor, ela \\u00e9 removida da lista.\\n\\t\\t\\t\\t\\t\\tUm vendedor fica inativo sempre que termina uma liga\\u00e7\\u00e3o.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tPor exemplo, suponha que um time de 4 vendedores deve fazer 6 liga\\u00e7\\u00f5es, cujos tempos sejam 5, 2, 3, 3, 4, 9. Como inicialmente nenhum vendedor est\\u00e1 ocupado, o primeiro vendedor far\\u00e1 a liga\\u00e7\\u00e3o de 5 minutos, o segundo vendedor a liga\\u00e7\\u00e3o de 2 minutos e os vendedores de n\\u00famero 3 e 4 far\\u00e3o liga\\u00e7\\u00f5es de 3 minutos. Como o segundo vendedor terminar\\u00e1 a sua liga\\u00e7\\u00e3o antes dos demais, ele far\\u00e1 a quinta liga\\u00e7\\u00e3o, de 4 minutos e, por fim, o terceiro vendedor (cujo tempo \\u00e9 igual ao do quarto vendedor, mas o n\\u00famero \\u00e9 menor) far\\u00e1 a sexta liga\\u00e7ao, de 9 minutos.\\n\\n\\t\\t\\t\\t\\tEscreva um programa que, dados o n\\u00famero de vendedores, o n\\u00famero de liga\\u00e7\\u00f5es e a dura\\u00e7\\u00e3o de cada liga\\u00e7\\u00e3o, determine o n\\u00famero de liga\\u00e7\\u00f5es feitas por cada vendedor.\\n\\t\\t\\t\\t\",\n    \"id\": 2330,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha da entrada cont\\u00e9m dois inteiros, N e L indicando o n\\u00famero de vendedores e o n\\u00famero de liga\\u00e7\\u00f5es a serem realizadas (1 \\u2264 N \\u2264 1.000, 1 \\u2264 L \\u2264 1.000.000). As L linhas seguintes cont\\u00eam um inteiro T cada (1 \\u2264 T \\u2264 30), em que T representa a dura\\u00e7\\u00e3o de cada liga\\u00e7\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Telemarketing\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, N linhas, uma para cada vendedor, contendo dois inteiros I e P representando o n\\u00famero do vendedor e o n\\u00famero de liga\\u00e7\\u00f5es realizadas por este vendedor. Os vendedores devem ser apresentados em ordem crescente de identificador, come\\u00e7ando a partir de 1.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2007  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA Uiquip\\u00e9dia (Wikipedia em ingl\\u00eas), fundada em 2001 por Jimmy Wales e Larry Sanger, \\u00e9 um site onde qualquer pessoa pode editar os artigos, fazendo corre\\u00e7\\u00f5es ou ampliando seu conte\\u00fado.\\n\\n\\t\\t\\t\\t\\tUma das grandes vantagens da Uiquip\\u00e9dia sobre enciclop\\u00e9dias de papel \\u00e9 a facilidade de seguir refer\\u00eancias; com um simples clique, \\u00e9 poss\\u00edvel ir de um artigo para outro relacionado. Essas refer\\u00eancias s\\u00e3o chamadas de refer\\u00eancias diretas. Tamb\\u00e9m \\u00e9 poss\\u00edvel navegar a Uiquip\\u00e9dia sequencialmente: cada artigo possui refer\\u00eancia para o artigo anterior e para o posterior, na ordem alfab\\u00e9tica. Essas refer\\u00eancias s\\u00e3o chamadas de refer\\u00eancias sequenciais.\\n\\n\\t\\t\\t\\t\\tPor exemplo, um artigo para o termo \\\"Elefante\\\" pode ter uma referencia direta para \\\"Mamiferos\\\" em seu texto, desta forma pode-se chegar de \\\"Elefante\\\" a \\\"Mamiferos\\\" em um clique. Observe que pode n\\u00e3o existir a refer\\u00eancia direta contr\\u00e1ria, ou seja, de \\\"Mamiferos\\\" para \\\"Elefante\\\". Adicionalmente se \\\"Elevador\\\" \\u00e9 o pr\\u00f3ximo artigo depois de \\\"Elefante\\\", na ordem alfab\\u00e9tica, pode-se ir com um clique de \\\"Elefante\\\" para \\\"Elevador\\\" e de \\\"Elevador\\\" para \\\"Elefante\\\", pois h\\u00e1 uma refer\\u00eancia sequencial entre eles.\\n\\n\\t\\t\\t\\t\\tPaulo e Andr\\u00e9 s\\u00e3o dois amigos que contribuem para a Uiquip\\u00e9dia. Muitas vezes, Andr\\u00e9 edita um artigo e quer que Paulo o ajude a revisar a modifica\\u00e7\\u00e3o. A conex\\u00e3o de Paulo \\u00e0 Internet \\u00e9 discada, e por isso ele quer chegar na p\\u00e1gina que Andr\\u00e9 editou usando o menor n\\u00famero de cliques poss\\u00edvel, come\\u00e7ando do artigo em que est\\u00e1, e navegando apenas por refer\\u00eancias, diretas ou sequenciais.\\n\\n\\t\\t\\t\\t\\tEscreva um programa que, dados todas as refer\\u00eancias diretas existentes na Uiquip\\u00e9dia, a p\\u00e1gina onde Paulo est\\u00e1, e a p\\u00e1gina editada por Andr\\u00e9, determina de quantos cliques Paulo precisa, no m\\u00ednimo, para ver a p\\u00e1gina que foi modificada por Andr\\u00e9, utilizando as refer\\u00eancias diretas e sequenciais.\\n\\t\\t\\t\\t\",\n    \"id\": 2331,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A primeira linha cont\\u00e9m um \\u00fanico inteiro, N , que \\u00e9 o n\\u00famero de refer\\u00eancias da Uiquip\\u00e9dia (1 \\u2264 N \\u2264 1.000). As N linhas cont\\u00e9m cada uma duas strings X e Y , separadas por um espa\\u00e7o, que s\\u00e3o os nomes de duas p\\u00e1ginas da Uiquip\\u00e9dia conectadas por uma refer\\u00eancia direta (de X para Y ). Todo artigo existente na Uiquip\\u00e9dia aparece pelo menos uma vez na descri\\u00e7\\u00e3o das referencias diretas, permitindo que as referencias sequenciais sejam extra\\u00eddas das informa\\u00e7\\u00f5es dadas. Note que uma refer\\u00eancia direta pode ligar duas p\\u00e1ginas que estariam ligadas tamb\\u00e9m por uma refer\\u00eancia sequencial.\\n\\n\\t\\t\\t\\t\\tDepois da descri\\u00e7\\u00e3o das refer\\u00eancias, h\\u00e1 uma linha em branco, e a linha seguinte cont\\u00e9m duas cadeias de caracteres, P e A, que s\\u00e3o a p\\u00e1gina atual de Paulo e a p\\u00e1gina editada por Andr\\u00e9. O nome de cada p\\u00e1gina \\u00e9 limitado a 100 caracteres e cont\\u00e9m somente letras mai\\u00fasculas, letras minusculas e o s\\u00edmbolo '_'. Observe que na ordem alfab\\u00e9tica o simbolo '_' \\u00e9 anterior \\u00e0s letras mai\\u00fasculas, que por sua vez s\\u00e3o anteriores \\u00e0s letras minusculas\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Uiquip\\u00e9dia\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, uma \\u00fanica linha, contendo um \\u00fanico inteiro, que diz o n\\u00famero m\\u00ednimo de cliques que s\\u00e3o necess\\u00e1rios para ir da p\\u00e1gina atual de Paulo at\\u00e9 a p\\u00e1gina editada por Andr\\u00e9. Sempre \\u00e9 poss\\u00edvel navegar de um artigo a outro.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Hiago Oliveira de Jesus, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tFive little ducks went for a walk. Beyond the mountains. To play. Their mom cried: 'Quack, quack, quack, quack'. But only four little ducks came back from there. Four little ducks went for a walk. Beyond the mountains. To play. Their mom cried: 'Quack, quack, quack, quack'. But only three little ducks came back from there. Three little ducks went for a walk. Beyond the mountains. To play. Their mom cried: 'Quack, quack, quack, quack'. But only two little ducks came back from there. Two little ducks went for a walk. Beyond the mountains. To play. Their mom cried: 'Quack, quack, quack, quack'. But only one little duck came back from there. One little duck went for a walk. Beyond the mountains. To play. Its mom cried: 'Quack, quack, quack, quack'. But no little ducks came back from there.\\n\\nThe mother duck was so sad that day decided to ask your help to look beyond the mountains, at the seashore, how many ducklings did not return from there.\\n\\t\\t\\t\\t\",\n    \"id\": 2333,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases, the first line of each test case contains an integer\\u00a0 (0 \\u2264 P \\u2264 1019) representing the total amount of ducks, the input ends with P = -1.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Little Ducks\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output file should contain the amount of little ducks not returned there.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Hiago Oliveira de Jesus, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tFive little ducks went for a walk. Beyond the mountains. To play. Their mom cried: 'Quack, quack, quack, quack'. But only four little ducks came back from there. Four little ducks went for a walk. Beyond the mountains. To play. Their mom cried: 'Quack, quack, quack, quack'. But only three little ducks came back from there. Three little ducks went for a walk. Beyond the mountains. To play. Their mom cried: 'Quack, quack, quack, quack'. But only two little ducks came back from there. Two little ducks went for a walk. Beyond the mountains. To play. Their mom cried: 'Quack, quack, quack, quack'. But only one little duck came back from there. One little duck went for a walk. Beyond the mountains. To play. Its mom cried: 'Quack, quack, quack, quack'. But no little ducks came back from there.\\n\\nThe mother duck was so sad that day decided to ask your help to look beyond the mountains, at the seashore, how many ducklings did not return from there.\\n\\t\\t\\t\\t\",\n    \"id\": 2334,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases, the first line of each test case contains an integer\\u00a0 (0 \\u2264 P \\u2264 1019) representing the total amount of ducks, the input ends with P = -1.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Little Ducks\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output file should contain the amount of little ducks returned there.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Felipe Get\\u00falio, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tArquibaldo is a very smart boy known to be the \\\"bam-bam-bam\\\" of mathematical questions related to geometric figures. Calculation of areas, perimeters, side measures, Arquibaldo was tired of small challenges. For him, it was all very easy. His aunt Helena, however, being a math english teacher, decided to give him a little harder challenge. Helena showed him four identical triangles and formed with them a square such that their sides were the measures of the hypotenuse of the chosen triangles. Then she told the nephew that depending on the measures of right triangles, there may or there may not be a smaller square in the center of the second largest. The illustrations below show clearly these cases:\\n\\n\\n\\nShe challenged him: \\\"If I give the sides of the inner and outer square, l1 and l2, for example, can you tell me the smallest internal angle's measure, in degrees, of the triangle that would form with three other identical triangles a square with side mesure l1 and other with side mesure l2? \\\". Arquibaldo, has started to solve the challenge. Because he can't use calculator, her aunt was a good girl and allowed that only the integer parte of the answer was presented, ie, without decimal places. This way,\\u00a0Arquibaldo has now to find the greatest integer measure of the right triangle's smaller angle, such that the side of the inner square made by this new triangle (with the inner angle's measure being integer) be greater or equal to the inner square's side, that is, this should \\\"fit\\\" in the new inner square. For example, if the sides\\u00a0of the inner and outer squares have measures 1 and 5, respectively, then the smallest angle will approximate measure of 36,87\\u00ba (degrees), however, the greatest integer measure\\u00a0is 36, because\\u00a0for a set of four angles of right triangles 36 and 54 (complement) form squares of side 5 and 1,10 units of measure, that is,\\u00a0the square of side 1 would \\\"fit\\\" in a square of side 1.10, with this angle.\\n\\n\\\"Watch out for the existence of the triangle! Remember: now the angle measurements can only be integer numbers, \\\"warned Helena to Arquibaldo for possible mistakes because she's brother. In the above example, the triangle\\u00a0has angles of 36, 54 and 90 degrees. Knowing that you are a programmer (it was not reported to Helena if you were good or not), Helena asked you to do a program to inform the feedback from\\u00a0figures provided by her to Arquibaldo, to see if he really knew how to solve the challenge.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2335,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each case corresponds to a row containing the values of the internal and external sides of the squares, L1 e L2 (1 <= L1, L2 <= 105) not necessarily in that order.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Arquibaldo's Challenge\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the entire greater extent smaller inner angle of the right triangle, respecting the above conditions. If the angle of the triangle in question does not exist, print the message \\\"Nao existe tal triangulo.\\\".\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Vitor Matheus de Souza Carvalho, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the branch of mathematics and computing there are numerous ways to represent a number, these forms we call base, which can be represented several ways each with its own utilities and peculiarities, for example, decimal base commonly used in mathematics or binary represented only by 0's and 1's and even hexadecimal numbers consisting of 0 to 9 with the characters A, B, C, D, E and F.\\n\\nSome people are passionate about binary, others prefer sameness and continue in decimal base and some people prefer the ABC. ABC consists of a base formed by the characters of the alphabet in capital letters, ie A, B, C, ..., X, Y, Z where A's value is 0, B's value 1 util Z's value which is 25. With this in mind your task is, given a string S, 0 < |S| \\u226410\\u00b3, which belongs to the ABC base, convert it to a decimal base, but remember, the value represented by S may be too large then your result should be module 109+7.\\n\\t\\t\\t\\t\",\n    \"id\": 2336,\n    \"input\": \"\\t\\t\\t\\t\\tInput consistis of a string as said in the description and ends with EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"ABC\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput will consist in a line for each test case containing the value of the string given in decimal modulus 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Levi da Silva Lima, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tFrancisco is a big fan of the game \\\"Let\\u2019s flip a coin\\\" and loves to play it with your lucky coin, but Francisco has some playing conditions. He always chooses \\\"Head\\\" and in each round of the game can be multiple currency pitches. Another thing is that Francis hates when the currency falls with the \\\"Tail\\\" face in two consecutive pitches. Curious, Francisco wanted to know what is the probability that in a game of \\\"Let\\u2019s flip a coin\\\" will not occur \\\"Tail\\\" in two consecutive shots, however, as he only likes to play, he asked you to do a program that calculates it to him.\\n\\t\\t\\t\\t\",\n    \"id\": 2337,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases, each line of input will contain an integer N (0<N\\u226440) representing the amount of pitches in a single match.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Pro Ability\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each input line should be only one output line. The output should contain the probability of no consecutive \\\"Tails\\\". The answer must be in the form of irreducible fraction.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Syed Sarfaraz Akhtar, IIITH  India\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tAll your friends are crazy about the movie \\\"Interstellar\\\". They are now posting on facebook in Morse code. You need to write a code to decode Morse!!\\n\\nThese Morse codes only contain lowercase english letters(a-z) and whitespaces.\\n\\nNote - Morse code is a way to encode characters as a sequence of dits and dashes. Each character has a fixed encoding. An example of a famous morse code is that of SOS \\\"...---...\\\" . S is encoded as \\\"...\\\" (dit dit dit) and O is encoded as \\\"---\\\" (dash dash dash).\\nIn this problem, a dit is denoted by \\\"=\\\" and a dash is denoted by \\\"===\\\". Symbols are seperated by \\\".\\\" , letters are seperated by \\\"...\\\" and words are seperated by \\\".......\\\" . \\nSo, SOS is encoded as =.=.=...===.===.===...=.=.=\\nEncodings for all the characters can be found at the link given below.\\n\\t\\t\\t\\t\\thttp://morsecode.scphillips.com/morse2.html\\n\\t\\t\\t\\t\",\n    \"id\": 2338,\n    \"input\": \"\\t\\t\\t\\t\\tThere are multiple test cases.\\n\\nThe first line of the input contains the number of test cases (t)(1 <= t <= 10).\\n\\nThe next t lines contain morse codes. The length of each code is less than 1000 characters\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Morse\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput the decoded codes in a new line for each test case.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2009  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tPara descontrair os alunos ap\\u00f3s as provas da OBI, a Diretora da escola organizou um campeonato de avi\\u00f5es de papel. Cada aluno participante receber\\u00e1 uma certa quantidade de folhas de um papel especial para fazer os seus modelos de avi\\u00f5es. A quantidade de folhas que cada aluno dever\\u00e1 receber ainda n\\u00e3o foi determinada: ela ser\\u00e1 decidida pelos ju\\u00edzes do campeonato.\\r\\n\\r\\nA diretora convidou, para atuarem como ju\\u00edzes, engenheiros da Embraer, uma das mais bem sucedidas empresas brasileiras, que vende avi\\u00f5es com tecnologia brasileira no mundo todo. O campeonato est\\u00e1 programado para come\\u00e7ar logo ap\\u00f3s a prova da OBI, mas os ju\\u00edzes ainda n\\u00e3o chegaram \\u00e0 escola. A diretora est\\u00e1 aflita, pois comprou uma boa quantidade de folhas de papel especial, mas n\\u00e3o sabe se a quantidade comprada vai ser suficiente.\\r\\n\\r\\nConsidere, por exemplo, que a Diretora comprou 100 folhas de papel especial, e que h\\u00e1 33 competidores. Se os ju\\u00edzes decidirem que cada competidor tem direito a tr\\u00eas folhas de papel, a quantidade comprada pela diretora \\u00e9 suficiente. Mas se os ju\\u00edzes decidirem que cada competidor tem direito a quatro folhas, a quantidade comprada pela diretora n\\u00e3o seria suficiente.\\r\\n\\r\\nVoc\\u00ea deve escrever um programa que, dados o n\\u00famero de competidores, o n\\u00famero de folhas de papel especial compradas pela Diretora e o n\\u00famero de folhas que cada competidor deve receber, determine se o n\\u00famero de folhas comprado pela Diretora \\u00e9 suficiente.\\n\\t\\t\\t\\t\",\n    \"id\": 2339,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). O arquivo de entrada cont\\u00e9m tr\\u00eas n\\u00fameros inteiros C (1 \\u2264 C \\u2264 1000), P (1 \\u2264 P \\u2264 1000) e F (1 \\u2264 F \\u2264 1000) representando respectivamente o n\\u00famero de competidores, a quantidade de folhas de papel especial compradas pela Diretora e a quantidade de folhas de papel especial que cada competidor deve receber.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Avi\\u00f5es de Papel\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, o caractere \\u2018S\\u2019 se a quantidade de folhas compradas pela Diretora \\u00e9 suficiente, ou o caractere \\u2018N\\u2019 caso contr\\u00e1rio. Note que os caracteres devem ser letras mai\\u00fasculas.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2009  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBruno \\u00e9 um bi\\u00f3logo apaixonado por sua profiss\\u00e3o. Sua especialidade \\u00e9 estudar o comportamento de bact\\u00e9rias. Por isso, ele possui em seu laborat\\u00f3rio centenas de col\\u00f4nias de diferentes tipos desses microorganismos.\\r\\n\\r\\nNesta semana ele viu o an\\u00fancio de um evento inusitado: uma feira de bact\\u00e9rias. Nessa feira, v\\u00e1rios fornecedores estar\\u00e3o vendendo diferentes tipos de bact\\u00e9rias. Cada tipo de bact\\u00e9ria \\u00e9 vendido em uma placa de vidro, j\\u00e1 preparada para a forma\\u00e7\\u00e3o de uma col\\u00f4nia de bact\\u00e9rias. Cada placa de vidro \\u00e9 vendida com apenas uma bact\\u00e9ria inicialmente.\\r\\n\\r\\nBruno deu uma olhada no cat\\u00e1logo com os tipos de bact\\u00e9rias que estar\\u00e3o \\u00e0 venda na feira, e notou algumas coisas interessantes:\\r\\n\\r\\n\\r\\n\\tTodos os tipos de bact\\u00e9rias \\u00e0 venda ter\\u00e3o o mesmo pre\\u00e7o.\\r\\n\\tTodas as bact\\u00e9rias (de todos os tipos) se subdividem todas as noites para gerar outras bact\\u00e9rias. Por exemplo, a bact\\u00e9ria da col\\u00f4nia de tipo X se subdivide em 2 outras bact\\u00e9rias todas as noites. Assim, no primeiro dia teremos s\\u00f3 uma bact\\u00e9ria na col\\u00f4nia. No dia seguinte, teremos 2, e no pr\\u00f3ximo, 4. A quantidade de divis\\u00f5es de uma bact\\u00e9ria depende do seu tipo.\\r\\n\\tO crescimento da col\\u00f4nia cessa ap\\u00f3s um determinado n\\u00famero de dias, por causa da escassez de alimento. A quantidade de dias em que uma col\\u00f4nia cresce depende do tipo de bact\\u00e9ria.\\r\\n\\r\\n\\r\\n\\u00c9 final de m\\u00eas e Bruno j\\u00e1 gastou quase todo o seu dinheiro. Assim, resolveu que ir\\u00e1 comprar apenas uma col\\u00f4nia de bact\\u00e9rias. No entanto, ele pretende comprar a col\\u00f4nia que forne\\u00e7a a maior quantidade de bact\\u00e9rias ao final do per\\u00edodo de crescimento da mesma.\\r\\n\\r\\nEle tem um cat\\u00e1logo mostrando os tipos de bact\\u00e9rias \\u00e0 venda. Para cada tipo de bact\\u00e9ria, o cat\\u00e1logo informa a quantidade de bact\\u00e9rias geradas por uma bact\\u00e9ria desse tipo a cada divis\\u00e3o e por quantos dias a popula\\u00e7\\u00e3o da col\\u00f4nia crescer\\u00e1. Por\\u00e9m, a calculadora que ele tem em casa n\\u00e3o \\u00e9 suficiente para que ele fa\\u00e7a os c\\u00e1lculos necess\\u00e1rios para decidir qual \\u00e9 a melhor col\\u00f4nia a comprar.\\r\\n\\r\\nBruno pediu sua ajuda para decidir qual \\u00e9 o melhor tipo de bact\\u00e9ria para a compra. Lembre que para Bruno o melhor tipo de bact\\u00e9ria \\u00e9 aquele cuja col\\u00f4nia, ao final do per\\u00edodo de crescimento, ter\\u00e1 a maior quantidade de bact\\u00e9rias.\\r\\n\\r\\nVoc\\u00ea deve supor que n\\u00e3o haver\\u00e1 duas col\\u00f4nias com a mesma popula\\u00e7\\u00e3o final de bact\\u00e9rias.\\r\\n\\r\\n\\r\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2340,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\r\\n\\r\\nA primeira linha da entrada cont\\u00e9m um inteiro N (1 \\u2264 N \\u2264 50.000) representando a quantidade tipos de bact\\u00e9rias no cat\\u00e1logo. Cada uma das N linhas seguintes cont\\u00e9m informa\\u00e7\\u00f5es sobre um tipo de bact\\u00e9ria: a primeira dessas linhas cont\\u00e9m a informa\\u00e7\\u00e3o da bact\\u00e9ria de tipo 0, a segunda dessas linhas cont\\u00e9m a informa\\u00e7\\u00e3o sobre a bact\\u00e9ria de tipo 1, e assim por diante. A \\u00faltima dessas linhas cont\\u00e9m a informa\\u00e7\\u00e3o da bact\\u00e9ria de tipo N \\u2212 1.\\r\\n\\r\\nA informa\\u00e7\\u00e3o para cada tipo de bact\\u00e9ria \\u00e9 composta por dois n\\u00fameros inteiros D e C (1 \\u2264 D \\u2264 2.000 e 1 \\u2264 C \\u2264 5.000), onde D \\u00e9 quantidade de bact\\u00e9rias que cada bact\\u00e9ria deste tipo gera ao se dividir numa noite, e C \\u00e9 a quantidade de dias que a popula\\u00e7\\u00e3o de bact\\u00e9rias crescer\\u00e1.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Feira de Bact\\u00e9rias\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, um n\\u00famero inteiro entre 0 e N \\u2212 1 representando o tipo da bact\\u00e9ria que Bruno dever\\u00e1 comprar.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2009  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAldo \\u00e9 um garoto muito esperto que adora promo\\u00e7\\u00f5es e sorteios. Como j\\u00e1 participou de muitas promo\\u00e7\\u00f5es da forma \\u201cpara participar, envie n r\\u00f3tulos de produtos ...\\u201d, Aldo tem o costume de guardar o r\\u00f3tulo de todos os produtos que compra. Dessa forma, sempre que uma empresa faz uma promo\\u00e7\\u00e3o ele j\\u00e1 tem um monte de r\\u00f3tulos para mandar.\\r\\n\\r\\nA SBC (Super Balas e Caramelos) est\\u00e1 fazendo uma nova promo\\u00e7\\u00e3o, e, como era de se esperar, Aldo quer participar. Para participar da promo\\u00e7\\u00e3o \\u00e9 preciso enviar um envelope contendo um r\\u00f3tulo de cada tipo de bala que a SBC produz. Por exemplo, se a SBC produz 3 tipos de balas, A, B, C, e uma pessoa tem 3 r\\u00f3tulos de A, 3 de B e 2 de C, ela pode enviar no m\\u00e1ximo 2 envelopes, j\\u00e1 que falta um r\\u00f3tulo de C para compor o terceiro envelope. N\\u00e3o h\\u00e1 limite para o n\\u00famero de envelopes que uma pessoa pode enviar.\\r\\n\\r\\nBalas s\\u00e3o a segunda coisa de que Aldo mais gosta (a primeira como voc\\u00ea sabe s\\u00e3o promo\\u00e7\\u00f5es). Por causa disso a quantidade de r\\u00f3tulos de balas que ele tem \\u00e9 muito grande, e ele n\\u00e3o est\\u00e1 conseguindo determinar a quantidade m\\u00e1xima de envelopes que ele pode enviar.\\r\\n\\r\\nComo voc\\u00ea \\u00e9 o melhor amigo de Aldo ele pediu sua ajuda para fazer o c\\u00e1lculo, de modo que ele compre o n\\u00famero exato de envelopes.\\r\\n\\r\\nVoc\\u00ea deve escrever um programa que, a partir da lista de r\\u00f3tulos de Aldo, calcula o n\\u00famero m\\u00e1ximo de envelopes v\\u00e1lidos que ele pode enviar.\\n\\t\\t\\t\\t\",\n    \"id\": 2341,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\r\\n\\r\\nA primeira linha cont\\u00e9m dois n\\u00fameros inteiros N (1 \\u2264 N \\u2264 1000000) e K (1 \\u2264 K \\u2264 1000) representando respectivamente a quantidade de r\\u00f3tulos de balas que Aldo possui e o n\\u00famero de tipos diferentes de bala que a SBC produz. Os tipos de balas s\\u00e3o identificados por inteiros de 1 a K. A segunda linha cont\\u00e9m N n\\u00fameros inteiros Xi, cada um representando um r\\u00f3tulo de bala que Aldo possui (1 \\u2264 Xi\\u00a0\\u2264 K, para 1 \\u2264 i \\u2264 N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"N\\u00famero de Envelopes\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, o n\\u00famero m\\u00e1ximo de envelopes v\\u00e1lidos que Aldo pode enviar.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2009  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tOs computadores foram inventados para realizar c\\u00e1lculos muito rapidamente, e atendem a esse requisito de maneira extraordin\\u00e1ria. Por\\u00e9m, nem toda conta pode ser feita num computador, pois ele n\\u00e3o consegue representar todos os n\\u00fameros dentro de sua mem\\u00f3ria. Em um computador pessoal atual, por exemplo, o maior inteiro que \\u00e9 poss\\u00edvel representar em sua mem\\u00f3ria \\u00e9 4.294.967.295. Caso alguma conta executada pelo computador d\\u00ea um resultado acima desse n\\u00famero, ocorrer\\u00e1 o que chamamos de overflow, que \\u00e9 quando o computador faz uma conta e o resultado n\\u00e3o pode ser representado, por ser maior do que o valor m\\u00e1ximo permitido (em ingl\\u00eas overflow significa trasbordar).\\r\\n\\r\\nPor exemplo, se um computador s\\u00f3 pode representar n\\u00fameros menores do que 1023 e mandamos ele executar a conta 1022 + 5, vai ocorrer overflow.\\r\\n\\r\\nDados o maior n\\u00famero que um computador consegue representar e uma express\\u00e3o de soma ou multiplica\\u00e7\\u00e3o entre dois inteiros, determine se ocorrer\\u00e1 overflow.\\n\\t\\t\\t\\t\",\n    \"id\": 2342,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\r\\n\\r\\nA primeira linha da entrada cont\\u00e9m um inteiro N (1 \\u2264 N \\u2264 500.000) representando o maior n\\u00famero que o computador consegue representar. A segunda linha cont\\u00e9m um inteiro P (0 \\u2264 P \\u2264 1000), seguido de um espa\\u00e7o em branco, seguido de um caractere C (que pode ser \\u2018+\\u2019 ou \\u2018*\\u2019, representando os operadores de adi\\u00e7\\u00e3o e multiplica\\u00e7\\u00e3o, respectivamente), seguido de um espa\\u00e7o em branco, seguido de um outro inteiro Q (0 \\u2264 Q \\u2264 1000). Essa linha representa a express\\u00e3o P + Q, se o caractere C for \\u2018+\\u2019, ou P \\u00d7 Q, se o caractere C for \\u2018*\\u2019.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Overflow\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, a palavra \\u2018OVERFLOW\\u2019 se o resultado da express\\u00e3o causar um overflow, ou a palavra \\u2018OK\\u2019 caso contr\\u00e1rio. Ambas as palavras devem ser escritas com letras mai\\u00fasculas.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2009  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJorge \\u00e9 um apresentador de televis\\u00e3o que comanda a vers\\u00e3o brasileira do grande sucesso Ca\\u00e7adores de Mitos, onde se estuda um mito para descobrir se \\u00e9 fato ou apenas um boato.\\r\\n\\r\\nNo pr\\u00f3ximo epis\\u00f3dio, Jorge dever\\u00e1 apresentar o mito que diz que \\u201dos raios n\\u00e3o caem duas vezes no mesmo lugar\\u201d, referindo-se aos raios das tempestades de chuva.\\r\\n\\r\\nPara isso, foi at\\u00e9 a cidade de Eletrol\\u00e2ndia, que \\u00e9 a cidade com maior ocorr\\u00eancia de raios no mundo. O prefeito tem tanto orgulho desse t\\u00edtulo que mandou criar um sistema para registrar os raios. Jorge conseguiu um relat\\u00f3rio com as ocorr\\u00eancias de cada raio que caiu na cidade nos \\u00faltimos anos.\\r\\n\\r\\nO mapa de Eletrol\\u00e2ndia \\u00e9 um ret\\u00e2ngulo. Para o sistema de registro a cidade \\u00e9 subdividida em quadrados de um metro de lado, denominados quadrantes. Assim, se a cidade tem 300 metros de largura e 1000 de comprimento, ela ser\\u00e1 subdividida em 300.000 quadrantes. O sistema de registro armazena o quadrante em que o raio caiu. Cada quadrante \\u00e9 identificado pelas suas coordenadas X e Y, conforme ilustra a figura abaixo, que exemplifica um mapa de uma cidade com oito metros de comprimento por cinco metros de largura (quarenta quadrantes).\\r\\n\\r\\n\\r\\n\\r\\nComo os quadrantes s\\u00e3o relativamente pequenos, Jorge decidiu que se dois raios ca\\u00edram no mesmo quadrante, pode-se considerar que ca\\u00edram no mesmo lugar.\\r\\n\\r\\nSua miss\\u00e3o \\u00e9 escrever um programa que receba as coordenadas dos raios que ca\\u00edram em Eletrol\\u00e2ndia nos \\u00faltimos anos e determine se o mito estudado \\u00e9 realmente apenas um mito ou pode ser considerado verdade.\\n\\t\\t\\t\\t\",\n    \"id\": 2343,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado).\\r\\n\\r\\nA primeira linha da entrada cont\\u00e9m um n\\u00famero inteiro N (2 \\u2264 N \\u2264 500.000) representando o n\\u00famero de registros de raios no relat\\u00f3rio. Cada uma das N linhas seguintes cont\\u00e9m 2 n\\u00fameros inteiros X, Y (0 \\u2264 X, Y \\u2264 500), representando o registro de um raio que caiu no quadrante cujas coordenadas s\\u00e3o (X, Y).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Ca\\u00e7adores de Mitos\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, o n\\u00famero 0 se nenhum raio caiu no mesmo lugar, ou o n\\u00famero 1 caso contr\\u00e1rio. Note que voc\\u00ea deve imprimir o n\\u00famero 1 mesmo que haja mais do que 1 par de raios que ca\\u00edram no mesmo lugar.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2009  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tRosy \\u00e9 uma talentosa professora do Ensino M\\u00e9dio que j\\u00e1 ganhou muitos pr\\u00eamios pela qualidade de sua aula. Seu reconhecimento foi tamanho que foi convidada a dar aulas em uma escola da Inglaterra. Mesmo falando bem ingl\\u00eas, Rosy ficou um pouco apreensiva com a responsabilidade, mas resolveu aceitar a proposta e encar\\u00e1-la como um bom desafio.\\r\\n\\r\\nTudo ocorreu bem para Rosy at\\u00e9 o dia da prova. Acostumada a dar notas de 0 (zero) a 100 (cem), ela fez o mesmo na primeira prova dos alunos da Inglaterra. No entanto, os alunos acharam estranho, pois na Inglaterra o sistema de notas \\u00e9 diferente: as notas devem ser dadas como conceitos de A a E. O conceito A \\u00e9 o mais alto, enquanto o conceito E \\u00e9 o mais baixo.\\r\\n\\r\\nConversando com outros professores, ela recebeu a sugest\\u00e3o de utilizar a seguinte tabela, relacionando as notas num\\u00e9ricas com as notas de conceitos:\\r\\n\\r\\n\\r\\n\\r\\nO problema \\u00e9 que Rosy j\\u00e1 deu as notas no sistema num\\u00e9rico, e ter\\u00e1 que converter as notas para o sistema de letras. Por\\u00e9m, Rosy precisa preparar as pr\\u00f3ximas aulas (para manter a qualidade que a tornou reconhecida), e n\\u00e3o tem tempo suficiente para fazer a convers\\u00e3o das notas manualmente.\\r\\n\\r\\nVoc\\u00ea deve escrever um programa que recebe uma nota no sistema num\\u00e9rico e determina o conceito correspondente.\\n\\t\\t\\t\\t\",\n    \"id\": 2344,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m um \\u00fanico conjunto de testes, que deve ser lido do dispositivo de entrada padr\\u00e3o (normalmente o teclado). A entrada cont\\u00e9m uma \\u00fanica linha com um n\\u00famero inteiro N (0 \\u2264 N \\u2264 100), representando uma nota de prova no sistema num\\u00e9rico.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Notas da Prova\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir, na sa\\u00edda padr\\u00e3o, uma letra (A, B, C, D, ou E em mai\\u00fasculas) representando o conceito correspondente \\u00e0 nota dada na entrada.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Pablo Ariel Heiber  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tFour friends are playing table tennis. Each of them has a skill level which is represented by an integer number: the higher the number, the better the player is.\\r\\n\\r\\nThe four friends want to form two teams of two players each. For the game to be more exciting, they want the skill level of the teams to be as close as possible. The skill level of a team is the sum of the skill levels of the players in that team.\\r\\n\\r\\nAlthough they are very good table tennis players, these friends are not so good at other things, like Math or Computing. Can you help them find the smallest possible difference between the teams\\u2019 skill levels?\\n\\t\\t\\t\\t\",\n    \"id\": 2345,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line that contains four integers A, B, C and D, representing the skill levels of the four players (0 \\u2264 A \\u2264 B \\u2264 C  D \\u2264 104).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Assigning Teams\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with an integer representing the smallest difference between the skill levels for both teams.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Bruno Junqueira  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tDoctor Emmet is working on a safer device to travel in time. He gathered N different and rare pieces of metal. Each piece may be compatible with some other different pieces. He has a complete list with M distinct pairs of compatible metals. Any pair of metals that is not on the list is incompatible.\\r\\n\\r\\nIn order for the device to work, he must choose a set of metals such that each of them is compatible with at least A others in that set. However, in order to preserve some balance, they must also be incompatible with at least B others in that set.\\r\\n\\r\\nMore metals mean more energy and a safer device. This is why Doctor Emmet needs your help, he wants to know the size of the largest set he can choose that meets these criteria.\\n\\t\\t\\t\\t\",\n    \"id\": 2346,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains four integers N, M, A and B, representing respectively how many different pieces of metal exist (1 \\u2264 N \\u2264 105), how many compatibilities there are (1 \\u2264 M \\u2264 105) and the variables A and B described in the problem statement (0 \\u2264 A,B < N). The different metals are conveniently numbered from 1 to N. Each of the following M lines contains two integers X and Y corresponding to a pair of compatible metals (1 \\u2264 X, Y \\u2264 N with X \\u2260Y). There are no repeated pairs in the input.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Back to the Future\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with one integer representing the size of the largest set of metals satisfying the requirements specified in the problem statement.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Pablo Ariel Heiber  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA set of points in the plane is self-rotating if there is a point P, the center, and an angle \\u03b1, expressed in degrees, where 0 < \\u03b1 < 360, such that the rotation of the plane, with center P and angle, maps every point in the set to some point also in the set.\\r\\n\\r\\nYou are given a set of N distinct points, all having integer coordinates. Find the number of distinct subsets of size 1, 2, . . . ,N that are self-rotating. Two subsets are considered distinct if one contains a point that the other does not contain.\\n\\t\\t\\t\\t\",\n    \"id\": 2347,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input contains one integer N representing the number of points in the input set (1 \\u2264 N \\u2264 1000). Each of the following N lines describes a different point of the set, and contains two integers X and Y giving its coordinates in a Cartesian coordinate system (\\u2212109 \\u2264 X, Y \\u2264 109). All points in the input set are distinct.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Counting Self-Rotating Subsets\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a single line containing N integers S1, S2, . . . , SN. For i = 1, 2, . . . ,N the integer Si must be the number of subsets of i points of the input set that are self-rotating. Since these numbers can be very big, output them modulo 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Rafael Garcia Gomes  Colombia\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAlex registered in an online dating system to search for the perfect partner. The system requires each of its members to fill a form specifying how much they enjoy N different activities, grading them on a scale from 0 to 100. To present this information to potential dates, the system creates a profile featuring a special kind of polygon called \\u201cradial diagram\\u201d.\\n\\nA radial diagram for N activities is drawn by marking N points on the plane. Starting from the vertical direction, the i-th point in clockwise order represents the i-th activity specified by the member, and is a distance Si away from the center of the diagram, where Si is the score given by the member for the corresponding activity. The angle sustained at the center of the diagram from each pair of consecutive points is always the same, and the polygon is formed by drawing the segments whose endpoints are consecutive points. Note that for the purposes of the radial diagram, the first and last points are considered to be consecutive.\\n\\nFor example, if N = 6 Alex might specify the following activities: singing with score S1 = 10, running with score S2 = 60, listening to music with score S3 = 70, traveling with score S4 = 70, eating out with score S5 = 80, and visiting museums with score S6 = 80. Then the corresponding radial diagram would be as shown in the figure below.\\n\\n\\n\\nThe area of a radial diagram depends on the order in which the different activities are specified, and Alex suspects that a profile depicting a radial diagram with greater area might be more successful. For example, the radial diagram in the following figure features the same activities and scores as the example above, but has a greater area.\\n\\n\\n\\nAlex has asked you to write a program to find the maximum possible area of a radial diagram given a list of activities graded with scores between 0 and 100.\\n\\t\\t\\t\\t\",\n    \"id\": 2348,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N representing the number of activities (3 \\u2264 N \\u2264 105). The second line contains N integers S1, S2, . . . , SN representing the scores given by Alex to each activity (0 \\u2264 Si \\u2264 100 for i = 1, 2, . . . , N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Dating On-Line\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with a rational number representing the maximum possible area of a radial diagram featuring the scores given in the input. The result must be output as a rational number with exactly 3 digits after the decimal point, rounded if necessary.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Ricardo Anido  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tTo discourage birds such as crows and sparrows from feeding on his crops a farmer needed to put some scarecrows in his corn field. His nephew really likes robots, and suggested that he should use a robot scarecrow instead: \\u201cA single robot scarecrow can better protect the whole corn field and will last way more than ten traditional ones!\\u201d, he said.\\n\\nSince the farmer thinks his nephew is a smart boy, he took his advice and bought a robot scarecrow. The robot moves along a pathway that surrounds the corn field. In the pathway there are N unmanned charging stations, numbered sequentially in clockwise order starting from 1. The figure below shows an example with eight charging stations.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\nThe robot begins every day at station number 1, and is issued a sequence of commands that are to be performed in order during the day. These commands are generated based on advanced machine learning algorithms that work on data collected by sensors spread through the corn field, ensuring an optimal coverage of the crop. Each command results in the robot moving to another charging station next to the one it is currently at, either in clockwise or counter-clockwise direction.\\n\\nDespite the promises of optimal coverage by the robot, at the end of a certain day the farmer found part of his crop devastated. To figure out what might have happened the farmer wants to know how many times the robot was at the charging station closest to the devastated area. Given the number of the station closest to the devastated area and the sequence of commands for a single day, can you help the farmer find this number?\\n\\t\\t\\t\\t\",\n    \"id\": 2349,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains three integers N , C and S representing respectively the number of posts (2 \\u2264 N \\u2264 100), the number of commands (1 \\u2264 C \\u2264 1000) and the charging station closest to the devastated area (1 \\u2264 S \\u2264 N ). The second line contains C integers X1, X2, . . . , XC, representing the sequence of commands received by the robot scarecrow. For i = 1, 2, . . . , C, if Xi is 1 then the i-th command means \\u201cmove to the next charging station in clockwise order\\u201d, whereas if Xi is -1 then the i-th command means \\u201cmove to the next charging station in counter-clockwise order\\u201d. The robot always starts at station number 1.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Farm Robot\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with an integer representing the number of times the robot was at station number S during the day.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lu\\u00eds Fernando Dorelli de Abreu  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAdam and Carol are having a great time playing the Game of Matchings. The game is played on a string S composed of |S| lowercase English letters, s1s2 . . . s|S|. The goal is to find all matchings of a special kind of pattern P in S. The pattern has length N and is defined by a sequence of integers between 1 and 26.\\n\\nWe consider a contiguous substring sisi+1 . . . si+N\\u22121 starting at position i of S a matching of pattern P if there is a mapping from the numbers in P to lowercase English letters such that the pattern is mapped to sisi+1...si+N\\u22121 but no two distinct numbers are mapped to the same letter.\\n\\nFor instance, if S is \\u201dawawww\\u201d and P is [10, 21, 10], the matchings of P are the substrings of S of length three starting at positions 1 and 2: \\u201dawa\\u201d and \\u201dwaw\\u201d. Note that \\u201dwww\\u201d is not an occurence because pattern numbers 10 and 21 would both map to \\u2019w\\u2019.\\n\\nAdam and Carol lost the answer sheet and are not sure if they are finding all occurrences for some of the strings in the game. Given S and P can you find the number of matchings for them?\\n\\t\\t\\t\\t\",\n    \"id\": 2350,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains a non-empty string S of at most 5 \\u00d7 105 characters. Each character of S is a lowercase English letter from \\u2019a\\u2019 to \\u2019z\\u2019. The second line contains an integer N representing the size of the pattern (1 \\u2264 N \\u2264 |S|). The third line contains N integers P1, P2, . . . , PN denoting the pattern (1 \\u2264 Pi \\u2264 26 for i = 1, 2, . . . ,N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Game of Matchings\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with one integer representing the number of matchings of P found in S.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Fidel I. Schaposnik  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tYou are planning to spend your holidays touring Europe, staying each night in a different city for N consecutive nights. You have already chosen the hotel you want to stay in for each city, so you know the price Pi of the room you\\u2019ll be staying at during the i-th night of your holidays, for i = 1, . . . ,N.\\r\\n\\r\\nYou will book your accommodation through a website that has a very convenient rewards program, which works as follows. After staying for a night in a hotel you booked through this website you are awarded one point, and at any time you can exchange K of these points in your account for a free night in any hotel (which will however not give you another point).\\r\\n\\r\\nFor example, consider the case with N = 6 and K = 2 where the prices for the rooms are P1 = 10, P2 = 3, P3 = 12, P4 = 15, P5 = 12 and P6 = 18. After paying for the first four nights you would have four points in your account, which you could exchange to stay for free the remaining two nights, paying a total of P1 + P2 + P3 + P4 = 40 for your accommodation. However, if after the first three nights you use two of the three points you earned to stay the fourth night for free, then you can pay for the fifth night and use the final two points to get the sixth one for free. In this case, the total cost of your accommodation is P1 + P2 + P3 + P5 = 37, so this option is actually more convenient.\\r\\n\\r\\nYou want to make a program to find out what the minimum possible cost for your holidays\\u2019 accommodation is. You can safely assume that all hotels you want to stay always will have a room available for you, and that the order of the cities you are going to visit cannot be altered.\\n\\t\\t\\t\\t\",\n    \"id\": 2351,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains two integers N and K, representing the total number of nights your holidays will last, and the number of points you need in order to get a free night (1 \\u2264 N,K \\u2264 105). The second line contains N integers P1, P2, . . . , PN, representing the price of the rooms you will be staying at during your holidays (1\\u00a0\\u2264 Pi \\u2264 104 for i = 1, 2, . . . ,N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Hotel Rewards\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with one integer representing the minimum cost of your accommodation for all of your holidays.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Pablo Ariel Heiber  Argentina\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe government is planning to provide internet to people in remote areas, in this case small towns that developed on the side of a long and busy highway. There are N towns located side by side along the highway, each taking up exactly one kilometer of highway. The towns are numbered consecutively along the highway from 1 to N . To provide an internet connection, the government is going to place access-point stations with satellite links, which will provide wired connections for the towns.\\n\\nThe stations are to be placed in one or more different towns, being B the cost to build each station. Since the government wants to provide extremely good service, each house will be connected directly to one of these stations. When connecting a house in town i, we must choose a station in town j for connecting that house. The connection cost is then |i \\u2212 j| \\u00d7 C, where C is the cost of a kilometer of cable. Notice that the intra-town cable cost is small enough to be ignored, so in particular houses in a town where a station is placed do not incur in any cabling cost when connected to that station.\\n\\nGiven N, B, C and the number of houses in each town, write a program to determine the minimum total cost of providing an internet connection for every house in every town, including the cost of building the stations and laying the cabling for each house. Because the government hasn\\u2019t decided yet on the final number of access -point stations to be built, you should calculate the minimum cost when there are 1, 2, . . . , N stations.\\n\\t\\t\\t\\t\",\n    \"id\": 2352,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains three integers N , B and C representing the number of towns, the cost of building one access-point station and the cost of one kilometer of cable, respectively (1 \\u2264 N \\u2264 6000, 1 \\u2264 B \\u2264 109 and 1 \\u2264 C \\u2264 100). The second line contains N integers H1, H2, . . . , HN, where Hi represents the number of houses in the i-th town (1 \\u2264 Hi \\u2264 109 for i = 1, 2, . . . , N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Internet Trouble\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with N integers representing the minimum total cost of providing an internet connection for every house in every town when building 1, 2, . . . , N access-point stations.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Bruno Junqueira Adami  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tHello contestant, I want to play a game. Your coach is in the contest room with a bomb about to explode in his hands. This bomb will be set to detonate in T seconds, and if it detonates in the contest room it is going to explode only your team\\u2019s balloons.\\n\\nI can tell you that the contest room is inside a building that contains N rooms in total. From each room there is exactly one direct tunnel to another room, which can only be used in one direction. For example if room A connects to room B, then you can walk from room A to room B, but not from room B to room A, unless of course room B has a direct tunnel to room A.\\n\\nThe bomb has a special mechanism that detects if your coach stops moving, and if so it immediately triggers the detonation taking all your team\\u2019s balloons down. For that reason your coach will constantly walk between the rooms, taking exactly one second to move through each tunnel. The only way for your team to save its balloons is for your coach not to be in the contest room when the bomb detonates.\\n\\nYou don\\u2019t have the building map in hand, all I can tell you is that the tunnels are chosen uniformly at random. However, I will give you the possibility to set T , which must be an integer between 2 and N inclusive. Your job is to choose T in such a way that it maximizes your balloons\\u2019 chance to survive this riddle.\\n\\nLet the game begin.\\n\\t\\t\\t\\t\",\n    \"id\": 2353,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line that contains one integer N , representing how many rooms there are in the building (2 \\u2264 N \\u2264 109 ).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Just in Time\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with one integer representing the value of T that maximizes your balloons\\u2019 chance to survive the riddle.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Luis Fernando Dorelli de Abreu  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the popular board game One Night Werewolf, players are distributed randomly in the roles of villagers and Werewolves. The goal of the villagers is to decide together on one person to kill during the night \\u2013 hopefully they will kill a Werewolf. Werewolves pose as villagers in the hope that the person killed is a villager, not a Werewolf.\\n\\nIn the variation Uncertain Werewolf, only one Werewolf exists and the game consists of two phases. During the first phase the players are still uncertain about who they should vote to kill, so each of them chooses two other players as possible victims. After the first phase the Werewolf reveals himself, and then in the second phase each player has to decide which one of their two initial choices they will vote to kill. The Werewolf is the last one to decide between his two initial choices, doing so after all the other players have decided already.\\n\\nThe Werewolf then loses the game if he has more votes than anyone else. If there is a draw, the Werewolf wins.\\n\\nYou are given the votes of N players after the first phase of the game. You should answer how many players could reveal themselves at this point as the Werewolf and still win the game if the other players chose their votes optimally to kill the Werewolf.\\n\\t\\t\\t\\t\",\n    \"id\": 2354,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (3 \\u2264 N \\u2264 50), the number of players in the game. Each of the following N lines contains two integers, ai and bi (1 \\u2264 ai , bi \\u2264 N , ai\\u00a0 \\u2260  bi), the index of the players the i-th player decided to kill in the first voting phase. No player will try to kill himself.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Kill the Werewolf\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput a line with one integer representing the number of players that could win the game if they were the Werewolf and everyone played optimally.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Alexandre Davis, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBrazil and Germany was a unforgettable match. In this match, Germany scored 7 times in 90 minutes, while Brazil scored only 1. It was an incredible milestone in history of brazilian soccer, so Leonardo decide make a web page for brazilians never forget this splendid day.\\n\\nThe page shows the scoreboard of the match if it was still going on since that fateful July 8, 2014, considering the same rate of scores (like in figure below). Therefore, Leonardo ask for your help to calculate the scoreboard of the match showed on his web page.\\n\\n\\n\\n\\n\\n\\n\\nObservations\\n\\nAs the web site want shock his fans, the Germany scores should round up while Brazil scores should round down.\\n\\t\\t\\t\\t\",\n    \"id\": 2355,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed for one number N (90 \\u2264 N \\u2264 109) indicating how many minutes passed since the start of the match. It ends when N = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Brazil and Germany\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output should write in only one line: \\u201cBrasil B x Alemanha A\\u201d where B and A are integers indicating how many goals Germany and Brazil did, respectively.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Maciel, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tDr. Henrique really loves your research with bacteria. He tried make an antibiotic resistant bacteria, and when evaluate the DNA, he noticed similarity of the bacteria that are more resistant than the others. All of them have the same part of its genetic code (composed of proteins A, C, G, T). Therefore, Dr. Henrique realized that part of code define if a bacteria is resistant or not. So, Dr. Henrique ask you to make a program that evaluate if a bacteria is resistant given its DNA and the part of genetic code that gives antibiotic resistance.\\n\\t\\t\\t\\t\",\n    \"id\": 2356,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case have two strings, D and S, each one in a line, and represent the DNA of bacteria and the genetic code that gives antibiotic resistance. 1 \\u2264 |D|, |S| \\u2264 100. The strings are composed by characters: A, C, G, T.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Bacteria I\",\n    \"output\": \"\\t\\t\\t\\t\\tOutput one line for each test case, having the string \\\"Resistente\\\" (without quote) if the bacteria have the genetic code required in its DNA, or the string \\\"Nao resistente\\\" (without quote) otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Maciel, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tKing Leonardo II is very worried about violence in Syldavia. Everybody is terrified, saying that this situation must end. So, Leonardo II ask for his advisors remake the street maps of his Kingdom, in the way that is no longer possible travel from one city to another with more than one path (could have no path, but couldn't have more than one).\\n\\nTherefore, King Leonardo II of Syldavia ask you to make a program that verify if a created map is safe or not. And yes, he ask you to do that, because you are in a contest of 5 hours programming, so it will very easy for you! If you don't want do that job, you could also format the advisor's personal computer...\\n\\nObservations\\n\\nAll streets are two-way. There is no warranty about the graph be connected. Could have more than one street connecting the same pair of cities.\\n\\t\\t\\t\\t\",\n    \"id\": 2357,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many test cases separated by a blank line. Each test case start with two integers, N and M, that represent the number of cities and the streets, respectively (1 \\u2264 N \\u2264 10000, 1 \\u2264 M \\u2264 (N * (N-1)) \\u00f7 2). The next M lines have two integers, A and B, means that have one street connecting the cities A and B (1 \\u2264 A, B \\u2264 N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Violence in Syldavia\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case output one line having a string \\\"Seguro\\\" if the Syldavia map is safe according with Leonardo II or \\\"Inseguro\\\" otherwise.\\n\\t\\t\\t\\t\\tIn the last case, there are two possible paths to leave the city 1 and come to itself. The first one is still there, and the second is walk in the street that connect it to itself. That's why this map in unsafe.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Maciel, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tRecently hired for ICPC (Institute of Computing Scientific Research), Doctor Henrique is needing your help again! Heading a project super secret for the Kingdom of Syldavia, Dr. Henrique face a big problem. The bacteria in the project are being destroyed after been contaminated by one type of virus very rare. This virus is capable to destruct each part of genetic code that is the same of its RNA (virus genetic code). Knowing that, Dr. Henrique want create a new type of bacteria that is resistant to this virus, however, he want preserve the largest amount of genetic code of his originals bacteria.\\n\\nYour objective is to find the largest genetic substring (composed only by proteins A, C, G, T) among all contaminated bacteria groups. Follow an example:\\n\\nSuppose the RNA of virus is the sequence TCGA. And also suppose that Dr. Henrique has 3 bacteria's DNA:\\n\\n\\n\\tBacteria 1: GCTTTCGACGAT\\n\\tBacteria 2: GATCGAGCTTCGAA\\n\\tBacteria 3: GGTCTAGCTAAT\\n\\n\\nAfter the infection, the virus will search for the first part of code from begin of the bacteria's DNA that is the same of its RNA and destruct that. And he will repeat the process until there is no more genetic code to be destructed.\\n\\n\\n\\tBacteria 1: GCTTTCGACGAT \\u21d2 GCTTCGAT \\u21d2 GCTT\\n\\tBacteria 2: GATCGAGCTTCGAA \\u21d2 GAGCTTCGAA \\u21d2 GAGCTA\\n\\tBacteria 3: GGTCTAGCTAAT\\n\\n\\nAfter that all bacteria are infected, we gonna find the largest common substring of all of them. This substring is the DNA of the bacteria that Dr. Henrique want find:\\n\\n\\n\\tBacteria 1: GCTT\\n\\tBacteria 2: GAGCTA\\n\\tBacteria 3: GGTCTAGCTAAT\\n\\n\\nDNA result: GCT\\n\\nObservations\\n\\nIt's important to say that the virus always search the DNA from beginning. There is always one answer.\\n\\t\\t\\t\\t\",\n    \"id\": 2358,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many test cases. Each test case have one line with the integer N that means how many bacteria are in the Dr. Henrique project. (1 \\u2264 N \\u2264 20). Following are N lines having one string Si (1 \\u2264 |Si| \\u2264 10000) that are the genetic code of each infected bacteria. The N+2 line have one string R (1 \\u2264 |R| \\u2264 1000) that is the virus RNA. All strings are composed only by the characters: A, C, G, T.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Bacteria II\",\n    \"output\": \"\\t\\t\\t\\t\\tOne string by line for each test case that represent the final bacteria DNA. If have more than on possible solution, output the smallest lexicographically.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Maciel, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tThere is many cities in the Kindgom of Syldavia, but not all have hospitals (there is a lot of small towns and villages). Therefore, when someone need an urgent care, the closest hospital sends an ambulance for help (this ambulance runs the minimum path to patient town). The Syldavia's governor is very worried with this situation and want know what is the maximum time that someone in Syldavia need to wait to be rescued, and he ask you to answer that.\\n\\nObservations\\n\\nThe service time as the time that an ambulance spend inside a city could be neglected.\\n\\t\\t\\t\\t\",\n    \"id\": 2359,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many test cases. Each test case has two integers: N, M e Q (1 \\u2264 N \\u2264 1000, N-1 \\u2264 M \\u2264 (N * (N-1)) \\u00f7 2, 1 \\u2264 Q \\u2264 N), which means the number of cities in Syldavia, the number of highways that connect cities (two-way) and the number of cities that have an hospital, respectively. The next M lines have three integers: A, B and W (1 \\u2264 A, B \\u2264 N, 1 \\u2264 W \\u2264 50) representing that one ambulance spend W hours to run a highway that connect the cities A and B. The other Q lines have one integer X (1 \\u2264 X \\u2264 N), indicating that have one hospital in the town X. There is no highway connecting the same pair of cities. It is guaranteed that one ambulance can leave and get from any city to any city.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Allocating Ambulances\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, output one line with an integer that represent the maximum time that any inhabitant of Syldavia need to wait to be rescued for one ambulance.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Maciel, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tSyldavia is a big Kingdom, like many that you probably know. Syldavia have centrals of supervision to control the energy and water transport systems. Each region of Syldavia have one central of supervision. Everything was okay, until the economic crisis.\\n\\nIn the crisis, the governor of Syldavia decided to cut off expenses. To do that, he installed optical cables between the regions, connecting many pairs of centrals, in the way that each central connected directly or indirectly with all others. As the governor doesn't have a lot of money, he decided use for the N regions, only N-1 cables. There is no central disconnected. The optical cable enabled each central to control one or more centrals that it is directly connected. In other words, centrals could be able to supervision not only its regions, but your neighbors directly connected.\\n\\nNow, it's possible that some centrals of supervision could be shut down (once your region is supervisioned by other central), so the governor hired you to know how many ways we could shut down centrals in a way that all the Kingdom still under supervision.\\n\\nObservations\\n\\nKeep all the Kingdom under supervision means that each region of Syldavia is supervisioned for its own central, or another which is directly connected.\\n\\t\\t\\t\\t\",\n    \"id\": 2360,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of many test cases. Each test case has one integer N that is the number of regions in Syldavia (1 \\u2264 N \\u2264 1000). The next N-1 lines have the connections between the centrals, two integers A e B (1 \\u2264 A, B \\u2264 N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Centrals of Supervision\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case output one integer that is the number of ways to keep Syldavia under supervision modulo 109+7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Dilson Guimar\\u00e3es, UFMG  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tAlexandre, Dilson, Filipe and Lucas need prepare questions for the Seletiva UFMG 2014 and thought in the following problem.\\r\\nLuiz is the newest intern of a company that develop electronic equipment. One of his first tasks is to connect pins of two components, using connections in a straight line. Each one of the two components has N pins, numbered from 1 to N. The pins of the same number should be connected by a straight line. The figure below shows an example.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nThe pins of left component are always numbered from up to down. Unfortunately, the same does not happen with the pins in the right component and is necessary crossed connections. Luiz need compute the maximum amount of connections that need be done, in a way that two connections never cross, what is 3 in the example. Luiz doesn't know how to programming and ask you for your help in this task. The input is composed by the number of pins, N, and the numeration sequence of the second component.\\r\\n\\r\\nThe illustrious creators of this problem are very worried recently and they don't have time to generate test cases. Because of that, your task is to write test cases with N pins that the answer be K. Therefore, in the next contest, your test cases generator could be used as the proposed problem.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2361,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input is composed by two integers, N and K (1 \\u2264 K \\u2264 N \\u2264 106), indicating the number of pins and the answer desired. The input ends with N=K=0.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Input and Output\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each test case, output one line with one sequence of N integers separated by spaces. This sequence should represent the numeration of the pins in the right component such that the answer of the proposed problem be K. If exist many solutions, write the smallest lexicographically.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Dilson Guimar\\u00e3es, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Aliens are going to invade the earth and destroy the human race, unless you stop them. Recently, the S.B.C (Combat Brazilian System) was armed with a powerful laser gun, that will be used to kill the alien enemies. This gun destruct everything that are in a circle area of its shot. Fortunately, its possible control the shots of the gun in a way that it can choose the center and radius of the circle area that will be destructed.\\n\\nYeah, its possible to make a shot with circle area enough to destruct all alien enemies. Unfortunately, if we did that it's possible that all humanity could be destroyed. That's why you have been hired. Your job is to determine how many enemies could be killed for one shot of the laser gun without killing any human.\\n\\nObservations\\n\\nAll man in the border of the destructed area of laser gun are also killed.\\n\\t\\t\\t\\t\",\n    \"id\": 2362,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has many test cases. Each test case has one line with two integers, N and M (1 \\u2264 N, M \\u2264 100), describing the number of aliens and humans, respectively. Each of its next N following lines have two integers, Xi and Yi (-106 \\u2264 Xi, Yi \\u2264 106), representing the coordinates of the aliens. In the same way, each of next M following lines have two integers, Xi and Yi (-106 \\u2264 Xi, Yi \\u2264 106), representing the coordinates of the humans. Besides treating about aliens, its not possible that two individuals are in the same spot. The input ends with N=M=0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Alien Invasion\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, output one integer representing the number of aliens that could be killed with one shot of the laser gun, without any human been killed.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 14.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Maciel, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tLuiz is a very strange boy from Syldavia. He really loves play with sequences of integer numbers. Tired of playing with the same sequence (from 1 to N), Luiz proposed some transformations.:\\n\\t\\t\\t\\t\\t\\n\\n\\n\\tEVEN(S) and ODD(S) are two transformations that filter even or odd positions of any sequence S, returning a new sequence\\n\\tREC(S) = REC(EVEN(S)) + REC(ODD(S)). This recursive transformation concatenate two sequences according with the operator ( + ), filtering both with the previous transformations.\\n\\n\\n\\n\\nAs the sequences could be so large, Luiz only want know the sum of some interval [A, B] modulo 109+7.\\n\\nObservations\\n\\nREC(S) = S for |S| = 1, ie. if some sequence has only one element, REC of its sequence is itself.\\n\\t\\t\\t\\t\",\n    \"id\": 2363,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of many test cases. Each test case has three integers N, A and B that represent the size of the original sequence (from 1 to N), and the interval [A, B] of the REC transformation in the original sequence that want to know the sum. (1 \\u2264 A \\u2264 B \\u2264 N \\u2264 1018).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Playing with Transformations\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, output the sum modulo 109+7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Filipe Arcanjo, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the beginning of the computer, the professors require that the practical tasks of Algorithms and Data Structures II (AEDs II) should did in a language called DCCembly. Unfortunately, only one student was crazy enough to work with this language from scratch. This student was called Henrique. The other students did copies of his works, what sometimes ends with bugs.\\n\\nIn this problem, you should write a program that help detect those copies. Your program will receive as input two valid programs written in DCCembly and return as output how many inputs (modulo 109 + 7) both programs give the same answer.\\n\\n\\n\\tReturn values: [Ii R v]\\n\\n\\tStop the program and return a boolean value v \\u2208{0,1} as output.\\n\\t\\n\\tConditional Branch: [Ii D j Ik Il]\\n\\tRead the input xj and branch the execution to the intruction of label Ik if xj = 1 and Il if xj = 0.\\n\\n\\tWe denote by var(Ii) the evaluate variable for an instruction. Therefore, if [Ii D j Ik Il] is an instruction, var(Ii) = j. For instructions with return values like [Ii R v], we assume that var(Ii) = M + 1.\\n\\t\\n\\n\\nEvery valid program in DCCembly should satisfy the following properties:\\n\\n\\n\\tFor each instruction with label Ii, exist an entry X = (x1, \\u2026, xM) such that Ii be ran when the program receive X.\\n\\tFor each branch instruction [Ii D j Ik Il], we have var(Ii) < var(Ik) and var(Ii) < var(Il).\\n\\tAn branch instruction only have target instructions that appeared previously in the code.\\n\\tThe execution begin in the last instruction.\\n\\tThe instruction labels are unique in a program.\\n\\n\\nWrite a program the receive two valid source codes of DCCembly as input and return the number of different input which the both programs return the same value. Like the answer could be so large, compute that modulo 109 + 7.\\n\\t\\t\\t\\t\",\n    \"id\": 2364,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed by many test cases. Each test case has one line with three integers: M, L0 and L1. The integer M (1 \\u2264 M \\u2264 106 ) mean the amount of variables in the input. L0 mean the number of instructions in the first program (1 \\u2264 L0 \\u2264 1000) and L1 mean the number of instructions in the second (1 \\u2264 L1 \\u2264 1000).\\n\\nFollowing, there are L0 lines having the first program source code. Branch instructions of type [Ii D j Ik Il] are denoted by label Ii (1 \\u2264 Ii \\u2264 L0) followed by the character \\u201cD\\u201d and three integers j, Ik,  and Il. The integer j indicates that variable xj is evaluated by the branch (1 \\u2264 j \\u2264 M). Then, the integers Ik and Il (1 \\u2264 Ik, Il \\u2264 L0) indicate the target instructions of the branch if xj=1 and if xj = 0, respectively. Finally, return instructions [Ii R v] are denoted by a numeric label Ii (1 \\u2264 Ii \\u2264 L0) followed by the character \\u201cR\\u201d and an integer v \\u2208{0, 1}.\\n\\nFinally, other L1 lines describe the second program. As before, branch instructions of type [Ii D j Ik Il] are denoted by label Ii (1 \\u2264 Ii \\u2264 L0) followed by the character \\u201cD\\u201d and three integers j, Ik,  and Il. The integer j indicates that variable xj is evaluated by the branch (1 \\u2264 j \\u2264 M). Then, the integers Ik and Il (1 \\u2264 Ik, Il \\u2264 L0) indicate the target instructions of the branch if xj=1 and if xj = 0, respectively. Finally, return instructions [Ii R v] are denoted by a numeric label Ii (1 \\u2264 Ii \\u2264 L0) followed by the character \\u201cR\\u201d and an integer v \\u2208{0, 1}.\\n\\nNote that the labels are unique only inside the same program.\\n\\nThe input ends with a single line having three zeros, that shouldn't be processed.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Henrique\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, output one single line having the number of different inputs (x1, \\u2026, xM) for that both programs return the same answer modulo 109 + 7.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Alexandre Davis, UFMG  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tMany people will say that's just lucky, but Dilson have an incredible skill in win bets of soccer champioship. His last victory was won the computing bet of World Cup, including predicting the result of the Brazil x Germany and Spain x Netherlands match. Thinking in make himself a professional in bets, he ask you to create a program to compute the final rank of some bet.\\n\\nIn a bet, the competitors hit the scores of the soccer matches before the begin of the championship. After each match, they assign points to the competitors according with the following rules:\\n\\n\\n\\t10 points - If the competitor hit the result (the team that won or lose) and the scores of each team.\\n\\t7 points - If the competitor hit the result and the scores of one team.\\n\\t5 points - If the competitor hit only the result\\n\\t2 points - If the competitor hit the scores of one team\\n\\t0 points - Otherwise\\n\\n\\nAt end of the soccer championship, the competitor that scores more points is the champion. In this problem, you should output the final rank of the bet. The lexicographily order of the competitor name is the unique tiebreaker.\\n\\t\\t\\t\\t\",\n    \"id\": 2365,\n    \"input\": \"\\t\\t\\t\\t\\tThere are many test cases. The first line of each test case is composed by 2 integers P (1 \\u2264 P \\u2264 10) and N (1 \\u2264 N \\u2264 10) indicating, respectivelly, the number of the competitors in the bet and the number of the matches in the champioship. The next lines describe the competitor's hits.\\n\\nThe hit of i-th competitor are described in N+1 lines. The first line has only one Si, what is the name of competitor i. The N following lines describe the hits of each match j. These hits are described by Aj GAi,j Bj GBi,j, where Aj and Bj are strings indicating the teams that will confront in the j-th match, GAi,j and GBi,j ( 0 \\u2264 GAi,j , GBi,j \\u2264 100 ) integer that represent, respectivelly, the scores that competitor i hopes that the teams Aj e Bj did in the match j. The competitors hit in the same order. Then, Aj and Bj are always the same for all competitors.\\n\\nLastly, there are N lines describing the real results of the matches. Each line has Aj RAj Bj RBj, where RAj e RBj ( 0 \\u2264 RAj , RBj \\u2264 100 ) are integers that represent the scores of the teams Aj and Bj in this match.\\n\\nThe input ends with P = N = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Brazilian Soccer' Big Bet\",\n    \"output\": \"\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA empresa local de abastecimento de \\u00e1gua, a Saneamento B\\u00e1sico da Cidade (SBC), est\\u00e1 promovendo uma campanha de conserva\\u00e7\\u00e3o de \\u00e1gua, distribuindo cartilhas e promovendo a\\u00e7\\u00f5es demonstrando a import\\u00e2ncia da \\u00e1gua para a vida e para o meio ambiente.\\r\\n\\r\\nPara incentivar mais ainda a economia de \\u00e1gua, a SBC alterou os pre\\u00e7os de seu fornecimento de forma que, proporcionalmente, aqueles clientes que consumirem menos \\u00e1gua paguem menos pelo metro c\\u00fabico. Todo cliente paga mensalmente uma assinatura de R$ 7, que inclui uma franquia de 10 m\\u00b3 de \\u00e1gua. Isto \\u00e9, para qualquer consumo entre 0 e 10 m\\u00b3 , o consumidor paga a mesma quantia de R$ 7 reais (note que o valor da assinatura deve ser pago mesmo que o consumidor n\\u00e3o tenha consumido \\u00e1gua). Acima de 10 m\\u00b3 cada metro c\\u00fabico subsequente tem um valor diferente, dependendo da faixa de consumo. A SBC cobra apenas por quantidades inteiras de metros c\\u00fabicos consumidos. A tabela abaixo especifica o pre\\u00e7o por metro c\\u00fabico para cada faixa de consumo:\\r\\n\\r\\n\\r\\n\\r\\nAssim, por exemplo, se o consumo foi de 120 m\\u00b3 , o valor da conta \\u00e9:\\r\\n\\r\\n\\r\\n\\t7 reais da assinatura b\\u00e1sica;\\r\\n\\t20 reais pelo consumo no intervalo 11 - 30 m\\u00b3;\\r\\n\\t140 reais pelo consumo no intervalo 31 - 100 m\\u00b3;\\r\\n\\t100 reais pelo consumo no intervalo 101 - 120 m\\u00b3.\\r\\n\\r\\n\\r\\nLogo o valor total da conta de \\u00e1gua \\u00e9 R$ 267.\\r\\n\\r\\nEscreva um programa que, dado o consumo de uma resid\\u00eancia em m3, calcula o valor da conta de \\u00e1gua daquela resid\\u00eancia.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2369,\n    \"input\": \"\\t\\t\\t\\t\\tA \\u00fanica linha da entrada cont\\u00e9m um \\u00fanico inteiro N, indicando o consumo de \\u00e1gua da resid\\u00eancia, em m\\u00b3 (0 \\u2264 N \\u2264 10\\u00b3).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Conta de \\u00c1gua\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo o valor da conta de \\u00e1gua daquela resid\\u00eancia.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tAs aulas de educa\\u00e7\\u00e3o f\\u00edsica, em muitas escolas, acontecem da seguinte maneira: O professor entrega uma bola ao alunos (geralmente de futebol) e estes se dividem em times, onde jogam partidas alternadamente.\\r\\n\\r\\nA maneira como os times s\\u00e3o escolhidos tamb\\u00e9m \\u00e9 semelhante em todas as escolas: decide-se quantos times ser\\u00e3o formados, e uma pessoa para montar cada um dos times. Cada pessoa vai escolher, alternadamente, um dos alunos restantes para fazer parte de sua equipe. Como todos querem ter uma boa equipe, a pessoa que vai escolher o pr\\u00f3ximo membro do time escolhe aquele, dentre os ainda dispon\\u00edveis, que possui o melhor n\\u00edvel de habilidade. Assim, os times acabam ficando relativamente equilibrados na soma do n\\u00edvel de habilidade dos jogadores.\\r\\n\\r\\nDada uma lista de alunos que ser\\u00e3o escolhidos e seus respectivos n\\u00edveis de habilidade para os times e a quantidade de times que ser\\u00e3o formados, mostre como ficar\\u00e3o os times ao final do processo de montagem dos mesmos.\\n\\t\\t\\t\\t\",\n    \"id\": 2370,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros N (2 \\u2264 N \\u2264 10.000) e T (2 \\u2264 T \\u2264 1000), representando respectivamente a quantidade de alunos e o n\\u00famero de times a serem formados, sendo T \\u2264 N. As N linhas seguintes descrevem, cada uma, um aluno dispon\\u00edvel para escolha de times. Cada uma dessas linhas possui o nome do aluno (composto apenas por letras min\\u00fasculas) e um inteiro H (0 \\u2264 H \\u2264 1.000.000) descrevendo seu n\\u00edvel de habilidade).\\r\\n\\r\\nN\\u00e3o existem dois alunos com o mesmo n\\u00edvel de habilidade, e todos eles possuem nomes diferentes. \\u00e9 poss\\u00edvel que alguns times acabem ficando com menos jogadores do que os outros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Times\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir a lista de times que ser\\u00e1 formada ao final do processo de sele\\u00e7\\u00e3o. Para cada time, voc\\u00ea dever\\u00e1 mostrar o termo \\\"Time N\\\", onde N \\u00e9 o n\\u00famero do time (1 para o primero, 2 para o segundo, e assim por diante) seguido de K linhas, onde K \\u00e9 a quantidade de jogadores do time, mostrando o nome de cada um dos jogadores do time, em ordem alfab\\u00e9tica. Imprima uma linha em branco ap\\u00f3s cada descri\\u00e7\\u00e3o de time (inclusive do \\u00faltimo).\\r\\n\\r\\nOs times ser\\u00e3o escolhidos pelo computador, ent\\u00e3o n\\u00e3o \\u00e9 necess\\u00e1rio considerar o aluno que ir\\u00e1 fazer a escolha dos times.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tOBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tPedro and Paulo love to play Naval Battle; despite being good friends, Pedro suspects that Paulo is not playing honestly. To fix this, Pedro decided to use a computer program to verify the game result, but he doesn't know how to program so he asked for your help. The naval battle it's a board game with N lines and M columns. Each position in this board is a square that can contain water or a ship piece. Two squares are neighbors if they have a side in common. If both ship parts are on neighbors then these pieces belong to the same ship. One rule forbids that two different ships share a single ship part (in other words, the squares of two different ship parts are in the same position). Each shot that one player does must be thrown at the board of the other player. The other player tells the other the line and column where he wants to shoot. To destroy a ship, the player must hit all its ship pieces. A player mustn't shoot in the same place twice.\\n\\nWrite a program that, given the information about the board and the shots given by the player, determines the number of ships that were destroyed.\\n\\t\\t\\t\\t\",\n    \"id\": 2371,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line contains two integers N and M (1 \\u2264 N \\u2264 100 e M \\u2264 100), representing respectively the number of lines and columns of the board. The next N lines correspond to the board game. Each of these lines contain M characters. Each character indicates the content of the position of the board. If this character is '.', then this position contains water; if it's '#', this position contains a ship piece. The next line contains a number K with the number of the shots given by the player (1 \\u2264 K \\u2264 N \\u00d7 M). The next K lines contain two integers L and C, indicating the the line and column of the shot made by the other player (1 \\u2264 L \\u2264 N e 1 \\u2264 C \\u2264 M).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Naval Battle\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program must print a single line containing an integer, the number of the ships destroyed. Be careful that when one group of test cases that totalizes 30 points, the ships are composed by one piece (or a square position) and if it totalizes 50 points, each ship is contained exactly within one line.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tEvery year, the SBC (Society of Brazilians Chauffeurs) reunite all their members in a city to discuss about their profession. In these meetings they discuss about problems and suggestions for their working condition.\\r\\n\\r\\nThe biggest problem about the meeting is: the members are all scattered around the country, since their profession requires them to travel to different places everyday. For that, the choice of city where it's gonna happen the meeting is done in a way that it doesn't jeopardize any of the truckers. The criteria for this is: the longest distance to reach the local for any of the truckers is minimum as possible. In other words, the distance traveled by the farther trucker must the the shortest possible path.\\r\\n\\r\\nGiven the cities where the truckers can be found and the description of the roads that connect those cities, write a program that determines which will be the minimum distance to reach the meeting place. The truckers know the roads very well, so they always go for the shortest path. There is always a way connecting any pair of cities.\\n\\t\\t\\t\\t\",\n    \"id\": 2372,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line contains two integers N (2 \\u2264 N \\u2264 100) and M (N \\u2212 1 \\u2264 M \\u2264 10000), they represent, respectively, the amount of cities and the amount of roads that connect them. The cities are identified by integers between 0 and N - 1. The next M lines will contain, in each one, a description of the road. Each description will be composed by three integers: U, V and W, where U and V are cities (0 \\u2264 U \\u2264 N \\u2212 1 e 0 \\u2264 V \\u2264 N \\u2212 1) and W is the distance between the cities (all the roads are two-way, 1 \\u2264 W \\u2264 100). It's always possible to travel between the cities with roads available, but it may have more than one road connecting the same pair of cities.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Meeting\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program must print a single line containing an integer, the minimum distance ran by a trucker to go to the meeting, followed all the established restrictions (in other words, this distance must be the shortest as possible).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tParte do treinamento de um novo gar\\u00e7om \\u00e9 carregar uma grande bandeja com v\\u00e1rias latas de bebidas e copos e entreg\\u00e1-las todas numa mesa do restaurante. Durante o treinamento \\u00e9 comum que os gar\\u00e7ons deixem cair as bandejas, quebrando todos os copos.\\n\\nA SBC - Sociedade Brasileira de Copos - analisou estat\\u00edsticas do treinamento de diversos gar\\u00e7ons e descobriu que os gar\\u00e7ons em treinamento deixam cair apenas bandejas que t\\u00eam mais latas de bebidas que copos.\\n\\nPor exemplo, se uma bandeja tiver 10 latas e 4 copos, certamente o gar\\u00e7om em treinamento a deixar\\u00e1 cair, quebrando os 4 copos. J\\u00e1 se a bandeja tiver 5 latas e 6 copos, ele conseguir\\u00e1 entreg\\u00e1-la sem deixar cair.\\n\\nEscreva um programa que, dado o n\\u00famero de latas e copos em cada bandeja que o gar\\u00e7om tentou entregar, imprime o total de copos que ele quebrou.\\n\\t\\t\\t\\t\",\n    \"id\": 2373,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro N (1 \\u2264 N \\u2264 100) representando o n\\u00famero de bandejas que o gar\\u00e7om tentou entregar. As N linhas seguintes representam as N bandejas. Cada linha cont\\u00e9m dois inteiros L e C, indicando o n\\u00famero de latas e o n\\u00famero de copos naquela bandeja, respectivamente (0 \\u2264 L, C \\u2264 100).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Gar\\u00e7om\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um \\u00fanico inteiro, indicando o n\\u00famero total de copos que o gar\\u00e7om quebrou.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tCalibrar os pneus do carro deve ser uma tarefa cotidiana de todos os motoristas. Para isto, os postos de gasolina possuem uma bomba de ar. A maioria das bombas atuais s\\u00e3o eletr\\u00f4nicas, permitindo que o motorista indique a press\\u00e3o desejada num teclado. Ao ser ligada ao pneu, a bomba primeiro l\\u00ea a press\\u00e3o atual e calcula a diferen\\u00e7a de press\\u00e3o entre a desejada e a lida. Com esta diferen\\u00e7a ela esvazia ou enche o pneu para chegar na press\\u00e3o correta.\\r\\n\\r\\nSua ajuda foi requisitada para desenvolver o programa da pr\\u00f3xima bomba da SBC - Sistemas de Bombas Computadorizadas.\\r\\n\\r\\nEscreva um programa que, dada a press\\u00e3o desejada digitada pelo motorista e a press\\u00e3o do pneu lida pela bomba, indica a diferen\\u00e7a entre a press\\u00e3o desejada e a press\\u00e3o lida.\\n\\t\\t\\t\\t\",\n    \"id\": 2374,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro N que indica a press\\u00e3o desejada pelo motorista (1 \\u2264 N \\u2264 40). A segunda linha cont\\u00e9m um inteiro M que indica a press\\u00e3o lida pela bomba (1 \\u2264 M \\u2264 40).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Pneu\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo a diferen\\u00e7a entre a press\\u00e3o desejada e a press\\u00e3o lida.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA Copa do Mundo de 2010 ser\\u00e1 realizada na \\u00e1frica do Sul. Bolas de futebol s\\u00e3o muito f\\u00e1ceis de transportar, j\\u00e1 que elas saem das f\\u00e1bricas vazias e s\\u00f3 s\\u00e3o enchidas somente pelas lojas ou pelos consumidores finais.\\r\\n\\r\\nInfelizmente o mesmo n\\u00e3o pode ser dito das bolas de boliche. Como elas s\\u00e3o completamente s\\u00f3lidas, elas s\\u00f3 podem ser transportadas embaladas uma a uma, em caixas separadas.\\r\\n\\r\\nA SBC - S\\u00f3 Boliche Cascavel - \\u00e9 uma f\\u00e1brica de bolas de boliche que trabalha somente atrav\\u00e9s de encomendas e envia todas as bolas por SEDEX. Como as bolas t\\u00eam tamanhos diferentes, a SBC tem v\\u00e1rios tamanhos de caixas diferentes para transport\\u00e1-las.\\r\\n\\r\\nEscreva um programa que, dado o di\\u00e2metro de uma bola e as 3 dimens\\u00f5es de uma caixa (altura, largura e profundidade), diz se a bola de boliche cabe dentro da caixa ou n\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"id\": 2375,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro N (1 \\u2264 N \\u2264 10.000) que indica o di\\u00e2metro da bola de boliche. A segunda linha da entrada cont\\u00e9m 3 n\\u00fameros inteiros separados por um espa\\u00e7o cada: a altura A (1 \\u2264 A \\u2264 10.000), seguida da largura L (1 \\u2264 L \\u2264 10.000) e da profundidade P (1 \\u2264 P \\u2264 10.000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Sedex\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo a letra 'S' caso a bola de boliche caiba dentro da caixa ou 'N' caso contr\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Scaling with Big Comfort (SBC) it's a traditional company, with more than 50 years working on the production of elevators. All SBC's projects follow the most stringent safety standards, but unfortunately a series of accidents involving their elevators ruined the company's reputation.\\n\\nBy studying the accident, the company's engineers found that in several cases, the accident was caused by excess passengers in the elevator. So, SBC decided to monitor more strictly the use of their elevators: they installed a sensor in each door to count how many people get in and out in each floor. They have the records of an entire day of the elevator (that always start empty). They know that people are well polite and always let all the passenges go out before going inside it, yet they are having difficulties to decide if the maximum capacity was exceeded or not.\\n\\nYour job is to write a program that, given a sequence of sensor readings and the maximum capacity of the elevator, determine if it was exceeded at any point.\\n\\t\\t\\t\\t\",\n    \"id\": 2378,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line contain two integers, N and C, indicating the number of sensor readings and the maximum capacity of the elevator, respectively (1 \\u2264 N \\u2264 1000 and 1 \\u2264 C \\u2264 1000). The next N lines contain, each one, the sensor reading count. Each one have two integers, S and E, indicating how many people came out and how much entered in that floor, respectively (0 \\u2264 S \\u2264 1000 and 0 \\u2264 E \\u2264 1000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Elevator\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program must print a single line containing the character 'S' if the capacity was exceeded at any moment, or 'N' otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA OBI (Organiza\\u00e7\\u00e3o Brasileira dos \\u00cdndios) promover\\u00e1 um festival ind\\u00edgena, onde v\\u00e1rias tribos ir\\u00e3o se reunir e fazer demonstra\\u00e7\\u00f5es de cultura, como artesanato, dan\\u00e7as, pinturas, comidas e etc.\\n\\n\\t\\t\\t\\t\\tUma das tribos \\u00e9 a dos Tunak Tunak, que possuem uma apresenta\\u00e7\\u00e3o de dan\\u00e7a muito peculiar. Nessa dan\\u00e7a, existem N toras de madeira encrustadas no ch\\u00e3o, dispostas de maneira circular e igualmente espa\\u00e7adas. Em algumas dessas toras fica um \\u00edndio, olhando em sentido hor\\u00e1rio ou anti-hor\\u00e1rio.\\n\\n\\t\\t\\t\\t\\tA cada batida do tambor, os \\u00edndios pulam para a pr\\u00f3xima tora (que depende da dire\\u00e7\\u00e3o para onde ele est\\u00e1 olhando no momento). Durante a dan\\u00e7a, por\\u00e9m, algumas coisas podem acontecer:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tDois \\u00edndios que pulam em sentidos opostos caem na mesma tora ao mesmo tempo. Nesse caso, ambos permanecem nas toras, mas passam a pular na dire\\u00e7\\u00e3o contr\\u00e1ria a partir da pr\\u00f3xima batida de tambor (isso \\u00e9, quem estava pulando em sentido hor\\u00e1rio passa a pular em sentido anti-hor\\u00e1rio, e vice-versa).\\n\\t\\t\\t\\t\\t\\tDois \\u00edndios em toras consecutivas v\\u00e3o pular um em dire\\u00e7\\u00e3o ao outro. Nesse caso, os \\u00edndios simplesmente n\\u00e3o pulam (para n\\u00e3o causar nenhum acidente), e, assim como no caso anterior, passam a pular no sentido contr\\u00e1rio a partir da pr\\u00f3xima batida de tambor.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tNote que se o \\u00edndio n\\u00e3o pula e inverte seu sentido, mas ao mesmo tempo um outro \\u00edndio cair na mesma tora no sentido contr\\u00e1rio, caimos no primeiro caso, e ambos os \\u00edndios na tora invertem seus sentidos (assim, o \\u00edndio que estava na tora anteriormente inverte seu sentido novamente).\\n\\n\\t\\t\\t\\t\\tA dan\\u00e7a termina quando as toras ocupadas por um \\u00edndio s\\u00e3o exatamente as mesmas toras ocupadas no in\\u00edcio da dan\\u00e7a, n\\u00e3o importando qual \\u00edndio est\\u00e1 em cada tora e nem os sentidos para onde eles est\\u00e3o pulando.\\n\\n\\t\\t\\t\\t\\tA figura abaixo ilustra (a) uma configura\\u00e7\\u00e3o inicial com oito toras e seis \\u00edndios; (b) a posi\\u00e7\\u00e3o dos \\u00edndios ap\\u00f3s uma batida de tambor; e (c) a posi\\u00e7\\u00e3o dos \\u00edndios ap\\u00f3s duas batidas de tambor.\\n\\n\\t\\t\\t\\t\\t  \\n \\n\\t\\t\\t\\t\\tOs \\u00edndios querem se preparar para a dan\\u00e7a e precisam saber quanto tempo ela vai durar.\\n\\n\\t\\t\\t\\t\\tPara isso, voc\\u00ea dever\\u00e1 escrever um programa que, dados a quantidade de toras que ser\\u00e3o utilizadas, a quantidade de \\u00edndios e a posi\\u00e7\\u00e3o inicial de cada um, calcule quantas batidas de tambor levar\\u00e1 para que a dan\\u00e7a termine.\\n\\t\\t\\t\\t\",\n    \"id\": 2379,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada possui 2 inteiros: N (3 \\u2264 N \\u2264 1.000.000) e E (1 \\u2264 E \\u2264 1000), que s\\u00e3o, respectivamente, a quantidade de toras e a quantidade de \\u00edndios que ir\\u00e3o dan\\u00e7ar (E \\u2264 N). As pr\\u00f3ximas E linhas cont\\u00e9m, cada uma, a descri\\u00e7\\u00e3o da posi\\u00e7\\u00e3o inicial de cada \\u00edndio. Cada linha possui dois inteiros: V (1 \\u2264 V \\u2264 N) e D (D = 1 ou D = -1) que representam, respectivamente, o n\\u00famero da tora onde o \\u00edndio inicia e seu sentido inicial (1 se hor\\u00e1rio, -1 se anti-hor\\u00e1rio). A numera\\u00e7\\u00e3o das toras obedece o sentido hor\\u00e1rio. No in\\u00edcio da dan\\u00e7a uma tora ter\\u00e1, no m\\u00e1ximo, um \\u00edndio.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Dan\\u00e7a Ind\\u00edgena\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa dever\\u00e1 exibir um n\\u00famero inteiro representando a quantidade de batidas de tambor necess\\u00e1rias para que a dan\\u00e7a acabe.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA informatiza\\u00e7\\u00e3o dos sistemas banc\\u00e1rios permitiu grandes economias de tempo e dinheiro, permitindo que v\\u00e1rios tipos de transa\\u00e7\\u00f5es financeiras pudessem ser realizadas pela Internet. Para possibilitar isso, cada banco recebeu um c\\u00f3digo banc\\u00e1rio, que \\u00e9 um n\\u00famero utilizado pelos sistemas de computador para identificar cada banco.\\n\\nQuando um banco decide comprar outro, ocorre o que se chama uma fus\\u00e3o: os dois bancos tornam-se um s\\u00f3 banco. Para manter compatibilidade com os sistemas eletr\\u00f4nicos dos bancos, qualquer um dos c\\u00f3digos dos antigos bancos pode ser usado para se referir ao novo banco.\\n\\nCom a crise econ\\u00f4mica internacional, as fus\\u00f5es entre bancos t\\u00eam sido cada vez mais comuns; por isso, muitas vezes \\u00e9 dif\\u00edcil decidir se dois c\\u00f3digos banc\\u00e1rios na realidade se referem ao mesmo banco (devido aos dois bancos terem se fundido, diretamente ou n\\u00e3o).\\n\\nEscreva um programa que, dada uma s\\u00e9rie de fus\\u00f5es entre bancos, responde a v\\u00e1rias consultas perguntando se dois c\\u00f3digos banc\\u00e1rios se referem ao mesmo banco.\\n\\t\\t\\t\\t\",\n    \"id\": 2380,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros N e b, indicando o n\\u00famero de bancos e o n\\u00famero de opera\\u00e7\\u00f5es efetuadas (1 \\u2264 N \\u2264 100.000, 1 \\u2264 K \\u2264 100.000). Os c\\u00f3digos de cada um dos N bancos, inicialmente, s\\u00e3o os inteiros de 1 at\\u00e9 N.\\n\\nCada uma das K linhas seguintes descreve ou uma fus\\u00e3o entre bancos ou uma consulta.\\n\\n\\n\\tUma fus\\u00e3o \\u00e9 descrita na entrada como uma linha que come\\u00e7a com o caractere 'F', um espa\\u00e7o, e dois c\\u00f3digos banc\\u00e1rios, que se referem aos dois bancos que est\\u00e3o sofrendo a fus\\u00e3o, separados por um espa\\u00e7o em branco;\\n\\tUma consulta \\u00e9 descrita na entrada como uma linha que come\\u00e7a com o caractere 'C', um espa\\u00e7o, e os dois c\\u00f3digos a serem consultados, separados por um espa\\u00e7o em branco. Os c\\u00f3digos banc\\u00e1rios consultados s\\u00e3o sempre distintos.\\n\\n\\nAs fus\\u00f5es s\\u00e3o sempre realizadas entre bancos diferentes, e todos os c\\u00f3digos banc\\u00e1rios fornecidos na entrada s\\u00e3o v\\u00e1lidos.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Fus\\u00f5es\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma linha para cada consulta na entrada. Caso os dois c\\u00f3digos banc\\u00e1rios consultados se refiram ao mesmo banco, imprima uma linha contendo o caractere 'S'; caso contr\\u00e1rio, imprima uma linha contendo apenas o caractere 'N'.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tTia Joana \\u00e9 uma respeitada professora e tem v\\u00e1rios alunos. Em sua \\u00faltima aula, ela prometeu que iria sortear um aluno para ganhar um b\\u00f4nus especial na nota final: ela colocou N peda\\u00e7os de papel numerados de 1 a N em um saquinho e sorteou um determinado n\\u00famero K; o aluno premiado foi o K-\\u00e9simo aluno na lista de chamada.\\n\\n\\t\\t\\t\\t\\tO problema \\u00e9 que a Tia Joana esqueceu o di\\u00e1rio de classe, ent\\u00e3o ela n\\u00e3o tem como saber qual n\\u00famero corresponde a qual aluno. Ela sabe os nomes de todos os alunos, e que os n\\u00fameros deles, de 1 at\\u00e9 N, s\\u00e3o atribu\\u00eddos de acordo com a ordem alfab\\u00e9tica, mas os alunos dela est\\u00e3o muito ansiosos e querem logo saber quem foi o vencedor.\\n\\n\\t\\t\\t\\t\\tDado os nomes dos alunos da Tia Joana e o n\\u00famero sorteado, determine o nome do aluno que deve receber o b\\u00f4nus.\\n\\t\\t\\t\\t\",\n    \"id\": 2381,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha cont\\u00e9m dois inteiros N e K separados por um espa\\u00e7o em branco (1 \\u2264 K \\u2264 N \\u2264 100). Cada uma das N linhas seguintes cont\\u00e9m uma cadeia de caracteres de tamanho m\\u00ednimo 1 e m\\u00e1ximo 20 representando os nomes dos alunos. Os nomes s\\u00e3o compostos apenas por letras min\\u00fasculas de 'a' a 'z'.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Lista de Chamada\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo o nome do aluno que deve receber o b\\u00f4nus.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tEstamos no ano 2048 e um dos sonhos da humanidade torna-se finalmente realidade: a coloniza\\u00e7\\u00e3o do planeta Marte. Nossos primeiros colonizadores acabam de chegar, e j\\u00e1 come\\u00e7am a fazer as prepara\\u00e7\\u00f5es (como a instala\\u00e7\\u00e3o de c\\u00fapulas de oxig\\u00eanio e tratamento do solo para agricultura) para que mais pessoas possam tentar uma nova vida no planeta vizinho.\\n\\n\\t\\t\\t\\t\\tApesar dos avan\\u00e7os tecnol\\u00f3gicos e desafios vencidos, ainda resta um grande problema: os foguetes usados para ir a Marte ainda s\\u00e3o complicados e caros. Com isso, fica dif\\u00edcil enviar suprimentos para os nossos colonos (enquanto a agricultura ainda n\\u00e3o \\u00e9 poss\\u00edvel) por muito tempo. Assim, a ag\\u00eancia espacial contratou o SBC (Servi\\u00e7o Bal\\u00edstico C\\u00f3smico), que desenvolveu um canh\\u00e3o super-potente que consegue disparar esferas at\\u00e9 Marte, sem precisar gastar milh\\u00f5es de d\\u00f3lares em equipamento e combust\\u00edvel.\\n\\n\\t\\t\\t\\t\\tAgora, tudo o que \\u00e9 necess\\u00e1rio fazer para enviar suprimentos a Marte \\u00e9 colocar uma caixa com as encomendas dentro de uma esfera e disparar a mesma at\\u00e9 seu destino.\\n\\n\\t\\t\\t\\t\\tDadas as dimens\\u00f5es de uma caixa com suprimentos e o raio interno da esfera que \\u00e9 disparada pelo canh\\u00e3o, seu programa dever\\u00e1 dizer se \\u00e9 poss\\u00edvel enviar tal caixa para Marte usando tal esfera.\\n\\t\\t\\t\\t\",\n    \"id\": 2382,\n    \"input\": \"\\t\\t\\t\\t\\tCada entrada cont\\u00e9m apenas uma linha com quatro inteiros L, A, P e R, (0 \\u2264 L, A, P, R \\u2264 1000) que representam, respectivamente, a largura, altura e profundidade da caixa, e o raio da esfera.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Sedex Marciano\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir um \\u00fanico caractere: 'S' (sem aspas) se \\u00e9 poss\\u00edvel colocar a caixa dentro da esfera, ou 'N' (sem aspas) caso contr\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica, 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIncentivado por um filme de anima\\u00e7\\u00e3o recente, vov\\u00f4 resolveu realizar seu sonho de crian\\u00e7a, fazendo sua pequena casa voar amarrada a bal\\u00f5es de h\\u00e9lio. Comprou alguns bal\\u00f5es coloridos de boa qualidade, para fazer alguns testes, e come\\u00e7ou a planejar a grande aventura. A primeira tarefa \\u00e9 determinar qual a quantidade de h\\u00e9lio m\\u00e1xima que pode ser injetada em cada bal\\u00e3o de maneira que ele nao estoure.\\n\\n\\t\\t\\t\\t\\tSuponha que os valores poss\\u00edveis de quantidade de h\\u00e9lio em cada bal\\u00e3o variem entre os valores 1 e N. Claro que vov\\u00f4 poderia testar todas as possibilidades, mas esse tipo de solu\\u00e7\\u00e3o ineficiente n\\u00e3o \\u00e9 apropriada, ainda mais considerando que vov\\u00f4 comprou apenas K bal\\u00f5es para os testes.\\n\\n\\t\\t\\t\\t\\tPor exemplo, suponha que N = 5 e K = 2. Nesse caso, a melhor solu\\u00e7\\u00e3o seria testar primeiro em 3. Caso o bal\\u00e3o estoure, vov\\u00f4 s\\u00f3 teria mais um bal\\u00e3o, ent\\u00e3o teria de testar 1 e 2 no pior caso, somando ao todo 3 testes. Caso o bal\\u00e3o n\\u00e3o estoure, vov\\u00f4 poderia testar 4 e depois 5 (ou 5 e depois 4), tamb\\u00e9m somando 3 ao todo.\\n\\n\\t\\t\\t\\t\\tDados a capacidade m\\u00e1xima da bomba e o n\\u00famero de bal\\u00f5es, indique o n\\u00famero m\\u00ednimo de testes que devem ser feitos, no pior caso, para determinar o ponto em que um bal\\u00e3o estoura.\\n\\t\\t\\t\\t\",\n    \"id\": 2383,\n    \"input\": \"\\t\\t\\t\\t\\tA \\u00fanica linha da entrada cont\\u00e9m dois inteiros, N e K, separados por espa\\u00e7o em branco (1 \\u2264 K \\u2264 N \\u2264 109).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Altas Aventuras\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um inteiro que representa o n\\u00famero m\\u00ednimo de testes que devem ser feitos no pior caso para determinar o ponto em que o bal\\u00e3o estoura.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica, 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\t\\u00c9 de conhecimento p\\u00fablico e not\\u00f3rio que j\\u00e1 fomos visitados por alien\\u00edgenas diversas vezes. A grande dificuldade que temos, por\\u00e9m, \\u00e9 a comunica\\u00e7\\u00e3o com eles, por causa de grandes diferen\\u00e7as entre as l\\u00ednguas. Al\\u00e9m disso, assim como n\\u00f3s, eles tamb\\u00e9m t\\u00eam v\\u00e1rias l\\u00ednguas diferentes.\\n\\n\\t\\t\\t\\t\\tCom o intuito de auxiliar no processo de tradu\\u00e7\\u00e3o, foi criado um m\\u00e9todo de mapeamento dos s\\u00edmbolos do alfabeto de cada l\\u00edngua alien\\u00edgena, atribuindo um n\\u00famero inteiro para cada s\\u00edmbolo. Sendo assim, para um alfabeto alien\\u00edgena com N elementos, atribui-se n\\u00fameros de 1 a N a cada um.\\n\\n\\t\\t\\t\\t\\tO problema \\u00e9 que o encarregado de transcrever os textos alien\\u00edgenas para n\\u00fameros n\\u00e3o foi muito cuidadoso e usou o mesmo espa\\u00e7amento entre d\\u00edgitos e n\\u00fameros. Assim, por exemplo, digamos que para um alfabeto com 32 s\\u00edmbolos, uma sequ\\u00eancia que deveria ser \\u201c31 20 4 19\\u201d virou \\u201c3120419\\u201d. Como se pode notar, h\\u00e1 diferentes maneiras v\\u00e1lidas de interpretar essa sequ\\u00eancia al\\u00e9m da original, como por exemplo \\u201c3 1 20 4 19\\u201d e \\u201c31 20 4 19\\u201d. Repare que a transcri\\u00e7\\u00e3o nunca usa zeros \\u00e0 esquerda de um n\\u00famero e, portanto, a sequ\\u00eancia \\u201c3 12 04 19\\u201d \\u00e9 inv\\u00e1lida, assim como \\u201c31 20 41 9\\u201d por conter um n\\u00famero (49) que n\\u00e3o corresponde a um s\\u00edmbolo.\\n\\n\\t\\t\\t\\t\\tDados a quantidade de s\\u00edmbolos do alfabeto e uma sequ\\u00eancia transcrita, determine quantas sequ\\u00eancias v\\u00e1lidas podem ser formadas.\\n\\t\\t\\t\\t\",\n    \"id\": 2384,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 composta por duas linhas. A primeira cont\\u00e9m um n\\u00famero inteiro N (1 < N < 10100) que indica a quantidade de s\\u00edmbolos do alfabeto. A segunda linha cont\\u00e9m uma cadeia de d\\u00edgitos de tamanho m\\u00ednimo 1 e tamanho m\\u00e1ximo 100.000 que corresponde a sequ\\u00eancia transcrita.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Tradutor Alien\\u00edgena\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma linha com o resto da divis\\u00e3o da quantidade de sequ\\u00eancias v\\u00e1lidas por 1.000.000.007.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica, 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tO conglomerado indiano Tutu \\u00e9 um conjunto de empresas que atua nos mais diversos ramos da ind\\u00fastria, produzindo desde sapatos at\\u00e9 avi\\u00f5es e foguetes. Por ser t\\u00e3o diversificada, precisa de grandes e r\\u00e1pidos sistemas para c\\u00e1lculos de contabilidade.\\n\\n\\t\\t\\t\\t\\tUm dos m\\u00f3dulos mais importantes desse sistema \\u00e9 o de fornecimento de produtos, onde fica a base de dados de produtos e fornecedores. Um mesmo produto pode ser fornecido por v\\u00e1rios fornecedores diferentes.\\n\\n\\t\\t\\t\\t\\tO sistema possui duas grandes matrizes: a matriz A, onde cada linha representa um produto e cada coluna representa um fornecedor. O valor da matriz na linha m e coluna n representa o pre\\u00e7o do produto m se for comprado do fornecedor n.\\n\\n\\t\\t\\t\\t\\tA outra grande matriz \\u00e9 a B, onde cada linha representa um dia do m\\u00eas e cada coluna \\u00e9 um produto. O valor da matriz na linha m e coluna n representa a quantidade do produto n a ser adquirido no dia m. Tal empresa tem uma pol\\u00edtica de fidelidade com seus fornecedores, e uma das pr\\u00e1ticas efetuadas pela empresa \\u00e9, em um determinado dia, comprar todos os produtos necess\\u00e1rios de um \\u00fanico fornecedor. Isto \\u00e9, em um dia todos os produtos adquiridos ser\\u00e3o comprados do fornecedor x, no outro dia do fornecedor y, e assim por diante.\\n\\n\\t\\t\\t\\t\\tPara auxiliar a escolha de qual fornecedor ser\\u00e1 o escolhido no dia, foi gerada outra matriz C, que \\u00e9 o resultado da multiplica\\u00e7\\u00e3o das matrizes A \\u00d7 B. Essa matriz diz o quanto ser\\u00e1 gasto pela empresa se adquirir todos os produtos de um determinado fornecedor em um determinado dia.\\n\\n\\t\\t\\t\\t\\tAs matrizes A e B s\\u00e3o quadradas (o n\\u00famero de linhas \\u00e9 igual ao n\\u00famero de colunas) e t\\u00eam valores definidos pelas f\\u00f3rmulas:\\n\\n\\t\\t\\t\\t\\tAij = (P \\u00d7 i + Q \\u00d7 j) (mod X)\\n\\t\\t\\t\\t\\tBij = (R \\u00d7 i + S \\u00d7 j) (mod Y)\\n\\n\\t\\t\\t\\t\\tonde i \\u00e9 o \\u00edndice da linha da matriz e j \\u00e9 o \\u00edndice da coluna da matriz (todos os \\u00edndices v\\u00e3o de 1 at\\u00e9 N). Os inteiros P, Q, R, S, X e Y s\\u00e3o par\\u00e2metros constantes, que definem as duas matrizes A e B.\\n\\n\\t\\t\\t\\t\\tEscreva um programa que, dados os par\\u00e2metros das matrizes A e B, e a posi\\u00e7\\u00e3o de uma das entradas as matriz C, calcula o valor daquela entrada.\\n\\t\\t\\t\\t\",\n    \"id\": 2385,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro N, indicando as dimens\\u00f5es das matrizes A, B e C (2 \\u2264 N \\u2264 105). A linha seguinte cont\\u00e9m seis inteiros P, Q, R, S, X e Y, indicando os par\\u00e2metros das matrizes A e B (2 \\u2264 X, Y \\u2264 104; 0 \\u2264 P, Q < X; 0 \\u2264 R, S < Y).\\n\\n\\t\\t\\t\\t\\tFinalmente, a \\u00faltima linha da entrada cont\\u00e9m dois inteiros I e J, indicando a linha e a coluna da matriz C a serem consultados (1 \\u2264 I, J \\u2264 N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Multiplica\\u00e7\\u00e3o de Matrizes\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha contendo o valor da matriz C na linha e coluna especificadas.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica, 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tTelesc\\u00f3pios s\\u00e3o instrumentos que auxiliam a observa\\u00e7\\u00e3o do c\\u00e9u, melhorando e aumentando o aspecto das estrelas, planetas e outros objetos brilhantes. Existem diversos tipos de telesc\\u00f3pios, sendo os tipos mais comuns os de lentes objetivas (refratores) e os de espelhos (refletores).\\n\\n\\t\\t\\t\\t\\tA maneira como os telesc\\u00f3pios melhoram a nossa percep\\u00e7\\u00e3o dos astros no c\\u00e9u \\u00e9 aumentando a quantidade de luz captada que chega aos nossos olhos. Toda luz que entra pelos nossos olhos entra por um orif\\u00edcio chamado pupila. Tal controla a quantidade de luz que entra nos olhos, aumentando o di\\u00e2metro quando o ambiente est\\u00e1 escuro (e portanto precisamos obter mais luz para identificar os objetos) e diminuindo quando o ambiente est\\u00e1 claro. Num ambiente muito escuro, a pupila pode atingir um di\\u00e2metro de 8 mm.\\n\\n\\t\\t\\t\\t\\tCada objeto celeste (estrela, planeta, nebulosa, etc) emite uma quantidade de luz (f\\u00f3tons) que \\u00e9 homogeneamente distribu\\u00edda quando chega na Terra. Por exemplo, a estrela A emite luz que pode ser captada a um fluxo de 40.000 f\\u00f3tons por segundo por mil\\u00edmetro quadrado. Isso \\u00e9, a cada segundo, \\u00e9 poss\\u00edvel captar 40.000 f\\u00f3tons provenientes da estrela A numa \\u00e1rea de 1 mm 2. Ou seja, uma pupila de 10 mm 2 de \\u00e1rea captaria 400.000 f\\u00f3tons provenientes da estrela A por segundo.\\n\\n\\t\\t\\t\\t\\tPara que nosso c\\u00e9rebro consiga interpretar que existe um objeto ali, por\\u00e9m, ele precisa receber 40.000.000 f\\u00f3tons por segundo. Assim, podemos utilizar um telesc\\u00f3pio com lente (ou espelho) de 100 mm 2 de \\u00e1rea, que vai captar a quantidade necess\\u00e1ria de f\\u00f3tons provenientes da estrela A e encaminh\\u00e1-los at\\u00e9 nossa pupila, fazendo assim com que nosso c\\u00e9rebro perceba a presen\\u00e7a da estrela ali.\\n\\n\\t\\t\\t\\t\\tDada uma lista com estrelas no c\\u00e9u, o fluxo de f\\u00f3tons que cada uma delas emite, e \\u00e1rea de abertura de um telesc\\u00f3pio, dizer quantas estrelas ser\\u00e3o percept\\u00edveis usando tal telesc\\u00f3pio.\\n\\t\\t\\t\\t\",\n    \"id\": 2386,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada ter\\u00e1 um inteiro A (1 \\u2264 A \\u2264 10.000) representando a \\u00e1rea de abertura do telesc\\u00f3pio (em mil\\u00edmetros quadrados) a ser considerado. A segunda linha possui um inteiro N (1 \\u2264 N \\u2264 10.000) representando o n\\u00famero de estrelas a serem estudadas. As N linhas seguintes ter\\u00e3o, cada uma, um inteiro F (1 \\u2264 F \\u2264 20.000) representando o fluxo de f\\u00f3tons que cada uma das N estrelas emitem (em f\\u00f3tons por segundo por mil\\u00edmetro quadrado).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Telesc\\u00f3pio\",\n    \"output\": \"\\t\\t\\t\\t\\tImprima um inteiro representando a quantidade de estrelas que ser\\u00e3o percebidas ao se utilizar o telesc\\u00f3pio em quest\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tOs dentistas s\\u00e3o extremamente meticulosos em seu trabalho, tendo que agir com muita precis\\u00e3o em todas as suas atividades. Pedro \\u00e9 um dentista meticuloso como todos os outros. Infelizmente sua secret\\u00e1ria n\\u00e3o \\u00e9 muito organizada e, com o intuito de ajudar sempre os pacientes, aceita que eles marquem consultas no hor\\u00e1rio que quiserem, sem se preocupar com os demais hor\\u00e1rios marcados, ocasionando v\\u00e1rios con\\u00editos de hor\\u00e1rios que muito incomodaram Pedro e os pacientes. Por exemplo, se uma consulta come\\u00e7ar \\u00e0s 9 horas e durar 2 horas, nenhuma outra consulta deveria ser marcada para iniciar as 10 horas.\\n\\n\\t\\t\\t\\t\\tAo perceber que sua agenda tinha con\\u00edito de hor\\u00e1rios, Pedro pediu sua ajuda para descobrir a maior quantidade de consultas que podem ser atendidas sem sobreposi\\u00e7\\u00e3o.\\n\\n\\t\\t\\t\\t\\tVoc\\u00ea deve escrever um programa que, dados os hor\\u00e1rios de in\\u00edcio e t\\u00e9rmino das consultas agendadas pela secret\\u00e1ria, responda a quantidade m\\u00e1xima de consultas que podem ser atenditas sem sobreposi\\u00e7\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"id\": 2387,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro N (1 \\u2264 N \\u2264 10.000) que indica quantas consultas a secret\\u00e1ria marcou. Cada uma das N linhas seguintes cont\\u00e9m um par de inteiros X e Y separados por um espa\\u00e7o em branco (0 \\u2264 X < Y \\u2264 1.000.000) que representam, respectivamente, o hor\\u00e1rio de in\\u00edcio e de t\\u00e9rmino da consulta. Considere que se uma consulta inicia no exato instante em que outra termina n\\u00e3o h\\u00e1 sobreposi\\u00e7\\u00e3o. Os hor\\u00e1rios de in\\u00edcio s\\u00e3o fornecidos em ordem, podendo haver mais de uma consulta que inicie no mesmo hor\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Dentista\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um inteiro que representa a quantidade m\\u00e1xima de consultas que podem ser atendidas sem que haja qualquer sobreposi\\u00e7\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tTac\\u00f3grafos s\\u00e3o dispositivos instalados em determinados tipos de ve\\u00edculos, que registram a velocidade, tempo e dist\\u00e2ncia percorrida por tal ve\\u00edculo. \\u00c9 utilizada principalmente em ve\\u00edculos de transporte coletivo e de transporte de cargas, assim ajudando a evitar abusos de velocidade por parte dos motoristas.\\n\\n\\t\\t\\t\\t\\tA empresa SBC (Sociedade Brasileira dos Caminhoneiros) decidiu encomendar uma vers\\u00e3o um pouco mais b\\u00e1sica (e barata) para seus associados n\\u00e3o precisarem gastar tanto na instala\\u00e7\\u00e3o desses aparelhos. Essas vers\\u00f5es modificadas registram apenas os intervalos de tempo e as velocidades m\\u00e9dias do caminh\\u00e3o naqueles intervalos.\\n\\n\\t\\t\\t\\t\\tApesar das restri\\u00e7\\u00f5es dos aparelhos novos, a SBC quer poder saber qual foi a dist\\u00e2ncia percorrida pelos caminh\\u00f5es. Voc\\u00ea dever\\u00e1 escrever um programa que recebe uma s\\u00e9rie de intervalos de tempo com suas respectivas velocidades m\\u00e9dias e calcula qual foi a dist\\u00e2ncia total percorrida pelo caminh\\u00e3o de acordo com o tac\\u00f3grafo.\\n\\t\\t\\t\\t\",\n    \"id\": 2388,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro N (1 \\u2264 N \\u2264 1000) representando a quantidade de intervalos de tempo registrados no tac\\u00f3grafo. As N linhas seguintes descrevem os intervalos de tempo. Cada uma dessas linhas possui dois inteiros T e V (1 \\u2264 T \\u2264 100, 0 \\u2264 V \\u2264 120), que representam, respectivamente o tempo decorrido (em horas) e a velocidade m\\u00e9dia (em quil\\u00f4metros por hora) no intervalo de tempo.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Tac\\u00f3grafo\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um \\u00fanico n\\u00famero inteiro representando a dist\\u00e2ncia total percorrida, em quil\\u00f4metros.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2010  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tO Shopping Boas Compras - SBC, atrav\\u00e9s de sua pol\\u00edtica ambiental, est\\u00e1 preocupado com o consumo de energia e, resolveu trocar todas as escadas rolantes por modelos mais modernos, que se desligam caso ningu\\u00e9m esteja utilizando, poupando energia.\\n\\n\\t\\t\\t\\t\\tA nova escada rolante possui um sensor no in\\u00edcio. Toda vez que ela est\\u00e1 vazia e algu\\u00e9m passa pelo sensor, a escada come\\u00e7a a funcionar, parando de funcionar novamente ap\\u00f3s 10 segundos se ningu\\u00e9m mais passar pelo sensor. Estes 10 segundos representam o tempo suficiente para levar algu\\u00e9m de um n\\u00edvel ao outro.\\n\\n\\t\\t\\t\\t\\tPreocupados em saber exatamente quanto de energia o shopping est\\u00e1 economizando, o gerente pediu sua ajuda. Como eles sabem qual era o consumo da escada rolante antiga, eles te pediram para calcular o tempo que a nova escada ficou funcionando.\\n\\n\\t\\t\\t\\t\\tDados os instantes, em segundos, em que passaram pessoas pela escada rolante, voc\\u00ea deve calcular quantos segundos ela ficou ligada.\\n\\t\\t\\t\\t\",\n    \"id\": 2390,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro N que indica o n\\u00famero de pessoas que o sensor detectou (1 \\u2264 N \\u2264 1.000). As N linhas seguintes representam o instante em que a n-\\u00e9sima pessoa passou pelo sensor e cont\\u00e9m um inteiro T (0 \\u2264 T \\u2264 10.000). Os tempos est\\u00e3o em ordem crescente, sem repeti\\u00e7\\u00f5es.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Escada Rolante\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo o tempo que a escada rolante ficou ligada.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBob \\u00e9 um aluno do ensino m\\u00e9dio que gosta muito de matem\\u00e1tica. Na \\u00faltima aula ele aprendeu o que s\\u00e3o\\u00a0Progress\\u00f5es Aritm\\u00e9ticas (PAs)\\u00a0e ficou fascinado por elas. Pelo que Bob entendeu, Progress\\u00f5es Aritm\\u00e9ticas s\\u00e3o sequ\\u00eancias de n\\u00fameros nas quais a diferen\\u00e7a entre dois elementos consecutivos \\u00e9 sempre igual a uma constante r, chamada de raz\\u00e3o da PA.\\r\\n\\r\\nUm exemplo de Progress\\u00e3o Aritm\\u00e9tica de raz\\u00e3o 2 \\u00e9 \\u22121, 1, 3, 5. Al\\u00e9m disso, toda sequ\\u00eancia com um ou dois elementos \\u00e9 sempre uma Progress\\u00e3o Aritm\\u00e9tica. Por outro lado, 5, 6, 8, 9, 10 n\\u00e3o \\u00e9 uma PA porque a diferen\\u00e7a entre elementos consecutivos n\\u00e3o \\u00e9 constante: a diferen\\u00e7a entre os dois primeiros elementos \\u00e9 6\\u22125 = 1, enquanto a diferen\\u00e7a entre o terceiro e o segundo elementos \\u00e9 8\\u22126 = 2.\\r\\n\\r\\nBob percebeu que qualquer sequ\\u00eancia, mesmo que a mesma n\\u00e3o seja uma Progress\\u00e3o Aritm\\u00e9tica, pode ser quebrada em sequ\\u00eancias menores que s\\u00e3o PAs. Por exemplo, vimos que a sequ\\u00eancia 5, 6, 8, 9, 10 n\\u00e3o \\u00e9 uma PA, mas podemos quebrar ela entre o 6 e o 8 para obtermos as sequ\\u00eancias 5, 6 e 8, 9, 10, que s\\u00e3o PAs. Note que n\\u00e3o existe como quebrar a sequ\\u00eancia em menos partes se quisermos ter apenas PAs no fim do procedimento.\\r\\n\\r\\nBob \\u00e9 fascinado por programa\\u00e7\\u00e3o mas ainda n\\u00e3o sabe programar muito bem, e por isso pediu sua ajuda: ele n\\u00e3o est\\u00e1 conseguindo descobrir como quebrar sequ\\u00eancias muito grandes de um jeito eficiente; por isso, pediu que voc\\u00ea escrevesse um programa para, dada uma sequ\\u00eancia qualquer, imprimir o n\\u00famero m\\u00ednimo de partes em que precisamos quebrar a sequ\\u00eancia para termos apenas Progress\\u00f5es Aritm\\u00e9ticas no t\\u00e9rmino do processo. Caso a sequ\\u00eancia original j\\u00e1 seja uma PA, podemos terminar o processo com uma \\u00fanica parte, e portanto a resposta para esse caso \\u00e9 1.\\r\\n\\r\\n\\u00c9 f\\u00e1cil verificar que a sequ\\u00eancia \\u22122, 0, 2, 3, 3, 4, 6 (do segundo caso de teste\\u00a0abaixo) n\\u00e3o \\u00e9 uma PA, pois 2\\u22120 \\u2260 3\\u22122. Verificando manualmente, voc\\u00ea pode constatar que n\\u00e3o \\u00e9 poss\\u00edvel particionar a sequ\\u00eancia em duas de tal forma que ambas as partes sejam PAs. Entretanto, existe uma maneira de particionar a sequ\\u00eancia em 3 PAs: [\\u22122, 0, 2] [3, 3] [4, 6]. Portanto, temos que a resposta para este exemplo \\u00e9 3.\\r\\n\\r\\nNo terceiro caso de teste abaixo, a\\u00a0sequ\\u00eancia \\u22122, 0, 3, 6\\u00a0pode ser particionada de v\\u00e1rias formas. As \\u00fanicas maneiras que resultam em PAs s\\u00e3o as seguintes:\\r\\n\\r\\n\\r\\n\\tCom 4 partes temos 1 possibilidade:\\r\\n\\t[\\u22122] [0] [3] [6]\\r\\n\\t\\r\\n\\tCom 3 partes temos 3 possibilidades:\\r\\n\\t[\\u22122, 0] [3] [6]\\r\\n\\r\\n\\t[\\u22122] [0, 3] [6]\\r\\n\\r\\n\\t[\\u22122] [0] [3, 6]\\r\\n\\t\\r\\n\\tCom 2 partes temos 2 possibilidades:\\r\\n\\t[\\u22122, 0] [3, 6]\\r\\n\\r\\n\\t[\\u22122] [0, 3, 6]\\r\\n\\t\\r\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2391,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada \\u00e9 composta por um inteiro\\u00a0N(1 \\u2264\\u00a0N\\u00a0\\u2264 105), o n\\u00famero de elementos da sequ\\u00eancia. Na segunda linha existem\\u00a0N\\u00a0inteiros\\u00a0ai (-105\\u00a0\\u2264\\u00a0ai\\u00a0\\u2264 105\\u200b), os elementos da sequ\\u00eancia.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Progress\\u00f5es Aritm\\u00e9ticas\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda deve conter uma \\u00fanica linha, indicando o n\\u00famero m\\u00ednimo de partes em que Bob precisa quebrar a sequ\\u00eancia original para que ele termine apenas com PAs.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tSebasti\\u00e3o Bueno Coelho, apelidado de SBC pelos familiares e amigos, passou as f\\u00e9rias de janeiro de 2011 no s\\u00edtio de seus av\\u00f3s. Durante sua estadia, uma das atividades prediletas do SBC era nadar no rio que havia no fundo da casa onde morava.\\r\\n\\r\\nUma das caracter\\u00edsticas do rio que mais impressionava SBC era um belo caminho, feito inteiramente com pedras brancas. H\\u00e1 muito tempo, o av\\u00f4 de SBC notara que os habitantes do s\\u00edtio atravessavam o rio com grande frequ\\u00eancia e, por isso, construiu um caminho no rio com pedras posicionadas em linha reta; ao faz\\u00ea-lo, tomou muito cuidado para que o espa\\u00e7amento das pedras fosse de exatamente um metro.\\r\\n\\r\\nHoje em dia, a \\u00fanica utilidade do caminho \\u00e9 servir de divers\\u00e3o para os sapos que vivem no rio, que pulam de uma pedra a outra agitadamente. Um certo dia, enquanto descansava e nadava nas \\u00e1guas, SBC assistiu atentamente \\u00e0s acrobacias dos bichos e notou que cada sapo sempre pulava (zero, uma ou mais vezes) uma quantidade fixa de metros.\\r\\n\\r\\nSBC sabe que voc\\u00ea participa da OBI todos os anos e, chegando na escola, resolveu desafiar-te com o seguinte problema: Dado o n\\u00famero de pedras no rio, o n\\u00famero de sapos, a pedra inicial sobre a qual cada sapo est\\u00e1 (cada pedra \\u00e9 identificada por sua posi\\u00e7\\u00e3o na sequ\\u00eancia de pedras) e a dist\\u00e2ncia que cada sapo pula, determinar as posi\\u00e7\\u00f5es onde pode existir um sapo depois que SBC chega no rio.\\r\\n\\r\\nNo primeiro caso de teste abaixo, SBC indicou a exist\\u00eancia de 5 pedras no rio e 2 sapos. Os sapos estavam inicialmente nas pedras 3 e 4. SBC tamb\\u00e9m lhe disse que o primeiro sapo da entrada sempre pula 2 metros, e o segundo sempre pula 4 metros. A figura a seguir ilustra as poss\\u00edveis pedras que podem ser ocupadas pelos sapos quando eles come\\u00e7am a pular.\\r\\n\\r\\n\\r\\n\\r\\nNo segundo caso de teste abaixo, SBC indicou a exist\\u00eancia de 8 pedras no rio e 3 sapos. Os sapos estavam inicialmente nas pedras 3, 2 e 6. SBC tamb\\u00e9m lhe disse que o primeiro sapo da entrada sempre pula 3 metros, o segundo e terceiro sempre pulam 2 metros. Dessa forma, o primeiro sapo pode estar nas pedras 3 ou 6; o segundo sapo pode estar nas pedras 2, 4, 6 ou 8; e o terceiro sapo pode estar nas pedras 6, 4, 2 e 8. A figura a seguir ilustra as poss\\u00edveis pedras que podem ser ocupadas pelos sapos quando eles come\\u00e7am a pular.\\r\\n\\r\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2392,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros\\u00a0N\\u00a0e\\u00a0M\\u00a0(1 \\u2264\\u00a0N,\\u00a0M\\u00a0\\u2264 100\\u200b)\\u00a0representando o n\\u00famero de pedras no rio e o n\\u00famero de sapos, respectivamente. Cada uma das\\u00a0M\\u00a0linhas seguintes possui dois inteiros\\u00a0P\\u00a0e\\u00a0D\\u00a0(1 \\u2264\\u00a0P,\\u00a0D\\u00a0\\u2264\\u00a0N)\\u00a0representando a posi\\u00e7\\u00e3o inicial de um sapo e a dist\\u00e2ncia fixa de pulo, respectivamente.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Pulo do Sapo\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda cont\\u00e9m\\u00a0N\\u00a0linhas. A i-\\u00e9sima linha indica a possibilidade ou n\\u00e3o de ter um sapo na i-\\u00e9sima pedra. Para as pedras que podem ter um sapo voc\\u00ea deve imprimir 1, e para as pedras que com certeza n\\u00e3o podem ter nenhum sapo voc\\u00ea deve imprimir 0.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tEm um arquip\\u00e9lago no meio do Oceano Pac\\u00edfico a economia \\u00e9 regida pela pesca, pois o peixe \\u00e9 o principal alimento dispon\\u00edvel. Ultimamente, a popula\\u00e7\\u00e3o desse arquip\\u00e9lago tem aumentado drasticamente, o que levou a um grande aumento da pesca, e, consequentemente, a problemas.\\r\\n\\r\\nNeste arquip\\u00e9lago, cada pescador vai diariamente ao alto mar com a inten\\u00e7\\u00e3o de conseguir trazer o maior n\\u00famero de peixes para o seu vilarejo. Com a expans\\u00e3o da pesca, os pescadores est\\u00e3o come\\u00e7ando a jogar suas redes de pesca por cima das de outros pescadores. Com isso, os pescadores perdem, pois apenas o primeiro pescador pega os peixes da intersec\\u00e7\\u00e3o entre as redes.\\r\\n\\r\\nA Associa\\u00e7\\u00e3o dos Pescadores da ilha decidiu fazer um levantamento para descobrir quanto do mar est\\u00e1 de fato sendo aproveitado, ou seja, qual a \\u00e1rea do mar que est\\u00e1 coberta por pelo menos uma rede de pesca.\\r\\n\\r\\nComo h\\u00e1 muitas intersec\\u00e7\\u00f5es entre as redes de pesca, \\u00e9 muito dif\\u00edcil para a associa\\u00e7\\u00e3o calcular a \\u00e1rea total da regi\\u00e3o coberta pelas redes. Por este motivo, eles pediram para que voc\\u00ea escrevesse um programa para resolver este problema.\\r\\n\\r\\nComo \\u00e9 muito dif\\u00edcil navegar pelo mar, os pescadores sempre jogam as redes de forma que as regi\\u00f5es cobertas por cada rede s\\u00e3o sempre ret\\u00e2ngulos com lados paralelos aos eixos, se imaginarmos o mar como um plano cartesiano.\\n\\t\\t\\t\\t\",\n    \"id\": 2393,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada possui um inteiro\\u00a0N\\u00a0(1 \\u2264\\u00a0N\\u00a0\\u2264 100)indicando o n\\u00famero de redes que foram lan\\u00e7adas. As pr\\u00f3ximas\\u00a0N\\u00a0linhas descrevem as regi\\u00f5es cobertas pelas redes: cada uma cont\\u00e9m quatro inteiros\\u00a0Xi\\u00a0e\\u00a0Xf\\u00a0,\\u00a0Yi\\u00a0e\\u00a0Yf \\u00a0(1 \\u2264\\u00a0Xi\\u00a0\\u2264\\u00a0Xf\\u00a0\\u2264100) e (1 \\u2264\\u00a0Yi\\u00a0\\u2264\\u00a0Yf\\u00a0\\u2264 100). A regi\\u00e3o coberta pela rede em quest\\u00e3o cont\\u00e9m todo ponto (X,Y) tal que\\u00a0Xi\\u00a0\\u2264\\u00a0X\\u00a0\\u2264\\u00a0Xf\\u00a0e\\u00a0Yi\\u00a0\\u2264\\u00a0Y\\u00a0\\u2264\\u00a0Yf.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"O Mar n\\u00e3o est\\u00e1 para Peixe\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda deve conter apenas uma linha contendo a \\u00e1rea da regi\\u00e3o do mar realmente aproveitada pelos pescadores, ou seja, a \\u00e1rea total da regi\\u00e3o do mar coberta por pelo menos uma rede de pesca.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA escola de Jo\\u00e3ozinho tradicionalmente organiza uma corrida ao redor do pr\\u00e9dio. Como todos os alunos s\\u00e3o convidados a participar e eles estudam em per\\u00edodos diferentes, \\u00e9 dif\\u00edcil que todos corram ao mesmo tempo.\\r\\n\\r\\nPara contornar esse problema, os professores cronometram o tempo que cada aluno demora para dar cada volta ao redor da escola, e depois comparam os tempos para descobrir a classifica\\u00e7\\u00e3o final.\\r\\n\\r\\nSua tarefa \\u00e9, sabendo o n\\u00famero de competidores, o n\\u00famero de voltas de que consistiu a corrida e os tempos de cada aluno competidor, descobrir quem foi o aluno vencedor, para que ele possa receber uma medalha comemorativa.\\r\\n\\r\\nNo segundo caso de teste abaixo, existem tr\\u00eas competidores numa corrida de tr\\u00eas voltas. Os tempos de cada competidor em cada volta foram como na tabela a seguir.\\r\\n\\r\\n\\r\\n\\r\\nSendo assim, o vencedor foi o competidor 3 (com um tempo total de 3).\\n\\t\\t\\t\\t\",\n    \"id\": 2394,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros\\u00a0N\\u00a0(2 \\u2264 N \\u2264 100) e\\u00a0M (1\\u00a0\\u2264 M\\u00a0\\u2264 100)\\u00a0representando o n\\u00famero de competidores e o n\\u00famero de voltas da corrida, respectivamente.\\r\\n\\r\\nCada uma das\\u00a0N\\u00a0linhas seguintes representa um competidor: a primeira linha representa o primeiro competidor, a segunda linha representa o segundo competidor, e assim por diante. Cada linha cont\\u00e9m\\u00a0M\\u00a0inteiros representando os tempos em cada volta da corrida: o primeiro inteiro \\u00e9 o tempo da primeira volta, o segundo inteiro \\u00e9 o tempo da segunda volta, e assim por diante (1 \\u2264 qualquer n\\u00famero da entrada que represente o tempo de uma volta \\u2264 106).\\r\\n\\r\\nGarante-se que n\\u00e3o houve dois competidores que gastaram o mesmo tempo para completar a corrida inteira.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Corrida 1\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda consiste de um \\u00fanico inteiro, que corresponde ao n\\u00famero do competidor que ganhou a corrida.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA Betal\\u00e2ndia \\u00e9 um pa\\u00eds que apenas recentemente se abriu para o com\\u00e9rcio exterior e est\\u00e1 preparando agora sua primeira grande exporta\\u00e7\\u00e3o. A Sociedade Betalandesa de Com\\u00e9rcio (SBC) ficou encarregada de conduzir a exporta\\u00e7\\u00e3o e determinou que, seguindo os padr\\u00f5es internacionais, a carga ser\\u00e1 transportada em cont\\u00eaineres, que s\\u00e3o, por sua vez, colocados em grandes navios para o transporte internacional.\\r\\n\\r\\nTodos os cont\\u00eaineres betalandeses s\\u00e3o id\\u00eanticos, medindo\\u00a0A\\u00a0metros de largura,\\u00a0B\\u00a0metros de comprimento e\\u00a0C\\u00a0metros de altura. Um navio porta-cont\\u00eaineres pode ser visto como um ret\\u00e2ngulo horizontal de\\u00a0X\\u00a0metros de largura e\\u00a0Y\\u00a0metros de comprimento, sobre o qual os cont\\u00eaineres s\\u00e3o colocados. Nenhuma parte de cont\\u00eainer pode ficar para fora do navio. Al\\u00e9m disso, para possibilitar a travessia de pontes, a altura m\\u00e1xima da carga no navio n\\u00e3o pode ultrapassar\\u00a0Z\\u00a0metros.\\r\\n\\r\\n\\r\\n\\r\\nDevido a limita\\u00e7\\u00f5es do guindaste utilizado, os cont\\u00eaineres s\\u00f3 podem ser carregados alinhados com o navio. Ou seja, os cont\\u00eaineres s\\u00f3 podem ser colocados sobre o navio de tal forma que a largura e o comprimento do cont\\u00eainer estejam paralelos \\u00e0 largura e ao comprimento do navio, respectivamente.\\r\\n\\r\\nA SBC est\\u00e1 com problemas para saber qual a quantidade m\\u00e1xima de cont\\u00eaineres que podem ser colocados no navio e pede sua ajuda. Sua tarefa, neste problema, \\u00e9 determinar quantos cont\\u00eaineres podem ser carregados no navio respeitando as restri\\u00e7\\u00f5es acima.\\n\\t\\t\\t\\t\",\n    \"id\": 2395,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada consiste de duas linhas. A primeira linha cont\\u00e9m tr\\u00eas inteiros\\u00a0A,\\u00a0B\\u00a0e\\u00a0C\\u00a0que representam as dimens\\u00f5es dos cont\\u00eaineres, enquanto a segunda linha cont\\u00e9m outros tr\\u00eas inteiros\\u00a0X,\\u00a0Y\\u00a0e\\u00a0Z (1 \\u2264 A, B, C, X, Y, Z \\u2264 106)\\u00a0que representam as dimens\\u00f5es do navio.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Transporte de Cont\\u00eaineres\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir apenas uma linha contendo um inteiro que indica a quantidade m\\u00e1xima de cont\\u00eaineres que o navio consegue transportar.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tUma academia de bal\\u00e9 ir\\u00e1 organizar uma Oficina de Bal\\u00e9 Intensivo (OBI) na Semana de Bal\\u00e9 Contempor\\u00e2neo (SBC). Nessa academia, existem\\u00a0N\\u00a0bailarinas que praticam regularmente. O dono da academia, por ser experiente, consegue medir o n\\u00edvel de habilidade de cada uma delas por um n\\u00famero inteiro; nessa medi\\u00e7\\u00e3o, n\\u00fameros maiores correspondem a dan\\u00e7arinas mais habilidosas, e os n\\u00fameros obtidos s\\u00e3o todos distintos. Al\\u00e9m disso, ele possui uma lista das bailarinas em ordem cronol\\u00f3gica de ingresso na academia: As bailarinas que aparecem primeiro na lista est\\u00e3o h\\u00e1 mais tempo na academia, e as que est\\u00e3o no final ingressaram mais recentemente.\\r\\n\\r\\nO dono da academia decidiu escolher duas das bailarinas para ajud\\u00e1-lo na realiza\\u00e7\\u00e3o do evento: uma ajudar\\u00e1 no trabalho bra\\u00e7al, enquanto a outra ir\\u00e1 exemplificar os passos de bal\\u00e9. Por seu perfeccionismo, ele deseja que a bailarina que exemplificar\\u00e1 os passos de dan\\u00e7a seja, dentre as duas meninas do par, a mais habilidosa e a que frequenta a academia h\\u00e1 mais tempo.\\r\\n\\r\\nEle sabe que a Oficina ser\\u00e1 um sucesso desde que os dois crit\\u00e9rios mencionados acima sejam satisfeitos pela dupla de dan\\u00e7arinas escolhidas. Com isso, ele ficou curioso para saber quantas duplas de dan\\u00e7arinas podem ajud\\u00e1-lo na Oficina. A quantidade de dan\\u00e7arinas, contudo, \\u00e9 relativamente grande e ele n\\u00e3o possui nem tempo nem paci\\u00eancia para fazer tal c\\u00e1lculo. Como voc\\u00eas s\\u00e3o amigos, ele pediu a sua ajuda para contar quantas duplas s\\u00e3o v\\u00e1lidas. Voc\\u00ea pode ajud\\u00e1-lo?\\r\\n\\r\\nPor exemplo, digamos que a academia possua 5 dan\\u00e7arinas com n\\u00edveis de habilidade 1, 5, 2, 4 e 3, onde a primeira, que possui n\\u00edvel \\\"1\\\", est\\u00e1 na academia h\\u00e1 mais tempo e a \\u00faltima, que possui n\\u00edvel \\\"3\\\", est\\u00e1 h\\u00e1 menos. Temos, ent\\u00e3o, 4 poss\\u00edveis duplas que poderemos usar nesta Oficina, que s\\u00e3o (5, 2),(5, 4),(5, 3) e (4, 3). Note que a dupla (1, 3), por exemplo, n\\u00e3o pode ser escolhida pelo dono da academia, pois a mais habilidosa dentre as duas \\u00e9 tamb\\u00e9m a mais nova da dupla.\\n\\t\\t\\t\\t\",\n    \"id\": 2400,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha cont\\u00e9m um n\\u00famero\\u00a0N (1 \\u2264\\u00a0N\\u00a0\\u2264 100 000), que representa a quantidade de dan\\u00e7arinas que est\\u00e3o registradas na academia. A segunda linha da entrada cont\\u00e9m\\u00a0N\\u00a0inteiros, onde o primeiro inteiro \\u00e9 o n\\u00edvel da dan\\u00e7arina que est\\u00e1 h\\u00e1 mais tempo na academia, o segundo inteiro \\u00e9 o n\\u00edvel da pr\\u00f3xima dan\\u00e7arina mais antiga na academia (mas mais nova que a dan\\u00e7arina anterior), e assim sucessivamente.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Bal\\u00e9\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda consistir\\u00e1 num \\u00fanico n\\u00famero\\u00a0X, que representa o total de duplas de dan\\u00e7arinas v\\u00e1lidas para essa Oficina, dadas as regras descritas anteriormente.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tSolicitando Boas Contas (SBC) \\u00e9 uma organiza\\u00e7\\u00e3o de inspe\\u00e7\\u00e3o de calculadoras. Todos os fabricantes procuram ter o selo de qualidade da SBC, que faz com que os clientes comprem o produto sem preocupa\\u00e7\\u00e3o com contas erradas.\\r\\n\\r\\nVoc\\u00ea est\\u00e1 encarregado de testar m\\u00e1quinas que fazem apenas opera\\u00e7\\u00f5es de multiplica\\u00e7\\u00e3o e divis\\u00e3o. Al\\u00e9m disso, o termo a ser digitado em cada opera\\u00e7\\u00e3o (que dividir\\u00e1 ou multiplicar\\u00e1 o n\\u00famero atualmente exibido no visor) s\\u00f3 pode conter um \\u00fanico d\\u00edgito.\\r\\n\\r\\nA calculadora exibe o n\\u00famero 1 quando ligada. Depois disso, o usu\\u00e1rio pode digitar um n\\u00famero com um \\u00fanico d\\u00edgito e escolher se esse n\\u00famero deve multiplicar ou dividir o n\\u00famero exibido anteriormente; o resultado da opera\\u00e7\\u00e3o escolhida \\u00e9 ent\\u00e3o exibido na calculadora. Pode-se repetir esse processo indefinidamente.\\r\\n\\r\\nApesar de s\\u00f3 podermos entrar com n\\u00fameros inteiros de um d\\u00edgito, o visor da calculadora permite exibir n\\u00fameros com m\\u00faltiplos d\\u00edgitos e at\\u00e9 mesmo n\\u00fameros fracion\\u00e1rios.\\r\\n\\r\\nDada uma sequ\\u00eancia de opera\\u00e7\\u00f5es que foram realizadas nessa calculadora logo depois de ligada, sua tarefa \\u00e9 conferir o resultado exibido.\\r\\n\\r\\nNo primeiro caso de teste abaixo,\\u00a0o\\u00a0usu\\u00e1rio deseja calcular o resultado da seguinte express\\u00e3o: 1 \\u00d7 2 \\u00d7 1 \\u00d7 3. Note que a primeira ocorr\\u00eancia do n\\u00famero 1 vem do fato da calculadora mostrar inicialmente 1 ao inv\\u00e9s de 0.\\r\\n\\r\\nNo segundo caso de teste abaixo,\\u00a0o usu\\u00e1rio deseja calcular o resultado da seguinte express\\u00e3o: ((1/2)/3) \\u00d7 6.\\n\\t\\t\\t\\t\",\n    \"id\": 2401,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira e \\u00fanica linha da entrada cont\\u00e9m um inteiro\\u00a0N (1 \\u2264\\u00a0N\\u00a0\\u2264 100 000). Cada uma das pr\\u00f3ximas\\u00a0N\\u00a0linhas cont\\u00e9m um d\\u00edgito e um caractere '*' ou '/', que representam uma opera\\u00e7\\u00e3o realizada na calculadora.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Calculadora\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha contendo o resultado que deve ser exibido pela calculadora ao final das opera\\u00e7\\u00f5es.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tEuclides \\u00e9 um garoto que gosta muito de colecionar selos. No seu anivers\\u00e1rio, seus pais o presentearam com\\u00a0N\\u00a0selos, todos em formato de quadrados com 1 cm de lado. Euclides gostaria de guardar todos os\\u00a0N\\u00a0selos que ganhou colando-os numa p\\u00e1gina de papel em branco. Ao decidir por guard\\u00e1-los assim, no entanto, ele logo percebeu que a \\u00fanica forma que lhe agradava de posicionar os selos na p\\u00e1gina era a forma de um ret\\u00e2ngulo completamente coberto pelos mesmos, sem sobreposi\\u00e7\\u00e3o.\\r\\n\\r\\nEle percebeu tamb\\u00e9m que, independente do n\\u00famero de selos obtido, colocar todos os selos numa \\u00fanica linha ou todos os selos numa \\u00fanica coluna \\u00e9 uma configura\\u00e7\\u00e3o v\\u00e1lida. Como essa maneira usa a p\\u00e1gina do caderno de um jeito muito ineficiente, Euclides gostaria de saber se existe algum modo de dispor os\\u00a0N\\u00a0selos num ret\\u00e2ngulo que tenha mais de uma linha e mais de uma coluna tal que todas as linhas e colunas sejam completamente ocupadas por selos (isto \\u00e9, tal que n\\u00e3o existam posi\\u00e7\\u00f5es sem selos no interior do ret\\u00e2ngulo).\\r\\n\\r\\nA figura abaixo exemplifica o primeiro caso de teste, duas maneiras de guardar os selos em forma de ret\\u00e2ngulo.\\r\\n\\r\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2402,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m uma \\u00fanica linha com um \\u00fanico inteiro\\u00a0N (1 \\u2264\\u00a0N\\u00a0\\u2264 10 000 000 000.\\u200b), o n\\u00famero de selos que Euclides ganhou.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Selos\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda deve conter uma linha com um \\u00fanico caracter, que deve ser 'S' se for poss\\u00edvel organizar os selos em um ret\\u00e2ngulo com mais que uma linha e mais que uma coluna ou 'N' caso n\\u00e3o seja poss\\u00edvel.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tO SBC (System for Batch Computing) \\u00e9 um sistema operacional voltado para a execu\\u00e7\\u00e3o sequencial de tarefas. O operador do sistema cria tarefas e o sistema operacional \\u00e9 respons\\u00e1vel por agendar a execu\\u00e7\\u00e3o destas tarefas.\\r\\n\\r\\nCada tarefa pode depender da conclus\\u00e3o de algumas tarefas para poder come\\u00e7ar. Se uma tarefa\\u00a0A\\u00a0depende de uma tarefa\\u00a0B, a tarefa\\u00a0B\\u00a0deve terminar antes que a tarefa\\u00a0A inicie sua execu\\u00e7\\u00e3o.\\r\\n\\r\\nAl\\u00e9m disto, cada tarefa possui uma prioridade. \\u00c9 sempre mais vantajoso para o sistema come\\u00e7ar executando uma tarefa de mais alta prioridade, depois continuar executando uma tarefa de mais alta prioridade dentre as que sobraram e assim por diante.\\r\\n\\r\\nNeste problema, ser\\u00e1 dado um inteiro\\u00a0N, que ir\\u00e1 representar o n\\u00famero de tarefas no sistema. As tarefas ser\\u00e3o numeradas de 0 at\\u00e9\\u00a0N\\u22121. Tarefas com \\u00edndice menor possuem prioridade maior, de forma que a tarefa 0 \\u00e9 a tarefa de mais alta prioridade, a tarefa 1 \\u00e9 a tarefa com a segunda maior prioridade e assim por diante, at\\u00e9 a tarefa\\u00a0N\\u22121, que \\u00e9 a tarefa com a menor prioridade. Al\\u00e9m disso, ser\\u00e3o dadas\\u00a0M\\u00a0rela\\u00e7\\u00f5es de depend\\u00eancia entre as tarefas.\\r\\n\\r\\nSeu objetivo ser\\u00e1 decidir se \\u00e9 poss\\u00edvel executar as tarefas em alguma ordem. Caso seja poss\\u00edvel, voc\\u00ea dever\\u00e1 produzir uma ordem de execu\\u00e7\\u00e3o \\u00f3tima para as tarefas, isto \\u00e9, desempate as ordens poss\\u00edveis pela prioridade da primeira tarefa. Se o empate ainda persistir, desempate pela prioridade da segunda tarefa, e assim por diante.\\n\\t\\t\\t\\t\",\n    \"id\": 2403,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m inteiros\\u00a0N\\u00a0(0 \\u2264\\u00a0N\\u00a0\\u2264 50000) e\\u00a0M (0 \\u2264\\u00a0M\\u00a0\\u2264 200000). As pr\\u00f3ximas\\u00a0M\\u00a0linhas descrevem, cada uma, uma depend\\u00eancia entre as tarefas da entrada. Cada uma dessas linhas ir\\u00e1 conter dois inteiros\\u00a0A\\u00a0e\\u00a0B (0 \\u2264\\u00a0A,\\u00a0B\\u00a0<\\u00a0N)\\u00a0que indicam que a tarefa\\u00a0B\\u00a0depende da tarefa\\u00a0A, isto \\u00e9, que a tarefa\\u00a0A\\u00a0deve terminar antes que a tarefa\\u00a0B\\u00a0inicie.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Escalonamento \\u00d3timo\",\n    \"output\": \"\\t\\t\\t\\t\\tSe n\\u00e3o for poss\\u00edvel ordenar as tarefas de forma que as depend\\u00eancias sejam satisfeitas, imprima uma \\u00fanica linha contendo o caracter \\\"*\\\". Caso contr\\u00e1rio, imprima\\u00a0N\\u00a0linhas contendo cada uma um n\\u00famero inteiro. O inteiro na\\u00a0i-\\u00e9sima linha deve ser o \\u00edndice da\\u00a0i-\\u00e9sima tarefa a ser executada na ordem \\u00f3tima de execu\\u00e7\\u00e3o das tarefas.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2011  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tLeonardo Nascimento \\u00e9 um garoto de 13 anos apaixonado por cartografia. Durante as f\\u00e9rias de janeiro de 2011, ele alternava seu tempo entre navegar na internet (pesquisando sobre mapas) e arrumar sua cole\\u00e7\\u00e3o de mapas. Navegando na internet, Leonardo descobriu um site especializado em mapas, o Google Maps. Depois de alguns dias usando o site, Leonardo percebeu que quando diminu\\u00eda o zoom algumas ruas n\\u00e3o eram mais exibidas no mapa, isto \\u00e9, o zoom determinava tamb\\u00e9m o n\\u00edvel de detalhe do mapa. A figura abaixo ilustra um dos testes feito por Leonardo.\\r\\n\\r\\n\\r\\n\\r\\nEle sabe que voc\\u00ea participa da OBI e que voc\\u00ea adora resolver os problemas que envolvem mapas. Ent\\u00e3o resolveu formular o seguinte problema: dado um mapa de cidades e rodovias que as ligam, selecione um subconjunto das rodovias tal que entre qualquer par de cidades exista uma rota ligando-as e a soma dos comprimentos das rodovias \\u00e9 m\\u00ednimo. Na figura abaixo e \\u00e0 esquerda temos um exemplo com cinco cidades e seis rodovias ligando-as. A figura abaixo e \\u00e0 direita ilustra uma solu\\u00e7\\u00e3o cuja soma dos comprimentos \\u00e9 34.\\r\\n\\r\\n\\r\\n\\r\\nPara facilitar um pouco sua vida, Leonardo determinou que voc\\u00ea s\\u00f3 precisa dizer a soma dos comprimentos das rodovias do subconjunto selecionado para um dado mapa.\\r\\n\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2404,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois n\\u00fameros N\\u00a0(1 \\u2264\\u00a0N\\u00a0\\u2264 500)\\u00a0e\\u00a0M (1 \\u2264\\u00a0M\\u00a0\\u2264 124750)\\u00a0que representam o n\\u00famero de cidades e o n\\u00famero de rodovias respectivamente. Cada uma das pr\\u00f3ximas\\u00a0M\\u00a0linhas \\u00e9 composta por tr\\u00eas inteiros\\u00a0U,\\u00a0V\\u00a0(1 \\u2264\\u00a0U,\\u00a0V\\u00a0\\u2264\\u00a0N\\u00a0e\\u00a0U\\u00a0\\u2260 V) e C\\u00a0(1 \\u2264\\u00a0C\\u00a0\\u2264 500)\\u00a0que indiciam que existe uma rodovia de comprimento\\u00a0C\\u00a0que liga as cidades\\u00a0U\\u00a0e\\u00a0V.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Reduzindo Detalhes em um Mapa\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda consiste em apenas uma linha contendo a soma do comprimento das rodovias selecionadas.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA OBI (Organiza\\u00e7\\u00e3o de Bocha Internacional) \\u00e9 respons\\u00e1vel por organizar a competi\\u00e7\\u00e3o mundial de bocha. Infelizmente esse esporte n\\u00e3o \\u00e9 muito popular, e numa tentativa de aumentar a sua popularidade, ficou decidido que seriam chamados, para a Grande Final Mundial, o campe\\u00e3o e o vice-campe\\u00e3o de cada sede nacional, ao inv\\u00e9s de apenas o primeiro lugar.\\r\\n\\r\\nTumb\\u00f3lia \\u00e9 um pa\\u00eds pequeno que j\\u00e1 havia realizado a sua competi\\u00e7\\u00e3o nacional quando a nova regra foi institu\\u00edda, e o comit\\u00ea local n\\u00e3o armazenou quem foi o segundo classificado. Felizmente eles armazenaram a pontua\\u00e7\\u00e3o de todos competidores \\u2013 que foram apenas tr\\u00eas, devido ao tamanho diminuto do pa\\u00eds. Sabe-se tamb\\u00e9m que as pontua\\u00e7\\u00f5es de todos jogadores foram diferentes, de forma que n\\u00e3o ocorreu empate entre nenhum deles.\\r\\n\\r\\nResta agora descobrir quem foi o vice-campe\\u00e3o e para isso o comit\\u00ea precisa de ajuda.\\n\\t\\t\\t\\t\",\n    \"id\": 2408,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira e \\u00fanica linha da entrada consiste de tr\\u00eas inteiros separados por espa\\u00e7os, A, B e C (1 \\u2264 A, B, C \\u2264 100), as pontua\\u00e7\\u00f5es dos 3 competidores.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Vice-Campe\\u00e3o\",\n    \"output\": \"\\t\\t\\t\\t\\tImprima uma \\u00fanica linha na sa\\u00edda, contendo apenas um n\\u00famero inteiro, a pontua\\u00e7\\u00e3o do vice-campe\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3o est\\u00e1 comprando m\\u00f3veis novos para sua casa. Agora \\u00e9 a vez de comprar um colch\\u00e3o novo, de molas, para substituir o colch\\u00e3o velho. As portas de sua casa t\\u00eam altura H e largura L e existe um colch\\u00e3o que est\\u00e1 em promo\\u00e7\\u00e3o com dimens\\u00f5es A \\u00d7 B \\u00d7 C.\\r\\n\\r\\nO colch\\u00e3o tem a forma de um paralelep\\u00edpedo reto ret\\u00e2ngulo e Jo\\u00e3o s\\u00f3 consegue arrast\\u00e1-lo atrav\\u00e9s de uma porta com uma de suas faces paralelas ao ch\\u00e3o, mas consegue virar e rotacionar o colch\\u00e3o antes de passar pela porta.\\r\\n\\r\\nEntretanto, de nada adianta ele comprar o colch\\u00e3o se ele n\\u00e3o passar atrav\\u00e9s das portas de sua casa. Portanto ele quer saber se consegue passar o colch\\u00e3o pelas portas e para isso precisa de sua ajuda.\\n\\t\\t\\t\\t\",\n    \"id\": 2409,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m tr\\u00eas n\\u00fameros inteiros A, B e C (1 \\u2264 A, B, C \\u2264 300), as tr\\u00eas dimens\\u00f5es do colch\\u00e3o, em cent\\u00edmetros. A segunda linha cont\\u00e9m dois inteiros H e L (1 \\u2264 H, L \\u2264 250), respectivamente a altura e a largura das portas em cent\\u00edmetros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Colch\\u00e3o\",\n    \"output\": \"\\t\\t\\t\\t\\tSe programa deve escrever uma \\u00fanica linha, contendo apenas a letra \\u2018S\\u2019 se o colch\\u00e3o passa pelas portas e apenas a letra \\u2018N\\u2019 em caso contr\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tCerta vez, numa aula, a professora passou um filme para os alunos assistirem. Durante este filme, ela passou uma lista de presen\\u00e7a em sua sala para verificar a presen\\u00e7a dos alunos, onde cada aluno deveria inserir apenas seu n\\u00famero de registro. Alguns alunos contudo, como possuem amigos que fogem da aula, decidiram ser camaradas e inseriram os n\\u00fameros de registro de seus amigos fuj\\u00f5es. O problema \\u00e9 que muitos alunos s\\u00e3o amigos de alunos que fogem da aula e alguns n\\u00fameros de registro acabaram sendo repetidamente inseridos na lista de presen\\u00e7a. Al\\u00e9m de tudo, alguns dos alunos que se esperava que n\\u00e3o estivessem na aula de fato estavam!\\r\\n\\r\\nA professora, ao notar que a lista de presen\\u00e7a continha alguns n\\u00fameros repetidos, ficou sem entender, mas decidiu dar um voto de confian\\u00e7a e dar presen\\u00e7a a todos os alunos cujos n\\u00fameros de registro estavam na lista. Como s\\u00e3o muitos alunos na sala e muitos n\\u00fameros com repeti\\u00e7\\u00e3o, ela pediu a sua ajuda para determinar o total de alunos que receberam presen\\u00e7a na aula.\\n\\t\\t\\t\\t\",\n    \"id\": 2410,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um n\\u00famero inteiro N (1 \\u2264 N \\u2264 105), que informa a quantidade de n\\u00fameros de registro que apareceram na lista de presen\\u00e7a. Cada uma das N linhas seguintes cont\\u00e9m um n\\u00famero de registro Vi (0 \\u2264 Vi \\u2264 106)que foi inserido na lista de presen\\u00e7a.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Frequencia na Aula\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo apenas um n\\u00famero inteiro, o n\\u00famero de alunos que receberam presen\\u00e7a.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tUm tabuleiro normal, 8 x 8, foi danificado, e 4 posi\\u00e7\\u00f5es ficaram esburacadas. A Figura 1(a) mostra o tabuleiro. A posi\\u00e7\\u00e3o inferior esquerda tem coordenadas (0, 0). Os 4 buracos est\\u00e3o marcados em preto, e t\\u00eam coordenadas (1, 3), (2, 3), (2, 5) e (5, 4). Um cavalo de xadrez foi colocado na posi\\u00e7\\u00e3o (4, 3), marcada como 0 no tabuleiro.\\r\\n\\r\\n \\r\\n\\r\\nOs 8 movimentos de um cavalo est\\u00e3o numerados de 1 a 8 na Figura 1(b), a partir da posi\\u00e7\\u00e3o marcada como 0. Por exemplo, se o cavalo estiver na posi\\u00e7\\u00e3o inicial (4, 3), o movimento 7 leva o cavalo \\u00e0 posi\\u00e7\\u00e3o (2, 4), sem cair no buraco (2, 3), porque o cavalo salta da posi\\u00e7\\u00e3o (4, 3) para a posi\\u00e7\\u00e3o (2, 4).\\r\\n\\r\\nSeu problema \\u00e9 simular um passeio do cavalo, dados os movimentos atrav\\u00e9s dos n\\u00fameros de 1 a 8 e determinar quantos movimentos o cavalo faz at\\u00e9 ou (i) terminar o passeio ou (ii) cair em um buraco. Por exemplo, na trajet\\u00f3ria dada pelos 5 movimentos 1, 8, 5, 3, 4, o cavalo passa pelas posi\\u00e7\\u00f5es (5, 5), (4, 7), (3, 5) e cai no buraco (5, 4), fazendo portanto apenas 4 movimentos.\\r\\n\\r\\nJ\\u00e1 no passeio dado pelos 3 movimentos 6, 8, 1, o cavalo passa pelas posi\\u00e7\\u00f5es (2, 2), (1, 4) e (2, 6) e n\\u00e3o cai em nenhum buraco: portanto, perfaz todos os 3 movimentos do passeio.\\n\\t\\t\\t\\t\",\n    \"id\": 2411,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m N (1 \\u2264 N \\u2264 100), o n\\u00famero de movimentos do passeio. A segunda linha cont\\u00e9m N inteiros M1, M2, . . . , MN (1 \\u2264 MI \\u2264 8, para I = 1, 2, . . . , N) , separados por um espa\\u00e7o em branco, correspondentes aos N movimentos do cavalo no passeio. Um movimento pode levar o cavalo a cair em um buraco, mas nunca leva o cavalo a sair do tabuleiro.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"O Tabuleiro Esburacado\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um \\u00fanico n\\u00famero inteiro, o n\\u00famero de movimentos do cavalo at\\u00e9 terminar o passeio ou o cavalo cair em um buraco.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tTarzan vive na floresta e \\u00e9 o respons\\u00e1vel por manter a ordem na regi\\u00e3o onde vive. Para locomover-se entre as \\u00e1rvores ele s\\u00f3 usa cip\\u00f3s pois esse \\u00e9 um meio de transporte muito mais r\\u00e1pido e seguro do que andar no ch\\u00e3o da selva, al\\u00e9m de, \\u00e9 claro, poder soltar seu grito caracter\\u00edstico enquanto viaja.\\r\\n\\r\\nOs cip\\u00f3s das \\u00e1rvores t\\u00eam todos o mesmo alcance. Dessa forma, \\u00e9 poss\\u00edvel viajar de cip\\u00f3 de uma \\u00e1rvore para outra se a dist\\u00e2ncia entre elas \\u00e9 no m\\u00e1ximo D, onde D \\u00e9 o alcance dos cip\\u00f3s.\\r\\n\\r\\nRecentemente uma forte chuva assolou a regi\\u00e3o e derrubou algumas \\u00e1rvores, restando na floresta apenas N \\u00e1rvores. Agora Tarzan quer saber se ele consegue viajar de cip\\u00f3 entre todas \\u00e1rvores remanescentes para poder continuar mantendo a ordem na regi\\u00e3o.\\r\\n\\r\\nPara poder manter a ordem ele precisa ser capaz de, partindo de qualquer uma das \\u00e1rvores, poder chegar a todas as outras \\u00e1rvores remanescentes, possivelmente passando por outras \\u00e1rvores no caminho, sempre utilizando somente cip\\u00f3s.\\n\\t\\t\\t\\t\",\n    \"id\": 2412,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros, N (2 \\u2264 N \\u2264 1000) e D (1 \\u2264 D \\u2264 5000), indicando respectivamente o n\\u00famero de \\u00e1rvores remanescentes e o alcance dos cip\\u00f3s. Cada uma das N linhas seguintes cont\\u00e9m dois inteiros Xi e Yi (0 \\u2264 Xi, Yi \\u2264 5000) , as coordenadas da i-\\u00e9sima \\u00e1rvore. N\\u00e3o existem duas \\u00e1rvores com as mesmas coordenadas.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Tarzan\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve escrever uma \\u00fanica linha, contendo um \\u00fanico caractere: \\u2018S\\u2019 se Tarzan consegue viajar de cip\\u00f3 entre todas as \\u00e1rvores remanescentes, e \\u2018N\\u2019 caso contr\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3o fez uma pesquisa em seu site de busca predileto, e encontrou a resposta que estava procurando no terceiro link listado. Al\\u00e9m disso, ele viu, pelo site, que t pessoas j\\u00e1 haviam clicado neste link antes. Jo\\u00e3o havia lido anteriormente, tamb\\u00e9m na Internet, que o n\\u00famero de pessoas que clicam no segundo link listado \\u00e9 o dobro de n\\u00famero de pessoas que clicam no terceiro link listado. Nessa leitura, ele tamb\\u00e9m descobriu que o n\\u00famero de pessoas que clicam no segundo link \\u00e9 a metade do n\\u00famero de pessoas que clicam no primeiro link.\\r\\n\\r\\nJo\\u00e3o est\\u00e1 intrigado para saber quantas pessoas clicaram no primeiro link da busca, e, como voc\\u00ea \\u00e9 amigo dele, quer sua ajuda nesta tarefa.\\n\\t\\t\\t\\t\",\n    \"id\": 2413,\n    \"input\": \"\\t\\t\\t\\t\\tCada caso de teste possui apenas um n\\u00famero, t (1 \\u2264 t \\u2264 1000), que representa o n\\u00famero de pessoas que clicaram no terceiro link da busca.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Busca na Internet\",\n    \"output\": \"\\t\\t\\t\\t\\tPara cada caso de teste imprima apenas uma linha, contendo apenas um inteiro, indicando quantas pessoas clicaram no primeiro link, nessa busca.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tLeonardo \\u00e9 um garoto muito criativo. Ele adora criar desafios para seus colegas da escola. Seu \\u00faltimo desafio \\u00e9 o seguinte: diversos n\\u00fameros s\\u00e3o ditos em voz alta, quando o n\\u00famero 0 (zero) \\u00e9 dito ent\\u00e3o o desafio termina e seus colegas devem dizer imediatamente qual foi o maior n\\u00famero. Leonardo tem muita dificuldade de verificar se a resposta dada pelos colegas \\u00e9 correta ou n\\u00e3o, pois a sequ\\u00eancia de n\\u00fameros costuma ser longa. Por este motivo, ele resolveu pedir sua ajuda.\\r\\n\\r\\nSua tarefa \\u00e9 escrever um programa que dada uma sequ\\u00eancia de n\\u00fameros inteiros positivos terminada por 0 (zero), imprime o maior n\\u00famero da sequ\\u00eancia.\\n\\t\\t\\t\\t\",\n    \"id\": 2414,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 dada em uma \\u00fanica linha contendo uma sequ\\u00eancia de n\\u00fameros inteiros positivos. O \\u00faltimo n\\u00famero da linha \\u00e9 0 (zero),\\u00a0(1 \\u2264 tamanho da sequ\\u00eancia \\u2264 100 ,\\u00a01 \\u2264 n\\u00famero da sequ\\u00eancia \\u2264 1000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Desafio do Maior N\\u00famero\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir o maior n\\u00famero dentre os n\\u00fameros da entrada.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tO Carnaval \\u00e9 um feriado celebrado normalmente em fevereiro; em muitas cidades brasileiras, a principal atra\\u00e7\\u00e3o s\\u00e3o os desfiles de escolas de samba. As v\\u00e1rias agremia\\u00e7\\u00f5es desfilam ao som de seus sambas-enredos e s\\u00e3o julgadas pela liga das escolas de samba para determinar a campe\\u00e3 do Carnaval.\\r\\n\\r\\nCada agremia\\u00e7\\u00e3o \\u00e9 avaliada em v\\u00e1rios quesitos; em cada quesito, cada escola recebe cinco notas que variam de 5,0 a 10,0. A nota final da escola em um dado quesito \\u00e9 a soma das tr\\u00eas notas centrais recebidas pela escola, excluindo a maior e a menor das cinco notas.\\r\\n\\r\\nComo existem muitas escolas de samba e muitos quesitos, o presidente da liga pediu que voc\\u00ea escrevesse um programa que, dadas as notas da agremia\\u00e7\\u00e3o, calcula a sua nota final num dado quesito.\\n\\t\\t\\t\\t\",\n    \"id\": 2418,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m uma \\u00fanica linha, contendo cinco n\\u00fameros Ni (1 \\u2264 i \\u2264 5) e (5.0 \\u2264 Ni \\u2264 10.0), todos com uma casa decimal, indicando as notas recebidas pela agremia\\u00e7\\u00e3o em um dos quesitos.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Carnaval\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um \\u00fanico n\\u00famero com exatamente uma casa decimal, a nota final da escola de samba no quesito considerado.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tA Nlog\\u00f4nia \\u00e9 um pa\\u00eds tropical, com muitas belezas naturais internacionalmente famosas; dentre elas, encontram-se as belas praias que comp\\u00f5em o arquip\\u00e9lago do pa\\u00eds, que todo ver\\u00e3o recebem milh\\u00f5es de turistas estrangeiros.\\r\\n\\r\\nO Minist\\u00e9rio do Turismo da Nlog\\u00f4nia est\\u00e1 preparando o pa\\u00eds para a chegada dos turistas, mas para fazer seu planejamento, precisa saber a extens\\u00e3o da costa nlog\\u00f4nica. Para isso, ele gerou um mapa que divide o territ\\u00f3rio nacional em v\\u00e1rios quadrados, que podem ser ocupados por \\u00e1gua ou por terra; considera-se que um quadrado \\u00e9 parte da costa nlog\\u00f4nica se ele \\u00e9 um quadrado ocupado por terra que tem um lado em comum com um quadrado ocupado por \\u00e1gua.\\r\\n\\r\\nNa figura abaixo, (a) mostra um trecho do mapa gerado e (b) mostra os quadrados do trecho dado que s\\u00e3o costa.\\r\\n\\r\\n \\r\\n\\r\\nComo a Nlog\\u00f4nia \\u00e9 um pa\\u00eds muito grande, o ministro do turismo pediu que voc\\u00ea escrevesse um programa que, dado o mapa da Nlog\\u00f4nia, determina a extens\\u00e3o da costa nlog\\u00f4nica.\\r\\n\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2419,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros M e N (1 \\u2264 M, N \\u2264 1000) indicando, respectivamente, o n\\u00famero de linhas e o n\\u00famero de colunas do mapa. Cada uma das M linhas seguintes cont\\u00e9m N caracteres: um caractere \\u2018.\\u2019 indica que aquele quadrado do territ\\u00f3rio \\u00e9 ocupada por \\u00e1gua; um caractere \\u2018#\\u2019 indica que aquele quadrado do territ\\u00f3rio \\u00e9 ocupada por terra.\\r\\n\\r\\nConsidere que todo o espa\\u00e7o fora da \\u00e1rea do mapa \\u00e9 ocupado por \\u00e1gua.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Costa\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha contendo um \\u00fanico inteiro, indicando quantos quadrados do territ\\u00f3rio fazem parte da costa da Nlog\\u00f4nia.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tTomb\\u00f3lia do Oeste e Tomb\\u00f3lia do Leste travaram uma guerra durante 50 anos. O motivo da guerra era o tamanho do territ\\u00f3rio de cada pa\\u00eds. Pelo bem da popula\\u00e7\\u00e3o dos dois pa\\u00edses, os governos resolveram fazer um tratado para finalizar a guerra. O tratado consiste em fazer um divis\\u00e3o justa, e certamente cont\\u00ednua, do territ\\u00f3rio. Eles resolveram pedir sua ajuda para calcular o ponto de divis\\u00e3o do territ\\u00f3rio. Depois de tantos anos de guerra, os pa\\u00edses n\\u00e3o podem lhe pagar uma viagem para ver previamente o territ\\u00f3rio que ser\\u00e1 dividido. Ao inv\\u00e9s disso, eles prepararam uma lista a1,a2,\\u2026,aN\\u00a0de inteiros que indicam o tamanho de cada se\\u00e7\\u00e3o do territ\\u00f3rio. A se\\u00e7\\u00e3o a1\\u00a0\\u00e9 vizinha da se\\u00e7\\u00e3o a2\\u00a0que por sua vez \\u00e9 vizinha da se\\u00e7\\u00e3o a3; e assim por diante. Os governos querem uma divis\\u00e3o em uma se\\u00e7\\u00e3o k de tal forma que a1\\u00a0+ a2\\u00a0+ \\u2026 + ak\\u00a0= ak+1\\u00a0+ ak+2\\u00a0+ \\u2026 + aN.\\r\\n\\r\\nSua tarefa \\u00e9 dada uma lista de inteiros positivos a1, a2,..., aN\\u00a0, determinar a se\\u00e7\\u00e3o k tal que soma dos comprimentos das se\\u00e7\\u00f5es a1\\u00a0at\\u00e9 ak\\u00a0\\u00e9 igual a soma dos comprimentos das se\\u00e7\\u00f5es ak+1\\u00a0at\\u00e9 aN.\\n\\t\\t\\t\\t\",\n    \"id\": 2420,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro\\u00a0N (1 \\u2264 N \\u2264 105)\\u00a0indicando o n\\u00famero de se\\u00e7\\u00f5es do territ\\u00f3rio. A segunda linha da entrada cont\\u00e9m\\u00a0N\\u00a0inteiros a1, a2,..., aN\\u00a0(1 \\u2264 ai \\u2264 100, para i = 1, 2, . . . , N.)separados por um \\u00fanico espa\\u00e7o que indicam os comprimentos das se\\u00e7\\u00f5es.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Guerra por Territ\\u00f3rio\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha contendo um inteiro que indica a se\\u00e7\\u00e3o do territ\\u00f3rio onde acontecer\\u00e1 a divis\\u00e3o.(\\u00c9\\u00a0garantido que sempre existe uma divis\\u00e3o que satisfaz as condi\\u00e7\\u00f5es dos pa\\u00edses).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tClara est\\u00e1 organizando as fotos da sua \\u00faltima viagem num \\u00e1lbum de fotos. Como ela tem muitas fotos, para economizar p\\u00e1ginas do \\u00e1lbum ela quer colar duas fotos por p\\u00e1gina do \\u00e1lbum.\\r\\n\\r\\nComo as fotos s\\u00e3o retangulares, as fotos podem ser coladas giradas (mas sempre com lados paralelos aos da p\\u00e1gina do \\u00e1lbum, para preservar o equil\\u00edbrio est\\u00e9tico do \\u00e1lbum), mas elas devem sempre ficar inteiramente contidas no interior da p\\u00e1gina, e n\\u00e3o devem se sobrepor.\\r\\n\\r\\nEm geral, das muitas formas de posicionar as fotos do \\u00e1lbum s\\u00f3 algumas (ou nenhuma) satisfazem estas restri\\u00e7\\u00f5es, ent\\u00e3o pode ser dif\\u00edcil decidir se \\u00e9 poss\\u00edvel colar as duas fotos em uma mesma p\\u00e1gina do \\u00e1lbum, e por isso Clara pediu a sua ajuda para escrever um programa que, dadas as dimens\\u00f5es da p\\u00e1gina e das fotos, decide se \\u00e9 poss\\u00edvel colar as fotos na p\\u00e1gina.\\r\\n\\r\\nPor exemplo, cada p\\u00e1gina pode ser 5\\u00d77, e duas fotos s\\u00e3o 3\\u00d74. Nesse caso, \\u00e9 poss\\u00edvel colar as duas fotos:\\r\\n\\r\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2421,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros\\u00a0X\\u00a0e\\u00a0Y (1 \\u2264\\u00a0X,\\u00a0Y\\u00a0\\u2264 1000), indicando a largura e a altura da p\\u00e1gina do \\u00e1lbum. Cada uma das duas linhas seguintes cont\\u00e9m dois inteiros\\u00a0L\\u00a0e\\u00a0H (1 \\u2264\\u00a0L,\\u00a0H\\u00a0\\u2264 1000\\u200b), indicando a largura e a altura das fotos.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"\\u00c1lbum de Fotos\",\n    \"output\": \"\\t\\t\\t\\t\\tImprima uma \\u00fanica linha, contendo um \\u00fanico caractere: 'S', se \\u00e9 poss\\u00edvel colar as duas fotos na p\\u00e1gina do \\u00e1lbum, e 'N', caso contr\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3ozinho mora em uma rua que tem N casas. Marquinhos \\u00e9 o melhor amigo dele, mas sempre gosta de pregar pe\\u00e7as em Jo\\u00e3ozinho. Desta vez, ele pegou os dois brinquedos prediletos de Jo\\u00e3ozinho e os escondeu em duas casas distintas da rua. Em compensa\\u00e7\\u00e3o, Marquinhos deu uma dica importante para Jo\\u00e3ozinho:\\r\\n\\r\\nA soma dos n\\u00fameros das casas em que escondi teus brinquedos \\u00e9 igual a K. Al\\u00e9m disso, escolhi as casas de tal forma que n\\u00e3o existe outro par de casas cuja soma tenha esse mesmo valor.\\r\\n\\r\\nSabendo disto, encontre qual \\u00e9 o par de casas em que se encontram os brinquedos de Jo\\u00e3ozinho. Para auxiliar seu amigo, Marquinhos entregou a Jo\\u00e3ozinho uma lista com o n\\u00famero das casas j\\u00e1 em ordem crescente (isto \\u00e9, do menor para o maior n\\u00famero).\\n\\t\\t\\t\\t\",\n    \"id\": 2422,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira primeira linha da entrada cont\\u00e9m um n\\u00famero inteiro N (2 \\u2264 N \\u2264 105), que representa o n\\u00famero de casas que existem na rua. Cada uma das N linhas seguintes cont\\u00e9m um n\\u00famero inteiro, representando o n\\u00famero de uma casa (Para cada casa Ci , 0 \\u2264 Ci \\u2264 109 , i = 1, 2, . . . , N). Note que esses N n\\u00fameros est\\u00e3o ordenados, do menor para o maior. A \\u00faltima linha da entrada cont\\u00e9m um inteiro K, que \\u00e9 a soma dos n\\u00fameros das duas casas onde os brinquedos est\\u00e3o escondidos , (os n\\u00fameros das casas est\\u00e3o em ordem crescente, do menor para o maior n\\u00famero, e casas distintas t\\u00eam n\\u00fameros distintos).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Soma das Casas\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu\\u00a0programa deve imprimir uma \\u00fanica linha, contendo dois inteiros, A e B, A < B, que representam os n\\u00fameros das casas em que est\\u00e3o escondidos os brinquedos. Os dois n\\u00fameros devem ser separados por um espa\\u00e7o em branco.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3o deseja fazer bolos para seus amigos, usando uma receita que indica que devem ser usadas 2 x\\u00edcaras de farinha de trigo, 3 ovos e 5 colheres de sopa de leite. Em casa ele tem A x\\u00edcaras de farinha de trigo, B ovos e C colheres de sopa de leite.\\r\\n\\r\\nJo\\u00e3o n\\u00e3o tem muita pr\\u00e1tica com a cozinha, e portanto ele s\\u00f3 se arriscar\\u00e1 a fazer medidas exatas da receita de bolo (por exemplo, se ele tiver material suficiente para fazer mais do que 2 e menos do que 3 bolos, ele far\\u00e1 somente 2 bolos). Sabendo disto, ajude Jo\\u00e3o escrevendo um programa que determine qual a quantidade m\\u00e1xima de bolos que ele consegue fazer.\\n\\t\\t\\t\\t\",\n    \"id\": 2423,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 dada em uma \\u00fanica linha, que cont\\u00e9m tr\\u00eas n\\u00fameros inteiros A, B e C, (1 \\u2264 A, B e C \\u2264 100) indicando respectivamente o n\\u00famero de x\\u00edcaras de farinha de trigo, o n\\u00famero de ovos e o n\\u00famero de colheres de sopa de leite que Jo\\u00e3o tem em casa.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Receita de Bolo\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um \\u00fanico inteiro, a quantidade m\\u00e1xima de bolos que Jo\\u00e3o consegue fazer.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2012  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tUma quadra de t\\u00eanis tem o formato de um ret\\u00e2ngulo, cujos lados medem 36 p\\u00e9s por 78 p\\u00e9s, que correspondem a um ret\\u00e2ngulo de 432 polegadas por 936 polegadas. No \\u00faltimo Grand Slam da Austr\\u00e1lia, Rafael Nadal perdeu para Novak Djokovi\\u0107, num dos jogos mais bonitos de t\\u00eanis dos \\u00faltimos tempos.\\r\\n\\r\\nMuitas vezes, uma jogada \\u00e9 t\\u00e3o r\\u00e1pida, e a bola t\\u00e3o pr\\u00f3xima da borda da quadra, que o juiz pode tomar uma decis\\u00e3o que pode ser contestada por um dos jogadores. Para isso, existe o tira-teima, que utiliza a imagem gravada do jogo para decidir se a bola estava dentro ou fora da metade da quadra correspondente a um dos jogadores.\\r\\n\\r\\nConsidere que a semi-quadra de Rafael Nadal corresponde a um ret\\u00e2ngulo em que dois v\\u00e9rtices t\\u00eam coordenadas (0,0) e (432, 468), onde todos os n\\u00fameros s\\u00e3o em polegadas.\\r\\n\\r\\nVoc\\u00ea deve escrever um programa para, dadas as coordenadas (X, Y ) do ponto de contato da bola com o solo, determinar se uma bola bateu no solo dentro ou fora da semi-quadra. Note que se a bola bate na linha divis\\u00f3ria ela \\u00e9 considerada uma bola dentro.\\n\\t\\t\\t\\t\",\n    \"id\": 2424,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 dada em uma \\u00fanica linha, que cont\\u00e9m dois inteiros X e Y (\\u2212500 \\u2264 X, Y \\u2264 500), que correspondem \\u00e0s coordenadas do ponto (X, Y ) de contato da bola com o solo, em polegadas.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Tira-teima\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo a palavra dentro se a bola bateu dentro da semi-quadra, e a palavra fora caso contr\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tO governo do estado de Queensland est\\u00e1 com problemas s\\u00e9rios de tr\\u00e2nsito na capital Brisbane, onde est\\u00e3o os pr\\u00e9dios administrativos. Para desafogar o tr\\u00e2nsito, o prefeito de Brisbane e o governador de Queensland decidiram que uma nova capital administrativa deve ser constru\\u00edda em uma \\u00e1rea fora de Brisbane. Para projetar a nova capital, o renomado arquiteto minimalista Joe Bloggs foi contratado.\\r\\n\\r\\nBloggs foi informado de que o terreno destinado \\u00e0 nova capital ainda n\\u00e3o foi demarcado, mas ser\\u00e1 retangular. Al\\u00e9m disso, a cidade dever\\u00e1 ser dividida em quatro zonas, uma delas destinada a uma reserva ambiental e cada uma das outras tr\\u00eas receber\\u00e1 os novos pr\\u00e9dios de cada um dos tr\\u00eas poderes (Executivo, Legislativo e Judici\\u00e1rio). Em um arroubo de criatividade, Bloggs decidiu que duas avenidas, perpendiculares entre si, cada uma paralela a dois dos lados do terreno retangular, dividir\\u00e3o a capital nas quatro zonas.\\r\\n\\r\\nBloggs recebeu do governo as \\u00e1reas de cada uma das zonas e, ap\\u00f3s muito esfor\\u00e7o, encontrou um ret\\u00e2ngulo que pode ser dividido conforme seus planos e de forma a respeitar as \\u00e1reas delimitadas. No entanto, a Funda\\u00e7\\u00e3o de Conserva\\u00e7\\u00e3o dos Cangurus determinou que a \\u00e1rea destinada \\u00e0 reserva ambiental era muito pequena, o que obrigou o governo a alterar as \\u00e1reas das quatro zonas. Ap\\u00f3s receber as novas medidas, Bloggs tentou encontrar um novo ret\\u00e2ngulo que viabilizasse seu projeto, por\\u00e9m sem sucesso. Cansado de fazer testes, ele pensou que talvez tenha que abandonar sua brilhante ideia. Por isso, ele pediu para voc\\u00ea escrever um programa que, dadas as \\u00e1reas das quatro zonas, determine se ele poder\\u00e1 ou n\\u00e3o manter seu projeto (ou seja, se existe um ret\\u00e2ngulo que possa ser dividido por duas retas perpendiculares, cada uma paralela a dois dos lados do ret\\u00e2ngulo, tal que as quatro \\u00e1reas formadas obede\\u00e7am \\u00e0s exig\\u00eancias do governo).\\n\\t\\t\\t\\t\",\n    \"id\": 2428,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada consiste de uma \\u00fanica linha contendo quatro inteiros A1, A2, A3, A4 \\u00a0(1 \\u2264 Ai \\u2264 104), indicando a \\u00e1rea de cada uma das zonas.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Capital\",\n    \"output\": \"\\t\\t\\t\\t\\tImprima uma \\u00fanica linha contendo um \\u00fanico caractere: \\u2018S\\u2019 se Bloggs pode preservar seu projeto e \\u2018N\\u2019 caso contr\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tAs estradas da Nlog\\u00f4nia est\\u00e3o severamente danificadas, devido ao intenso fluxo de ve\\u00edculos pesados criado pelo desenvolvimento econ\\u00f4mico do reino. Para resolver o problema, o rei da Nlog\\u00f4nia decretou que seriam constru\\u00eddas novas rodovias. O decreto determinou que:\\r\\n\\r\\n\\r\\n\\ttodas as rodovias constru\\u00eddas ter\\u00e3o m\\u00e3o \\u00fanica, e ligar\\u00e3o exatamente duas cidades;\\r\\n\\tnenhum par de rodovias se intersectar\\u00e1 \\u2014 ser\\u00e3o constru\\u00eddos viadutos, t\\u00faneis e pontes conforme necess\\u00e1rio;\\r\\n\\tpor raz\\u00f5es or\\u00e7ament\\u00e1rias, o n\\u00famero de rodovias a construir ser\\u00e1 igual ao n\\u00famero de cidades que existem na Nlog\\u00f4nia;\\r\\n\\tdeve ser poss\\u00edvel, partindo de qualquer cidade, chegar a qualquer outra cidade usando s\\u00f3 as novas rodovias, sempre respeitando a m\\u00e3o das rodovias.\\r\\n\\r\\n\\r\\nO engenheiro-chefe do reino desenhou uma proposta de mapa vi\\u00e1rio; o rei verificou que o plano satisfaz as tr\\u00eas primeiras restri\\u00e7\\u00f5es, mas n\\u00e3o conseguiu verificar a \\u00faltima. Por isso, ele pediu que voc\\u00ea escrevesse um programa que determina se o plano de rodovias permite viajar de qualquer cidade at\\u00e9 qualquer outra cidade da Nlog\\u00f4nia.\\n\\t\\t\\t\\t\",\n    \"id\": 2429,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha de cada caso de teste cont\\u00e9m um inteiro N\\u00a0(2 \\u2264 N \\u2264 104), indicando o n\\u00famero de cidades. Cada uma das N linhas seguintes descrevem uma estrada: a linha cont\\u00e9m dois inteiros A e B\\u00a0(A\\u00a0\\u2260\\u00a0B)que indicam que existe uma estrada de m\\u00e3o \\u00fanica ligando a cidade A a outra cidade, B (as cidades s\\u00e3o numeradas de 1 a N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Rodovia\",\n    \"output\": \"\\t\\t\\t\\t\\tImprima uma \\u00fanica linha contendo um \\u00fanico caractere: \\u2018S\\u2019 se for poss\\u00edvel ir de qualquer cidade a qualquer outra cidade por rodovias e \\u2018N\\u2019 caso contr\\u00e1rio.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJoyce \\u00e9 uma menina que gosta muito de ouvir m\\u00fasica, e possui uma enorme cole\\u00e7\\u00e3o de m\\u00fasicas num dvd. Ela \\u00e9 uma menina organizada e deixa suas m\\u00fasicas em pastas, mas como o n\\u00famero de m\\u00fasicas e de pastas \\u00e9 grandre, Joyce construiu um cat\\u00e1logo para melhor localiz\\u00e1-las.\\r\\n\\r\\nPara o cat\\u00e1logo Joyce utilizou uma conven\\u00e7\\u00e3o usual em sistemas operacionais, em que a descri\\u00e7\\u00e3o da localiza- \\u00e7\\u00e3o de cada arquivo \\u00e9 formada pela sequ\\u00eancia dos nomes das pastas no caminho da raiz do dvd at\\u00e9 o arquivo, separados pelo caractere barra (\\u2018/\\u2019). Por exemplo, na figura abaixo, a descri\\u00e7\\u00e3o da m\\u00fasica Sampa.mp3 no cat\\u00e1logo \\u00e9 MPB/Caetano/Sampa.mp3.\\r\\n\\r\\n\\r\\n\\r\\nUtilizando essa conven\\u00e7\\u00e3o, o cat\\u00e1logo do dvd mostrado na figura \\u00e9:\\r\\n\\r\\nRock/AngraCarryOn.mp3\\r\\n\\r\\nMPB/Caetano/Sampa.mp3\\r\\n\\r\\nMPB/Cartola/Alvorada.mp3\\r\\n\\r\\nComo o dvd de Joyce tem muitas m\\u00fasicas e pastas, o cat\\u00e1logo \\u00e9 muito grande. Joyce notou no entanto que o cat\\u00e1logo poderia ser menor (ter um n\\u00famero menor de caracteres) caso ela utilizasse outro conceito usual na nomea\\u00e7\\u00e3o de arquivos em sistemas operacionais: usar uma pasta como refer\\u00eancia, ao inv\\u00e9s da raiz.\\r\\n\\r\\nSe uma pasta diferente da raiz for escolhida como refer\\u00eancia, ent\\u00e3o para todos os arquivos que estejam diretamente nessa pasta ou em alguma subpasta n\\u00e3o ser\\u00e1 mais necess\\u00e1rio escrever o nome da pasta refer\\u00eancia no cat\\u00e1logo. Para as demais pastas, \\u00e9 necess\\u00e1rio indicar o caminho utilizando as pastas acima (na dire\\u00e7\\u00e3o da raiz) utilizando a conven\\u00e7\\u00e3o \\u2018../\\u2019 para a pasta imediatamente acima da pasta refer\\u00eancia. No exemplo da figura acima, no caso de a refer\\u00eancia ser a pasta Caetano, a m\\u00fasica Sampa.mp3 seria simplesmente descrita como Sampa.mp3. J\\u00e1 a m\\u00fasica Alvorada.mp3 seria descrita como ../Cartola/Alvorada.mp3.\\r\\n\\r\\nAssim, se a pasta Caetano for utilizada como refer\\u00eancia, o cat\\u00e1logo ser\\u00e1:\\r\\n\\r\\n../../Rock/AngraCarryOn.mp3\\r\\n\\r\\nSampa.mp3\\r\\n\\r\\n../Cartola/Alvorada.mp3\\r\\n\\r\\nNesse caso, a descri\\u00e7\\u00e3o do cat\\u00e1logo tem 59 carateres, menor do que quando a refer\\u00eancia utilizada \\u00e9 a raiz do DVD.\\r\\n\\r\\nSeu objetivo \\u00e9, dada a informa\\u00e7\\u00e3o de todas as m\\u00fasicas do cat\\u00e1logo, determinar o n\\u00famero m\\u00ednimo de caracteres necess\\u00e1rios para descrever o cat\\u00e1logo.\\n\\t\\t\\t\\t\",\n    \"id\": 2430,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro N (1 \\u2264 N \\u2264 105),\\u00a0indicando quantos arquivos Joyce possui no dvd. Cada uma das N linhas seguintes cont\\u00e9m a descri\\u00e7\\u00e3o de um arquivo, a partir da raiz.\\r\\n\\r\\n\\r\\n\\tN\\u00famero de pastas na entrada \\u2264 105\\r\\n\\tO nome de cada pasta e de cada arquivo \\u00e9 composto por no m\\u00e1ximo 20 caracteres, entre letras min\\u00fasculas, mai\\u00fasculas e ponto (.)\\r\\n\\tCada pasta possui no m\\u00e1ximo 100 pastas como filhas diretas.\\r\\n\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Cat\\u00e1logo de M\\u00fasicas\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo apenas um inteiro, o n\\u00famero m\\u00ednimo de caracteres necess\\u00e1rios para descrever o cat\\u00e1logo.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3o disp\\u00f5e de dois peda\\u00e7os retangulares de tecido, e quer us\\u00e1-los para fazer um len\\u00e7ol, tamb\\u00e9m retangular, de dimens\\u00f5es A x B. Se necess\\u00e1rio, os dois peda\\u00e7os retangulares podem ser unidos por uma costura, mas Jo\\u00e3o quer que a costura seja paralela aos lados dos ret\\u00e2ngulos. Os cortes, se necess\\u00e1rios, tamb\\u00e9m devem ser paralelos aos lados dos ret\\u00e2ngulos.\\r\\n\\r\\nDadas as dimens\\u00f5es dos peda\\u00e7os de tecido e do len\\u00e7ol, escreva um programa que determina se \\u00e9 poss\\u00edvel Jo\\u00e3o fazer o len\\u00e7ol com as dimens\\u00f5es desejadas.\\n\\t\\t\\t\\t\",\n    \"id\": 2431,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada cont\\u00e9m uma \\u00fanica linha, com seis inteiros A1, B1, A2, B2, A e B\\u00a0(1 \\u2264\\u00a0A1,\\u00a0B1,\\u00a0A2,\\u00a0B2,\\u00a0A,\\u00a0B\\u00a0\\u2264 106), representando, respectivamente, as dimens\\u00f5es dos dois ret\\u00e2ngulos dispon\\u00edveis, e as dimens\\u00f5es do ret\\u00e2ngulo desejado.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Len\\u00e7ol\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha contendo um caractere S se \\u00e9 poss\\u00edvel fazer o len\\u00e7ol, e N caso contr\\u00e1rio\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tRecentemente Juquinha ganhou de anivers\\u00e1rio um joguinho bem cl\\u00e1ssico: Tiro ao Alvo. Ele arrumou um \\u00f3timo lugar em seu quarto para se divertir com o jogo, por\\u00e9m ap\\u00f3s ler todas as regras do jogo ele percebeu que precisa da sua ajuda para calcular a pontua\\u00e7\\u00e3o obtida.\\r\\n\\r\\nSegundo as regras, o alvo do jogo \\u00e9 composto por C c\\u00edrculos, todos centrados na origem (0,0). Juquinha atira T vezes e ap\\u00f3s cada tiro informa suas coordenadas. A pontua\\u00e7\\u00e3o de cada tiro \\u00e9 feita da seguinte forma: para cada c\\u00edrculo em que o tiro estiver contido Juquinha recebe um ponto.\\r\\n\\r\\nConsidere por exemplo a figura abaixo. O tiro marcado com a letra A recebe zero pontos, pois n\\u00e3o est\\u00e1 contido por nenhum c\\u00edrculo. O tiro marcado com a letra B recebe um ponto, pois est\\u00e1 contido por um c\\u00edrculo (o mais externo). O tiro marcado com a letra C recebe dois pontos, pois est\\u00e1 contido por dois c\\u00edrculos (note que este caso mostra que tiros exatamente na borda de um c\\u00edrculo s\\u00e3o considerados como contidos pelo c\\u00edrculo). J\\u00e1 o tiro marcado com a letra D recebe tr\\u00eas pontos, pois est\\u00e1 contido pelos tr\\u00eas c\\u00edrculos. Considerando todos os pontos, a pontua\\u00e7\\u00e3o total de Juquinha \\u00e9 de 13 pontos.\\r\\n\\r\\n\\r\\n\\r\\nDados os raios de C c\\u00edrculos centrados na origem e as coordenadas dos T tiros realizados por Juquinha, escreva um programa que calcula o total de pontos que Juquinha obteve.\\n\\t\\t\\t\\t\",\n    \"id\": 2432,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros positivos, C (1 \\u2264 C \\u2264 105) e T (1 \\u2264\\u00a0T\\u00a0\\u2264 105), que representam, respectivamente, o n\\u00famero de c\\u00edrculos do alvo e o n\\u00famero de tiros.\\r\\n\\r\\nCada uma das C linhas seguintes cont\\u00e9m um inteiro positivo. O i-\\u00e9simo inteiro Ri (1 \\u2264\\u00a0Ri\\u00a0\\u2264 106\\u00a0para 1 \\u2264\\u00a0i\\u00a0\\u2264\\u00a0C) ,Ri\\u00a0>\\u00a0Ri-1\\u00a0para 2\\u00a0\\u2264\\u00a0i\\u00a0\\u2264\\u00a0C)\\u00a0representa o raio do i-\\u00e9simo c\\u00edrculo. Os raios Ri s\\u00e3o fornecidos em ordem crescente.\\r\\n\\r\\nCada uma das T linhas seguintes cont\\u00e9m um par X, Y (-105\\u00a0\\u2264\\u00a0X,\\u00a0Y\\u00a0\\u2264 105) de inteiros, que representam as coordenadas de cada tiro.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Tiro ao Alvo\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo apenas um inteiro, o total de pontos obtidos por Juquinha.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA Otac\\u00edlio Bus\\u00edlis Im\\u00f3veis (OBI) \\u00e9 a maior imobili\\u00e1ria de Nlog\\u00f3polis, especializada no aluguel de pr\\u00e9dios comerciais; todas as suas propriedades se localizam na Avenida Doutor Otac\\u00edlio Bus\\u00edlis, assim chamada em homenagem ao fundador da OBI.\\r\\n\\r\\nDevido \\u00e0 crise econ\\u00f4mica mundial, a OBI precisa vender K de seus im\\u00f3veis para levantar capital de giro. Dr. Otac\\u00edlio quer que os pr\\u00e9dios restantes ap\\u00f3s a venda sejam o mais pr\\u00f3ximos poss\\u00edvel \\u2014 ou seja, a dist\\u00e2ncia entre o primeiro e o \\u00faltimo pr\\u00e9dios restantes deve ser a menor poss\\u00edvel.\\r\\n\\r\\nInfelizmente, a OBI \\u00e9 propriet\\u00e1ria de tantos pr\\u00e9dios que o Dr. Otac\\u00edlio n\\u00e3o sabe quais pr\\u00e9dios ele deve vender; ele lhe contratou para que voc\\u00ea escreva um programa que determina qual \\u00e9 a m\\u00ednima dist\\u00e2ncia poss\\u00edvel entre o primeiro e o \\u00faltimo pr\\u00e9dios da OBI na avenida, ap\\u00f3s a venda de K pr\\u00e9dios.\\n\\t\\t\\t\\t\",\n    \"id\": 2433,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m os inteiros N (3 \\u2264 N \\u2264 105) e K (N\\u00a0- K \\u2265 2), indicando, respectivamente, quantos pr\\u00e9dios a OBI possui, e quantos pr\\u00e9dios ela pretende vender. A linha seguinte cont\\u00e9m N inteiros Xi (1 \\u2264\\u00a0Xi\\u00a0\\u2264 106\\u200b) onde todos os Xi s\\u00e3o distintos, indicando a dist\\u00e2ncia de cada um dos N pr\\u00e9dios ao in\\u00edcio da avenida, em metros.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Vende-se\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda deve conter um \\u00fanico inteiro indicando a menor dist\\u00e2ncia poss\\u00edvel entre o primeiro e o \\u00faltimo pr\\u00e9dio possu\\u00eddos pela OBI ap\\u00f3s a venda.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tVov\\u00f4 Jo\\u00e3o tem uma banca de jornais; ele tem muitos clientes, e diariamente recebe muito dinheiro, mas tamb\\u00e9m faz muitos pagamentos para manter o seu estoque de jornais e revistas. Todo dia ele vai ao banco realizar um dep\\u00f3sito ou uma retirada de dinheiro. Em alguns dias, o saldo de sua conta no banco fica negativo, mas Vov\\u00f4 Jo\\u00e3o tem um acordo com o banco que garante que ele somente \\u00e9 cobrado se o saldo for menor do que um valor pr\\u00e9-estabelecido.\\r\\n\\r\\nDada a movimenta\\u00e7\\u00e3o di\\u00e1ria da conta do banco do Vov\\u00f4 Jo\\u00e3o, voc\\u00ea deve escrever um programa que calcule o menor saldo da conta, no per\\u00edodo dado.\\n\\t\\t\\t\\t\",\n    \"id\": 2434,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois n\\u00fameros inteiros N (1 \\u2264 N \\u2264 30)\\u00a0e S (\\u2212103 \\u2264 S \\u2264 103)\\u00a0que indicam respectivamente o n\\u00famero de dias do per\\u00edodo de interesse e o saldo da conta no in\\u00edcio do per\\u00edodo. Cada uma das N linhas seguintes cont\\u00e9m um n\\u00famero inteiro indicando a movimenta\\u00e7\\u00e3o de um dia (\\u2212103 \\u2264 cada movimenta\\u00e7\\u00e3o \\u2264 103),\\u00a0(valor positivo no caso de dep\\u00f3sito, valor negativo no caso de retirada). A movimenta\\u00e7\\u00e3o \\u00e9 dada para um per\\u00edodo de N dias consecutivos: a primeira das N linhas corresponde ao primeiro dia do per\\u00edodo de interesse, a segunda linha corresponde ao segundo dia, e assim por diante.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Saldo do Vov\\u00f4\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um \\u00fanico n\\u00famero inteiro, o menor valor de saldo da conta no per\\u00edodo dado.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tMaria \\u00e9 uma moradora de Nlog\\u00f3polis, uma cidade na Nlog\\u00f4nia que tem uma caracter\\u00edstica muito interessante: todas as ruas da cidade ou s\\u00e3o orientadas no sentido norte-sul ou s\\u00e3o orientadas no sentido leste-oeste. Isso significa que, dadas duas ruas, ou elas s\\u00e3o paralelas ou elas s\\u00e3o perpendiculares entre si.\\n\\n\\t\\t\\t\\t\\tTodas as ruas da cidade s\\u00e3o de m\\u00e3o dupla e \\u00e9 poss\\u00edvel seguir em qualquer dire\\u00e7\\u00e3o em um cruzamento.\\n\\n\\t\\t\\t\\t\\tAgora Maria est\\u00e1 atrasada para uma reuni\\u00e3o e precisa de sua ajuda. Dadas as coordenadas iniciais de Maria e da reuni\\u00e3o, determine o n\\u00famero m\\u00ednimo de cruzamentos que Maria deve atravessar para chegar ao seu destino. Esse n\\u00famero inclui o cruzamento onde ocorrer\\u00e1 a reuni\\u00e3o mas n\\u00e3o inclui a posi\\u00e7\\u00e3o inicial de Maria.\\n\\t\\t\\t\\t\",\n    \"id\": 2437,\n    \"input\": \"\\t\\t\\t\\t\\tA \\u00fanica linha da entrada cont\\u00e9m quatro inteiros, Xm, Ym, Xr, Yr (0 \\u2264 Xm, Ym,  Xr, Yr \\u2264 1000), indicando as coordenadas de Maria (Xm, Ym) e da reuni\\u00e3o (Xr, Yr). O ponto de partida de Maria nunca ser\\u00e1 igual ao local da reuni\\u00e3o, ou seja, pelo menos uma das coordenadas ser\\u00e1 diferente.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Dist\\u00e2ncia de Manhattan\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha contendo um \\u00fanico inteiro: o n\\u00famero m\\u00ednimo de cruzamentos que Maria precisa atravessar para chegar at\\u00e9 o local da reuni\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tFernando ficou sabendo de um novo jogo chamado quadradinho de 8. Nesse jogo, \\u00e9 apresentado ao jogador uma fileira de quadrados, um do lado do outro. Em cada quadrado h\\u00e1 um n\\u00famero escrito. Veja abaixo um exemplo de fileira de quadrados:\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tPara ganhar, o jogador deve escolher alguns quadrados de forma que eles juntos formem apenas um ret\\u00e2ngulo cont\\u00edguo e que a soma de seus n\\u00fameros seja divis\\u00edvel por 8. Na fileira de quadrados acima, o jogador ganha se escolher os quadrados com os n\\u00fameros 6, 0 e 2. O jogador perde se escolher os quadrados com 3, 4 e 9, apesar da soma ser divisivel por 8, os quadrados n\\u00e3o est\\u00e3o juntos, eles acabam formando dois ret\\u00e2ngulos separados.\\n\\n\\t\\t\\t\\t\\tVoc\\u00ea deve estar pensando agora que Fernando quer sua ajuda para que voc\\u00ea mostre a ele como ganhar o jogo, mas Fernando \\u00e9 um garoto muito esperto e sabe resolver o jogo rapidamente. Ele quer na verdade que voc\\u00ea o ajude a descobrir de quantas formas \\u00e9 poss\\u00edvel ganhar esse jogo.\\n\\t\\t\\t\\t\",\n    \"id\": 2438,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada possui duas linhas. A primeira linha cont\\u00e9m apenas um inteiro N (1 \\u2264 N \\u2264 1000000) que indica o n\\u00famero de quadrados na fileira de um jogo. A segunda linha cont\\u00e9m N inteiros indicando na ordem os n\\u00fameros presentes nos quadrados da fileira de um jogo, (os n\\u00fameros nos quadrados s\\u00e3o inteiros n\\u00e3o negativos menores ou iguais a 1000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Quadradinho de 8\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo apenas um inteiro, o n\\u00famero de maneiras de ganhar o jogo apresentado na entrada. Se n\\u00e3o for poss\\u00edvel que o jogador ganhe o jogo, imprima 0.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tVov\\u00f3 Vit\\u00f3ria possui muitos netinhos; como toda boa av\\u00f3, ela se preocupa constantemente com a sa\\u00fade de seus netos, e quer garantir que eles estejam sempre bem agasalhados o tempo todo.\\n\\n\\t\\t\\t\\t\\tVov\\u00f3 Vit\\u00f3ria disp\\u00f5e de um saco com v\\u00e1rios retalhos quadrados de mesmo tamanho, em tr\\u00eas cores diferentes, e quer us\\u00e1-los para costurar cachec\\u00f3is para seus netos. Ela quer que cada cachecol tenha tr\\u00eas retalhos de largura por N de comprimento e, al\\u00e9m disso, retalhos adjacentes devem ter cores diferentes. Por exemplo, a figura abaixo mostra tr\\u00eas cachec\\u00f3is que Vov\\u00f3 Vit\\u00f3ria pode costurar.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\",\n    \"id\": 2439,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada consiste de uma \\u00fanica linha contendo um \\u00fanico inteiro N(1 \\u2264 N \\u2264 1018), indicando o n\\u00famero de retalhos no comprimento do cachecol.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Cachecol da Vov\\u00f3 Vit\\u00f3ria\",\n    \"output\": \"\\t\\t\\t\\t\\tImprima uma \\u00fanica linha contendo um \\u00fanico n\\u00famero inteiro, indicando o n\\u00famero de cachec\\u00f3is distintos que a Vov\\u00f3 Vit\\u00f3ria pode costurar. Como este n\\u00famero pode ser muito grande, imprima o resto que este n\\u00famero deixa quando dividido por 1.000.000.007 (109 + 7).\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tA Guerra de Troia pode ter sido um grande conflito b\\u00e9lico entre gregos e troianos, possivelmente ocorrido entre 1300 a.C. e 1200 a.C. (fim da Idade do Bronze no Mediterr\\u00e2neo). Recentemente foram encontradas inscri\\u00e7\\u00f5es numa caverna a respeito de sobreviventes. Ap\\u00f3s um trabalho \\u00e1rduo, arque\\u00f3logos descobritam que as incri\\u00e7\\u00f5es descreviam rela\\u00e7\\u00f5es de parentesco numa certa popula\\u00e7\\u00e3o. Cada item da inscri\\u00e7\\u00e3o indicavam duas pessoas que pertenciam a uma mesma fam\\u00edlia. Seu problema \\u00e9 determinar quantas fam\\u00edlias distintas existem.\\n\\t\\t\\t\\t\",\n    \"id\": 2440,\n    \"input\": \"\\t\\t\\t\\t\\tO arquivo de entrada consiste de M + 1 linhas. A primeira linha do arquivo de entrada cont\\u00e9m um inteiro positivo N, que indica o n\\u00famero de elementos da comunidade, numerados de 1 a N. As demais M linhas do arquivo de entrada cont\\u00eam, cada uma, dois inteiros. Cada inteiro identifica um elemento da comunidade. Cada linha indica que os dois indiv\\u00edduos pertencem a uma mesma fam\\u00edlia.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Fam\\u00edlias de Troia\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda deve conter apenas uma linha contendo um \\u00fanico inteiro, que \\u00e9 o n\\u00famero de fam\\u00edlias.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA sala de aulas utilizada para os cursos da OBI tem uma grande janela, composta de tr\\u00eas folhas de vidro. A janela tem um metro de altura por seis metros de comprimento. Cada folha da janela tem um metro de altura e dois metros de comprimento. As folhas deslizam sobre trilhos, ao longo do comprimento da janela, de forma que \\u00e9 poss\\u00edvel controlar a abertura da janela, para circula\\u00e7\\u00e3o de ar.\\n\\n\\t\\t\\t\\t\\tDadas as posi\\u00e7\\u00f5es das tr\\u00eas folhas da janela, deseja-se determinar qual a \\u00e1rea da janela que est\\u00e1 aberta, em cent\\u00edmetros quadrados.\\n\\n\\t\\t\\t\\t\\tA figura abaixo ilustra duas configura\\u00e7\\u00f5es das folhas da janela. Na figura, os cantos inferiores esquerdos de cada folha s\\u00e3o indicados por F1,F2 e F3. Na configura\\u00e7\\u00e3o (a) a janela est\\u00e1 totalmente fechada, e portanto o total da \\u00e1rea aberta \\u00e9 igual a zero. Na configura\\u00e7\\u00e3o (b) h\\u00e1 duas aberturas, e o total de \\u00e1rea aberta \\u00e9 igual a (100 \\u00d7 100) + (50 \\u00d7 100) = 15.000 cm\\u00b2.\\n\\n\\t\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\t\\tDadas as posi\\u00e7\\u00f5es das tr\\u00eas folhas da janela, escreva um programa que calcule a \\u00e1rea da janela que est\\u00e1 aberta, em cent\\u00edmetros quadrados.\\n\\t\\t\\t\\t\",\n    \"id\": 2441,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira e \\u00fanica linha da entrada cont\\u00e9m tr\\u00eas inteiros F1, F2, F3 (0 \\u2264 F1, F2, F3 \\u2264 400), indicando as posi\\u00e7\\u00f5es das tr\\u00eas folhas. A posi\\u00e7\\u00e3o de cada folha \\u00e9 dada pela dist\\u00e2ncia, em cent\\u00edmetros, da extremidade esquerda da janela at\\u00e9 a extremidade esquerda da folha.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Janela\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um \\u00fanico inteiro, a \\u00e1rea aberta da janela em cent\\u00edmetros quadrados.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA N-log\\u00f4nia \\u00e9 uma regi\\u00e3o com um clima muito intenso e vari\\u00e1vel, onde em quest\\u00e3o de poucos dias \\u00e9 poss\\u00edvel observar uma forte seca, seguida de uma intensa esta\\u00e7\\u00e3o de chuvas. O Seu Jo\\u00e3o tem uma planta\\u00e7\\u00e3o de obilina, uma fruta t\\u00edpica e muito apreciada na regi\\u00e3o, o que a torna muito valiosa. A obilina, entretanto, \\u00e9 muito suscet\\u00edvel a mudan\\u00e7as clim\\u00e1ticas, de forma que \\u00e9 dif\\u00edcil prever quanto desta fruta ser\\u00e1 colhido durante a safra.\\n\\n\\t\\t\\t\\t\\tObservou-se que as \\u00e1rvores de obilina seguem as seguintes regras:\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tAs \\u00e1rvores produzem frutas todos os dias, exceto quando elas morrem;\\n\\t\\t\\t\\t\\t\\tAs \\u00e1rvores mortas n\\u00e3o produzem frutas, e infelizmente, mesmo que volte a chover, continuam mortas;\\n\\t\\t\\t\\t\\t\\tSe choveu na noite anterior, a \\u00e1rvore produz uma fruta a mais que no dia anterior;\\n\\t\\t\\t\\t\\t\\tSe estiou na noite anterior, a \\u00e1rvore produz uma fruta a menos que no dia anterior; e\\n\\t\\t\\t\\t\\t\\tUma \\u00e1rvore morre se n\\u00e3o produzir nenhuma fruta.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tO Seu Jo\\u00e3o deseja vender toda a obilina produzida para uma grande rede de mercados local, mas para isso, precisa saber exatamente quantas frutas de obilina ele colher\\u00e1 durante a safra.\\n\\n\\t\\t\\t\\t\\tPara ajudar o Seu Jo\\u00e3o nesta tarefa, voc\\u00ea deve escrever um programa que, dada a previs\\u00e3o do tempo para cada noite do per\\u00edodo da safra, e quantas frutas cada \\u00e1rvore do Seu Jo\\u00e3o produziu no dia anterior ao in\\u00edcio da safra, determine quantas obilinas ser\\u00e3o colhidas durante a safra.\\n\\n\\t\\t\\t\\t\\tPor exemplo, considerando apenas um p\\u00e9 de obilina, se a safra dura dois dias, choveu durante duas noites, e o p\\u00e9 de obilina produziu 3 frutos antes de come\\u00e7ar a safra, a produ\\u00e7\\u00e3o total da safra ser\\u00e1 de 9 frutas: 4 no primeiro dia da safra, e 5 no segundo dia.\\n\\t\\t\\t\\t\",\n    \"id\": 2442,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros, N(1 \\u2264 N \\u2264 100000) e K (1 \\u2264 K \\u2264 100 000), respectivamente o n\\u00famero de dias que dura a safra, e o n\\u00famero de \\u00e1rvores que o Seu Jo\\u00e3o possui.\\n\\n\\t\\t\\t\\t\\tA segunda linha cont\\u00e9m K inteiros ai (1 \\u2264 ai \\u2264 100, para todo i) indicando quantas frutas foram produzidas no dia anterior ao in\\u00edcio da safra por cada uma das K \\u00e1rvores.\\n\\n\\t\\t\\t\\t\\tA linha seguinte cont\\u00e9m N letras separadas por um espa\\u00e7o em branco. Cada uma das letras indica se choveu ou se estiou durante a noite respectiva: a primeira letra se refere \\u00e0 primeira noite, a segunda letra se refere \\u00e0 segunda noite, e assim por diante. Se a letra for um \\u2018C\\u2019, indica que choveu aquela noite chuvosa, e se for um \\u2018E\\u2019, indica que estiou (ou seja, n\\u00e3o choveu).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Planta\\u00e7\\u00e3o\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo um \\u00fanico inteiro, indicando o n\\u00famero de frutas que ser\\u00e3o produzidas pela planta\\u00e7\\u00e3o do Seu Jo\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3ozinho est\\u00e1 aprendendo a somar fra\\u00e7\\u00f5es na escola e quer sua ajuda para escrever um programa que dadas duas fra\\u00e7\\u00f5es imprima a soma delas em sua forma irredut\\u00edvel. Assim ele vai poder conferir as respostas dos exerc\\u00edcios que est\\u00e1 fazendo.\\n\\n\\t\\t\\t\\t\\tA forma irredut\\u00edvel de uma fra\\u00e7\\u00e3o \\u00e9 quando o divisor (n\\u00famero de baixo) \\u00e9 o menor poss\\u00edvel. Por exemplo, 10\\u20443 \\u00e9 uma fra\\u00e7\\u00e3o irredut\\u00edvel, pois 10 e 3 n\\u00e3o t\\u00eam nenhum divisor em comum. Mas 10\\u20446 n\\u00e3o \\u00e9, pois ela pode ser simplificada para 5\\u20443, dividindo-se 10 e 6 por 2.\\n\\n\\t\\t\\t\\t\\tDados quatro inteiros a, b, c, d, escreva um programa que calcule a\\u2044b + c\\u2044d na sua forma irredut\\u00edvel.\\n\\t\\t\\t\\t\",\n    \"id\": 2443,\n    \"input\": \"\\t\\t\\t\\t\\tA \\u00fanica linha da entrada cont\\u00e9m quatro inteiros a, b, c, d, (1 \\u2264 a, b, c, d \\u2264 100) respectivamente dividendo e divisor da primeira fra\\u00e7\\u00e3o e dividendo e divisor da segunda fra\\u00e7\\u00e3o.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Soma de Fra\\u00e7\\u00f5es\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha contendo dois inteiros, dividendo e divisor da fra\\u00e7\\u00e3o irredut\\u00edvel formada pela soma das duas fra\\u00e7\\u00f5es dadas.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2013  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBruno \\u00e9 um menino que gosta muito de ver televis\\u00e3o. No entanto ele se depara com um problema muito chato. Sempre que come\\u00e7a um novo programa no canal preferido dele, a TV Nlog\\u00f4nia, acontece de o volume do som deste programa estar diferente do anterior, \\u00e0s vezes com volume menor, outras vezes com volume maior. Quando est\\u00e1 com volume menor, ele aumenta o volume pressionando uma quantidade de vezes seguidas o bot\\u00e3o de aumentar para o volume ficar ideal; a mesma coisa acontece quando est\\u00e1 um volume maior, e ele diminui o volume pressionando alguma quantidade de vezes seguidas o bot\\u00e3o de diminuir o volume para ficar com o volume que ele goste no momento.\\n\\n\\t\\t\\t\\t\\tO aparelho de TV dele tem umas peculiaridades: ele possui volume m\\u00ednimo, com valor 0 (tamb\\u00e9m chamado de mudo), e volume m\\u00e1ximo, com valor 100. A TV nunca ultrapassa os volumes m\\u00e1ximo e m\\u00ednimo. Por exemplo, se o volume j\\u00e1 estiver no m\\u00e1ximo e ele pressionar o bot\\u00e3o de aumentar o som, o volume n\\u00e3o se altera. Da mesma forma, se o volume estiver no valor m\\u00ednimo e ele pressionar o bot\\u00e3o de diminuir o som, o volume n\\u00e3o se altera.\\n\\n\\t\\t\\t\\t\\tAgora Bruno quer sua ajuda: ele lembra qual era o volume inicial da TV, e quantas vezes ele pressionou cada bot\\u00e3o. Mas, como foram v\\u00e1rias mudan\\u00e7as de volume, ele n\\u00e3o sabe qual \\u00e9 o volume atual da TV. Por isso, pediu que voc\\u00ea o ajude a calcular qual \\u00e9 o volume atual, dados o volume inicial e a lista de trocas de volume que ele realizou.\\n\\t\\t\\t\\t\",\n    \"id\": 2444,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois n\\u00fameros inteiros V (0 \\u2264 V \\u2264 100)\\u00a0e T (0 \\u2264 T \\u2264 1000), que indicam, respectivamente, o volume inicial e o n\\u00famero de trocas de volume.\\n\\n\\t\\t\\t\\t\\tA segunda linha cont\\u00e9m T n\\u00fameros inteiros Ai (\\u2212100 \\u2264 Ai \\u2264 100)\\u00a0que mostram as modifica\\u00e7\\u00f5es de volume realizadas, na ordem em que estas modifica\\u00e7\\u00f5es foram feitas. O primeiro n\\u00famero indica a primeira modifica\\u00e7\\u00e3o de volume, o segundo n\\u00famero indica a segunda modifica\\u00e7\\u00e3o, e assim por diante. Para cada modifica\\u00e7\\u00e3o, um n\\u00famero maior do que zero significa quantas vezes Bruno pressionou o bot\\u00e3o de aumentar o som; um n\\u00famero menor do que zero significa quantas vezes ele pressionou o bot\\u00e3o de diminuir o som. Ou seja, se o n\\u00famero \\u00e9 igual a 5, significa que nessa modifica\\u00e7\\u00e3o ele pressionou cinco vezes o bot\\u00e3o de aumentar o som; se o n\\u00famero \\u00e9 igual a \\u22123, significa que nessa modifica\\u00e7\\u00e3o ele pressionou o bot\\u00e3o de diminuir o som tr\\u00eas vezes.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Volume da TV\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir apenas uma linha, contendo apenas um inteiro F, que indica qual o volume atual da TV ap\\u00f3s as mudan\\u00e7as de volume.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tA postman is responsible for giving the orders in the street Jo\\u00e3ozinho. On the company policy, orders must be delivered in the same order they were sent, even if that is not the quickest way. Tired of going up and down that road so many times, our friend wants to show the company how long it takes to deliver orders in an attempt to overturn this policy.\\r\\n\\r\\nJo\\u00e3ozinho's street has N homes. Of course, the houses are numbered in an orderly fashion (not necessarily consecutive numbers). Considering that houses have approximately the same size, you can assume that the postman takes one unit of time to walk from one house to the immediately neighboring house.\\r\\n\\r\\nThere M orders for this street, which should be delivered in the same order in which they arrived. Each order contains the number of the house where it should be delivered.\\r\\n\\r\\nWrite a program that determines how long the postman will take to deliver all orders, assuming that when the time starts ticking, it is the first house (the lower number), and the time finishes telling when all orders were delivered (even if the postman is not back in the first house). You can disregard the time to put the order in the mailbox (that is, if it has only an order, to the first house, the answer to the problem is zero).\\n\\t\\t\\t\\t\",\n    \"id\": 2448,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers, N and M (1 \\u2264 N, M \\u2264 45,000), respectively the number of houses and the number of orders. The second line contains N (1 \\u2264 Ni \\u2264 109) integers in strictly ascending order, indicating the numbers of the houses. The third line contains M (1 \\u2264 Mi \\u2264 109) integers indicating the numbers of the houses where the orders are to be delivered, in the order given at the entrance.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Postman\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing a single integer, as long as the postman will take to deliver all orders in the correct order, assuming that it starts in the fewest home.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJoaozinho was coming home one day when he realized he had lost the key to the door. Desperate, he decided to ask for help to his friend Roberto, who in a few seconds managed to open the door using their tools.\\r\\n\\r\\nAmazed at the speed at which his friend managed to open the door of his house without a key, he decided to ask him how he had managed it. Roberto explained that Joaozinho's house lock is based on a system of different sizes of pins, once aligned in the same height M, enable the door opening.\\r\\n\\r\\nA lock is a set of N pins arranged horizontally which can be moved up or down with the aid of a metal key which, when inserted in the lock, can increase or decrease by 1 mm, while the height of any two consecutive pins.\\r\\n\\r\\nJoaozinho as a perfectionist exemplary decided to release its lock on fewer movements where each movement is to choose two consecutive pins of the lock and increase or decrease the height of the two pins at 1mm. After all the pins having height exactly equal to M, the lock is unlocked.\\n\\t\\t\\t\\t\",\n    \"id\": 2449,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line entry contains two integers N (1 \\u2264 N \\u2264 1000) and M (1 \\u2264 M \\u2264 100) representing, respectively, the amount of the lock pin and the height they should be for the lock to be unlocked.\\r\\n\\r\\nThe second line contains the entry N (1 \\u2264 Ni \\u2264 100) integers representing the heights of the lock pin.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Door Lock\",\n    \"output\": \"\\t\\t\\t\\t\\tIts program to print a line containing an integer representing the minimum amount of movement to unlock the lock.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJoaozinho is learning about arrays. Today he learned how to make arrays on the ladder shape, and exercising. To help him, you should write a program that determines if the result of it really is in the correct format.\\r\\n\\r\\nA matrix is ladder shaped when, for each line, the following conditions are met:\\r\\n\\r\\n\\r\\n\\tIf the line has only zeros, then all rows below it also only have zeros.\\r\\n\\tOtherwise, X is nonzero element of the leftmost line; Then, for all the lines below the line X, all elements in the columns left of X and X are zero.\\r\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2450,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line has two integers N and M (1 \\u2264 N, M \\u2264 500), the dimensions of the matrix. Each of the following N lines contains M (0 \\u2264 Mij \\u2264 105) non-negative integers, the array elements.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Matrix Ladder\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing the character 'S' if the array is in ladder format, or 'N' otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tPac Man is a popular game where the character tries to eat as much as possible balls, whilst having to flee several ghosts. This time our character wants to carry the food collected home, but the encounter with a ghost, instead of finishing the game, makes all the food collected is stolen.\\r\\n\\r\\n\\t\\t\\t\\t\\tIn this problem the ghosts do not move, and the player always makes the Pacman go through the following path:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\tThe Pacman begins in the upper left corner of the board.\\r\\n\\t\\t\\t\\t\\t\\tThe Pacman runs the line, from left to right, until you reach the right side of the board.\\r\\n\\t\\t\\t\\t\\t\\tThe player down one position, and runs the line, this time from right to left.\\r\\n\\t\\t\\t\\t\\t\\tSteps 2 and 3 are repeated until the entire board has been gone through.\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\tUnfortunately, Pacman can not ignore the user's commands to escape the ghosts or get more food, but it can, at any time, take advantage of an implementation bug and stop the game, taking all the food you are loading.\\r\\n\\r\\n\\t\\t\\t\\t\\tYou should write a program to determine the largest amount of food the Pacman can take, if you choose the best possible time to leave. Note that the player also has the option to not leave before the end of the game.\\n\\t\\t\\t\\t\",\n    \"id\": 2451,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (2 \\u2264 N \\u2264 100), the game board size, which is square. Each of the following N lines contains N characters, which can be:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t'.' Empty space;\\r\\n\\t\\t\\t\\t\\t\\t'o' a meal;\\r\\n\\t\\t\\t\\t\\t\\t'A' a ghost.\\r\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tThere is not a ghost and a meal in the same position.\\n\\t\\t\\t\\t\\tThere is no ghost or food in the initial position (the first character of the first line of the board is '.').\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"PacMan\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing a single integer, the maximum amount of food that the Pacman can take home.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tUm experimento biol\\u00f3gico utiliza uma fita de papel branco especial, na qual algumas gotas de um reagente s\\u00e3o colocadas em posi\\u00e7\\u00f5es espec\\u00edficas. Inicialmente a gota de reagente faz com que o papel se torne preto na posi\\u00e7\\u00e3o em que foi colocada. A cada dia o reagente se propaga pelo papel, em todas as dire\\u00e7\\u00f5es, com velocidade de 1 posi\\u00e7\\u00e3o por dia, colorindo a regi\\u00e3o em que o reagente se propagou. A figura abaixo mostra um experimento com uma fita de 13 posi\\u00e7\\u00f5es, com tr\\u00eas gotas de reagente inicialmente, colocadas nas posi\\u00e7\\u00f5es 2, 6 e 13 (a posi\\u00e7\\u00e3o 1 \\u00e9 a primeira mais \\u00e0 esquerda da fita). Ao final do terceiro dia, a fita est\\u00e1 completamente tomada pelo reagente.\\r\\n\\r\\n\\r\\n\\r\\nVoc\\u00ea foi contratado para escrever um programa que, dados o comprimento da fita de papel e as posi\\u00e7\\u00f5es das gotas de reagente no in\\u00edcio do experimento, determine quantos dias ser\\u00e3o necess\\u00e1rios para a fita de papel ficar completamente tomada pelo reagente.\\n\\t\\t\\t\\t\",\n    \"id\": 2452,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha cont\\u00e9m dois inteiros F (1 \\u2264 F \\u2264 100000) e R (1 \\u2264 R \\u2264 1000), indicando respectivamente o comprimento da fita de papel, em n\\u00fameros de posi\\u00e7\\u00f5es, e o n\\u00famero de gotas no in\\u00edcio do experimento. A segunda linha cont\\u00e9m R inteiros, indicando as posi\\u00e7\\u00f5es das gotas de reagente, que s\\u00e3o dadas em ordem crescente.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Semente\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha, contendo um \\u00fanico inteiro, o n\\u00famero de dias necess\\u00e1rios para que a fita de papel fique totalmente tomada pelo reagente.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tUma brincadeira que crian\\u00e7as adoram \\u00e9 se comunicar na l\\u00edngua do P, acrescentando p\\u00ea antes de cada s\\u00edlaba, como uma forma de c\\u00f3digo para dificultar que outras pessoas entendam a conversa (p\\u00ea-va p\\u00ea-mos p\\u00ea-no p\\u00ea-ci p\\u00ea-ne p\\u00ea-ma?).\\r\\n\\r\\nJacy e K\\u00e1tia adaptaram a l\\u00edngua do P para mensagens eletr\\u00f4nicas, acrescentando a letra P min\\u00fascula \\u2018p\\u2019 antes de cada letra das palavras de uma mensagem. Um exemplo de mensagem codificada e a respectiva mensagem decodificada \\u00e9 mostrada na figura abaixo.\\r\\n\\r\\n\\r\\n\\r\\nSua tarefa \\u00e9 escrever um programa que decodifique uma mensagem escrita na l\\u00edngua do P eletr\\u00f4nica de Jacy e K\\u00e1tia.\\n\\t\\t\\t\\t\",\n    \"id\": 2453,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada consiste de uma \\u00fanica linha, contendo uma mensagem escrita na l\\u00edngua do P eletr\\u00f4nica de Jacy e K\\u00e1tia, a\\u00a0mensagem cont\\u00e9m apenas letras mai\\u00fasculas e min\\u00fasculas e espa\\u00e7os em branco, a\\u00a0mensagem tem entre 1 e 1000 caracteres, n\\u00e3o h\\u00e1 dois espa\\u00e7os em branco consecutivos na mensagem.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"L\\u00edngua do P\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha, contendo a mensagem decodificada.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tFl\\u00edper \\u00e9 um tipo de jogo onde uma bolinha de metal cai por um labirinto de caminhos at\\u00e9 chegar na parte de baixo do labirinto. A quantidade de pontos que o jogador ganha depende do caminho que a bolinha seguir. O jogador pode controlar o percurso da bolinha mudando a posi\\u00e7\\u00e3o de algumas portinhas do labirinto. Cada portinha pode estar na posi\\u00e7\\u00e3o 0, que significa virada para a esquerda, ou na posi\\u00e7\\u00e3o 1 que quer dizer virada para a direita. Considere o fl\\u00edper da figura abaixo, que tem duas portinhas. A portinha P est\\u00e1 na posi\\u00e7\\u00e3o 1 e a portinha R, na posi\\u00e7\\u00e3o 0. Desse jeito, a bolinha vai cair pelo caminho B.\\r\\n\\r\\n \\r\\n\\r\\nVoc\\u00ea deve escrever um programa que, dadas as posi\\u00e7\\u00f5es das portinhas P e R, neste fl\\u00edper da figura, diga por qual dos tr\\u00eas caminhos, A, B ou C, a bolinha vai cair!\\n\\t\\t\\t\\t\",\n    \"id\": 2454,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 composta por apenas uma linha contendo dois n\\u00fameros P (0 ou\\u00a01) e R (0 ou\\u00a01), indicando as posi\\u00e7\\u00f5es das duas portinhas do fl\\u00edper da figura.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Fl\\u00edper\",\n    \"output\": \"\\t\\t\\t\\t\\tA sa\\u00edda do seu programa deve ser tamb\\u00e9m apenas uma linha, contendo uma letra mai\\u00fascula que indica o caminho por onde a bolinha vai cair: \\u2018A\\u2019, \\u2018B\\u2019 ou \\u2018C\\u2019.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3ozinho acaba de mudar de escola e a primeira coisa que percebeu na nova escola \\u00e9 que a gangorra do parquinho n\\u00e3o \\u00e9 sim\\u00e9trica, uma das extremidades \\u00e9 mais longa que a outra. Ap\\u00f3s brincar algumas vezes com um amigo de mesmo peso, ele percebeu que quando est\\u00e1 em uma extremidade, a gangorra se desequilibra para o lado dele (ou seja, ele fica na parte de baixo, e o amigo na parte de cima), mas quando eles trocam de lado, a gangorra se desequilibra para o lado do amigo. Sem entender a situa\\u00e7\\u00e3o, Jo\\u00e3ozinho pediu ajuda a outro amigo de outra s\\u00e9rie, que explicou que o comprimento do lado interfere no equil\\u00edbrio da gangorra, pois a gangorra estar\\u00e1 equilibrada quando\\r\\n\\r\\nP1 \\u2217 C1 = P2 \\u2217 C2\\r\\n\\r\\nonde P1 e P2 s\\u00e3o os pesos da crian\\u00e7a no lado esquerdo e direito, respectivamente, e C1 e C2 s\\u00e3o os comprimentos da gangorra do lado esquerdo e direito, respectivamente.\\n\\t\\t\\t\\t\",\n    \"id\": 2455,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira e \\u00fanica linha da entrada cont\\u00e9m 4 inteiros, P1, C1, P2 e C2, (10 \\u2264 P1, C1, P2 e C2\\u00a0\\u2264 100) nesta ordem.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Gangorra\",\n    \"output\": \"\\t\\t\\t\\t\\tSe a gangorra estiver equilibrada, imprima \\u20180\\u2019. Se ela estiver desequilibrada de modo que a crian\\u00e7a esquerda esteja na parte de baixo, imprima \\u2018-1\\u2019, sen\\u00e3o, imprima \\u20181\\u2019.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBeatriz loves to play cards with her friends. To train memory and logical thinking, she invented a small hobby with cards. She removes the top five cards from the top of a well-shuffled deck, and places them in sequence from left to right, the table with the face down.\\r\\n\\r\\nThen she looks, for a moment, each of the sequence of cards (and soon puts back on the table, face down). Using only your memory, Beatrice should now say whether the sequence of cards is increasingly ordered, decreasingly, or is not orderly.\\r\\n\\r\\nAfter so much play, she's getting tired, and do not trust their own judgment to find out whether she has succeeded or made a mistake. So she asked you to make a program that, given a sequence of five cards, determine whether a given sequence is ordered increasingly, decreasingly, or is not orderly.\\n\\t\\t\\t\\t\",\n    \"id\": 2456,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line containing five cards of the sequence. Card values are represented by integers between 1 and 13. The five cards have different values.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Cards\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing a single uppercase character 'C' if the given sequence is increasingly ordered, 'D' if ordered decreasingly, or 'N' otherwise.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tPeter is developing an online game for two players, where the goal is to force an opponent's error, bluffing. The point is that, as the game proceeds, more time is needed to check whether a move is valid or not, i.e., whether it is a bluff or not. So what Peter needs your help to implement a fast algorithm to check whether or not a move is a bluff.\\r\\n\\r\\nConsider a fixed set of N integers, positive or negative numbers, and a sequence of integers B, initially empty. Players alternate in plays that are to include a number at a time at the end of the sequence B. When it is your turn, a player must do one of two possible valid moves: (i) in B include any of the numbers of the set A; (ii) or B include a number that is the sum of any two numbers which are already B (note the sum is not necessarily different numbers may be the sum of a number with itself).\\r\\n\\r\\nIn this task, you must write a program that, given the set A and a B sequence, say that all the moves were valid, or show what is the first invalid played in B.\\n\\t\\t\\t\\t\",\n    \"id\": 2461,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of three lines. The first line contains two numbers N (1 \\u2264 N \\u2264 103) and M (1 \\u2264 M \\u2264 104), respectively, the pool size and the size of sequence B. The second line contains the N integers of the set A. The third line contains M integers of the sequence B.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Bluff\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line. The line should contain the word \\\"sim\\\" if all moves in B are valid; otherwise, if any invalid move in B, the line must contain the first invalid number in B.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tJo\\u00e3o was browsing the internet, looking flight schedules of various airlines between different cities, and noticed that in some cases direct flights between two cities had different times depending on whether they were flight onward or return.\\r\\n\\r\\nThe only possible explanation was to flights connecting cities located in different time zones. Jo\\u00e3o then came to the conclusion that it would be possible to determine the difference in time zones, based only on schedules provided by the airlines.\\r\\n\\r\\nFor example, a flight out of the Haqu\\u00e9rnia at 10:00 am and arrives in Nerd\\u00ednia 22:00 hours, while another flight out of Nerd\\u00ednia at 10:00 am and arrives in Haqu\\u00e9rnia to 18:00. What is the explanation? Note that both flights using the same aircraft on the same route, a round, another back. In reality, the flight lasts 10 hours and Nerd\\u00ednia is in a zone +2 hours hours ahead of time zone Haqu\\u00e9rnia (hence the Haqu\\u00e9rnia time zone is -2 hours ahead of time zone Nerd\\u00ednia).\\r\\n\\r\\nJo\\u00e3o then noticed the time table of several airlines, but made a mistake. He forgot to write down dates of departure and arrival. For example, if the departure of the flight is at 18:00 and arrival is at 14:00, Jo\\u00e3o can not tell if the arrival date is the following the departure in flight that lasts 20 hours, between cities in the same time zone, or if the arrival date is the same as starting with a flight time of one hour, the destination city is in time zone five hours behind the time zone of the city origin.\\r\\n\\r\\nYour task is to help Jo\\u00e3o to determine the flight time and the difference between the time zones of arrival and departure of each pair of flights with table, a round another back, even without knowing the dates of the flights.\\n\\t\\t\\t\\t\",\n    \"id\": 2462,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry consists of only one line, with four times separated by a space. These times involve flights between two cities, A and B are, respectively, pA, cB, pB and cA. The pA time indicates the departure time of a flight from A to B, local time of A. The time indicates the arrival time of the flight even in town B, local time of B. The time is the starting time flight back from B to A, local time B. cA time is the arrival time of the flight back, local time of A.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Flight\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output consists of one line, informing the flight time in minutes and how many hours B is ahead of A, in terms of time zones. The two values must be separated by a blank space.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tBruninho est\\u00e1 programando um personagem virtual para o pr\\u00f3ximo desafio de um jogo de aventura em que, numa das fases, o personagem tem que entrar em um corredor, percorrer algumas salas e depois sair do corredor. Ele pode entrar apenas uma vez, e passar por cada sala apenas uma vez. Todas as salas possuem uma porta de entrada e uma de sa\\u00edda, como ilustra a parte (a) da figura abaixo. Ao passar por uma sala o jogador ganha um certo n\\u00famero de vidas (que pode ser negativo!). O objetivo \\u00e9 passar pelo corredor coletando a maior quantidade poss\\u00edvel de vidas! Por sorte, sempre existe ao menos uma sala onde se ganha um n\\u00famero positivo de vidas.\\r\\n\\r\\n\\r\\n\\r\\nNo exemplo acima, o personagem de Bruninho pode ganhar, no m\\u00e1ximo, 12 vidas, por exemplo, entrando pela sala 2 e saindo pela sala 4, como mostrado na parte (b) da figura. Nesta tarefa, voc\\u00ea deve escrever um programa que, dados os n\\u00fameros de vidas correspondentes a cada sala do corredor, calcule a quantidade m\\u00e1xima de vidas que ser\\u00e1 poss\\u00edvel ganhar.\\n\\t\\t\\t\\t\",\n    \"id\": 2463,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 composta por duas linhas. A primeira linha cont\\u00e9m um inteiro N\\u00a0(1 \\u2264 N \\u2264 50000), o n\\u00famero de salas no corredor. A segunda linha cont\\u00e9m N n\\u00fameros inteiros (entre \\u2212100 e 100), positivos ou negativos, indicando a quantidade de vidas que se ganha em cada sala.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Corredor\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma linha, com o n\\u00famero m\\u00e1ximo de vidas que \\u00e9 poss\\u00edvel ganhar.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tDimas \\u00e9 um renomado investigador de roubos a antiguidades e obras de arte, que sempre \\u00e9 chamado para casos intrigantes que necessitam de bastante trabalho mental. Desta vez, o quadro que sumiu de um conhecido museu na Fran\\u00e7a foi a Donalisa, do pintor Leonardo da Silva. Este \\u00e9 um caso bastante especial, visto que o ladr\\u00e3o deixou uma frase escrita na parede, aparentemente criptografada. Que desafio para Dimas! \\u00c9 que ele n\\u00e3o tem muito conhecimento nessa \\u00e1rea de criptografia. Por\\u00e9m, ele usou de suas excelentes observa\\u00e7\\u00f5es e conseguiu perceber que a frase foi escrita atrav\\u00e9s de alguma permuta\\u00e7\\u00e3o invers\\u00edvel do alfabeto.\\r\\n\\r\\nUma permuta\\u00e7\\u00e3o invers\\u00edvel do alfabeto \\u00e9 apenas uma troca entre suas letras, duas a duas. Por exemplo, todo \\u201ca\\u201d ser\\u00e1 trocado por \\u201cm\\u201d e, portanto, todo \\u201cm\\u201d ser\\u00e1 trocado por \\u201ca\\u201d. Dessa forma, veja que dado um texto original, se aplicarmos a permuta\\u00e7\\u00e3o, teremos uma frase criptografada; e se aplicarmos a mesma permuta\\u00e7\\u00e3o novamente, teremos o texto original recuperado!\\r\\n\\r\\nApesar de parecer f\\u00e1cil, a tradu\\u00e7\\u00e3o se tornou uma tarefa dif\\u00edcil, j\\u00e1 que a frase \\u00e9 bastante longa. \\u00c9 por isso que Dimas resolveu pedir sua ajuda, um ex\\u00edmio programador, para traduzir a frase criptografada, recuperando o texto original, e resolver o mist\\u00e9rio!\\n\\t\\t\\t\\t\",\n    \"id\": 2464,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m uma sequ\\u00eancia de 26 letras min\\u00fasculas distintas, representando a permuta\\u00e7\\u00e3o invers\\u00edvel usada na frase criptografada. A permuta\\u00e7\\u00e3o \\u00e9 a seguinte: a letra \\u201ca\\u201d \\u00e9 trocada pela primeira letra dessa sequ\\u00eancia; a letra \\u201cb\\u201d \\u00e9 trocada pela segunda letra dessa sequ\\u00eancia; a letra \\u201cc\\u201d pela terceira; e assim por diante, seguindo a sequ\\u00eancia padr\\u00e3o do alfabeto: abcdefghijklmnopqrstuvwxyz. A segunda linha da entrada consiste de uma frase criptografada, contendo apenas letras min\\u00fasculas (a\\u00a0frase criptografada n\\u00e3o excede 104 caracteres).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Decifra\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir o texto original, de acordo com a permuta\\u00e7\\u00e3o fornecida.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tO professor Miguel desafiou os alunos do col\\u00e9gio onde ele leciona com uma brincadeira que exige muita aten\\u00e7\\u00e3o! No p\\u00e1tio do col\\u00e9gio, os alunos formam um quadrado com N fileiras e N colunas, de modo que a primeira fileira esteja voltada para o norte. Cada um dos N2 alunos segura uma bandeira e tem um n\\u00famero colado na camiseta. Inicialmente, as bandeiras est\\u00e3o abaixadas e os alunos est\\u00e3o voltados para o norte. Todos os alunos t\\u00eam que seguir exatamente o mesmo comportamento:\\r\\n\\r\\n\\r\\n\\tAo receber a bolinha, levanta sua bandeira e realiza a seguinte a\\u00e7\\u00e3o quatro vezes, em sequ\\u00eancia:\\r\\n\\r\\n\\r\\n\\u2013 Vira-se 90 graus no sentido hor\\u00e1rio. Se o colega que ficou \\u00e0 sua frente tiver um n\\u00famero na camiseta maior ou igual ao seu, e estiver com a bandeira abaixada, passa a bolinha ao colega e aguarda que ele lhe devolva a bolinha;\\r\\n\\r\\n\\r\\n\\tDevolve a bolinha a quem lhe passou a bolinha inicialmente.\\r\\n\\r\\n\\r\\nNesta tarefa, voc\\u00ea deve escrever um programa que, dados os n\\u00fameros nas camisetas de cada aluno, e a posi\\u00e7\\u00e3o do aluno a quem o professor Miguel vai entregar a bolinha, calcule quantas bandeiras estar\\u00e3o levantadas ao final, quando esse aluno devolver a bolinha ao professor. Por exemplo, a parte direita da figura abaixo mostra que sete alunos v\\u00e3o levantar a bandeira se o professor entregar inicialmente a bolinha ao aluno na fileira 3, coluna 1, como indicado na parte esquerda da figura.\\r\\n\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2465,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um inteiro N (1 \\u2264 N \\u2264 100), o n\\u00famero de fileiras (que \\u00e9 igual ao de colunas). A segunda linha cont\\u00e9m dois n\\u00fameros, I e J (1 \\u2264 I, J\\u00a0\\u2264 N), indicando respectivamente, a fileira e a coluna do aluno a quem o professor Miguel entregar\\u00e1 a bolinha. As N linhas seguintes cont\\u00e9m N inteiros cada uma, indicando os n\\u00fameros que est\\u00e3o nas camisetas dos alunos (os n\\u00fameros nas camisetas est\\u00e3o entre 1 e 9, inclusive).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Passa Bolinha\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir apenas uma linha contendo um inteiro, o n\\u00famero de bandeiras que estar\\u00e3o levantadas ao final.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tPor OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tNadine e Celine inventaram um passatempo com bolas de sinuca, pretas e brancas, que s\\u00e3o colocadas uma por vez na mesa, de acordo com uma regra fixa. Agora elas est\\u00e3o tentando descobrir, com um computador, a cor da bola que vai ser colocada por \\u00faltimo! Voc\\u00ea pode ajuda-las?\\r\\n\\r\\nFunciona assim. No in\\u00edcio, s\\u00e3o colocadas N bolas formando a primeira fileira. Em seguida, um tri\\u00e2ngulo equil\\u00e1tero \\u00e9 formado, fileira a fileira, de acordo com a seguinte regra. Ao se colocar uma bola na nova fileira, ela ficar\\u00e1 encostada em duas bolas da fileira anterior e sua cor ser\\u00e1:\\r\\n\\r\\n\\r\\n\\tPreta, se estiver encostada em duas bolas de mesma cor;\\r\\n\\tBranca, se estiver encostada em duas bolas de cores diferentes.\\r\\n\\r\\n\\r\\nA figura abaixo ilustra a forma\\u00e7\\u00e3o de um tri\\u00e2ngulo para N = 5.\\r\\n\\r\\n\\r\\n\\r\\nNesta tarefa, voc\\u00ea deve escrever um programa que, dadas as cores das bolas da primeira fileira, descubra qual \\u00e9 a cor da bola que ser\\u00e1 colocada por \\u00faltimo. Na figura, foi uma bola branca!\\n\\t\\t\\t\\t\",\n    \"id\": 2466,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada \\u00e9 composta por duas linhas. A primeira linha cont\\u00e9m um inteiro N\\u00a0(2 \\u2264 N \\u2264 64), o n\\u00famero de bolas da primeira fileira. A segunda linha cont\\u00e9m N inteiros representando as cores das bolas da primeira fileira. Se a bola \\u00e9 preta, o n\\u00famero ser\\u00e1 \\u201c1\\u201d, se for branca, ser\\u00e1 \\u201c-1\\u201d.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Sinuca\",\n    \"output\": \"\\t\\t\\t\\t\\tSeu programa deve imprimir uma linha contendo a palavra \\u201cpreta\\u201d, se a \\u00faltima bola for preta; ou a palavra \\u201cbranca\\u201d, se for branca.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tByteland is a city well known for proposing varied challenges to its inhabitants. Recently, the mayor of Byteland, Jo\\u00e3ozinho decided to propose a challenge he likes to call the Board of Frequency.\\r\\n\\r\\nThe game is as follows. Initially, a tray with dimensions N \\u00d7 N is data containing only 0's. Thereafter, Q operations are proposed, which can be of 4 types:\\r\\n\\r\\n\\r\\n\\t1 X R: Assign the R value to all numbers in the X line;\\r\\n\\t2 X R: Assign the R value to all numbers in the X column;\\r\\n\\t3 X: Print the most common value in the X line;\\r\\n\\t4 X: Print the most common value in column X.\\r\\n\\r\\n\\r\\nJo\\u00e3ozinho is very good with computers, but also quite lazy. Knowing that you are one of the best programmers in the world, he decided to ask for your help to solve this problem.\\n\\t\\t\\t\\t\",\n    \"id\": 2467,\n    \"input\": \"\\t\\t\\t\\t\\tThe first input line consists of two integers N and Q (1 \\u2264 N, Q \\u2264 105) representing, respectively, the tray size and the number of operations. The next Q input lines will contain the Q operations. The entire first line of each will indicate the type of operation. If 1 or 2 is followed by two integer X (1 \\u2264 X \\u2264 N) and R (0 \\u2264 R \\u2264 50). If 3 or 4, will be followed by one further integer X.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Frequency\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each operation type 3 or 4, its program should produce a line containing the value of the corresponding response. If a row or column have two or more values that are repeated the same number of times, you must print as many of them. For example, if a line has the values [5,7,7,2,5,2,1,3], both the 2, 5 and 7 are repeated twice, then the answer is 7 because it is the largest of the array.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tByteland is a very bustling city, whose mayor, Jo\\u00e3ozinho, has recently fighting for his inclusion in the group of the five most important cities of Byteworld. For a city to be considered important in Byteworld, you must follow certain criteria. First of all, let's define Byteland, which is a city like any other, where corners are connected by two-way street. It is also known that there is one and only one path without repeating corners, between any pair of corners. In addition, each street can be considered important or not. If it is important, the street is painted white and if not, is painted blue.\\r\\n\\r\\nTo find out if a city is important or not in Byteworld is necessary to calculate a value E: the amount of corners pairs (A, B) such that there is at least a major street in the path between A and B. Note that (A, B ) and (B, A) are the same pair!\\r\\n\\r\\nThe Mayor of Byteland decided to ask your help to calculate the value E and learn, so if Byteland or not it is an important city for Byteworld.\\n\\t\\t\\t\\t\",\n    \"id\": 2468,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains an integer N (2 \\u2264 N \\u2264 105) indicating the number of corners in Byteland. The next N - 1 input lines each contain three integers A, B (1 \\u2264\\u00a0A,\\u00a0B\\u00a0\\u2264\\u00a0N)\\u00a0and C (0 \\u2264 C \\u2264 1), indicating that there is a street between the corners A and B of the painted color C. If C is 1, the road is white and important if 0, the street is blue and unimportant.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Map\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program should produce a single line containing a single integer, the value E defined above.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy OBI - Olimp\\u00edada Brasileira de Inform\\u00e1tica 2014  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tProfessor Archimedes needs your help to find out which is the most common notes between the notes that students took in his last race. The class has N students and your program must print the note that appears more often in N notes list. If more than more frequent note, you must print the biggest one! For example, if the class has N = 10 students and grades are [20, 25, 85, 40, 25, 90, 25, 40, 55, 40], the most common grades are 25 and 40, taking place three times each . Your program should then print 40.\\n\\t\\t\\t\\t\",\n    \"id\": 2469,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of two lines. The first line contains an integer N, the number of students in the class. The second line contains N integers, which is the list of students' grades.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Grades\",\n    \"output\": \"\\t\\t\\t\\t\\tYour program must print a single line containing just a number, the most frequent note of the list.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Leonardo Blanger, URI  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tChristmas is comming, and Santa needs to evaluate how well each kid behave along the year, in order to define how many gifts each one of them are going to receive this year. The avaliation works in very strange way:\\n\\nFirst, the Santa's assistants, capable of observing all the kids in the world, will assign to each kid an integer number N. Then, the number of gifts a kid receives is equal to N-D, where D is the greatest divisor of N, differente than N.\\n\\nPlaning to cheat in the distribution of the gifts to bennefit of some kids, a group of assistants decided to change the process. In the new version, the value N is subdivided int Q \\\"parts\\\", each being ni (1 < ni), in a way that N = \\u03a3ni, (1 \\u2264 i \\u2264 Q), and the number of gifts is calculated individually for each of these parts. The total number of gifts a kid receives in this new aproach is equal to the sum of the number of gifts for all the values ni.\\n\\nYour task is, given the avaliation N for each kid, help the assistants to perform this division in order to maximize the number of gifts each kid receives. Note that the assistants are free to define the number of parts Q, as well as the value of each of the individual parts, as long as they add up to N.\\n\\t\\t\\t\\t\",\n    \"id\": 2474,\n    \"input\": \"\\t\\t\\t\\t\\tInput consists of the value N for a number of kids. (1 < N \\u2264 1010)\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Mocking the System\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each kid, print the maximum number of gifts that this kid can receive, considering the choice for the value of Q and the subdivision are done in an optimal way.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tChristmas is coming and Santa Claus needs your help to make the gifts he will give.\\n\\nThis year Santa Claus separated all the presents in a row and assigned to each of them a cost for their preparation, however as we are living a crisis year Noel only managed to hire A helpers and will have to split the gifts between them for manufacturing.\\n\\nEach helper will be responsible for making some presents and they should be adjacent in the row. But as Noel wants to lower costs he has defined the amount that will be paid to each helper as being the sum of the costs of each gift that he will manufacture times the amount of gifts made.\\n\\nYou will be given the gift list, the total helpers, and the cost of each gift, and you should help Noel find out the least amount that will be paid to make all gifts.\\n\\nAssuming that Noel has 4 presents with the values {5, 1, 10, 2} and 2 helpers and the division is done as follows:\\nHelper 1 will manufacture gifts 1, 2 and 3 with the total of: (5 + 1 + 10) * 3 = 48\\nHelper 2 will manufacture gifts 4 with the total of: (2) * 1 = 2\\nIn this configuration the total to be paid will be 50, but a better configuration would be the helper 1 to keep gifts 1 and 2 and helper 2 with gifts 3 and 4, totaling 36.\\n\\t\\t\\t\\t\",\n    \"id\": 2475,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers P and A (1 \\u2264 P \\u2264 10\\u2074, 1 \\u2264 A \\u2264 500), indicating respectively the total of gifts and the total of available helpers.\\n\\nThen follows P lines, containing an integer Xi (1 \\u2264 Xi \\u2264 10\\u2079), indicating the cost of manufacturing the present i.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Manufacture of Presents\",\n    \"output\": \"\\t\\t\\t\\t\\tYou should print the lowest cost for the manufacture of all gifts, as described in the text.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Gabriel Duarte, UNIFESO  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tIncredibly, Noel has not yet begun to make the gifts that will be delivered at Christmas. For him not to be late, a plan was created to expedite delivery and manufacturing.\\n\\nNoel's plan is to choose two children (A and B) to be the first to receive gifts, but what he noticed is that on the way between child A's home and child B's home, he will eventually go through other children who also sent their letters with what they would like to win. So Noel has decided that he will deliver all the gifts of children who are between houses A and B in just one trip.\\n\\nThe delivery part is very simple for Noel, but he needs to optimize the purchase of raw materials to make all the presents, and this is where you will help.\\n\\nYou will be given the map with all the houses where deliveries will take place, which consists of N houses, with N - 1 links, having exactly one path between each of them, as Noel always travels by sleigh, all the links can be used in the two directions. After this Noel will ask several questions of type A B, and you must answer how many different gifts he will have to deliver on the way between house A and house B.\\n\\t\\t\\t\\t\",\n    \"id\": 2476,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N and M (2 \\u2264 N \\u2264 10\\u2075, 1 \\u2264 M \\u2264 10\\u2075), indicating the total number of houses and the total number of questions that Noel will ask.\\n\\nIn the next line will have the description of each gift that will be delivered in the houses. Each present will be a lowercase word containing a maximum of 20 characters. The present in position i, indicates what the child in house i wants to win.\\n\\nThen follows N - 1 lines, containing two integers A and B (1 \\u2264 A, B \\u2264 N, A != B), indicating that there is a connection between houses A and B.\\n\\nM lines follow with two integers A and B, representing Noel's question.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Noel's Deliveries\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each Noel question, you must print the different amount of gifts that will be delivered.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Bucior, URI Online Judge  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tChristmas is coming and many people have not yet festooned their homes, chancellor Jack Redd is distributing red lights to host cities. As are many lights to distribute, Jack handed you a map, which contains information about the city, the central unit, its decoration points and the streets. Look at the image.\\n\\n\\t\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tIn the picture, the central unit receives the lights and sends them to the decoration points 1, 2, 3 and 4, respectively. Each decorating point needs a certain amount of lights that is measured by the size of the grouping of points (. ) times the minimum distance of this grouping to the central unit. It is possible to walk by a decoration point if it is bigger than 1 and if by chance the wires can not arrive at a decoration point, the city will not be part of the Christmas show anymore.\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tA decorative point is formed by a group of ( . ). It is necessary to arrive with the threads in all the decorative points, so that the party is big and beautiful. A decorative dot can pass wires to its adjacent ones.\\n\\t\\t\\t\\t\\tThe central unit consists of the largest grouping of ( . ) on the map. JJack revealed it just for you, for security reasons. Since the wires are already part of the central unit, pay attention to which parts even need wires, precisely where it has ( +) or its decorative points.The wires can be routed to the four directions (North, South, East and West). Can you distribute the lights to the party?\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2477,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry consists of multiple instances. The first line of each instance contains two integers N e  M (1 \\u2264 N, M \\u2264 103), which correspond to the number of rows and columns on the map delivered by Jack. The N  lines below contain M  characters, defined as ( . ), ( + ) ou ( # ), representing the central unit and its decoration points, a valid point to be explored and a barrier which prevents the passage of the wires respectively.The entry ends with end-of-file (EOF).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Distribution Network\",\n    \"output\": \"\\t\\t\\t\\t\\t For each instance, your program should print the message \\\"Instance #H:\\\" where  H is the instance number, sequential and increasing (from 01 to 99). Then print out the size of the central unit, the minimum path to arrive at all the decoration points and how many lights the city needs. If the wires can not reach all decoration points, your program should print the \\\"Network Error\\\" message. \\n\\t\\t\\t\\t\\t Your program should print a blank line between two consecutive instances.\\n\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jessica Dagostini, URI Online Judge  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the Natal\\u00edcia family, the realization of the Secret Santa on the Christmas eve is traditional. Every year the whole family gets together to exchange gifts. It's a time of great fun and relaxation.\\n\\nThis year the youngest member of the family, Jocelina, decided to make the moment even more fun: she proposed that all participants put on a list 3 suggestions for gifts. From this list, she thought in a program that inserted a name N and a gift P, the program returns if the person has hit or not the present for his secret friend.\\n\\nBut Jocelina does not know much of programming, and ended up needing help to make this program. You, being taken by the christmas spirit, accepted the challenge!\\n\\t\\t\\t\\t\",\n    \"id\": 2478,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists in a several test cases and ends with EOF. The first line contain a number X (3 \\u2264 X \\u2264 20) that represents the number of participants in the Secret Santa. The following X lines contain a name N and 3 options of desired gifts P. After this, the next lines will contain a name N and a gift P that represents the consults made.\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Hit the Gift\",\n    \"output\": \"\\t\\t\\t\\t\\tYour programm should return if the person hit or not the present, showing \\\"Uhul! Seu amigo secreto vai adorar o/\\\" (Yay! Your secret friend will love it!) if matched, and if not, \\\"Tente Novamente!\\\" (Try Again!);\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Cristian J. Ambrosi, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tSanta Claus is in finishing to organize the delivery of gifts to all the children of the world because Christmas is coming again. Looking at his new lists of children who will win gifts this year he realized that the trainee elf (who had been responsable for making the lists) did not put the names in alphabetical order.\\n\\n\\t\\t\\t\\tAs Santa is a very organized man, he wants that every list of children have, at its end, the total number of children who were well behaved this year and the total of those who were not. Then he can compare the number of children that was behaved in this year and in previous ones.\\n\\n\\t\\t\\t\\tTo help the good old man, your function is to create a program that reads all the names in the list and prints the same names in alphabetical order. At the bottom of the list, you should print the total number of children who were good behaved and the ones who were not.\\n\\t\\t\\t\",\n    \"id\": 2479,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several names. The first value N (0 \\u2264 N \\u2264 100), indicates how many names there are on the list. The next N lines have one special character that matches with the behavior of the child (+ indicates that the child was well behaved, - indicates that the child misbehaved). After the special character, follows the name of the children with 20 characteres at maximum.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Sorting Santa's List of Children\",\n    \"output\": \"\\t\\t\\t\\tFor each list of children, you should print the names in alphabetical order. After print the names, you must show the total number of children that were well behaved (\\\"Se comportaram: \\\") and misbehaved during the year (\\\"Nao se comportaram: \\\").\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Lucas Bucior, URI Online Judge  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tThis year Santa Claus gave a very unusual order to Chancellor Jack Redd, who arranges the lamps to be sent to all venues. Noel wants them to be organized in a specific way and it seems that it is not a very simple task for Jack, who really needs your help.\\n\\n\\t\\t\\t\\t\\tThe central lamp distribution unit is located in the south of Brazil, more precisely in Erechim. Jack wants to organize the stock of lights to distribute to the host cities. The stock of lights is large. There are many light boxes with different types: R-Red, W-White, G-Green, S-Silver.\\n\\n\\t\\t\\t\\t\\tJack wants you to arrange the columns of boxes according to the colors. First the red ones, then the white ones, followed by the green ones and finally the silver ones. Also, Jack wants the larger boxes to be underneath. The size of the box is represented by the number. For example 8R means a red box of size 8. You can see in the figure below the first highlighted column, already ordered in the form that Jack wants. This image represents the first test case of this problem.\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tWhen we move a box, the corresponding line of this light box changes with it (the image shows that all lines are linked by a wire). But there is a small detail! When the first column is ordered according to the criterion established by Jack, it is then removed and its wire is cut. The process starts again with the next column (the one with 6R at the top) is repeated until there are no more columns to sort.\\n\\n\\t\\t\\t\\t\\tCan you help Jack in this task by indicating how many cash movements are needed to make this organization desired by Noel?\\n\\t\\t\\t\\t\",\n    \"id\": 2480,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of each instance contains two integers N (1 \\u2264 N \\u2264 20) e M (1 \\u2264 M \\u2264 105), which correspond to the number of rows and columns in stock. The N  lines below contain M  light boxes, defined as [Q]T. Q  (1 \\u2264 Q \\u2264 109) matches the number of lights and T  light type R, W, G or S  respectively. The entry ends with end-of-file (EOF).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Red Lights\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each instance, print the message \\\"Instance H:\\\", where H is the instance number, sequential and increasing (from 01 to 99). Then print the result of the operations of moving the shelves and the total number of red lights found in the stock. Print a blank line between two consecutive instances.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Thalyson Nepomuceno, IFCE  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tBino is a truck driver, and was commissioned to take the Christmas presents to the cities N. The cities are arranged in a row, and Bino wants to deliver the gifts as soon as possible. Bino begins his journey at position 0 and intends to visit all the N cities. Bino travels with his friend Pedro, an elf sent by Santa Claus to protect him.\\n\\nEach city has a position Xi and a food value Ci.\\n\\nWhen visiting a city, Bino can choose to buy food for Pedro. When Bino chooses to buy food for Pedro in a city i, he pays Ci gold coins for food, then Pedro begins to produce Xi coins for each unit of distance traveled. As a thank you, Bino always pays the food to Pedro in the city N.\\n\\nNote that if Pedro is already producing K gold coins, and Bino buys food in another city, Peter will start producing Xi gold coins, not K + Xi.\\n\\nBino wants to know how many gold coins can get while traveling from city 1 to city N.\\n\\nIt is guaranteed that the cities will be provided in the entry in ascending order of the position. It is also guaranteed that there are no two cities in the same position.\\n\\t\\t\\t\\t\",\n    \"id\": 2481,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input contains a integer Q (1 \\u2264 Q \\u2264 100) representing a number of test cases. The first line of each test case contains a integer N (1 \\u2264 N \\u2264 105), representing the number of cities. Each of the next N lines of the test case contains 2 integers Xi (1 \\u2264 Xi \\u2264 107), and Ci (1 \\u2264 Ci \\u2264 1010), representing respectively the position and value of the food in city i (1 \\u2264 i \\u2264 N).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"It's a Trap Bino\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, if Bino can earn coins on the trip, print the maximum amount of coins Bino can earn, otherwise print the minimum amount he can lose. Follow the spelling of the examples.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tAs usual, this year Noel received numerous gifts requests. However, due to some unforeseen circumstances, he will not be able to deliver all those present in person this year. Then he decided to use the old and good traditional mail, for some requests that can be delivered by letter.\\n\\n\\t\\t\\t\\tFor this task, he asked elf Evergreen Xadada to help him print labels on all the envelopes that will be destined for some of these children, whose request can be delivered by letter. Each of these labels should only contain the child's name and the \\\"Merry Christmas\\\" greeting in the child's language. To assist in this task, Noel provided a table with several languages and the name and country of each of the selected children, according to the example below. You should help Evergreen by making a program that prints these labels.\\n\\t\\t\\t\",\n    \"id\": 2482,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of a single test case. The first line of input contains an integer N (1 < N < 100) that indicates the number of translations of the word \\\"Merry Christmas\\\" in the input. The next N * 2 lines respectively contain the name of a language followed by the translation of \\\"Merry Christmas\\\" in this language. Next, the input contains an integer  M  (1 < M < 100) which indicates the number of children who will receive the cards. The next M * 2 lines will contain, respectively, the child's name and the native language of this child.\\n\\n\\t\\t\\t\\tNote: It is guaranteed that no translation appears repeated or duplicated and the countries of all children are present in the list of countries.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Noel's Labels\",\n    \"output\": \"\\t\\t\\t\\tYour program should print all labels according to the input, as in the example below. Always print a blank line after printing each of the labels, even after the last one.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jessica Dagostini, URI Online Judge  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tYou get so happy at Christmas that you want to scream at everyone: \\\"Merry Christmas!!\\\". To put all this happiness out, you've wrote a program that, given an  I  index of happiness, your Christmas scream is more lively.\\n\\t\\t\\t\\t\",\n    \"id\": 2483,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of an integer I (1 < I \\u2264 104) that represents that happiness index.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Merry Christmaaas!\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output consists of the phrase \\\"Feliz natal!\\\" (\\\"Merry Christmas\\\" in Portuguese), and the last a of the sentence is repeated I times. A line break is necessary after printing the sentence.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\t\\tIn the 22st century, a devastating disease reached more than half the world population. The government is desperate for a cure because there's a high risk that the disease will decimate the entire population. The hospitals are crowded and the grief in people's eyes is remarkable.\\n\\nAt this time, few people have free access to the internet, but you are one of them. As you scour the web, you've found some scattered texts about an amulet of a magic word written in the shape of a triangle that heals lethal diseases. Skeptic but hopeful, you remembered that Mr. Severino's library had a somewhat unusual book with the following cover:\\n\\n\\n\\nThen you went to the library immediately. Once there, you read only the book preface and confirmed everything you've read about the amulets in the web, then you gave yourself a mission: spread magic words in the web in the shape of a triangle in order to warn people that there may be a cure for the disease. Hence, if amulets with magic words end up being made in large scale and these are given to people, the disease may be annihilated and the population saved.\\n\\nIn order to complete this mission, you must start with the simplest move: write a program that takes a word as input and outputs it as a triangle, just like the book's cover.\\n\\t\\t\\t\\t\",\n    \"id\": 2484,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has several test cases. Each test case consists of a word from 2 up to 100 characters (no blank spaces). Read input until EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Abracadabra\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the word in the shape of a triange. There's a blank space between each letter, but no blank space after the last letter of each line. Print a newline after every test case, including the last one.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tRecently in Nlogonia, several guava trees are being infested by a larva species called Marangonis Ovidius, known for being extremely harmful to plantations. However, Dr. Icaronieris, a prodigy of current medicine and a lover of good guavas, has invented a medicine that completely extinguishes this infestation.\\n\\nUnhappy with the effect of the medicine on only one guava tree, he went further: he created a mechanism that, day after day, spreads the effect to every adjacent tree to the trees whose effect is active. For example, the medicine is applied to a certain tree. The next day, it spreads itself to the trees that are adjacent to it, and the day after, to the trees that are adjacent to the adjacent trees of the initial tree, and so on, until the infestation is completely gone.\\n\\nThe doctor, however, doesn't have time to test the efficiency and the feasibility of his creation on paper. He needs a program that, given the infected guava trees and the coordinates of the tree where the medicine will be applied, returns the number of days until every guava tree is cured. As a payment, the doctor promised you 100 guava boxes every month (with worms or with no worms, you can choose) every month, plus a meal voucher in IEF. Gonna miss that one?\\n\\t\\t\\t\\t\",\n    \"id\": 2485,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input consists of an integer indicating the number of following test cases. Each test case contains\\u00a0A (2 \\u2264 A \\u2264 100) and\\u00a0B (2 \\u2264 B \\u2264 100) representing the number of rows and the number of columns of the matrix, respectively. Then, a binary matrix A x B will be given, with 0 indicading that there's no guava tree and 1 indicating that there's an infected guava tree. Subsequently, the initial coordinates\\u00a0X\\u00a0 (1 \\u2264 X \\u2264 A) and\\u00a0Y (1 \\u2264 Y \\u2264 B)\\u200b\\u200b\\u200b will be given, representing where the medicine will be applied. There's no guava tree without adjacent guava tree, that is, the medicine can always reach every guava tree.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Bicho da Goiaba\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the number of days for the infestation to be completely eliminated.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tLately, several people are going to Dr. Cl\\u00e1udia Caf\\u00e9 com Leite to know if they are consuming the recommended daily amount of vitamin C. This exhausted her so she asked you to write a program for her that, given the daily intake of foods rich in vitamin C by a person, returns how much this person has to consume more or less to achieve the recommended amount.\\n\\nIn order to do such, you can use the following table:\\n\\n\\n\\t.cmm {\\n\\t\\tborder:1px solid #C0C0C0;\\n\\t\\tborder-collapse:collapse;\\n\\t\\tpadding:5px;\\n\\t\\twidth: 100%;\\n\\t}\\n\\t.cmm th {\\n\\t\\tborder:1px solid #C0C0C0;\\n\\t\\tpadding:5px;\\n\\t\\tbackground:#F0F0F0;\\n\\t}\\n\\t.cmm td {\\n\\t\\tborder:1px solid #C0C0C0;\\n\\t\\ttext-align:center;\\n\\t\\tpadding:5px;\\n\\t}\\n\\t.desc-example {\\n\\t\\tfont-family: \\\"Courier New\\\", Courier, \\\"Nimbus Mono L\\\", monospace;\\n\\t}\\n\\n\\n\\t\\n\\t\\n\\t\\tFoods rich in Vitamin C\\n\\t\\tAmount of Vitamin C\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\tsuco de laranja\\n\\t\\t120 mg\\n\\t\\n\\t\\n\\t\\tmorango fresco\\n\\t\\t85 mg\\n\\t\\n\\t\\n\\t\\tmamao\\n\\t\\t85 mg\\n\\t\\n\\t\\n\\t\\tgoiaba vermelha\\n\\t\\t70 mg\\n\\t\\n\\t\\n\\t\\tmanga\\n\\t\\t56 mg\\n\\t\\n\\t\\n\\t\\tlaranja\\n\\t\\t50 mg\\n\\t\\n\\t\\n\\t\\tbrocolis\\n\\t\\t34 mg\\n\\t\\n\\t\\n\\n\\nConsider the recommended daily intake of vitamin C is between 110 mg and 130 mg, inclusive.\\n\\t\\t\\t\\t\",\n    \"id\": 2486,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case consists of an integer T (1 \\u2264 T \\u2264 7) indicating that the person daily intakes T foods among the 7 foods from the table. The next T lines with an integer N and a food (lowercase and no blank spaces) indicates that the person intakes an amount N of that food. Read input until T = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"C Mais ou Menos?\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case (T), if the intake exceeds the recommended limit, print \\\"Menos X mg\\\", in which X represents how much less the person must consume to reach the recommended limit; if the intake doesn't reach the recommended amount, print \\\"Mais X mg\\\", in which X represents how much more the person must consume to reach the recommended amount; if the intake is between the recommended amount range, print \\\"X mg\\\", in which X represents the daily amount of vitamin C intaken by the person.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tThe Sect of the Power of 2 Programmers is a sect composed of programmers who program in an amount of time that is always a power of 2. Recently, the leader of this sect, the much-feared Vithan Fender, realized that changes would be necessary so he can achieve his goal, and thus decided that the members not only will have to program in times of powers of 2, but also do every single kind of activity.\\n\\n\\t\\t\\t\\t\\tThe activities will always be done in order of importance, with the first activity (programming) the most important and the last one the least important. Therefore, the members will have to organize the times for these activities according to that order, and if there's time to spare, the member must dedicate it to programming. Besides, the member must always dedicate at least 1 minute to an activity, that is, he must do every activity.\\n\\n\\t\\t\\t\\t\\tSince you've joined this sect recently, the leader wants you to prove the least of your worth by creating a program that, given the amount of available time of a member and the number of activities to be done, returns the time that should be dedicated to each one of these activities. Meanwhile, Vithan Fender will be dancing to the sound of Fink Ployd, its favorite ax\\u00e9 music group.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2487,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each line has an integer T (1 \\u2264 T \\u2264 1018) and an integer A (1 \\u2264 A \\u2264 103), indicating the available time and the number of acitivities, respectively. The number of activities will never be greater than the available time. Read input until EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Do Lado Escuro do C\\u00f3digo\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the dedicated time to each activity according to the specifications. The times must be separated between blank spaces, but no blank space should be printed after the last time.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tFurac\\u00e3o is a famous bookmaker, best known for winning every single horse racing bet in the past 10 years. Some say it's fraud, some say he has foolproof strategies to always win. Anyway, he's undeniable a great bookmaker. However, he's tired of winning so much, and thus, he has challenged the one who can make him lose. Considering this, CARRETA Furac\\u00e3o (Clube de Apostas para o Recome\\u00e7o e para a Realiza\\u00e7\\u00e3o do Exterm\\u00ednio do Tal Apostador Furac\\u00e3o) was created with the sole purpose of making Furac\\u00e3o lose.\\n\\n\\t\\t\\t\\t\\tThe first \\\"horse racing\\\" promoted by CARRETA Furac\\u00e3o will occur in a very different way from traditional racing: There'll be only one horse and this one, instead of racing, will walk the whole course in beat gait, after all, this \\\"race\\\" has the purpose of defeating the Bookmaker. The \\\"race\\\" will occur as follows: the horse starts its gait at a given point, and every time he passes by a course recognition point, the distance between the current point and the previous one will be calculated, in other words, at the end of the gait, there will be several isolated distances, each of them related to two points.\\n\\n\\t\\t\\t\\t\\tThe challenge proposed to the Bookmaker is that he answers several questions such as \\\"What is the greatest distance the horse walks from point (x1, y1) to point (x2, y2)?\\\" in no more than 1 second! CARRETA Furac\\u00e3o is sure he's going to lose this time, but Furac\\u00e3o is a very smart man, so he perceived the possibility of hiring a programmer to do this work for him, that is, to create a program he can use in the event day to win the bet.\\n\\n\\t\\t\\t\\t\\tUpon knowing that you are a good programmer and that you take part in illegal activities if you get the 'good green', Furac\\u00e3o has hired you without a second thought. Therefore, your task is to write a program that outputs the greatest distance the horse walks between two given points. Keep in mind that there's only one way between two points.\\n\\t\\t\\t\\t\",\n    \"id\": 2488,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains the number of points N (2 \\u2264 N \\u2264 104) and the number of questions P (2 \\u2264 P \\u2264 104). The next N  lines contains a point (x, y), (0 \\u2264 x, y \\u2264 104), representing the point in which the horse was recognized, that is, his current point. No two equal recognition points will be given in the input. Then, the next P  lines contains two points: (x1, y1) and (x2, y2), indicating the question of the greatest distance walked between them.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"\\u00c9 Na Batida do Cavalo!\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each question in each test case, print the greatest distance the horse walked between point (x1, y1) and point (x2, y2), with accuracy of two decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tOlivera Queen is a very skilled archer. She can hit any target at long distances without much difficulty. This time, she wants to train with her two hunting buddies in a somewhat unusual way: the target will be a stuffed rabbit. The archer will choose his own posture and his distance to the tree where the rabbit will be positioned, and from this information, the rabbit must be positioned in a way so that the archer can straightly hit it, without making any further movement. The image below shows the situation in a generic way:\\n\\n\\n\\nThe distance between the archer and the tree is represented by D, the height of the archer's shoulders to his feet is represented by A and the height at which the stuffed rabbit must be positioned so that the archer can hit its head is H. The angle of the tree and the angle of the archer with respect to the ground are always 90\\u00ba, and the angle of the archer's arm with respect to his own body will be chosen by himself.\\n\\nSo, help Olivera Queen and her two promising hunting buddies train the way they planned: write a program that returns the appropriate value H so the stuffed rabbit can be hit in the head, according to the given information. Consider the arrow always goes straightly, regardless of its distance to the target.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2489,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each line constains a real number A (1 \\u2264 A \\u2264 2) indicating the height of the archer, a real number D (5 \\u2264 D \\u2264 40) indicating the distance between the archer and the tree and a real number R (50 \\u2264 R \\u2264 150) indicating the angle, in degrees, between the archer's arm and his body. It's guaranteed that the input is always valid and doesn't generate unexpected outputs. Read input until EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Flecha no Coelho\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the value of H with accuracy of 4 decimal places.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\t\\tGaroto Ixpertinho is back. Just like before, he still wants everybody to know the meaning and the origin of the word Malakoi, but this time, he's really serious. Garoto Ixpertinho wants to spread this world all over the city, and always in the usual way, that is, dancing his typical dance. However, he won't have enough breath to walk every block while screaming and dancing at the same time\\n\\n\\t\\t\\t\\t\\tAs a result, some blocks will end up not being visited and he won't be able to accomplish his life mission. Keeping this in mind, Garoto Ixpertinho contacted some of his friends and fans all around the city, so he can rest, feed and resume his journey, when he loses his breath on the way between a block and another.\\n\\n\\t\\t\\t\\t\\tThus, Garoto Ixpertinho wants to spread his word to every single person in the city, visiting every single block in the shortest possible time. He doesn't mind visiting the same block again, because from the second visit, he'll no longer need to spread his word to that block, and this time won't be added to the time of the main journey.\\n\\n\\t\\t\\t\\t\\tBesides, every time he visits a block (having lost his breath on the way or not), he rests and gets all the breath again, but this rest time must be ignored. On the other hand, when he loses his breath on the way between a block and another, he takes exactly 2 minutes to feed, and this time must be considered.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2490,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case starts with two integers Q (2 \\u2264 Q \\u2264 1000) and C (Q-1 \\u2264 C \\u2264 1000) and a real number T (1 \\u2264 T \\u2264 30), indicating, respectively, the number of blocks, the number of paths that connect them and the maximum time, in minutes, that Garoto Ixpertinho can keep screaming and dancing at the same time. The following C inputs of two integers X and Y and a real number Z (1 \\u2264 Z \\u2264 60) indicates that he takes Z minutes to go from the block X to the block Y spreading the word Malakoi. Consider that there's always at least one way to reach a block. Read input until Q = C = T = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Garoto Ixpertinho\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print the minimum time it takes for Garoto Ixpertinho to visit every block (with accuracy of two decimal places), and in the same line, how many times he had to feed, that is, how many times he lost his breath on the way between a block and another.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\t\\tHabay and Robfilho, veteran programming contest competitors, this year participated in the first phase of the Regionals as reserves. However, at the event site, there weren't enough computers for them to test their codes. Unhappy with the situation, they solved every problem on paper in 30 minutes, personally handed them to the judges and decided to go \\\"get some grub\\\" in the nearest restaurant.\\n\\n\\t\\t\\t\\t\\tThe restaurant chosen has some peculiarities: costumers have access to the statistics and characteristics of each dish, such as popularity and nutrients. Moreover, there's a huge variety of dishes, for the happiness of Habay. As a great vegan, Habay decided that he would choose the dishes with the highest amount of protein, but ended up facing a dilemma: if the dishes chosen are less popular, his rate will go down in the social network RateMe. However, if he chooses the most popular dishes but doesn't consume the maximum amount of protein, he'll have his conscience guilty because he won't be fully contributing to his health.\\n\\n\\t\\t\\t\\t\\tAlthough Habay loves popularity, he prioritizes his health and thus he will choose the dishes with the highest amount of protein, but with one condition: the average popularity of the chosen dishes must be greater than the average popularity of all the dishes together, otherwise Habay won't eat at that restaurant. Also, since Habay likes variety, he won't choose the same dish more than once, and logically, he won't be able to spend more than the available money.\\n\\n\\t\\t\\t\\t\\tSo, help Habay decide whether he should eat at this restaurant or not. Regarding Robfilho, he will choose the heaviest dishes because he's \\\"mighty hungry\\\" and so he won't need help.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2491,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has several test cases. Each test case contains two integers Q (2 \\u2264 Q \\u2264 100) and D (1 \\u2264 D \\u2264 100), indicating the number of dishes and Habay's available money, respectively. The next Q lines contains the amount of protein (1 \\u2264 P \\u2264 200), the cost (1 \\u2264 C \\u2264 100) and the popularity (1 \\u2264 R \\u2264 10) of the respective dish. No dishes will have the same amount of protein. Read input until Q = D = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Habay e Robfilho \\u2013 Os Fuj\\u00f5es\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, if Habay decides to eat at the restaurant, print the average popularity of the chosen dishes (with accuracy of two decimal places); otherwise, print the average popularity of all the dishes together (same accuracy) and then print a blank space and the exclamation \\\"NO!\\\", indicating that Habay will leave the restaurant berserk.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\t\\tFriederich Estrotoratch, a famous mathematician and philosopher, recently bought several islands in the Pacific. Since he loves inverse functions with devout passion, he wants to connect these islands so that they resemble an inverse function. Estrotoratch hates to waste time on work he deems unnecessary, and therefore passed to Johann Fritz, his subordinate, the task of determining how exactly the connections bewteen the acquired islands would be. But Fritz isn't very mentally balanced (as well as his superior) and he's doing this work in one of his crisis.\\n\\n\\t\\t\\t\\t\\tKnowing his own not good at all situation, Fritz decided he would give you the connections for you to tell him whether they are correct. He wants you to say if the connections even form a function, and if they do, whether the function is invertible. So help the poor guy, because otherwise the consequences for him (that is, the punishments) are unpredictable.\\n\\n\\t\\t\\t\\t\",\n    \"id\": 2492,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case contains an integer T (2 \\u2264 T \\u2264 100), indicating the number of connections, always like \\\"X -> Y\\\", indicating that there's a way connecting the island X to the island Y. This connection isn't mutual, that is, it doesn't mean there's a way connecting Y to X. The name of the islands will have up to 30 characters with no blank spaces. Read input until T = 0.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Ilhas Isoladas\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, print \\\"Not a function.\\\" if it's not a function, \\\"Invertible.\\\" if the function is invertible and \\\"Not invertible.\\\" if the function is not invertible.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Jo\\u00e3o Marcos Salvanini Bellini de Moraes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tSamu Elmito loves creating peculiar games to challenge his friends. This time, he made a game called \\\"Jogo do Operador\\\" (Operation Game), in which he creates basic expresssions and each player must choose an expression and fill the gap with the correct operation to validate it. The players may choose 1 out of 3 operations: addition, subtraction and multiplication. However, if the player thinks there's no operation among the 3 operations that validates the expression, he can anwser Impossible.\\n\\n\\t\\t\\t\\t\\tYour task is simple: given the expressions and the players' answer, determine which players won't proceed to the next phase of the game.\\n\\t\\t\\t\\t\",\n    \"id\": 2493,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of an integer T (2 \\u2264 T \\u2264 50) that indicates the number of expression and the number of players. Each test case consists of T expressions like \\\"X Y=Z\\\", indicating that X operation Y (0 \\u2264 X, Y \\u2264 103) is equal to Z (-103 \\u2264 Z \\u2264 106), followed by T players and his respective answers like \\\"N E R\\\", with N being the player's name (up to 50 characters and no blank spaces), E being the index of the chosen expression (1 \\u2264 E \\u2264 T) and R the answer (+, -, * or I, indicating Impossible). Read input until EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Jogo do Operador\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each test case, if every player can proceed, print \\\"You Shall All Pass!\\\"; if no player can proceed, print \\\"None Shall Pass!\\\"; otherwise, print, in lexicographical order and between blank spaces, the name of the players who gave the wrong answer and won't proceed to the next phase.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Alex Paix\\u00e3o, UNIME  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tProfessor Alex is passionate about his programming marathons, if he could make it every end of the month, but he receives few resources to give the students. One of these events will win a lot of blue and black pens, but he does not know how much he should receive. And it wants to distribute in equal packages for each team.\\n\\n\\t\\t\\t\\t\\tHe asked for his help, based on the amount of pens he receives, blue and black, he wants to pack all these pens so that each package contains only pens with the same color ink and will give it to all participating teams.\\n\\t\\t\\t\\t\",\n    \"id\": 2494,\n    \"input\": \"\\t\\t\\t\\t\\tYou will receive 3 values, in which the first will be the amount of blue pens, the second the amount of black pens and the third the amount of teams. The three values will be (1 <= n<= 1000);\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Pens\",\n    \"output\": \"\\t\\t\\t\\t\\tYou will get a \\\"sim\\\" answer if you get packages for all teams and \\\"nao\\\" if you do not leave. Do not forget the end of line after the product, otherwise your program will display the message:\\u00a0\\u201cPresentation Error\\u201d.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Juliany Rodrigues Raiol, UEA  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tAt the end of last month, I bought a set with N pens. It cost about 1/3 of my allowance, and on account of that, I decided to tell all my friends that I would not lend it to anyone. But last week, my cousin Jean borrowed it, saying she was going to give it back to me the next morning. Since she is family and would return soon, I decided to make an exception for her and end her all of them. Yes, I regretted it. Jean only gave it back to me this morning! I got it back, I checked if everything was in order. No, I was not! I noticed there were N-1 pens in my set. Since I was in a hurry to go to college, I ask you, Billie, to help me find which pen is missing. Consider that all pens are identified by integers in the interval [1, N]. I hope the pen that is missing is only lost! I can not stand the idea of Jean stealing from me!\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2495,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input is composed of several test cases. The first line has an integer N, where 2 \\u2264 N \\u2264 105, indicating the number of pens in my set. The next lines are composed of integers N-1, indicating which pens were returned. For each terminating Ni of this sequence, consider that they are in the range of 1 \\u2264 Ni \\u2264 N.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Where is my Pen?\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tThe output is composed of a single line indicating which pen was not in the set.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Beatriz Souza, IFPB  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tEveryone knows that the decisions that are made make all the difference in the result obtained. A well-known example is the Monty Hall paradox, which consists of three stages, and in the third, the competitor gives the final card and, depending on his choice, may or may not win a car.\\r\\n\\r\\n\\t\\t\\t\\t\\tYou want to get an \\\"Accepted\\\" and for this you will have to write a program that checks if a single position change between two letters will result in an ordered sequence. Consider the following strings:\\r\\n\\r\\n\\t\\t\\t\\t\\tABCDFGHIEJ\\r\\n\\r\\n\\t\\t\\t\\t\\tABCDEFGHJIKLMNO\\r\\n\\r\\n\\t\\t\\t\\t\\tFor the first sequence to be ordered, more than one change is required between the position of the letters. In the second, on the other hand, it is enough that I and J change positions. Its mission is to verify if for each sequence received there is a single exchange between two letters that makes it ordered.\\r\\n\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2496,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input is composed of an integer N, which represents the number of test cases (1 <= N <= 100). Each test case consists of an integer M, which represents the number of letters of a sequence (2 <= M <= 26) and an alphabetical sequence composed of M letters. Letters are always uppercase and are not in an index greater than M. If M is 4, the only possible letters for the sequence are: A, B, C, or D in any order.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"The Only Chance\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each reported sequence, the program must return a single line that will display \\\"There are the chance.\\\" If the sequence obeys the ordering rule mentioned, or \\\"There are not the chance.\\\" Otherwise.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Beatriz Souza, IFPB  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tWe are in the year 2030. The benefits of quantum mechanics are already well known and computation has been and is being heavily modified by recent discoveries. That way, almost all computers and smartphones are very different from what they were in 2016 (14 years ago). Because of the importance and immeasurable applicability of this branch of physics in everyday life, most countries have determined that the principles of this branch should be taught in the final year of high school.\\r\\n\\r\\nMaria is finishing high school and is part of the first group that contains quantum mechanics in the curriculum. The first classes of this content have already been taught and Maria is studying for the exam, which will be next week. The content charged in the evaluation will be: The Principle of Uncertainty and the Superposition of Electrons.\\r\\n\\r\\nYou, as a good programmer and friend of Maria, decided to help her by writing an algorithm that is able to count how many complete cycles each experiment will contain with electrons. It is known, by the uncertainty principle, that one characteristic does not interfere with another, for example, the color presented by a given electron does not imply its hardness or malleability. You will consider that experiments always begin with color determination and then with determination of hardness, this process can be repeated depending on how many steps Mary wants the experiment to have.\\r\\n\\r\\nAssuming she chose 3 steps, the experiment would be performed as follows:\\r\\n\\r\\nDetermination of color \\u2192 Determination of hardness \\u2192 Color determination\\r\\n\\r\\nIts program must inform how many complete cycles have been made, knowing that, for Maria, a complete cycle is composed by the determination of the color and the hardness of the electron, respectively. In the test case presented above, it would be 1 complete cycle. But if she chose 4 steps, they would be 2 complete cycles.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2497,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input is composed of several test cases. Each test case is composed of a single integer N, which represents the number of steps Maria wants the complete experiment to have (-1 <= N <= 1000). It is important to remember that a step can be the determination of color or hardness, while a cycle is composed by determining the two characteristics. The program closes with N = -1.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Counting Cycles\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each N informed by Maria, a single line containing the result should be returned in the following format: Experiment X: Y full cycle(s). Where X represents the test case number and Y represents the number of complete cycles.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tRangel is a computer engineering student who likes to study for programming competitions and read books in his free time (when he\\u2019s not busy with all the college work). Besides liking to read Cormen\\u2019s and Halim\\u2019s books, he\\u2019s a great fiction fan. Knowing that, his friend V\\u00e2nia decided to lend him some of the books from her collection so he can read them during vacation.\\r\\n\\r\\nEach i-th book has a weight\\u00a0wi\\u00a0and\\u00a0vi\\u00a0which represents the probable degree of interest that Rangel has on the book. If it was up to her, she would lend all her books, but that is impossible given that her bag cannot fit all the books (which are many).\\r\\n\\r\\nGiven the number of books on her shelf, the maximum load supported by her bag and the weight and degree of interest in each one of the books, V\\u00e2nia is asking for your help to write a program that helps her to choose the books in a way that maximizes the Rangel\\u2019s probable interest for the books. She could do this herself, but she\\u2019s very busy with her finals.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2498,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe entry contains several test cases. Each test starts with two values\\u00a0N\\u00a0(1 \\u2264\\u00a0N\\u00a0\\u2264 1000) and C (1 \\u2264\\u00a0C\\u00a0\\u2264 100) which represent the number of books available on V\\u00e2nia\\u2019s shelf and the capacity of her bag, respectively. Each one of the next\\u00a0N\\u00a0lines will have two integers\\u00a0W\\u00a0(1 \\u2264\\u00a0W\\u00a0\\u2264\\u00a0C) and\\u00a0V\\u00a0(1 \\u2264\\u00a0V\\u00a0\\u2264 1000) which represent, respectively, the weight of each book and Rangel\\u2019s degree of interest in the book. The end of the entry is determined by\\u00a0N\\u00a0=\\u00a0C\\u00a0= 0.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Help V\\u00e2nia\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each test case your program must print a line with the following format: Caso\\u00a0H: M where H is an integer indicating the number of the test case and M is the maximum degree of interest of Rangel for the books.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tGiven a triangle ABC with area S, and N equidistant points on the side AB and M equidistant points on the BC side, calculate the triangle's area determined by one of these points in AB with coordinate C1 and two others over BC with coordinates C2 and C3.\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2499,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input is composed by several test cases. The first line of a test case contains three integers\\u00a0S\\u00a0(1 \\u2264\\u00a0S\\u00a0\\u2264 106),\\u00a0N\\u00a0(0 \\u2264\\u00a0N\\u00a0\\u2264 103) and\\u00a0M\\u00a0(0 \\u2264\\u00a0M\\u00a0\\u2264 103) as specified in the text and the second line of a test case contains the coordinates\\u00a0C1\\u00a0(0 \\u2264\\u00a0C1\\u00a0\\u2264\\u00a0N+1),\\u00a0C2\\u00a0(0 \\u2264\\u00a0C2\\u00a0\\u2264\\u00a0M+1) and\\u00a0C3\\u00a0(0 \\u2264\\u00a0C3\\u00a0\\u2264\\u00a0M+1). The input ends when\\u00a0S=N=M=0.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Internal Triangle\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tThe output is composed by one line per test case containing the integer representing the area of the Triangle determined. It is always guaranteed that the area is an integer.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tWilliam recently learned some properties of the bit to bit operator xor (represented by the operator '^' in C language ). He realized that he can do many interesting algorithms with it: Find lonely elements in a sequence, exchange values \\u200b\\u200bwithout auxiliary variable, encryption and many others. Then he began to experiment and decided to name an operation using xor with its name, the w-xor. The w-xor operation is performed on a sequence of values. Example: it is an S={a1, a2, a3, a4}, applying w-xor over the sequence S once is equivalent to:\\r\\n\\r\\na1= a1^a2^a3^a4\\r\\n\\r\\na2= a1^a2^a3^a4\\r\\n\\r\\na3= a1^a2^a3^a4\\r\\n\\r\\na4= a1^a2^a3^a4\\r\\n\\r\\na1= a1^a2^a3^a4\\r\\n\\r\\nIf S={a1, a2, a3, a4, a5} then applying w-xor over S once is:\\r\\n\\r\\na1= a1^a2^a3^a4^a5\\r\\n\\r\\na2= a1^a2^a3^a4^a5\\r\\n\\r\\na3= a1^a2^a3^a4^a5\\r\\n\\r\\na4= a1^a2^a3^a4^a5\\r\\n\\r\\na5= a1^a2^a3^a4^a5\\r\\n\\r\\na1= a1^a2^a3^a4^a5\\r\\n\\u00a0\\r\\n\\r\\nGiven a sequence S and applying w-xor M times over it, you would know what the value of the K-th position?\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2500,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input consists of several test cases. Each test case begins with three integers 2 \\u2264 N \\u2264 103, 1 \\u2264 M \\u2264 106\\u00a0 and 1 \\u2264 K \\u2264 N representing the number of elements of the sequence, the number of w-xor operations applied and the position of the value to be found (note that the first position is 1), respectively. On the next line, there will be N integer values \\u200b\\u200b-109 \\u2264 Ai \\u2264 109. The entry ends when N=M=K=0.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"William Xorando\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tThe output consists of one line per test case containing the value of the K-th position of the sequence after applied M times the w-xor on it.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\r\\n\\r\\nProfessor Chico, suspecting that Levi, his student, is not studying dynamic programming as he should, decided to devise a plan to encourage him to study more.\\r\\nChico told his students that now they would be referenced by numerical codes of up to 12 digits in official communications (e-mails and tasks). And then he gave to each one of his students a card containing an unique number written on it. Quickly the students assumed that this would be their code, but to the surprise of the students and Levi's despair, Professor Chico explained that these were not their code.\\r\\nA student's code was the term of an ordered sequence S that was in the position (indexed from 1) specified by the number on the card of each student. This sequence has a special feature: each term, when decomposed into prime factors, can only have numbers contained in a set of N elements written on the board by the teacher. And to make life even harder for Levi, those numbers would change every week in such a way that he will always have to recalculate his code if he doesn't want to delay his tasks.\\r\\n \\tYour task is to make a program to help Levi, so that given the prime numbers written on the board during the week by Professor Chico and number on the card, tell his weekly code.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2501,\n    \"input\": \"\\r\\n\\r\\nThe input consists of several test cases. The first line of a test case contains two integers N (1 \\u2264 N \\u2264 102) and M (1 \\u2264 M \\u2264 105) representing respectively the number of numbers written by Professor Chico and the number written on the card. The second line contains N prime numbers Pi (2 \\u2264 Pi < 106), where Pi (1 \\u2264 i \\u2264 N) is a number written in the board. The entry ends when N=M=0.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Allowed Factors\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tThe output consists of one line per test case containing the Levi's weekly code.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Hamilton Jos\\u00e9 Brumatto  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tThe oldest known cipher is the Cipher of Caesar. Caesar wrote his letters by exchanging each letter for the next in the alphabet, to avoid that, when the letter was intercepted, enemy could read it. Over time, encryption has acquired better quality, but encryption based on substitution is still an interesting child's play, for example:\\r\\n\\r\\nZEN I T\\r\\nPOLAR\\r\\n\\r\\nIn this child's play, when writing a letter, the letter Z is replaced by the letter P and vice versa, as well as: E by O and\\u00a0so on. The phrase coded as follows: \\\"Osro roxre osri caftide\\\" can be deciphered as: \\\"Este texto esta cifrado\\\". As the game got serious, you were prompted for a program that decrypts encrypted messages from a supplied key.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2502,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input\\u00a0contains several test cases. Each test case begins with a line indicating two integers C and N, 0 < C < 21 and 0 < N < 100. C is the size of the cipher. On the next two lines is the C-sized\\u00a0cipher indicating which characters from the first line will be replaced by characters from the second line, a character appears only once, on the first or second line.\\r\\n\\r\\nThe cipher can contain letters from 'A' to 'Z', numbers from '0' to '9' plus white space and some punctuation symbols: '.' ',' ';' ':' '(' ')' '!' and '?'. In the next N lines are sentences and sentences encrypted by the cipher provided, which you must decipher. Each line contains a minimum of 1 and a maximum of 1000 characters. Any printable ASCII (non-extended) characters are allowed, in this case no accented characters are present, not even '\\u00e7'.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Deciphering the Encrypted Card\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each input test case your program must generate for each sentence line at the\\u00a0input a sentence line with the deciphered output, respecting the capitalization of the letter (capital letters are deciphered as case-sensitive when it is possible to apply, If it is not possible then it will be deciphered as lowercase letters). After each test case, a blank line should be printed, including after the last one.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tOne typical kind of race is the Regularity Race. This race has a track to be covered at a constant velocity. To ensure the velocity there are several time control basis. The location of these basis are unknown by the competitors, this is intended to avoid that the competitors try to correct the time just arriving at the base. At every base has a time control counting in the form of penalty points, either for delays as for advances in time. At each control base, if the competitor is delayed, there is 1 point penalty for every second, limited to 1200 points (20 minutes delay) to each base. If the competitor is advanced, there is 2 points penalty for every second, limited to\\u00a01200 points (10 minutes advance) to each base. The winner is the one with less penalty points, if two or more has the same points, the winner is who has the smallest team number.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2503,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input contains several test cases. Each test case uses several lines, the first input line has three integer numbers:\\u00a0V, P,\\u00a0T: 0 < V < 20,\\u00a0the average velocity (km/h) to be constant at race; 0 < P < 10 the total control basis; and 0 < T < 20 the total competitors of the race. On the second line there are\\u00a0P\\u00a0integer numbers indicating each base as distance (m) from the start point, 0 < Pi\\u00a0< 4,000. The last control base is the end line for the race.\\u00a0The next T lines contain P\\u00a0integer values each, indicating the time measured (s) for every basis, for each team: team 1 at line 1, and so on.\\u00a0The test cases end with V =\\u00a0P =\\u00a0T =\\u00a00.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Regularity Race\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each test case in input, your program must print on output a single line, with the final race classification, indicating team numbers starting from the winner. There must be only one blank space between each team number.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tOn the begining of the 20th\\u00a0century, the Viennese psychologist Hermann Swoboda and the German doctor Wilhelm Fliess, have noticed that human being has favorable and unfavorable cycles throughout life. These cycles are associated to three human states:\\u00a0physical, emotional and intellectual. At birth all cycles are reseted. As days go long the cycles varies on a sinusoidal way between a minimum and maximum.\\r\\n\\r\\n\\r\\n\\tPhysical biorhythm has 23 days cycle.\\r\\n\\tEmotional biorhythm has\\u00a028 days cycle.\\r\\n\\tIntellectual biorhythm has 33 days cycle.\\r\\n\\r\\n\\r\\nWhen on a positive cycle, the biorhythm indicates a favorable phase to physical, emotional or intellectual challenges. As an example, anyone who is in the positive phase of intellectual biorhythm\\u00a0will have more advantages in this competition than those in a negative phase.\\u00a0\\r\\n\\r\\nAt day 0 (birth) all biorythms are reset. At day 1 all of them are at positive phase. At day 14, as an example, the emotional biorythm is at null phase, physical biorhythm is negative and intellectual biorhythm is positive yet, and so on. The question is, after several days of life, what phase would it be the biorhythms at today date (November, 7th, 2016)? It is asked to you to develop a program that reads the birth date and states the phase for physical, emotional and intellectual at November, 7th, 2016 as positive, negative and null.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2504,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input contains several test cases. Each line is a test case and contain a date formated as\\u00a0D/M/YYYY\\u00a0(full year), a valid date before\\u00a07/11/2016 (November, 7th, 2016).\\u00a0Priority does not exceed 100 years.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Biorythm\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each input test case, it must be printed on the output three words, separated by one space only every\\u00a0two of them, showing the phase\\u00a0according\\u00a0to physical, emotional and intellectual biorhythm, in that order. If the specific biorhythm is in\\u00a0positive phase, the word will be: \\\"POSITIVO\\\", if it is in negative phase: \\\"NEGATIVO\\\", or if it is in null phase: \\\"ZERADO\\\".\\r\\n\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tSome numbers in mathematics, due to their uniquiness, are given a special name. Particularly, there is a set of numbers, we will call \\\"Autopotential\\\". A number\\u00a0N\\u00a0is called Autopotential when\\u00a0NN\\u00a0\\u00a0gives a result where the last digits is, exactly,\\u00a0N. For example:\\r\\n\\r\\n1: 11\\u00a0= 1 -> It is\\u00a0autopotential.\\r\\n3: 33\\u00a0= 27 -> it is not\\u00a0autopotential.\\r\\n10: 1010\\u00a0= 10,000,000,000 -> It is not autopotential.\\r\\n11: 1111\\u00a0= 285,311,670,611 -> It is autopotential.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2505,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input is defined as several test cases. Each line represents a test case and contains a unique integer value\\u00a0N, where 0 <\\u00a0N\\u00a0< 1,000,000.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Autopotential\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each test case from input, your program must generate on output one unique line that contains a single word: \\\"SIM\\\", if the value from input is an Autopotential numer, or \\\"NAO\\\" otherwise.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tPatients who arrive in the Medical Clinic queue go through a medical screening immediately, and then go to the\\u00a0queue to get medical care. In screening, the nurse notes the patient's time of entry and how many minutes he or she has until their health condition becomes critical. It is known that patients in the medical care queue are seen every 30 minutes (always in full hours or half an hour).\\u00a0The beginning of the screening and the attendance is given at 7:00 am, if there is no patient being treated and the queue is empty, the first patient is attended the moment he arrives at the screening. The doctor will attend every\\u00a0patient in the queue. The concern is whether any patient has reached critical condition while not being attended to. For this you have been invited to check in the queue how many patients reach the critical condition.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2506,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input\\u00a0contains several test cases. Each test case begins with a line with the integer N, 0 < N < 25; the number of patients arriving at screening. Following are N lines with the integer values H, M and C, with 7 < H < 19, and 0 \\u2264 M < 60, the hour and minute that the patient arrives at the screening.\\u00a0The patient on line i always arrives before and at last with the patient of the i + 1 line. And 0 \\u2264 C \\u2264 720, the number of minutes before the patient reaches the critical health condition.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Medical Clinic Queue\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each test case it is requested to print to\\u00a0output on a single line the number of patients who reached the critical condition still in the medical queue.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\r\\nThe Hamming code allows detection and correction of 1-bit error\\u00a0in reading data. Let's consider 16-bit words. In the table below is the word 4ac5hex in its binary form, each bit has its position number indicated:\\r\\n\\r\\n\\r\\n\\r\\nIn Hamming coding, the numbering of the bit positions uses a count in which the position values \\u200b\\u200bthat are power of 2: 1, 2, 4, ..., are reserved for inserting parity bits. These bits will be used as parity for Hamming coding. In the above case it would be:\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nTo calculate the parity of each hamming bit we use the bits according to their position. For example, the bit of position 11 will influence the hamming bits: 8, 2 and 1, because 11 = 8 + 2 + 1. For parity bit 2, we take all bits that influence this parity. For a 16-bit word they are: 3 (2 + 1), 6 (4 + 2), 7 (4 + 2 + 1), 10, 11, 14, 15, 18 and 19. In this case, if the sum of these bits is\\u00a0even, the parity is even and the hamming bit is 0, otherwise the hamming bit is 1. See the full analysis:\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nOnce coded, the resulting 21-bit word can be displayed in hexadecimal form as: 958a9hex. The advantage of this is that, if the reading has a maximum error of 1 bit, this error can be corrected. See for example if the word was read with the value 978a9hex\\u00a0instead. Building the table of bits we will have:\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nLooking at the parities of the Hamming bits, we see that parity does not check for bits 1, 4, and 8, this represents that there was a read error in bit (1 + 4 + 8) 13 and we promptly correct it. You have been asked for a program that parses the 21-bit words read, encoded with hamming parity, and prints the 16-bit correct words.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2507,\n    \"input\": \"\\r\\n\\r\\nThe input\\u00a0contains several test cases. Each case contains in a single line an hexadecimal value of 21 bits: H, 0 \\u2264 H \\u2264 1fffff. H represents a 16 bit word encoded with hamming parity bits, which can have at most 1 bit error. The alphabetical hexadecimal digits are written in lowercase letters.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Hamming Code\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tFor each input test case your program should generate a single output line with a 16-bit hexadecimal word. The output line must contain\\u00a0the read information corrected by the Hamming technique and free of the parity bits. The hexadecimal digits in lowercase letters.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\r\\nClodovildo Procariontes Urus is a Fortune Teller, he uses numerology as a science that studies luck\\u00a0from numbers. An example of numerology application is in the calculation of luck from the person's name. Many people worried about their own fortune end up changing their name to ensure a better luck. The calculation of the lucky number is based on the Pythagorean table, where each letter is translated to a number:\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nOnce the letter has been translated by numbers, we add the sum and add the result digits until there is a value between 1 and 9. See, for example, the name \\\"Harry Potter\\\": 8 + 1 + 9 + 9 + 7 + 7 + 6 + 2 + 2 + 5 + 9 = 65 \\u2192 6 + 5 = 11 \\u2192 1 + 1 = 2. The lucky number for Harry Potter is 2. Clodovildo has asked you for a program that calculates the lucky number from given names, with the number\\u00a0he can declare the luck\\u00a0of the person.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2508,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input\\u00a0contains several test cases. Each test case has a name N\\u00a0on a single line, the name is composed of unaccented letters, and the cedilla is represented as the letter 'C', each name has at most 100 characteres.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Fortune Teller\",\n    \"output\": \"\\r\\n\\r\\nFor each input test case your program should generate for input name, a line with the Lucky Number.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Hamilton Jos\\u00e9 Brumatto  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tLATEX is an excellent interpreter of formatting language for the construction of texts, articles, presentations,...\\u00a0To facilitate the construction of LATEX text, a specific editor is usually used. The power of language comes from the great ease of including modules and packages. One of these packages is the pstricks which together with pst-node and pst-tree allows building general trees. Our intention is to build binary trees. The following command constructs the tree in the figure:\\r\\n\\\\pstree{\\\\Tcircle{A}}{\\\\pstree{\\\\Tcircle{B}}{\\\\Tcircle{D}\\\\Tcircle{E}}\\\\Tcircle{C}}\\r\\n\\r\\n\\r\\n\\r\\nIn general, the \\\\pstree{}{} command receives two arguments: the first argument is the root, necessarily a node, and the second are the child trees that can be node or tree (recursively by a command \\\\pstree{}{}). A node is represented by the \\\\ Tcircle {} command that will create a circle with its written argument inside it. Os filhos, precisam ser exatamente 2 (para nosso objetivo: \\u00e1rvore bin\\u00e1ria). Como este comando possui v\\u00e1rios n\\u00edveis de recursividade profundidade da \\u00e1rvore) acaba ficando confuso a contagem de par\\u02c6entesis. Uma pequena troca produz resultados inesperados. As an exemple:\\r\\n\\\\pstree{\\\\Tcircle{A}}{\\\\pstree{\\\\Tcircle{B}}{\\\\Tcircle{D}}{\\\\Tcircle{E}}\\\\Tcircle{C}}\\r\\n\\r\\n\\r\\n\\r\\nYou have been prompted for a program, to be embedded in a LATEX Editor, that verifies that the syntax of the pstree is correct to form binary trees.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2509,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input consists of several test cases, each test case consists\\u00a0of a single line with a LATEX formatting expression for constructing a binary tree using the \\\\pstree{}{} and \\\\Tcircle{} commands.\\u00a0The maximum size of the expression is 1000 characters without any whitespace being entered. As an argument of the \\\\Tcircle{} command we always have a single character in the range 'A' to 'Z'.\\u00a0There is no redundancy of brackets '{' '}',\\u00a0only the first-level brackets that houses the arguments of each command appears.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Latex Editor\",\n    \"output\": \"\\r\\nFor each input test case your program should generate a single line output if the formatting expression is constructed as a binary tree, with \\\"SIM\\\", or \\\"NAO\\\" otherwise.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Guilherme Miranda, UNOESTE  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tAs everyone knows, there are many heroes who defend humanity from thugs and evil forces. In Codham, one of the darkest cities that exist, lives Batmain, the dark knight. Briefly, Batmain is nothing more than a human genius, multi-billionaire, philanthropist that also is master in over than a hundred martial arts. Although anyone knows his real identity, because he uses a armor with bat costume, all good people love him. After several battles, all his villains were captured by Batmain and the sense of security seemed to be part of the Codham citizens again. All this atypical tranquility ceased to exist in two days, when the clown prince of crime \\u2013 also known as Jokoder \\u00ad\\u00ad\\u2013 escaped from Arkham and made the city more chaotic than ever. You work to the police of Codham, in a recognized work of batprogrammer (job responsible to solve problems that the Batmain is envolved, with algorithms codes) and was solicited to you the following mission: answer, to each villain, if he already was arrested by the dark knight, or not.\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2510,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe first line of the input consists of an integer T, which indicates the number of test cases. Each test case is composed by strings with more than 0 and no more than 25 letters of the English alphabet [a-z, A-Z].\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Batmain\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tIf the villain have ever been captured by Batman, print Y. Otherwise, print N.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Hiago Oliveira de Jesus, UEA  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tRecently Wesley Wilson and werick bought their houses adjoining the other with a minimum distance between them in the city of Nlogonia. At the intersection point of their homes live Vitor rich neighbor every evening performs liveliest parties with the girls in your area. The university students spend the morning studying and bothered by the sound transmitted from Vitor house decided to prosecute. The well-educated police as usual responded that the occurrence would be met if and only if the neighbors were cousins.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2511,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe first line of each test case contains an integer (1 \\u2264 \\u00a0N\\u00a0\\u00a0\\u2264 106) representing the number of neighbors on the next line will be given the identifier of each neighbor.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"WWW\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tThe output should contain the neighbors' identifiers that can trigger the police in order of entry separated by space, if it is not possible to print \\\"*\\\" without the quotation marks. Each test case ends with \\\"\\\\n\\\".\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Felipe Get\\u00falio, UEA  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tHave you heard of reverse game? It's very simple. Given a 3x3 matrix, made up of '*' (asterisks) and '-' (dashes), the player's goal is to change the state of the matrix in order to arrive in a valid state , In which all characters in the array are dashes or all are asterisks. The only rule to make some change in the array is as follows: the player chooses a cell from the array, and then the character corresponding to it and the corresponding cells to its adjacent (left, right, above, and below) Value for the opposite character, that is, if there is any '*' character, it will become '-', and if there is '-', '*'. Below, there is a state change example (red cells are the chosen ones).\\r\\n\\r\\n\\r\\n\\r\\nThe multiplayer version of the game takes place in the following way: a match consists of several rounds. In each round, two matrices of the same initial state (chosen at random) are given, one for each player. Players must then simultaneously change the initial state of their matrix (through the changes described above) to a valid final state. The player freely decides which of these states he should reach. Wins a round the player who meets the above goal in fewer steps. A change in the matrix (the changes of the characters corresponding to the chosen cell and adjacent) corresponds to a step in this game. In this way, the amount of characters changed during some state changes does not interfere with the amount of steps reached. A draw in a round occurs when players get the same amount of steps, no matter what final state they have chosen. The player with the most winning rounds wins a match. There is a draw in a match when players have equal amounts of winning rounds.\\r\\n\\r\\nUfah! Right. Now that you know the game, you might be able to help my friends. Fred and Jason are really addicted to\\u00a0Reverse Game. They play optimally, that is, they always know, starting from any initial state, how to reach both valid end states with the fewest possible steps. Obviously, they also always choose the path with the least minimum amount of steps. In this way, the draw becomes inevitable!\\r\\n\\r\\nSo, for the game not to be s\\u00f3 boring, a little change has been made: Fred and Jason start now with different matrices. In this way, we need you to determine who will win the match in this game format.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2512,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tEach entry consists of several lines. In the first line, there would be na integer\\u00a0R\\u00a0indicating the number of rounds in a single game. Next,\\u00a02*R\\u00a0matrices are described, in the representation shown above, one underneath the other, each pair representing respectively, in the order in which they appear, Fred\\u2019s and Jason's initial matrices, corresponding to a round. There is a blank space between two consecutive characters and a blank line separating two consecutive matrices.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Reverse Game\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tA sa\\u00edda \\u00e9 composta por uma linha indicando a mensagem: \\u201cJason wins!\\u201d, se Jason ganhar a partida, \\u201cFred wins!\\u201d, se Fred ganhar a partida, ou \\u201cIts a draw!\\u201d, se houver empate na partida.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\r\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\t\\t\\t\\t\\tMembers of Uxorra clan inhabiting the prestigious Leaf Village are prominent ninjas whose skills are envied by many. In addition to its excellent strength and jutsu (ninja techniques) with fire, they have an asset that highlights even more the other ninjas of the village and the world: Their Xoringan.\\r\\n\\r\\nThe Xoringan is a dojutsu (eyes with ninja skills) kekkei genkai (skill transferred through bloodline) very powerful and used by clan members generally in battles. It gives the user a lot of useful skills during a fight, like be able to see the flow of chakra's enemy (used internal energy to do jutsus),predict the movements of the opponent and even copy techniques by looking at them once.\\r\\n\\r\\nThe jutsu are made with a specific combination of seals (gestures with hands joined and positioning of the fingers) where each seal can only be used once in a jutsu. Some seals are more powerful and when used in a jutsu, they give you the power of greater attack, others, not so much. There are 64 different types of seals, being 1 the weakest attack power, the second weakest has twice the first, third weakest has twice the second and so on. This makes each different jutsu to have a single attack power and can be seen by a Xoringan user as a number. For example, a jutsu that uses the first, third and fifth seals has an attack power of 21 and may simply be referred to as jutsu 21.\\r\\n\\r\\nThere are skilled ninjas that can do secret jutsus as they perform other and reuse seals that were used in these jutsus. For example, if the ninja performs a sequence of techniques, he can reuse each combination of seals used to make each jutsus to do the combination of the secret jutsu seals. To find out what is the secret jutsu you need to know which seals, including all used in sequence, remain active. When a seal is made for the first time it is activated, but if is made a second time then it is disabled and can be activated again if it is done again in another jutsu in sequence.\\r\\n\\r\\nFor example, if a ninja do the jutsus 10, 31, 21, 15, 14, 7, 5 and 9 and try to do the secret jutsu using the seals between the third and seventh (21, 15, 14, 7, 5), the secret jutsu that will be done is 22. It is also important to note that not every jutsu is so secret. If in the same sequence he tried to do the secret jutsu only during the first jutsu, it just would eventually make the jutsu 10 again.\\r\\n\\r\\nRodrigo is a young Uxorra using his Xoringan to be able to predict all the jutsus that your opponent will do and in the exact order is therefore able to measure the threat that your opponent is. And this is nothing more than the sum of the attack power of all possible secret jutsus that your opponent has the ability to do.\\r\\n\\r\\nYour task is to make a program that simulates the powers of Xoringan and can say, given the jutsu's sequence that ninja will do, the threat it represents.\\r\\n\\t\\t\\t\\t\",\n    \"id\": 2513,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input consists of several test cases. The first line of a test case contains an integer N (1 \\u2264 N \\u2264 103) representing the amount of jutsu provided for Xoringan. The second line contains N integers in the order of execution representing the attack power of each jutsu.\\r\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Xoringan\",\n    \"output\": \"\\r\\n\\t\\t\\t\\t\\tThe output consists of a line per test case representing the value of threat that a jutsu's sequence represents modulo 109+7.\\r\\n\\t\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tIn a galaxy far, far away, there is the planet Nl\\u00f4gu\\u00e9rr\\u00e0, predominantly inhabited by dinosaurs. There are three moons orbiting Nl\\u00f4gu\\u00e9rr\\u00e0. The orbit of each moon has the form of a circumference whose center is Nl\\u00f4gu\\u00e9rr\\u00e0, as indicated by the figure in the left:\\n\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tWhen all three moons align between the planet and the sun, as indicated by the figure in the right, a horrible catastrophe happens! The last time it occurred, exactly M years ago, a big drought doomed the entire planet, reducing the number of dinosaurs by half. The first moon takes L1 years to complete an orbit around the planet; the second moon takes L2 years to complete an orbit around the planet; and the third moon takes L3 years to do so. Determine how many years will pass until the next alignment.\\n\\n\\t\\t\\t\\tConsider that both the planet and the sun are stacionary.\\n\\t\\t\\t\",\n    \"id\": 2514,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integer M (1 \\u2264 M \\u2264 109), indicating that the last alignment occurred M years ago. The second line contains three integers L1, L2 and L3 (1 \\u2264 L1, L2, L3 \\u2264 103), the time it takes, in years, for each moon to complete its orbit around the planet. It is guaranteed that no alignment occurred in the last M-1 years, and no alignment occurs this year.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Lunar Alignment\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing a number X indicating that the next alignment between the planet and the sun will occur in X years from this day.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tCarol, Carla, Marcos and Leonardo are all roommates. They rocked a party yesterday and, today, they want to split the leftovers between them. While Carol and Carla are discussing about how they will split a certain cake, Marcos and Leonardo will split a package of crackers between them.\\n\\n\\t\\t\\t\\tThe package has N portions. The number of crackers in each portion is not necessary the same. For example, consider the following package. It has N=5 portions that, from the left to the right, have 3, 1, 2, 3 and 2 crackers, respectively.\\n\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tMarcos will split the package in two parts, cutting the package in some of the N-1 places between two consecutive portions. In the given example, Marcos has 4 possible places to cut, represented by the dotted lines. After the cut, Leonardo will chose which of the two parts he will have. Marcos will then have the other part.\\n\\n\\t\\t\\t\\tAfter the cut, Leonardo will chose the part that contains the largest number of crackers. Marcos knows that and, thus, need to chose the place to cut such that the number of crackers he will have is maximized. Help him with this task!\\n\\t\\t\\t\",\n    \"id\": 2515,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (2 \\u2264 N \\u2264 105), the number of portions in the package. The second line contains N integers b1, b2, ..., bN (1 \\u2264 bi \\u2264 104), the number of crackers in each portion, from the left to the right.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cracker\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with two integers separated by an space, indicating how many crackers Marcos and Leonardo will have, respectively.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tTo get fit until next summer, you and your friend decided to run on the streets in the campus every morning. Usually, you run together. However, today your friend started running early and, hence, he is a little ahead of you now.\\n\\n\\t\\t\\t\\tRight now, your friend is S meters away from you. You are running at a constant speed of va meters per second, and your friend is running at a constant speed of vb meters per second. The following figure shows the situation:\\n\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tYour task is to determine whether you will reach your friend, and, if so, how many seconds it will take.\\n\\t\\t\\t\",\n    \"id\": 2516,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The only line in each test case contains three integers S, va and vb (1 \\u2264 S, va, vb \\u2264 103), the current distance between you and your friend (in meters), your speed (in meters per second) and your friend\\u2019s speed (in meters per second), respectively.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Running\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, if you cannot reach your friend, print a line containing \\u201cimpossivel\\u201d (without quotes). Otherwise, print a line containing the time it takes, in seconds, for you to reach your friend. Round and print the answer with exactly two decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tPoGro is a famous brand of hi-tech digital cameras. This year, PoGro is promoting the PoGro Challenge! In this challenge, each participant must jump from the top of a building and land safely at a specific point in the ground, using only an hang-glider.\\n\\n\\t\\t\\t\\tConsider that the top of the building is at the point (0,C) of the Cartesian plane, and the landing point is at (xF, 0). In order to complete the challenge, the participant must follow strictly the path defined by the parabola given by the function f(x) = -x\\u00b2/A - x/B + C, where A, B and C are values chosen by the staff such that f(xF) = 0. The path is presented in the following figure:\\n\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tThe staff put a PoGro camera at the position (xc, yc) of the plane, which will be used to take a photo of the participant. To make the photo as good as possible, the photo will be taken in the exact moment the participant is closest to the camera.\\n\\n\\t\\t\\t\\tHowever, the staff is having trouble to determine what will be the distance between the camera and the participant in the moment the photo will be taken (exemplified by the dotted line in the figure). Given the path of the participant and the camera\\u2019s position, determine the distance between both of them in the moment the photo will be taken!\\n\\t\\t\\t\",\n    \"id\": 2517,\n    \"input\": \"\\t\\t\\t\\t\\tFirst line of each test case contains three integers A, B, C (1 \\u2264 A, B, C \\u2264 200) describing the path. Second line contains two integers xc and yc (0 \\u2264 xc, yc \\u2264 200) indicating the camera\\u2019s position. Third and last line of each test case contains the integer xF  (1 \\u2264 xF  \\u2264 200) indicating the landing point.\\n\\n\\t\\t\\t\\t\\tIt is guaranteed that f(xF) = 0. Also, please notice that f(x) is such that the function is decreasing for x \\u2265 0, and that the height of the building is positive.\\n\\n\\t\\t\\t\\t\\tThe input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"PoGro Challenge\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the distance between the camera and the participant in the moment the photo is taken. Round and print the answer with exactly 2 decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tThe building of the Federal Department of Natural Islands (FDNI) is being widely reformed to be more accessible. There is a staircase with N steps. Each step is H centimeters high, C centimeters long and and L centimeters wide. Figure (a) shows a staircase with N=4 steps.\\n\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tTo make the building accessible, FDNI\\u2019s management decided to place a ramp over the staircase. The ramp is hard and has a rectangular format. It will be placed over the staircase in such a way that all its steps are covered, as indicated by figure (b).\\n\\n\\t\\t\\t\\tYour task is, given the number of steps and its measures, determine the total area of the ramp\\u2019s surface.\\n\\t\\t\\t\",\n    \"id\": 2518,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 1000), the number of steps in the staircase. The second line contains three integers H, C and L (1 \\u2264 H, C, L \\u2264 100), the measures of each step, in centimeters.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"FNDI's Staircase\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the total area of the ramp\\u2019s surface, in square meters. Round and print this value with exactly 4 decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tThe Wildcats are in the big final of the Scholar Basketball Championship this year! An expert, coach Bolton is using his famous winning strategy to win the match and the tournament. However, to apply his strategy, he needs to count the number of opponents in some regions of the field often. Knowing this, the opponents also change their position often during the match!\\n\\n\\t\\t\\t\\tConsider the field has N rows and M columns, numbered from 1 to N and from 1 to M. The figure exemplifies: (a) a field with N=3, M=4 and the initial positions of each opponent; (b) the opponent at position (1,2) moves to position (3,3); (c) there are now 3 opponents in the region between positions (1,3) and (3,4), inclusive.\\n\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tGiven the initial position of each opponent and their movements during the match, help the coach with his countings!\\n\\t\\t\\t\",\n    \"id\": 2519,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of each test case contains two integers N and M (1 \\u2264 N, M \\u2264 1000), the number of rows and columns in the field, respectively. Next N lines contain M integers each, describing the initial positions of the opponents. Integer 0 represents an empty position, while integer 1 represents a position with an opponent. The next line contains an integer Q (1 \\u2264 Q \\u2264 105), the number of operations. Each of the next Q lines describes an operation. Each operation is described by five integers R I1 J1 I2 J2.\\n\\n\\t\\t\\t\\t\\tIf R=0, the opponent at (I1,J1) moves to (I2,J2) (1 \\u2264 I1, I2 \\u2264 N, 1 \\u2264 J1, J2 \\u2264 M). It is guaranteed that, before the operation, position (I1,J1) contains an opponent, and position (I2,J2) is empty.\\n\\n\\t\\t\\t\\t\\tIf R=1, coach queries the region between positions (I1,J1) and (I2,J2), inclusive (1 \\u2264 I1 \\u2264 I2 \\u2264 N, 1 \\u2264 J1 \\u2264 J2 \\u2264 M).\\n\\t\\t\\t\\t\\tThe input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Winning Strategy\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line for each query containing the number of opponents currently at the queried region.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tAnal\\u00f3gim\\u00f4n Go! is a very popular game. During his quest, the player travels across many cities capturing virtual little monsters called anal\\u00f3gim\\u00f4ns. You just entered a city that contains the very last anal\\u00f3gim\\u00f4n you still don\\u2019t have!\\n\\n\\t\\t\\t\\tThe city can be described as a grid with N rows and M columns. You are at a given position in the city, while the last anal\\u00f3gim\\u00f4n is at another position in the same city. In one second, you can move (exactly) one position to the north, to the south, to the west or to the east. Considering that the anal\\u00f3gim\\u00f4n does not move at all, you task is to determine the minimum amount of time you need to reach it.\\n\\n\\t\\t\\t\\tThe following figure shows the first sample input, and shows a path that can be made in 5 seconds. There are other paths that can be used that take the same amount of time, but there is no path that takes less time than this one.\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\",\n    \"id\": 2520,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and M (2 \\u2264 N, M \\u2264 100), the number of rows and columns, respectively. Next N lines contains M integers each, describing the city. Integer 0 indicates an empty position; integer 1 indicates your position; and integer 2 indicates the anal\\u00f3gim\\u00f4n\\u2019s position. It is guaranteed that there is exactly one integer 1 and exactly one integer 2 in the test case, and that all other integers are equal to 0.\\n\\n\\t\\t\\t\\t\\tThe input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Last Anal\\u00f3gim\\u00f4n\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the minimum time needed to reach the last anal\\u00f3gim\\u00f4n, in seconds.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tAmerica and Vinicius are studying the geographic coordinate system on spheres. With this system, it is possible to determine the position of any point on a sphere\\u2019s surface. Their friend Ma\\u00edsa, who is a geographer, decided to help them. She explained how this system works.\\n\\n\\t\\t\\t\\tIn this system, a point is determined by its latitude and its longitude. The latitude varies from -90o to 90o and indicates the angle of the point with respect to the center of the sphere, in the vertical direction, as indicated by figure (a). The longitude varies from -180o to 180o and indicates the angles of the point with respect to the center of sphere, in the horizontal direction, as indicated by figure (b). As an example, figure (c) shows the position of a point P with latitude 45o and longitude 45o.\\n\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tConsider that the center of the sphere is at the origin O = (0, 0, 0) of the Cartesian space and, when looking the sphere from the front, the x axis goes from left to right, the y axis goes from the bottom to the top, and the z axis goes from the less deep to the deeper point. Figure (d) indicates a sphere with radius 1, where point P is located at (1\\u22152, (\\u221a2)\\u22152,-1\\u22152).\\n\\n\\t\\t\\t\\tGiven the sphere\\u2019s radius and the geographic coordinates of a point P, determine its coordinates in the Cartesian space.\\n\\t\\t\\t\",\n    \"id\": 2521,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case contains only one line with three integers r, la and lo (1 \\u2264 r \\u2264 50,-90 \\u2264 la \\u2264 90,-180 \\u2264 lo < 180), indicating the sphere\\u2019s radius and the latitude and longitude of point P, in degrees. The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Ask the Geographer\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing three values x, y and z, separated by single spaces, indicating the coordinates of the point P. Round and print each coordinate with exactly two decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tThe building of the Federal Department of Natural Islands (FDNI) is being widely reformed. Because of that, the old computer lab was destroyed, and a new one is being built on the second floor of the building.\\n\\n\\t\\t\\t\\tThere are N computers in the new lab, numbered from 1 to N. For each computer i, 1 \\u2264 i \\u2264 N, we know the position (xi, yi) at which it is installed. Now, it is needed to build the network that will connect the computers in the lab. To do so, it is possible to plug network cables between pairs of computers. To make the network valid, the cables should connect the computers in such a way that it is possible to send a message from any computer to any other computer in the lab, using one or more cables. The following figure exemplifies a possible configuration of a valid network:\\n\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tYour task is, given the positions of each computer in the new lab, determine the minimum total length of cable needed to build a valid network.\\n\\t\\t\\t\",\n    \"id\": 2522,\n    \"input\": \"\\t\\t\\t\\t\\tFirst line of each test case contains an integer N (1 \\u2264 N \\u2264 500), the number of computers in the lab. Each of the next N lines contains two integers xi and yi (1 \\u2264 xi, yi \\u2264 104), indicating the position of a computer. There are no two computers at the same position.\\n\\n\\t\\t\\t\\t\\tThe input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"FNDI's Network\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing the minimum total length of cable needed to build a valid network. Round and print the answer with exactly two decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tAfter an intense match of a RPG game at the house of one of his friends, young Will disappeared mysteriously! Everyone is desperately looking for him everywhere. Meanwhile, strange things are happening at your home. One of these things, however, allows you to communicate with the boy!\\n\\nThere are exactly 26 bulbs attached to the wall of your living room, numbered from 1 to 26 from left to right. Also, there is a letter drawn in the wall bellow each bulb. When Will wants to send you a message, he will (mysteriously) blink the bulbs corresponding to each letter of his message, one at a time. For example, if he wants to send you the message HELP, he will blink, in this order, the bulbs above the letters H, E, L and P.\\n\\nGiven the letter associated to each bulb and the order of the bulbs Will blinked, decipher the message he sent!\\n\\t\\t\\t\",\n    \"id\": 2523,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains a string with exactly 26 uppercase letters, containing all letters of the English alphabet. The first letter in the string is associated to bulb 1; the second letter in the string is associated to bulb 2; and so on. The next line contains an integer N (1 \\u2264 N \\u2264 104), the number of bulbs that were blinked. The third line contains N integers li (1 \\u2264 li \\u2264 26), indicating the bulbs that were blinked, in that order.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Will's Message\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing the message sent by Will.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tMadam Beauvoir\\u2019s N grandchildren are really prankish, but they are also really nice sometimes. One day, they made a big mess with the doors of her mansion! The following day, however, they behaved really nice. Due to this, madam Beauvoir decided to reward her grandchildren with strawberry candies.\\r\\n\\r\\nRight now, she is at the candy shop to buy the candies. The total number of candies she buys must be such that (i) all candies must be given to her grandchildren; and (ii) every grandchild must receive the same number of candies. Please notice that the number of candies each child receives is irrelevant, provided that everyone receives the same number of candies.\\r\\n\\r\\nThere are M candies packages in the shop. Package i (1 \\u2264 i \\u2264 M) contains Bi strawberry candies. The seller can only sell entire packages, i.e., madam Beauvoir cannot open a package and buy some (not all) candies from inside it.\\r\\n\\r\\nSince she is really rich, she does not care about the price of each package. In fact, to impress the kids, she wants to buy the maximum possible number of packages. Your task is to determine what is the maximum possible number of packages she can buy such that the total number of candies can be divided by her grandchildren.\\n\\t\\t\\t\",\n    \"id\": 2524,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and M (1 \\u2264 N, M \\u2264 103). The second line contains M integers Bi (1 \\u2264 Bi \\u2264 109), indicating the number of candies inside each package.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Strawberry Candies\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print single a line containing the maximum possible number of packages she can buy.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tCl\\u00f3vis Eduardo is a traveling cacher, i.e., he travels across the world practicing geocaching. Geocaching is a GPS-based worldwide game in which players look for boxes (known as geocaches) previously hidden by other players, using its coordinates.\\n\\nDue to his great reputation and experience (more than 32768 geocaches found everywhere), Cl\\u00f3vis Eduardo was invited by the Nlogonian Ministry of Leisure and Sports to hide the most important geocache in history: a big golden box in the shape of a horse, that celebrates the 50 years of the Nlogonian republic.\\n\\nHowever, finding the perfect hidden place is not enough. New geogaches must follow some new rules, defined this year:\\n\\n\\n\\tA new geocache must not be put at the same place of another one previously there;\\n\\tThe sum of the distances of the K nearest geocaches must be equal to or greater than D;\\n\\tIf there is less than K geocaches, all existent geocaches must be considered in such sum.\\n\\n\\nNlogonia can be described as a plan, and, currently, there are N geocaches already present. The Ministry choose C possible locations for placing the commemorative geocache, and asked how many of these locations are valid according to the new rules.\\n\\nSince Cl\\u00f3vis Eduardo is really lazy, he asked you to write a program to solve his problem.\\n\\t\\t\\t\",\n    \"id\": 2525,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains four integers N, C (1 \\u2264 N, C \\u2264 104), K (1 \\u2264 K \\u2264 8) and D (1 \\u2264 D \\u2264 105).\\n\\nThe next N lines contain two integers each, xi and yi (0 \\u2264 xi, yi \\u2264 104), the position of i-th geocache already present in Nlogonia. There are no repeated positions.\\n\\nThe next C lines contain two integers each, xj and yj (0 \\u2264 xj, yj \\u2264 104), the j-th possible location of the new geocache.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Traveling Cacher\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with the number of valid positions suggested by the Ministry.\\n\\t\\t\\t\",\n    \"timelimit\": 12.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tThe Federal University of Nlog\\u00f4nia (FUNl) has an University Restaurant (UR) that provides meals every day to all students in the university.\\r\\n\\r\\nThe restaurant\\u2019s menu is always composed by three distinct dishes: an entry, a side dish and a dessert. There are N dishes that can be used by the restaurant to make the menu. The dishes are very miscellaneous, such that any dish can be used as an entry, as a side dish or as a dessert.\\r\\n\\r\\nHowever, the nutritionists demand the menu to be always well balanced. To that end, the entry must have less calories than the side dish, and the side dish must have less calories than the dessert. Also, the entry must have more fiber than the side dish, and the side dish must have more fiber than the dessert.\\r\\n\\r\\nYou task is to determine how many distinct menus can be made, i.e., in how many ways it is possible to select three dishes from the N available ones to make a valid menu.\\n\\t\\t\\t\",\n    \"id\": 2526,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integer N (3 \\u2264 N \\u2264 106). Consider that the dishes are numbered from 1 to N, in ascending order of their calories. Hence, you can consider that the i-th dish has i Calories.\\r\\n\\r\\nThe second line contains N distinct integers f1,f2,...,fN (1 \\u2264 fi \\u2264 N), indicating the amount of fiber in each dish. Dish i has fi units of fiber.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Menu\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the number of menus that can be made.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tPoor Petya is hungry.\\r\\n\\u2013 Mom! Mom! Mooooom! - yells the boy at the basement.\\r\\n\\u2013 What\\u2019s up, son? - The lady answers.\\r\\n\\u2013 I want cheddar!\\r\\n\\r\\nCHEDDAR! The boy is hungry and wants cheddar. You, Petya\\u2019s neighbor and an excellent programmer, heard it and wants to help. Since the cheese police does not allow cheddar to be sold to everyone, you will write a program to facilitate the lady\\u2019s purchase.\\r\\n\\r\\nEveryone who tries to buy cheddar must pass a luck test. They receive N die (honest ones, with 6 faces valued from 1 to 6) and a number V. All N die are rolled and S is calculated, where S is the sum of the results of all die. If S is greater than or equal to V, cheddar can be purchased. Otherwise, the buyer goes home with empty hands.\\r\\n\\r\\nYour program must calculate, given N and V, the probability that Petya\\u2019s mom successfully buys cheddar to his son.\\n\\t\\t\\t\",\n    \"id\": 2527,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case contains a single line with two integers, N (0 < N \\u2264 1000) and V (0 \\u2264 V \\u2264 6000).The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Cheddar\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with a number with four decimal places, the probability Petya\\u2019s mom buys cheddar.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tYour vacations are finally about to begin! To enjoy your deserved rest, you decided to travel from Curytyba to Riacho de Fevereiro, a great touristic city in the country.\\r\\n\\r\\nThere are N cities in the country, numbered from 1 to N. Curytyba is the city number C, and Riacho de Fevereiro is the city number R. Also, there are M routes. Each route connects two cities A and B, can be used to go from A to B or vice-versa, and takes exactly one hour to be transversed.\\r\\n\\r\\nEverything is fine except one small detail: the mayor of the city Estadunido (city E), mr. Donaldo Trumpe, with a polemic decree, prohibited every citizen from Curytyba to enter his city! Hence, you must go to Riacho de Fevereiro avoiding passing by Estadunido.\\r\\n\\r\\nYour task is to determine the minimum time needed, in hours, to go from Curytyba to Riacho de Fevereiro avoiding passing by Estadunido.\\n\\t\\t\\t\",\n    \"id\": 2528,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and M (3 \\u2264 N \\u2264 1000, 1 \\u2264 M \\u2264 N(N-1)/2), the number of cities and routes, respectively. Each of the next M lines describe a route. Each line contains two integers A and B (1 \\u2264 A, B \\u2264 N, A\\u2260B), indicating a route between cities A and B. The last line contains three integers C, R and E (1 \\u2264 C, R, E \\u2264 N,C\\u2260R\\u2260E), indicating Curytyba, Riacho de Fevereiro and Estatunido, respectively.\\r\\n\\r\\nNo route appears more than once in the input. It is guaranteed that it is possible to travel from city C to city R without going to city E using the routes given in the input.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Forbidden City\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the minimum time needed, in hours, to go from city C to city R without passing by city E.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tVasya and Petya decided to invest in a new enterprise. They opened a flea circus.\\r\\n\\r\\nRight now, they are rehearsing with their P fleas in a straight line. Each flea holds a small board with an integer written on it, and can follow 4 different orders:\\r\\n\\r\\n\\r\\n\\tReplace the number on its board by another given one;\\r\\n\\tYell the number of even integers on boards held by fleas in a given interval;\\r\\n\\tYell the number of odd integers on boards held by fleas in a given interval;\\r\\n\\tStart dancing while the fleas in a given interval reverse the order of their boards.\\r\\n\\r\\n\\r\\nSome fleas did not understand the last order and asked for an example. Vasya then said:\\r\\n\\r\\nConsider there are 10 fleas holding, initially, boards with the following integers:\\r\\n\\r\\n70, 15, 3, 4, 15, 59, 0, 1, 444, 2\\r\\n\\r\\nIf they receive the order to reverse the order of the boards in the interval [3, 7], then the new line will be:\\r\\n\\r\\n70, 15, 0, 59, 15, 4, 3, 1, 444, 2\\r\\n\\r\\nThe duo asked you to write a program to simulate the rehearsing, so they can see if they are well trained.\\n\\t\\t\\t\",\n    \"id\": 2529,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. In each test case, the first line contains two integers P and Q (1 \\u2264 P, Q \\u2264 105). The following line contains P integers pi (0 \\u2264 pi \\u2264 109), the integers initially written on the fleas\\u2019 boards.\\r\\n\\r\\nNext Q lines describe the orders they receive. Each order may be:\\r\\n\\r\\n\\r\\n\\tS a v: Replace the integer on the board held by the flea at position a (1 \\u2264 a \\u2264 P) by v;\\r\\n\\tE a b: Yell the number of even integers on boards held by fleas in the interval [a,b] (1 \\u2264 a \\u2264 b \\u2264 P);\\r\\n\\tO a b: Yell the number of odd integers on boards held by fleas in the interval [a,b] (1 \\u2264 a \\u2264 b \\u2264 P);\\r\\n\\tI a b: Reverse the order of the boards in the interval [a, b] (1 \\u2264 a \\u2264 b \\u2264 P).\\r\\n\\nThe input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Flea Circus\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line with the value that must be yelled for each order that requires an yell (E and O).\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tStudents in the 4th grade of the Trale Lewous School took a Math exam in the beginning of the day. Everyone handed over a sheet containing only their answers and the respective indices. Teacher Maria Eduarda suspects that Ricardinho copied his answers from Juan, the best student in the class.\\r\\n\\r\\nRicardinho was called to talk with the teacher during the break time, in order to check if he really cheated or not. However, afraid of being caught, the prankish boy distracted the teacher and erased the indices of his answers. Hence, if the sheet contained initially \\\"1)\\u00a020\\u00a02)\\u00a030\\u00a03)\\u00a035\\u00a0...\\\", now it contains only \\\"20\\u00a030\\u00a035\\u00a0...\\\".\\r\\n\\r\\nThe exam was composed of N questions, which answers were always numbers. However, the boy answered only M of them. The teacher is sure that Ricardinho wrote down his answers in order, i.e., if he answered, for example, questions 2 and 4, then the answer for question 2 is wrote before the answer for question 4.\\r\\n\\r\\nWith all the N answers gave by Juan, also in order, Maria Eduarda will nullify Ricardinho\\u2019s exam if there is some way to match the value of the M answers given by Ricardinho with M of the N answers given by Juan, respecting their orders.\\r\\n\\r\\nWrite a program that, given the answers of both boys, determine if Ricardinho\\u2019s exam must be nullified.\\n\\t\\t\\t\",\n    \"id\": 2530,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and M (1 \\u2264 M \\u2264 N \\u2264 105). The second line contains N integers si (1 \\u2264 si \\u2264 103) describing Juan\\u2019s answer. The third line contains M integers rj (1 \\u2264 rj \\u2264 103) describing Ricardinho\\u2019s answers.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Cheating\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing \\\"sim\\\" if the exam must be nullified or \\\"nao\\\" otherwise (without quotes).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tThe Nlogonian Aquatic Surf Championship is about to start! Next year, the big final will be hosted in the city of Fo\\u00e7a do Iguachim (FdI)! That region is famous due to the shops in there. The shops in that region usually sell many products cheaper than other shops in the country. You want to take advantage of your trip to buy the new Aif\\u00f4ni (R)! (Actually, you wanted a S\\u00e3osunga (R), but this cellphone is literally a boom!)\\r\\n\\r\\nThere are N shops, numbered from 1 to N. Every shop sells the cellphone, although its price may be different in each shop. Since you do not want your trip to be tiring, you may consider not visiting all N shops, but only shops between two given shops i and j, inclusive. You are interested in the largest price difference of the cellphone in these shops. Such difference is equal to |M - m|, where M is the highest price in these shops, and m is the lowest price in them.\\r\\n\\r\\nAlso, shops can change their price as they want! Your task is to determine, for many queries, the largest price difference in shops between two given shops, considering the prices may eventually change.\\n\\t\\t\\t\",\n    \"id\": 2531,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integer N (1 \\u2264 N \\u2264 105). The second line contains N integers p1,p2,...,pN (1 \\u2264 pi \\u2264 105). Integer pi indicates the initial price of the cellphone at shop i. The third line contains an integer Q (1 \\u2264 Q \\u2264 105), the number of operations. Each of the next Q lines describes an operation. Each operation can be described in two ways:\\r\\n\\r\\n\\r\\n\\t1 i p (1 \\u2264 i \\u2264 N, 1 \\u2264 p \\u2264 105), the price of the cellphone changed to p in store i.\\r\\n\\t2 i j (1 \\u2264 i \\u2264 j \\u2264 N), a query.\\r\\n\\nThe input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Shopping in FdI\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line for each query containing the largest price difference in all shops between shops i and j, inclusive.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tYou are going very well in your great quest as a wizard in the fantasy land. However, a new challenge has just appeared: a demogorgon, prince of demons, arised in front of you! To continue your quest, you must defeat it!\\r\\n\\r\\nTo defeat the demogorgon, you must take all of its P health points (HP). There are N spells available, numbered from 1 to N. Spell i causes Di damage points, i.e., Di health points (HP) are taken from the monster when spell i is used. To use spell i, you need to spend Mi mana (a certain amount of magic energy). Each spell can be used at most once.\\r\\n\\r\\nGiven the health points of the demogorgon and the spells you can use, determine the minimum amount of mana needed to defeat the monster.\\n\\t\\t\\t\",\n    \"id\": 2532,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of each test case contains two integers N and P (1 \\u2264 N \\u2264 1000, 1 \\u2264 P \\u2264 2000), the number of spells available and the health points (HP) of the monster, respectively. Each of the next N lines describes a spell. Each line contains two integers Di and Mi (1 \\u2264 Di, Mi \\u2264 1000), the damage caused by the spell and the amount of mana needed to use it, respectively. The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Demogorgon\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, if it is impossible to defeat the monster, print a line containing -1. Otherwise, print a line containing the minimum amount of mana needed to defeat the monster.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tGooglbook is a famous IT company that opened an office in your town this year! Also, Googlbook has just offered interviews to an internship position in the company!\\n\\nTo be interviewed, you need to send some personal information to the company, that will be used to decide who will earn the position. You sent all information they need except one: your API (Academic Performance Index). To get things worse, Student\\u2019s Portal, the system that provide your API, is not working!\\n\\nFortunately, you remember all the grades you got in all M subjects you coursed, as well their workloads. You also remember how the API is calculated:\\n\\n\\n\\n, where N1, N2, ..., NM are your grades in each subject, and C1, C2, ..., CM are the workload of the respective subjects.\\n\\nGiven the grades you got and the workload of each subject, determine your API, so you can send it to Googlbook as soon as possible!\\n\\t\\t\\t\",\n    \"id\": 2533,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains integer M (1 \\u2264 M \\u2264 40), the number of subjects you coursed. Each of the next M lines describe a subject. Each line contains two integers Ni and Ci (0 \\u2264 Ni \\u2264 100, 30 \\u2264 Ci \\u2264 120), indicating the grade you got in that subject and its workload, respectively.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Internship\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing your API. Round and print it with exactly 4 decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe national math exam is done every leap year in Nlogonia. Every citizen is evaluated, so it is possible to study the development of logic and math in the country along the years.\\r\\n\\r\\nAfter their exams are graded, the citizens are sorted according to their grades (the higher the grade, the better the citizen). They get discounts in their taxes according to their positions in this rank.\\r\\n\\r\\nThe Statistic Central Office (SCO) is in charge of processing the grades obtained in the exam. This year, however, Vasya, one of the people in charge, is at the hospital, and so you were hired to finish his job.\\r\\n\\r\\nWrite a program that, given the number of citizens and their grades, answers queries informing the grade of the citizen that is ranked at a given position.\\n\\t\\t\\t\",\n    \"id\": 2534,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N (1 \\u2264 N \\u2264 100) and Q (1 \\u2264 Q \\u2264 100), the number of citizens and the number of queries.\\r\\n\\r\\nEach of the next N lines contains the grade ni obtained by the i-th citizen (0 \\u2264 ni \\u2264 30000).\\r\\n\\r\\nEach of the next Q lines contains a position pi.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"General Exam\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print, for each query, a line containing the grade of the citizen that is ranked at position pi.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tCarmem Lucr\\u00e9cia is a very lonely person. Every Saturday morning she walks alone on the streets of Nlog\\u00f4nia\\u2019s capitol. During her walks, she always thinks about life and about how cold Nlogonian people are.\\r\\n\\r\\nThis time, however, the walk was not as always. There were some sound cars announcing the XVIII Nlogonian Puppies Adoption Fair. This event would change Carmem\\u2019s life forever.\\r\\n\\r\\nDecided to find a doggy buddy, Carmem Lucr\\u00e9cia went to the fair and started to see her options.\\r\\n\\r\\nThere are exactly N puppies available to adoption. Carmem Lucr\\u00e9cia is really picky, and has a list of requirements for her new buddy:\\r\\n\\r\\n\\r\\n\\tIts species must be cachorro (Portuguese for dog);\\r\\n\\tIt must have a composed name (i.e., its name must contain more than one word);\\r\\n\\tAt least one of the words in its name must have the same initial character of its breed.\\r\\n\\r\\n\\r\\nThe attendant was really confused by the requirements, and so he asked you to write a program to help him.\\n\\t\\t\\t\",\n    \"id\": 2535,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integer N (1 \\u2264 N \\u2264 100), the number of puppies available for adoption. The next 4N lines describe the puppies.\\r\\n\\r\\nEach puppy is described by three lines. The first line contains the species of the animal. The second line contains its breed, and the third line contains its name. Each description of a puppy is followed by a blank line.\\r\\n\\r\\nEvery line in the input contains lowercase letters, numbers and spaces only. No line has more than 100 characters. No line starts nor ends with spaces, and there are no consecutive spaces.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Adoption Fair\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the total number of puppies that fulfill Carmem Lucr\\u00e9cia's requirements.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tFHBZMIPS is a new processor developed by Neboscorp (r). Its internal memory contains only one register r, with 8 bits. Its value is always interpreted as an unsigned integer, i.e., it is possible to represent integers from 0 to 255 in its register.\\r\\n\\r\\nThe initial value in the register is 0. Also, FHBZMIPS supports the following operations:\\r\\n\\r\\n\\r\\n\\tadd n: Adds n units to the register (r \\u2190 r + n)\\r\\n\\tsub n: Subtract n units from the register (r \\u2190 r - n)\\r\\n\\tmul n: Multiply its value by n (r \\u2190 r \\u00d7 n)\\r\\n\\tdiv n: The register receives the quotient of the division of its value by n (r \\u2190 r \\u2215 n)\\r\\n\\tand n: Bit-wise AND with the value n (r \\u2190 r AND n)\\r\\n\\tor n: Bit-wise OR with the value n (r \\u2190 r OR n)\\r\\n\\txor n: Bit-wise eXclusive-OR with the value n (r \\u2190 r XOR n)\\r\\n\\tgotoif n I: If the value in the register is greater than or equal to n, go to instruction number I (Jump to I if r \\u2265 n)\\r\\n\\thalt: Finish the program (Halt)\\r\\n\\r\\n\\r\\nOverflow occurrences, that occur when it is not possible to represent the result of some operation in the register, are treated the same way other processors do, where only the result modulo 256 is kept. So, for example, if the register contains 240 and the instruction add\\u00a020 is executed, then the register now contains 4. If the register contains 0 and the instruction sub\\u00a02 is executed, then the register now contains 254. If the register contains 25 and mul\\u00a025 is executed, then it now contains 113.\\r\\n\\r\\nMarcelo wrote a program in FHBZMIPS\\u2019 assembly. Your task is to determine the value in the register after the program finishes, or indicate that the program will be executed infinitely.\\n\\t\\t\\t\",\n    \"id\": 2536,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 100), the number of instructions in the program. Next N lines describe the program, an instruction per line.\\r\\n\\r\\nEach line starts with an integer indicating the number i of the instruction. It is guaranteed that this number is sequential, i.e., the first instruction is numbered 1, the second one is numbered 2, and so on. This number is followed by the description of the instruction, as shown in the table above. Where it applies, 0 \\u2264 n \\u2264 255, 1 \\u2264 I \\u2264 N, and I\\u2260i.\\r\\n\\r\\nIt is guaranteed that there is only one halt in the program, and it is always its last instruction, i.e., instruction number N. It is also guaranteed that n\\u22600 for all div instructions.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"FHBZMIPS\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the value in the register after the program finishes. If the program is executed infinitely, print the sentence \\u201cexecucao infinita\\u201d (without quotes).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tT\\u00e9quiToy is relaunching the Giga Drive, an old console very popular in the 90\\u2019s. To celebrate its relaunching, T\\u00e9quiToy will also launch a \\u201cnew\\u201d game this year: Giga Drive ChessBread 2! Actually, Giga Drive CheeseBread 2 is a clone, with a few modifications, of another old-but-famous game. Due to this, the rules are very similar to that old game.\\r\\n\\r\\nIn Giga Drive CheeseBread 2, the game\\u2019s board is a matrix with N rows and N columns. Initially, each cell is empty or contains an olive (?). A match consists of M rounds. At each round, the CPU puts an olive at an empty cell in the board. After that, it asks the players how many olives there are in region of the board between cells (I1,J1) and (I2,J2). In other words, the CPU indicates four integers I1, J1, I2 and J2, and asks the player the total number of olives in all cells in the i-th row and j-th columns such that I1 \\u2264 i \\u2264 I2 and J1 \\u2264 j \\u2264 J2.\\r\\n\\r\\nTo win the game, you must correctly answer the count in all rounds in the match! However, you do not have much time to count the olives, so you decided to write a program to ensure your victory!\\n\\t\\t\\t\",\n    \"id\": 2537,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integers N and M (1 \\u2264 N \\u2264 1000, 1 \\u2264 M \\u2264 105). Next N lines contains N integers each, describing the initial board. Value 1 indicates an olive, while value 0 indicates an empty cell. Next 2\\u00d7M lines describe the rounds, two lines per round. The first line contains two integers i and j (1 \\u2264 i, j \\u2264 N), indicating the insertion of an olive at the cell in the i-th row and j-th column. It is guaranteed that that cell is empty before this round. The second line of each turn contains four integers I1, J1, I2 e J2 (1 \\u2264 I1 \\u2264 I2 \\u2264 N, 1 \\u2264 J1 \\u2264 J2 \\u2264 N), describing the region from cell (I1, J1) to the cell (I2, J2).The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"GigaDrive\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print, for each round, a line containing the total number of olives in the given region.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tAnal\\u00f3gim\\u00f4n Go! is a very popular game. During his quest, the player travels across many cities capturing virtual little monsters called anal\\u00f3gim\\u00f4ns. The cities contain specifics locations called gyms. When entering a gym, a player may try to put one of his anal\\u00f3gim\\u00f4ns inside the gym.\\r\\n\\r\\nThere are two integers associated to each anal\\u00f3gim\\u00f4n: its Combat Power (CP) and its Number of Attacks (NA). Also, there is an integer associated to each gym, its Power Interval (PI). When trying to put an anal\\u00f3gim\\u00f4n inside a gym, the game calculates the number of an\\u00e1logim\\u00f4ns that are already in the gym and which difference of its CP and the CP of the anal\\u00f3gim\\u00f4n being put is at most PI. If this number is less than or equal to the NA of the anal\\u00f3gim\\u00f4n being put, then that anal\\u00f3gim\\u00f4n is successfully put in the gym. Otherwise, it is not put in the gym. In both cases, anal\\u00f3gim\\u00f4ns that were already in the gym continue in the gym.\\r\\n\\r\\nFor example, consider a gym with PI=3 containing anal\\u00f3gim\\u00f4ns whose CPs are equal to 5, 8, 13 and 20. If a player tries to put an anal\\u00f3gim\\u00f4n with CP=10 and NA=4, the game will count how many anal\\u00f3gim\\u00f4ns are in the gym with PC between 10 - 3 = 7 and 10 + 3 = 13, inclusive. Since there are 2 of such anal\\u00f3gim\\u00f4ns, the little monster is successfully put in the gym, since 2 \\u2264 4. The gym now contains anal\\u00f3gim\\u00f4ns whose CPs are equal to 5, 8, 10, 13 and 20.\\r\\n\\r\\nGiven the information about a gym and the anal\\u00f3gim\\u00f4ns tried to be put in it, determine how many anal\\u00f3gim\\u00f4ns will be inside the gym after all attempts. Consider that, initially, the gym is empty (i.e., it has no anal\\u00f3gim\\u00f4n inside it).\\n\\t\\t\\t\",\n    \"id\": 2538,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers PI and M (1 \\u2264 PI, M \\u2264 105), the gym\\u2019s PI and the number of attempts, respectively. Next M lines describe an anal\\u00f3gim\\u00f4n begin tried to be put in the gym, in the order the attempts occur. Each line contains two integers CP and NA (1 \\u2264 CP, NA \\u2264 105), describing the anal\\u00f3gim\\u00f4n\\u2019s CP and NA, respectively. There are no two anal\\u00f3gim\\u00f4ns with the same CP.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Gym\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing an integer indicating how many anal\\u00f3gim\\u00f4ns will be inside the gym after all attempts.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThe Nlogonian Basketball Team will play the final match of the Basketball World Cup, and the match is about to begin! Right now, the N players are warming up before entering the field.\\r\\n\\r\\nPlayers are numbered from 1 to N. Initially, the players are arranged in a line in the edge of the field. The players will enter the field one at a time, in the same order as their number. Hence, player 1 is the first one to leave the line and enter the field. After that, player 2 will leave the line and enter the field, and so on.\\r\\n\\r\\nWhen leaving the line, each player salutes every other player that are in front of him in the line with a high five. For example, consider that N=4 and the initial line is 3\\u00a01\\u00a02\\u00a04, where player 4 is the nearest one to the field. Player 1, while going to the field, will salute players 2 and 4 with a high five. Then, player 2 will salute with a high five only the player 4, and will then leave the line. Player 3 also salutes player 4 only (notice that both players 1 and 2 have left the line already). Finally, the last player does not salute anyone.\\r\\n\\r\\nYour task is to determine the total number of high fives that will occur.\\n\\t\\t\\t\",\n    \"id\": 2539,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integer N (1 \\u2264 N \\u2264 105). The second line contains N integers, indicating the order the players are initially in the line. The last integer given in the line is the nearest player to the field.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"High Five\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the total number of high fives that will occur.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tAnal\\u00f3gim\\u00f4n Go! is a very popular game. The players of this game are divided in three teams: Team Valor, Team Instinct and Team Mystic, which are led by their leaders, Kandera, Esparky and Blanque, respectively. Of course, you belong to one of these teams!\\r\\n\\r\\nThe leader of your team is being accused of cheating by incorrectly managing the candies the team receives from the Professor. This fact created a big controversy among the players in the team: some players state that the leader really cheated, must suffer an impeachment and must leave his position as a leader, while other players state that he did not cheat, that the accusation is false and he must keep leading the team.\\r\\n\\r\\nTo solve this situation, a poll will be held with all N players in your team. Each player must vote if the impeachment must or must not occur. If the number of votes for the impeachment is greater than or equal to 2/3 (two thirds) of the total number of players in the team, the leader will lost his position. Otherwise, the accusation will be filed and he will keep leading the team.\\r\\n\\r\\nGiven the votes of all players, determine the result of the poll.\\n\\t\\t\\t\",\n    \"id\": 2540,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integer N (1 \\u2264 N \\u2264 105), the number of players in your team. Next line contains N integers v1, ..., vN (vi = 0 or 1), indicating the votes of each player. The value 1 indicates a vote for the impeachment, while value 0 indicates a vote against it.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Leader's Impeachment\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing the word impeachment if the leader must leave his position, or acusacao\\u00a0arquivada otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tIngrest is a augmented reality game widely played across the world. In this game, two factions battle each other in order to control areas in the world.\\r\\n\\r\\nThe game map can be described as a plane. There are N portals in the map. A portal i can be described as a point (xi,yi) on the plane.\\r\\n\\r\\nFor each pair of distinct portals, a player can create a link between them.\\nWhen a link between two portals is created, a line segment connecting them is\\ndrawn on the map. Given three distinct portals, when there is a link between each pair of these three portals, a control field is created. A control field is defined as the triangle formed by the links connecting the portals. The size of a control field is defined as the area of this triangle.\\r\\n\\r\\nAccording to the game rules, two distinct control fields cannot have a positive-area intersection. Hence, two control fields may share at most a single link or a single portal.\\r\\n\\r\\nGiven the positions of all portals in the map, determine the largest possible sum of the sizes of the control fields that can be created.\\n\\t\\t\\t\",\n    \"id\": 2541,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (3 \\u2264 N \\u2264 105) giving the number of portals. The next N lines contains two integer xi and yi each (0 \\u2264 xi, yi \\u2264 104), indicating the coordinates of the portals in the map.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Ingrest\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the largest possible sum of the sizes of the control fields that can be created. Round and print the answer with exactly two decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIu-di-oh! is a card game really popular among kids! Every Iu-di-oh! player has his own deck containing many cards. Each card contains N attributes (such as power, speed, smartness, etc.). Attributes are numbered from 1 to N and are given as positive integers.\\r\\n\\r\\nA match of Iu-di-oh! is always played by two players. At the beginning of the match, each player chooses exactly one card from his deck. Then, an attribute is randomly chosen. The player whose the chosen attribute is greater in the card he choose wins the match. If the such attribute is equal in both cards, there is a tie.\\r\\n\\r\\nMarcos and Leonardo are in the big final of the Brazilian Iu-di-oh! championship. The great prize is a Dainavision (that is almost as good as a Plaisteition 2!). Given the deck of both players, the card each one chooses and the chosen attribute, determine the winner!\\n\\t\\t\\t\",\n    \"id\": 2542,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 100), the number of attributes each card contains. The second line contains two integers M and L (1 \\u2264 M, L \\u2264 100), the number of cards in Marcos\\u2019 and Leonardo\\u2019s deck, respectively.\\r\\n\\r\\nNext M lines describe Marcos\\u2019 deck. His cards are numbered from 1 to M, and i-th line describes the i-th card. Each line contains N integers ai,1,ai,2,..., ai,N (1 \\u2264 ai,j \\u2264 109). Integer ai,j indicates the j-th attribute of the i-th card.\\r\\n\\r\\nNext L lines describe Leonardo\\u2019s deck. His cards are numbered from 1 to L and are described in the same way as Marcos\\u2019 deck.\\r\\n\\r\\nNext line contains two integers CM and CL (1 \\u2264 CM \\u2264 M, 1 \\u2264 CL \\u2264 L), the cards chosen by Marcos and Leonardo, respectively. Finally, the last line contains an integer A (1 \\u2264 A \\u2264 N) indicating the chosen attribute.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Iu-Di-Oh!\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing \\u201cMarcos\\u201d if Marcos wins the match, \\u201cLeonardo\\u201d if Leonardo wins the match, or \\u201cEmpate\\u201d in the case of a tie (without quotes).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tLike many Computer Science students, you like to play the most popular electronic games nowadays: Liga of Legendas (LOL) and Contra-Strike (CS). Although you also play LOL, what you really like to do is to use all your skills to defeat the terrorist forces in Contra-Strike! You are so good at combating terror that you are often compared with the president of the USA who announced the capture of a famous real-life terrorist.\\r\\n\\r\\nSince your skills are beyond compare, videos of your matches (your famous gameplays) appears often in UFPR Gaming, a webpage that publishes gameplays from the students of our university.\\r\\n\\r\\nThe page publishes many videos every day. Thus, it may be hard to find and count all your videos published already. However, since you are also a programmer, you decided to write a computer program to help you with this task. Given the list of gameplays published by the page, determine how many of them are videos of you playing Contra-Strike.\\n\\t\\t\\t\",\n    \"id\": 2543,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and I (1 \\u2264 N \\u2264 104, 1000 \\u2264 I \\u2264 9999), the number of gameplays published by the page and your university ID, respectively.\\r\\n\\r\\nThe next N lines describe the published videos. Each gameplay is described by two integers i and j (1000 \\u2264 i \\u2264 9999, j=0 or 1), where i is the author\\u2019s university ID and j=0 if the gameplay is a Contra-Strike one, or j=1 if it is a Liga of Legendas one.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"UFPR Gaming\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing a number indicating how many videos of you playing Contra-Strike were published by the page.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tKage Bunshin no Jutsu (or the \\\"Shadow Clone Technique\\\", for English speakers) is a ancient technique often used during ninja battles.\\r\\n\\r\\nWhen used, the technique creates a copy identical to its user. That way, if a given ninja uses the technique, a copy of that ninja comes to existence, so there are two of the same ninja (the original one and his copy).\\r\\n\\r\\nThe technique is always executed by all ninjas existing in the moment. That way, if the technique is used again, there will be four ninjas in total (the two previous ones and two new copies), and so on.\\r\\n\\r\\nThere are N copies of a given ninja (including the original one). Your task is to determine how many times the technique was used.\\n\\t\\t\\t\",\n    \"id\": 2544,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case contains a line with the number N (1 \\u2264 N \\u2264 106). It is guaranteed that N is such that it is possible to get exactly N copies of a ninja (including the original one).The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Kage Bunshin no Jutsu\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line with the number of times the technique was used.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tIn the year 2569, Vasya receives a great birthday present from his mother, the source-code of his favorite video-game, Solitaire Spider. Vasya goes directly to his computer with 4096 processor cores, inserts the disk, types ls in the directory of the source-code and realizes that it is composed by N files and a Manyfile.\\r\\n\\r\\nA Manyfile is something like a cake recipe used to compile the source code. By entering the command many, the Manyfile is read and the files are compiled, such that the maximum number of cores are used simultaneously. If everything was fine, this process would be really fast, since each source file takes exactly one minute to be compiled. However, the compilation of some files depend on the conclusion of others, what may make it impossible to compile all files simultaneously.\\r\\n\\r\\nConsider the compilation of Solitaire Spider finished when all its N files are compiled. Knowing which files depend on which, write a program that calculates how many minutes it will take to compile the game.\\n\\t\\t\\t\",\n    \"id\": 2545,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 1000), the number of source files of Solitaire Spider. The files are numbered from 1 to N. The next N lines describe the files. i-th line contains an integer Mi (0 \\u2264 Mi < N) followed by Mi integers between 1 and N, all different than i, representing the index of the files which file i depends on.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Manyfile\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing the total time, in minutes, it will take to compile Solitaire Spider. If it is impossible to compile it, print -1.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tIt is getting harder to mrs. Marie to manage the allowance she gives to her grandchildren. Because of that, she asked you to write a program to help her with this task.\\r\\n\\r\\nMrs. Marie has N grandchildren, numbered from 1 to N. Initially, grandchild i earns Mi dollars as allowance from his grandma. Mrs. Marie may increase the allowance given to some of his grandchildren many times. When she wants to increase the allowance, she chooses two integers i and j and increases the allowance of all her grandchildren with numbers between i and j, inclusive, by the same amount v. For example, if she decides to increase the allowance by v=10 dollars for all grandchildren with numbers between i=1 and j=3, then the allowance of the grandchildren numbered 1, 2 and 3 will be increased by 10 dollars each.\\r\\n\\r\\nAlso, at any time, she may want to ask who earns the most among the grandchildren between numbers i and j, inclusive. Help mrs. Marie to answer all her queries!\\n\\t\\t\\t\",\n    \"id\": 2546,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and Q (1 \\u2264 N \\u2264 105, 1 \\u2264 Q \\u2264 106), the number of grandchildren and the number of operations, respectively. Next line contains N integers M1,M2,...,MN (1 \\u2264 Mi \\u2264 200), the initial allowance of each grandchild. Next Q lines describe an operation each. An operation in the form A i j v (1 \\u2264 i \\u2264 j \\u2264 N, 1 \\u2264 v \\u2264 200) indicates an allowance increase. An operation in the form C i j (1 \\u2264 i \\u2264 j \\u2264 N) indicates a query.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Allowance\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print, for each query, a line containing the number of the grandchild who earns the most among the grandchildren between numbers i and j, inclusive. If there is more than one grandchild earning the most among them, print the one with the smallest number.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tEveryone in Nlog\\u00f4nia is really excited with the opening of Ricardo Barreiro World, the newest amusement park in the country. Its roller coaster, the fastest in the continent, is being widely advertised on TV and Radio. It\\u2019s the attraction everyone, from kids to grandmas, wants to ride.\\r\\n\\r\\nUnfortunately, some restrictions were imposed by the government during the attraction\\u2019s homologation. For safety reasons, there is a minimum and a maximum height people must have to ride the roller coaster.\\r\\n\\r\\nIn the inauguration day, every guest filled a register in which they indicated their heights. In order to reduce lines and optimize the operation, you were hired to write a program that, given the number of guests, the minimum and maximum allowed height, and the height of every guest, determine how many guests are allowed to ride the roller coaster.\\n\\t\\t\\t\",\n    \"id\": 2547,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains three integers N (1 \\u2264 N \\u2264 100), Amin and Amax (50 \\u2264 Amin \\u2264 Amax \\u2264 250), the number of guests, the minimum and the maximum allowed height, respectively, in centimeters.\\r\\n\\r\\nEach of the next N lines contains an integer (50 \\u2264 Ai \\u2264 250), the height of the i-th guest, in centimeters.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Roller Coaster\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing the number of guests allowed to ride the roller coaster.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tVasya and Petya are visiting the 3D virtual museum of history of the capital. To have fun, they decided to do a little prank. The prank consists on damaging M models among the N exposed ones. Vasya illegally downloads the model\\u2019s file, Petya opens it in a 3D editor and replaces historical details by Fibonacci numbers, and then he puts it back into the museum.\\r\\n\\r\\nEvery time a model is damaged, its value is nullified. Since the duo is really evil, they decided to make the museum have the highest loss possible. Given N, M and the value of each exposed models, write a program to calculate the highest loss they can make.\\n\\t\\t\\t\",\n    \"id\": 2548,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers, N (0 \\u2264 N \\u2264 103) and M (0 \\u2264 M \\u2264 N). The second line contains N integers (between 0 and 1000), the value each model has (in nlogonian dollars), in non-decreasing order.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"3D Virtual Museum\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing the highest possible loss they can make.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tVasya and Petya work as secretaries of the Breading of Crabs Course (BCC) in the Physic University of Shallow Beach (UFPR, in Nlogonian). Every year they welcome N freshmen that need to receive their credentials to access their system.\\r\\n\\r\\nEach student gets an username based on his full name. The username is generated by concatenating the first letters of each word of the name, and then attaching it to the year he entered the university. For example, if Fulado de Tal entered the university in 1998, his username will be fdt1998.\\r\\n\\r\\nProblems appear when more than one student must have the same username. In that case, one of the students gets an username according to the rules above, while the other ones get non-standard usernames, i.e., usernames that do not follow the rules above.\\r\\n\\r\\nMany freshmen entered the university this year. Vasya and Petya asked for your help to write a program that, given the full name of all freshmen and the current year, determine how many students will get non-standard usernames.\\n\\t\\t\\t\",\n    \"id\": 2549,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N (1 \\u2264 N \\u2264 5\\u00d7104) and Y (1 \\u2264 Y \\u2264 9999), the number of freshmen and the current year, respectively.\\r\\n\\r\\nEach of the next N lines contain the full name of a freshman. Each line contains at most 100 characters. Each line contains lowercase letters and spaces only. There is at least one letter in each line.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Usernames\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with the number of students that will get a non-standard username.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tThe Federal University of the Pinheiros Republic (FUPR) is building a new campus in the capital.\\r\\n\\r\\nRight now, all N buildings of the campus are built and ready to open! However, no paths between those buildings were built. Today, it is impossible to leave a building and go to another building in the campus!\\r\\n\\r\\nTo solve this problem, the FUPR dean wants to build paths between pairs of buildings such that all buildings are connected, i.e., such that, using one or more paths, it is possible to leave any building and go to any other building in the campus.\\r\\n\\r\\nHowever, due to the complicated geography of the capital, it might not be possible to build a path between any pair of buildings. Given the list of paths that can be built and the cost of building each path, determine wheter it is possible to connect all buildings, and, if it is, the minimum total cost needed to build the necessary paths.\\n\\t\\t\\t\",\n    \"id\": 2550,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and M (2 \\u2264 N \\u2264 1000, 0 \\u2264 M \\u2264 N(N-1)/2), the number of buildings and the number of paths that can be built, respectively. Buildings are numbered from 1 to N. The next M lines describe the paths. Each line contains three integers A, B and C (1 \\u2264 A, B \\u2264 N, A\\u2260B, 1 \\u2264 C \\u2264 104), indicating it is possible to build a path between buildings A and B and its cost is C dollars. It is guaranteed that, for each pair of buildings, at most one path can be built between them.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"New Campus\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, if it is not possible to connect the buildings, print a line containing \\u201cimpossivel\\u201d (without quotes). Otherwise, print a line containing the minimum total cost needed to connect all buildings, in dollars.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe great Curitiban street marathon will occur in the next few days! Many athletes are training for the big day! Fl\\u00e1vio is one of these athletes. He trains daily, hoping to be well placed in the marathon. He runs every morning on the streets near to his house.\\r\\n\\r\\nHis trainings are monitored by an app installed on his smartphone. After each training, Fl\\u00e1vio knows both the duration and the distance he ran. With these information, he can determine his average speed in the training.\\r\\n\\r\\nFl\\u00e1vio is really concerned about the evolution of his performance in his trainings, and, in particular, about the records of his average speed. Such record is beaten in some training when the average speed of that training is greater than all average speeds of the previous trainings. Help Fl\\u00e1vio to determine in which trainings he beat his record.\\n\\t\\t\\t\",\n    \"id\": 2551,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 30), the number of trainings. Consider that the trainings were done in days 1, 2,...,N. The next N lines describe the trainings. Line i (1 \\u2264 i \\u2264 N) contains two integers Ti and Di (1 \\u2264 Ti, Di \\u2264 100), the duration of the training (in minutes) and the distance ran during it (in kilometers).The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"New Record\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a list of integers indicating the days in which the record was beaten. Each day must be printed in a single line. Print them in ascending order. Please notice that day 1 must always be printed.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe Nlogonian Aquatic Surf Championship, to be hosted in Bonita Horeleninha (BH) city, is about to start! The game CheeseBreadSweeper is very popular in this town!\\r\\n\\r\\nThe game board consists on a matrix with N rows and M columns. Each cell contains a Cheese Bread or the number of Cheese Breads present in its adjacent cells. A cell is adjacent to another if it is immediately on the left, the right, above or bellow the cell. Please notice that, if a cell does not contain a Bread Cheese, then it must have a number from 0 to 4, inclusive.\\r\\n\\r\\nGiven the positions of the Cheese Breads, determine the game board!\\n\\t\\t\\t\",\n    \"id\": 2552,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains integers N and M (1 \\u2264 N, M \\u2264 100). Next N lines contains M integers each, separated by spaces, describing the Cheese Breads on the board. The j-th integer in the i-th line is 1 if there is a Cheese Bread at row i and column j of the board, or 0 otherwise.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"CheeseBreadSweeper\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print N lines with M integers each, not separated by spaces, describing the board\\u2019s configuration. If a cell contains a Cheese Bread, print 9 for it; otherwise, print the number the cell must contain.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tThe Nlogonian Aquatic Surf Championship is about to start! Next year, the big final will be hosted in the city of Fo\\u00e7a do Iguachim (FdI)! The city is famous due to the National Park of Iguachim, that has many attractions. The most famous of them is the Cataratas of Iguachim, one of the most famous touristic spots in Nlogonia!\\r\\n\\r\\nThe park has N attractions, numbered from 1 to N. The attractions are arranged in a straight line in the park. Hence, the park can be described as a large street with entries for the attractions 1, 2, ..., N, where attraction 1 is near to the park\\u2019s entrance and attraction N is near to the park\\u2019s exit. To keep the order in the park, the attractions must be visited in order, from the entrance to the exit. Hence, if you visit attraction i, you are not allowed to go back and visit attractions 1, 2, ..., i-1.\\r\\n\\r\\nAlso, there are two types of tickets in the park: green tickets and yellow tickets. Each of the N attraction requires, as a visitation fee, some amount of tickets of exactly one type. When you enter an attraction, the park may present you with some amount of tickets of the other type, i.e., an attraction that requires green tickets to be visited may give you yellow tickets as a gift, and vice-versa. You are not allowed to enter an attraction if you do not have enough tickets to visit it, but you may choose not visiting it even if you have enough tickets to do so.\\r\\n\\r\\nHowever, you wants to enjoy the park the maximum as possible! Given the initial amount of tickets of each type you have and the description of each attraction in the park, determine the maximum number of attractions you can visit.\\n\\t\\t\\t\",\n    \"id\": 2553,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integer N (1 \\u2264 N \\u2264 40). The second line contains two integers G and Y (0 \\u2264 G, Y \\u2264 20), the number of green tickets and yellow tickets you initially have. The next N lines describe the attractions, in the order from the entrance to the exit. Each line contains two integers Gi and Yi (-20 \\u2264 Gi, Yi \\u2264 20, Gi\\u00d7Yi < 0). If Gi < 0, the attraction requires |Gi| green tickets to be visited, and, if visited, presents you with Yi yellow tickets. Otherwise, it requires |Yi| yellow tickets and, if visited, presents you with Gi green tickets.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Tour in FdI\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing an integer indicating the maximum number of attractions you can visit.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe Nlogonian Aquatic Surf Championship, to be hosted in Bonita Horeleninha (BH) city, is about to start! Before going to BH, you and your N-1 friends decided to go for a pizza, so you can relax and have some fun (and, of course, eat!).\\r\\n\\r\\nAt this moment you are choosing the date for the event. To make sure everyone can enjoy it, it was decided that the meeting is to be set in a day so that all the N people can show up at the pizzeria on that date.\\r\\n\\r\\nGiven the list of dates considered for the event and the information about which people can show up at which dates, determine if the event can happen and, if it can, its date. If more than one date is possible, the event must occur as early as possible.\\n\\t\\t\\t\",\n    \"id\": 2554,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains integers N and D (1 \\u2264 N, D \\u2264 50), the number of people and the number of considered dates. People are numbered from 1 to N. Next D lines describe the considered dates. Each line begins with a date in the format day\\u2215month\\u2215year. The line is followed by N integers p1,p2,...,pN. The integer pi is 1 if the i-th person can show up at the considered date, or 0 otherwise. It is guaranteed that dates are always valid, and there aren\\u2019t leading zeros. Also, all dates are given in order, from the earliest to the latest day.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Pizza Before BH\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print one line with the date in the format day\\u2215month\\u2215year, exactly as it appears in the input. If it is not possible to hold the event, print \\u201cPizza antes de FdI\\u201d (without quotes).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tYour university is promoting the University Quiz, a question & answer game about the university! Fernando, a young Computer Science student, is the participant today!\\r\\n\\r\\nThere are N questions, numbered from 1 to N. Fernando must answer them in order, and, if he answers question i correctly, he wins Pi dollars as a prize! However, if he answers any question incorrectly, the game is over. Hence, if Fernando incorrectly answers question 1, the game is over and he wins no prize at all; if he correctly answers question 1 but incorrectly answers question 2, he wins the prize for question 1 only; if he correctly answers questions 1 and 2 but incorrectly answers question 3, he wins the prizes for questions 1 and 2 only; and so on. The game also finishes when he correctly answers all N questions. In this case, he wins the sum of the prizes for all of them.\\r\\n\\r\\nFernando can use up to K skips. When skipping a question, he wins the prize of that question and the game continues. In practice, the effect of skipping a question is the same as answering it correctly, but without really answering it. For each question i, Fernando knows that the chance of answering it correctly (not skipping it), is Ci %. He wants to determine which questions he should skip (in the case he reaches them) before the Quiz starts. Help him to determine which questions he should skip such that the expected total prize is maximized.\\r\\n\\r\\nIn the first sample input below, his best strategy consists on skipping question 2. By doing so, he has a chance of 50% of winning P1=30 dollars, 50% of winning P2=100 dollars (this chance is not 100% even if he skips this question, since he must have correctly answered the first one to win this prize), and 20% of winning P3=50 dollars. The expected total prize is equal to 0.50 \\u00d7 30 + 0.50 \\u00d7 100 + 0.20 \\u00d7 50 = 75. There is no strategy whose expected total prize is higher.\\n\\t\\t\\t\",\n    \"id\": 2555,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integers N and K (1 \\u2264 N \\u2264 1000, 0 \\u2264 K \\u2264 N), the number of questions and the number of skips Fernando can use. The second line contains N integers P1, P2 ,..., PN (1 \\u2264 Pi \\u2264 100), the prize for each question. The third line contains N integers C1, C2, ...,CN (0 \\u2264 Ci \\u2264 100), indicating the chance of Fernando correctly answering each question i, without skipping it, in %.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"University Quiz\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line with the maximum expected total prize Fernando can win, in dollars, rounded with two decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tTo celebrate the reopening of the Clube de Espanh\\u00f3is Inteligentes (CEI), a big party is happening there at this moment!\\r\\n\\r\\nMateuz is one of CEI members, and he is helping with the organization of the party. Everytime a guest arrives or leaves the party, Mateuz writes down on a paper how many minutes have passed since the beggining of the party until that moment.\\r\\n\\r\\nMateuz just handed the numbers he wrote to CEI\\u2019s presidents, Freitaz and Rodriguez. Notice that the presidents have only got the minutes in wich the guests arrived and left the party. That way, for every given minute, Freitaz and Rodriguez can\\u2019t know if the guest was arriving or leaving at the moment. It is only known that: the party started without any guests; until this moment, nobody arrived at the party more than once; and, at this exactly moment, there are no guests at the party, that is, all of the guests already left (because they are going to participate in a programming competition, but intend on going back to the party later). All the numbers he wrote are different from each other, but are not necessarily in order.\\r\\n\\r\\nYour task is to help Freitaz and Rodriguez to determine the largest possible number of guests that could have been at the pary simultaniously at some moment. Also, determine the longest time (in munutes) in which the largest number of guests could have been at the party simultaniously.\\n\\t\\t\\t\",\n    \"id\": 2556,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. For each test case, the first line contains the integer N (2 \\u2264 N \\u2264 1000), the amount of written numbers. Second line contains N distinct integers m1,m2,...,mN, the numbers wrote down by Mateuz and given to Freitaz and Rodriguez. For each 1 \\u2264 i \\u2264 N, the number mi (1 \\u2264 mi \\u2264 104) indicates a guest arrived or left the party mi minutes after it began.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"CEI's Reopening\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with two integers, separated by a space. The first one is the lagest possible number of guests that could have simultaniously been at the party. The second is the longest time (in minutes) that number of guests could have been at the party simultaniously.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tDuring his great adventure in Westeros, little Jon found a holy book that, according to the legends, was written by the old gods themselves. A particular sentence drawn the attention of the young adventurer:\\r\\n\\r\\n\\u201cThe origin of the one who knows nothing will be revealed when the chosen one solves the riddle imposed by the gods. R+L=J.\\u201d\\r\\n\\r\\nThe riddle really intrigued the boy. Little Jon then started to search for values of R, L and J that satisfy the equation cited in the book.\\r\\n\\r\\nAfter some investigation, the young boy found two of the three cited values. Little Jon must now determine the third value, so the riddle can be solved and \\u201cthe origin of the one who knows nothing\\u201d can be revealed.\\n\\t\\t\\t\",\n    \"id\": 2557,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The only line of each test case contains a string in the form R+L=J. If the value of a variable is known, such value appears in the string instead the variable itself. Otherwise, the letter that indicate the variable appears normally.\\r\\n\\r\\nIt is guaranteed that exactly two of the three values are known. Also, all known values are between 1 and 106, inclusive. There is no leading zeros in the given values.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"R+L=J\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing the value of the unknown variable.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tRicciardi, the vacuum cleaner robot, received orders. It must clean the maximum possible number of the N dusts on the ground and reach the recharge station. It seems to be a trivial task. However, Ricciardi\\u2019s battery is damaged, and it can make only M moves before it exhausts.\\r\\n\\r\\nThe robot is located in a rectangular room with W \\u00d7 H square cells. In one move, it can go to the cell directly above, below, to the left or to the right of its current cell, but only if it does not contain any obstacle. Determined to save energy while finishing its job, Ricciardi asked you to write a program that calculates the maximum number of dusts it can clean.\\n\\t\\t\\t\",\n    \"id\": 2558,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N (1 \\u2264 N \\u2264 8) and M (1 \\u2264 M \\u2264 109). The second line contains two integers W and H (5 \\u2264 W, H \\u2264 100).\\r\\n\\r\\nThe following H lines contains W characters each, describing the room. Obstacles are represented by '#', empty cells by '.' , Ricciardi\\u2019s initial cell by 'R', dusts by '*' and the recharge station by 'S'.\\r\\n\\r\\nRiccardi automatically cleans a dust when passing by it. It can also pass over the recharge station, the same way it can pass over any empty cell.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Vacuum Cleaner Robot\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with one integer only, the maximum number of dusts the robot can collect before going to the recharge station. If the robot cannot reach the station, print -1.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tToday is Friday the 13th! According to traditions, both numbers 13 and 7 are considered unlucky numbers. Due to this, some people are careful about these particular numbers!\\n\\nFlavio has a sequence of N integers numbers, numbered from 1 to N. He wants to execute many operations with it. There are three possible types of operations:\\n\\n\\n\\tGiven an integer i and an integer v, replace i-th number by v;\\n\\tGiven integers i, j, z and v, with z=13 or 7, replace every occurrence of number z by v between i-th number and j-th number, inclusive;\\n\\tGiven integers i and j, calculate the sum of all elements in the sequence between i-th number and j-th number, inclusive.\\n\\n\\nFor example, if Flavio\\u2019s initial sequence is (2, 13, 5, 13, 7) and we replace the 1-th number by 3, the sequence is now (3, 13, 5, 13, 7). If every occurrence of 13 between 4-th and 5-th number are replaced by 6, the sequence is now (3, 13, 5, 6, 7). Finally, the sum of all elements between 2-th and 4-th number is equal to 13 + 5 + 6 = 24.\\n\\nFor each operation of the third type, calculate and print its answer.\\n\\t\\t\\t\",\n    \"id\": 2559,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains an integer N (1 \\u2264 N \\u2264 2\\u00d7105). The second line contains N integers a1,a2,...,aN, Flavio\\u2019s initial sequence (0 \\u2264 ai \\u2264 103). The third line contains an integer Q (1 \\u2264 Q \\u2264 2\\u00d7105), the number of operations. Next Q lines describe the operations. Each operation is described by a line containing:\\n\\n\\n\\t1 i v (1 \\u2264 i \\u2264 N, 0 \\u2264 v \\u2264 103), indicating the replacement of the i-th number by v; or\\n\\t2 i j z v (1 \\u2264 i \\u2264 j \\u2264 N, z=13 or 7, 0 \\u2264 v \\u2264 103), indicating the replacement of all occurrences of number z between i-th number and j-th number (inclusive) by v; or\\n\\t3 i j (1 \\u2264 i \\u2264 j \\u2264 N), indicating the sum of all elements between i-th number and j-th number, inclusive.\\n\\nThe input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Friday The 13th\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, for each operation of the third type, print a line containing its answer.\\n\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tNlog\\u00f4nia is hosting the Aquatic Surf World Cup this month. In this sport, the athlete stays N minutes inside an aquarium doing some acrobatics with his surfboard, trying to impress the judges.\\r\\n\\r\\nThe judges give a grade to the athlete each minute. Thus, an athlete receives a sequence of N grades for each performance.\\r\\n\\r\\nA battery (of grades) is a continuous sequence of B grades. The result of a battery is equal to the sum of the grades in it, except for the highest and the lowest grade, that are discarded. Hence, the result of the battery (2, 3, 7, 5), for example, is equal to 8.\\r\\n\\r\\nThe final score of the athlete is equal to the sum of the results of all batteries of size B in his sequence of N grades. Hence, if the grades are indexed from 1 to N, we sum the result of the battery with the grades from 1 to B, with the result of the battery with the grades from 2 to B+1, etc., until the battery with the grades from N-B+1 to N.\\r\\n\\r\\nGiven the sequence of grades, determine the final score.\\n\\t\\t\\t\",\n    \"id\": 2560,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and B (3 \\u2264 B \\u2264 N \\u2264 2\\u00d7105). The second line contains N integers ni (1 \\u2264 ni \\u2264 100), indicating, in order, the sequence of grades.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Aquatic Surf\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing the final score.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tVasya and Petya love scavenger hunt. The game is assisted by a dedicated website, where they can access the coordinates of the treasures, directions to go and hints on how to find them.\\r\\n\\r\\nAfter years of experience and more than 8192 treasures found, Vasya decided to not only find them, but also hide them. Ambitious, he wants to create an epic experience, to be remembered for the rest of the life of the ones who will try to find them. The boy decided to unite his knowledge on geometry with his hobby to create such terrific challenge.\\r\\n\\r\\nThe hunters will receive the description of two rectangles R0 and R1. The treasure is hidden in the intersection area of R0 with R1.\\r\\n\\r\\nHowever, there are some rules that must be followed in order to the challenge to be included in the website. The search area must not exceeded 10 m2. Hence, Vasya asked Petya to check the quality of the challenge. Petya must state whether the search area has adequate size, the rectangles has no intersection, the search area is too large, it is just a line segment or it is just a point.\\r\\n\\r\\nPetya under graduated in Culinary, and hence is not that good in geometry. He cannot solve his friend\\u2019s problem and is asking for your help.\\n\\t\\t\\t\",\n    \"id\": 2561,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. Each test case contains two lines. Each line describe a rectangle with four integers giving two coordinates (in meters) X0, Y0, X1 and Y1 (0 \\u2264 X0 < X1 \\u2264 1000 and 0 \\u2264 Y0 < Y1 \\u2264 1000), the coordinates of two opposite vertices of the rectangle.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Treasure\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing: adequada if the search area has adequate size and is not a line segment nor a point; linha if it is just a line segment; ponto, if it is just a point; inexistente, if it does not exist; or grande, if it is too large.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tAnal\\u00f3gim\\u00f4n Go! is a very popular game. During his quest, the player travels across many cities capturing virtual little monsters called anal\\u00f3gim\\u00f4ns.\\r\\n\\r\\nThere are many anal\\u00f3gim\\u00f4n species. Each species is associated with (exactly) one type, such as fire, water, electric, etc. Some species might be of the same type, while others might be of different types.\\r\\n\\r\\nIn the game\\u2019s official manual there is the information that some species are of the same type. However, the manual may not present this information for all pairs of species that are of the same type. For example, if the manual indicates that species a is of the same type of species b, and species b is of the same type of species c, then species a and c are certainly of the same type, even if this information is not present in the manual.\\r\\n\\r\\nYou have just captured an anal\\u00f3gim\\u00f4n of a certain species. Your task is to determine the smallest possible number of species that are certainly of the same type of the one you captured, according to the information present in the manual.\\n\\t\\t\\t\",\n    \"id\": 2562,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and M (1 \\u2264 N \\u2264 1000, 0 \\u2264 M \\u2264 N(N-1)/2), the number of species and the number of information present in the manual, respectively. Species are numbered from 1 to N. The next M lines contains an information each. Each line contains two integers a and b (1 \\u2264 a, b \\u2264 N, a\\u2260b), indicating that species a and b are of the same type. The last line contains an integer E (1 \\u2264 E \\u2264 N), indicating the species of the anal\\u00f3gim\\u00f4n you just captured.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Anal\\u00f3gim\\u00f4n Types\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line containing an integer indicating the smallest possible number of species that are of the same type of your anal\\u00f3gimon. Please notice that the species of your own anal\\u00f3gimon must also be included.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tAnal\\u00f3gim\\u00f4n Go! is a very popular game. During his quest, the player travels across many cities capturing virtual little monsters called anal\\u00f3gim\\u00f4ns.\\r\\n\\r\\nYou are an expert player and have captured N anal\\u00f3gim\\u00f4ns so far, numbered from 1 to N. You captured so many monsters that it is getting hard to carry all of them during your journey. However, you can get rid of some of them by transferring them to the Professor.\\r\\n\\r\\nWhen you transfer the anal\\u00f3gim\\u00f4n i (for 1 \\u2264 i \\u2264 N) to the Professor, you earn Di candies in exchange. Since candies are really important items in the game, you want to transfer as many anal\\u00f3gim\\u00f4ns as possible to maximize the amount of candies you will earn!\\r\\n\\r\\nHowever, anal\\u00f3gim\\u00f4n i (for 1 \\u2264 i \\u2264 N) weights Pi kg, and, due to a space limitation in Professor\\u2019s lab, he cannot accept anal\\u00f3gim\\u00f4ns which total sum of their weights exceeds K kg.\\r\\n\\r\\nYour task is to determine the maximum amount of candies you can obtain by transferring your little monsters, respecting the space limitation in Professor\\u2019s lab.\\n\\t\\t\\t\",\n    \"id\": 2563,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains integers N and K (1 \\u2264 N \\u2264 100, 1 \\u2264 K \\u2264 104), the number of anal\\u00f3gim\\u00f4ns you captured and the capacity of the Professor\\u2019s lab, in kg, respectively. Second line contains N integers D1, ..., DN (1 \\u2264 Di \\u2264 104), indicating how many candies you will obtain by transferring each anal\\u00f3gim\\u00f4n. Third line contains N integers P1, ..., PN (1 \\u2264 Pi \\u2264 104) indicating the weight of each anal\\u00f3gim\\u00f4n, in kg.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Transfer to the Professor\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing the maximum amount of candies you can obtain.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tYou probably know TV shows like Swap it or not?, where a participant can win a prize from a simple pen until a house with a pool.\\r\\n\\r\\nThere are N prizes, numbered from 1 to N. The participant starts the show with prize number 1. The show has N-1 rounds. At round i, the host asks the participant if he wants to swap his current prize with prize Pi. The participant, not knowing the prize being offered, must answer \\u201cyes\\u201d or \\u201cno\\u201d. If he answers \\u201cyes\\u201d, his current prize is swapped with prize Pi. If he answers \\u201cno\\u201d, his current prize is not changed. After the last round, the participant takes his current prize.\\r\\n\\r\\nThe show is about to begin, and your brother is the participant this time! Before going to the show, he told you the answers he intends to say at each round. However, you have a power that can control his mind! If you use your power at some round, his answer for that round is reversed, i.e., he will say \\u201cyes\\u201d if he intended to say \\u201cno\\u201d and vice-versa.\\r\\n\\r\\nYou just found out which prize will be offered at each turn. You want your brother to win the prize number N, the most valuable one. What is the minimum number of times you need to use your power in order to ensure he will win the prize number N?\\n\\t\\t\\t\",\n    \"id\": 2564,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integer N (2 \\u2264 N \\u2264 100), the number of prizes. Each of the next N-1 lines describes a round, in order. Each line contains two integers Pi and Ri (2 \\u2264 Pi \\u2264 N, Ri = 0 or 1), the prize offered at that round and the answer your brother intends to say at that round, respectively. Ri = 0 indicates \\u201cno\\u201d, while Ri = 1 indicates \\u201cyes\\u201d.\\r\\n\\r\\nNo prize will be offered more than once, and prize 1 will not be offered again.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Swap It or Not?\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line indicating the minimum number of times you must use your power so your brother will win the prize number N.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThe Chemical Engineering (CE) building is a large building that has just opened in the campus. After entering the building looking for a bathroom, you entered the Chemical lab by mistake! Fortunately, the instructor allowed your presence in there.\\r\\n\\r\\nThere are N test tubes in the lab, numbered from 1 to N. Tube i (1 \\u2264 i \\u2264 N) initially contains mi milliliters of water. For each tube, you can keep it unchanged, you can remove any amount of water from it, or you can put any amount of water in it. Your goal is to make all tubes contain the same amount of water.\\r\\n\\r\\nIn order to put X milliliters of water in some tube, you need to take X milliliters of water from a tap in the lab. Also, in order to remove X milliliters of water from some tube, you need to dump X milliliters of water on a drain in the lab. The total cost is equal to the sum of the total amount of water taken from the tap and the total amount of water dumped on the drain.\\r\\n\\r\\nGiven the initial amount of water in each tube, your task is to determine the minimum total cost needed to make all tubes contain the same amount of water.\\n\\t\\t\\t\",\n    \"id\": 2565,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains the integer N (1 \\u2264 N \\u2264 100), the number of test tubes in the lab. Next lines contain, one per line, N real numbers mi (0 \\u2264 mi \\u2264 100.0), the initial amount of water in each tube, in milliliters.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Test Tubes\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing the minimum total cost needed to make all tubes contain the same amount of water. Round and print the value with exactly two decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tThe great final of the Water Surf Nlognonian Championship is near, and in this year it will take place in the city of Bonita Horeleninha (BH)! You decided that you will travel from your hometown to BH to watch the final.\\r\\n\\r\\nThere are N cities in Nlogonia, enumerated from 1 to N. Consider that the city 1 is your hometown, and the city N is BH.\\r\\n\\r\\nBesides that, there are M stretches through which you can travel. Each stretch can be used to travel from one city to another in the country. Some stretches are made by buses, whereas the others are made by plane. For each stretch, you know the price, in reais, of the ticket to travel that stretch.\\r\\n\\r\\nTo avoid tiredness due to commuting between bus stations and airports you decided that you will use only one mean of transportation during the whole trip. It means that you want to go to BH only by bus or only by plane.\\r\\n\\r\\nYour task is to determine the minimum cost, in reais, to go from your hometown to BH, given the restriction that the mean of transportation must not change during the whole trip.\\n\\t\\t\\t\",\n    \"id\": 2566,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case contains two integers N and M (2 \\u2264 N \\u2264 100, 1 \\u2264 M \\u2264 2(N2 -N)), the number of cities and stretches, respectively. The following lines describe one stretch each. Each line has 4 integers A B T R (1 \\u2264 A, B \\u2264 N, A\\u2260B, T = 0 or 1, 1 \\u2264 R \\u2264 104), indicating a stretch that goes from city A to city B, (in this order), made by bus if T = 0 or by plane if T = 1, and whose ticket costs R reais.\\r\\n\\r\\nIt\\u2019s guaranteed that there is at least one way from your hometown to BH using only one mean of transportation. Besides that for each ordered pair of cities (A,B), there is at most one stretch from A to B for each possible mean of transportation (note that it is possible to exist one stretch by bus and another by plane from A to B).The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Trip to BH\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with an integer indicating the minimum cost required to complete your trip, given the above restrictions.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fl\\u00e1vio Zavan, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThe Department of Public Health of Nlogonia has just issued an alert. A virus is infecting the entire population.\\r\\n\\r\\nAfter a lot of studies, the Nlogonia\\u2019s researchers found out that after infiltrating a host body, the viruses match in pairs to become lethal. The level of lethality of an infection is determined by the sum of the age difference in days of the paired viruses. Virues not paired don\\u2019t influence the level.\\r\\n\\r\\nThus, if there are 4 viruses in the host body with ages (in days), equals to:\\r\\n\\r\\n4, 10, 9, 43\\r\\n\\r\\nAnd they are paired as follows:\\r\\n\\r\\n4 with 9, 43 with 10\\r\\n\\r\\nThen the level of lethality would be (9 - 4) + (43 - 10) = 38.\\r\\n\\r\\nThe Department of Public Health of Nlognia asked you to write a program that, given the virus count in a host and the age of each of them, calculate the maximum level of lethality that the infection can take.\\n\\t\\t\\t\",\n    \"id\": 2567,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains several test cases. The first line of each test case consists of an integer N (1 \\u2264 N \\u2264 1000), the number of viruses in the host body. The following line contains N integers ai (0 \\u2264 ai \\u2264 1000) separated by blank spaces, the ages (in days) of all the viruses in the host body.The input ends with end-of-file (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Virus\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with the maximum lethality level that the infection can take.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Gabriel Poesia, UFMG  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Ada is an investor in a very unstable and high-risk business: NlogNintendo shares.  However, because she has great sympathy for the beautiful-horizontina company, Ada continues to invest anyway. \\n\\nHowever, instability sometimes makes it difficult for her to do her long-term portfolio planning.  In order to help her, she has hired you to make a program that predicts the value of NlogNintendo.  Ada has registered that on D day, a stock NlogNintendo was worth I real.  Besides, at the beginning of even days, the stock price rises X reais compared to the price at the end of the previous day.  On odd days, the stock price already starts with a real X value below the value at the end of the day. And now? Can you help her know what the stock price will be in F days?\",\n    \"id\": 2568,\n    \"input\": \"The input is composed of a line containing 4 integers separated by space: D (1 \\u2264 D \\u2264 365) (the day Ada registered the price of the NlogNintendo stock), I (X \\u2264 I \\u2264 1000) (the initial price recorded Of the stock), X (1 \\u2264 X \\u2264 I) (the daily stock price change) and F (1 \\u2264 F \\u2264  365) (the number of days in the future that your program should predict the share price).\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Actions\",\n    \"output\": \"The output should contain a line with a single integer: the expected price of the F share days after the day the initial price was recorded.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Martins, IFSULDEMINAS  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Dona Clotilde is a very nice lady who lives in a village, in house which number is 71. It's not known why, but she had a reputation for being a witch. Clotilde was eager to watch a football game. One day, she bought a liquid to clean silver. With this, she won a coupon that gave her a number to compete for a ticket to the 2014 World Cup semifinal at Mineir\\u00e3o, the game between Germany and Brazil. The raffle happened and she won the ticket. Clotilde went to the game, Brazil lost 7 x 1, and everyone in the village thought that Brazil had lost that way because of her, poor thing! Her hacking nephew, San Tanaz, taking her aunt's pains, decided to create a computer virus that interfered with mathematical calculations, so that anything involving number 7 in the accounts would become 0.\\n\\nFor example:\\n\\n3 + 4 = 0\\n\\n33 + 44 = 0\\n\\n17 + 11 = 21\\n\\n8 x 9 = 2\\n\\n12 x 7 = 0\\n\\n8 + 9 = 10\",\n    \"id\": 2569,\n    \"input\": \"Composed of a single line with two integers a and b (0 < a, b < 10000), separated by a sum or multiplication operator.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"The 7 x 1 Witch\",\n    \"output\": \"An integer corresponding to the result of the account, after the virus.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor D\\u00e2mi Henrique, INATEL  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tRed, Hot, Chilli e Peppers s\\u00e3o quatro estudantes que sempre se reunem embaixo da ponte ap\\u00f3s o t\\u00e9rmino das aulas para jogar um jogo chamado Californication. Eles desenham um grid\\u00a0NxM\\u00a0no ch\\u00e3o, inicialmente vazio,\\u00a0e o objetivo final \\u00e9 dominar a maior parte poss\\u00edvel desse grid.\\n\\nOs estudantes jogam alternadamente, sempre seguindo a mesma ordem: Red, Hot, Chili e Peppers. Ap\\u00f3s Peppers, a vez volta para Red e assim continuam jogando at\\u00e9\\u00a0completarem\\u00a0K\\u00a0rodadas. Em cada uma das rodadas, o jogador pode escolher entre duas poss\\u00edveis jogadas:\\n\\nL X\\u00a0--> {} Significa dominar a linha\\u00a0X\\u00a0do grid, escrevendo a inicial de seu nome em todos os elementos contidos nessa linha.\\n\\nC Y\\u00a0-->{} Significa dominar a coluna\\u00a0Y\\u00a0do grid, escrevendo a inicial de seu nome em todos os elementos contidos nessa coluna.\\n\\t\\t\\t\",\n    \"id\": 2570,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m tr\\u00eas inteiros\\u00a0N, M (1 \\u2264 N, M \\u2264 103) e K (1 \\u2264 K \\u2264 5 \\u00d7 105), sendo as dimens\\u00f5es do grid (quantidade de linhas e colunas, respectivamente) e quantas rodadas foram jogadas.\\n\\t\\t\\t\\t\\tAp\\u00f3s isso, seguem\\u00a0K\\u00a0linhas, cada uma delas contendo uma jogada do tipo\\u00a0L X\\u00a0(1 \\u2264 X \\u2264 N) ou C Y (1 \\u2264 Y \\u2264 M), ambas descritas acima.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Californication\",\n    \"output\": \"\\t\\t\\t\\tExiba o qu\\u00e3o dominante cada jogador foi ao final da partida no seguinte formato:\\u00a0\\nRa Hb Cc Pd, onde\\u00a0a,\\u00a0b,\\u00a0c\\u00a0e\\u00a0d\\u00a0s\\u00e3o inteiros, representando a pontua\\u00e7\\u00e3o final de Red, Hot, Chili e Peppers, respectivamente.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Maciel, UFMG  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Dilson, Gilson or Wilson, as you prefer to call it, is one of the few good miners you've ever heard of. Every year it helps needy communities, towns, day care centers and schools. That year, Dilson, who is one of the wealthiest men in Minas Gerais, wants to donate part of his savings. He plans to donate p per cent of the total money he owns per month. Gilson's money (that is, Dilson) is kept in an application that yields j\\u00a0percent every month. Dilson uses a portion of this income to pay his bills, which totals x reais per month, and spends the remainder of him traveling.\\n\\nBehold, he asked himself, \\\"If I continue to donate my money and spend the proceeds in this manner, how many months will I be able to pay the bills?\\\"\",\n    \"id\": 2571,\n    \"input\": \"The input consists of an integer M (0 \\u2264 M \\u2264 1018) representing the initial Dilson money, two real numbers p (0 <\\u00a0p \\u2264 100) and j (0 \\u2264 j \\u2264 100) of five decimal places each representing the percentage of it Dilson donates and how much interest he receives per month and an integer x (1 \\u2264 x \\u2264 106) that represents the minimum amount that the money must render per month.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Donor\",\n    \"output\": \"An integer corresponding to the number of months that Dilson can donate his money.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Poesia, UFMG  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tClimbing a team is a tricky task in many sports. For example, in football, if we build a team with the 11 best football players of all time, we would probably have a team with no goalkeeper or defender.\\r\\n\\r\\n                The case is a bit simpler in Pok\\u00e9mon Ho. In this game, each player has their set of critters, called Pok\\u00e9mon, that can battle each other. In a battle between two coaches, each one must choose a set of up to K Pok\\u00e9mon to battle. A team does not have to have K Pok\\u00e9mon, but it must have at least one. Each Pok\\u00e9mon has an attack multiplier, and the total damage dealt by all Pok\\u00e9mon is simply the product of the multipliers of all Pok\\u00e9mon on the trainer's team. This product is called total attack. Since the interaction between Pok\\u00e9mon multipliers is simpler than between players in a team sport, it is not so difficult to choose the Pok\\u00e9mon that maximizes the total attack for a battle.\\r\\n\\r\\n                Before launching the game, NlogNintendo is evaluating the teams that can be formed in each region of the world. There are N Pok\\u00e9mon in the game, numbered 1 to N. For each region of the world, NlogNintendo decided to release only a few Pok\\u00e9mon. Thus, to capture all Pok\\u00e9mon, players would have to travel through several countries, which makes the experience more interesting (although more expensive). To simplify the choice, it was decided that each region will have access to a contiguous part of the Pok\\u00e9mon sequence. More precisely, in region i, players have access to the Pok\\u00e9mon of numbers L_i, L_{i}+1, ..., R_{i} - 1,\\u00a0 R_{i}, that is, all Pok\\u00e9mon with numbers between L_i And R_i.\\r\\n\\r\\n                Given the attack multipliers of each Pok\\u00e9mon, the sequence of Pok\\u00e9mon available in each region, and the maximum K size of the teams that can battle, the company has hired you to tell you which is the best possible all-around attack anyone could make with just the Pok\\u00e9mon Of each region.\\r\\n\\t\\t\\t\",\n    \"id\": 2572,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry starts with a line containing three integers separated by space: N\\u00a0(\\u00a0N\\u00a0< \\u00a02*105\\u00a0) (number of Pok\\u00e9mon in the game), K (\\u00a0K <\\u00a040 ) (maximum size of a team of Pok\\u00e9mon that can battle) and R\\u00a0(\\u00a0R\\u00a0<\\u00a02*105\\u00a0) (number of regions in the game). Then the next line contains N integers m_i\\u00a0( 0\\u00a0<\\u00a0m_i\\u00a0<\\u00a0104\\u00a0) separated by space, where m_i is the Pok\\u00e9mon's attack multiplier of number i. Finally, there are R lines describing which Pok\\u00e9mon are available in each region. Each of these lines contains two integers, L_i and R_i (1\\u00a0<\\u00a0L_i <\\u00a0R_i < N), meaning that in the i-th region of the game only Pok\\u00e9mon with numbers between L_i and R_i are available.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Line-up\",\n    \"output\": \"\\t\\t\\t\\tThe output contains R rows. On the i-th line, print an integer: the total attack of the best team of up to K Pok\\u00e9mon that can be formed with the Pok\\u00e9mon available in the i-th region. Since this number can be very large, print your remainder of the division by 109\\u00a0+ 7.\\n\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Dilson Guimar\\u00e3es, UFMG  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Luan and Larissa are twin brothers who love to play in the pool. Their favorite game is treasure hunt. In this game, both find themselves inside the pool when their father tosses a coin into the pool in a randomly chosen position with even probability. As Larissa and Luan are twins who love to swim, they both can swim at the same speed. Therefore, the one nearest the place where the coin falls will be the first to pick it up.\\n\\nMatthew is the younger brother of Luan and Larissa. He is not much of sports. He prefers to stay at the kiosk drinking lemonade and solving a Sudoku. But, observant as it is, Matthew realized that the result of the brothers' play is determined by luck. Now, he wants to know how much each brother has to get the coin. Matthew is very busy solving your Sudoku. So he asked you to calculate this probability for him based on the size of the pool and the position of each of the siblings.\\n\\nThe pool is described as a rectangle whose lower left corner is at the point (0, 0) and the upper right corner is at the point (L, A). The position of Luan is described by the point (XA, YA), and the position of Larissa by the point (XB, YB).\",\n    \"id\": 2573,\n    \"input\": \"The entrance is composed of three lines. The first contains two integers L (1 \\u2264L \\u2264104) and A (1 \\u2264A \\u2264104), the coordinates of the upper right corner of the pool. The second contains two integers XA (0 \\u2264XA \\u2264L) and YA (0 \\u2264YA \\u2264A), the coordinates of Luan inside the pool. The third contains two integers XB (0 \\u2264XB \\u2264L) and YB (0 \\u2264YB \\u2264A), the coordinates of Larissa inside the pool.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Treasure Hunt\",\n    \"output\": \"The output should contain a line with two numbers with 6 decimal places divided by space, representing the probability of Luan picking up the coin and the likelihood of Larissa picking up the coin.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Guilherme Gomes, UFMG  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Belo Horizonte is known for hosting one of the most recent historical patrimonies of humanity: the Pampulha Lagoon. Another thing you should know is that it is the home of several capybaras, the largest rodents in the world. But you really should not realize that the society of capybaras is organized as an absolutist monarchy that often has to deal with revolutions and consequent territorial subdivision.\\r\\n\\r\\nRecently, the capybaras emerged victorious from the Unification Wars of the Pampulha Lagoon, consolidating their territory and establishing themselves as the dominant rodents of the Lagoa. The king of capybaras, Bacon - The Great - is interested in dividing the ultimate conquest of his people, the Isle of Loves, among his subjects. The Island is a square matrix of order N = 2k, with each cell representing the number of units of gram in a given square meter of the island. To avoid a bloody revolution and the resumption of the Unification Wars, Bacon - The Great - estimates that G units of food in a territory are needed to keep a community of capybara appeased.\\r\\n\\r\\nBacon - The Great - has asked you to find out the greatest number of territories that should be formed obeying the following restrictions: (i) all areas must be square matrices; (ii) all territories must have the same area (iii) all cells of the island must be occupied.\\r\\n\\r\\nIts task is, given the description of the Isle of Loves and the quantity G of grass, to determine which is the largest number of communities that can be formed by the government of Bacon - The Great.\",\n    \"id\": 2574,\n    \"input\": \"The entry contains multiple rows. In the first one, the integers N (N = 2k), with K the limits (0 <K <11) and G (1 <G <105), the size of the matrix and minimum number of units of gram that must exist in Each new territory.\\r\\nNext, we follow N-lines with N integers each, describing the Island of Loves, with the j-th element of the i-th line representing the cell m{ij} (0 <m{ij} <300) of the matrix.\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Capybara Lagoon\",\n    \"output\": \"The output must contain a single integer T, the largest number of territories that can be delimited by the government of Bacon - The Great.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Maciel  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Roberto is in love with Christmas trees. Every year, he adorns the trees of Itajub\\u00e1 with the most beautiful ornaments. Therefore, this year he was invited by the mayor of Belo Horizonte to decorate the Christmas trees that will be placed at the end of the year. For this, Roberto will prune branches from the trees that he thinks are ugly. For each branch i of the tree, Roberto defined how beautiful he is by a number wi. Negative values \\u200b\\u200brepresent that the branch is ugly. The beauty of a Christmas tree is then defined by the sum of the beauties of its branches.\\n\\nThe process of pruning a tree is simple. Roberto cuts a branch from the tree, and all the branches that leave it fall also. In figure 1 we have an example of a tree and a pruning done by Roberto. In each branch of the tree in the figure we have the value wi which describes how beautiful the branch is. In the tree to the right, the branches cut by Roberto are dotted, while the knots and twigs that fell after the cut are dashed. In the example of figure 1, both the blunt and cut tree have a value of beauty.\\n\\n\\n    Figure 1: Cut of Roberto\\n\\n\\n\\n    \\n\\n\\n\\n    Figure 2 shows the optimal cut of the example case. Note that fewer cuts have been made to obtain this beauty tree 15.\\n\\n\\n\\n    Figure 2: Great cut\\n\\n\\n\\n    \\n\\n\\n\\nKnowing about the VI Programming Marathon, Roberto asked you to make a program that would help you to define which branches he should cut from the tree so that it is as beautiful as possible according to its definition.\",\n    \"id\": 2575,\n    \"input\": \"The input consists of an integer N\\u00a0(2 < N < 106)\\u00a0which is the number of nodes in the tree. In the next\\u00a0N-1\\u00a0lines, we have four integers di (0 <\\u00a0di <\\u00a0N-2), ai\\u00a0(0 < ai <\\u00a0N-1), bi (0 < bi <\\u00a0N-1),\\u00a0and\\u00a0wi\\u00a0 (-1000 < wi < 1000)\\u00a0representing the branch identifier i, \\u00a0which connects the node ai\\u00a0to the\\u00a0bi, and that it has beaty\\u00a0wi\\u00a0by the Robert classification. The tree is always rooted at node 0. It is guaranteed that the input graph is connected and has no cycles.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Christmas Tree\",\n    \"output\": \"The output should contain two integers, D and M, which represent how beautiful the tree is with the optimal cut and how many cuts need to be made, respectively. If the number of slices is greater than 0 on the next line, print M integers dj in ascending order and separated by space, where dj represents the identifier of each branch j to be cut.\\n\\nIf there is more than one tree with the same degree of beauty, print the one with the least branches. If there is still more than one tree that satisfies the same criteria, print the tree with the least cuts.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"By D\\u00e2mi Henrique, INATEL  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Bibi and Bibika are playing a simple game where the judge, with each round, makes a drawing with several circles and arrows linking some of them.\\n\\nBibi must count the least X number of arrows that need to be inverted to exist at least one path from A to B and Bibika must count the smallest amount Y of inverted arrows to exist at least one path in the opposite direction from B to A. The game who find the lowest value. If there is no path between A > B or B > A, the game ends in a draw, regardless of the number of arrows reversed.\\n\\nAs the judge in some rounds makes a very large drawing, it is quite complicated to check the veracity of the answers given by the girls. Your task is to automate this process for him.\",\n    \"id\": 2576,\n    \"input\": \"The first line of each test case contains four integers C ( 1 \\u2264 C \\u2264 104 ) , S ( 0  \\u2264 S  \\u2264  5 x  105), A e B, (  1 \\u2264 A, B \\u2264 C ), where C is the number of circles, S is the number of arrows, A and B are the ends of the game. Each of the next S lines contain two integers C1 and C2, representing an arrow connecting the circle C1 to the circle C2.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Reversing Arrows\",\n    \"output\": \"For each test case, display the winner's name and the amount Q inverted arrows in Bibi format: Q or Bibika: Q. If the game ends in a draw, display Bibibibika.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Dilson Guimar\\u00e3es, UFMG  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Bruno and Henrique will play to pass the time. In the game they chose, there are N boxes. Within each box, there is a paper with a written whole number. In addition to the boxes, there are M-twines. Each of them ties two boxes.\\n\\nThe game works like this. First, Bruno chooses one of the boxes and removes it from the game, along with the strings that connect it to other boxes. Then Henry can choose a subset of any of the boxes such that if a box is chosen, all boxes attached to it must also be chosen.\\n\\nHenry's punctuation is the sum of the numbers in the papers in the boxes chosen by him. Bruno's goal is to minimize the highest score Henry can choose. So for each box, Bruno wants to know what the highest score can be obtained by Henry if it is the box removed.\",\n    \"id\": 2577,\n    \"input\": \"The first line of the entry contains two integers N ( 1\\u00a0<\\u00a0N\\u00a0<\\u00a0105\\u00a0) and M \\u00a0(\\u00a00\\u00a0<\\u00a0M\\u00a0<\\u00a0105\\u00a0), the number of boxes and the number of twines. The second line contains N integers C1, C2, ..., CN (-104 < Ci< 104) separated by space. The i-th of them corresponds to the number on the paper inside the i-th box. Each of the following M lines describes a twine. The i-th of them contains two integers Ai and Bi ( 1\\u00a0<\\u00a0Ai\\u00a0<\\u00a0Bi\\u00a0<\\u00a0N\\u00a0), indicating that the ith striker ties the Ai-th and Bi-th boxes.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Box Game\",\n    \"output\": \"The output must be composed of N integers separated by space. The ith integer shall correspond to the Punctuation that Henry can achieve if Bruno removes the i-th box.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Comiss\\u00e3o da VI Maratona Mineira de Programa\\u00e7\\u00e3o  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Arriving at the opening of the VI Programming Marathon, the teams encountered a somewhat confusing banner saying: \\\"Welcome to VI Ontarama Meraini!\\\". After reading a few times, the most attentive ones realized that it was an anagram of \\\"Maratona Mineira\\\", since Astolfo, the creator of the art, it's a guy that loves anagrams.\\n\\nAn anagram of a word is any other word that is formed by just changing the order of one or more of its letters, for example: \\\"Alergia\\\", \\\"Regalia\\\" and \\\"Galeria\\\" are some of the anagrams of \\\"Alegria\\\".\\n\\nAstolfo wants to make a joke apart with the competitors involving anagrams, to break the ice and to relax the competitors. To do this, he generated a T-text on his computer, and printed it on a giant strip of paper. In this strip, there are important life lessons that competitors should look for.\\n\\n\\nHe would like to lower the strip so that it fits in his suitcase, since it got huge. However, the grace of the strip is precisely that Astolfo hid in the text some anagrams of a deep message M. So when reducing the strip, Astolfo wants that at least one anagram of M on the final strip. He will do the reduction as follows. First, it has chosen an integer b between 1 and T inclusive, and will cut the first b letters of T, discarding the rest. Then he chooses a second integer and between 1 and b inclusive, and will cut the last and letters of the remaining strip, discarding the other letters. This is the final strip of Astolfo.\\n\\n\\n\\n\\nAstolfo realized that there could be more than one way of performing this procedure so that the resulting strip contained an anagram of M. Thus he chose T and M in such a way as to conceal an important message in that number of forms as well. So if you also want to know Astolfo's message, just solve the following problem: data T and M, calculate the number of different ways Astolfo has to cut the strip with the procedure described above so that the final strip contains the Less an occurrence of any anagram of P.\",\n    \"id\": 2578,\n    \"input\": \"The entrance is composed of two lines. The first line contains the text T , composed of only lowercase letters between 'a' and 'z'. The second line contains the message M , also composed of lowercase letters between 'a' and 'z'. (1 \\u2264 |M| \\u2264|T| \\u2264 106)\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Ontarama Meraini\",\n    \"output\": \"Print a single integer representing the number of ways Astolfo has to cut strip ends with the text T so that the final strip contains an occurrence of at least one anagram of M at any position.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By D\\u00e2mi Henrique, INATEL  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Nagol, a former superhero who everyone thinks is dead, lives in a quiet inner city of Minas. After retiring from the hectic life of a hero, he now works as a tile designer. We will imagine a wall of tiles as a grid of L * C, L lines identified from 0 to L-1 and C columns identified from 0 to C-1. Nagol has its own style of design, it uses its hands to \\\"scratch\\\" each of the tiles and turn the final wall into a great work of art.\\n\\nThe order he uses to do this is always the same, starts from the first row and scribbles all the C columns from left to right, then goes to the second row and scribbles all C columns in the same way, it repeats until Finish the L lines. An important detail is that he never makes two straight strokes with the same hand, alternating starting always with the right hand. Here is an example of a final wall where L = 2 and C = 3:\\n\\n\\n\\nYour task is, given the size of the wall (L and C) and the position of a specific tile (X and Y), tell which hand Nagol will use to scratch it.\",\n    \"id\": 2579,\n    \"input\": \"Each row of the input has four integers L (0 < L, C < 105), X (0 \\u2264 X < L), Y (0 \\u2264 Y < C), all previously described.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Nagol\",\n    \"output\": \"Display a single line with the message \\\"Direita\\\" (right, in Portuguese) if it has scratched the tile with your right hand or \\\"Esquerda\\\" (left, in Portuguese), otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Lucas Maciel, UFMG  Brasil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In Belo Horizonte, an electronic game has taken the streets and squares of the city: it is the pok\\u00e9mon Ho. The NlogNintendo startup that created the game did not expect such success. And she just hired you to find out the best way to become a master Pok\\u00e9mon Ho.\\n\\nIn Pokemon Ho, you have pokeballs that catch pok\\u00e9mons (game creatures). Each time a new Pok\\u00e9mon is captured, experience is gained, however repeated pok\\u00e9mons do not. A pok\\u00e9mon master Ho is a player with a lot of experience. And that's why you want to capture as many different types of Pok\\u00e9mon as possible. However, this is not an easy task. The Pok\\u00e9mon, when trying to be captured, can break the Pokeballs. Some more easily than others. In fact, for each pok\\u00e9mon i we have an associated probability pi of the pok\\u00e9mon to break the pokeball. To prevent some Pok\\u00e9mon from being captured, NlogNintendo assumed that pi \\u22640.9. That is, at least 10% chance of catching a Pok\\u00e9mon is guaranteed. Furthermore, after each j-th attempt fails, pokemon i has a probability r {i, j} to escape the battle. If the Pok\\u00e9mon escapes, you can not try to capture it again. Since there are many attempts, NLogNintendo only offers Ri chance of escaping for each pok\\u00e9mon i. The probabilities ri, j, 1 \\u2264j \\u2264Ri are repeated at each Ri step.\\n\\nNlogNintendo sent you the following task: Given the probabilities and capture experiences associated with each Pokemon and a finite number of Pokeballs, find the expected experience value to be obtained by assuming that the Pokemon Master Ho always plays optimally.\",\n    \"id\": 2580,\n    \"input\": \"The input consists of two N integers (1 \\u2264N \\u2264 30) and P (1 \\u2264P \\u2264106) representing the number of pok\\u00e9mons in the game, and the number of pokeballs available to the player. The next 2*N rows have a string Si (1 \\u2264 |Si|\\u226450) (\\u22001 \\u2264i \\u2264N), an integer Ri (1 \\u2264Ri \\u2264104) (\\u22001 \\u2264i \\u2264N), an integer ei (1 \\u2264ei \\u22641000) (\\u22001 \\u2264i \\u2264N) and a real of 3 decimal places pi (0.000 \\u2264pi \\u22640.900) (\\u22001 \\u2264i \\u2264N) representing the name of the pokemon i, the number of probabilities to escape from a Battle, the experience gained by capturing it and the probability of the pok\\u00e9mon i break the pokeball, respectively. In the next line Ri real numbers r {i, j} (0.000 \\u2264r{i, j} \\u22641,000) (\\u22001 \\u2264i \\u2264N) (\\u22001 \\u2264j \\u2264Ri) representing the probability of the i-th pokemon escaping Of the battle after the j-th capture attempt. Remember that with every Ri attempts, the values repeat themselves.\\n\\nNote: It is not guaranteed that if two pok\\u00e9mons appear with the same name in the entry, they will have all values associated.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Master Pok\\u00e9mon Ho\",\n    \"output\": \"A real number rounded to 4 decimal places corresponding to the expected experience to be gained by a pok\\u00e9mon master Ho.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Martins, IFSULDEMINAS  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"Toorg is the wisest member of the group of heroes called The Protectors of the Milky Way. For any question, it has the ideal answer! Write a program that, given a question, tells Toorg's answer.\",\n    \"id\": 2581,\n    \"input\": \"\\r\\nThe input\\u00a0will have several test cases. For each test case, a N number is displayed, which represents the number of test cases. Then there will be N lines, with questions asked for Toorg.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"I am Toorg!\",\n    \"output\": \"For each test case, print Toorg's answer.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Martins, IFSULDEMINAS  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"System of a Download is a famous Hacker Metal band! Once, they created a device, with six buttons, numbered from 0 to 5, and put in that device their 11 greatest hits. To play one of these songs, you have to press two buttons. With this, the numbers of these two buttons are added, and then the corresponding song is played. Number of the sum, according to the relation below:\\r\\n\\r\\n0 - PROXYCITY\\r\\n1 - P.Y.N.G.\\r\\n2 - DNSUEY!\\r\\n3 - SERVERS\\r\\n4 - HOST!\\r\\n5 - CRIPTONIZE\\r\\n6 - OFFLINE DAY\\r\\n7 - SALT\\r\\n8 - ANSWER!\\r\\n9 - RAR?\\r\\n10 - WIFI ANTENNAS\\r\\n\\r\\nFor example, if the pressed buttons are 3 and 4, it will play the song 7 - SALT\\r\\n\\r\\nWrite a program that, given the two buttons that are pressed, determines which song will play.\",\n    \"id\": 2582,\n    \"input\": \"An integer C will be informed, which will be the number of test cases. Each case has two integer values, X and Y, representing which buttons have been pressed.\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"System of a Download\",\n    \"output\": \"For each test case, print the name of the corresponding song.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Martins, IFSULDEMINAS  Brazil\",\n    \"category\": \"Strings\",\n    \"description\": \"The great hero Chapolout will help an inventor, and there he meets his son-in-law, who had evil intentions. To tempt him to change his mind, Chapolout tells the story of Tausfo and Mephistophetrist. Tausfo was a man of very advanced age, and he was in love with a woman much younger than he. One day, he receives the visit of Mephistophetrist, a demon who Offers him a tool, called Chirrin Chirrion, which brought or removed things as they were told. To bring something, he had to say what he wanted, followed by the word Chirrin, and to drive away something, he had to say what he did not want, followed by the word Chirrion. Any other word said, would not take effect. After so much use, Mephistophetrist returns and says he will take his soul with him, unless he returns everything he had asked for. Help Tausfo! Write a program that - given the uses of the tool - bring together everything Tausfo has acquired with Chirrin Chirrion.\",\n    \"id\": 2583,\n    \"input\": \"The first value to be read is an integer C, indicating the number of test cases. Each test case starts with an integer N, stating how many uses have been made. Consider that before he possessed nothing, that a Chirrion will only have effect if he has such a thing dictated, and that a Chirrin will only have effect if he does not yet possess such thing, that is, he can not have two Copies of the same thing.\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Chirrin Chirrion\",\n    \"output\": \"For each test case, print out the word TOTAL, followed by the list of things Tausfo has in alphabetical order.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Martins, IFSULDEMINAS  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"It is possible to calculate the area of \\u200b\\u200ba regular pentagon, that is, a geometric figure with five equal sides, given the length of one side. So, do it.\\n\\n                \\n\\n                Write a program that, given the length of one side of a regular pentagon, computes your area.\",\n    \"id\": 2584,\n    \"input\": \"There will be a value C that indicates the number of test cases. Then there will be an integer N for each case (1 \\u2264 N \\u2264 10000), indicating the length of the side of a regular pentagon.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Pentagon\",\n    \"output\": \"For each test case, print the corresponding value of the area of \\u200b\\u200bthe respective pentagon, with three decimal digits of precision.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Martins, IFSULDEMINAS  Brazil\",\n    \"category\": \"Graph\",\n    \"description\": \"Caco lived boasting in the village, since it had a game of dominos greater than the conventional ones. Instead of the traditional 28 pieces, numbered from 0 to 6 at their ends, there were no repeated pieces, his had 55 pieces, numbered from 0 to 9 at their ends, and there were no repeated pieces. One day, Caco loaned his Domino to Chagas, and the same Would return, after a while, with missing parts. Before returning, Chagas wanted to analyze how much the Domino was still playable, even missing pieces. Given the remaining pieces, he wanted to see which sequence of pieces he could put on the table.\\n\\n                For example: If he had only four pieces remaining, and these pieces were 1-2, 2-2, 2-3, 4-4, as pictured below, the largest possible sequence would consist of three pieces:\\n\\n                \\n\\n                Write a program that, given the remaining parts of the domino, reports the size of the largest possible sequence among them.\",\n    \"id\": 2585,\n    \"input\": \"There will be several test cases. Each test case will have an N number, with the total of remaining pieces. Then there will be N lines, with two integers, A and B (0 \\u2265 A \\u2265 B \\u2265 9), indicating the numbers that are at the ends of the part. Tests end with end of file.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Incomplete Dominoes\",\n    \"output\": \"Print the size of the largest possible sequence, relative to the parts of that test case.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Ricardo Martins, IFSULDEMINAS  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"One day, Rubiko, an accomplished Rubik's Cube player, wanted to come up with a different game using such a tool. He bought a colorless cube, separated the three layers, and put a number on each part of each layer, as in the example below.\\n\\n                \\n\\n                After that, based on the Fibonacci sequence, which each next number is formed by the sum of the two previous numbers, it created the sequence of Cubonacci, being, with each new iteration, the number of each part of each layer is updated with the Sum of the part itself and all the parts adjacent to it. Following the example above, the value where the number 1 is in the next iteration will become 60, which is the sum of 1 + 2 + 4 + 5 + 10 + 11 + 13 + 14.\",\n    \"id\": 2586,\n    \"input\": \"First, a value C is read, representing the number of test cases. In each test case, a value N (1 \\u2264 N \\u2264 9) will be read, representing the number of iterations made in the Cubonacci sequence. Finally, we will read 27 integers Xi (0 \\u2264 Xi \\u2264 9), representing the values \\u200b\\u200bof each part of each layer of the cube.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Cubenacci\",\n    \"output\": \"For each test case, print the final 27 cube values \\u200b\\u200bafter all the iterations determined by the sequence, as in the example below.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tA cosmetic company, called Jetiqui, had a television program that rewarded consultants and clients. This program was called Turn to Wheel. In this program, there was a secret word, and with each round, the wheel was turned, with several prizes, goes the turn and loses everything. If he falls, he does not lose everything, one participant loses all that he has received from the prize pool so far and passes the turn to another participant. If he fell, he would not lose anything, but instead he would try to hit the secret word. If he fell into a prize of value, the participant could say a letter, and if it was part of the secret word, only one of them would be revealed. That is, if the word were banana, it would have to rotate 3 times and say 3 times to reveal all the A's of the word. One day, Pasqualito, with a large Knowledge about words, was to participate in this program. Whenever two letters were missing to be revealed, he had a great guess, of two possibilities, what would be the possible answer. He wanted to know if there was the possibility of risking a letter that would define which of the two words would be correct, because he did not want to risk another round, for fear of passing the turn. For example, the word displayed was _or_e, meaning the first and penultimate letter had not yet been revealed, and the two words he thought were sorte\\u00a0and torre. In this case, he could cure his doubt by speaking the letter T. If the letter appeared at the beginning, the word would be torre, if it appeared in the penultimate, the word would be sorte.\\r\\n\\r\\nWrite a program that, given the incomplete word and both possibilities, tells you if it is possible for Pasqualito to find the right word in the current round.\\n\\t\\t\\t\",\n    \"id\": 2587,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer C representing the number of test cases. Each test case has three words, the first two being the words that Pasqualito is in doubt, and the third is the word incomplete. Words have a maximum of 15 letters.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Jetiqui\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print Y if it is possible to solve the doubt, or N if it is not possible.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tRener was a boy who loved palindromes. So much that he invented a game with these. Given a sequence of letters, how many more would have to be added, at least so that some permutation of this sequence formed a palindrome. For example, potatoes need to add a b at the end to flip the palate. In another example, aabb, you do not need to add any letter because you do the abba or baab palindrome. In another example, abc needs two more letters, to form a palindrome, which can be abcba, acbca, bacab, bcacb, cabac, or cbabc.\\n\\n                Write a program that, given a sequence of letters, tells you the minimum number of letters that need to be added to the sequence, so that there is at least one anagram that forms a palindrome.\\n\\t\\t\\t\",\n    \"id\": 2588,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. In each case, a sequence of up to 1000 letters is shown. Test cases end with end of file.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Game of Palindromes\",\n    \"output\": \"For each test case, print an integer value, corresponding to the minimum number of letters to be added so that the sequence becomes a palindrome in one of its permutations.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Prime gap \\u200b\\u200brefers to the difference between consecutive prime numbers. For example, the distance between prime\\u00a0\\u200b\\u200b7 and 11 is 4, just as the distance between prime \\u200b\\u200b23 and 29 is 6. The challenge is, given a number, considering all previous and the number itself, what is the largest distance between Consecutive prime numbers?\\n\\n                Write a program that, given a number, computes the biggest prime gap.\\n\\t\\t\\t\",\n    \"id\": 2589,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be several test cases. Each test case will have an integer N (2 \\u2264 N \\u2264 109). The entry ends with end of file.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Biggest Prime Gap\",\n    \"output\": \"For each test case, print the largest distance between consecutive cousins, from 1 to N.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Chagas is a boy who loves to eat boiled eggs, but he hates math. He hates exponentiation and for some reason does not correctly calculate operations involving the number 7. Knowing this, his friend Caco decided to make a challenge: he wants Chagas to calculate the Nth power of 7 and say the last digit of that power. If Chagas hit all The questions, I would get 7 boiled eggs. For example, where N = 2, the result would be 9, because 72 = 49. The problem is that, depending on the value of N, the result of exponentiation can be a very large number. Without ideas, Chagas decided to ask for his help.\\n\\n            Write a program that, given a number, calculate the last digit of the value of 7 raised to that number.\\n\\t\\t\\t\",\n    \"id\": 2590,\n    \"input\": \"The entry consists of several instances. The first line of the entry contains an integer T indicating the number of instances. Each instance is composed of only one row, which contains the integer N (0 \\u2264 N \\u2264 109).\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Seven\",\n    \"output\": \"For each instance in the entry, print a line containing an integer, the last digit of 7N.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tThe Hamekameka was invented by Master Hame practiced for fifty years before meeting Kogu. Calling his latent energy in the palms of his hands, Hame manages to launch an explosive bolt of energy. Kogu learns after seeing Master Hame using it to extinguish the flames in a King's house. To Hame's surprise, Kogu manages to perform the First-rate technique, though it is only strong enough to destroy the car that Chamya gave to Mulba. Kogu has discovered that there is a pattern in the correct pronunciation of this attack, so that if it is not pronounced correctly, it does not.\\n\\n                Write a program that, given the initial part of a Hamekameka, makes the ideal ending for the attack to be successful.\\n\\t\\t\\t\",\n    \"id\": 2591,\n    \"input\": \"\\t\\t\\t\\t\\tThe input begins with a value C, indicating the number of test cases. Next, we have C lines, each with the beginning of an attack, with a maximum of 200 letters.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"HameKameKa\",\n    \"output\": \"For each test case, print out the appropriate finalization so that the attack be successful.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tProfessor Odracir Snitram studied various methods of ordering, as well as their respective complexities. One day, he decides to make a test, creating a method, with a box and N stones, numbered from 1 to N. The idea was to draw all the stones, one at a time, so that the sequence of numbers drawn was exactly 1 to N, that is, by drawing the number 1 first, then the number 2, then the 3, and so on, until the last one, which would be N. After drawing everything, if the attempt did not work, all the stones were Returned in the box, and the draw began again until it worked out. This method was named VaiNaSort!\\r\\n\\r\\nWrite a program that, given the amount of stones, and all attempts until you draw correctly, count the attempts.\\n\\t\\t\\t\",\n    \"id\": 2592,\n    \"input\": \"\\t\\t\\t\\t\\tThe input has several test cases. Each one starts with an integer N (2 \\u2264 N \\u2264 10000), representing the amount of stones in the box. Next, there will be a few draw attempts, each formed with the numbers from 1 to N, in any order, until the expected order is achieved. The entry ends with N = 0.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"VaiNaSort\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print the total number of attempts.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Victor Jatob\\u00e1 and Ariane Machado, USP  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tThe Eachians are very concerned about the text that has received from neighboring planet. They suspect that there is a pattern in the number represented by a word position in the text. These positions together, they say, represents a key to deactivate a bomb that is about to explode the EACH planet.\\n\\nYou were then summoned to developing a program that receive a text and a set of words and return the first position of each word that is present in the text.\\n\\nConstraints:\\n\\n\\n\\t\\n\\tWord: can contain only lowercase letters of the alphabet ('a'-'z').\\n\\t\\n\\t\\n\\tText: can contain only lowercase letters of the alphabet ('a'-'z') separated by one whitespace. Text contains no line break ('\\\\n') and no special characters.\\n\\t\\n\\t\\n\\tThe size of the words will be never greater than the size of the text.\\n\\t\\n\\t\\n\\tPosition: You should consider that the first position of the text should be position 0 (zero). Thus, in a text with 50 characters, the last position will be the 49.\\n\\t\\n\\t\\n\\tYou should only search for the exactly word. For example, the word SHIP is different from FRIENDSHIP.\\n\\t\\n\\n\\t\\t\\t\",\n    \"id\": 2593,\n    \"input\": \"\\t\\t\\t\\t\\tThe input need be, exactly:\\n\\n\\n\\t\\n\\tThe first line: The text, that contains N characters (50 <= N <= 10.000).\\n\\t\\n\\t\\n\\tThe second line: The M amount of the words that must be read (1\\u00a0<= M <= 128).\\n\\t\\n\\t\\n\\tThe third line: The words separated by a whitespaces. Each word must be 2 minimal character and maximum of 50.\\n\\t\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Eachians I\",\n    \"output\": \"\\t\\t\\t\\tFor each word, the program must print the position of the first letter present in the text. Mind that the words can be repeated in the text. In this instance, the positions must be printed one in front of other, separated with whitespaces. If the text doesn\\u2019t contain the word, return -1 (the number minus one).\\n\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Victor Jatob\\u00e1 and Ariane Machado, USP  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tThe Eachians are still worried after They found out a new bomb and received a mount of texts from the neighboring planet. They still suspect that there is a pattern in the number represented by a word position in the text. These positions together, they say, represents a key to deactivate a bomb that is about to explode the EACH planet.\\n\\nYou were then summoned to developing a program that receive a set of a little texts followed by the words and the program need to return the first position of each word that is present in each text.\\n\\nConstraints:\\n\\n\\n\\t\\n\\tWord: can contain only lowercase letters of the alphabet ('a'-'z').\\n\\t\\n\\t\\n\\tText: can contain only lowercase letters of the alphabet ('a'-'z') separated by one whitespace. Text contains no line break ('\\\\n') and no special characters.\\n\\t\\n\\t\\n\\tThe size of the words will be never greater than the size of the text.\\n\\t\\n\\t\\n\\tPosition: You should consider that the first position of the text should be position 0 (zero). Thus, in a text with 50 characters, the last position will be the 49.\\n\\t\\n\\t\\n\\tYou should only search for the exactly word. For example, the word SHIP is different from FRIENDSHIP.\\n\\t\\n\\n\\t\\t\\t\",\n    \"id\": 2594,\n    \"input\": \"\\t\\t\\t\\t\\tThe input need be, exactly:\\n\\n\\n\\t\\n\\tThe first line: The N amount of the texts followed by word that must be read (2 \\u2264 N \\u2264 100.000). There is a word for each text.\\n\\t\\n\\t\\n\\tFor the next lines, for each input, the program will be received, respectively:\\n\\n\\t\\n\\t\\t\\n\\t\\tThe text, that contains N characters (10 \\u2264 N \\u2264 128).\\n\\t\\t\\n\\t\\t\\n\\t\\tThe word to be found in the text, that contains M characters (2 \\u2264 M \\u2264 128).\\n\\t\\t\\n\\t\\n\\t\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Eachians II\",\n    \"output\": \"\\t\\t\\t\\tFor each pair of text and word, the program must print the position of the first letter present in the text. Mind that the words can be repeated in the text. In this instance, the positions must be printed one in front of other, separated with whitespaces. If the text doesn\\u2019t contain the word, return -1 (the number minus one).\\n\\t\\t\\t\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Cash Roial is a very popular mobile game, which is available for Ciborgue and AOS (Aifone OS) phones. The game is played by two players, who summon troops in an arena to defeat the opponent.\\n\\nIrineu likes to play Cash Roial, but currently he has not achieved many victories, so he asked for your help. Irineu knows how the arena is right now, he wants to summon a troop at the position (X, Y) and know if it will be defeated or not. A troop is defeated if there are at least five enemy troops in adjacent positions.\\n\\nThe position in the upper left corner represents the coordinates (1,1) and the position in the lower right corner represents the coordinates (N,M).\",\n    \"id\": 2595,\n    \"input\": \"The first line contains an integer C that represents the number of test cases.\\n                    The first line of each test case contains three integers N, M and  P, indicating respectively the number of rows, the number of columns in the arena, and the number of questions. Each of the N following lines of the entry describes a cell line of the arena and contains a string with characters M. The next P lines contain two integers X, Y indicating the location that Ireneu wants to put a troop.\\n\\nEach cell in the arena can contain one of the following characters:\\n\\n'.' - empty cell.\\n\\n'T' - cell containing an enemy troop.\\n\\n(1 \\u2264 N \\u2264 1000)\\n\\n(1 \\u2264  M \\u2264  1000)\\n\\n(1 \\u2264  P \\u2264  1000)\\n\\n(1 \\u2264  X \\u2264 N)\\n\\n(1 \\u2264  Y \\u2264  M)\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cash Roial\",\n    \"output\": \"For each question of Ireneu, write \\\"GG IZI\\\" if the troop will live and \\\"GRRR\\\" otherwise.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By Aline Regina de Oliveira, IFSULDEMINAS  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Kogu is searching for the dragon spheres to summon Xenlonguinho and ask him to relive his friend Kuriri, who unfortunately died in the last battle of Z's warriors.\\n\\nHowever Kogu is having a great deal of trouble finding the spheres, so Xenlonguinho, who is his known for a long time, decided to make an exception and agreed to be invoked in case Kogu finds all spheres whose number of divisors of the number of stars in the sphere are even.\\n\\nFor example if there are seven spheres, Kogu would not have to find the one- and four-star spheres because they have an odd number of divisors, so he only needs to take 5 spheres to summon Xenlonguinho.\\n\\n\\n\\nAs Koku is not very good at calculations, he asked you to write a program that given the total of existing balls, show the minimum amount of spheres he needs to look for.\",\n    \"id\": 2596,\n    \"input\": \"The first line contains an integer C that represents the number of test cases. Next lines contain an integer N (2 \\u2264 N \\u2264 1000) representing the amount of spheres required to invoke Xenlonguinho.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Xenlonguinho\",\n    \"output\": \"Your program should display the minimum amount of spheres Kogu has to look for.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Aline Regina de Oliveira, IFSULDEMINAS  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Kogu is searching for the dragon spheres to summon Xenlong\\u00e3o\\u00a0and ask him to relive his friend Kuriri, who unfortunately died in the last battle of Z's warriors.\\n\\nHowever Kogu is having a great deal of trouble finding the spheres, so Xenlong\\u00e3o, who is his known for a long time, decided to make an exception and agreed to be invoked in case Kogu finds all spheres whose number of divisors of the number of stars in the sphere are even.\\n\\nFor example if there are seven spheres, Kogu would not have to find the one- and four-star spheres because they have an odd number of divisors, so he only needs to take 5 spheres to summon Xenlong\\u00e3o.\\n\\n\\n\\nAs Koku is not very good at calculations, he asked you to write a program that given the total of existing balls, show the minimum amount of spheres he needs to look for.\",\n    \"id\": 2597,\n    \"input\": \"The first line contains an integer C that represents the number of test cases. Next lines contain an integer N (2 \\u2264 N \\u2264 109) representing the amount of spheres required to invoke Xenlong\\u00e3o.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Xenlong\\u00e3o\",\n    \"output\": \"Your program should display the minimum amount of spheres Kogu has to look for.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"Taxil\\u00e2ndia's government is facing a huge problem, the people of Taxil\\u00e2ndia love cars and speed, so they are running a lot in the avenues of the city. To mitigate this problem the government will install radars on the avenues, so that each section is covered by at least one radar. It is important to know that a radar covers miles along the avenue.\\n\\nYou were hired by the government to make a program that given the length of the avenue and the radar coverage area, inform the minimum amount of radars needed to cover the avenue.\\n\\nThe image below shows an avenue of size 15 kilometers and radars with a coverage of 4 kilometers, each color represents a radar, so it is possible to notice that the minimum number of radars needed to cover the avenue is 4.\",\n    \"id\": 2598,\n    \"input\": \"The first line consists of an integer C that represents the number of test cases. Each test case is made up of two integers N\\u00a0and M\\u00a0which indicate the size of the avenue and the radar coverage area.\\n\\n(1 \\u2264 N \\u2264 109)\\n\\n(1 \\u2264 M \\u2264 109)\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Placing Radars\",\n    \"output\": \"You should display the least amount of radars needed to cover the avenue.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Taxil\\u00e2ndia's government is facing a huge problem, the people of Taxil\\u00e2ndia love cars and speed, so they are running a lot in the avenues of the city. To mitigate \\u00a0this problem the government will install radars on the avenues, so that each section is covered by a radar. The company that the government contracted has M types of radars available, each of which covers\\u00a0Mi\\u00a0kilometers adjoining the avenue.\\n\\nYou have been hired by the government to make a program that, given the length of the avenue and the radar coverage area, state how many different ways you can put the radars on the avenue so that it is fully populated.\\n\\nThe image below shows an avenue of size 4 miles and radars with coverage of 3 and 2 kilometers, each color represents a radar, so it is possible to notice that the distinct amount of cover the avenue are 4.\",\n    \"id\": 2599,\n    \"input\": \"The first line of the entry is made up of an integer C that represents the number of test cases. The first line of each test case has two integers N\\u00a0and M\\u00a0which indicate the size of the avenue and how many radar sizes are available on the market.\\n\\nThe second line is composed of M\\u00a0integers representing the size of the available radars.\\n\\n(1\\u2009\\u2264\\u2009N\\u2009\\u2264\\u2009104)\\n\\n(1\\u2009\\u2264\\u2009M\\u2009\\u2264\\u2009103)\\n\\n(1\\u2009\\u2264\\u2009Mi\\u2009\\u2264\\u2009N)\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Counting Radars\",\n    \"output\": \"Your program should display the number of distinct ways to cover the entire avenue. Output the anwser modulo 109 + 7.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Aline Regina de Oliveira, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tTustin, Nike, Jucas and Uill will play a famous RPG game, the T & T (Tatus and Taturanas). Like any good RPG game, the dice is an extremely important part.\\n\\nT & T is played with six-sided dice. Before they started the game, Tustin went to a store to buy a lucky die, because his old one was devoured by the Temogorgon.\\n\\nTustin is very selective, and he want to choose a classic dice. A classic dice is a six-sided dice that has all the numbers from 1 to 6, and the sum of two opposite faces is always 7.\\n\\nThat is, if on one side we have the number 1 we would automatically have the number 6 on the other side.\\n\\nAn example of a classical data is given in the figure below. Your task is to check if the die that Tustin bought is really a classic.\\n\\n\\n\\t\\t\\t\",\n    \"id\": 2600,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains a number N that indicates the number of test cases. Each test case consists of six integers Di\\u00a0(0 <=\\u00a0Di\\u00a0<=\\u00a0105) representing the value of each face of the die. The numbers will be given in three lines, which represent the planning of the data, as in the figure above.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Tustin and His New Die\",\n    \"output\": \"\\t\\t\\t\\tYou should display \\\"SIM\\\" (Yes) if Tustin has purchased a classic dice, and \\\"NAO\\\" (No) otherwise.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Aline Regina de Oliveira, IFSULDEMINAS  Brazil\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"After Tustin bought his new dice he and his friends, Nike, Jucas and Uill played a lot of the RPG T&T (Tatus and Taturanas).\\n\\nEveryone knows, that Tustin always uses his lucky dice, a classic six-sided dice that has all the numbers from 1 to 6, and the sum of two opposing faces is always 7.\\n\\n\\n\\nBut Tustin's lucky die was so used That the numbers on some of the faces are gone, so he wants to fill it in so that the dice becomes classical again.\",\n    \"id\": 2601,\n    \"input\": \"The first line of input contains a number C that indicates the number of test cases. Each test case consists consists of three lines, which represent the planning of the die, as in the figure above. Each face will be indicated by a number N or by '*' representing an erased face.\\n\\n(1 <=\\u00a0N <= 6 )\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Tustin and His Old Die\",\n    \"output\": \"Your program should show how many different ways the die can be filled.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Matheus Pimenta, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tDod\\u00f4, Leo e Pepper often spend the early hours of the morning chatting somewhere in the condominium Jardim Bot\\u00e2nico IV. In the last few sessions, Dodo has been talking about the RPG game he and Leo are creating, and Leo (not surprisingly) has spoken about heavy metal and Pepper was fascinated by the story of Greek mythology told by Leo.\\n\\nThe boys decided to adopt a strategy to divide the sessions equally among the subjects, s\\u00f3 each one to them can speculate as much as possible and arrive at unbilievable conclusions. They wall play \\u201crock, paper and scissors\\u201d to decide the subject of today\\u2019s session, and then they will alternate the subjects in the next sessions. Given the moves of Dodo, Leo and Pepper, in this order, you must determine the subject of today\\u2019s session.\\n\\t\\t\\t\",\n    \"id\": 2626,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of several test cases and ends with end of file (EOF). Each test case consists of a single line, which contains the plays of each of the boys, as shown in the exemples.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"JB6 Team\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with the message \\\"Os atributos dos monstros vao ser inteligencia, sabedoria\\u2026\\\" to indicate that Dodo is the winner, the message \\\"Iron Maiden\\u2019s gonna get you, no matter how far!\\\" to indicate that Leo is the winner, the message \\\"Urano perdeu algo muito precioso\\u2026\\\" to indicate that Pepper is the winner, of the message \\\"Putz vei, o Leo ta demorando muito pra jogar\\u2026\\\" if there is a tie.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Matheus Pimenta, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThe Automata and Computability team usually leaves the class at 8 p.m. After learning so many theories and results of this beautiful improvement of Mathematics witch is Computer Science. Ciro Minino, Hermanoteu, Jonny, Zezinho, Baiano e Pimenta Filosofal enjoy walkig around the beautiful Elysian fields of UnBm to relax and reflect. As time passes, the conversation grows deeper and more abstract.\\n\\nToday, Hermanoteu was dissatisfied with the convenient solution that the professor gave to a problem, with a simple non-deterministic Toring\\u2019s machine. The problem is to decide whether a string of lenght N contains an ordered substring of scoring at least K, where: 1) a substring is obtained by removing zero or more symbols from a string; and 2) the score of a string is the sum of the scores of its symbols. The score of the symbol \\u2018a\\u2019 is 26, the score of the \\u2018b\\u2019 symbol is 25, \\u2026 and the score of the \\u2018z\\u2019 symbol is 1.\\n\\t\\t\\t\",\n    \"id\": 2627,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of several test cases and ends with end of file (EOF). The first line of a test case consists of integers N (1 \\u2264 N \\u2264 10^5) and K (1 \\u2264 K \\u2264 26 * 10 ^ 5). The second line contains the string of lenght N, with only lowercase letters.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Automaton Team\",\n    \"output\": \"\\t\\t\\t\\tFor eath test case, print a single line with the message \\\"Aceita\\\" if there is a substring which satisfies the requested property, otherwise \\\"Rejeita\\\" is printed.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Guilherme de Lima Bernardes, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThe archipelago of Nlog\\u00f4nia is formed by uninhabited and haunted islands. Each island has a small pier and N caves that are accessed exclusively by M secret trails. A long time ago, they were used by pirates to store jewelry, beverages and goods obtained after looting in cities and ships. With the end of this era, it is believed that there are treasures lost on some islands.\\n\\nFor security reasons, the pirates had a very curious method of storing their belongings. To hide a treasure, a single island was chosen. First, the area of each cave was calculated. Because they believed that prime numbers brought luck, only caves \\u00a0whose area value was also a prime number were chosen, in a total of K caves. \\u00a0The treasure was divided into K equal parts and distributed along the selected caves.\\n\\nAfter exploring debris from an old pirate ship, Rafael found maps describing some islands where possibly treasures were hidden. As Rafael faield the algorithms course, he asked for you help to write a program in which given the characteristics of an island, you have to determine the least time possible to leave the pier, collect the treasure, which \\u00a0is go through all the caves containing parts from the treasure and then return to the pier.\\n\\t\\t\\t\",\n    \"id\": 2628,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of several test cases. A first line of a test case with two integers N and M (1 \\u2264 N \\u2264 100, 1 \\u2264 M \\u2264 N (N -1) / 2), respectively representing the number of caves on an island and number of secret paths. The second line consists of integers N, where the ith number Xi represents an area of the ith cave (1 \\u2264 Xi \\u2264 10^5). You can assume there will be between 1 and 15 prime numbers. Therefore, 1 \\u2264 K \\u2264 15. As next M three complete lines A, B and C (1 \\u2264 A, B \\u2264 N + 1, A! = B and 1 \\u2264 C \\u2264 1000) indicating that there is a secret path between how Caves A and B and which are spent C minutes to complete the journey. The value N + 1 represents the \\u00a0of the island, so when A or B for equal N + 1 means that there is a path between the pier and one of the caves. You can assume that it is always possible to walk a path between any pair of caves, or between the pier and any cave.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Treasure Hunt\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print out the value that represents, in minutes, the shortest possible time for Rafael to leave the island , collect the treasure, and return to the pier. You must not take in consideration \\u00a0the time spent by Rafael to get some of the treasure and walk through a cave.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Matheus Pimenta, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tRodoido has an Arctic Monkeys cover band and often plays in concerts at Brasilia. The band performs in several places, such as Velvet Pub, Amsterdam Street and Stadt Bier, which ends up hindering Pimenta to watch all the concerts! He never knows where the Yellow Shoes will perform next. To solve this problem, Pimenta decided to collect data from presentations and make estimates. He was able to calculate the probability of the next concert being in place j, given that the last concert was in place i. However, he is not able to calculate the probability of the K-th concert being in place j, given that the initial concert was in place i, and asked for his help to finish this task.\\n\\t\\t\\t\",\n    \"id\": 2629,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of several test cases and ends with end of file. The first line of a test case contains an integer N (1 \\u2264 N \\u2264 5), which is the number of locations where the Yellow Shows can perform. Locations are labeled 1 to N. After that there will be N lines, each with N numbers. The i-th number of the j-th line is the probability of the next concert being in location j, since the last concert was in location i. The next line contains a single integer Q (1 \\u2264 Q \\u2264 100), the number of queries that Pepper will make. Each of the next Q lines contains the integers i, j, and K (1 \\u2264 K \\u2264 10^6) of a query.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Rodoido\",\n    \"output\": \"\\t\\t\\t\\tFor each query of each test case, print one line with the requested probability, with six decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Edson Alves da Costa J\\u00fanior, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tSome image processing algorithms require preprocessing in which it is necessary to turn a color image into a greyscale image. This conversion can be done in several ways, depending on the result you want to achieve.\\n\\nTo preserve the perception of basic colors by the human eye, an appropriate conversion would be to take 30% of the red component (R), 59% of the green component (G) and 11% of the blue component (B). In mathematical terms:\\n\\nP = 0, 30R + 0, 59G + 0, 11B\\n\\nOther possible approaches would be to determine the value of P through the arithmetic mean of the three components or assign P to the highest or the lowest values among the three components.\\n\\nGiven the RGB components of one pixel of the color image, determine the value of pixel P of the corresponding gray scale image, determining the conversion to be used. Neglect the decimal part of the result, if it exists.\\n\\t\\t\\t\",\n    \"id\": 2630,\n    \"input\": \"\\t\\t\\t\\t\\tThe input in T (1 \\u2264 T \\u2264 100) test cases, where the value of T is given in the first line of the input. Each test case consists of two lines: the first line contains the conversion to be used: eye for the first approach described, mean for the arithmetic mean, max for the largest component value and min for the lowest component value. The second line contains the R, G, B (0 \\u2264 R, G, B \\u2264 255) values of the colored image pixel.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Greyscale\",\n    \"output\": \"\\t\\t\\t\\tFor each test case the following message \\\"Caso #t: P\\\" should be printed, where P is the gray level of the pixel of the grayscale image after the conversion of the colored image pixel. This message must be followed by a line break.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Guilherme de Lima Bernardes, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tRoberto is one of the great teachers who compose the faculty of the university of his city. Training his students for the programming marathon is one of his greatest passions even being a very difficult task. Fortunately, this semester, several students have signed up for their competitive programming discipline.\\n\\nTo train his students, Roberto regularly applies tests regularly, where he always divides his class into different pairs, since this year, the marathon programming teams will be formed by only two members.\\n\\nThroughout the semester, analyzing the results of the evaluations and the behavior of the students in the classroom, Roberto realized that if the students chosen to form a pair have no affinity, the team performance is well inferior compared to the pair formed by students who Behavior. We can say that two students A and B have affinity if they belong to the same group of friends, that is, if they have a direct relation of friendship, or if it is possible to write a sequence of students X1, X2, X3, ..., XN, where for all i <N there is a direct relationship of friendship between students Xi and Xi + 1, with X1 = A and XN = B.\\n\\nThe programming marathon is approaching and Roberto has decided that he will assemble pairs composed only by students who have affinity. This way, the teams at his university will be more competitive, increasing the chances of qualifying for the next phase. As the class is crowded with students, he asked you to write a program in which given the student-friend relationships and a series of queries indicating two students, you have to determine for each query whether it is possible to assemble a pair with these two students.\\n\\t\\t\\t\",\n    \"id\": 2631,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of several test cases. The first line of a test case has three integers N, M e Q (2 \\u2264 N \\u2264 104, 0 \\u2264 M \\u2264 105, 1 \\u2264 Q \\u2264 103), representing, respectively, the number of students, the relations of friendship between the students and the number of inquiries. The next M lines contain two integers X and Y (1 \\u2264 X, Y \\u2264 N and X != Y) indicating that student X has a direct relationship of friendship with student Y. Then, each of the next Q lines describes a query with two integers A and B (1 \\u2264 A, B \\u2264 N and A != B), indicating the students of a possible team.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Making Pairs\",\n    \"output\": \"\\t\\t\\t\\tFor each test case print Q lines, where the i-th line is the answer to the i-th query. If it is possible to assemble a pair with the students indicated in the query print the character 'S', otherwise print the character 'N'. Print a blank line at the end of each test case.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Edson Alves da Costa J\\u00fanior, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIn the Magic and Sword Tower defense, the player can cast area spells to defeat the enemy units. The spells are elemental: fire, water, air and earth, and the affected region is determined by a circle whose radius depends on the level of the spell.\\n\\nThe table below lists each spell, damage and its radius per level:\\n\\n\\n\\nThe enemy units are delimited by a rectangle of width w and height h, with the lower left corner positioned at the point (x0, y0). The enemy will suffer damage if their bounding rectangle has any intercession with the area defined by the spell circle.\\n\\nGiven the position and the bounding rectangle of the enemy unit, the center of the explosion, the identifier and level of the spell, determine the damage to the unit. If the unit is out of the spell range, the damage is equal to zero.\\n\\t\\t\\t\",\n    \"id\": 2632,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of T (1 \\u2264 T \\u2264 1000) test cases, where the value of T is reported in the first line of the input. Each test case consists of two lines. The first contains four integers representing the dimensions w and h (1 \\u2264 w, h \\u2264 1000) of the rectangle and the coordinates x0 and y0 (0 \\u2264 x0, y0 \\u2264 1000) from the lower left corner. The second line of the test case contains a string with the spell identifier (fire, water, earth and air), the level N of this spell (1 \\u2264 N \\u2264 3) and the coordinates cx e cy (0 \\u2264 cx, cy \\u2264 1000) from the center of the explosion area.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Magic and Sword\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, the output must be the value of the damage received by the unit, followed by a line break.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Matheus Pimenta, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYuri is a good friend. We always do the \\\"brothers' barbecue ;)\\\" at his house! This time, the reason for the barbecue is that the brothers are finally starting to pass on good contests! So today we'll have a special edition of barbecue, with alcohol and soap soccer!\\n\\nThe soap soccer company is taking a long time to fill the field and Yuri, already bored, began to get distracted on the following question: if we baked the meat by the expiration date, what would be the resulting sequence of meat pieces? Since Yuri's MacBook is too far away (and laziness is too close), he asked for your help in answering this question.\\n\\t\\t\\t\",\n    \"id\": 2633,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is made up of several test cases and ends with and enf of file. The first line of a test case contains an integer N (0 \\u2264 N \\u2264 10), which is the number of pieces of meat from today's barbecue. Then there will be N lines, each with a string of maximum 20 characters, with only characters from 'a' to 'z', and an integer Di (0 \\u2264 Di \\u2264 50) representing the expiration date of the i-th piece. Yuri decided to collaborate and calculate at least this Di number of days until the expiration date, from today, of each piece of meat. It is guaranteed that if i ! = J, then Di ! = Dj.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Barbecue at Yuri\\u2019s\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with the sequence of pieces of meat that Yuri wants to calculate. Each piece must be separated by a single space.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Edson Alves da Costa J\\u00fanior, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tA group of scientists has been conducting a comprehensive research about the behavior of bacteria, more specifically their reproductive cycle and evolution.\\n\\nThe data was recorded for weeks, and a series of experiments were carried out each week to determine a transition matrix At, of dimensions 2 x 2, so that the information of the vector ut of week t could be computed through the expression ut = At ut-1, considering the initial value u 0 being known. However, on the eve of the publication of this results in a major scientific journal, an electric discharge corrupted the rigid disks where the matrices were stored!\\n\\nThe team began the difficult job of trying to retrieve such information in a timely manner. Soon it became clear that some of the matrices recovered had determinants equal to zero, which indicated that the data were corrupted, since all transition matrices should have non-zero determinants.\\n\\nAssist the team by writing software that, given transition matrices recovered from N weeks, allows:\\n\\n1. Know if all matrices in a time interval are consistent or if there is any corrupted matrix;\\n\\n2. Update the matrix At of a given week;\\n\\n3. Determine the longest time interval where all consecutive matrices are consistent.\\n\\t\\t\\t\",\n    \"id\": 2634,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of T (1 \\u2264 T \\u2264 10) test cases, where the value of T is given in the first line of the input. Each test case is represented by several lines: the first row contains the week w (1 \\u2264 w \\u2264 52) and the year y (1 \\u2264 y \\u2264 2015) where the experiment was started (ie where the first record was made ). Consider, for this problem, that each year consists of exactly 52 weeks. The second line contains the number N (1 \\u2264 N \\u2264 105) of consecutive weeks that had registered transition matrices. The following N lines each contain four integer values a11, a12, a21, a22 (-100 \\u2264 aij \\u2264 100), representing the transition coefficients of the matrix At (1 \\u2264 t \\u2264 N). Then there is a line with the number M (1 \\u2264 M \\u2264 105) commands to be executed. The following M lines contain commands, following the following formatting:\\n\\n1. \\\"Q a b\\\", with 1 \\u2264 a \\u2264 b \\u2264 N, where a and b are the numbers of the initial and final week of the interval that must be consulted in order to check whether or not there are matrices corrupted in this interval;\\n\\n2. \\\"Ut a11 a12 a21 a22\\\", with 1 \\u2264 t \\u2264 N, where t is the number of the week that must have the matrix replaced by the matrix with the coefficients a ii given in this line;\\n\\n3. \\\"M\\\", which is the command that returns the longest interval where all consecutive matrices of the range are consistent (that is, has determinant other than zero).\\n\\nNote: There will be a maximum of 10^3 'M' commands.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"On Behalf of The Science\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, the message \\\" Experimento #e:\\\", followed by a line break, where e is the number of the test case (whose count begins with the number one) is printed. For each Q command, a line should be printed with the message \\\"w1/y1 a w2/y2\\\": dados consistentes\\\"or\\\" w1/y1 a w2/y2: dados corrompidos\\\", where w1, w2 represent weeks (with two digits And with leading zeros if necessary) and y1, y2 represent the years (with four digits and leading zeros, if necessary) of the requested range. For each command M the message should be \\\"Maior periodo consistente: w1/y1 a w2/y2\\\". Each message associated with a command must be on a single line and two successive test cases must be separated by a blank line.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Guilherme de Lima Bernardes, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tLucas is a pretty radical guy when it comes to software licenses. Since beginning his undergraduate degree in computer engineering, he seeks to develop all the tools he needs. All this started after bad experiences using proprietary software. Now he believes that a real programmer must be self-sufficient, that is, he must build all the programs he needs, from a simple calculator to his own operating system.\\n\\nThis semester, Lucas is studying the web systems development course. To continue his philosophy of life, using only software he built himself, Lucas is already programming his own web browser. Much of the work has been completed, but some functionality still needs to be finished.\\n\\nLucas' browser has a search field where the user can enter a keyword, and clicking a confirmation button it will redirect to another page with the results of his search. When some string is entered in the search field, Lucas wants his program to display, below, some options to auto complete this string according to the searches already performed by the user.\\n\\nFor example, if the words \\\"algoritmos\\\" and \\\"algas\\\" have already been searched, when typing the string \\\"alg\\\", the program should suggest the words \\\"algorithms\\\" and \\\"algas\\\". Therefore, for each string entered, the program should suggest previously searched words prefixed with this string. If any word is equal to the typed string, it should also be suggested.\\n\\nLucas is concerned about the amount of words his program can suggest, and the maximum size they can reach. So he asked you to help him by writing a program where given a few words already searched and a series of queries composed of a string, indicate how many words the browser should suggest to the user, and the length of the largest of these words.\\n\\t\\t\\t\",\n    \"id\": 2635,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of several test cases. The first line of a test case has an integer N (1 \\u2264 N \\u2264 10^4) indicating the number of words that have already been searched by the Lucas\\u2019 program. Each of the next N lines contains a nonempty string of a maximum of 100 lowercase letters [a - z]. For each test case, N words are different. Then there will be an integer Q (1 \\u2264 Q \\u2264 100) indicating the number of queries. Each of the next Q lines describes a query with a non-empty string of a maximum of 100 lowercase letters [a - z], representing a string entered in the search field.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Web Browser\",\n    \"output\": \"\\t\\t\\t\\tFor each test case print Q lines, where the i-th row is the answer to the i-th query. The response of each query should be composed of two integers separated by space, representing, respectively, the number of words suggested by the program when entering the string indicated by the ith query, and the length of the largest word contained in that subset. If no words are suggested, print -1. Print a blank line at the end of each test case.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Edson Alves da Costa J\\u00fanior, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tPedro, like many other undergraduates, was fascinated by the beauty and sophistication of cryptography. He began to read historical references, to study the main algorithms and to search for articles and news that approached the subject in the most different aspects.\\n\\nHowever, the large volume of information gained in a short period of time has led to some questions and fears. Worried about quantum computing, which in theory would cripple RSA encryption, and motivated by the history of the DES algorithm, which had a more secure evolution called 3DES, he decided to propose a more secure version of RSA, called 3-RSA.\\n\\nIn 3-RSA, the module n, composed in the original algorithm by two distinct prime numbers, would now consist of 3 distinctly odd primes! Pedro was right that this modification would bring greater difficulty in breaking the algorithm, since the attackers now would have to find 3 factors of n, not only 2.\\n\\nKnowing that in cryptography, sometimes less is more, and willing to show to the motivated and well-intentioned Peter that the proposed modification actually weakens the RSA, factor the n module of the 3-RSA algorithm, showing its three prime factors.\\n\\t\\t\\t\",\n    \"id\": 2636,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a series of test cases. Each test is represented by a single line, contains the integer n (105 \\u2264 n \\u2264 1018), which represents the module of the 3-RSA algorithm. The input ends with the value n = 0, which should not be processed.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"3-RSA\",\n    \"output\": \"\\t\\t\\t\\tFor each test case a line containing the message \\u2019n = p x q x r\\u2019 should be printed, where p, q, r are the prime factors of n, with 3 \\u2264 p x q x r.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Matheus Pimenta, UNB  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tBatera's House is a place where a lot of things happen. That's where ideas like \\u201cbora pra chapada, nen\\u00e9m?? - Dudu\\u201d come from. It is also a place where a lot of slangs are used, such as \\\"p\\u00f4 deivis, mas bem que seria bom...\\\", or \\\"beeeeeem ...\\\". And it is also where many nicknames are created, such as \\\"Pimenta Filosofal\\\", \\\"Pai Alan\\\", \\\"Jonny Boy\\\", \\\"Pimenta Marinho\\\" and the best nickname of all: \\\"Jo\\u00e3o Henrique\\\".\\n\\nThe boys are playing the RPG invented by D\\u00f4do and Leo. The game consists of capturing monsters, training them and using them in battles. At this point, we are entering a map where there are several \\\"neutral\\\" locations, labeled 1 to V. In each place, it is possible that there is a coin and / or a lever. Whenever we pass a place with a coin, we collect the coin, and no other coin appears in the same place if we return to it later. Whenever we pass through a location with a lever, we push the lever, and we never have to re-start it. Each lever opens a set of paths that connect pairs of neutral locations. Some paths are already open initially. To cross each path, we must defeat (or capture, if we want to become masters) the monsters that appear on this path. Monsters always appear when crossing any path, so it is always necessary to defeat them, even if they pass through a path that we have crossed before. To defeat a monster, we use the monsters we have already captured. Our monsters have a list of M attacks, each with a mana cost and a damage value that is imposed to the target monster. We are at location 1 and the exit of the map is at location V. Location 1 does not contain a coin or a lever.\\n\\nSince this is a serious game and it has to be taken seriously, Jo\\u00e3o Henrique, who became a fan of graph theory after studying the course given by Teacher Claus, is trying to optimize our crossing. He asked for his help to calculate the minimum cost (mana) needed to cross, collect all the coins and ... not catching any monster (Jonny, do you think the balloon is spherical and frictionless? How do you want to become a master monster captor, Jo\\u00e3o Henrique?).\\n\\n\\t\\t\\t\",\n    \"id\": 2637,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of several test cases and ends with end of file (EOF). The first line of a test case contains the integers M, V, E, C, and L. Each of the next M lines describes an attack. Each line is composed of integers v and w, which are respectively the damage caused by the attack and the mana cost of the attack. Each of the next E lines describes a path. Each line starts with four integers a, b, m, and l. The path connects places a and b. The next m integers are the hit points h of each of the m monsters that appear on the way. If the integer l is zero, then the path is initially open. Otherwise, it is released by the label lever 1. There is at most one path connecting a couple of locations. Each of the next C lines describes a coin. For 1 \\u2264 i \\u2264 C, the i-th line contains an integer u, the label of the vertex in which is the label currency i. Each of the next L lines describes a lever. For 1 \\u2264 i \\u2264 L, the i-th line contains an integer u, the label of the vertex in which the label lever i is.\\n\\nRestrictions:\\n\\n\\n\\t\\n\\t1 \\u2264 M, v, w, h \\u2264 100, 0 \\u2264 m \\u2264 20;\\n\\t\\n\\t\\n\\t1 \\u2264 V \\u2264 100, 0 \\u2264 E \\u2264 V (V \\u2013 1) / 2, 1 \\u2264 a, b, u \\u2264 V\\n\\t\\n\\t\\n\\t0 \\u2264 C, L \\u2264 5, 0 \\u2264 l \\u2264 L\\n\\t\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Batera\\u2019s House\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with the response.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By ACM-ICPC World Finals 2017  United States\",\n    \"category\": \"Beginner\",\n    \"description\": \"Developed in the 1940s in the United Kingdom, the game of Cluedo is one of the most popular board games in the world. The object of the game is to determine who murdered Mr. Body, which weapon was used to murder him, and where the murder took place. The game uses a set of cards representing six persons (labeled A, B, . . . , F), six weapons (labeled G, H, . . . , L) and nine rooms (labeled M, N, . . . , U). At the start of the game, one person card, one weapon card, and one room card are selected at random and removed from the deck so no one can see them \\u2013 they represent the murderer, the murder weapon, and the murder location. The remaining 18 cards are shuffled and dealt to the players, starting with player 1, then to her right player 2, and so on. Some players may end up with one more card than others. For the purposes of this problem there are four players, so the person to the right of player 4 is player 1.\\n\\nThe rest of the game is spent searching for clues. Players take turns, starting with player 1 and moving to the right. A turn consists of making a suggestion (consisting of a murder suspect, a weapon, and a room) and asking other players if they have any evidence that refutes the suggestion. For example, you might say to another player \\u201cI believe the murderer was person A, using weapon L, in room T.\\u201d If the other player is holding exactly one of these cards, that player must show you (and only you) that card. If they have more than one such card, they can show you any one of them.\\n\\nWhen making a suggestion, you must first ask the person to your right for any evidence. If they have none, you continue with the person on their right, and so on, until someone has evidence, or no one has any of the cards in your suggestion.\\n\\nMany times you can gain information even if you are not the person making the suggestion. Suppose, in the above example, you are the third player and have cards A and T. If someone else shows evidence to the suggester, you know that it must be weapon card L. Keeping track of suggestions and who gave evidence at each turn is an important strategy when playing the game.\\n\\nTo win the game, you must make an accusation, where you state your final guess of the murderer, weapon, and room. After stating your accusation, you check the three cards that were set aside at the start of the game \\u2013 if they match your accusation, you win! Needless to say, you want to be absolutely sure of your accusation before you make it.\\n\\nHere is your problem. You are player 1. Given a set of cards dealt to you and a history of suggestions and evidence, you need to decide how close you are to being able to make an accusation.\",\n    \"id\": 2639,\n    \"input\": \"The input starts with an integer n (1 \\u2264 n \\u2264 50), the number of suggestions made during the game. Following this is a line containing the five cards you are dealt, all uppercase letters in the range \\u2018A\\u2019. . . \\u2018U\\u2019. The remaining n lines contain one suggestion per line. Each of these lines starts with three characters representing the suggestion (in the order person, weapon, room), followed by the responses of up to three players, beginning with the player to the right of the player making the suggestion. If a player presents no evidence, a \\u2018-\\u2019 (dash) is listed; otherwise an \\u201cevidence character\\u201d is listed. If the specific evidence card is seen by you (either because you provided it or you were the person receiving the evidence) then the evidence character identifies that card; otherwise the evidence character is \\u2018 * \\u2019. Note that only the last response can be an evidence character. All characters are separated by single spaces. Only valid suggestion/response sequences\\nappear in the input.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Get a Clue!\",\n    \"output\": \"Display a three character string identifying the murderer, the murder weapon, and the room. If the murderer can be identified, use the appropriate letter for that person; otherwise use \\u2018?\\u2019. Do the same for the murder\\nweapon and the room.\",\n    \"timelimit\": 4.0\n}""{\n    \"author\": \"By ACM-ICPC World Finals 2017  United States\",\n    \"category\": \"Beginner\",\n    \"description\": \"It is a sunny day in spring and you are about to meet Patrick, a close friend and former partner in crime.\\nPatrick lost most of his money betting on programming contests, so he needs to pull off another job. For this\\nhe needs your help, even though you have retired from a life of crime. You are reluctant at first, as you have\\nno desire to return to your old criminal ways, but you figure there is no harm in listening to his plan.\\n\\nThere is a shipment of expensive consumer widgets in a nearby warehouse and Patrick intends to steal as\\nmuch of it as he can. This entails finding a way into the building, incapacitating security guards, passing\\nthrough various arrays of laser beams \\u2013 you know, the usual heist techniques. However, the heart of the\\nwarehouse has been equipped with a security system that Patrick cannot disable. This is where he needs\\nyour help.\\n\\nThe shipment is stored in large cubical crates, all of which have the same dimensions. The crates are stacked\\nin neat piles, forming a three-dimensional grid. The security system takes pictures of the piles once per hour\\nusing three cameras: a front camera, a side camera and a top camera. The image from the front camera\\nshows the height of the tallest pile in each column, the image from the side camera shows the height of the\\ntallest pile in each row, and the image from the top camera shows whether or not each pile is empty. If the\\nsecurity system detects a change in any of the images, it sounds an alarm.\\n\\nOnce Patrick is inside, he will determine the heights of the piles and send them to you. Figure C.1 shows a\\npossible layout of the grid and the view from each of the cameras.\\n\\n\\n\\nFigure 1: Grid of heights and the corresponding camera views.\\n\\n\\n\\nFigure 2: Possible grid of heights after the heist\\n\\nPatrick wants to steal as many crates as possible. Since he cannot disable the security system, he plans to\\nfool it by arranging the remaining crates into piles so that the next set of camera images are the same. In\\nthe above example, it is possible to steal nine crates. Figure C.2 shows one possible post-heist configuration\\nthat appears identical to the security system.\\n\\nPatrick asks you to help him determine the maximum number of crates that can be stolen while leaving a\\nconfiguration of crates that will fool the security system. Will you help him pull off this final job?\",\n    \"id\": 2640,\n    \"input\": \"The first line of input contains two integers r (1 \\u2264 r \\u2264 100) and c (1 \\u2264 c \\u2264 100), the number of rows and\\ncolumns in the grid, respectively. Each of the following r lines contains c integers, the heights (in crates) of\\nthe piles in the corresponding row. All heights are between 0 and 109 inclusive.\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Mission Improbable\",\n    \"output\": \"Display the maximum number of crates that can be stolen without being detected.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By ACM-ICPC World Finals 2017  United States\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"In this problem you will be solving one of the most profound challenges of humans across the world since the beginning of time \\u2013 how to make lots of money.\\n\\nYou are a middleman in the widget market. Your job is to buy widgets from widget producer companies and sell them to widget consumer companies. Each widget consumer company has an open request for one widget per day, until some end date, and a price at which it is willing to buy the widgets. On the other hand, each widget producer company has a start date at which it can start delivering widgets and a price at which it will deliver each widget.\\n\\nDue to fair competition laws, you can sign a contract with only one producer company and only one consumer company. You will buy widgets from the producer company, one per day, starting on the day it can start delivering, and ending on the date specified by the consumer company. On each of those days you earn the difference between the producer\\u2019s selling price and the consumer\\u2019s buying price.\\n\\nYour goal is to choose the consumer company and the producer company that will maximize your profits.\",\n    \"id\": 2641,\n    \"input\": \"The first line of input contains two integers m and n (1 <= m; n <= 500 000) denoting the number of producer and consumer companies in the market, respectively. It is followed by m lines, the ith\\u00a0of which contains two integers pi\\u00a0and di\\u00a0(1 <=\\u00a0pi; di\\u00a0<=\\u00a0109), the price (in dollars) at which the ith\\u00a0producer sells one widget and the day on which the first widget will be available from this company. Then follow n lines, the jth of which contains two integers qj\\u00a0and ej (1 <=\\u00a0qj\\u00a0; ej\\u00a0<=\\u00a0109), the price (in dollars) at which the jth\\u00a0consumer is willing to buy widgets and the day immediately after the day on which the last widget has to be delivered to this company.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Money for Nothing\",\n    \"output\": \"Display the maximum total number of dollars you can earn. If there is no way to sign contracts that gives you any profit, display 0.\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"By ACM-ICPC World Finals 2017  United States\",\n    \"category\": \"Beginner\",\n    \"description\": \"Pixels in a digital picture can be represented with three integers in the range 0 to 255 that indicate the\\nintensity of the red, green, and blue colors. To compress an image or to create an artistic effect, many\\nphoto-editing tools include a \\u201cposterize\\u201d operation which works as follows. Each color channel is examined\\nseparately; this problem focuses only on the red channel. Rather than allow all integers from 0 to 255 for the\\nred channel, a posterized image allows at most k integers from this range. Each pixel\\u2019s original red intensity\\nis replaced with the nearest of the allowed integers. The photo-editing tool selects a set of k integers that\\nminimizes the sum of the squared errors introduced across all pixels in the original image. If there are n\\npixels that have original red values r1 , . . . , rn , and k allowed integers v1 , . . . , vk , the sum of squared errors is defined as\\n\\n\\n\\nYour task is to compute the minimum achievable sum of squared errors, given parameter k and a description\\nof the red intensities of an image\\u2019s pixels.\",\n    \"id\": 2643,\n    \"input\": \"The first line of the input contains two integers d (1 \\u2264 d \\u2264 256), the number of distinct red values that occurin the original image, and k (1 \\u2264 k \\u2264 d), the number of distinct red values allowed in the posterized image. The remaining d lines indicate the number of pixels of the image having various red values. Each such line\\ncontains two integers r (0 \\u2264 r \\u2264 255) and  p (1 \\u2264 p \\u2264 226 ), where r is a red intensity value and p is the\\nnumber of pixels having red intensity r. Those d lines are given in increasing order of red value.\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Posterize\",\n    \"output\": \"Display the sum of the squared errors for an optimally chosen set of k allowed integer values.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"By ACM-ICPC World Finals 2017  United States\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"The owner of the Automatic Cellular Manufacturing corporation has just patented a new process for the mass production of identical parts. Her approach uses a two-dimensional lattice of two-state cells, each of which is either \\u201cempty\\u201d or \\u201cfilled.\\u201d The exact details are, of course, proprietary.\\n\\nInitially, a set of cells in the lattice is filled with a copy of the part that is to be reproduced. In a sequence of discrete steps, each cell in the lattice simultaneously updates its state by examining its own state and those of its eight surrounding neighbors. If an odd number of these nine cells are filled, the cell\\u2019s state in the next time step will be filled, otherwise it will be empty. Figure G.1 shows several steps in the replication process for a simple pattern consisting of three filled cells.\\n\\n\\n\\nFigure 1: The replication process.\\n\\nHowever, a bug has crept into the process. After each update step, one cell in the lattice might spontaneously flip its state. For instance, Figure G.2 shows what might happen if a cell flipped its state after the first time step and another flipped its state after the third time step.\\n\\n\\n\\nFigure 2: Errors in the replication process. This figure corresponds to Sample Input 1.\\n\\nUnfortunately, the original patterns were lost, and only the (possibly corrupted) results of the replication remain. Can you write a program to determine a smallest possible nonempty initial pattern that could have resulted in a given final pattern?\",\n    \"id\": 2644,\n    \"input\": \"The first line of input contains two integers w (1 \\u2264 w \\u2264 300) and h (1 \\u2264 h \\u2264 300), where w and h are the width and height of the bounding box of the final pattern. Following that are h lines, each containing w characters, giving the final pattern. Each character is either \\u2018.\\u2019 (representing an empty cell) or \\u2018#\\u2019 (repre- senting a filled cell). There is at least one filled cell in the first row, in the last row, in the first column, and in the last column.\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Replicate Replicate Rfplicbte\",\n    \"output\": \"Display a minimum-size nonempty pattern that could have resulted in the given pattern, assuming that at each stage of the replication process at most one cell spontaneously changed state. The size of a pattern is the area of its bounding box. If there is more than one possible minimum-size nonempty starting pattern, any one will be accepted. Use the character \\u2018.\\u2019 for empty cells and \\u2018#\\u2019 for filled cells. Use the minimum number of rows and columns needed to display the pattern.\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy ACM-ICPC World Finals 2017  United States\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\n\\nYou have decided to spend a day of your trip to Rapid City taking photographs of the South Dakota Badlands, which are renowned for their spectacular and unusual land formations. You are an amateur photographer, yet very particular about lighting conditions.\\n\\nAfter some careful research, you have located a beautiful location in the Badlands, surrounded by pic- turesque landscapes. You have determined a variety of features that you wish to photograph from this location. For each feature you have identified the earliest and latest time of day at which the position of the sun is ideal. However, it will take quite a bit of time to take each photograph, given the need to repo- sition the tripod and camera and your general perfectionism. So you are wondering if it will be possible to successfully take photographs of all these features in one day.\\n\\t\\t\\t\",\n    \"id\": 2645,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input contains two integers n (1 \\u2264 n \\u2264 104 ) and t (1 \\u2264 t \\u2264 105 ), where n is the number\\nof desired photographs and t is the time you spend to take each photograph. Following that are n additional\\nlines, each describing the available time period for one of the photographs. Each such line contains two\\nnonnegative integers a and b, where a is the earliest time that you may begin working on that photograph,\\nand b is the time by which the photograph must be completed, with a + t \\u2264 b \\u2264 109 .\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Scenery\",\n    \"output\": \"\\t\\t\\t\\tDisplay yes if it is possible to take all n photographs, and no otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 6.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy ACM-ICPC World Finals 2017  United States\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\nBy now you have probably heard that there is a spectacular stone sculp- ture featuring four famous U.S. presidents at Mount Rushmore. How- ever, very few people know that this monument contains a secret cham- ber. This sounds like something out of a plot of a Hollywood movie, but the chamber really exists. It can be found behind the head of Abraham Lincoln and was designed to serve as a Hall of Records to store impor- tant historical U.S. documents and artifacts. Historians claim that the construction of the hall was halted in 1939 and the uncompleted cham- ber was left untouched until the late 1990s, but this is not the whole truth.\\n\\nIn 1982, the famous archaeologist S. Dakota Jones secretly visited the monument and found that the chamber actually was completed, but it was kept confidential. This seemed suspicious and after some poking around, she found a hidden vault and some documents inside. Unfortu- nately, these documents did not make any sense and were all gibberish. She suspected that they had been written in a code, but she could not decipher them despite all her efforts.\\n\\nEarlier this week when she was in the area to follow the ACM-ICPC World Finals, Dr. Jones finally dis- covered the key to deciphering the documents, in Connolly Hall of SDSM&T. She found a document that contains a list of translations of letters. Some letters may have more than one translation, and others may have no translation. By repeatedly applying some of these translations to individual letters in the gibberish documents, she might be able to decipher them to yield historical U.S. documents such as the Declaration of Independence and the Constitution. She needs your help.\\n\\nYou are given the possible translations of letters and a list of pairs of original and deciphered words. Your task is to verify whether the words in each pair match. Two words match if they have the same length and if each letter of the first word can be turned into the corresponding letter of the second word by using the available translations zero or more times.\\n\\t\\t\\t\",\n    \"id\": 2646,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains two integers m (1 \\u2264 m \\u2264 500) and n (1 \\u2264 n \\u2264 50), where m is the number of translations of letters and n is the number of word pairs. Each of the next m lines contains two distinct space-separated letters a and b, indicating that the letter a can be translated to the letter b. Each ordered pair of letters (a, b) appears at most once. Following this are n lines, each containing a word pair to check. Translations and words use only lowercase letters \\u2018a\\u2019\\u2013\\u2018z\\u2019, and each word contains at least 1 and at most 50 letters.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Secret Chamber at Mount Rushmore\",\n    \"output\": \"\\t\\t\\t\\tFor each pair of words, display \\\"yes\\\" if the two words match, and \\\"no\\\" otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy ACM-ICPC World Finals 2017  United States\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tCurse your rival! Every year at the annual Rock Paper Scissors tournament, you have made it to the final match. (Your Rock technique is unmatched, and your Paper cuts to the bone! Your Scissors need a little work, though.) But every year, he defeats you, even though his moves appear entirely random! And he claims to the press that he simply cannot be beaten. What is his secret?\\n\\nFortunately, you think you have figured it out. This year, just before the tournament, you caught him visiting various shamans around town. Aha! He is using the supernatural against you! You figured two can play at this game. So you went and visited a set of fortune-tellers, who have each used a Tarot deck to predict a sequence that your rival will end up using, sometime during the match.\\n\\nHowever, your initial excitement has passed, and now you are feeling a little silly. This cannot possibly work, right? In the end it feels like you have paid good money for a fraudulent, random set of predictions. Oh well; you might as well keep an eye out for some of them during the match. But which predictions will you use?\\n\\nIn the final match, you and your rival will play n rounds of Rock Paper Scissors. In each round, your rival and you will both choose one of the three options (Rock, Paper, or Scissors). Based on your selections, a winner of the round will be determined (exactly how is irrelevant to this problem).\\n\\nGiven the length of the final match and the various predictions, sort them in order of how likely they are to appear sometime during the match as a contiguous sequence of options chosen by your rival, assuming he is choosing his symbol in each round independently and uniformly at random.\\n\\t\\t\\t\",\n    \"id\": 2648,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of input contains two integers n (1 \\u2264 n \\u2264 106 ), the number of rounds in the final match, and s (1 \\u2264 s \\u2264 10), the number of sequences. The remaining s lines each describe a prediction, consisting of a string of characters \\u2018R\\u2019, \\u2018P\\u2019, and \\u2018S\\u2019. All predictions have the same length, which is between 1 and n characters long, inclusive, and no longer than 105 .\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Tarot Sham Boast\",\n    \"output\": \"\\t\\t\\t\\tDisplay all of the predictions, sorted by decreasing likelihood of appearance sometime during the final match. In the case of tied predictions, display them in the same order as in the input.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAfter the colossal titan destroys the Maria wall, the exploration troop has decided to build a new wall, this wall will be so hard that no titan can break it.\\n\\nBut if the titan is too tall he can simply jump over the wall, because of this the Exploration Army hired you to write a program, that given the height of the wall and the size of the knowed titans, answer which Titans will be able To pass over the wall.\\n\\nA titan can jump over a wall only if it is taller than the wall.\\n\\t\\t\\t\",\n    \"id\": 2650,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N (1 \\u2264 N \\u2264 100) and W (1 \\u2264 W \\u2264 1000) representing respectively how many titans the Exploration Troop knows and the size of the wall they intend to build.\\n\\nEach of the following N lines contains a string S (1 \\u2264 |S| \\u2264 100) representing the name of the titan, followed by an integer H (1 \\u2264 H \\u2264 1000) representing the height of the titan. The string is composed of uppercase, lowercase letters and spaces.\\n\\nThe name of a titan never begins or ends with space.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Building Walls\",\n    \"output\": \"\\t\\t\\t\\tYour show should show which titans will be able to pass over the wall, the titans should be displayed in the order they appear at the entrance.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tLink is a famous hero and so receives several letters from his fans. But even being famous, everyone continues to call him Zelda.\\n\\nBecause of this Link is upset, so upset that every times he receives a letter he confers the manner that he fan referred to him in the letter, and in case he notices the \\\"zelda\\\" excerpt in the name he gets angry and throws the card away.\\n\\nYour task is to determine if Link will be angry or not, becacuse of the way your fan has called you in the letter.\\n\\t\\t\\t\",\n    \"id\": 2651,\n    \"input\": \"\\t\\t\\t\\t\\tContains a string S (1 \\u2264 |S| \\u2264 105) that represents how the Link fan referred to him on the letter The string is composed of only uppercase and lowercase letters.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Upset Link\",\n    \"output\": \"\\t\\t\\t\\tYour program should display \\\"Link Bolado\\\" if the name contains the phrase \\\"zelda\\\" or \\\"Link Tranquilo\\\" otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tA farmer was bored and so he decided to count how many species of trees existed on his farm, after hours trying to count he ended giving up because there were many trees on the farm.\\n\\nVery frustrated he decided to call you to develop a program that counts how many different types of trees there are on the farm.\\n\\nTwo trees are the same if they have the same shape.\\n\\t\\t\\t\",\n    \"id\": 2652,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 40) representing how many trees there are on the farm. The next N lines begin with an integer M (1 \\u2264 M \\u2264 40) representing how many vertices this tree has, followed by M-1 integers x2, x3 ...., xn integers representing one of the connections of these vertices from vertex two.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"How Many Trees?\",\n    \"output\": \"\\t\\t\\t\\tPrint how many different types of trees there are on the farm.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIn the game The Witcher, Sigismund Dijkstra is the leader of the Redanian Secret Service, because of this he is one of the most important people in the world.\\r\\n\\r\\nIn addition Dijkstra has a large treasure, which has several types of jewelry.\\r\\n\\r\\nDijkstra is very curious to know how many different types of jewelry his treasure has.\\r\\n\\r\\nKnowing that you are the best programmer on the continent Dijkstra hired you to check how many different types of jewelry he has in his treasure.\\n\\t\\t\\t\",\n    \"id\": 2653,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry consists of several lines and each contains a string describing one of Dijkstra's jewels. This string is composed only of the characters '(' and ')', the sum of the length of all the string does not exceed 106.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Dijkstra\",\n    \"output\": \"\\t\\t\\t\\tPrint how many different kinds of jewelry Dijkstra has.\\r\\n\\r\\n\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAfter the death of Ares, the last godofor, the other gods decided to make a contest to decide who will be new godofor. But creatures of various universes had an interest in the place. Because there are so many candidates, is very hard to the gods select one of them, so they decided to resort to you, the god of programming, they want you to develop a program that decides who will be the new godofor based on the criteria defined by the gods.\\n\\n\\nCandidates will be evaluated based on three attributes, candidate's power level, how many gods the candidate has already killed and how many times the candidate has already died. The godofor must be the most powerful candidate, in the case of a tie, it must be the candidate who killed more gods, if a tie occurs again, the chosen one will be the candidate who died the least, if even the tie persists, the godofor will be the candidate with the lowest name Lexicographically.\\n\\t\\t\\t\",\n    \"id\": 2654,\n    \"input\": \"\\t\\t\\t\\t\\the first line contains an integer N (1 \\u2264 N \\u2264 100) representing how many creatures have signed up to try to be the new godofor. Each of the following N lines contains a string S (1 \\u2264 |S| \\u2264 100) representing the name of the creature, followed by three integers P (1 \\u2264 P \\u2264 100),K (1 \\u2264 K \\u2264 100), M (1 \\u2264 M \\u2264 100) representing respectively the power of the cretature, how many gods he has already killed, and how many times he has already died. The string is composed of uppercase and lowercase letters.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Godofor\",\n    \"output\": \"\\t\\t\\t\\tYour program should show who will be the new godofor.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tGeraldo de R\\u00edvea is a witcher, and like every good witcher he prepares well, before facing a monster.\\n\\nGeraldo wants to travel to Novigrad, for this he will have to cross a road that starts in the south and goes north straight, the big problem is that in every integer coordinate of that road there is a monster.\\n\\nSince Geraldo does not like being caught unwarned he wants to know how many monster types exist from the X coordinates to the Y coordinate of that road.\\n\\nTo solve this problem Geraldo asked you to do a program that performs the following\\u00a0operations:\\n\\n1 L R - Print how many different monsters there are from coordinate L to R on the road.\\u00a0\\n\\n2 C T - The monster of coordinate C is now a monster of type T.\\n\\t\\t\\t\",\n    \"id\": 2655,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains three integers N, Q (1 \\u2264 N, Q \\u2264 105) and M (1 \\u2264 M \\u2264 50) representing the size of the road, the number of operations Geraldo wants to do, how many types of monsters Geraldo knows.\\n\\nThe second line will contain N integers x1, x2, ...., xn representing the type of monster that is initially in that position.\\n\\nThe next Q lines will contain Geraldo's queries, following the pattern described above.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Dangerous Trail\",\n    \"output\": \"\\t\\t\\t\\tPrint query responses.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tGiven a grid with its initial values set to zero and Q queries of the types:\\n\\n1 x y: Places the value one at the position (x, y) of the board.\\n\\n2 x y: Set the value zero to the (x, y) position of the board.\\n\\n3 x y d: Returns the sum of two values of all positions of the board that are from  a Manhattan distance of at most D from the position (x, y).\\n\\t\\t\\t\",\n    \"id\": 2656,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer Q(1 \\u2264 Q \\u2264 105).\\n\\nThe next Q lines contain queries as described earlier.\\n(0 \\u2264 X, Y, D \\u2264 105)\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Rhombus\",\n    \"output\": \"\\t\\t\\t\\tFor each query of type three print the sum of all the positions of the board that are from a Manhattan distance of at most D from the position (x, y).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Abner Samuel P. Palmeira, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tSensates, or Homo sensoriums, are a species of humans that are telepathically connected with other people throughout the world. A group of sensates is called a cluster, and the members of a cluster can contact each other regardless of where they are in the world. After knowing the organizers of programming contests were very worried because even if a person does not know how to program, if someone in your cluster knows, you will do well in the competition even without knowing anything. Because of this marathon organizers have created new rules for determining whether a person can participate in a competition or not.\\n\\nFirstly, each person on the planet will receive a score of one to ten, in order to measure how well they program. After this for the person to participate she will have to fit into one of the categories below:\\n\\n1. Do not be a sensate.\\n\\n2. Be a sensible and have no one in the same cluster with programming level greater than five.\\n\\n3. Be a sensible and have your programming level greater or equal to 5.\\n\\nDevelop a program that can determine whether or not a person can participate in programming competitions.\\n\\t\\t\\t\",\n    \"id\": 2657,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains three integers N, M, and Q (1 \\u2264 N, M, Q \\u2264 104) representing respectively the number of people, how many connections there are between these people and how many queries will be performed. Each of the following N lines contains a string S (1 \\u2264 |S| \\u2264 10) and an integer V (0 \\u2264 V \\u2264 10) representing respectively the person's name and its programming level. The next M will contain two strings S1 and S2 (1 \\u2264 |S1|, |S2| \\u2264 10), representing that person S1 and S2 are in the same cluster. The next Q lines will contain a string T (1 \\u2264 |T| \\u2264 10) that represents the name of the person who wants to participate in the competition.\\n\\nStrings will be composed only of uppercase and lowercase letters.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Sensate\",\n    \"output\": \"\\t\\t\\t\\tFor each Q query print \\\"S\\\" if the person can compete or \\\"N\\\" otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tA maratona de composi\\u00e7\\u00e3o de sonatas para piano intergal\\u00e1tico est\\u00e1\\u00a0tentando dificultar a vida dos competidores, pois cada vez mais seres de intelig\\u00eancia superior est\\u00e3o participando. O piano \\u00e9\\u00a0composto de N teclas, numeradas de 0 a N \\u2212 1. O sistema tonal intergal\\u00e1tico possui 9 notas musicais, com valores de 0 a 8. Inicialmente todas as teclas do piano est\\u00e3o associadas \\u00e0\\u00a0mesma nota 1. O competidor vai tocar uma sequ\\u00eancia de acordes. Cada acorde intergal\\u00e1tico \\u00e9\\u00a0composto por duas teclas distintas, a e b, 0 \\u2264 a < b < N. Quando o acorde \\u00e9\\u00a0tocado, o piano vai emitir a nota mais frequente, f, entre todas as teclas do intervalo [a, b]. Se houver mais de uma nota mais frequente, ele emite a maior delas. Imediatamente ap\\u00f3s emitir a nota, o piano muda a nota associada a todas as teclas do intervalo [a, b]. A nova nota associada \\u00e0\\u00a0tecla k, a \\u2264 k \\u2264 b, ser\\u00e1\\u00a0a anterior mais f, m\\u00f3dulo 9.\\r\\n\\r\\nPor exemplo, se em determinado momento as notas associadas a um piano de N = 15 teclas s\\u00e3o\\r\\n\\r\\n\\r\\n\\r\\ne o acorde [3, 9] \\u00e9\\u00a0tocado, ent\\u00e3o a nota mais frequente ser\\u00e1\\u00a04 e as novas notas ap\\u00f3s o acorde ser\\u00e3o:\\r\\n\\r\\n\\r\\n\\r\\nDada a sequ\\u00eancia de Q acordes, seu programa deve imprimir as notas que estar\\u00e3o associadas \\u00e0s teclas do piano ap\\u00f3s todos os acordes da sequ\\u00eancia terem sido tocados.\\n\\t\\t\\t\",\n    \"id\": 2658,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros, N (2 \\u2264 N \\u2264 100000), e Q (1 \\u2264 Q \\u2264 100000), respectivamente o n\\u00famero de teclas do piano intergal\\u00e1tico e a quantidade de acordes. As Q linhas seguintes cont\\u02c6em, cada uma, dois inteiros A e B, (0 \\u2264 A < B < N), representando um acorde.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Acordes Intergal\\u00e1ticos\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve imprimir N inteiros, um por linha, representando as notas associadas \\u00e0s teclas do piano, ap\\u00f3s todos os acordes terem sido tocados.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tUm Registrador de Deslocamento \\u00e9\\u00a0um circuito que desloca de uma posi\\u00e7\\u00e3o os elementos de um vetor de bits. O registrador de deslocamento tem uma entrada (um bit) e uma sa\\u00edda (tamb\\u00e9m um bit), e \\u00e9\\u00a0comandado por um pulso de rel\\u00f3gio. Quando o pulso ocorre, o bit de entrada se transforma no bit mais significativo do vetor, o bit menos significativo \\u00e9\\u00a0jogado na sa\\u00edda do registrador, e todos os outros bits s\\u00e3o deslocados de uma posi\\u00e7\\u00e3o em dire\\u00e7\\u00e3o ao bit menos significativo do vetor (em dire\\u00e7\\u00e3o \\u00e0\\u00a0sa\\u00edda).\\r\\n\\r\\nUm Registrador de Deslocamento com Retroalimenta\\u00e7\\u00e3o Linear (em ingl\\u00eas, LFSR) \\u00e9\\u00a0um registrador de deslocamento no qual o bit de entrada \\u00e9\\u00a0determinado pelo valor do ou-exclusivo de alguns dos bits do registrador antes do pulso de rel\\u00f3gio. Os bits que s\\u00e3o utilizados na retroalimenta\\u00e7\\u00e3o do registrador s\\u00e3o chamados de torneiras. A figura abaixo mostra um LFSR de 8 bits, com tr\\u00eas torneiras (bits 0, 3 e 5).\\r\\n\\r\\n\\r\\n\\r\\nDurante uma competi\\u00e7\\u00e3o de programa\\u00e7\\u00e3o, enquanto aguardam a divulga\\u00e7\\u00e3o do resultado final, Ricardo e Cl\\u00e1udio se divertem com um LFSR que encontraram no local.\\r\\n\\r\\nEles usam o LFSR para gerar uma sequ\\u00eancia infinita de n\\u00fameros. Para gerar tal sequ\\u00eancia, antes de cada pulso do rel\\u00f3gio, os bits do registrador s\\u00e3o convertidos para decimal. Assim, para um LFSR como o da figura os primeiros elementos da sequ\\u00eancia s\\u00e3o: A0 = 169 (10101001), A1 = 212 (11010100), A2 = 106 (01101010), A3 = 53 (00110101) e A4 = 26 (00011010). Note que o valor dos bits antes do primeiro pulso \\u00e9\\u00a0o primeiro elemento da sequ\\u00eancia.\\r\\n\\r\\nEm cada rodada da brincadeira um deles fala dois n\\u00fameros inteiros, X e Y . Da\\u00ed\\u00a0em diante o outro deve encontrar uma subsequ\\u00eancia cont\\u00edgua, de tamanho maior ou igual a Y , dos elementos da sequ\\u00eancia gerada pelo LFSR, de modo que a soma dos elementos da subsequ\\u00eancia cont\\u00edgua seja divis\\u00edvel por X.\\r\\n\\r\\nDe alguma forma os dois s\\u00e3o capazes de se divertir com isso e encontrar as respostas mesmo sem a ajuda de um computador. E voc\\u00ea, dada a descri\\u00e7\\u00e3o de um LSFR e dois inteiros X e Y , \\u00e9\\u00a0capaz de encontrar uma subsequ\\u00eancia v\\u00e1lida (ou informar caso n\\u00e3o exista uma)?\\n\\t\\t\\t\",\n    \"id\": 2659,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha cont\\u00e9m cinco n\\u00fameros inteiros N, T, A0, X e Y . O inteiro N representa o n\\u00famero de bits (2 \\u2264 N \\u2264 30), T \\u00e9\\u00a0o n\\u00famero de torneiras (1 \\u2264 T \\u2264 N), A0 \\u00e9\\u00a0a representa\\u00e7\\u00e3o decimal do estado inicial do LFSR, X o valor pelo qual a soma da subsequ\\u00eancia cont\\u00edgua deve ser divis\\u00edvel (1 \\u2264 X \\u2264 106 ) e Y \\u00e9\\u00a0a quantidade m\\u00ednima de elementos na subsequ\\u00eancia cont\\u00edgua desejada (1 \\u2264 Y \\u2264 106 ). Os bits s\\u00e3o identificados por inteiros de 0 (bit menos significativo) a N \\u22121 (bit mais significativo). A segunda linha cont\\u00e9m T inteiros, separados por espa\\u00e7os, representando os identificadores dos bits que s\\u00e3o torneiras, em ordem crescente. O bit 0 sempre \\u00e9\\u00a0uma torneira.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Brincadeira\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve imprimir, em uma \\u00fanica linha, dois inteiros I e F, representando os \\u00edndices do primeiro e do \\u00faltimo elementos da subsequ\\u00eancia cont\\u00edgua escolhida. Caso n\\u00e3o exista uma solu\\u00e7\\u00e3o imprima a palavra impossivel. Caso exista mais de uma solu\\u00e7\\u00e3o poss\\u00edvel escolha aquela que minimiza o valor de F. Se mesmo assim houver mais de uma possibilidade opte por aquela que minimiza o valor de I.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tAs \\u201ccigarras peri\\u00f3dicas\\u201d americanas t\\u00eam o ciclo de vida mais longo de todos os insetos conhecidos. A cada 17 anos, estas cigarras peri\\u00f3dicas amadurecem, se acasalam, depositam ovos e morrem. Suas crias se refugiam debaixo da terra, a 20 cent\\u00edmetros de profundidade, onde elas se alimentar\\u00e3o da seiva de ra\\u00edzes por 17 anos, at\\u00e9\\u00a0que chegue seu dia de buscar um lugar ao sol.\\r\\n\\r\\nAcredita-se que esse n\\u00famero n\\u00e3o aconteceu por acaso, outras esp\\u00e9cies de cigarras da regi\\u00e3o tem ciclos de 13 anos, assim essas duas esp\\u00e9cies emergem ao mesmo tempo apenas a cada 221 anos. Isso \\u00e9\\u00a0desej\\u00e1vel pois dessa forma a chance de que as duas esp\\u00e9cies se misturem diminui consideravelmente e caracter\\u00edsticas indesej\\u00e1veis de uma popula\\u00e7\\u00e3o n\\u00e3o s\\u00e3o introduzidas na outra.\\r\\n\\r\\nInspirado por esse fen\\u00f4meno, uma nova varia\\u00e7\\u00e3o de algoritmo evolutivo foi criada. Na \\u00faltima etapa desse algoritmo as melhores poss\\u00edveis solu\\u00e7\\u00f5es s\\u00e3o divididas em popula\\u00e7\\u00f5es de modo que cada popula\\u00e7\\u00e3o i tem um ciclo de vida Ci . Al\\u00e9m disso uma popula\\u00e7\\u00e3o extra tamb\\u00e9m \\u00e9\\u00a0adicionada, de modo que a quantidade de itera\\u00e7\\u00f5es at\\u00e9\\u00a0que o ciclo de vida de todas as popula\\u00e7\\u00f5es coincida seja a maior poss\\u00edvel. Essas popula\\u00e7\\u00f5es s\\u00e3o ent\\u00e3o avaliadas at\\u00e9\\u00a0que o ciclo de vida de todas coincida e a melhor solu\\u00e7\\u00e3o ao final do processo \\u00e9\\u00a0escolhida. Como n\\u00e3o \\u00e9\\u00a0interessante esperar demais at\\u00e9\\u00a0que o algoritmo gere uma resposta, um limite superior L no n\\u00famero de itera\\u00e7\\u00f5es tamb\\u00e9m deve ser respeitado.\\r\\n\\r\\nDados os ciclos de vida das popula\\u00e7\\u00f5es criadas e o limite na quantidade de itera\\u00e7\\u00f5es L, sua tarefa \\u00e9\\u00a0computar qual o per\\u00edodo \\u00f3timo para a popula\\u00e7\\u00e3o extra que ser\\u00e1\\u00a0adicionada\\n\\t\\t\\t\",\n    \"id\": 2660,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m dois inteiros N e L, respectivamente, a quantidade de popula\\u00e7\\u00f5es geradas pelas etapas anteriores do algoritmo e o limite da quantidade de itera\\u00e7\\u00f5es, 2 \\u2264 N \\u2264 104 , 1 \\u2264 L \\u2264 106 . A linha seguinte cont\\u00e9m os N valores Ci representando a quantidade de itera\\u00e7\\u00f5es no ciclo de vida de cada popula\\u00e7\\u00e3o, onde 1 \\u2264 Ci . Voc\\u00ea\\u00a0pode assumir que os ciclos de vida das popula\\u00e7\\u00f5es atuais coincidem em menos de L itera\\u00e7\\u00f5es.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cigarras Peri\\u00f3dicas\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha com um inteiro representando o per\\u00edodo da popula\\u00e7\\u00e3o extra que maximiza a quantidade T de itera\\u00e7\\u00f5es at\\u00e9\\u00a0que os ciclos de vida de todas as popula\\u00e7\\u00f5es coincidam, respeitando a restri\\u00e7\\u00e3o de que T \\u2264 L. Caso exista mais de um valor poss\\u00edvel imprima o menor deles.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tTodo inteiro positivo pode ser escrito como um produto de pot\\u00eancias de primos. Por exemplo, 252 = 22 \\u00d7 32 \\u00d7 7. Um inteiro \\u00e9\\u00a0despojado se pode ser escrito como um produto de dois ou mais primos distintos, sem repeti\\u00e7\\u00e3o. Por exemplo, 6 = 2 \\u00d7 3 e 14 = 2 \\u00d7 7 s\\u00e3o despojados, mas 28 = 22 \\u00d7 7, 1, 17 n\\u00e3o s\\u00e3o despojados.\\n\\t\\t\\t\",\n    \"id\": 2661,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada consiste de uma \\u00fanica linha que cont\\u00e9m um inteiro N (1 \\u2264 N \\u2264 1012).\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Despojados\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha com um inteiro representando o n\\u00famero de divisores despojados de N.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAs notas musicais s\\u00e3o as unidades mais b\\u00e1sicas da composi\\u00e7\\u00e3o musical no ocidente. Muitas pessoas acreditam que existem apenas 7 notas musicais:\\r\\n\\r\\nd\\u00f3\\u00a0r\\u00e9\\u00a0mi f\\u00e1\\u00a0sol l\\u00e1\\u00a0si\\r\\n\\r\\nChamaremos essas notas de notas elementares. Na verdade, existem notas al\\u00e9m destas acima, normalmente identificadas pelo nome de uma das notas acima seguido do s\\u00edmbolo sustenido (#):\\r\\n\\r\\nd\\u00f3\\u00a0d\\u00f3# r\\u00e9\\u00a0r\\u00e9# mi f\\u00e1\\u00a0f\\u00e1# sol sol# l\\u00e1\\u00a0l\\u00e1# si\\r\\n\\r\\nAssim, existem 12 notas musicais b\\u00e1sicas distintas. Entretanto, a rigor, esta sequ\\u00eancia \\u00e9\\u00a0infinita e peri\\u00f3dica: ap\\u00f3s um \\u201csi\\u201d existe um outro \\u201cd\\u00f3\\u201d, e a sequ\\u00eancia se repete novamente.\\r\\n\\r\\nAs notas elementares s\\u00e3o mais conhecidas, por estarem em um tom musical conhecido como \\u201cd\\u00f3\\u00a0maior\\u201d. Em qualquer tom \\u201cmaior\\u201d, as dist\\u00e2ncias entre as poss\\u00edveis notas seguem um padr\\u00e3o. No tom \\u201cd\\u00f3\\u00a0maior\\u201d, por exemplo:\\r\\n\\r\\n\\r\\n\\r\\nNote que eu poderia usar qualquer \\u201cd\\u00f3\\u201d na escala de \\u201cd\\u00f3\\u00a0maior\\u201d, pois a nota seguinte ao \\u201csi\\u201d ser\\u00e1, novamente, um \\u201cd\\u00f3\\u201d. O mesmo vale para as demais notas. Um outro exemplo de notas em um determinado tom maior seria a escala de \\u201cd\\u00f3# maior\\u201d:\\r\\n\\r\\n\\r\\n\\r\\nGuilherme est\\u00e1\\u00a0aprendendo a tocar um teclado com 61 teclas, numeradas de 1 a 61. Assim, a nota 1 corresponde a um \\u201cd\\u00f3\\u201d, a nota 2 corresponde a um \\u201cd\\u00f3\\u00a0#\\u201d e assim por diante, at\\u00e9\\u00a0chegar nas notas 60 (um \\u201csi\\u201d) e 61 (um \\u201cd\\u00f3\\u201d).\\r\\n\\r\\nAcredita-se que as m\\u00fasicas com as melhores melodias s\\u00e3o aquelas que est\\u00e3o em algum tom maior, ou seja, m\\u00fasicas em que todas as notas pertencem \\u00e0\\u00a0escala de algum tom maior. Enquanto pratica no teclado, Guilherme usa um aparelho que grava todas as notas tocadas durante a m\\u00fasica. Para ajud\\u00e1-lo a melhorar sua t\\u00e9cnica voc\\u00ea\\u00a0decidiu criar um programa capaz de avaliar as m\\u00fasicas gravadas por ele e determinar se elas est\\u00e3o em algum tom maior ou n\\u00e3o.\\n\\t\\t\\t\",\n    \"id\": 2662,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada ter\\u00e1\\u00a0um n\\u00famero inteiro N, com 1 \\u2264 N \\u2264 105 , correspondente ao n\\u00famero de notas musicais da m\\u00fasica. Em seguida, ser\\u00e3o fornecidos N n\\u00fameros, um por linha, todos entre 1 e 61, inclusive, correspondendo \\u00e0s notas musicais.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Escala Musical\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve verificar se a m\\u00fasica est\\u00e1\\u00a0em algum tom maior. Em caso afirmativo, seu programa deve imprimir uma \\u00fanica linha com o tom maior (sem acentos) em que a m\\u00fasica est\\u00e1. Caso contr\\u00e1rio, seu programa deve imprimir uma linha contendo a palavra desafinado. Caso a m\\u00fasica possa estar em mais de um tom maior imprima aquele relativo a menor nota musical b\\u00e1sica, sendo que \\u201cdo\\u201d < \\u201cdo#\\u201d < \\u201cre\\u201d, . . .\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Maratona de Programa\\u00e7\\u00e3o da SBC \\u2013 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tEm diversas competi\\u00e7\\u00f5es acad\\u00eamicas, como a Olimp\\u00edada Brasileira de Inform\\u00e1tica (OBI), uma certa quantidade de competidores se classifica de uma fase para a fase seguinte, garantindo uma das vagas dispon\\u00edveis. Entretanto, normalmente essa quantidade \\u00e9\\u00a0vari\\u00e1vel, pois dada uma certa quantidade m\\u00ednima de classificados, \\u00e9\\u00a0frequente que haja empate na \\u00faltima vaga de classifica\\u00e7\\u00e3o. Neste caso, \\u00e9\\u00a0comum que todos os competidores empatados na \\u00faltima coloca\\u00e7\\u00e3o se classifiquem.\\r\\n\\r\\nSua tarefa \\u00e9\\u00a0ajudar a calcular o n\\u00famero de competidores classificados para a pr\\u00f3xima fase. Voc\\u00ea\\u00a0receber\\u00e1\\u00a0uma lista de pontua\\u00e7\\u00f5es obtidas pelos competidores e o n\\u00famero m\\u00ednimo de vagas para a fase seguinte e voc\\u00ea\\u00a0deve decidir quantos competidores de fato v\\u00e3o se classificar.\\n\\t\\t\\t\",\n    \"id\": 2663,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m um n\\u00famero inteiro N, 1 \\u2264 N \\u2264 1000, representando o n\\u00famero de competidores. A segunda linha conter\\u00e1\\u00a0um inteiro K, 1 \\u2264 K \\u2264 N, indicando o n\\u00famero m\\u00ednimo de competidores que devem se classificar para a pr\\u00f3xima fase. Em seguida, N linhas conter\\u00e3o, cada uma um n\\u00famero entre 1 e 1000, inclusive, correspondente \\u00e1\\u00a0pontua\\u00e7\\u00e3o de um competidor.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Fase\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve imprimir uma linha, contendo o n\\u00famero de classificados para a pr\\u00f3xima fase.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Maratona de Program\\u00e7\\u00e3o da SBC, ACM ICPC  2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tVin\\u00edcius gosta muito de se exercitar na academia de gin\\u00e1stica. Ele fez um acordo com o seu treinador para ter programas de exerc\\u00edcios diferentes a cada vez que usar a bicicleta ergom\\u00e9trica. Um programa, na linguagem das academias, \\u00e9 uma sequ\\u00eancia de n\\u00edveis de dificuldade do exerc\\u00edcio. Os programas de Vin\\u00edcius para a bicicleta ergom\\u00e9trica devem ter a mesma dura\\u00e7\\u00e3o em minutos e os n\\u00edveis de dificuldade devem mudar a cada minuto, para um n\\u00edvel imediatamente acima ou um n\\u00edvel imediatamente abaixo. Os n\\u00edveis de dificuldade n\\u00e3o podem estar abaixo de um m\\u00ednimo e nem acima de um m\\u00e1ximo previamente estipulados.\\r\\n\\r\\nSeu problema \\u00e9 calcular o n\\u00famero de programas diferentes que o treinador pode construir, obedecidas as restri\\u00e7\\u00f5es acima.\\n\\t\\t\\t\",\n    \"id\": 2664,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada consiste de uma \\u00fanica linha que cont\\u00e9m tr\\u00eas inteiros, T, M, N (1 \\u2264 T \\u2264 50 , 1 \\u2264 M < N \\u2264 105 ) em que T \\u00e9 o n\\u00famero de minutos do exerc\\u00edcio, M \\u00e9 o valor m\\u00ednimo de dificuldade permitido e N \\u00e9 o valor m\\u00e1ximo de dificuldade permitido.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Gin\\u00e1stica\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha com um inteiro representando o n\\u00famero de programas diferentes que o treinador pode construir. Como esse n\\u00famero pode ser grande, a resposta deve ser esse n\\u00famero m\\u00f3dulo 109 + 7.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Maratona de Program\\u00e7\\u00e3o da SBC, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tS\\u00e3o dadas duas \\u00e2ncoras, dois pontos A = ( XA , 0) e B = ( XB , 0), formando um segmento horizontal, tal que 0 < X A < XB , e um conjunto P de N pontos da forma ( X, Y ), tal que X > 0 e Y > 0. A figura mais \\u00e0 esquerda exemplifica uma poss\\u00edvel entrada.\\r\\n\\r\\n\\r\\n\\r\\nPara \\u201cligar\\u201d um ponto v \\u2208 P precisamos desenhar os dois segmentos de reta ( v, A ) e ( v, B ). Queremos ligar v\\u00e1rios pontos, mas de modo que os segmentos se interceptem apenas nas \\u00e2ncoras. Por exemplo, a figura do meio mostra dois pontos, 1 e 4, que n\\u00e3o podem estar ligados ao mesmo tempo, pois haveria interse\\u00e7\\u00e3o dos segmentos fora das \\u00e2ncoras. A figura mais \\u00e0 direita mostra que \\u00e9 poss\\u00edvel ligar pelo menos 3 pontos, 8, 5 e 3, com interse\\u00e7\\u00e3o apenas nas \\u00e2ncoras.\\r\\n\\r\\nSeu programa deve computar o n\\u00famero m\\u00e1ximo de pontos que \\u00e9 poss\\u00edvel ligar com interse\\u00e7\\u00e3o de segmentos apenas nas \\u00e2ncoras.\\n\\t\\t\\t\",\n    \"id\": 2665,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha da entrada cont\\u00e9m tr\\u00eas inteiros, N (1 \\u2264 N \\u2264 100), XA e XB (0 < XA < XB \\u2264 104 ), representando, respectivamente, o n\\u00famero de pontos no conjunto P e as abscissas das \\u00e2ncoras A e B . As N linhas seguintes cont\\u00eam, cada uma, dois inteiros Xi e Yi (0 < Xi , Yi \\u2264 104 ), representando as coordenadas dos pontos, para 1 \\u2264 i \\u2264 N . N\\u00e3o h\\u00e1 pontos coincidentes e n\\u00e3o h\\u00e1 dois pontos u e v distintos tais que { A, u, v } ou { B, u, v } sejam colineares.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Hipercampo\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve imprimir uma linha contendo um inteiro, representando o n\\u00famero m\\u00e1ximo de pontos de P que podem ser ligados com interse\\u00e7\\u00e3o de segmentos apenas nas \\u00e2ncoras.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Maratona de Program\\u00e7\\u00e3o da SBC, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tO reino de Nlog\\u00f4nia \\u00e9 rico, o povo \\u00e9 educado e feliz, mas o Rei \\u00e9 um tirano quando o assunto se refere a impostos. A cada final de ano, cada cidade do pa\\u00eds deve pagar uma determinada quantidade de quilos de ouro em impostos. Chegado o momento de coletar os impostos, o Rei envia sua carruagem real para recolher o ouro devido, usando as estradas do reino.\\r\\n\\r\\nCada estrada liga duas cidades diferentes e pode ser percorrida nas duas dire\\u00e7\\u00f5es. A rede de estradas \\u00e9 tal que \\u00e9 poss\\u00edvel ir de qualquer cidade para qualquer outra cidade, possivelmente passando por cidades intermedi\\u00e1rias, mas h\\u00e1 apenas um caminho entre duas cidades diferentes.\\r\\n\\r\\nEm cada cidade h\\u00e1 um cofre real, utilizado para armazenamento de ouro de impostos. Os cofres reais s\\u00e3o imensos, de forma que cada cofre tem capacidade de armazenar todo o ouro devido por todo o reino. A carruagem sai da capital, percorrendo as estradas do reino, visitando as cidades para recolher o ouro devido, podendo usar qualquer cofre real para armazenar temporariamente uma parte do imposto recolhido, se necess\\u00e1rio. Ao final da coleta, todo o ouro devido por todas as cidades deve estar armazenado no cofre real da capital.\\r\\n\\r\\n\\u00c1varo como \\u00e9 o Rei, ele contratou o seu time para, dados a quantidade de ouro a ser recolhido em cada cidade (em kg), a lista das estradas do reino, com os respectivos comprimentos (em km) e a capacidade de carga da carruagem real (em kg), determine qual \\u00e9 a m\\u00ednima dist\\u00e2ncia que a carruagem deve percorrer para recolher todo o ouro devido.\\n\\t\\t\\t\",\n    \"id\": 2666,\n    \"input\": \"\\t\\t\\t\\t\\tA primeira linha cont\\u00e9m dois inteiros N e C indicando respectivamente o n\\u00famero de cidades e a capacidade de carga da carruagem (2 \\u2264 N \\u2264 104 e 1 \\u2264 C \\u2264 100). A capital do reino \\u00e9 identificada pelo n\\u00famero 1, as outras cidades s\\u00e3o identificadas por inteiros de 2 a N . A segunda linha cont\\u00e9m N inteiros Ei representando a quantidade de imposto devido por cada cidade i (0 \\u2264 Ei \\u2264 100 para 1 \\u2264 i \\u2264 N ). Cada uma das N-1 linhas seguintes cont\\u00e9m tr\\u00eas inteiros A , B e C , indicando que uma estrada liga a cidade A e a cidade B (1 \\u2264 A, B \\u2264 N ) e tem comprimento C (1 \\u2264 C \\u2264 100).\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Imposto Real\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha com um inteiro representando a menor dist\\u00e2ncia que a carruagem real deve percorrer para recolher todo o imposto devido, em km.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Maratona de Program\\u00e7\\u00e3o da SBC, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tUm jogo infantil, muito popular, \\u00e9 o 21 de boca . O jogo \\u00e9 jogado da seguinte forma: o primeiro jogador diz um n\\u00edmero, n0 , que pode ser 1 ou 2. O segundo jogador pode ent\\u00e3o dizer um n\\u00famero n1 tal que n1 \\u2208{ n0 + 1 , n0 + 2 } . E assim por diante, os jogadores se alternam, dizendo sempre um n\\u00famero que \\u00e9 um ou dois maior do que o anterior. O jogador que disser 21 ganha o jogo. Por exemplo, a sequ\\u00eancia de n\\u00fameros poderia ser: 1 , 3 , 5 , 6 , 7 , 9 , 11 , 12 , 14 , 15 , 16 , 18 , 19 , 21. Neste jogo, o primeiro jogador sempre perde, se o segundo souber jogar bem.\\r\\n\\r\\nA cada nova gera\\u00e7\\u00e3o as crian\\u00e7as ficam mais espertas. Atualmente, apesar de acharem o 21 de boca um jogo interessante, muitas crian\\u00e7as n\\u00e3o se sentem desafiadas o bastante e por isso resolveram generalizar o jogo, criando assim o N de boca .Dado um inteiro N , no lugar do 21, o primeiro jogador pode escolher 1 ou 2. A partir da\\u00ed os jogadores se alternam, adicionando 1 ou 2 ao n\\u00famero anterior, at\\u00e9 que um deles diga o n\\u00famero N e ganhe o jogo. Sabendo que ambos os jogadores s\\u00e3o excelentes e sabem jogar muito bem, seu problema \\u00e9 determinar qual o inteiro inicial que o primeiro jogador deve escolher para ganhar o jogo.\\n\\t\\t\\t\",\n    \"id\": 2667,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada consiste de uma \\u00fanica linha que cont\\u00e9m o inteiro N (3 \\u2264 N \\u2264 10100 ) escolhido para a partida atual do N de boca.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Jogo de Boca\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha com um inteiro representando o n\\u00famero, em { 1 , 2 } , que o primeiro jogador deve escolher, para ganhar o jogo. Se n\\u00e3o for poss\\u00edvel, ent\\u00e3o o inteiro deve ser zero.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Maratona de Program\\u00e7\\u00e3o da SBC, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tDado um n\\u00famero real X da forma A + \\u221a B , com A e B inteiros positivos e \\u2212 1 < A \\u2212 \\u221a B < 1, e dois n\\u00fameros inteiros N e K , sua tarefa \\u00e9 determinar o K-\\u00e9simo d\\u00edgito menos significativo da parte inteira de XN . Por exemplo, se K = 1, voc\\u00ea precisa determinar o algarismo das unidades de [XN] .\\n\\t\\t\\t\",\n    \"id\": 2668,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada consiste de uma \\u00fanica linha, que cont\\u00e9m quatro n\\u00fameros inteiros, A , B , N e K , com 1 \\u2264 A, B \\u2264 104 , 1 \\u2264 N \\u2264 109 e 1 \\u2264 K \\u2264 4.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"K-\\u00e9simo\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo o K-\\u00e9simo d\\u00edgito menos significativo da parte inteira de XN.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Maratona de Program\\u00e7\\u00e3o da SBC, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tUma cadeia ponderada \\u00e9 definida sobre um alfabeto \\u03a3 e uma fun\\u00e7\\u00e3o f que atribui um peso a cada caractere do alfabeto. Assim, podemos definir o peso de uma cadeia s como a soma dos pesos de todos os caracteres em s.\\n\\nV\\u00e1rios problemas da bioinform\\u00e1tica podem ser formalizados como problemas em cadeias ponderadas. Um exemplo \\u00e9 a espectrometria de massa de prote\\u00ednas, uma t\\u00e9cnica que permite identificar prote\\u00ednas de forma bastante eficiente. Podemos representar cada amino\\u00e1cido por um caractere distinto e uma prote\\u00edna \\u00e9 representada pela cadeia de caracteres relativos aos amino \\u00e1cidos que a comp\\u00f5e.\\n\\nUma das aplica\\u00e7\\u00f5es da espectrometria de massa de prote\\u00ednas s\\u00e3o buscas em bancos de dados. Para isso a cadeia que representa a proteina \\u00e9 dividida em subcadeias, a massa de cada subcadeia \\u00e9 determinada, e a lista de massas \\u00e9 comparada com um banco de dados de prote\\u00ednas. Um dos desafios para essa t\\u00e9cnica \\u00e9 lidar com cadeias muito grandes de caracteres, que podem ter v\\u00e1rias poss\\u00edveis subcadeias. A quantidade de subcadeias selecionadas \\u00e9 fundamental para obter bons resultados.\\n\\nEm seu primeiro dia de est\\u00e1gio em um renomado laborat\\u00f3rio de biotecnologia, Carlos recebeu a tarefa de determinar, para uma cadeia s, a quantidade de pesos distintos encontrada ao avaliar os pesos de todas as subcadeias n\\u00e3o vazias de caracteres consecutivos de s.\\n\\nCarlos n\\u00e3o conseguiu pensar em uma solu\\u00e7\\u00e3o eficiente para essa tarefa, mas felizmente ele conhece o grupo ideal para auxili\\u00e1-lo.\\n\\nConsiderando que s \\u00e9 formada por letras min\\u00fasculas e cada letra tem um peso diferente entre 1 e 26: a letra a tem peso 1, a letra b tem peso 2 e assim por diante. Mostre que seu time \\u00e9 capaz de ajudar Carlos a impressionar seu supervisor logo na primeira semana, com uma solu\\u00e7\\u00e3o capaz de lidar facilmente com as maiores cadeias de caracteres existentes.\\n\\t\\t\\t\",\n    \"id\": 2669,\n    \"input\": \"\\t\\t\\t\\t\\tApenas uma linha, que cont\\u00e9m a cadeia s formada por letras min\\u00fasculas, cujo comprimento | s | satisfaz 1 \\u2264| s |\\u2264 105.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Laborat\\u00f3rio de Biotecnologia\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve produzir uma \\u00fanica linha com um inteiro representando a quantidade de pesos distintos das subcadeias n\\u00e3o vazias de caracteres consecutivos de s.\\n\\t\\t\\t\",\n    \"timelimit\": 7.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Maratona de Program\\u00e7\\u00e3o da SBC, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tO novo pr\\u00e9dio da Sociedade Brasileira de Computa\\u00e7\\u00e3o (SBC) possui 3 andares. Em determinadas \\u00e9pocas do ano, os funcion\\u00e1rios da SBC bebem muito caf\\u00e9. Por conta disso, a presid\\u00eancia da SBC decidiu presentear os funcion\\u00e1rios com uma nova m\\u00e1quina de expresso. Esta m\\u00e1quina deve ser instalada em um dos 3 andares, mas a instala\\u00e7\\u00e3o deve ser feita de forma que as pessoas n\\u00e3o percam muito tempo subindo e descendo escadas.\\n\\nCada funcion\\u00e1rio da SBC bebe 1 caf\\u00e9 expresso por dia. Ele precisa ir do andar onde trabalha at\\u00e9 o andar onde est\\u00e1 a m\\u00e1quina e voltar para seu posto de trabalho. Todo funcion\\u00e1rio leva 1 minuto para subir ou descer um andar. Como a SBC se importa muito com a efici\\u00eancia, ela quer posicionar a m\\u00e1quina de forma a minimizar o tempo total gasto subindo e descendo escadas.\\n\\nSua tarefa \\u00e9 ajudar a diretoria a posicionar a m\\u00e1quina de forma a minimizar o tempo total gasto pelos funcion\\u00e1rios subindo e descendo escadas.\\n\\t\\t\\t\",\n    \"id\": 2670,\n    \"input\": \"\\t\\t\\t\\t\\tA entrada consiste em 3 n\\u00fameros, A1 , A2 , A3 (0 \\u2264 A1 , A2 , A3 \\u2264 1000), um por linha, onde Ai representa o n\\u00famero de pessoas que trabalham no i-\\u00e9simo andar.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"M\\u00e1quina de Caf\\u00e9\",\n    \"output\": \"\\t\\t\\t\\tSeu programa deve imprimir uma \\u00fanica linha, contendo o n\\u00famero total de minutos a serem gastos com o melhor posicionamento poss\\u00edvel da m\\u00e1quina.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                By Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\r\\n                Your colleague has a brilliant idea to encode a text, he will use an (almost) complete binary tree with the text distributed in the breadth, and it will present the result of an in order search of the tree. See the example, encoding: \\\"A simple text\\\".\\r\\n\\r\\n\\r\\n                \\r\\n\\r\\nThe result we will get on the search will be: \\\"sot\\u00a0mseiUmxp\\u00a0lte\\\". The problem is that although it can easily encode the texts, it can not decode them, and has asked you for an algorithm that receives a coded text and decodes it.\\r\",\n    \"id\": 2671,\n    \"input\": \"\\r\\n                    The input contains several test cases, each test case starts with the integer N (0 <\\u00a0N < 200), indicating the amount of characters in the text (only characters of the printable ASCII pattern), in the next line there will be a text with N characters. The test cases end with N = 0.\\r\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Decoding the Text\",\n    \"output\": \"\\r\\n                For each test case, in a single line, print\\u00a0the decoded text on the output.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                By Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n                In Internet Protocol (IP) network addressing, an IP address also has a number called \\\"Network Mask\\\". The network mask is used to allow, within the universe of possible IP addresses, a network to be isolated in a closed group. Consider the following network address: IP: 192.168.79.74 Netmask: 255.255.252.0.\\r\\n\\r\\nThe address itself is a 32-bit address, which here we separates into 4 blocks of 8 bits each for easier reading, the same goes for the address of the mask. Let's write these addresses in binary form:\\r\\n\\r\\nIP:\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a011000000.10101000.01001111.01001010\\r\\nNetmask:\\u00a011111111.11111111.11111100.00000000\\r\\n\\r\\nWe can see that the first 22 bits of the netmask are 1s, and the remaining 10 bits are 0s. Many times this address is represented as: 192.168.79.74/22, on account of its 22 bits 1s of the netmask. For this example the exclusive network to which this address belongs is defined by the first 22 bits of the addressing, all the machines belonging to this network have in their first 22 bits the same values. Each machine belonging to the network will use each of the 10 final bits to define a unique address for itself. In this case, this network can define 210 addresses for your machines (actually 210-2, since 2 of them are reserved), ranging from: 11000000.10101000.01001100.00000000 (192.168.76.0) to 11000000.10101000.01001111.11111111 (192.168.79.255). These two specific addresses are reserved, the first represents the network address itself, and the latter represents the broadcast address, thus leaving 1022 possible addresses for each of the machines. You have been asked to present the network information\\u00a0from its IP address with a netmask (which can be in both formats): network address,\\u00a0broadcast address and the number of possible machines on the network.\\r\",\n    \"id\": 2672,\n    \"input\": \"\\r\\n                    The input contains several test cases, each test case occupies one line and represents an IP address and its network mask, which can be in two formats. Address and mask in the form of 4 blocks of bytes with a space separating IP and mask: \\\"IP1.IP2.IP3.IP4\\u00a0M1.M2.M3.M4\\\" with 0 \\u2264 IP1,IP2,IP3,IP4,M1,M2,M3 \\u2264 255 and 0 \\u2264 M4 \\u2264 252, with the restriction that the number formed by the network mask blocks represents a 32-bit number where the 1s (all) bits are to the left of the 0s (all) bits; or in the format \\\"IP1.IP2.IP3.IP4/M\\\", the same limits imposed on the IP blocks, and 0 \\u2264 M \\u2264 30. The test cases end with the end of the inputs.\\r\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Network Mask\",\n    \"output\": \"\\r\\n                For each test case, the output will be displayed in three lines, the first line containing the phrase: \\\"Endereco de rede:\\u00a0\\\" followed by the network address in the format of 4 decimal blocks; In the second line the phrase: \\\"Endereco de broadcast:\\u00a0\\\" followed by the broadcast address for the network in the format of 4 decimal blocks; In the third line the phrase: \\\"Numero de maquinas:\\u00a0\\\" followed by the number representing the number of addresses that can be assigned to the machines in this network. After the three printed lines of a test case, a blank line must be printed, including after the last test case.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                By Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n                An association of resistors always results in an equivalent resistor. This association can be in parallel, in series or hybrid. See example of a parallel association:\\r\\n\\r\\n                \\r\\n\\r\\n\\r\\nThis parallel association is equivalent to a resistor of 10 \\u03a9. We can also consider series associations, as the example below, which results in an equivalent resistance of 40\\u03a9.\\r\\n\\r\\n                \\r\\n\\r\\nFinally, a hybrid association, with series and parallel. The association below results in 50\\u03a9.\\r\\n\\r\\n                \\r\\n\\r\\nTo better represent an association we will consider the equivalent resistance Req of a series association between resistors R1 and R2 represented as: Req = R1 - R2. Similarly for the parallel association: Req = R1 | R2. There is no precedence between associations, except when explicitly expressed in parentheses, for example: R1 - R2 | R3 is equivalent to (R1-R2) | R3, and R1 | R2 - R3 is equivalent to (R1 | R2 - R3) These two circuits can be drawn, respectively, as:\\r\\n\\r\\n                \\r\\n\\r\\nIn this way a hybrid association is represented by an expression that follows the following rule, considering R the nominal value of a resistance in Ohms (\\u03a9):\\r\\n\\r\\nexp\\u00a0:= R;\\r\\nexp\\u00a0:= exp\\u00a0-\\u00a0exp;\\r\\nexp\\u00a0:= exp\\u00a0| exp;\\r\\nexp\\u00a0:= ( exp\\u00a0).\\r\\n\\r\\nThe hybrid circuit of the third figure above could be represented by the expression:\\r\\n\\r\\nReq = 20 - (20 | 20) - 20 = 50\\r\\n\\r\\nYou have been asked for a program where, given the expression of an association, calculate the equivalent resistance.\\r\",\n    \"id\": 2673,\n    \"input\": \"\\r\\n                    The input contains several test cases, each test case occupying a line of a maximum of 300 symbols (there is no blank space) and represents a valid expression for the association of resistors, where each resistor value is represented by an integer R\\u00a0(0 < R < 10000). The end of the test cases coincides with the end of the input.\\r\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Serial and Parallel Resistors\",\n    \"output\": \"\\r\\n                For each test case, the equivalent resistance value with three decimal digits is expected on a single line.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"The Association of Indivisible Primes \\u200b\\u200belected a category of prime numbers called Super Primes. A number is considered super prime if in addition to being prime, all its digits are prime, too. The Association asked you to make a program to characterize the numbers.\",\n    \"id\": 2674,\n    \"input\": \"The input contains several test cases, each test case being an integer N (0 < N < 105) on a single line. The entry ends in the last test case.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Super Primes: Engage!\",\n    \"output\": \"For each test case, the entry number classification is expected in a single line, which can be: \\\"Super\\\", if the number is a Super Prime; \\\"Primo\\\" if the number by a prime number only; Or \\\"Nada\\\" if the number has divisors beyond 1 and itself.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                By Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n                The single-child difficulty (especially before the advent of video games) is playing alone, so patience games have emerged. One of them is the Steal Pack that Dr. Silvano Barbosa de Campos invented to play with N cards numbered from 1 to N. You get these cards shuffled, and you must take one by one and put them in a pack, but can only put a\\u00a0card on the pack, if the card at the top of the pack is smaller than this one, otherwise you will steal cards until you find a smaller one. In the end your score is the sum of the cards you stole. As this game was tiring, you were asked to have an algorithm that, given the sequence of cards, indicates the sum you have stolen.\\r\",\n    \"id\": 2675,\n    \"input\": \"\\r\\n                    The input contains several test cases, each test case contains two lines, in the first the number N (0 < N \\u2264 105) (90% of the input cases are 0 < N \\u2264 1,000) indicating the number of cards. In the second line N values, numbered from 1 to N in any order. The test cases ends with the end of the input.\\r\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Steal Pack\",\n    \"output\": \"\\r\\n                    It should be printed, for each test case, a value indicating the sum you will receive at the end of the game on a single line.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                By Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\",\n    \"category\": \"Graph\",\n    \"description\": \"\\r\\n\\r\\n                    Your colleague, a peddler, has a cartel of clients in a set of cities linked by highways. He needs to choose a city to live in. What he wants is for the city to be approximately in the center of the set. He asked you to indicate which city is in the center. The city is said to be located in the center, if the sum of the distance of this to all the others is the minimum possible. The highways that connect the cities do not have crossroads, they are only intersected\\u00a0in the cities themselves. And it is guaranteed that all cities are reached from any other using one or a set of roads.\\r\",\n    \"id\": 2676,\n    \"input\": \"\\r\\n\\r\\n                    The input is composed of several test cases. Each test case starts with two positive integer values: N and R, where 0 < N \\u2264 100 the number of cities, and 0 \\u2264 R \\u2264 4950 the number of highways that interconnect cities. Next are R rows containing three positive integer values: A, B, and D, separated by a blank space each. A and B are two distinct cities 0 < A \\u2260 B \\u2264 N. Cities are numbered from 1 to N inclusive. D is the distance between A and B through a road linking both, 0 < D <1,000. The test cases end with N = R = 0.\\r\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"City in the Center\",\n    \"output\": \"\\r\\n\\r\\n                    For each test case the number of the \\\"City in the center\\\" should be printed on the output. If there is more than one city in these conditions, all must be listed, in ascending order of the city number. There will always be a single space after each city number, including the last one.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                By Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\r\\n                The game, for two people, has a sequence with N even numbers and N odd values, N being itself an odd number. This sequence is arranged randomly. Each round a player chooses a number from one of the extremities. In the end, anyone with the most\\u00a0even numbers wins. For example, consider the following arrangement (with three odd and even pairs):\\r\\n\\r\\n4 1 8 11 2 7\\r\\n\\r\\nThe first player wins getting all three even numbers for himself.\\u00a0On the other hand, for the following sequency:\\r\\n\\r\\n5 8 4 7 6 3\\r\\n\\r\\nThe first player, considering that both play for the best success, will win with only 2 even numbers. Always wanting the best result, the inventor of the game asked you to make a program that already predicted with how many even numbers, the first player wins, considering that both play for the best success.\\r\",\n    \"id\": 2677,\n    \"input\": \"\\r\\n                    The input has several test cases, each test case occupy two lines, the first line has an odd number\\u00a0N, 0 <\\u00a0N\\u00a0< 500, in the second line, 2N integers, where N is even and N is odd, in any arrangement, each value is in the interval [0..10000]. The test cases end with N = 0.\\r\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Even or Odd\",\n    \"output\": \"\\r\\n                For each entry case, on the output will be printed\\u00a0on a single line the number of even numbers that the first player will get if both players play for the best success.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                By Hamilton Jos\\u00e9 Brumatto, UESC  Brazil\\r\",\n    \"category\": \"Strings\",\n    \"description\": \"\\r\\n                Sinc analogue-dial telephones, it was customary in some countries to associate some letters with dial numbers, so that one could assign a telephone number to\\u00a0a easily memorized word. This type of association can be seen in the figure below, which represents the \\\"dialer\\\"\\u00a0of a digital phone:\\r\\n\\r\\n                \\r\\n\\r\\n                This practice is not very common in Brazil, but there are some companies that use it, an example is an insurance company, which discloses as a telephone number: \\\"333-PORTO\\\". By making an association between letters and numbers, the actual telephone number is: \\\"33376786\\\"\\u00a0(the '-' symbol is discarded). Currently, as telephones accept voice dialing, dictating a number stored in letters and words requires a translation. You have been prompted for a program that receives text representing a phone number and returns the actual phone number.\\r\",\n    \"id\": 2678,\n    \"input\": \"\\r\\n                    There are several test cases, each test case is a single line with a text with N printable ASCII symbols (3 \\u2264 N \\u2264 300), including the '*' and '#' symbols. The test cases end with the end of the inputs.\\r\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Voice Dialing\",\n    \"output\": \"\\r\\n                    For each entry the output is a telephone dial number, on a single line, which can also contain the '*' and '#' symbols as dial numbers. Any letter must be translated into the corresponding number, any other symbols are simply discarded.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Em\\u00edlio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"To get you ready for the other problems, lets perform a test. Given a number X, return the smallest even number larger than X.\\n\\t\\t\\t\\t\\n\\t\\t\\t\",\n    \"id\": 2679,\n    \"input\": \"\\t\\t\\t\\t\\tA line containing a single number 0 < X < 107.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Even Successor\",\n    \"output\": \"A line containing the answer to the problem.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"This government, as always, is very worried about the payroll. This year, however, the way the payments are made will be changed. Instead of paying workers as usual, the formula used to pay their salaries will be simpler: The sum of the divisors of the enrollment number of each worker.\\n      \\n  To avoid frauds, help the government to do the math!\\n\\n\\t\\t\\t\",\n    \"id\": 2680,\n    \"input\": \"The input starts with a line with a single number 1 \\u2264 N \\u2264 104 that is the number of workers. Each of the N following lines represents a worker and contains the workers enrollment number 1 \\u2264 M \\u2264 108.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Payroll\",\n    \"output\": \"The output consists of N lines, each containing the salary of a worker in the same order of input.\\n\\t\\t\\t\\t\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"The Hanoi tower problem is very famous. However, very few people remember the original legend: It is sand that monkeys were tasked to solve the problem, and when they finish, the world ends.\\n        The problem consists of 3 pins, and in the fist pin is sitting a stack of disks, one larger than the other. As we know, it is not allowed to place a larger disk above a smaller. This means that, to transfer one disk from the pile, one must first remove all the smaller ones first. Besides that, it is only allowed to move one disk at once.\\n        The problem is solved when all disks from the first pin are transferred to the third pin.\\n        We know that the monkeys started working at midnight (00:00:00), and that they work 24 hours per day, non stop, and they take at least 1 second to move each disk. Your task is to foresee the exact time of the day or night, in the format hh:mm:ss, of the earliest time possible the monkeys finish the game and the world ends.\\n\\n\\t\\t\\t\",\n    \"id\": 2681,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line containing a single integer 0 < X < 1040, that is the number of disks in the starting stack.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Monkeys at Hanoi Tower\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a string in the format A:B:C, where 0 \\u2264 A < 24 e 0 \\u2264 B, C < 60\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"There is a machine, that produces an increasing sequence of numbers. That is, every number of this sequence is larger than its predecessor.\\n        However, this machine is starting to break. When it starts, everything is OK. However, after some time, it starts producing wrong results.\\n        Your task is, whenever the machine produces the first wrong number or if it turns off, ignore all following results and produce the next smallest valid number.\\n        Since we are just checking the machine, we cannot turn it off. We have to wait it turn it of on its own. That is, we must keep reading numbers until the machine turns of on its own.\\n\\t\\t\\t\",\n    \"id\": 2682,\n    \"input\": \"The input consists of 0 < N < 104 lines, and ends with EOF.\\n         Each line consists of a single integer 0 < X < 230. \\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Fault Detector\",\n    \"output\": \"\\t\\t\\t\\tA single line, with a single integer Y, the solution for the problem.\\n\\t\\t\\t\\t\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Em\\u00edlio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"The engineers from UFFS are studying the possibility of of building underground tunnels everywhere in the campus. The places where the entrances will be built, as always, were already chosen by MEC (Brazil's ministry of education), and the tunnels must least directly to one entrance to another. Since the budget was already done, these rules cannot be changed.\\n        The original project was very well made, and there was a gallery between each pair of entrances, that were made in a way they would not cross, and the cost of these galleries was already paid. However, with the recent budget cuts, it is now necessary to chose only a subset of these galleries, without changing them, in a way that there is only one path between each pair of entrances.\\n         The challenge now is to know the least and the largest cost possible, to fit in the new budget.\",\n    \"id\": 2683,\n    \"input\": \"The first line consists of a number 1 \\u2264 N \\u2264 106 that is the number of galleries.\\n        \\n        Each following line has three numbers representing a gallery, 1 \\u2264 U, V \\u2264 103 e 1 \\u2264 W\\u2264 200. That are, respectively, entrance, exit and construction cost of the gallery.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Design Space\",\n    \"output\": \"The output consist of two lines, each with a single number.\\n        \\n        The first one must have the maximum cost of the project and the second must have the minimum cost of the project.\\n\\t\\t\\t\\t\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tProfessor Webscript, one of the renowned professors at the Federal Institute of Muzambinho teaches his students to develop fully responsive and practical websites without the need for frameworks. It assists the most diverse types of students across the school, but tired of teaching the correct syntax of the tags (\\\">\\\" close and \\\"<\\\" opens) correctly. So, to get back the peace and tranquility that he had, he asks for your help.\\n\\nThere will be several types of tags, there is no need to text the tags, your program should indicate if a tag was used correctly or not. Do not forget that your program should follow some criteria as in the example below.\\n\\nI - The first parameter indicates the type of the tag:\\n1 - When the tag is unique.\\n0 - When the tag has two pairs of signals;\\n\\nII - Signals such as \\\">\\\" or \\\"<\\\" should only be used to indicate the closing or opening of a tag:\\n0 <p> Home> Download> Sublime </ p> -> error\\n1 <input type = \\\"text\\\" name = \\\"Next>\\\"> -> error\\n0 <ul> <li> Ola </ li> </ ul> -> Successful\\n1 <span> <br> -> right\\n0 <> </ li> -> error\\n\\nWhen we enter the parameter, there are only tags of the chosen pattern, for example: if we put 0 (When the tag has two pairs of signals) the program will only check tags with two pairs of signals, the same thing happens when we put 1 tag is unique). So in a single tag there will not be both types.\\n\\u00a0\\n\\t\\t\\t\",\n    \"id\": 2684,\n    \"input\": \"\\t\\t\\t\\tThe entry contains an integer 0 < N < 100 that indicates the number of situations to check. The next N lines correspond to the situations, each with an integer K (0 or 1) (which will be the means of identifying the tag (s)), and then a line with the S code (0> S <200) to be verified.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Help Professor Webscript!!\",\n    \"output\": \"\\t\\t\\t\\tAs in the given example, make sure the tag was used correctly. Your program should report \\\"Successful !!\\\" if the syntax is right or \\\"error\\\" if something is missing. The message should be displayed without the quotation marks, with the line break at the end.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\n\\t\\t\\t\\tJulio is creating a new SmartWatch, especially for programmers. It's amazing the advantages he offers and the comfort that he has to code. The clock still been in development and he promised to fix the bugs and put some better gear and, in return, he asked for a simple system for Stand Bay mode. The problem is the clock itself always has the inclination angle of the Sun/Moon (0 to 360). Given a clock, your mission is, if you want to accept: given in degrees the inclination of the Sun/Moon in relation to the Earth, tell what period of the day it is.\\n\\t\\t\\t\",\n    \"id\": 2685,\n    \"input\": \"\\t\\t\\t\\tThe input contains an integer M (0 \\u2264 M \\u2264 360) representing the degree of the Sun/Moon. As the position changes constantly, your program will receive several cases every second (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"The Change\",\n    \"output\": \"\\t\\t\\t\\tPrint a greeting for the time of day it is: \\\"Boa Tarde!!\\\"(Good Afternoon!!), \\\"Boa Noite!!\\\"(Good Night!!), \\\"Bom Dia!!\\\"(Good Morning) and \\\"De Madrugada!!\\\"(Dawn!!).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tAgain Julius asks for your help, he has forgotten a small detail. As his previous program only reported a greeting, he asked him to turn the Sun / Moon degree into HH: MM: SS. Then if you accept: given a degree relative to the position of the Sun / Moon, redo the system only now that beyond the salutation of each period of the day, accurately report the hours, minutes and seconds.\\n\\t\\t\\t\",\n    \"id\": 2686,\n    \"input\": \"\\t\\t\\t\\tThe input contains a floating point M (0 \\u2265 M <360) representing the position, in degrees, of the Sun/Moon relative to the ground. As they walk in constant motion their program will receive several cases every second(EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"The Change Continues!!\",\n    \"output\": \"\\t\\t\\t\\tPrint out what time of day it is: \\\"Boa Tarde!!\\\"(Good Afternoon!!), \\\"Boa Noite!!\\\"(Good Night!!), \\\"Bom Dia!!\\\"(Good Morning!!) and \\\"Boa Madrugada!!\\\"(Good Dawn!!) and on the bottom lines display the hours, minutes and seconds (HH: MM: SS).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe Federal Institute of the South of Minas (IF), Muzambinho campus opened vacancies for the new superior course: Veterinary Medicine. The coordinator of the course already anticipated some problems with the studied bacteria, once that is inevitable that a bowl of bacteria falls to the ground. It would be difficult to control them if this situation happened because, for the application of the antidote it is necessary a proportionality, in addition, it must be thrown around the bacteria, killing from the outside to inside.\\n\\nBeyond to an exact amount, the antidote has to be thrown around the bacteria, so the area of the bacteria needs to be calculated to the coordinator can apply the right dose. The area of a bacterium is given in a grid(x, y) and in it, the coordinator marks the edge of the bacterium represented by 1. Through this, the area of \\u200bthe bacterium is given by (perimeter (edge \\u200b\\u200b(1)) + content the inner side of the border or is the number of zeros surrounded by 1) divided by two, a simple average.\\n\\nBecause of your good reputation, she asked you to develop an application that solves this problem. Worth some extra points, develop the algorithm capable of calculating the area dominated by bacteria, which has very bizarre formats, outlined by the coordinator so that the application of the antidote has resulted.\\n\\t\\t\\t\",\n    \"id\": 2687,\n    \"input\": \"\\t\\t\\t\\tThe input has Q (0 < Q <100) amounts of exposed bacteria, and then a small description of the area, composed of an integer L (0 < L <15) indicating the width and height of the grid and finally the grid LxL) with the edge drawing of the bacterium.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Bacterial Domination\",\n    \"output\": \"\\t\\t\\t\\tAs informed, display the dominated area with two decimal places.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tMeals in the cafeteria of the Federal Institute of South Minas (IF), Muzambinho campus, are delicious. Every day students eagerly await to taste their delights. Webscrit Junior (WBJ) is always one of the last on the queue and always finds the place almost full, with only a few free seats. As WBJ is very observant, he walks through the halls looking for places to sit. One place he can sit is an available chair where the average height of adjacent persons in that seat is less than the size of WBJ and always as close to the exit (which is in row 1 column 8, indicated in the figure by number 77, just for easy viewing). All this care to then run in the free spaces, and not lose any second of your favorite subject (AED).\\n\\nBelow is an example of the empty cafeteria:\\n\\n\\n\\nAttention:\\n- The priority chair is that one that has the adjacent average less than the height and the smallest way to the exit;\\n- There are no seats available on the walls (88), in the spaces outside the cafeteria (11) or in the last places of the table (on the corners); you do not have a good view of the cafeteria sitting closer to the window;\\n- Each chair that WEJ passes is considered 1 step;\\n- There will be no tie, always have a chair that meets the requirements;\\n- The \\\"00\\\" of the figure shows where are chairs, ONLY for easier viewing.\\n- The exit of the cafeteria is fixed [Line 1 | Column 8] and will always be in this position. In the picture, this position is represented by number 77 only to promote a better visualization.\\n- As the output is always fixed, the size of the cafeteria (13x13) is also fixed;\\n- The adjacent ones of the chair are all the chairs that are around;\\n- The exit (1,8) will always be a wall;\\n\\nTaking the entry below as an example we have:\\n- Chair 1 with position (L = 3 | C = 3);\\n- Chair 2 with position (L = 6 | C = 6);\\n- Chair 3 with position (L = 8 | C = 12);\\n* The count starts from one.\\n\\nSuppose that chair 1 and 2, located above (as base) meets the criteria of the average of its adjacent. We can conclude that chair 1 is closer to the exit than chair 2, because the number of chairs WBJ will pass to the exit, is smaller. And it is closer than chair 3 (L = 8 | C = 12) which is not only on the table top (a considerable place) but far from the exit.\\n\\nWhile standing in line, WBJ decided to call you and quickly help you choose the best place.\\n\\t\\t\\t\",\n    \"id\": 2688,\n    \"input\": \"\\t\\t\\t\\tThe program asks for an integer A (50 < A < 99) refers to its height of WBJ, and then a short x-ray of 13x13 from the cafeteria. It contains the possible locations (0) where it can sit, the exit (Line 1, Column 8), the walls (88), the patio (11), and the corridors (99). The exit will be by EOF.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Choosing a Place\",\n    \"output\": \"\\t\\t\\t\\tPrint the row and column of the chair, \\\"linha > x coluna > y\\\" (row > x column > y), without quotation marks, where the average of the adjacent ones is less than the height of WBJ and the distance to the exit is the least possible.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tA long time happens the secret game of miao. Most people say that the game is annoying and very difficult because no one managed to win the famous prize, but even so Webscript Junior (WBJ) decided to try. The game works as follows: a scarecrow shows a picture with suitcases, where there will only be one suitcase with the miao. Not even the scarecrow remembers in which briefcase he kept it and WBJ only has an opportunity to take this \\\"MIAO!\\\" home. WBJ picked up the contents of the suitcases that were already chosen by other players to see if there was any pattern.\\n\\nAfter many research, WBJ concluded that the award-winning case was in an i-th position of a sequence, so he introduced the game to some friends to see how the game and the scarecrow behaved with each move and thereby gain more information for his research. The most relevant information is that, in addition to luck, the suitcases where the subtraction of the indexes is different from the difference that most repeats, serves as a standard to define which are the possible prize-winning suitcases.\\n\\nFor more accurate information, WBJ asked for his help. He wants a program that generates a list of suitcases where possibly would be the prize. He gives you 9 suitcases on a grid (3x3). Your program generates the list and he just had to hit the number of the suitcase, within the possible suitcases that he would have as a reference generated by your program.\\n\\nFor example:\\nLet's assume that the suitcases that WBJ chose were:\\n78 7 8\\n9 7 8\\n8 7 9\\n\\nThe difference is calculated as follows: the first element is calculated with the next, and the other two with its previous one ignoring the signal, thus the difference between the suitcases looks like this:\\n\\n71 71 1\\n2 2 1\\n1 1 2\\n\\nThe first number is a result of 78 minus 7, the second is 7 minus 78, and the third is 8 less. The process repeats itself in the other lines. Then we conclude that the difference that repeats the most is the number 1, the next step is to verify if the difference between the numbers is not the one that repeats the most. The difference for the first number is calculated with the second and third, the difference of the second number is calculated with the first and last, so the difference of the last with the previous two. If the result of these differences is 1, the number is not displayed, for example: the second number less the third of the cases that WBJ gave you is 1, then the second number is not valid and the same is the case with the third. The end result looks like this:\\n\\nPossible suitcases: 78;\\n\\t\\t\\t\",\n    \"id\": 2689,\n    \"input\": \"\\t\\t\\t\\tWBJ left P lists with a 3x3 area, where he is sure that the prize bag will be in it. are three rows, each row with three integers less than 100.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Game of the Miao\",\n    \"output\": \"\\t\\t\\t\\tWith that he asked you to see the possible suitcases. Display a message \\\"Poss\\u00edveis maletas: \\\" (\\\"Possible suitcases\\\") and then the selected suitcases, separated by \\\",\\\" and in the end a \\\";\\\" and the break line.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"A new set of authentication will be implemented at the Federal Institute of South of Minas, Muzambinho campus, so users will not have much difficulty, plus you ... Well, the new authentication service is safe, without bugs and headaches even though we are at the end of the semester. It will allow your password to have spaces, but not numbers or special characters. The update always occurs during the vacation period, so tpdps adjustments are made and in the end please all users. As a trainee at the school's support center, your duty is to implement the new authentication. For now the new standard for user names is being studied.\\n\\n\\n\\nAs we can see for each set of letters we will have a specific number. Make a bad program to do this conversion of the letters to the numbers, and since you will not access the passwords of the students, make an algorithm so that the same one does the process alone using its own test cases.\\n\\nNote: Your test cases can not exceed 20 character and the output, 12 digits.\\n\\t\\t\\t\",\n    \"id\": 2690,\n    \"input\": \"\\t\\t\\t\\t\\tYou will have N indicating the number of passwords that will be exchanged, then N test cases.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"New Password RA\",\n    \"output\": \"\\t\\t\\t\\tThe output will be a list with the new, encrypted numbers of the passwords that were typed.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tIn the Federal Institute of the South of Minas, in the city of Muzambinho, there is a mathematician conducting a crazy research. He is about to find the formula of youth. After several tests he discovered data that made him crazy, one was that: the more you code the more you rejuvenates. For the moment the formula is in development and he hired you to help him in the research, because after so much work he forgot some principles of mathematics, like half of the table, and asked you to build the table with the numbers he needs.\\n\\t\\t\\t\",\n    \"id\": 2691,\n    \"input\": \"\\t\\t\\t\\tThe first N number is an integer indicating how many times your program will be tested. Then two more integers X and Y which will be the numbers to be multiplied.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"The Mathematician\",\n    \"output\": \"\\t\\t\\t\\tYour program should display the multiplication of the two numbers, except when they are equal, in this case without the \\\"&&\\\".\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tWhat, ready? Once again we need your help! After a few device exchanges and maintenance in the computer building, the IF keyboards (IFSULDEMINAS) suffered a bad taste in keyboard formatting, their keys are switched. Because the IF computers are prepared to receive any software, develop as quickly as possible a program that converts the sentences correctly.\\n\\nNote: The keyboard has changed all keys on the keyboard, so all characters are accepted.\\n\\t\\t\\t\",\n    \"id\": 2692,\n    \"input\": \"\\t\\t\\t\\tIt will have two integers N and M indicating respectively: the number of letters that were exchanged, and the phrases that were entered, then E and S, which are the M transformations that occur on the keyboard.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Zoeiro Keyboard\",\n    \"output\": \"\\t\\t\\t\\tPrint the correct sentence as soon as possible.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Samuel Lucas Santos Gomes, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAfter a nice day of class, it's up to the vans to take students to their homes. But what many do not know is that in addition to the expenses and maintenance of the van the driver needs to have a route to deliver the passengers in their homes. As you are the computer boy, he asked for your help developing this route by ordering the students from a distance (from lowest to highest), by region (in alphabetical order) and last by name.\\n\\t\\t\\t\",\n    \"id\": 2693,\n    \"input\": \"\\t\\t\\t\\tHe gives you the Q amount of students who did not miss, the student's name A an acronym for the region where he lives S (\\\"L\\\" East, \\\"N\\\" North, \\\"O\\\" West, \\\"S\\\" South), and C that represents the cost of entering the city to your home. The output of the cases will be (EOF).\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Van\",\n    \"output\": \"\\t\\t\\t\\tThe output will be a list of people in the order in which they are to be delivered.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Guilherme A. Pinto, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tA set of rectangular stone tiles, all of them having the same height H, had their original four corners cut in different ways so that two properties were kept:\\r\\n\\r\\n1. Each tile is still a simple convex polygon.\\r\\n\\r\\n2. Each tile has two parallel sides that are part of the bottom and top sides of the original rectangular tile, which implies that the height H was preserved.\\r\\n\\r\\nThe figure below illustrates two tiles before and after the cuts. The corners are highlighted with small circles.\\r\\n\\r\\n\\r\\n\\r\\nWe need to place all tiles, side by side and without overlap, along a frame of height H, for transportation. The tiles can be translated from their original positions, but they may not be rotated or reflected. Since their convex shapes may be very different, the order in which we place the tiles along the frame matters, because we want to minimize the width of the frame. The next figure shows the two possible orders for the tiles from the previous figure, the second order being clearly the one that minimizes the width of the frame.\\r\\n\\r\\n\\r\\n\\r\\nGiven the description of the set of tiles, your program must compute the minimum width for a frame of the same height of the tiles that contains all of them, side by side and without overlap.\\n\\t\\t\\t\",\n    \"id\": 2695,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 14) representing the number of tiles. Following, there are N groups of lines, each group describing a tile, all of them having the same height. Within each group describing a tile, the first line contains an integer K (4 \\u2264 K \\u2264 104) representing the number of corners of the tile. Each of the next K lines describes a corner of the tile with two integers X (\\u2212108 \\u2264 X \\u2264 108) and Y (0 \\u2264 Y \\u2264 108), indicating the coordinates of the corner in the XY plane. The corners are given in counterclockwise order. The first corner is (0, 0) and the second corner is of the form (X, 0) for X > 0, this side being the bottom side of the tile. The tile has the shape of a simple convex polygon with a top side parallel to its bottom side.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Arranging Tiles\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with a rational number indicating the minimum width for a frame of the same height of the tiles that contains all of them, side by side and without overlap. The result must be output as a rational number with exactly three digits after the decimal point, rounded if necessary.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Yonny Mondelo Hern\\u00e1ndez, ACM ICPC 2017  Cuba\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tNaebbirac is a young and easy-to-get-bored sailor. He likes sequences of integers and to come up with ways to classify them. Naebbirac says that a sequence is complete for a chosen integer K , if the sequence only contains integers between 1 and K , and each integer between 1 and K appears the same number of times.\\r\\n\\r\\nBased on that, Naebbirac created a game to entertain himself and his peers, when the waters calm down and there\\u2019s not much they can do to spend their time in the middle of the ocean.\\r\\n\\r\\nFirst he chooses a positive integer K and then he uses chalk to draw on the deck a sequence S having N integers between 1 and K . After that he challenges one of his peers. The goal of the challenged peer is to turn the sequence S into a complete sequence by performing exactly one of the following three possible operations:\\r\\n\\r\\n\\r\\n\\t\\r\\n\\t\\u201c-x\\u201d: remove one occurrence of integer x from S;\\r\\n\\t\\r\\n\\t\\r\\n\\t\\u201c +x \\u201d: add a new integer with value x in S ; or\\r\\n\\t\\r\\n\\t\\u201c -x +y \\u201d: replace one occurrence of integer x from S by an integer with value y.\\r\\n\\r\\n\\r\\nNaebbirac is quite smart. He never writes a sequence that is already complete and often the written integers don\\u2019t follow a pattern, making it quite hard to find an operation that solves the puzzle. One of your friends, that usually sails with Naebbirac, is tired of always losing the game. Are you able to help your friend and create a computer program that can find a solution to Naebbirac\\u2019s game before they go on their next trip?\\n\\t\\t\\t\",\n    \"id\": 2697,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers K (3 \\u2264 K \\u2264 1000) and N (1 \\u2264 N \\u2264 104 ), indicating respectively the integer that Naebbirac chooses at the beginning of the game, and the length of the sequence written on the deck. The second line contains N integers S1 , S2 , . . . , SN (1 \\u2264 Si \\u2264 K for i = 1 , 2 , . . . , N) representing the written sequence; you can safely assume that the sequence is not complete.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Complete Naebbirac\\u2019s Sequence\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with the description of the operation that allows your friend to win the game or an \\u201c * \\u201d (asterisk) if there is no way to win. The description of the operation must follow the format shown on the statement, i.e. \\u201c -x \\u201d, \\u201c +x \\u201d or \\u201c -x +y \\u201d.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Walter Erquinigo, ACM ICPC 2017  Peru\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIn a recent trip to an excavation site in the Caribbean island of Saint Basil, you found a mysterious device with some instructions resembling a puzzle. Your local guide Vibenas tells you that if you solve the puzzle, the device might show you the place where a big treasure left by the old merciless pirate Lyerpes is hidden.\\r\\n\\r\\nThe device has a tape with L cells indexed from 0 to L \\u2212 1. Each cell has a color than can be changed with commands to the device. Each color is encoded by an integer, and initially all cells have the same color. The instructions that you found represent N steps to be performed before the device shows the way to the treasure. Each step is described using four integers P, X, A and B . The instructions say that to complete the step you must first count the number of cells currently having color P. Let this number be S. Then you must calculate the values M1 = (A + S2) mod L, M2 = (A +\\u00a0 (S + B)2) mod L.\\r\\n\\r\\nFinally you have to make all cells within the closed interval [min( M1 , M2) , max( M1 , M2)] to be of color X.\\r\\n\\r\\nAfter the exhausting task of processing the N steps required by the device, you still have one job: given a color that appears the greatest number of times in the device tape after all steps (that is, a most frequent color), you must go to the shipwreck of Lyerpes\\u2019 legendary vessel and say aloud the number of cells having that color. Note that this number is unique even if more than one color appears the greatest number of times in the device tape after all steps.\\r\\n\\r\\nDoing all those calculations on the device will take ages but you, as a renowned programmer, can create a program that quickly indicates the answer for the puzzle. After that, the real hard part of your mission will be to find out where is the shipwreck of Lyerpes\\u2019 old vessel.\\n\\t\\t\\t\",\n    \"id\": 2698,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains three integers L , C and N (1 \\u2264 L, C, N \\u2264 105 ), representing respectively the number of cells in the tape, the number of available colors, and the number of steps in the instructions. Colors are identified by distinct integers from 1 to C and initially all cells have color 1. Each of the next N lines describes a step of the instructions with four integers P, X, A and B (1 \\u2264 P, X \\u2264 C and 0 \\u2264 A, B \\u2264 108 ), indicating respectively the color whose number of cells is used to decide the range of the step, the color the cells in the range must have after the step is performed, and the other two values used to calculate the bounds of the range as described above.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Daunting Device\",\n    \"output\": \"\\t\\t\\t\\tGiven a color that appears the greatest number of times in the device tape after sequentially per- forming all steps described in the input, output a single line with an integer indicating the number of cells having that color.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Jeferson Lesb\\u00e3o, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe world famous pirate Cornelius \\u201cCheesehead\\u201d Bakker was a renowned astronomer and mathemati- cian. He buried most of his treasury in the Caribbean island of Saint Basil, where Pico Colombo is a well-known geographic reference mark. Cheesehead disappeared when his fleet of three ships was caught in a hurricane in 1617. Perhaps by some kind of premonition, before his fatal excursion he wrote in a letter to one of his nieces in the Netherlands the exact distance to his hidden treasure, from Pico Colombo in the south direction.\\r\\n\\r\\nWary that the map would end up in the wrong hands, Cheesehead used his math skills as an insurance against robbers. Instead of writing in the letter the number indicating the distance, he multiplied it by a second number N, and wrote the result D in the letter, together with the value of N and an explanation of the computation he had done. He knew that even if some unwanted person had the letter, he or she would have to know how to divide two numbers, which very few robbers could at that time. Unfortunately, when the letter arrived in Europe, Cheesehead\\u2019s niece had joined a convent to become a nun and did not even bother to open the letter.\\r\\n\\r\\nExactly four centuries afterwards, Maria came into possession of a chest containing the belongings of her ancestor nun. And you can imagine her surprise when she found the letter, still unopened! Maria is planning an excursion to seek for Cheesehead\\u2019s treasure, but she needs your help. Although the value of N is intact and she can read it, the number D has been partially eaten by moths so that some of its digits are unreadable. The only clue Maria has is that the leftmost digit of D is not zero because Cheesehead said so in the letter to his niece.\\r\\n\\r\\nGiven the partial representation of D and the value of N , you must determine the smallest possible value for D so that it is a multiple of N and does not have leading zeros.\\n\\t\\t\\t\",\n    \"id\": 2699,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line that contains a non-empty string S of at most 1000 characters and an integer N (1 \\u2264 N \\u2264 1000). Each character of S is either a decimal digit or the character \\u201c ? \\u201d (question mark); the leftmost character is not \\u201c 0 \\u201d and at least one character is \\u201c ? \\u201d.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Enigma\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer D without leading zeros indicating the smallest multiple of N that has | S | digits and such that the digits in S are coincident with the corresponding digits in D. If there exists no such an integer D, write an \\u201c * \\u201d (asterisk) to the output.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Paulo Cezar Pereira Costa, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tA prestigious politician aiming for presidency next year is planning a fundraising dinner for her cam- paign. She has a list of some wealthy people in the country and wants to invite them in a way that the amount of money raised is as great as possible.\\r\\n\\r\\nSometimes wealthy people have futile behavior and don\\u2019t like the idea that someone richer or prettier than them exists. Every time someone like this meets another person who is strictly prettier, but not strictly richer, then an argument ensues. Likewise, if they meet another person who is strictly richer, but not strictly prettier, an argument occurs as well. These two situations are the only possible causes of an argument involving two persons. Thus, two persons do not have an argument if one of them is strictly prettier and strictly richer than the other. Also, two persons do not have an argument if they are equally rich and equally pretty.\\r\\n\\r\\nSince the presidential candidate wants to raise as much money as possible, an argument should be avoided at all costs, as it could ruin the campaign. Given the characteristics of some wealthy people in the country, you must find a guest list that maximizes the donations while ensuring that no argument will happen during the dinner.\\n\\t\\t\\t\",\n    \"id\": 2700,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 105 ) representing the number of possible guests with known characteristics. Each of the next N lines describes a possible guest with three integers B , F and D (1 \\u2264 B, F, D \\u2264 109), indicating respectively the person\\u2019s beauty, his/her fortune, and how much this person will donate if invited.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Fundraising\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer indicating the maximum sum of donations if guests are invited so that no argument will happen during the dinner.\\n\\t\\t\\t\",\n    \"timelimit\": 5.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Anido, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tA NAND gate (negative-AND gate) is a digital electronic circuit which produces an output that is false only if all its inputs are true; in other words, the output of a NAND gate is the complement to the output of an AND gate for the same inputs. A two-input NAND gate is a NAND gate with two inputs. The following figure shows the usual symbol of a two-input NAND gate and its truth table, using 1 for true and 0 for false.\\n\\n\\n\\nIn this problem we have a binary tree representing a circuit composed only by two-input NAND gates. In the tree, each internal node represents a NAND gate, which uses as inputs the values produced by its two children. Each leaf in the tree represents an external input to the circuit, and is a value in {0,1}. The value produced by the circuit is the value produced by the gate at the root of the tree. The following picture shows a circuit with nine nodes, of which four are NAND gates and five are external inputs.\\n\\n\\n\\nEach gate in the circuit may be stuck , meaning that it either only produce 0 or only produce 1, regardless of the gate\\u2019s inputs. A test pattern is an assignment of values to the external inputs so that the value produced by the circuit is incorrect, due to the stuck gates.\\n\\nGiven the description of a circuit, you must write a program to determine the number of different test patterns for that circuit.\\n\\t\\t\\t\",\n    \"id\": 2701,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 105) representing the number of gates in the circuit, which has the shape of a binary tree. Gates are identified by distinct integers from 1 to N , gate 1 being the root of the tree. For i = 1 , 2 , . . . , N , the i-th of the next N lines describes gate i with three integers X, Y and F (0 \\u2264 X, Y \\u2264 N and \\u22121 \\u2264 F \\u2264 1). The values X and Y indicate the two inputs to the gate. If X = 0 the first input is from an external input, otherwise the input is the output produced by gate X .Analogously, if Y = 0 the second input is from an external input, otherwise the input is the output produced by gate Y .The value F represents the state of the gate: \\u22121 means the gate is well-behaved, 0 means the gate is stuck at 0, and 1 means the gate is stuck at 1.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Gates of Uncertainty\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer indicating the number of different test patterns for the given circuit. Because this number can be very large, output the remainder of dividing it by 109 + 7.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy In\\u00e9s Kereki, ACM ICPC 2017  Uruguay\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIn long flights, airlines offer hot meals. Usually the flight attendants push carts containing the meals down along the aisles of the plane. When a cart reaches your row, you are asked right away: \\u201cChicken, beef, or pasta?\\u201d You know your choices, but you have only a few seconds to choose and you don\\u2019t know how your choice will look like because your neighbor hasn\\u2019t opened his wrap yet. . .\\r\\n\\r\\nThe flight attendant in this flight decided to change the procedure. First she will ask all passengers what choice of meal they would prefer, and then she will check if the number of meals available in this flight for each choice are enough.\\r\\n\\r\\nAs an example, consider that the available number of meals for chicken, beef and pasta are respectively (80, 20, 40), while the number of passenger\\u2019s choices for chicken, beef and pasta are respectively (45, 23, 48). In this case, eleven people will surely not receive their selection for a meal, since three passengers who wanted beef and eight passengers who wanted pasta cannot be pleased.\\r\\n\\r\\nGiven the quantity of meals available for each choice and the number of meals requested for each choice, could you please help the flight attendant to determine how many passengers will surely not receive their selection for a meal?\\n\\t\\t\\t\",\n    \"id\": 2702,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains three integers Ca, Ba and Pa (0 \\u2264 Ca, Ba, Pa \\u2264 100), representing respectively the number of meals available for chicken, beef and pasta. The second line contains three integers Cr, Br and Pr (0 \\u2264 Cr, Br, Pr \\u2264 100), indicating respectively the number of meals requested for chicken, beef and pasta.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Hard Choice\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer representing the number of passengers that will surely not receive their selection for a meal.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Edwin Ni\\u00f1o, ACM ICPC 2017  Colombia\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe roads of Cubiconia are in a dire state, after years of neglect and lack of maintenance. Each road connects two different cities A and B and can be traveled in both ways (from A to B or from B to A). There is at most one road between each pair of cities, and using the existing roads it is possible to travel between any pair of cities. The new emperor of Cubiconia has just raised the taxes (again!), but promised to repair at least some of the roads, guaranteeing that Cubiconians will be able to travel between any pair of cities using only restored roads.\\r\\n\\r\\nThe Department of Public Works have calculated the cost of repairing each individual road. Now they want to calculate the minimum cost for repairing a set of roads so that the emperor\\u2019s promise is made true. This is not easy because the emperor wants the set of repaired roads to include one particular road, but he has not yet decided which particular road to include: could be the one that connects the city where his castle is to the city where his daughter\\u2019s royal residence is, or the road that connects the city where his summer palace is to the only city by the seaside, or. . . Fearing the emperor will take too long to decide, the engineers want your help.\\r\\n\\r\\nGiven the description of the roads in Cubiconia, with their respective repairing costs, you must write a program to answer a set of queries. For each query you will be given one specific road that should be repaired, and must determine the minimum cost for repairing a set of roads (including the given specific road) so that Cubiconians will be able to travel between any pair of cities using only restored roads.\\n\\t\\t\\t\",\n    \"id\": 2703,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers N (2 \\u2264 N \\u2264 105 ) and R (N \\u2212 1 \\u2264 R \\u2264 2 \\u00d7 105 ), representing respectively the number of cities and the number of roads in Cubiconia. Cities are identified by distinct integers from 1 to N. Each of the next R lines describes a road with three integers A, B (1 \\u2264 A < B \\u2264 N) and C (1 \\u2264 C \\u2264 104 ), indicating that there is a road between cities A and B and the cost of repairing it is C. There is at most one road between each pair of cities, and using the existing roads it is possible to travel between any pair of cities. The next line contains an integer Q (1 \\u2264 Q \\u2264 105 ) representing the number of queries. Each of the next Q lines describes a query with two integers U and V (1 \\u2264 U < V \\u2264 N), indicating the specific road that should be repaired. There are no repeated queries.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Imperial Roads\",\n    \"output\": \"\\t\\t\\t\\tOutput Q lines, each line with an integer indicating the answer to the corresponding query of the input, that is, the minimum cost for repairing a set of roads (including the specific road in the query) so that Cubiconians will be able to travel between any pair of cities using only restored roads.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Gabriel Poesia, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tPog the Frog wants to compete in the World Frog Jump competition, which will take place in Nlogonia. In the competition, each frog must perform a sequence of acrobatic jumps in a specially built arena. The arena is composed of N equally spaced positions around a circumference (the arc between two adjacent positions is always the same length) where each position can be either a rock or a pond. The positions are numbered sequentially from 0 to N \\u2212 1 in the clockwise direction, so that judges can easily make notes about which jumps were performed in each position. Thus, position 0 is adjacent to positions 1 and N \\u2212 1 in the arena.\\r\\n\\r\\nThe competition rules stipulate that the sequence of jumps of each frog must start at a rock, always go from a rock to another rock, and finish at the same position it started. The rules do not require frogs to use every rock in the arena for their sequence of jumps.\\r\\n\\r\\nPog the Frog is currently practicing for the competition. He must develop two skills. First, he needs to get better at jumping from one rock to another, since landing on either a pond or outside of the marked positions can mean disqualification. Besides that, he must learn impressing acrobatic moves. With that in mind, he has decided on a practicing strategy. In the beginning of each practice session, Pog the Frog will pick a starting rock and an integer jump length K between 1 and N \\u2212 1. After that, whenever he is standing on a rock numbered i, he will aim his next acrobatic jump at the rock whose number is obtained by getting the remainder of the division of i + K by N. He will stop when he lands on the starting rock. For example, if the arena has 3 positions, all of them rocks, and Pog the Frog starts at position 0 and picks K = 2, he will first jump from rock 0 to rock 2, then to rock 1, and finally jump back to rock 0. At this point, his practice session ends.\\r\\n\\r\\nGiven the description of the N positions in the arena, help Pog the Frog by answering this question: how many distinct values of K can he choose for his practice sessions, if he can use any rock as a starting position for his sequence of jumps?\\n\\t\\t\\t\",\n    \"id\": 2704,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of a single line that contains a string S of N characters (3 \\u2264 N \\u2264 105 ), representing the positions in the arena. The i-th character of S (i = 0, 1, . . . , N \\u2212 1) indicates that the position i in the arena is either a rock (uppercase letter \\u201cR\\u201d) or a pond (uppercase letter \\u201cP\\u201d).\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Jumping Frog\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer representing the number of distinct jump lengths that Pog the Frog can choose for his practice sessions, given that he can use any rock as a starting position for his sequence of jumps.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Paulo Cezar Pereira Costa, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tEve loves puzzles. She recently bought a new one that has proven to be quite difficult. The puzzle is made of a rectangular grid with R rows and C columns. Some cells may be marked with a dot, while the other cells are empty. Four types of pieces come with the puzzle, and there are R \\u00d7 C units of each type.\\r\\n\\r\\n  \\r\\n\\r\\nThe objective of the puzzle is to use some of the pieces to completely fill the grid; that is, each cell must be covered with a piece. In doing that, each piece may be rotated 90, 180 or 270 degrees. But of course, to make it more interesting, there are a few constraints that must be respected:\\r\\n\\r\\n1. Type 1 pieces can only be used on cells marked with a dot, while the other types of pieces can only be used on empty cells.\\r\\n\\r\\n2. Given any pair of cells sharing an edge, the line drawings of the two pieces on them must match.\\r\\n\\r\\n3. The line drawings of the pieces cannot touch the border of the grid.\\r\\n\\r\\nAs Eve is having a hard time to solve the puzzle, she started thinking that it was sloppily built and perhaps no solution exists. Can you tell her whether the puzzle can be solved?\\n\\t\\t\\t\",\n    \"id\": 2705,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains two integers R and C (1 \\u2264 R, C \\u2264 20), indicating respectively the number of rows and columns on the puzzle. The following R lines contain a string of C characters each, representing the puzzle\\u2019s grid; in these strings, a lowercase letter \\u201co\\u201d indicates a cell marked with a dot, while a \\u201c-\\u201d (hyphen) denotes an empty cell. There are at most 15 cells marked with a dot.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Keep It Covered\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with the uppercase letter \\u201cY\\u201d if it\\u2019s possible to solve the puzzle as described in the statement, and the uppercase letter \\u201cN\\u201d otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Guilherme A. Pinto, ACM ICPC 2017  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe city of Linearville has N parallel two-way streets going in the West-East direction and N parallel two-way streets going in the South-North direction, making up a grid with (N \\u2212 1) \\u00d7 (N \\u2212 1) blocks. The distance between two consecutive parallel streets is either 1 or 5. The Linearville Transit Authority is conducting an experiment and now requires all cars to always follow a path that alternates direction between W-E and S-N at every crossing, meaning they must turn either left or right when reaching a crossing. The LTA is developing a new navigation app and needs your help to write a program to compute the lengths of shortest alternating paths between many pairs of start and target crossings. The alternating path in the figure, as an example for N = 10, is clearly not a shortest alternating path. But beware! Linearville may be huge.\\r\\n\\r\\n\\n\\t\\t\\t\",\n    \"id\": 2706,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer N (2 \\u2264 N \\u2264 105 ) representing the number of streets in each direction. For each direction, the streets are identified by distinct integers from 1 to N starting at the S-W corner of the city. The second line contains N \\u2212 1 integers D1, D2,\\u00a0. . . , DN\\u22121 (Di \\u2208 {1, 5} for i = 1, 2, . . . , N \\u2212 1) indicating the distances between consecutive streets going S-N (that is, Di is the distance between street i and street i + 1). The third line contains N \\u2212 1 integers E1, E2, . . . , EN\\u22121 (Ei \\u2208 {1, 5} for i = 1, 2, . . . , N \\u2212 1) indicating the distances between consecutive streets going W-E (that is, Ei is the distance between street i and street i + 1). The fourth line contains an integer Q (1 \\u2264 Q \\u2264 105 ) representing the number of shortest path queries. Each of the next Q lines describes a query with four integers AX, AY , BX and BY (1 \\u2264 AX, AY , BX, BY \\u2264 N), indicating that the start crossing is (AX, AY ) and the target crossing is (BX, BY ); the values AX and BX are streets going S-N while the values AY and BY are streets going W-E. There are no repeated queries.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Linearville\",\n    \"output\": \"\\t\\t\\t\\tOutput Q lines, each line with an integer indicating the length of a shortest alternating path for the corresponding query of the input.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Andr\\u00e9 Marcos Silva  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe municipal tourism agency of the city of Ica in Peru has set up a checkpoint for adventure jeeps that ascend to the dunes of Hucachina Park. As during the day, there are several off-roads that go up and down the national park, and tourists do not always use the same transportation for the round trip, the city hall needed to have better control and security over the flow of visitors in the park. Develop a program that receives as input if a jeep is entering or returning from the park and the amount of tourists this vehicle is transporting. At the end of the shift, the program must indicate how many vehicles and tourists are still missing from the adventure.\\n\\t\\t\\t\",\n    \"id\": 2708,\n    \"input\": \"\\t\\t\\t\\t\\tThe program must receive successive input pairs. Each pair should indicate the jeep's movement and the amount of tourists it is carrying. The first entry should be \\\"SALIDA\\\" or \\\"VUELTA\\\". \\\"SALIDA\\\" should indicate that the jeep is leaving the center and entering the park; and \\\"VUELTA\\\" that the Jeep is returning from the ride. Immediately following, the program receives an integer T (where, 0 <= T <=20) indicating the amount of tourists being transported by the jeep. The string \\\"ABEND\\\" should be the end-of-processing indicator.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Tourists in the Huacachina Park\",\n    \"output\": \"\\t\\t\\t\\tAs a goal the program must present two exits, one in each line: the amount of tourists and the amount of jeeps that still need to return from the park.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Adriano Pereira Almeida, Centro Universit\\u00e1rio Est\\u00e1cio da Amaz\\u00f4nia  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tRobbie is a robot very charismatic, and one of things that he most like to do, besides playing with Gl\\u00f3ria, it's collect coins. Robbie has several coins with equal or different values, and the same size. They\\u2019re stored in na organize manner on top of each other, inside a glass cylinder. Robbie Always do a little game with Gl\\u00f3ria using his coins when she ask to play with him from hide and seek, or when she asks him to take her for a walk. The rule of the game is: Gl\\u00f3ria have to choose any number\\u00a0N, which will be added, then for each coin\\u00a0N\\u00a0the value of the coin\\u00a0Vi\\u00a0is added until there aren\\u2019t no more coins, in other words \\u01a9 of ((VM-(N*0)\\u00a0)+(VM-(N*1))+(VM-(N*2))...), M it\\u2019s the number of coins. For exemple, if there\\u2019re 5 coins with values 1, 2, 3, 4 and 5, and Gl\\u00f3ria choose 2 as a number of jump, them the coins will be added 5, 3 and 1, result in 9. In the end, Robbie checks if the sum of these coins is a prime number, if this happen, he do what Gl\\u00f3ria want, if doesn\\u2019t happen, the little girl convince Robbie to play again, Cause she Always convince him to do everything, saying that will stop to tell him stories, if he doesn\\u2019t make her wish.\\r\\n\\r\\nYou as a good developer of U.S Robots, will help this two friends, writting a computer program that will say the result of the game.\\n\\t\\t\\t\",\n    \"id\": 2709,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of this input contains na integer\\u00a0M\\u00a0(2 \\u2264\\u00a0M\\u00a0\\u2264 20) that represents the quantity of coins. Each of the next lines\\u00a0M\\u00a0contains an integer\\u00a0Vi\\u00a0(1 \\u2264\\u00a0Vi\\u00a0\\u2264500) that represents the value of coins\\u00a0Mi\\u00a0, and for the last one, a integer\\u00a0N\\u00a0(1 \\u2264\\u00a0N\\u00a0\\u2264\\u00a0M) that\\u2019s the jump in the added choosen by Gloria.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Coins of Robbie\",\n    \"output\": \"\\t\\t\\t\\tPrint \\u201cYou\\u2019re a coastal aircraft, Robbie, a large silver aircraft.\\u201d, if Gloria win the game, or \\u201cBad boy! I\\u2019ll hit you.\\u201d, if Gl\\u00f3ria loose the game. The output should be no quotation marks.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Luciano Ribeiro, Inatel  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tD\\u00e2mi and Marcus like to create computer games.\\u00a0Recently they created a game based in arrays, and\\u00a0now they\\u00a0need your help to test it.\\n\\nIt's given to you a bidimensional\\u00a0array M, which are initially filled with zeros.\\u00a0Then will be given Q operations.\\u00a0They are:\\n\\n\\n\\tU X Y Z W V - Increment V in all positions in the sub-matrix of M defined by the upper left corner (X,Y) and the lower-right corner (Z,W)\\n\\tA X Y - Returns the value of mx,y\\n\\n\\nAfter they have created the game, now they want you to help them verify if their code is correct.\\n\\t\\t\\t\\t\",\n    \"id\": 2710,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case will begin with\\u00a0an integer\\u00a0Q\\u00a0(Q\\u00a0\\u2264\\u00a0100 000).\\u00a0After this you must read Q operations in the format described above (1\\u00a0\\u2264 X\\u00a0\\u2264\\u00a0Z\\u00a0\\u2264\\u00a0500\\u00a0e 1\\u00a0\\u2264 Y\\u00a0\\u2264 W\\u00a0\\u2264\\u00a0500\\u00a0\\u00a0e |V|\\u00a0\\u2264 5000).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Game of Array\",\n    \"output\": \"\\t\\t\\t\\t\\tFor each operation of type \\\"A\\\", print the corresponding value as shown in the\\u00a0output sample.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Diego Rangel, FACIT  Brazil\",\n    \"category\": \"Mathematics\",\n    \"description\": \"During cryptography class, Rangel is bored.\\r\\n\\r\\n-Gu, hey, Gu! - Rangel calls his friend.\\r\\n\\r\\n-Hey, man! - Gustavo replies.\\r\\n\\r\\n-Can I borrow your phone? - Rangel says hopefully.\\r\\n\\r\\n-No way, you are going to comment my social media posts \\u2013 says Gustavo.\\r\\n\\r\\n-Ok \\u2013 Rangel replies sadly.\\r\\n\\r\\nGustavo is a nice guy and does not want to see his friend sad. Considering that in his mind, he calls V\\u00e2nia and they both come up with a challenge to get rid of Rangel's boredness and make him like cryptography.\\r\\n\\r\\n-Let's go Rangel, we challenge you! - say Gustavo and V\\u00e3nia, both smiling.\\r\\n\\r\\n-Challenge? What kind of challenge? - says Rangel.\\r\\n\\r\\n-Don't you want to use my phone? Come on, we have a challenge for you. Do you accept it? - they ask him.\\r\\n\\r\\n-Yes, let's do it! - says Rangel, even more curious.\\r\\n\\r\\n- OK, we are going to explain it:\\r\\n\\r\\nWe are going to change the password of my phone, and you have to find out what it is. It is not going to be an easy task. We will give you three numbers B, N and M, and we want you to find out the fourth number. This number will be my password! However, do not think this is going to be easy, because to discover the fourth number you need to solve the following equation:\\r\\n\\r\\nBE\\u00a0= N mod M\\r\\n\\r\\nSimple, right? We are interested that you discover the value of E, we assure you that the value of E is between [0, M - 1]\\u00a0and M is a prime number! Hahaha - Come on, you need to be fast! Well, you only have class time to solve!\\r\\n\\r\\n-Ok, I'll take it, but I will use my laptop to help me \\u2013 says Rangel cheerfully.\\r\\n\\r\\n-Ok, show me what you can do. - say Gustavo and V\\u00e2nia.\\r\\n\\r\\n-I am going to give you a clue. Remember, Rangel, the value is between [0,M -1], but if it is not, it is -1!\\r\\n\\r\\nRangel is ready to take the challenge and decided to use programming to help him out. He asked your help to develop the code. Are you going to turn down this challenge?\",\n    \"id\": 2711,\n    \"input\": \"There are several case tests. Each case consists of three integers B, N, M where B and N (0 < B, N < 105) and M are a prime number.\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Unlocking a Cell Phone\",\n    \"output\": \"For each case, you will have to print the value for E, and if this value does not follow the following property [0, M - 1], you wll have to print -1. Let's go, help Rangel!\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor , Silva A M  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe vehicle restriction of S\\u00e3o Paulo city is a restriction on the circulation of motor vehicles in the city. Implemented since 1996 with the aim of improving environmental conditions by reducing the burden of pollutants in the atmosphere, it has consolidated itself as an instrument to reduce congestion in the main highways of the city, during peak times. In the boundary ways, traffic of trucks and automobiles that are within the restriction is not allowed. There is a scale that determines on which days of the week which vehicles can not travel. This scale is governed by the last digit of the vehicle nameplate, being:\\u00a0\\n\\n\\n\\tMonday, final digit of board 1 and 2\\u00a0\\n\\tTuesday, final digit of plate 3 and 4\\u00a0\\n\\tWednesday, digit end of plate 5 and 6\\u00a0\\n\\tThursday, final digit of plate 7 and 8\\u00a0\\n\\tFriday, final digit of plate 9 and 0\\u00a0\\n\\n\\nThe drivers who are caught violating the traffic restriction are charged with a fine and four points in the driver's license.\\n\\t\\t\\t\",\n    \"id\": 2712,\n    \"input\": \"\\t\\t\\t\\t\\tThe first entry line represents the number of N tests (1\\u00a0<= N <1000) that should be considered. The other entries are string with maximum size S (1 <= S <= 100) representing each card to be analyzed, so that each card is on a single entry line. The expected format for a valid car plate in S\\u00e3o Paulo is \\\"AAA-9999\\\", such that A is a valid character in [A-Z], and 9 is a valid numeric digit in [0-9].\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Vehicular Restriction\",\n    \"output\": \"\\t\\t\\t\\tThe set of valid values \\u200b\\u200bas output are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY and FRIDAY, according to the predefined constraint table, and FAILURE if the board does not present the defined pattern.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Diego Rangel, FACIT  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"In RPG games there are many classes of characters that the players can choose when they start the game. One of the most popular classes is the wizard, because he is relentless! The wizard is the kind of character that dominates mystical arts and therefore causes a constant damage V that varies from match to match, and sometimes, in case he has mana (magic points), he increase his damage to a certain level that depends on the monster he is fighting against.\\r\\n\\r\\nRangel is playing a new RPG and he is trying to level up fast, so in order to do that, he needs to play a lot! However, he does not have much time, he has a lot of books he borrowed from his friend V\\u00e2nia he needs to read and it is exams week, so he needs to study to pass. Therefore, he wants to minimize the amount of time he spends on the game. No rush, we will explain how it works!\\r\\n\\r\\nFirst, this RPG works following these procedures: there are several matches, and each one contains\\u00a0N rooms, and in each room there is a monster with X life points. For each monster, in case the wizard has mana, he can increase the value of the constant damage in Di units, and the cost to increase the damage is fixed in 1 mana unit. The time needed to kill an i-th monster is the the amount of life points the monster has divided by the damage the wizard can cause (considering the rules mentioned previously).\\r\\n\\r\\nIt is important to remember that in order to win the match you need to get to the end of it. It is always guaranteed that Rangel plays until the end of the match, and he can only go to the next room when he kills the guardian monster of the room in which he is.\",\n    \"id\": 2713,\n    \"input\": \"There are several case tests. Each case starts with three integers N, K, V, where (1 \\u2264 N \\u2264 103) indicates the number of rooms there are in the match, K (0 \\u2264\\u00a0K \\u2264\\u00a0100) indicates the amount of mana (magic points) the powerful wizard possess and V (1 \\u2264\\u00a0V \\u2264\\u00a0104) indicates the value of the constant damage the wizard suffers on this level. The next N lines contain two integers X (1\\u00a0\\u2264\\u00a0X \\u2264\\u00a0105) indicating the number of life points the monster has in the i-th room and Di (1 \\u2264\\u00a0Di\\u00a0\\u2264\\u00a0105) indicates how much damage will be increased on the i-th room, in case the wizard has mana and wants to use it.\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"The Wizard is Relentless\",\n    \"output\": \"For each case, you will have to print a line containing the minimum time Rangel will spend to kill all the monsters in the game with four decimal places.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy , Silva A. M.  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tAn educational institution has as a practice to assign access password to the academic portal to use the RA (academic record) of the student. In this institution RA's are 20-character strings always initialized by the characters \\\"RA\\\" and followed by 18 numeric digits. for example: RA000000000000012340. These identifiers are automatically generated by the registration system and are formed by three main parts: (a) initialized by the characters \\\"RA\\\", (b) followed by Z zeros which are position formatters (where, 0 <= Z <= 17 ), and finally, (c) the student's own identification number, considering the X numbers to the right of the RA not initiated by zero (where, 1 <= X <= 18).\\n\\t\\t\\t\",\n    \"id\": 2714,\n    \"input\": \"\\t\\t\\t\\t\\tThe first entry line is an integer value N (1 <= N <= 1000) that represents the amount of RA's that the program must account for. The following N lines each represent strings of up to 100 characters representing the RAs sent by the registration system.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"My Temporary Password\",\n    \"output\": \"\\t\\t\\t\\tThe valid outputs for the program are: the presentation of the provisional password or the indication of \\\"INVALID DATA\\\". The temporary password is made up of the X numeric characters not started at 0 to the right of the string, for example: for the identifier \\\"RA000000000000012340\\\" the temporary password must be \\\"12340\\\". If the received string does not conform to the training rules, the program should indicate \\\"INVALID DATA\\\".\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Diego Rangel, FACIT  Brazil\",\n    \"category\": \"Beginner\",\n    \"description\": \"We finally got to the end of the semester and as expected there is a lot of homework to do! Willing to help (or not really), professors decided the assignments will be done in pairs and they would also inform what is the degree of difficulty of each assignment.\\r\\n\\r\\nConsidering that, Rangel, our old friend, chose Gugu as his partner, knowing how responsible he is. Keeping in mind that both are really busy they decided to split their assignments according to the following criteria:\\r\\n\\r\\n\\r\\n    \\r\\n    The sequence in which each assignment is done cannot be changed during the splitting;\\r\\n    \\r\\n    \\r\\n    The splitting needs to be fair, therefore, minimizing the difference among the assignments done by Rangel and Gugu;\\r\\n    \\r\\n    \\r\\n    Rangel always does the first assignments and Gugu takes care of the remaining.\\r\\n    \\r\\n\\r\\n\\r\\nBecause both of them are really busy at the library getting the books to work on their assignments, they asked you to determine the difference.\",\n    \"id\": 2715,\n    \"input\": \"Each file contains several case tests. The first line for each case contains an integer N (1\\u00a0\\u2264 N\\u00a0 \\u2264 106) which indicates the number of elements in the sequence, and the second line contains N integers where each integer has a value X (1 \\u2264 X \\u2264 105).\\r\\n\\r\\nThe input ends with end-of-file (EOF).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Splitting Assignments I\",\n    \"output\": \"For each case test, an integer Y must be printed, where Y is the value of the optimum difference following the previously mentioned criteria. Leave a blank line after each test case, including the last one.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"By Diego Rangel, FACIT  Brazil\",\n    \"category\": \"Paradigms\",\n    \"description\": \"We finally got to the end of the semester and as expected there is a lot of homework to do! Willing to help (or not really), professors decided the assignments will be done in pairs and they would also inform what is the degree of difficulty of each assignment.\\r\\n\\r\\nConsidering that, Rangel, our old friend, chose Gugu as his partner, knowing how responsible he is. Keeping in mind that both are really busy they decided to split their assignments according to the following criteria:\\r\\n\\r\\n\\r\\n    \\r\\n    The sequence in which each assignment is done can be changed during the splitting;\\r\\n    \\r\\n    \\r\\n    The splitting needs to be fair, therefore, minimizing the difference among the assignments done by Rangel and Gugu.\\r\\n    \\r\\n\\r\\n\\r\\nBecause both of them are really busy at the library getting the books to work on their assignments, they asked you to determine the difference.\",\n    \"id\": 2716,\n    \"input\": \"Each file contains several case tests. The first line for each case contains an integer N (1\\u00a0\\u2264 N \\u2264 150) which indicates the number of elements in the sequence, and the second line contains N integers where each integer has a value X (1\\u00a0\\u2264 X\\u00a0\\u2264 2000).\\r\\n\\r\\nThe input ends with end-of-file (EOF).\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Splitting Assignments II\",\n    \"output\": \"For each case test, an integer Y must be printed, where Y is the value of the optimum difference following the previously mentioned criteria.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe manufacturing of Christmas gifts is a very complicated task. Several times the leprechauns stay up late working so that everything can be done in time and with perfection.\\n\\nTo better manage their schedule, the leprechauns stipulated how many minutes it takes to manufacture each gift.\\n\\nIts almost the end of the day, and one of the leprechauns asked for your help.\\n\\nThere're N minutes left for the time to go away, and there are two remaining gifts for elf Ed to manufacture. Help him to find out if he will manage to manufacture both gifts today, or if he should delay the work for the next day.\\n\\t\\t\\t\",\n    \"id\": 2717,\n    \"input\": \"\\t\\t\\t\\t\\tEach test case starts with a integer N, indicating how many minutes there are until the time to go away (2 <= N <= 100).\\n\\nFollowing there will be two integers A and B, indicating how many minutes it takes to manufacture each of both gifts Ed has to manufacture (1 <= A, B <= 100).\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Elf Time\",\n    \"output\": \"\\t\\t\\t\\tPrint one row, containing the statement \\\"Farei hoje!\\\" if it's possible to manufacture both gifts before the time to go away, or \\\"Deixa para amanha!\\\" otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tGiovanna loves Christmas. The parties, the family, Christmas decorations and especially the famous blink Christmas lights. But this year little Gio was sad to realize that his set of lights is broken. Some lights still work, others do not. Giovanna obviously wants to fix her preferred object but does not have enough bulbs to replace all the burned bulbs so she decided to do the following: divide the Christmas lights into ordered groups of 50 bulbs and in each group only fix the largest number of consecutive burned bulbs.\\n\\n\\t\\t\\t\\tBecause of the many groups, the task became tedious and to try to remedy this, Giovanna, noting the similarity of groups with binary representation of numbers when she imagined burned lights bulbs like 1's and functional bulbs like 0's, decided to think of them effectively as numbers and wrote the representations decimals of these binaries then tried to figure out the amount of bulbs to be exchanged from these annotations.\\n\\n\\t\\t\\t\\tYour task is, given Gio's notes, find out how many bulbs will be changed in each group.\\n\\n\\t\\t\\t\",\n    \"id\": 2718,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the entry contains an integer N (1 &leq; N &leq; 103) representing the number of groups Giovanna wrote down. The next N rows contain an integer X each representing the decimal equivalent of the number representing the group.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Christmas Lights\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of N lines each containing the size of the largest sequence of consecutive bulbs burned in each group, respecting the order of entry of the groups.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tIt's almost all ready! The gifts are wrapped, the routes are traced, the reindeer are fed and Noel is happy. It's nearly the time to leave, and Noel must deliver N gifts this Christmas.\\n\\nThe only problem is that all of these gifts may be too heavy to be loaded on a single trip.\\n\\nTo solve this problem, Noel stipulated the maximum weight that the sum of the gifts' weight can have on each trip, and now he wants to find out how many trips he will have to make.\\n\\nGiven the number of gifts, the maximum allowed weight for each trip, and the weight of the gifts, find out how many trips it will take\\u00a0to deliver all the gifts. Notice that the gifts must be delivered\\u00a0on the same order they are given on the input description.\\n\\t\\t\\t\",\n    \"id\": 2719,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be T test cases.\\n\\nEach test case starts with two integers N and M, indicating how many gifts must be delivered and what is the maximum weight allowed for each trip, respectively (1 <= N <= 10*, or 1 <= N <= 10000**, 1 <= M <= 1000).\\n\\nFollowing there will be N integers pi, each representing the weight of a gift (1 <= pi <= M, for every 1 <= i <= N).\\n\\n* Will happen in approximately 90% of the test cases.\\n** Will happen in approximately 10% of the test cases.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"How Many Trips Will Noel Make?\",\n    \"output\": \"\\t\\t\\t\\tFor each test case print one row, containing one integer K, representing the amount of trips Noel will have to make.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Oliveira, UFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tLittle Bob just loves Christmas! He likes the food, the classic songs, and, specially, he loves the presents Santa Claus gives him every year!\\n\\nAs in previous years, little Bob will receive exactly K presents from all the N presents available from Santa Claus. Now, he must decide which presents he will ask the good old man to give him.\\n\\nAs every little boy think, the larger is the present's package, the cooler it is! Hence, he decided to ask for the presents with the K greater volumes. Given the description of all N presents available from Santa Claus, determine the K ones that little Bob should ask for.\\n\\t\\t\\t\",\n    \"id\": 2720,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line contains an integer T (\\u226420), the number of test cases.\\n\\nThe first line of each test case contains two integers N and K (1\\u00a0\\u2264 N\\u00a0\\u2264 103 * or 1\\u00a0\\u2264 N\\u00a0\\u2264 105 **, 1\\u00a0\\u2264 K\\u00a0\\u2264 N), the number of presents Santa Claus has and the number of presents little Bob will receive.\\n\\nEach of the next N lines describe a present. Each line contains four integer I, H, W and L (0\\u00a0\\u2264 I\\u00a0\\u2264 109, 1\\u00a0\\u2264 H, W, L\\u00a0\\u2264 100), the present's identification number (id) and its package's height, width and length, in centimeters. All presents have distinct ids.\\n\\n* In approx. 40% of the test cases\\n** In the rest of the test cases\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Large Presents\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line containing K integers, separated by spaces, describing the ids of the presents little Bob should ask for. Print the ids in ascending order. Do not print a space after the last id.\\n\\nIf there is more than one possible solution, print the lexicographic smallest one, i.e., the smallest id in the output must be the minimized; in the case of a tie, the second smallest id in the output must be minimized, and so on.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThis year Santa's Reindeers decided that Rudolph would no longer be the one who would always be ahead. They would choose, at a fair way, who would lead the sled. And nothing is fairer than chance.\\n\\n\\t\\t\\t\\tThen they decidied the following way to choose: Each Reindeer would do as many snowballs as he wanted without the others seeing. Then all the snowballs of all the Reindeers would be gathered into a single large pile. Lastly, the snowballs would be drawn from this stack one by one, and distributed among them always following the order: Dasher, Dancer, Prancer, Vixen, Comet, Cupid, Donner, Blitzen, and Rudolph. Until the snowballs were gone. The reindeer that got the last snowball would be declared the winner and would be in the main sled position this year.\\n\\n\\t\\t\\t\\tGiven the number of snowballs made by each Reindeer, determine which Reindeer won the draw.\\n\\n\\t\\t\\t\",\n    \"id\": 2721,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of a single line containing 9 integers Ai (1 &leq; Ai &leq; 104).\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Indecision of Reindeers\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a single line containing the name of the winning Reindeer.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tEvergreen Bushy, one of Noel's helper elves, is responsible for inventing many of the toys distributed by Noel and also well-known for joking with the good old man, has made another joke this year.\\n\\nAs he always does every year, Bushy separated the presents for each child by placing a note with the children's name. The problem is that he did not simply put the correct name of the child in the present: he joked :) each of the names by mixing the letters in a sequence: two letters of the name followed by two letters of the surname, followed by two letters of the name and by two letters of the surname and so on.\\n\\nWell, as Noel is very tired this year and without time for jokes, he asked you that is an expert in programming to make a program that converts the name mixed by Evergreen into the correct name of each child.\\n Just a curiousity: the first line of each test case will always have an even number of characters and the second line will always have the same number of characters of the first line (or the same number -1 character).\\n\\n\\n\\t\\t\\t\",\n    \"id\": 2722,\n    \"input\": \"\\t\\t\\t\\t\\tThe input contains an integer N (N < 2000) that indicates the number of test cases. Each test case consists of two lines with up to 100 characters (maximum). These two lines contain the name that was mixed by Evergreen Bushy, which is basically composed of uppercase, lowercase, and white spaces.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Evergreen Trick\",\n    \"output\": \"\\t\\t\\t\\tBased on these two input lines, your program must print the correct children's name, according to the rule to decode it, as described above.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tIts almost Christmas, and as usual the Santa is getting ready to board his sleigh with all N gifts to be delivered.\\n\\nThe space in which the gifts will be put into in the sleigh can be divided\\u00a0in two sides: side A and side B. To ensure that the sleigh will be balanced, the difference in the sum of gifts on the side A and on the side B can't be greater than 5kg.\\n\\nYou've got the task to help Santa this year. Given the N gifts, you must find out if there's a way to divide them on the sides A and B, ensuring that the sleigh never gets unbalanced.\\n\\nNotice that the gifts must be alocated one at a time, in the order they are given on the test case, and at every moment the sleigh should be balanced.\\n\\t\\t\\t\",\n    \"id\": 2723,\n    \"input\": \"\\t\\t\\t\\t\\tThere will be T test cases.\\n\\nEach test case starts with an integer N, indicating the number of gifts to be alocated (1 <= N <= 16*, or\\u00a01 <= N <= 10000**).\\n\\nFollowing there will be N integers pi, representing the weight of the N gifts (1 <= pi <= 10, for every\\u00a01 <= i <= N).\\n\\n* Will happen at approximately 90% of the test cases.\\n** Will happen at approximately 10% of the test cases.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Balancing Gifts\",\n    \"output\": \"\\t\\t\\t\\tFor each test case you should print a row, containing the sentence \\\"Feliz Natal!\\\" if its possible to divide the gifts without never losing balance, or \\\"Ho Ho Ho!\\\" otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\tBy Felipe C. Ochial, URI  Brazil\\r\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\r\\n\\t\\t\\t\\tJuvenal behaved exemplary this year, since he likes chemistry deeply and really want to earn an Alchemy kit. However, Juvenal asked to include some dangerous elements in his kit. As Santa could not deny the request ( how to say no to the world most well behaved children?) asked to poor elf Patatatitu to ensure that the present was safe.\\r\\n\\r\\nPatatatitu knows a lot about chemistry, and knows every dangerous compound that can be made with the elements available on Juvenal\\u2019s kit. Thus, he decided to send a cd together with the gift, containing a program which asserts the safety of Juvenal\\u2019s experiments. Everyone agrees that the world\\u2019s most well behaved children would never do an experiment without first checking it\\u2019s safety as per Santa instructions. However Patatatitu knows nothing about programming and is after someone to help him. Can you help?\\r\\n\\r\\nTo elucidate, Patatatitu explains that a dangerous compound are formed from a mix of elements in theirs chemical formula respecting it\\u2019s order and proportions. In this kit it\\u2019s possible to add one element each time, in various quantities. Thus, to form chlorine trifluoride (ClF3), an extremely dangerous compound, you must add an atom of chlorine (Cl) and three of fluorine (F3), regardless of what was added before or after. ClF4 is not a dangerous compound since it\\u2019s a different proportion from ClF3. Similarly, if Mg2F is a dangerous compound, Mg2Fe is safe, since fluorine (F) is different from iron (Fe).\\r\\n\\t\\t\\t\",\n    \"id\": 2724,\n    \"input\": \"\\r\\n\\t\\t\\t\\t\\tThe input consist of an integer N\\u00a0(0 <\\u00a0N\\u00a0< 10) which indicates the number of test cases. Each test case have an integer T\\u00a0(0 <\\u00a0T\\u00a0< 51) which indicates the number of dangerous compounds possible, if th elements are included in the order and proportions shown. Follow T lines, each containing a string up to 50 characters representing a formula that generates a dangerous compound if the elements are added in that particular order and proportion. After, is given an integer U\\u00a0(0 <\\u00a0T\\u00a0< 51) that indicates the number of experiments Juvenal will do. Follow U lines each containing an string up to 50 characters representing the elements that Juvenal will use in the order and proportions as they are added.\\r\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Help Patatatitu\",\n    \"output\": \"\\r\\n\\t\\t\\t\\tThe output consist of U per test case, which must inform if Juvenal must abort it\\u2019s experiment or proceed with the U-th experiment of the test case. If Juvenal must abort print \\u201cAbortar\\u201d, else if it\\u2019s safe print \\u201cProssiga\\u201d.Test cases must be separated by a blank line .\\r\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tAfter a day of work at Santa's factory, elfs and leprechauns return to their homes in the quiet town of Christmas Village, which lies on the north pole near the factory. Vila Natalina is a beautiful and quiet place to live. White because of the snow and a well planned city since we can imagine the houses as vertices of a huge grid with all vertices containing a house. And they all lived in peace until the day when the elfs, who are fewer, began to say that their houses were very distant from each other and that this made it difficult to communicate among them since to simply talk they had to walk great distances because there are no telephone lines and no cellular network at the North Pole. The leprechauns did not bother with this because they had telepathic powers that eliminated this inconvenience.\\n\\n\\t\\t\\t\\tIf considered wronged the elfs decided to install a telephone network that worked by wire and connected all the elfs houses. And they did it wisely: with as few wires as possible and each strand well stretched to form a straight segment connecting two houses of different elfs. However, since the wires were not underground but above the height of the houses, some leprechauns felt uncomfortable and decided to charge a fee for each wire passed over their house. As the elfs are trying to economize, they obviously built the net in such a way as to pay as little as possible.\\n\\n\\t\\t\\t\\tGiven the location of the house of all the elfs and the fee charged by a leprechaun for each wire that passes over your house, determine the amount paid by the elfs to the leprechauns.\\n\\n\\n\\t\\t\\t\",\n    \"id\": 2725,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the entry contains an integer T that represents the number of test cases to follow. The first line of a test case contains two integers N (2 &leq; N &leq; 103) and K (1 &leq; K &leq; 103) respectively representing the number of elfs living in Christmas Village and the local currency rate charged by each wire passing above the house of an leprechaun. It follows, then, N lines containing two integers X and Y (-104 &leq; X, Y  &leq; 104) each, representing the coordinates of an elf's house in the city. All the houses in Vila Natalina are in integers coordinates and the dimensions of the houses can be ignored.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Christmas Village\",\n    \"output\": \"\\t\\t\\t\\tThe output is made up of one line per test case containing the amount paid by the elfss to the leprechauns in the local currency.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tIt's Christmas Eve, and it's almost time for the sled to leave. Everything is already in Santa's sack and the reindeer in position, there is only one thing left: decide which helpers will work with Noel this year. Yes, contrary to popular belief, the good old man does not do everything himself. He always takes with him a group of elves on his round the world in one night.\\n\\n\\t\\t\\t\\tHowever, the elves must be chosen carefully, because their weight will directly affect the aerodynamics of the Sled. If it is very light it will swing very much during the flight and if it is very heavy it will tire the reindeers very early.\\n\\n\\t\\t\\t\\tAs it is in hurry Noel decided to make a try and chose a group of helpers. But the Reindeers soon accused them of being too light. Then Noel made a second attempt, chose another group. But again the Reindeers complained, however, stating that it was now too heavy. The good old man, who has an appointment time, became irritated and gave an ultimatum to his subordinates: \\\"That's enough! Choose K elves soon to go in such a way that the sled is neither too light nor too heavy! That is, the sum of the weights can not be less than that of the first group that I tried and neither greater than the second one.\\n\\n\\t\\t\\t\\tOf course the little ones despaired. Apart from the restriction of weights and now the number of Elves that have to be exact, they still have the fact that each Elf weighs twice as much or more than an Elf younger than him. Which obviously only complicates everything.\\n\\n\\t\\t\\t\\tKnowing that all Elves are of different ages can you help these little ones tell how many ways they can choose a group to go with Santa respecting all the requirements?\\n\\n\\n\\t\\t\\t\",\n    \"id\": 2726,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the entry contains an integer T that represents the number of test cases. Then there are T test cases. The first line of a test case contains two integers N (1 &leq; N &leq; 50) and K (1 &leq; K &leq; 50) respectively representing the total number of Elves and the determined number of Elves to be boarded on the sled. The second line of a test case contains N integers Pi (1 &leq; Pi &leq; 1018) representing the weight in mg of the Elves. The third and last line of a test case contains two integers A and B (0 &leq; A &leq; B &leq; 1019) representing respectively the weight of the lighter group tested and the weight of the heaviest group tested. Both in mg.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Full Sleigh\",\n    \"output\": \"\\t\\t\\t\\tThe output is composed of one line per test case containing an integer representing the number of ways to choose a group according to requirements.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Juliane Alves, UFRGS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tJoana likes to play pretending to be a secret agent with her friends Bruna, Jaqueline and Laura. Joana and Bruna have created a secret code to communicate without their enemies discovering their plans. The secret code works as follows:\\n\\n\\n\\tThe letter 'a' is represented by a single dot '.'\\n\\tThe letter 'b' is represented by two dots '..'\\n\\tThe letter 'c' is represented by three dots '...'\\n\\tThe other letters follow the previous logic, however each set of points is separated by a space and always with a set of more points, as in the example below:\\n\\n\\n.\\u00a0\\u2192\\u00a0a\\n..\\u00a0\\u2192 b\\n\\n...\\u00a0\\u2192 c\\n\\n. .\\u00a0\\u2192 d\\n\\n.. ..\\u00a0\\u2192\\u00a0e\\n... ...\\u00a0\\u2192 f\\n\\n. . .\\u00a0\\u2192\\u00a0g\\n.. .. ..\\u00a0\\u2192\\u00a0h\\n... ... ...\\u00a0\\u2192 i\\n\\nYour goal is to create a program that decipher the secret messages and help Jaqueline and Laura find out what Joana and Bruna are planning.\\n\\t\\t\\t\",\n    \"id\": 2727,\n    \"input\": \"\\t\\t\\t\\tThe input contains several test cases. The first line of each test should contain an integer (N\\u00a0\\u2264 50), which represents the number of letters to be deciphered and the next N lines contain the code for each letter.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Secret Code\",\n    \"output\": \"\\t\\t\\t\\tA string represented by the letter of the alphabet corresponding to the input code. Each string must be separated from the other by a new line.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ana Paula da Silva Mendes, UFPI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tGrace Murray Hopper, also known as \\\"COBOL Grandma\\\", was a Systems Analyst and US Navy Admiral in the 1940s and 1950s. Grace created the Flow-Matic programming language that served as the foundation for the creation of COBOL, in addition, she also participated in the creation of the first COBOL compiler. Also known to have been the creator of the term BUG occasionally when she discovered a problem in its computer and realized that it was a dead insect in the valve, since at that time the computers were formed by valves. Since then the term BUG has been used for errors. Grace Hopper is one of the most important women in the history of female participation in computing, taking her name at one of the most important conferences, Grace Hopper Celebration of Women in Computing.\\nIn this problem are given five words in each test line separated by hyphen. For each line the word 'GRACE HOPPER' will be printed if the letters that form the word COBOL are found in the beginning or end of each word in order. If it does not find, the word 'BUG' will be printed.\\n\\t\\t\\t\",\n    \"id\": 2728,\n    \"input\": \"\\t\\t\\t\\tThe entry contains several test cases. Each test case consists of a single line containing 1 to 50 characters, consisting of lower case and upper case letters ('a' - 'z', 'A' - 'Z') and hyphens ('-'), with no spaces.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Grace Hopper, Grandma of Cobol\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print the corresponding word.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Michele Selivon, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tValentina is a very dedicated woman and she works late every day. To save her time, she writes down the items at the same time she remembers. She uses a mobile app for this task.\\n\\n\\t\\t\\t\\tThe problem is that the application does not delete duplicate items and as Valentina is distracted, she frequently notes the same item more than once and the list gets too long. You should improve the app used by Valentina. Make a code that excludes duplicate items from the shopping list and sorts them in alphabetical order.\\n\\t\\t\\t\",\n    \"id\": 2729,\n    \"input\": \"\\t\\t\\t\\tThe first input line contains an integer N (N < 100) that indicates the number of test cases that follows. Each shopping list consists of a single line that contains from 1 to 1000 items or words composed only of lowercase letters (from one up to 20 chars), without accents and separated by a space.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Shopping List\",\n    \"output\": \"\\t\\t\\t\\tThe output consist of N lines, each representing one of Valentina's shopping lists, with no items repeated and sorted in alphabetical order.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Marianne Linhares, UFCG  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tMaria Luisa loves math, she just won two sets of integers: set A\\u00a0and set B, both sets have the same number of elements. She's playing a game where she creates pairs using elements from these sets.\\n\\nBut this game was not so fun as she thought, to make this interesting Maria Luisa defined a concept of a paired pair. A pair is paired if the greatest common divisor of the integers from the pair is\\u00a01. For instance: (2, 4) is not a paired pair, but (3, 5) is a paired pair.\\n\\nMaria Luisa wants your help to know how many paired pairs there are such that one pair is composed of an element of\\u00a0A\\u00a0and an element of B. Two pairs (p1, p2) and (p3, p4) are equal if p1 = p3 and p2 = p4.\\n\\nHere's a complete example:\\n\\nA = {3, 2}\\nB = {2, 5}\\n\\nThe answer is: 6 and all the possible paired pairs are:\\n(3, 2)\\n(2, 3)\\n(3, 5)\\n(5, 3)\\n(2, 5)\\n(5, 2).\\n\\n\\t\\t\\t\",\n    \"id\": 2730,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several lines. The first line contains an integer\\u00a0N (1 \\u2264 N \\u2264 200) representing the number of elements\\u00a0in the sets. The second line contains\\u00a0N\\u00a0positive integers that belong to\\u00a0A\\u00a0and the third line contains\\u00a0N\\u00a0positive integers that belong to\\u00a0B.\\n\\t\\t\\t\\tN=0 ends the input. All numbers are 32 bits integers.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Paired Pairs\",\n    \"output\": \"\\t\\t\\t\\tThe number of different paired pairs that can be obtained using a number from A\\u00a0and a number from B.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Jessica Dagostini, URI Online Judge  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tValentina will start a new challenge this year: she will give programming classes! She is really excited about this new activity, once programming is one of her biggest passions. These classes will happen at afternoons, in schools of many cities of her region and she has to go to these cities by car.\\n\\nAs Valentina is in the 3\\u00ba year of Computer Science course, she needs to go back to her city in time to go to the univerisity. The classes that she will teach end at 5:30 p.m. and her college classes start at 7:30 p.m, giving her 2 hours to come back to her city and go to her college classes.\\n\\nOnce that she is really smart and organized, Valentina collected information about the average travel time, in minutes, between the cities that she has to go to teach. She wrote a list with this information and enumerated the cities with numbers from 1 to D, where city number 1 is her city. The average time collected is bidirectional, that is, if from city 1 to city 2 the average travel time is 20 minutes, to go from city 2 to city 1 the time is the same.\\n\\nNoting that she is really busy with the organization of her classes, you offered your help to build a program that discover the faster way to she goes and comes back to her destiny and if she will come back to her city in time to her college classes, or if she will be late. You know that exist at least one road that leads to each city and there's just one faster way to her travel.\\n\\t\\t\\t\",\n    \"id\": 2731,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test cases. The first line of each test contains two integers C (1 \\u2264 C \\u2264 15) and E (1 \\u2264 E \\u2264 225), indicating the number of cities and roads. The following E lines have three integers C1, C2  and T, identifying the average travel time T  between the cities C1, C2. In the end, an integer D identifies the city that Valentina needs to go to teach. A line with \\\"0 0\\\" ends the input.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Trip Programming\",\n    \"output\": \"\\t\\t\\t\\tIf the travel time is less than 2 hours, you need to print \\\"Will not be late. Travel time - M - best way - C1 C... CN\\\", where M is the time travel and CN are the cities that made the best sequence. Otherwise, you need to print \\\"It will be L minutes late. Travel time - M - best way -  C1 C... CN\\\", where L is the minutes of Valentina will be late.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Paola Salvador, PUCRS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tAlice moved\\u00a0 to a city that is known for its many castles, she is exploring the town and wants to visit as many as possible castles. In order to this adventure become real, Alice created some rules, the visiting can start at any castle (C) of the town, although she cannot cross any river after she alredy started visiting, even that the river is under a bridge (P). Also, Alice's rule does not consider diagonals movements, so she can only move north, south, east or west. You must help Alice find out the max quantity of castles she will be able to visit.\\n\\t\\t\\t\",\n    \"id\": 2732,\n    \"input\": \"\\t\\t\\t\\tFirst line contains two integers\\u00a0(H\\u00a0\\u2264\\u00a0400 and\\u00a0L\\u00a0\\u2264\\u00a0400), that represent height (H) and width (L) of the city and the following lines contain the city map,\\u00a0where C represents a castle area, P an bridge and R a river separated by spaces. Each test case ends with a blank line.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Alice's Kingdom\",\n    \"output\": \"\\t\\t\\t\\tAn integer that represents the max visits Alice can make in one day.\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Valeska Uch\\u00f4a, UFPI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tCarla owns a vast collection of books containing 100 copies. She spends a lot of time in college so she likes to leave some of them in her closet. However, the closet has room for only 4 books, one compartment for each one.\\n\\nShe is very organized person, therefore she keeps track of every time she wants to read a book. The books stored in her locker are chosen as follows: when Carla wants to read a book that is not in her locker, she brings it the next day and puts it in the place of the least recently read book. Each book has an associated ID that is a number from 1 to 100.\\n\\nGiven a sequence of books read, her algorithm must determine the number of times Carla wanted to read a book that was not in her locker.\\n\\t\\t\\t\",\n    \"id\": 2733,\n    \"input\": \"\\t\\t\\t\\tThe first line is an integer N representing the number of book Carla wants do read. The next N lines are integers L1, L2, ..., LN \\\\((1 \\\\leq L_i \\\\leq 100)\\\\) representing the IDs of the books Carla wanted to read. Input finishes when an EOF is found.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Reader's Locker\",\n    \"output\": \"\\t\\t\\t\\tOutputs an integer representing the number of times Carla wanted to read a book that was not in her locker.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Leticia Maia, UFCG  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tHermione recently noticed that, even though her children always got the same N number of christmas presents, her daughter Rose always gets a lot dolls and make-up for while her son Hugo got all sorts of games. She thought that was unfair, so she did the following: she gave each present a \\u201cfun score\\u201d, and decided would switch some of Rose\\u2019s presents with Hugo\\u2019s presents in order to make the sum of fun scores for each child as similar as possible. Given the fun score for each present, calculate what is the smallest difference of total fun score that she can achieve, given that she can make any number of trades, but the number of presents for each child should remain the same.\\n\\t\\t\\t\",\n    \"id\": 2734,\n    \"input\": \"\\t\\t\\t\\tThe first line of input is an integer T ( T < 100 ) that indicates the number of test cases. Each case starts with a line containing one integers N (0 \\u2264 N \\u2264 100 ). The next line gives the fun score Ri(1 \\u2264 Ri\\u2264 100 ) of the Rose\\u2019s N presents. The next line gives the fun score Hi(1 \\u2264 Hi\\u2264 100 ) \\u00a0of the Hugo\\u2019s N presents.\\n\\n\\\\(\\\\displaystyle\\\\sum_{i=1}^{N}H_i + R_i <= 1000\\\\)\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Trading Presents\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a line with a single integer representing the minimum possible difference between the total fun score for Hugo and Rose\\u2019s presents, after the trades were made.\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Giovanna Kobus Conrado, USP  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tNina got\\u00a0N distinct\\u00a0numbers from 0 to N-1 for Christmas. She realized that those numbers can be used to form a permutation: an array of size\\u00a0N\\u00a0in which all\\u00a0numbers from 0 to N-1 appears once. She then remembered that she had kept a very special permutation of size N\\u00a0in her drawer, and she could use it to play with her new blocks. She came up with the following game:\\n\\nAt day 0, she will arrange the numbers in such a way that 0 is the fist one, 1 the second, and so on, until N-1, forming the array\\u00a0\\u00a0V0. At day x, she will arrange the numbers to form the array\\u00a0Vx, in which\\u00a0Vx\\u00a0[ i ] = Vx-1\\u00a0[ P [ i ] ], P being Nina's special permutation.\\n\\nHer sister Nani got really jealous and decided to question Nina's knowledge about her permutation with questions of the following type: given two numbers\\u00a0J\\u00a0e\\u00a0K, what is the smallest number\\u00a0Y\\u00a0such that\\u00a0VY [ ( J + K ) % N ] = J\\u00a0?\\n\\nHelp Nina with her sister's questions.\\n\\t\\t\\t\",\n    \"id\": 2735,\n    \"input\": \"\\t\\t\\t\\tThe first line of input contains the number\\u00a0t\\u00a0(t=10) of test cases.\\n\\nEach case starts with a line containing a number\\u00a0N\\u00a0(0<=N<=105): the number of blocks Nina got for Christmas.\\u00a0N\\u00a0distinct integers ranging from 0 to N-1 follow.\\n\\nThe next line will contain an integer\\u00a0Q\\u00a0(1<=Q<=105): the number of questions Nani will ask, followed by\\u00a0Q\\u00a0lines, each containing two integers J\\u00a0and K\\u00a0(0<=J,K<N).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Nina's Gift\",\n    \"output\": \"\\t\\t\\t\\tFor each question, print the answer. If it does not exist, print -1.\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Giovana Delfino, USP  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tIn a galaxy far far away there is a different and diversified kingdom called Avalon. A peculiar custom in Avalon is the way their residents deal with numbers. Depending of the month m and year y\\u00a0that they are currently in, the avalonians don't accept numbers that contain the sequence of digits\\u00a0m or the sequence of digits y\\u00a0among their numbers, for example, if\\u00a0m = 3 and y = 12\\u00a0avalonians don't accept 3 or 12 or 123 or 736 or 5128 but they do accept 102.\\n\\nAmanda and Krista are the queens of Avalon and their biggest concern is to keep the kingdom safe and free of invaders. Some time ago they found out that there is a prophecy that maps the name of\\u00a0the invaders to the amount of soldiers needed to defeat them. Since this prophecy is very important, the queens didn't measure efforts to find it and after a countless number of\\u00a0expeditions they finally did. Unfortunately\\u00a0there is a problem, the prophecy was written by a resident from Earth\\u00a0and therefore it doesn't follow the numerical system of Avalon.\\n\\nThe queens are desperate and hired you to make a program that given the current month m\\u00a0and year\\u00a0y\\u00a0and the number\\u00a0n\\u00a0found\\u00a0in the prophecy your job is to convert\\u00a0n\\u00a0to the numerical scale of month m and year\\u00a0y, that is, calculate the n-th number of the numerical scale of month m and year y. For instance, if\\u00a0y = 12, m = 3\\u00a0and\\u00a0n = 13\\u00a0then the transformed number is 16, because the first 13 numbers of the avalonian scale are 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16.\\n\\t\\t\\t\",\n    \"id\": 2736,\n    \"input\": \"\\t\\t\\t\\tEach test case contains a single line with 3 integers\\u00a0n (1 <= n <= 1018), m(1 <= m <= 9) and y (10 <= y <= 99), corresponding to the number found in the prophecy and the current month and year in Avalon, respectively.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Avalon Numbers\",\n    \"output\": \"\\t\\t\\t\\tFor each test case print a single number indicating\\u00a0n-th number of the numerical system in month m and year\\u00a0y.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour programming teacher would like to make a screen with the following characteristics:\\n\\n\\n\\tHave 39 dashes (-) on the first line;\\n\\tHave a | below the first dash and the thirty-ninth dash of the first line, fill in the middle with whitespace;\\n\\tRepeat procedure 2 plus four times;\\n\\tRepeat procedure 1.\\n\\n\\nAt the end should look like the following image:\\n\\n \\n--------------------------------------- (39 tra\\u00e7os)\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n--------------------------------------- (39 tra\\u00e7os)\\n\\n\\t\\t\\t\",\n    \"id\": 2747,\n    \"input\": \"\\t\\t\\t\\tThere is no.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Output 1\",\n    \"output\": \"\\t\\t\\t\\tThe output will be printed as shown above.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a screen with the following characteristics:\\n\\n\\n\\tHave 39 dashes (-) on the first line;\\n\\tHave a | underneath the first dash and the thirty-ninth dash of the first line, below the dash should begin to write the word \\\"Roberto\\\" and the rest fill in the middle with white space;\\n\\tHave a | below the first dash and the thirty-ninth dash of the first line, fill in the middle with whitespace;\\n\\tHave a | below the first dash and the thirty-ninth dash of the first line, below the 10 dash you should begin to type the number \\\"5786\\\" and the rest fill in the middle with whitespace;\\n\\tRepeat procedure 3;\\n\\tHave a | underneath the first dash and the thirty-ninth dash of the first line, below the dash 10 should begin to write the word \\\"UNIFEI\\\" and the rest fill in the middle with white space;\\n\\tRepeat procedure 1.\\n\\n\\nAt the end should look like the following image:\\n\\n \\n --------------------------------------- (39 traces)\\n |\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0Roberto\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n |\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n |\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 5786\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n |\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n |\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0UNIFEI\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n --------------------------------------- (39 traces)\\n\\n\\t\\t\\t\",\n    \"id\": 2748,\n    \"input\": \"\\t\\t\\t\\tThere is not.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Output 2\",\n    \"output\": \"\\t\\t\\t\\tThe output will be printed as shown above.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a screen with the following characteristics:\\n\\n\\n\\tHave 39 dashes (-) on the first line;\\n\\tHave a | underneath the first dash and the thirty-ninth dash of the first line, below the 2nd dash you should start typing \\\"x = 35\\\" and the rest fill in with whitespace;\\n\\tHave a | below the first dash and the thirty-ninth dash of the first line, fill in the middle with whitespace;\\n\\tHave a | below the first dash and the thirty-ninth dash of the first line, below the 17th dash you should start typing \\\"x = 35\\\" and the rest fill in with whitespace;\\n\\tRepeat procedure 3;\\n\\tHave a | under the first dash and the thirty-ninth dash of the first line, under the 33rd dash you should start typing \\\"x = 35\\\" and the rest fill in the middle with whitespace;\\n\\tRepeat procedure 1.\\n\\n\\nAt the end should look like the following image:\\n\\n \\n--------------------------------------- (39 tra\\u00e7os)\\n|x = 35                               |\\n|                                     |\\n|                x = 35               |\\n|                                     |\\n|                               x = 35|\\n--------------------------------------- (39 tra\\u00e7os)\\n\\n\\t\\t\\t\",\n    \"id\": 2749,\n    \"input\": \"\\t\\t\\t\\tThere is not.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Output 3\",\n    \"output\": \"\\t\\t\\t\\tThe output will be printed as shown above.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like you to do a program with the following characteristics:\\n\\n\\n\\tCreate 16 integer variables;\\n\\tAssign them values \\u200b\\u200bfrom 0 to 15 to each of the previous variables;\\n\\tHave 39 dashes (-) on the first line;\\n\\tHave a | under the first dash, thirteenth, twenty-third and the thirty-ninth dash of the first line, below the 4th dash should begin to write \\\"decimal\\\", under the 16th dash should begin to write \\\"octal\\\", under the 26th dash should begin write \\\"Hexadecimal\\\" and the rest fill in with whitespace;\\n\\tRepeat procedure 1;\\n\\tHave a | under the first dash, the thirteenth, the twenty-third and the thirty-ninth dash of the first line, below the 8th dash should print the value of the first variable in decimal value, below the 18th dash should print the value of the first variable in octal value, underneath of the 31st dash must print the value of the first variable in hexadecimal value and the rest fill in with whitespace;\\n\\tRepeat procedure 6 for the other 15 variables;\\n\\tRepeat procedure 1.\\n\\n\\nAt the end should look like the following image:\\n\\n \\n--------------------------------------- (39 tra\\u00e7os)\\n|\\u00a0decimal\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0octal\\u00a0\\u00a0|\\u00a0\\u00a0Hexadecimal\\u00a0\\u00a0|\\n---------------------------------------\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a00\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a00\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a00\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a01\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a01\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a01\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a02\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a02\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a02\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a03\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a03\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a03\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a04\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a04\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a04\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a05\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a05\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a05\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a06\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a06\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a06\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a07\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a07\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a07\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a08\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a010\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a08\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a09\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a011\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a09\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a010\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a012\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0A\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a011\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a013\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0B\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a012\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a014\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0C\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a013\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a015\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0D\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a014\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a016\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0E\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a015\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a017\\u00a0\\u00a0\\u00a0\\u00a0|\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0F\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0|\\n--------------------------------------- (39 tra\\u00e7os)\\n\\n\\t\\t\\t\",\n    \"id\": 2750,\n    \"input\": \"\\t\\t\\t\\tThere is not.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Output 4\",\n    \"output\": \"\\t\\t\\t\\tThe output will print as shown above.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like you to do a program with the following characteristics:\\n\\n\\n\\tCreate two integer variables a and b and two real variables of simple precision c and d;\\n\\tAssign the variable a to the value 15 and assign the variable b to the value of a divided by 2;\\n\\tAssign the variable c to the value 15.456 and assign the variable d to the value of c divided by 7;\\n\\tShow in the first line the phrase: \\\"Valores de b:\\\";\\n\\tShow in the following line the same amount of character in the sentence \\\"Valores de b:\\\", only with dash (-);\\n\\tShow in the next line the phrase \\\"1) b =\\\", and the value of the variable b;\\n\\tShow in the next line the phrase \\\"2) b =\\\", and the value of the variable b using 20 space and justified to the right;\\n\\tShow in the next line the phrase \\\"3) b =\\\", and the value of the variable b using 20 space filled with 0;\\n\\tShow in the next line the phrase \\\"4) b =\\\", and the value of the variable b using 20 space and justified to the left;\\n\\tShow in the next line the phrase \\\"5) b =\\\", and the value of the variable b followed by the character '%';\\n\\tSkip a line;\\n\\tShow the following line in the sentence: \\\"Valores de d:\\\";\\n\\tShow in the following line the same amount of character in the sentence \\\"Valores de d:\\\", only with dash (-);\\n\\tShow in the next line the phrase \\\"1) d =\\\", and the value of the variable d;\\n\\tShow in the next line the phrase \\\"2) d =\\\", and the value of variable d only with its integer part;\\n\\tShow in the next line the phrase \\\"3) d =\\\", and the value of variable d with a decimal place;\\n\\tShow in the next line the phrase \\\"4) d =\\\", and the value of variable d with two decimal places;\\n\\tShow in the next line the phrase \\\"5) d =\\\", and the value of variable d with three decimal places;\\n\\tShow on the next line the phrase \\\"6) d =\\\", and the value of variable d with three decimal places and placed in 20 space;\\n\\tShow in the next line the phrase \\\"7) d =\\\", and the value of the variable d with three decimal places and placed in 20 space with 0 in the white space;\\n\\tRepeat procedure 19 with justification on the left;\\n\\tShow in the next line the phrase \\\"9) d =\\\", and the value of variable d with two decimal places followed by the character '%'.\\n\\n\\t\\t\\t\",\n    \"id\": 2751,\n    \"input\": \"\\t\\t\\t\\tThere is not.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Output 5\",\n    \"output\": \"\\t\\t\\t\\tThe result of your program should be written according to the output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like you to do a program with the following characteristics:\\r\\n\\r\\n\\r\\n\\tCreate a variable to store 50 characters;\\r\\n\\tAssign the variable before the phrase: \\\"AMO FAZER EXERCICIO NO URI\\\";\\r\\n\\tShow in the first line the <character, the value stored in the variable with the format \\\"% s\\\" and the character>;\\r\\n\\tShow in the next line the character <, the value stored in the variable with the format \\\"% 30s\\\" and the character>;\\r\\n\\tShow in the next line the <, the value stored in the variable with the format \\\"% .20s\\\" and the character>;\\r\\n\\tShow in the following line the <character, the value stored in the variable with the format \\\"% -20s\\\" and the character>;\\r\\n\\tShow in the next line the <character, the value stored in the variable with the format \\\"% -30s\\\" and the character>;\\r\\n\\tShow in the next line the <character, the value stored in the variable with the format \\\"% .30s\\\" and the character>;\\r\\n\\tShow in the next line the <character, the value stored in the variable with the format \\\"% 30.20s\\\" and the character>;\\r\\n\\tShow in the next line the <character, the value stored in the variable with the format \\\"% -30.20s\\\" and the character>;\\r\\n\\n\\t\\t\\t\",\n    \"id\": 2752,\n    \"input\": \"\\t\\t\\t\\tThere is not.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Output 6\",\n    \"output\": \"\\t\\t\\t\\tThe result of your program should be written according to the output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like you to do a program with the following characteristics:\\n\\n\\n\\tCreate twenty-six integers;\\n\\tAssign the first variable the value 97;\\n\\tAssign the other variables to the value of the first sum of a unit;\\n\\tShow on the screen the numeric values of the first variable, a space in arm, the character 'e', another white space and its alphanumeric value (characters);\\n\\tRepeat for all other variables.\\n\\n\\t\\t\\t\",\n    \"id\": 2753,\n    \"input\": \"\\t\\t\\t\\tThere is not.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Output 7\",\n    \"output\": \"\\t\\t\\t\\tThe result of your program should be the same as the output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like you to do a program with the following characteristics:\\n\\n\\n\\tCreate two real double-precision variables;\\n\\tAssign the first the value 234.345 and the second the value 45.698;\\n\\tPrint the two variables to six decimal places;\\n\\tPrint the two variables with no decimal places;\\n\\tPrint the two variables with a decimal;\\n\\tPrint the two variables with two decimal places;\\n\\tPrint the two variables with three decimal places;\\n\\tPrint the two variables with scientific notation with 'e';\\n\\tPrint the two variables with scientific notation with 'E';\\n\\tPrint the two variables with use the shortest representation, with 'e' or 'E' or without;\\n\\tPrint the two variables with use the shortest representation, with 'e' or 'E' or without;\\n\\n\\nTo print, separate the values with a space, a dash (-), and a space.\\n\\t\\t\\t\",\n    \"id\": 2754,\n    \"input\": \"\\t\\t\\t\\tThere is not.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Output 8\",\n    \"output\": \"\\t\\t\\t\\tThe result of your program should be written according to the output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour programming teacher would like you to do a program with the following characteristics:\\n\\n\\n\\tShow the following sentence on the screen: \\\"Ro'b'er to \\\\ /\\\" (Between r and t has 8 blank spaces);\\n\\tShow the following sentence on the screen: (._.) ( l: ) ( .-. ) ( :l ) (._.);\\n\\tShow the following sentence on the screen: (^_-) (-_-) (-_^);\\n\\tShow the following sentence on the screen: (\\\"_\\\") ('.');\\n\\n\\t\\t\\t\",\n    \"id\": 2755,\n    \"input\": \"\\t\\t\\t\\tThere is not.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Output 9\",\n    \"output\": \"\\t\\t\\t\\tThe result of your program should be written according to the output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour programming teacher would like you to do a program with the following characteristics:\\n\\n\\n\\tPut seven blanks and put the 'A' character;\\n\\tPut six blanks and place the character 'B', a space and the character 'B';\\n\\tPut five blanks and place the 'C' character, three white space, and the 'C' character;\\n\\tPut four blanks and place the 'D' character, five white space, and the 'D' character;\\n\\tPut three blanks and put the 'E' character, seven white space and the 'E' character;\\n\\tRepeat procedure 4;\\n\\tRepeat procedure 3;\\n\\tRepeat procedure 2;\\n\\tRepeat procedure 1.\\n\\n\\t\\t\\t\",\n    \"id\": 2756,\n    \"input\": \"\\t\\t\\t\\tThere is not.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Output 10\",\n    \"output\": \"\\t\\t\\t\\tThe result of your program should be written according to the output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like you to do a program with the following characteristics:\\n\\n\\n\\tCreate three variables to store whole numbers;\\n\\tRead the first number, which can be a value in the range of: -10000 \\u2264 A \\u2264 10000;\\n\\tRead the second number, which can be a value in the range of: 0 \\u2264 B \\u2264 99;\\n\\tRead the third number, which can be a value in the range of: 0 \\u2264 C \\u2264 999;\\n\\tPrint the letter A, a space, the equals sign, a blank, the number stored in the first variable, a comma, a blank, the letter B, a blank, the equal sign, a blank, the number stored in the second variable, a comma, a blank, the letter C, a blank, the equal sign, a blank, the number stored in the third variable. Do not forget to skip line;\\n\\tRepeat procedure 5, putting the number in a 10-digit spacing and justified to the right;\\n\\tRepeat procedure 5, putting the number in a 10-digit spacing and filled with zeros;\\n\\tRepeat procedure 5 by placing the number in a 10-digit spacing and justified to the left.\\n\\n\\t\\t\\t\",\n    \"id\": 2757,\n    \"input\": \"\\t\\t\\t\\tThe entry consists of several test files. Each test file has three rows. In the first line has an integer A (-10000 \\u2264 A \\u2264 10000). In the second line has an integer B (0 \\u2264 B \\u2264 99). In the third line has an integer C (0 \\u2264 C \\u2264 999). As shown in the following input samples.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Input and Output of Integers\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the entry, you have an output file. The output file has four rows as described in item 5. As shown in the following output samples.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a program with the following characteristics:\\n\\n\\n\\tCreate two variables to store real numbers of simple precision;\\n\\tCreate two variables to store double precision real numbers;\\n\\tRead the first simple precision number that will always have a decimal;\\n\\tRead the second simple precision number that will always have two decimal places;\\n\\tRead the first double precision number that will always have three decimal places;\\n\\tRead the second double precision number that will always have four decimal places;\\n\\tPrint the letter A, a blank, the equals sign, a blank, the number stored in the first variable read in step 3, a comma, a blank, the letter B, a blank, the sign of equal, a space, the number stored in the second variable read in step 4. Do not forget to skip line;\\n\\tPrint the letter C, a blank, the equal sign, a blank, the number stored in the first variable read in step 5, a comma, a blank, the letter D, a blank, the sign of equal, a space, the number stored in the second variable read in step 6. Do not forget to skip line;\\n\\tRepeat procedure 7, printing the numbers with one decimal place;\\n\\tRepeat procedure 8, printing the numbers with one decimal place;\\n\\tRepeat procedure 7, printing the numbers to two decimal places;\\n\\tRepeat procedure 8, printing the numbers to two decimal places;\\n\\tRepeat procedure 7, printing the numbers to three decimal places;\\n\\tRepeat procedure 8, printing the numbers to three decimal places;\\n\\tRepeat procedure 7, printing the numbers to three decimal places and in the form of scientific notation with the character E;\\n\\tRepeat procedure 8, printing the numbers to three decimal places and in the form of scientific notation with the character E;\\n\\tRepeat procedure 7, printing only the whole part of the number;\\n\\tRepeat procedure 8, printing only the entire part of the number.\\n\\n\\t\\t\\t\",\n    \"id\": 2758,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test files. Each test file has two rows. In the first line there are two real numbers A and B (-1000.0 \\u2264 A, B \\u2264 1000.0), separated by white space. In the second line there are two real numbers C and D (-1000.0 \\u2264 C, D \\u2264 1000.0), separated by white space. As shown in the following input example.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Floating Number Input and Output\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the input, you have an output file. The output file has twelve rows as described in item 7 and 8. As shown in the following output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a program with the following characteristics:\\n\\n\\n\\tCreate 3 variables to store a single character;\\n\\tRead a character value for the first variable;\\n\\tRead a character value for the second variable;\\n\\tRead a character value for the third variable;\\n\\tPrint the letter A, a space, the equals sign, a blank, the character stored in the first variable read in step 2, a comma, a blank, the letter B, a blank, the sign equal to one blank, the character stored in the second variable read in step 3, the letter C, a blank, the equal sign, a blank, the character stored in the third variable read in step 4. No forget to skip line;\\n\\tPrint the letter A, a space, the equals sign, a blank, the character stored in the first variable read in step 3, a comma, a blank, the letter B, a blank, the sign equal to one blank, the character stored in the second variable read in step 4, the letter C, a blank, the equal sign, a blank, the character stored in the third variable read in step 2. No forget to skip line;\\n\\tPrint the letter A, a blank, the equals sign, a blank, the character stored in the first variable read in step 4, a comma, a blank, the letter B, a blank, the sign equal to one blank, the character stored in the second variable read in step 2, the letter C, a blank, the equal sign, a blank, the character stored in the third variable read in step 3. No Forget to skip line.\\n\\n\\t\\t\\t\",\n    \"id\": 2759,\n    \"input\": \"\\t\\t\\t\\tThe entry consists of several test files. Each test file has three rows. In the first line has a variable A that stores a character value. The second line has a variable B that stores a character value. The third line has a variable C that stores a character value. As shown in the following input example.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Input and Output Character\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the entry, you have an output file. The output file has three rows as described in items 5, 6, and 7. As shown in the following output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a program with the following characteristics:\\n\\n\\n\\tCreate 3 variables to store a phrase of up to 100 characters;\\n\\tRead a sentence for the first variable;\\n\\tRead a sentence for the second variable;\\n\\tRead a sentence for the third variable;\\n\\tPrint the first variable read in step 2, the second variable read in step 3, the third variable read in step 4. Be sure to skip line;\\n\\tPrint the first variable read in step 3, the second variable read in step 4, the third variable read in step 2. Be sure to skip line;\\n\\tPrint the first variable you read in step 4, the second variable you read in step 2, the third variable you read in step 3. Be sure to skip line;\\n\\tRepeat procedure 5, printing only 10 characters of each variable.\\n\\n\\t\\t\\t\",\n    \"id\": 2760,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test files. Each test file has three rows. In the first line has a variable A that stores a phrase of up to 40 characters. In the second line has a variable B that stores a phrase of up to 40 characters. In the third line has a variable C that stores a phrase of up to 40 characters. As shown in the following input example.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"String Input and Output\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the input, you have an output file. The output file has four rows as described in items 5, 6, 7, and 8. As shown in the following output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a program with the following characteristics:\\n\\n\\n\\tCreate an integer variable;\\n\\tCreate a real variable of simple precision;\\n\\tCreate a variable that stores a character;\\n\\tCreate a variable that stores a phrase of max 50 characters;\\n\\tRead all variables in the order of the created form;\\n\\tPrint out all variables as read;\\n\\tPrint the variables, separating them by tabulation (8 spaces), in the order they were read;\\n\\tPrint the variables with exactly 10 spaces.\\n\\n\\t\\t\\t\",\n    \"id\": 2761,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test files. In each test file there is one line. The line has a variable A that stores an integer, a variable B that stores a real number, a variable C with a character, and a variable D that stores a phrase with a maximum of 50 characters. As shown in the following input example.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Input and Output of Various Types\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the input, you have an output file. The output file has three lines as described in items 6, 7, and 8. As shown in the following output example. Print the floating-point values \\u200b\\u200bto 6 decimal places after the comma.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a program with the following characteristics:\\n\\n\\n\\tRead a number in the format: XXXXX.YYY;\\n\\tPrint the number in inverted form: YYY.XXXXX.\\n\\n\\t\\t\\t\",\n    \"id\": 2762,\n    \"input\": \"\\t\\t\\t\\tThe inpuut consists of several test files. In each test file there is one line. The line has a real number with 3 decimal places. As shown in the following input example.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Input and Output 6\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the input, you have an output file. The output file has a line as described in items 2. As shown in the following output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a program with the following characteristics:\\n\\n\\n\\tRead the data of a CPF in the format XXX.YYY.ZZZ-DD;\\n\\tPrint the four numbers, one value per line.\\n\\n\\t\\t\\t\",\n    \"id\": 2763,\n    \"input\": \"\\t\\t\\t\\tThe entry consists of several test files. In each test file there is one line. The line has the following format XXX.YYY.ZZZ-DD, where XXX, YYY, ZZZ, DD are integers. As shown in the following input example.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"CPF Input and Output\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the entry, you have an output file. The output file has four rows with an integer in each of them as it has been entered. As shown in the following output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a program with the following characteristics:\\n\\n\\n\\tRead a date in the DD/MM/YY format;\\n\\tPrint the date in MM/DD/YY format;\\n\\tPrint the date in the YY/MM/DD format ;\\n\\tPrint the date in DD-MM-YY format.\\n\\n\\t\\t\\t\",\n    \"id\": 2764,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test files. In each test file there is one line. The line has the following DD/MM/YY format where DD, MM and YY are integers. As shown in the following input example.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Date Input and Output\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the entry, you have an output file. The output file has three lines according to procedures 2, 3, and 4. As shown in the following output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a program with the following characteristics:\\n\\n\\n\\tRead a sentence that will have a comma in the middle of the text;\\n\\tPrint the first part of the sentence;\\n\\tPrint the second part of the sentence.\\n\\n\\t\\t\\t\",\n    \"id\": 2765,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test files. In each test file there is one line. The line has a phrase with a maximum of 100 characters (may have white space) and a comma. As shown in the following input example.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Coming Input and Output\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the entry, you have an output file. The output file has two lines according to steps 2 and 3. As shown in the following output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Roberto A. Costa Jr, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour teacher would like to make a program with the following characteristics:\\n\\n\\n\\tRead 10 names, with no space;\\n\\tPrint the third name from the list;\\n\\tPrint the seventh name from the list;\\n\\tPrint the ninth name from the list.\\n\\n\\t\\t\\t\",\n    \"id\": 2766,\n    \"input\": \"\\t\\t\\t\\tThe entry consists of several test files. Each test file has ten lines. Each line has a name of at most 30 characters and no space. As shown in the following input example.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Input and Output Reading and Skipping Names\",\n    \"output\": \"\\t\\t\\t\\tFor each file in the entry, you have an output file. The output file has three lines according to procedures 2, 3, and 4. As shown in the following output example.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Yuri Cardoso Santamarina, UFU  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tJo\\u00e3ozinho is organizing his birthday party with N men and M women, and he wants to know the number of good pairs that can be formed with his guests. A pair is good when it is composed of a man and a woman and the sum of the heights of the two persons is multiple of K. The same person can be part of more than one pair.\\n\\t\\t\\t\",\n    \"id\": 2767,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases and ends with EOF.\\nThe first line of a test case contains the integers N, M and K (\\\\(1 \\\\leq N, M, K \\\\leq 10^5\\\\)). The second line contains N integers Ai, representing the height of the N men invited. The third and last line of the input contains M integers Bi representing the height of the invited women. (\\\\(1 \\\\leq Ai, Bi \\\\leq 10^5\\\\)).\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Party\",\n    \"output\": \"\\t\\t\\t\\tThe output should contain one integer for each test case, indicating the number of good pairs that can be formed.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tDabriel just won a gift graph and wants to perform some operations on it, however as it is too busy decided to ask for your help. You should answer several queries of type U, V, K, where you should print the smallest path from U to V, if any, where vertices visited, excluding U and V, must be less than or equal to K.\\n\\t\\t\\t\",\n    \"id\": 2768,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line will have 2 integers N, M (1 \\u2264 N \\u2264 100, 1 \\u2264 M \\u2264 N * (N-1) / 2). In the next M lines will have 3 integers U, V, W (1 \\u2264 U, V \\u2264 N, 0 \\u2264 W \\u2264 2 * 10\\u00b3), indicating that the vertex U has a bidirectional connection with the vertex V with a cost of W. The next line will have a integer Q (1 \\u2264 Q \\u2264 10\\u2075). In the next Q lines will have a query U, V, K (1 \\u2264 U, V, K \\u2264 N).\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Dabriel's Graph\",\n    \"output\": \"\\t\\t\\t\\tFor each query you should print the lowest cost following the restrictions of the text. If there is no answer, print -1.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Andr\\u00e9 Fillipi, INATEL  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tWith the spread of Industry 4.0's concepts and the development of Internet of Things, now it's simple to keep up with all the parts of a product's prodution in a assembly line. Having those informations, it is possible to optimize the production and reduce the time spent to have everything done.\\n\\nAn industry has the following production scheme:\\n\\n\\n\\nKnowing the time spent in each station, and the time required to swich between the assembly lines, calculate the least time spent to produce a single item.\\n\\t\\t\\t\",\n    \"id\": 2769,\n    \"input\": \"\\t\\t\\t\\tThe input has multiples cases (EOF).\\u00a0The first line has an integer\\u00a0N, the number of steps of the production. The second line has two integers\\u00a0e1\\u00a0and\\u00a0e2, the time spent to enter in each of the assembly lines. The next line has\\u00a0N\\u00a0values,\\u00a0a11,\\u00a0a12, ...,\\u00a0a1n, representing the time spent to execute the ith\\u00a0step on line 1. The next line has also\\u00a0N\\u00a0valores,\\u00a0a21,\\u00a0a22, ...,\\u00a0a2n\\u00a0representing the time spent to execute the ith\\u00a0step on line 2. The next two lines have\\u00a0N-1\\u00a0integers\\u00a0 representing the time to switch from line 1 to line 2,\\u00a0t11,\\u00a0t12, ...,\\u00a0t1n-1\\u00a0and from line 2 to line 1,\\u00a0\\u00a0t21,\\u00a0t22, ...,\\u00a0t2n-1, respectively. Finally, two more integers\\u00a0x1\\u00a0and\\u00a0x2\\u00a0representing the time to exit from each assembly line.\\n\\nConsider that number of steps per test case will be between 1 and 1000 and the other values \\u200b\\u200bbetween 0 and 105.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Assembly Line\",\n    \"output\": \"\\t\\t\\t\\tThe output shows the least time spent in the production.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Jo\\u00e3o Gustavo Rogel de Oliveira, INATEL  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThere is a traditional industry in Brazil that produces musical equipment. Currently they are totally immersed with the era of Industry 4.0 and their main action is the creation of pedals of effects for guitar, that there are in an incredible diversity, each for a type of customer. This industry has implemented a system\\u00a0in which his client creates his own pedal through a 3D prototype and interactive, including with sounds, simulating the actual pedal. Therefore, after the client generates his model, the same one is sent to the company, where it will be manufactured.\\n\\nTo be fabricated, the pedal circuit is printed on a PCB(printed circuit board) which has a certain size. But with the creativity of the customers, the plates are taking unimaginable dimensions, this fact makes the plate available in the company does not serve. Since you are an excellent programmer and music lover, it is up to you to create a program in which given the dimensions of the client circuit and the size of the board available, tell whether or not you can use that board.\\n\\t\\t\\t\",\n    \"id\": 2770,\n    \"input\": \"\\t\\t\\t\\tThe first line of each test case consists of three integers\\u00a0X, Y, M (M\\u2264105) representing respectively the company board dimensions and the number of requests. For each of the next M lines will be provided two integers Xi and Yi representing the client's PCB\\u00a0dimensions.\\n\\nDimensions are guaranteed to be integer values greater than 0 and less or equal than 64.\\n\\nThe input ends with EOF.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Board Size\",\n    \"output\": \"\\t\\t\\t\\tFor each circuit determine whether it is possible to use the company's PCB\\u00a0or not.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Yuri Cardoso Santamarina, UFU  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tJo\\u00e3ozinho is finishing his first semester in college and in one of the subjects he will decide his grade, based on the notes of the N tests he did during the semester. The final grade of a student is based on the arithmetic average of 3 different notes. But Jo\\u00e3ozinho is not worried about what the highest final grade is, but what K-th highest final grade can be obtained. It is guaranteed that there is a K-th note and remember, it is possible to have more than one final note with the same value and they must be considered different.\\n\\u00a0\\n\\t\\t\\t\",\n    \"id\": 2771,\n    \"input\": \"\\t\\t\\t\\tThe input contains no more than 10 test cases and ends with EOF.\\nThe first line of a test case contains two integers\\u00a0N\\u00a0and\\u00a0K (\\\\(3 \\\\leq N \\\\leq 100\\\\), \\\\(1 \\\\leq K \\\\leq  (N * (N - 1) * (N - 2))/6\\\\)).\\nThe second line contains N integers\\u00a0Ai (\\\\(1 \\\\leq Ai \\\\leq 10^5\\\\)) representing the grade obtained in the i-th test.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Average\",\n    \"output\": \"\\t\\t\\t\\tThe output must contain a floating-point number formatted to one decimal place.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gustavo Policarpo, INATEL  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tAndr\\u00e9 Jo\\u00e3o is a great cultivator of plants of a great city of the interior of the great Brazil. It currently has a nursery with N plants of a very peculiar species that dies when completing T consecutive days without care.\\n\\nHowever, Andr\\u00e9 has noticed that many plants have died lately, and suspect that his employee is the reason for this. So he asked his servant to write down what was done in K days so that Jo\\u00e3o could blame your servant for the death of his plants.\\n\\nSince Andre's plot is very large, he asked you to develop a program that, given the initial amount of plants, how long the species survives, and the intervals your employee took care of each day, tells you the plants that have remained live at the end of this period.\\n\\nJo\\u00e3o ensures that all plants were cared for on day 0 and therefore are alive! And the employee ensures that he started working on day 1 and never missed a day of service!\\n\\t\\t\\t\",\n    \"id\": 2772,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test cases. The first line consists of the integers N, K, T (1 <= N, K, T <= 105). The next K lines will contain two integers l, r (1 <= l <= r <= N) meaning that the employee handled all plants in the interval [l, r] on that day.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Plantation\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, your program should print an integer representing the number of plants that remained alive at the end of the period, followed by their indices in ascending order. Remember, if a plant ever died, it will never come back to life;\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Yuri Cardoso Santamarina, UFU  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tJo\\u00e3ozinho likes to attend classes and wants to spend as little time as possible on the way from his home to the place of his class. It is known that he walks at a speed of V meters per second and that there is a vacant lot between his house and his school that can not be used to cut way. Knowing this, what is the least time, in seconds, for Jo\\u00e3ozinho to complete the journey? Consider the situation in the 2D plane, where Jo\\u00e3ozinhos's house is at the point (Xi, Yi), the school at point (Xf, Yf), the lower left point on the terrain at point (X1, Y1), and the upper right at point (Xr, Yr). The terrain has its sides parallel to the X and Y axes and it is guaranteed that Xi < Xl, Xr < Xf, Yl \\\\(\\\\leq\\\\)\\u00a0Yi, Yf \\\\(\\\\leq\\\\)\\u00a0Yr, that is, Jo\\u00e3ozinho's house is to the left of the terrain, the school to the right, and Jo\\u00e3ozinho will need to get around part of the land to get to school.\\n\\t\\t\\t\",\n    \"id\": 2773,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases and ends with EOF.\\nThe first line of a case contains 5 integers Xi, Yi, Xf, Yf and V representing the coordinates of Jo\\u00e3ozinho's house and his school and Jo\\u00e3ozinho's speed in meters per second.\\nThe second line also contains 4 integers Xi, Yi, Xr and Yr, representing the lower left corner of the terrain and the upper right corner. (\\\\(0 \\\\leq Xi, Yi \\\\leq 10^6\\\\), \\\\(1 \\\\leq V \\\\leq 10^2\\\\)).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Shortest Path\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a floating-point formatted with one decimal place, representing the least time for Jo\\u00e3ozinho to get to his school without going into the terrain. Jo\\u00e3ozinho can walk on the edge of the terrain.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Adriene Magalh\\u00e3es, INATEL  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe teacher is teaching you about sensors. This is a very important element in many applications. To better understand the concepts of precision, the teacher asked to perform a practical assembly of the Thermo Ind v4.0 sensor in the new Automation laboratory.\\n\\nAs a good student you wrote down the formula for calculating the accuracy of a sensor:\\n\\n\\\\(\\\\sigma\\\\;=\\\\;\\\\sqrt{\\\\frac{\\\\sum_1^{QT}\\\\left(\\\\;X_i-\\\\overline X\\\\;\\\\right)^2}{QT-1}}\\\\)\\n\\nWhere QT is the number of times the test was performed, \\\\(X\\\\)\\u00a0the value measured in each test and \\\\(\\\\overline X\\\\)\\u00a0the mean of the values.\\n\\nTo perform the test you have been doing H hours testing, and every M minutes you have checked the X value of the temperature delivered by the sensor.\\n\\nNow that you have the measurements, and as you have the ability to program, make a program that delivers sensor accuracy.\\n\\t\\t\\t\",\n    \"id\": 2774,\n    \"input\": \"\\t\\t\\t\\tThere are several test cases, each case consisting of two lines. The first one contains two values H and M. The second consists of the floating point values Xi\\u00a0indicating the value of each sensor measurement.\\n\\nIt is guaranteed that there will be at least 5 and at most 105\\u00a0measures per case and that these values are in the interval [0, 255] with two decimal places.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Sensor Accuracy\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print a single line with a number indicating the sensor's accuracy. The calculated value must be displayed with 5 digits after the decimal point.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Jo\\u00e3o Gustavo Rogel de Oliveira, INATEL  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tA car assembler allows users to create their own vehicle designs the way they want and still share that information with other users in order to create a diverse network of users. The process begins with the customer developing his own model through a software, soon after completion, the project data are stored and according to the availability of the assembler are being carried out.\\n\\nBut a failure to deliver parts to the automaker is delaying orders. It turns out that the parts are delivered in packages, labeled with a number, that should be ordered in an increasing order for the production to begin. The failure is that the packages are being delivered in a random manner. You should create a program in which given the order of delivery of the packages and the time that each of them takes to be changed of position, calculate the total time to organize the packages. It is known that for the purpose of organization within the company, packages should be changed from position only two to two and if they are side by side.\\n\\t\\t\\t\",\n    \"id\": 2775,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test cases, read up to EOF. For each case, the first value of the input is an integer N (1\\u00a0<= N <= 1000) representing the number of packets, soon after there will be two lines with N integers each, with the numbers of the packets, in the order of delivery, and the time that the nth packet takes to be replaced, respectively.\\n\\nIt is guaranteed that the packet numbers for each test case form a permutation of integers from 1 to N, and that no packet takes more than one minute\\u00a0to move.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Preparing Production\",\n    \"output\": \"\\t\\t\\t\\tYour program should present, for each test case, a single integer representing the total time to organize the packages.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\tFarcos is a beginner programmer at graduation and does not like college parties much, since he never really enjoys the music and the night euphoria. So he decided to use his skills and spend his time at these parties earning some money by selling canned drinks, with the help of Dabriel, who lent him the necessary amount to buy his initial stock. On the condition that Farcos sold absolutely all the cans he bought.\\n\\n\\t\\t\\t\\t\\tIn order to increase his sales during the party, the programmer thought of some offers like \\\"A can of soda for 4 R$, but two for 6 R$\\\" and with his mathematical abilities he calculated exactly which of these offers to make and how many sales of that type so that by the end of the night, and consequently of the event, he had fulfilled the requirements of his guarantor and still have the highest profit possible using only these offers.\\n\\n\\t\\t\\t\\t\\tYour task is, given the offers that Farcos thought and the amount of beverage cans he bought to sell, to calculate how much he collected at the end of the night.\\n\\t\\t\\t\\t\",\n    \"id\": 2776,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is composed of several test cases. The first line of a test case contains two integers N (1 \\u2264 N \\u2264 1000) and M (1 \\u2264 M \\u2264 2000) respectively representing the number of types of offers that Farcos thought and the quantity of cans he has to sell . Then there are N rows referring to the offers, each containing two integers Q (1 \\u2264 Q \\u2264 100) and V (1 \\u2264 V \\u2264 1000) specifying that Q beverage can be bought for V R$. The input ends with EOF.\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Promotions\",\n    \"output\": \"\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tDabriel just invented a new game that works as follows: He thinks of an integer N and must find the number of maximals* subsets that exist using the numbers from 1 to N so that if the number i is chosen for the set, neither i-1 nor i+1\\u00a0can appear. For small values Dabriel knows the answer, but with large numbers this task gets very difficult. Can you help him?\\n\\nFor N = 5 the valid sets are: {1,3,5}, {2,4}, {2,5}, {1,4}.\\n\\t\\t\\t\",\n    \"id\": 2777,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. Each case contains an integer N (1 \\u2264 N \\u2264 1018).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Dabriel's Subsets\",\n    \"output\": \"\\t\\t\\t\\tFor each test case print the number of existing sets. Since this number can be very large, print only the rest of the division by 109+7.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tDabriel loves to create quirky games with her incredible matrices. The last game created ended up having a much higher complexity than the others and as he is very busy with the college, he asked for your help to develop a program capable of saying the answer of the game. It consists of a matrix N by M, where it is desired to leave the position (1,1) and reach the position (N,M) and each cell has a value and this value is increased in the total cost of the path for every visited cell. Your task is to find the cost of the smallest path. However, as it is about Dabriel the game is not so simple, some rules were imposed:\\n\\n\\n\\tBeing in a cell (i,j) we can only go to the cells (i+1,j), (i,j+1) or (i,j-1);\\n\\tNo cell can be visited more than once;\\n\\tIt is not allowed to go through more than X cells with null values;\\n\\tIt is not allowed to go through more than Y cells with negative values;\\n\\n\\nDabriel knows that with so many rules can exist cases where there is no such path, so he will be satisfied if you print \\\"Impossivel\\\" for such cases. But one thing Dabriel can assure you: the cell (N,M) will always have a value greater than zero.\\n\\t\\t\\t\",\n    \"id\": 2778,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line will have 4 integers N, M, X, Y (1 \\u2264 N, M \\u2264 100, 0 \\u2264 X, Y \\u2264 20). In the next N lines will have M\\u00a0integers Xij (-100 \\u2264 Xij \\u2264 100), representing the values of the cells of the matrix.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Dabriel's Matrix\",\n    \"output\": \"\\t\\t\\t\\tFor each test case print the smallest path as described in the text, in cases where there is no response, print \\\"Impossivel\\\", without quotation marks.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy  OBI  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIn Soccer World Cup year, the official album of cards is always a great success among children and also among adults. For those who do not know, the album contains spaces numbered from 1 to N to paste the cards; each sticker, also numbered from 1 to N, is a small photo of a player from one of the selections that will play the World Cup. The goal is to paste all the cards in the respective spaces in the album, in order to complete the album (that is, leave no space without the corresponding sticker).\\n\\nThe cards are sold in sealed envelopes, so the buyer does not know which cards he is buying, and it may happen that he has bought a card he has already pasted on the album.\\n\\nTo help users, the company that sells the album and stickers wants to create an application that allows them to easily manage the missing pieces to complete the album and is asking for their help.\\n\\nGiven the total number of spaces and stickers in the album, and a list of already purchased cards (which may contain repeated cards), your task is to determine how many cards are missing to complete the album.\\n\\t\\t\\t\",\n    \"id\": 2779,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer (1 \\u2264 N \\u2264 100), on total stickers and spaces in the album. The second line contains an integer M (1 \\u2264 M \\u2264 300) from the number of stickers already purchased. Each of the M\\u00farias closed the entire X (1 \\u2264 X \\u2264 N), indicating a card already bought.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Album of the Cup\",\n    \"output\": \"\\t\\t\\t\\tYour program should produce a single line containing an integer representing the number of missing cards to complete the album.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy  OBI  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"The OIBR organization, the International Robot Basketball Olympiad, is starting to have problems with two teams: the Bit Warriors and the Byte Bulls. It's just that the robots on these teams hit almost every pitch from any position on the court! Come to think of it, the basketball game would be awkward if players could hit any pitch, right? One of the measures that the OIBR is implementing is a new score for the launches, according to the distance from the robot to the beginning of the court. The court is 2000 centimeters long, as in figure.\\n\\nGiven the distance D of the robot to the beginning of the court, where the basket is, the rule is as follows:\\n\\n\\u2022 If D \\u2264 800, the basket is worth 1 point;\\n\\n\\u2022 If 800 < D \\u2264 1400, the basket is worth 2 points;\\n\\n\\u2022 If 1400 < D \\u2264 2000, the basket is worth 3 points. The OIBR organization needs help to automate the game's scoreboard. Given the value of distance D, you must write a program to calculate the number of launch points.\\n\\t\\t\\t\",\n    \"id\": 2780,\n    \"input\": \"\\t\\t\\t\\tThe first and only line of the input contains an integer D (0 \\u2264 D \\u2264 2000) indicating the distance of the robots to the start of the block, in centimeters, at launch.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Robot Basketball\",\n    \"output\": \"\\t\\t\\t\\tYour program should produce a single line, containing an integer, 1, 2, or 3, indicating the launch season.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy  OBI  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIn a city, many people lend money to other people. The thing has reached such a point that there are people who are both debtor and creditor. People then resolved to pay their debts and each issued the checks to pay their debts. For example, in figure (a), person C issued a check of 5 monies to person A, and person D issued a check of 3 monies to person C. That is, person C received from person D and paid person A. Even worse, there is a vicious cycle in which person D issued a check of 3 monies to person C, who in turn issued a check of 2 monies to person B, which in turn issued a check of 1 cash for person D. The situation shown in item (a) of the Figure below is described through a check list, with four triples of the form (X, V, Y), to indicate that X issued a check of V monies for Y. In the same Figure, in item (b), the situation is described with a list of only three checks.\\n\\t\\t\\t\\t\\nHowever, since two lists are equivalent: the balance in a person's bank account is the same on both check lists. In both cases, once all checks have been cleared, a person with a termination of 5 or more accounts in your account, a person terminated in your account, a person with a limit of 4 monies less in your account and the account D person will end up with 2 monies for less in your account.\\n\\nWe will then define equivalence of check lists issued: two check lists are equivalent if at the end of the process of clearing all checks the following holds for each person: his bank balance at the end of the clearing of a list is the same as the bank balance of the person at the end of the compensation of the other list. The total of compensated values \\u200b\\u200bin item (a) of the figure is equal to 11 monies whereas in item (b) the total is only 6 monies! This problem has two subtasks:\\n\\n\\u2022 Subtask A: Determine, given a checklist, whether or not it is possible to decrease the total of cleared values \\u200b\\u200busing another equivalent checklist.\\n\\n\\u2022 Subtask B: Determine the minimum total of cleared values \\u200b\\u200bin an equivalent checklist.\\n\\nYou should write a program that solves only Subtask A or solves both subtasks. You should write a program that solves only Subtask A or solves both subtasks.\\n\\t\\t\\t\",\n    \"id\": 2781,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers, M (1 \\u2264 M \\u2264 10\\u2076) and N (2 \\u2264 N \\u2264 10\\u00b3), where M is the number of checks issued and N is the number of inhabitants of the city. The inhabitants are identified by integers from 1 to N. Each of the following M lines describes a check from the list and contains three integers X (1 \\u2264 X \\u2264 N), V (1 \\u2264 V \\u2264 10\\u00b2) and Y (1 \\u2264 Y \\u2264 N, Y! = X) which indicates that X issued a check of V monies in favor of Y. There may be more than one check from X to Y. It is also possible that there are checks from X to Y and from Y to X, but not from X to X.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Compensation Camera\",\n    \"output\": \"\\t\\t\\t\\tYour program should produce two lines on the output. The first line describes the response to Subtask A and should contain a single character. The character must be S to indicate that it is possible to decrease the total of cleared checks with an equivalent check list, or N to indicate that it is not possible to decrease the total of cleared checks.\\n\\nIf your program also resolves Subtask B, the second line describes the response to this subtask and must contain an integer, the minimum value of the total cleared checks, in an equivalent list. If your program does not resolve Subtask B, you can leave the line blank or put an arbitrary integer value.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy  OBI  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"We say that a sequence of numbers is a stepladder, if the difference between consecutive numbers is always the same. For example, \\\"2, 3, 4, 5\\\" and \\\"10, 7, 4\\\" are stepladder. Note that any sequence with only one or two numbers is also a stepladder! In this problem we are looking for stepladder in a larger sequence of numbers. Given a sequence of numbers, we want to determine how many ladders there are. But we're only interested in stepladder as long as possible. Therefore, if one stepladder is a piece of another, we consider only the largest. For example, in the sequence \\\"1, 1, 3, 5, 4, 8, 12\\\" we have 4 different steps: \\\"1, 1, 1\\\", \\\"1, 3, 5\\\", \\\"5, 4\\\" 4, 8, 12 \\\".\\n\\t\\t\\t\",\n    \"id\": 2782,\n    \"input\": \"\\t\\n\\nThe first line of the grid contains an integer (1 \\u2264 N \\u2264 1000) that defines the size of the sequence of numbers. The second line contains N integers defining the sequence. The value of the sequence numbers is between -106 and 106 inclusive.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Stepladder\",\n    \"output\": \"Print a line containing an integer representing how many stepladders there are in the sequence.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy  OBI  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\tIn Soccer World Cup year, the official album of cards is always a great success among children and also among adults. For those who do not know, the album contains spaces numbered from 1 to N to paste the cards; each sticker, also numbered from 1 to N, is a small photo of a player from one of the selections that will play the World Cup. The goal is to paste all the cards in the respective spaces in the album, in order to complete the album (that is, leave no space without the corresponding sticker).\\n\\t\\n\\tSome stickers are stamped and are rarer, harder to get. The stickers are sold in closed envelopes, so the buyer is not buying the stickers he is buying, and may happen to buy a sticker that has already pasted on the album.\\n\\n\\tTo help users, the company that sells the album and stickers wants to create an application that allows them to easily manage the missing pieces to complete the album and is asking for their help.\\n\\n\\tGiven the total number of spaces and stickers in the album (N), the list of stamped cards and a list of already purchased cards (which may contain repeated stickers), your task is to determine how many stamped stickers are missing to complete the album.\\n\\t\\t\\t\",\n    \"id\": 2783,\n    \"input\": \"The first line contains three integers N (1 \\u2264 N \\u2264 100), C (1 \\u2264 C \\u2264 N / 2) and M (1 \\u2264 M \\u2264 300) respectively indicating the number of cards (and spaces) of the album, the number of stamps stamped on the album and the number of cards already purchased. The second line contains C distinct integers Xi indicating the stamps stamped on the album. The third line contains M integers Yi (1 \\u2264 Xi, Yi \\u2264 N) indicating the cards already purchased.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Cup Stickers\",\n    \"output\": \"Your program should to produce an integer representing the number of the sitckers stamped that are missing to complete the album\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy  OBI  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe residents of the Western Brazilian Islands (IBO) are assiduous players of the latest online game, Wizards and Warriors. So competitive have become the Wizards and Warriors at the IBO that the game developer decided to install on one of the islands a server dedicated only to IBO players.\\n\\n\\t\\t\\t\\tHowever, the company knows that if players think the new server is unfair, they will stop playing Wizards and Warriors, generating countless losses. To evaluate whether the new server is fair, players will compare the performance of the game on the island that has the fastest connection and the performance on the island that has the slowest connection to the new server. If the difference in performance is too great, the residents of the furthest island will feel wronged and will leave the game.\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\tThe IBO internet connection works via a fiber optic cable system. Pairs of islands are connected by cables, and each cable takes a certain time (called ping) to communicate information between the two parts. When two islands communicate through a series of cables (hence through intermediate islands), the ping between them is the sum of the pings of each cable in the path. The IBO network was implemented by great programmers and therefore a pair of islands always communicates through the path with the least possible ping.\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\tGiven the configuration of the IBO network and the island where the company wants to install the new server, determine the difference between the pings of the island with the lowest and highest pings to the server.\\n\\t\\t\\t\",\n    \"id\": 2784,\n    \"input\": \"\\t\\t\\t\\t\\n\\t\\t\\t\\tThe first line contains N (2 \\u2264 N \\u2264 1000) and M (N - 1 \\u2264 M \\u2264 105), the number of islands and the number of fiber optic cables, respectively. The islands are numbered from 1 to N. Each of the following M lines contains three integers Ui (1 \\u2264 Ui \\u2264 N), Vi (1 \\u2264 Vi \\u2264 N) and Pi (1 \\u2264 Pi \\u2264 1000) and describes a cable between Ii and Vi islands with Pi-ping (note that cables transmit information in both directions). Finally, the last line contains an integer S (1 \\u2264 S \\u2264 N), the island number on which the server will be installed.\\n\\n\\t\\t\\t\\tEach pair of islands is connected by at most one fiber optic cable, and no cable connects an island to itself. It is guaranteed that any island can communicate with any other via some fiber optic cable path.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Islands\",\n    \"output\": \"\\t\\t\\t\\tYour program should produce an integer representing the difference between the ping of the island with the highest ping to the server, and the one of the island with the lowest ping to the server. Note that the island on which the server is located is not considered in the lowest ping calculation.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy  OBI  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIn the deposit of the factory, leaning against a wall, there is a matrix of N lines by N columns of stacked boxes. Each box has an associated positive integer weight. The factory inspector needs to remove some boxes from the matrix so as to leave a kind of box pyramid satisfying the following restrictions:\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tIf a box is in the pyramid, the box just below it should also be in the pyramid;\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tIn the i-th line of boxes (line 1 is that of the top of the matrix), the pyramid must have exactly i consecutive boxes.\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tGiven the weights of all boxes in the matrix, your program must calculate the minimum total weight a pyramid might have if the inspector pulls out some boxes according to the above restrictions.\\n\\t\\t\\t\",\n    \"id\": 2785,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the input contains an integer N (1 \\u2264 N \\u2264 100), indicating the dimension of the matrix. The next N lines each contain N integers representing the weights of the boxes in each row of the array of boxes.\\n\\n\\t\\t\\t\\t\\tThe values \\u200b\\u200bof the array elements are between 1 and 100, inclusive.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Pyramid\",\n    \"output\": \"\\t\\t\\t\\tYour program must to produce an unique line, containing an integer, indicating the total weight that the pyramid might have.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy OBI  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe school intends to change the floor of a classroom and the principal took the opportunity to pass on a task to the students. The room has the shape of a rectangle of width L meters and length C meters, where L and C are integers. The principal needs to buy ceramic tiles to cover the entire floor of the room. It would be easy to calculate how many tiles would be needed if each tile were a 1 meter square. The problem is that the small flagstone that the director wants to buy is a square that is 1 meter diagonal, not sideways. In addition, she wants to fill the floor of the room with the diagonals of the tiles lined up at the sides of the room, as in the figure.\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tThe store will supply tiles of type 1: whole; of type 2, which are of the half of type 1, cut along the diagonal; and type 3 slabs, which correspond to the half of type 2. See the three types of slabs in the figure.\\n\\n\\t\\t\\t\\tIt is very clear that 4 type 3 tiles are always needed for the corners of the room. The assignment that a principal passed to the students is the number of types 1 and 2 awards that are needed. In the figure, for L = 3 and C = 5, 23 of type 1 and 12 of type 2 were required. His program needs to compute, given the values \\u200b\\u200bof L and C, the quantity of type 1 and type 2 tiles.\\n\\t\\t\\t\",\n    \"id\": 2786,\n    \"input\": \"\\t\\t\\tThe first initial line contains an integer L (1 \\u2264 L \\u2264 100) indicating the width of the room. A second line contains an integer C (1 \\u2264 C \\u2264 100) representing the length of the room.\\t\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"School Floor\",\n    \"output\": \"\\t\\t\\t\\tPrint two lines on the output. The first must contain an integer, representing the number of tiles of type 1 required. The second must contain an integer, indicating the number of tiles of type 2.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy OBI  Brasil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\nIn the chessboard, the square of the board on line 1, column 1 (upper left corner) is always white and the colors of the houses alternate between white and black, according to the pattern known as ... chess! In this way, since the traditional board has eight rows and eight columns, the house on row 8, column 8 (lower right corner) will also be white. In this problem, however, we want to know the color of the square of the board in the lower right corner of a tray with any dimensions: L rows and C columns. In the example of the figure, for L = 6 and C = 9, the square of the board in the lower right corner will be black!\\n\\n\\t\\t\\t\",\n    \"id\": 2787,\n    \"input\": \"\\t\\t\\n\\nThe first line of the input contains an integer L (1 \\u2264 L \\u2264 1000) indicating the number of lines in the chessboard. The second line of the input contains an integer C (1 \\u2264 C \\u2264 1000) representing the number of columns.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Chess\",\n    \"output\": \"Print a line on the output. The line should contain an integer, representing the color of the house in the lower right corner of the board: 1, if it is white; and 0, if it is black.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Poesia  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tIn a Number Theory class, Professor Gina was showing some properties of multiples of a number. She announced to the students that she would write on the board a multiple of 823. But in a sudden moment of distraction as she pondered the consequences of Burnside's lemma, she wrote the number 234, which was actually the amount of dimensions of the problem in which she thought about the previous dawn.\\n\\nImpatient, the students began to laugh. \\\"But teacher, 234 is not a multiple of 823! \\\"Said the smartest of the class, after using a calculating machine to verify this complex relationship between these two positive integers.\\n\\nBut Gina is a mathematician prepared for everything. Without thinking much, she replied: I have not finished writing yet. ''Then, he added a digit 1 to the left of the 234 and a digit 5 \\u200b\\u200bon the right. Now yes, 12345 is a multiple of 823. She then followed with her explanation.\\n\\nAlthough she did well, she would like to be better prepared for such situations. As ideas about random problems arise at any moment, she prefers to have a program to save her in similar situations and thus free her mind to attain mathematical nirvana in peace.\\n\\nHelp Ginny. Given two numbers N and M, say which is the smallest multiple of M which can be obtained by adding digits to the right and / or left of N. Note that you may need to add multiple digits, and that it is not allowed to add digits in the middle of N. Gina does not want to delete the number she has already written, just write more digits to make it multiple of M. Besides that, you may not need to type any additional digits.\\n\\t\\t\\t\",\n    \"id\": 2788,\n    \"input\": \"\\t\\t\\t\\tThe entry contains only one line with the two integers N\\u00a0and M, separated by space.\\n\\n1 \\u2264 N \\u2264 1012\\n\\n1 \\u2264 M \\u2264 2 \\u00d7 105\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Class\",\n    \"output\": \"\\t\\t\\t\\tWrite in the output a line containing a number: the smallest multiple of M that can be obtained by adding how many digits are needed to the right or left of N.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy D\\u00e2mi Henrique  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tMontes Claros, a city in the north of Minas Gerais, has been undergoing a major water crisis in recent times. Scarcity of water has affected the lives of many residents, making them put their homes up for sale at a price well below the market. Abbade, a major investor, sees this crisis moment as an investment opportunity and intends to buy several of these houses.\\n\\nThere are N houses in Montes Claros and M of them are for sale. A curious fact is that there is only one way between any pair of houses and it is possible, from any house, to reach all the others in the city.\\n\\nBecause of the crisis, Q-water trucks pass monthly through the city streets. The i-th of these trucks makes the way from a certain home Xi to another Yi home, leaving Li gallons of water in each house on its way.\\n\\nAbbade has D reais to invest in the purchase of houses. However, since he fears that the crisis will get worse and real estate will never be resold, he will buy the houses so that the sum of the amount of water received by the trucks in those houses is as large as possible. To decide which houses to buy, he asked for his help.\\n\\t\\t\\t\",\n    \"id\": 2789,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two N and D integers separated by space, representing the number of houses in the city and the money that Abbade owns for the purchase of the houses. Each house is identified by an integer between 1 and N. Follow N-1 lines. The i-th of them will contain two integers, Ai\\u00a0and Bi, meaning that there is a direct route\\nbetween these houses.\\n\\nThe next line will contain an integer M, indicating the number of homes that are for sale. Follow M lines. The i-th of them will contain two integers Ci and Vi, where Ci is the number of one of the houses and Vi its selling price. It is guaranteed that a house will not appear more than once.\\n\\nThe next line will contain an integer Q, indicating the number of water trucks that will pass through the city. Follow the Q lines. The i-th of these lines will contain three integers Xi, Yi and Li, indicating that the i-th truck will depart from house Xi to house Yi leaving Li liters of water in each of the houses along the way.\\n\\n1 \\u2264 N \\u2264 5 \\u00d7 103\\n\\n1 \\u2264 D \\u2264 103\\n\\n1 \\u2264 M \\u2264 N\\n\\n1 \\u2264 Vi \\u2264 100\\n\\n1 \\u2264 Q \\u2264 5 \\u00d7 105\\n\\n1 \\u2264 L \\u2264 103\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Water Crisis\",\n    \"output\": \"\\t\\t\\t\\tWrite in the output a line containing an integer: as much water as the houses Abbade will buy will receive, since he will buy houses in order to maximize that value.\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Luciano Ribeiro  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAfter long Dungeons & Dragons matches, Alice and her friends decided to do something else. Since Alice is very organized, at the time of saving the dice\\u00a0she would like to leave all the dices\\u00a0with the same value face up. But since she's also lazy, I'd like to do this with as few moves as possible.\\n\\nWith each move, it can rotate the dice to show one of the adjacent faces of the current face. Note that in this version of the game, Alice and her friends are using regular, six-sided dices, numbered 1 to 6, where the sum of two opposite faces always results in 7.\\n\\nHelp Alice determine the least amount of movement required so that all the dices faces the same side up.\\n\\t\\t\\t\",\n    \"id\": 2790,\n    \"input\": \"\\t\\t\\t\\tThe entrance is composed of two lines. In the first one we have an integer N, indicating the amount of dices. The second line contains N integers separated by space. The i-th of them, di, represents the face value that faces up.\\n\\n1 \\u2264 N \\u2264 105\\n\\n1 \\u2264 di \\u2264 6, for all 1 \\u2264 i \\u2264 N\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Dices\",\n    \"output\": \"\\t\\t\\t\\tDisplay an integer in a row, the least amount of movement required to leave all the dices the same\\u00a0face up.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Andr\\u00e9 da Cruz  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIt is said in the surroundings of Montes Claros that, long ago in the municipal market, Sebasti\\u00e3o and his companions of work always play a game of divination after the delivery of agricultural products harvested in the week that happened. The game, \\\"Guess Where the Bean\\u00a0is\\\", consists in hiding a grain of beans in one of four opaque glasses, and after shuffling them, the bettor must guess in which glass the vegetable is.\\n\\n \\n\\nThis year, due to the great cultural and historical success and the enormous amount of people who practice this game in the municipal market, the city council decided to hold a \\\"Guess Where the Bean is '' championship. However, she needs a program to show viewers where the beans were after the end of a game. Knowing that the next Programming Marathon will take place in the city, she soon commissioned a solution from the excellent programmers. In this way, you should assist the organization in this mission with a program that will inform, at the end of a match, where the beans were.\\n\\t\\t\\t\",\n    \"id\": 2791,\n    \"input\": \"\\t\\t\\t\\tThe entry will contain only one line with four integers, C1, C2, C3 and C4 separated by a space. The value Ci = 1 indicates that the beans were in cup number i, and Ci = 0 indicates that the ith cup was empty at the end of the game. There will always be exactly one glass with the beans.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Bean\",\n    \"output\": \"\\t\\t\\t\\tWrite in the output a line containing an integer between 1 and 4, corresponding to the position where the beans were.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Pablo Luiz  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Golnaldinho was a brilliant football player, having marked passages in all the teams in which he acted during his career, whether national as Gr\\u00eamio, Flamengo and Atl\\u00e9tico-MG, or international, such as Milan, PSG and Barcelona. His genius with the ball in his foot earned him several calls to represent the Brazilian National Team, as well as a legion of fans around the world. This year, in search of new challenges, Golnaldinho decided to retire the boots and venture into the world of computing.\\n\\n\\nThis news surprised several people who did not know the love of Golnaldinho by algorithms and data structures. Such love made the former player spend hours studying the subject while concentrating on football matches. During a press conference at which he announced his retirement, he himself stated that as he improved his programming skills, he was better at field performance.\\n\\n\\nDuring his studies, Golnaldinho found a book of computational problems and he was intrigued by a specific problem, because he could not solve it. Competitive as he is and knowing his programming skills, Golnaldinho challenged him to solve it.\\n\\n\\nThe statement of such a problem is as follows:\\n\\nSuppose an array with \\\\(\\\\displaystyle{N}\\\\) integers, where the i-th position of this array is occupied by the value \\\\(\\\\displaystyle{i}\\\\)hat is, position 1 is occupied by value 1, position 2 is occupied by value 2 and so on, as can be visualized in the figure below:\\n\\n\\n\\nKaka would like to remove all the numbers from this array. However, exclusions to be made must follow a specific order. Thinking about this, Kak\\u00e1 implemented a function that deletes a single element at a time, given the index of the element to be excluded. That is, if Kaka wants to delete element 2 in the array above, it would suffice to inform the index of the element, which in this case is equal to 2. As a result, the function would return the following array after performing the deletion:\\n\\n\\n\\nNow, if Kak\\u00e1 wanted to delete element 4 from the array, it would suffice to inform the index that in this case is equal to 3. The function would return:\\n\\n\\n\\nThis procedure is performed until there is no more element in the array.\\nKaka is having trouble automating calls to this function. This is because you could not implement a script that provides the order of indexes to be excluded, respecting the order of deletion of the elements. That is, if for an array with \\\\(\\\\displaystyle{N=5}\\\\) the order of deletion of the elements is {2,4,5,1,3}, the order of the indices will be {2,3,3,1,1}. Could you help with this implementation?\",\n    \"id\": 2792,\n    \"input\": \"\\t\\t\\t   \\nThe entry begins with a line containing an integer \\\\(N\\\\), indicating the number of elements in the array. The second entry line has \\\\(N\\\\) ntegers separated by space, indicating the order of deletion of the elements. It is guaranteed that, in the values of the second entry line, each of integers from \\\\(1\\\\) to \\\\(N\\\\) aappears exactly once.\\n\\n\\\\(1 \\\\leq N \\\\leq 5\\\\times10^5\\\\)\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Golnaldinho\",\n    \"output\": \"\\t\\t\\t   \\nWrite in the output a line with \\\\(N\\\\) integers separated by a space, which represent the order of the indexes to be excluded.\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Lucas Maciel  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\\"Men & Women\\\" is a clothing store in Montes Claros that Isabel leads. This store is very famous for having exactly the same number of men's and women's clothing. Very organized, Isabel wants to categorize her stock of clothes keeping the order in which they are stored.\\n\\n\\n\\nOrder in which clothes are stored. In this example we have MFFMFMFFMFMM where F denotes women's clothing and M men's clothing.\\n\\nIsabel still does not know how many categories she will need. She only decided two criteria:\\n\\n All categories will have the same number of men's and women's clothing.\\n   \\n The clothes are already hanging on a large hanger, and to minimize her work, she just wants to place divisions between the categories, without changing any local clothes.\\n \\n\\n\\n\\nIn the example of the figure, if Isabel uses 2 categories, she can either put the first four clothes in one category and the other eight in the second, put the first six clothes in one category and the last six in the second. Isabel may also prefer to use a category only (encompassing all clothing) or use 3 different categories (separating the clothes in MFFM, FM, FFMFMM), but note that it is not possible to separate into four or more categories keeping the same number of men's clothing and feminine in each.\\n\\n\\nHelp Isabel then define how many ways she can categorize her inventory without violating the company's tradition.\",\n    \"id\": 2793,\n    \"input\": \"The entry contains only one line with a sequence of letters indicating the type of clothing in Isabel's shop:  M indicates a masculine clothing and F feminine clothing.\\n\\n\\nThe entrance will contain between \\\\(2\\\\) and \\\\(10^7\\\\) clothes, and will always have the same number of men's and women's clothing.\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"HM\",\n    \"output\": \"Write in the output just one line containing an integer: the number of possible ways Isabel can categorize her stock.\\n\\n\\nSince the answer can be very large, write the its remainder by \\\\(10^9+7\\\\).\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Andr\\u00e9 Santos  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t   \\nRenato enjoys her balcony view enormously, where she can contemplate hers city mounts. It truly is a marvelous view, with its variety of mounts and its bountiful colors. He specially enjoys the lighter  ones, which are more distant.\\n\\n\\n\\n\\n\\nYours friends from other places say that not all mounts are light, and that some have dark vegetation ,but, as they are truly distant they seem light. They also say that this is related to the atmospheric perspective, an effect that make the distant mounts seem lighter than the close ones. Renato wants to show that in his city the mounts are truly lighter the more distant the are from his house, e to do so he noted the distance and the tonality of each one. Help him verify his affirmation.\",\n    \"id\": 2794,\n    \"input\": \"\\t\\t\\t   \\n\\nThe input consist of an integer \\\\(N\\\\) indicating the number of mounts. Each one of the following \\\\(N\\\\) lines contains two integers\\n\\\\(D_i\\\\) and \\\\(T_i\\\\) separated by a blank space and they represent respectively  the distance and tonality of the\\n\\\\(i\\\\)-sth monte. mount. The mounts are not given in any particular order. No mount posses the same distance or tonality.\\n\\n\\\\(1\\\\leq N \\\\leq 5\\\\times10^3\\\\)\\n\\\\(1 \\\\leq D_i \\\\leq 10^9\\\\)\\n\\\\(1 \\\\leq T_i \\\\leq 10^9\\\\)\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Lighter Mounts\",\n    \"output\": \"Print one line containing the letter S if the mounts follow the property that Renato enunciated or N if not.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Luciano Ribeiro  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Given a string of characters  \\\\(S\\\\), you were given the challenge of turning it into a palindrome. A palindrome is a text that is exactly the same if read from right to left as well as from left to right. For example,  racecar e radar are palindromes.\\n\\n\\nTo transform a text into a palindrome, you can choose a position \\\\(i\\\\) in the text and replace the letter in this position with any other letter. This operation has a cost that is the distance between the letter of the alphabet that was before and the one that you chose. Note that the alphabet is circular, so you can substitute  a for z\\nwith cost \\\\(1\\\\). You can apply this same operation as many times as you want, each time adding the cost as described.\\n\\n\\nBecause sometimes you need many modifications to transform an entire string into a palindrome, you have been allowed to divide the original string into up to  \\\\(K\\\\) contiguous segments, so that after each modification, each of those segments is a palindrome. This division has no cost. The total cost of the transformation you made will be the sum of the costs of the operations performed on each segment. What is the lowest possible cost for turning all segments into palindromes?\",\n    \"id\": 2795,\n    \"input\": \"The entry begins with a line containing two integers \\\\(N\\\\) and \\\\(K\\\\), separated by space. The second line contains a string \\\\(S\\\\) with \\\\(N\\\\) characters formed only by lower case letters of the alphabet, from a to z.\\n\\n\\\\(1 \\\\leq K \\\\leq N \\\\leq 400\\\\)\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Palindrome\",\n    \"output\": \"\\t\\t\\t   \\nWrite in the output a line containing an integer: the least cost to transform \\\\(S\\\\) into a palindrome, given you can partition it into up to \\\\(K\\\\) contiguous segments.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Lucas Maciel  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Isabel reformed her house in the Ibituruna neighborhood after the billing of her store increase. Now she wants to buy a large dinner table to celebrate. She wants the largest possible table that fits inside her new home. And guess who will accomplish this task for her?\\n\\n\\nDo not despair, Isabel provided everything for you to solve this task. She provided a houseplant informing which spaces are already occupied and therefore can not contain the table. In addition, she made a list of the length and width of various table options. Just find out which is the largest table that can be bought for Isabel to put in your house!\\n\\n\\nIsabel can rotate a table 90 degrees if she needs to.\",\n    \"id\": 2796,\n    \"input\": \"The entry begins with a line containing two integers \\\\(N\\\\) and \\\\(M\\\\) separated by space, which are the\\ndimensions of the houseplant. Then there are \\\\(N\\\\) rows containing \\\\(M\\\\) characters describing the plant. One character . (dot) represents an empty space, while the # character represents a filled space (wall or other mobile).\\n\\n\\nThe next line contains an integer \\\\(K\\\\) that represents the size of the list of table options Isabel can purchase. The next \\\\(K\\\\) lines each contain two integers \\\\(C_i\\\\) and \\\\(L_i\\\\) separated by space, representing the length and width of the \\\\(i\\\\)-sth table.\\n\\n\\\\(1 \\\\le N, M \\\\le 1000\\\\)\\n\\\\(1 \\\\le K \\\\le 10^6\\\\)\\n\\\\(1 \\\\le C_i \\\\le \\\\min(500, \\\\max(N, M))\\\\)\\n\\\\(1 \\\\le L_i \\\\le \\\\min(500, \\\\max(N, M))\\\\)\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Houseplant\",\n    \"output\": \"Write in the output a line containing two integers separated by space: the length and width of the table with the largest area that fits in Isabel's house. In the event of a tie, print the table with the largest width . It is guaranteed that there is always at least one table that fits in Isabel's house.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy D\\u00e2mi Henrique  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Applying a test is not as trivial of a task as some think. Many students try to cheat and it is difficult to observe everyone at the same time. Professor Bibika always makes two completely different types of tests, which she calls test type 1 and test type 2. Furthermore , she has used a technique to position the students so that the occurrence of cheating is minimized. Bibika applies tests in several different classrooms. Let's say that one of your rooms has \\\\(M\\\\) rows with \\\\(N\\\\) chairs each. The Bibika\\u2019s technique consists in guaranteeing two rules:\\n\\n\\n There can be no students in two consecutive rows.\\n \\n Based on trust in the class, Bibika chooses a $C$ number and requires that in each row, there are at least $C$ vacant places or with different types of tests between two students who have the same type of test.\\n \\n\\n\\n\\nAs it was difficult to check if the students were following the rules during all the tests, Bibika installed a camera in the ceiling of the room that takes a photo and sends to yours email. Your task is to take this picture, process it and tell Bibika if she can start the test or not. She can only start the test if all rules are being followed.\\n\\n\\n\\nSome examples of student organization where all irregularities are circulated.\\n\\nExample 1 has students in neighboring rows. Examples 2 and 3 have students with the same type of test and between them there are less than \\\\(C\\\\) vacant places and / or with students with different type of tests. Example 4 shows a valid configuration.\",\n    \"id\": 2797,\n    \"input\": \"\\t\\t\\t   \\nThe entry begins with a line containing three integers \\\\(N\\\\), \\\\(M\\\\) and \\\\(C\\\\) separated by space, being the dimensions of the classroom and the number of places that need to be vacant between two students with the same type of test.\\nAfter that, there will be \\\\(N\\\\) lines, each describing the students in a line of classroom chairs.\\nThe \\\\(i\\\\)sth of these lines will contain \\\\(M\\\\) integers describing  the type of test that the\\n tudent sitting in the \\\\(i\\\\)-sth chair in each row posses. The integer  \\\\(0\\\\) means that the chair is empty,\\\\(1\\\\) means that whoever is sitting there is doing type 1 and \\\\(2\\\\) means whoever is sitting there is doing the type 2 test.\\n\\n\\\\(2 \\\\leq N, M \\\\leq 1000\\\\)\\n\\\\(0 \\\\leq C \\\\leq N-1\\\\)\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Applying Tests\",\n    \"output\": \"\\t\\t\\t   \\nWrite in the output a line containing only one character, which should be S if all rules are being met and Bibika can proceed with the test or N otherwise.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Lucas Maciel e Guilherme Gomes  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAt 45 minutes of the second half, a problem had to be solved for the 2018 Programming Mineira Marathon. But it was not any problem, it was that problem. To touch terror in the hearts of competitors. Get the coaches to break their heads in their room trying to solve it. Well, after much work, the Marathon Committee has been able to work out such a problem, and the result is the one you are reading!\\n\\nEnough of coaxing and let's get down to business. You will receive a list of replacement rules that must be made in a text. Each rule consists of a letter and a corresponding string by which the letter should be replaced. After that, you will receive the string where the rules should be applied. Whenever you find in this string one of the characters that must be replaced according to the rules received, you must replace the character with its corresponding string until it is no longer possible to change the string by making substitutions of this type. If there is always a change to be made, you must advise that it is impossible to end the process.\\n\\t\\t\\t\",\n    \"id\": 2798,\n    \"input\": \"\\t\\t\\t\\tThe entry begins with a line containing an integer N: the number of substitution rules. The following N lines each describe a substitution rule. The i-th of these lines will contain a letter Li, followed by a space and a string Si by which the letter Li must be replaced.\\n\\nThe following line will contain a T number: the size of the text where substitution rules should be applied. The last line will contain a string S with this text.\\n\\n0 \\u2264 N \\u2264 26\\n\\n1 \\u2264 | Si | \\u2264 100\\n\\n1 \\u2264 T \\u2264 105\\n\\nAll input strings will contain only lowercase letters.\\n\\nThere will never be more than one substitution rule for the same letter.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Lero-Lero of Mineira\",\n    \"output\": \"\\t\\t\\t\\tWrite in the output a line containing a string that is the result of the successive application of the substitution rules given in the string S, or -1, if the string is changed indefinitely by applying the rules. It is guaranteed that if it is possible to get a string that can no longer be changed by the substitution rules, it will contain a maximum of 5 \\u00d7 106 letters.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tThere is a group of singers, residents of the northern region in Brazil, that are very famous by its interpretations of classic musics.\\n\\nEach one of the members from this group has different vocal characteristics, such as the ease to reach high or low notes, agility on the notes scale, vibrato control, among others.\\n\\nOne of the most important characteristics is how many seconds the singer can sing the same note without losing his breath. When a singer loses his breath, it takes 1 second for him to recover himself.\\n\\nThe choir wants to sing a new song, in which there must always exist exactly 3 vocalists singing 3 notes at the same time. When a vocalist loses his breath, another vocalist must assume his place immediately, ensuring that the note keeps sounding. Another characteristic of this song is that all the vocalists must always give their best, or in other words, they must always sing until they are out of breath.\\n\\nIn order for the presentation to be short, the choir would like to sing this song in the lowest time possible, or in other words, the 3 notes must stop sounding at the same time and as soon as possible.\\n\\nGiven the amount of choir members, and the amount of time that each of them can sing without losing their breath, you must say what will be the duration of the song.\\n\\t\\t\\t\",\n    \"id\": 2799,\n    \"input\": \"\\t\\t\\t\\tThe first row will have an integer N, indicating how many singers are in Northern Choir (3 < N <= 20).\\n\\nFollowing there will be N integers Fi, each one indicating how long a singer can sing without losing his breath (1 <= Fi <= 10, para todo 1 <= i <= N).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Northern Choir\",\n    \"output\": \"\\t\\t\\t\\tYour algorithm must print one row containing one integer D, indicating the duration of the presentation of the song.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tDabriel is playing with his array and as he is very methodical he thought that he should always know the minimum amount of elements that must be changed so that a given subarray has a value W. In other words, he wants to be able to perform two operations on his array, are they:\\n\\u00a0 \\u00a01 - Change the value of the element of position X to the value W;\\n\\u00a0 \\u00a02 - Inform the minimum amount of elements that need to be changed from the interval [X, Y] so that all elements have the value W.\\n\\t\\t\\t\",\n    \"id\": 2800,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers N and Q (1 \\u2264 N, Q \\u2264 105), which represents how many elements the array has and how many queries Dabriel will perform. The second line contains N integers Xi (1 \\u2264 Xi \\u2264 105) which indicates the value of the ith position of the initial array. In the next Q lines will contain the queries, which can be: 1 X W (1 \\u2264 X \\u2264 N, 1 \\u2264 W \\u2264 105), indicating the change operation and 2 X Y W (1 \\u2264 X \\u2264 Y \\u2264 N, 1 \\u2264 W \\u2264 105), indicating the query operation.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Playing with Queries\",\n    \"output\": \"For each type 2 operation, prithe number of elements that need to be changed.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tA cipher process consists in change each symbol of a message to another symbol from the same alphabet used in the original message, in the way to has one by one correspondence to each other. It means that two different symbols can not be replaced by the same symbol.\\n\\nAn Affine cipher consists in suppose some symbols of a T size alphabet as numbers of an interval [0..T-1]. Two positive numbers A and B are chosen. To cipher a symbol is necessary to multiply its position value on the alphabet by A and the number B needs to be added to the result of this multiplication. In the end, the result will be the position of the symbol that will replace the original in the sequence. If this new position does not correspond to a valid position inside the size of the alphabet, it supposes that the alphabet will be repeated many times on the right, in the way to have all estimated positions.\\n\\nFor example, suppose an alphabet which its size is 7 and A=4 and B=2. To cipher any symbol from this alphabet is necessary to extend the alphabet to the right by 3 times, as shown below:\\n\\n\\n\\nIn this cipher, the symbol 6 is ciphered to the symbol 5 because A x 6 + B=26 and the symbol in position 26 is 5.\\n\\nNeed to be noted that not all Affine cipher is valid. A poorly made cipher can not produce a one-by-one correspondence between symbols, not guaranteeing that the decipher could be made in a unique way.\\n\\nYour task is, given the parameters A and B and the alphabet size, decipher a message with N symbols or show that it not possible to do so.\\n\\t\\t\\t\",\n    \"id\": 2801,\n    \"input\": \"\\t\\t\\t\\tThe first line of the input consists in an integer number N (1 \\u2264 N \\u2264 105) that corresponds to the message size. The second line consists of N integer numbers Mi (0 \\u2264 Mi < T) that correspond to the message itself. The third line contains three integers: T (1 \\u2264 T \\u2264 109) that corresponds to the alphabet size; and A (1 \\u2264 A \\u2264 109) and B (1 \\u2264 B \\u2264 109) as specified before.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Affine Cipher\",\n    \"output\": \"\\t\\t\\t\\tThe output consists in a single line containing the deciphered message, with its symbols separated by a single blank space, if will be possible to decipher each symbol of the alphabet in a single mode. Otherwise, print the message \\\"DECIFRAGEM AMBIGUA\\\" (ambiguous decipher).\\n\\t\\t\\t\\t\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t\\n\\t\\t\\t\\tGiven a set of N points on a circumference of a circle, every pair of points is connected by a segment and three of those segments never cross each other in a point inside the circumference.\\n\\n\\t\\t\\t\\tYour task is to determine in how many parts these segments divide the interior of the circle.\\n\\t\\t\\t\",\n    \"id\": 2802,\n    \"input\": \"\\t\\t\\t\\tThe first and only line of the input contains an integer N (1 \\u2264 N \\u2264 1000) representing the number of points on the circumference.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Dividing Circles\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a single line containing an integer representing the number of parts of the circle.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tWith a terriorial extension equal to 8,51 million km\\u00b2, Brazil is the fifth largest country on Earth. Its region is divided in 5 sub-regions: Midwest, Northeast, North, South and Sourtheast.\\n\\nThe North region has a territorial extension equal to 3,85 million km\\u00b2, and contains 7 states: Roraima, Acre, Amap\\u00e1, Amazonas, Par\\u00e1, Rond\\u00f4nia e Tocantins.\\n\\nYou're helping a friend in a homework, and need to write an algorithm that: given the name of a brazilian state, says if the state belongs to the North region or not.\\n\\t\\t\\t\",\n    \"id\": 2803,\n    \"input\": \"\\t\\t\\t\\tThe input has one row, containing the name of a brazilian state. All the characters will be lower-case and without accentuation.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"States from the North\",\n    \"output\": \"\\t\\t\\t\\tPrint the phrase \\\"Regiao Norte\\\", if the given state is from the North region, or \\\"Outra regiao\\\" otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe North is the largest region of the country in area. With so much territorial extension and its 450 counties it was expected that there would be more Railroads, but this is not the reality. Much of the transportation is still done by highways or waterways.\\n\\n\\t\\t\\t\\tTo address this problem, Farcos has designed a rail network capable of connecting N counties of the North that he believes are strategic to commerce and tourism in the region. In this mesh a railroad always connects two different counties and has two rail lines that make the railroad capable of being traversed in both directions. In addition to always be possible to reach in all other N-1 counties from any countie in the network, either by a direct railroad or passing through other intermediate counties.\\n\\n\\t\\t\\t\\tAt the end of the design of its railway network and knowing the extension in km of each railroad, Farcos calculated which would be the smallest route between all the pairs of counties through the mesh and generated an array of distances which was attached to its design and sent to estimating the cost of producing such a project.\\n\\n\\t\\t\\t\\tAs the network design and matrix were not digitally shipped, the network design was lost and only the distance matrix arrived at the responsible authorities.\\n\\n\\t\\t\\t\\tIts task is to use only the distance matrix and the average price informed to build one railway (regardless of its size), to estimate the lowest cost for the project.\\n\\n\\t\\t\\t\\tHowever, care is needed. There are several people who are interested that the Farcos project does not even get to the analysis and may have altered positions of the distance matrix so that it does not correspond to a possible network designed by Farcos.\\n\\t\\t\\t\",\n    \"id\": 2804,\n    \"input\": \"\\t\\t\\t\\tThe first line of the entry contains two integers N (1 \\u2264 N \\u2264 450) and K (1 &leq; K &leq; 102), respectively representing the number of strategic cities and the average price, in tens of thousands of reais, of building a railroad . The next N lines contain N integers Di,j (0 &leq; Di,j &leq; 106) each representing the distance in km from city i to city j through the rail network. Di,j \\u2260 0 para i \\u2260 j.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Railways\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a single integer value representing the estimate of the minimum cost, in tens of thousands of reais, of constructing the railroad grid project. Or the message \\\"*\\\" if the distance matrix has changed.\\n\\n\\t\\t\\t\\tObs: It is guaranteed that the railroads have an integer size in km.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tDabriel is playing around with his beautiful binary matrix, where he can put 0 or 1 in each position of it. As we already know, Dabriel loves to create rules and games, so he proposed the following:\\n\\u00a0 \\u00a0-\\u00a0For every cell with a value of 1, the whole submatrix that goes from the leftmost corner to it must also have a value of 1;\\n\\u00a0 \\u00a0-\\u00a0Every cell in the matrix has to receive a binary value;\\n\\u00a0 \\u00a0-\\u00a0Cells that already have some value can not be changed.\\n\\nWith that in mind, Dabriel wants to know how many different ways there are to accomplish the game. Can you figure it out?\\n\\t\\t\\t\",\n    \"id\": 2805,\n    \"input\": \"\\t\\t\\t\\tThe first line of the test case contains two integers N and M (1 \\u2264 N, M \\u2264 100), representing the number of rows and columns of the matrix, respectively. The next N lines contain M characters, being: '.', '1', '0', where '.' represents a cell that has not yet received a binary value.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Binarizing the Matrix\",\n    \"output\": \"\\t\\t\\t\\tPrint out the amount of possible possibilities for Dabriel's game. Since this amount can be very large, print only the rest of the division of that quantity by 109+7.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Cristhian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThe northern region of Brazil is home to a very rich and creative culinary. With typical ingredients, unique spices, peculiar combinations and preparation methods, the dishes of the region always enchant the residents and tourists.\\r\\n\\r\\nIn this culinary there are two kinds of ingredients: ingredients typical from the North, and ingredients common to the rest of the country. A portion is a mix of ingredients (typical and/or commons) and/or other portions, and is only considered typical if more than half of its components are typical.\\r\\n\\r\\nRafael is visiting the North for the first time, and after a few meals he is very pleased with the local gastronomy. He realized that the more typical components a portion has, the more he is surprised by the taste.\\r\\n\\r\\nAfter taking some notes, Rafael asked for your help: Given the list of typical ingredients, and a list of several portions, you must tell which of these portions are typical.\\n\\t\\t\\t\",\n    \"id\": 2806,\n    \"input\": \"\\t\\t\\t\\tThe input starts with an integer N, indicating how many typical ingredients there are (1 <= N <= 50). Following there will be N names, representing the N\\u00a0typical ingredients of the region.\\r\\n\\r\\nFollowing there will be an integer M, indicating how many portions should be analysed (1 <= M <= 100).\\r\\n\\r\\nFollowing there will be M input sets, each representing a portion.\\r\\nEach of these sets starts with a name Si and a number Ki, representing the name of a portion and the amount of components (typical, common or portions) that make up this portion (1 <= Ki <= 50).\\r\\nFollowing there will be Ki names, representing the components of this portion Si.\\r\\n\\r\\nThe names of all the components are composed of only letters from the alphabet (uppercase or lowercase) and hyphen, and will have at most 50 characters.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Typical Ingredients\",\n    \"output\": \"\\t\\t\\t\\tFor each portion you should print one row with the phrase \\\"porcao tipica\\\" if the portion is typical, or \\\"porcao comum\\\" if the portion is not typical.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tIccanobif sequences are sequences where each term is always equal to the sum of the next two subsequent to it. Except for the last two terms which are always equal to 1\\n\\t\\t\\t\\tExample of an Iccanobif sequence with 10 terms: 55, 34, 21, 13, 8, 5, 3, 2, 1, 1.\\n\\t\\t\\t\\tYour task is, given an integer value, print the corresponding size Iccanobif sequence.\\n\\t\\t\\tInput\\n\\n\\t\\t\\t\\n\\t\\t\\t\\tThe entry consists of a single integer N (1 &leq; N &leq; 40) representing the size of the desired Iccanobif sequence.\\n\\t\\t\\t\\n\\n\\t\\t\\tOutput\\n\\n\\t\\t\\t\\n\\t\\t\\t\\tThe output consists of a single line containing the terms of the Iccanobif sequence of N size separated by a single space.\\n\\t\\t\\t\\n\\n\\t\\t\\t\\n\\n\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tExemplos de Entrada\\n\\t\\t\\t\\t\\t\\tExemplos de Sa\\u00edda\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t3\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t2 1 1\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\n\\n\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t5\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t5 3 2 1 1\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\n\\t\\n\\n\\t\\n\\n\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t10\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t55 34 21 13 8 5 3 2 1 1\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\n\\t\\n\\t\\t\\t\\n\\t\\t\\t\\tII Maratona de Programa\\u00e7\\u00e3o do Norte\\n\\t\\t\\t\\n\\t\\t\",\n    \"id\": 2807,\n    \"input\": \"\\t\\t\\t\\tThe entry consists of a single integer N (1 &leq; N &leq; 40) representing the size of the desired Iccanobif sequence.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Iccanobif\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a single line containing the terms of the Iccanobif sequence of N size separated by a single space.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tGiven the initial position of a Knight on a chessboard and the target position, it must be said if, with exactly one movement, the Knight can reach the target position. If this is possible, the move is classified as valid, otherwise the move is said invalid..\\n\\n\\t\\t\\t\\t\\n\\nOn a chessboard numbers are used, from 1 to 8, to specify the board line and letters, from 'a' to 'h,' to specify the column.\\n\\t\\t\\t\",\n    \"id\": 2808,\n    \"input\": \"\\t\\t\\t\\tThe entry consists of a single line containing the initial position of the Knight and the target position, separated by a space. A position in the board is specified by a character, which represents the column, followed by an integer representing the line.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Knights Again\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a line containing the message \\\"VALIDO\\\" if the move is a valid movement of a Knight in the game of chess or \\\"INVALIDO\\\" otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tDabriel has just learned about shortest paths in graphs and is already considered very good at it. It can always find the best route between a pair of vertices.\\n\\nAfter spending hours playing with his graphs and finding shortest paths he thought of something interesting: Is there any other path in the graph that uses at least K different edges of the path he had found and that the difference of the values of these paths is at most D?\\n\\nAs Dabriel walks around without time, he asked for your help to solve this problem. It will be given a graph and a set of edges that form a shortest path, in addition an integer Q will be given that will represent how many queries it wishes to make.\\n\\t\\t\\t\",\n    \"id\": 2809,\n    \"input\": \"\\t\\t\\t\\tThe first line of the input contains three integers N, M, Q (1 \\u2264 N \\u2264 104, 1 \\u2264 M \\u2264 min(20000, N*(N-1) / 2), 1 \\u2264 Q \\u2264 100), representing the quantity of vertices, the number of edges and how many queries will be made, respectively. The next line contains two integers U and V (1 \\u2264 U, V \\u2264 N, U\\u00a0!= V), which represents the exit and destination vertex of the shortest path. The next line will have a list of integers Xi (1 \\u2264 Xi \\u2264 N) representing the ith vertex of one of the smallest paths. The next M lines describe the edges of the graph with three integers, U, V and W (1 \\u2264 U, V \\u2264 N, 1 \\u2264 W \\u2264 105), indicating that there is an edge connecting the vertex U with vertex V with the cost W. All edges are directed and there are no two edges between the same ordered pair of vertices. In the next Q lines will have the queries with two integers K, D (1 \\u2264 K \\u2264 100, 0 \\u2264 D \\u2264 104).\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"K-th Path\",\n    \"output\": \"\\t\\t\\t\\tFor each query print \\\"SIM\\\" if there is another path with at least K different edges and with a value difference of at most D, otherwise print \\\"NAO\\\". The quotation marks should not be printed.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tAs you may recall* John was trying to break the focus of dengue in his city, but this task was not so simple because of the number of places he should visit. So he asked the help of his friends to solve this problem.\\n\\nYou will be given all the focus of dengue, which can be seen as coordinates in the cartesian plane and the coordinate of all houses, of John and his friends. What has been decided is that all focus of dengue should be visited exactly once and at the end all participants should return to their respective homes.\\n\\nCan you tell John beforehand what is the minimum distance traveled by all friends to visit all the outbreaks?\\n\\nJohn is a smart guy, so he knows there may be cases where the help of all his friends will not be needed.\\n\\t\\t\\t\",\n    \"id\": 2810,\n    \"input\": \"\\t\\t\\t\\tThe first line of each test case will have two integers N and M (1 \\u2264 N \\u2264 10, 1 \\u2264 M \\u2264 5), representing the number of dengue focus\\u00a0on the map and how many people will participate in the mission, including John, respectively. It follows M lines containing two integers X and Y (-100 \\u2264 X, Y \\u2264 100), representing the coordinate of one of the houses. Then there will be N lines, each containing two integers X and Y (-100 \\u2264 X, Y \\u2264 100), representing the coordinate of a dengue focus.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Dengue 2.0\",\n    \"output\": \"\\t\\t\\t\\tPrint the minimum amount that will be covered by John and his friends.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tDabriel went to visit his friend Farcos in his hometown, Manaus, in the state of Amazonas. When he got there, Dabriel was surprised at the way people spoke because of the very specific regional expressions they used. One curious expression he heard from a Farcos talk with his other friend RapBoy was \\\"Sibicho\\\", which is a reduction of the phrase \\\"Look at that bug, O\\\". A well-used regionalism to show disdain for what one hears or doubts one's assertion\\n\\nThe first time he heard the expression Dabriel thought it was the bitwise operation on numbers called Sibi-Xor that he had learned recently at the university and explained to Farcos. Farcos, in turn, was very happy to discover the operation because, in addition to enjoying bitwise operations, he found a way to make Rapboy stop using that expression with him in a tone of disdain. Now every time Rapboy said \\\"Sibicho\\\" he would have to tell Farcos the Sibi-Xor Result from a list of Numbers provided by him.\\n\\nThe Sibi-Xor operation on a list of numbers consists of 3 steps:\\n\\n1)Make the AND-bitwise of all subsequences in the list. We will call each result subset-and.\\n\\n2)Do the XOR-bitwise of all subset-and's that were formed with the same amount of elements.\\n\\n3)Add up all the results from step 2. \\n\\n\\nFor example, for the list A = {14, 15, 35, 7} provided by Farcos, Rapboy must answer the\\n\\nSibi-Xor(A) =\\n\\n(14 ^ 15 ^ 35 ^ 7) +\\n\\n((15 & 35) ^ (14 & 35) ^ (15 & 7) ^ (35 & 7) ^ (14 & 7) ^ (14 & 15)) +\\n\\n((15 & 35 & 7) ^ (14 & 35 & 7) ^ (14 & 15 & 7) ^ (14 & 15 & 35)) +\\n\\n(14 & 15 & 35 & 7)\\n\\n= 57\\n\\nWhere '&' symbolizes the and-bitwise operation and '^' the xor-bitwise operation.\\n\\t\\t\\t\",\n    \"id\": 2811,\n    \"input\": \"\\t\\t\\t\\tThe first line of the entry contains a N integer (1 \\u2264 N \\u2264 2000) representing the number of numbers in the Farcos list. The second line contains N integers Ai (0 &leq; Ai < 264) corresponding to lists of Farcos numbers.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Sibi-Xor\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a single line containing Rapboy's response, that is, the sibi-xor of the numbers provided by Farcos. Since the response can be a very large number, print only your module for 109+7.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Felipe C. Ochial, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tArmandinho has a bit boring friend , named La\\u00e9rcio. When they play the game of master says, a game where someone gives an order and someone fulfills it, and instead of giving nice orders like climbing a tree, jumping the wall, doing a handstand or organizing manifestations to overthrow the government (regardless of who is in power) he always asks for something dull. In his last game, La\\u00e9rcio demanded that Armandinho order a list of numbers, so that only the odd numbers appear and the first item is the largest, the second is the smallest, the third is the second largest, the fourth is the second smaller, and so on. As doing this by hand is very annoying, Armandinho sought your help.\\n\\t\\t\\t\",\n    \"id\": 2812,\n    \"input\": \"\\t\\t\\t\\tThe input consists of an integer  N\\u00a0representing the number of test cases ( 1<N<1000 ). Each test case begins with an integer M, which represents the size of the list (0<M<100). followed by M integers Mi (0<Mi < 1000) that represent La\\u00e9rcio's list.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"La\\u00e9rcio\",\n    \"output\": \"\\t\\t\\t\\tPrint the ordered list as La\\u00e9rcio requested, with a space between the values, breaking a line after each test case.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Christian Bonilha, UTFPR  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tRafael hates rain, and to avoid getting wet he started to use a weather forecasting system. In this system he can predict if it's going to rain at the time he goes to work and/or at the time he comes back from work.\\n\\nRafael also hates to carry an umbrella when it's not raining. To avoid it, he's going to buy several umbrellas and store them\\nat home and at the office, and he's only going to use it when it's raining. In other words, if it's raining at the time he goes to work, he'll take an umbrella that is at home, use it on the way to work, and leave it there. In a similar way, if it's raining at the time he comes back from work, he'll take an umbrella that is at the office, use it on the way home, and leave it there.\\n\\nGiven the meteorological forecasts, find out how many umbrellas Rafael must buy and store at home and at the office, in a way that he never gets wet and he never has to carry an umbrella if it's not raining.\\n\\t\\t\\t\",\n    \"id\": 2813,\n    \"input\": \"\\t\\t\\t\\tThe first input row has an integer N, indicating how many days were forecast by the meteorological system (1 <= N <= 1000).\\n\\nFollowing there will be N rows, each with two words SD and SN, indicating the forecast of the day at the time Rafael goes to work, and at the time Rafael comes back from work, respectively. If the word is \\\"sol\\\", it means that at this time it's not going to rain, and if the word is \\\"chuva\\\", it means that at this time it's going to rain.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Avoiding Rain\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, you should print one row with two integers C and E, indicating how many umbrellas Rafael must buy and store at home and at the office.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Felipe C. Ochial, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tMarcelo Freitas de Jesus, known as Little Fred likes carnival a lot. During the holiday he intends to listen to music at the highest possible volume. However, to do so he needs to consider the location of his neighbor Josu\\u00e9 Braulio Petiz, who always has a noise dosimeter (device to measure the intensity of sound) around and will call the police if the sound is even a hundredth over the maximum permitted by Babanua\\u2019s law. Given the simplified map of the neighbor where F represents Little Fred\\u2019s house, J represents Josu\\u00e9\\u2019s house, X  represents a random house and each character represents 10 meters ( consider that Little Fred is emiting the sound from the center of his terrain and Josu\\u00e9 is measuring the sound in the center of his terrain), the maximum sound permited in Babanua and considering that the sound propagate with 1% loss for each meter and that the sound maintain it\\u2019s intensity in that meter ( physics laws are different in Babanua, by the presidential decree of R.Rey) inform the maximum volume which Little Fred can listen to his music.\\n\\t\\t\\t\\tTo calculate the value, one must divide the maximum allowed value by 0.99 in the exponent of how many times the sound will be reduced. For example, in the case of a maximum sound of 110Dbs and a distance of 14,1421 we will have that the maximum sound is 110 / 0.9914, that is, 126,619.\\n\\t\\t\\t\",\n    \"id\": 2814,\n    \"input\": \"\\t\\t\\t\\tThe input consist of an integer N (0 < N < 51) which informs the number of test cases. Each test case is composed by two integers K (0< K < 201 ) and  J ( 0 < J < 30 ), which indicates the maximum sound intensity and the number of lines used to draw the map respectively. After follows J lines (with a maximum of 30 characters) representing the map.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Loud Music\",\n    \"output\": \"\\t\\t\\t\\tTo each test case print the maximum sound intensity which Little Fred can listen to, with no decimal places, rounded down, followed by \\u201cdBs\\u201d. \\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tFrancisco Yote is a different stutterer. Not only does he speak repeating syllables as strangely when he typed a text he repeats some syllables, making the reading very annoying. He repeats just syllables that have exactly 2 letters and never repeats a syllable different than the first syllable of the word. He repeats just one time each syllable. For example the word \\\"repeat\\\" can appear as rerepeat, but never as rererepeat.\\n\\nYou have been called as an expert to translate some of Francisco's texts, eliminating the redundancies of text he generates.\\n\\t\\t\\t\",\n    \"id\": 2815,\n    \"input\": \"\\t\\t\\t\\tThe input consists of one line with up to 1000 words (each word with up to 15 characters). This line of text should be corrected by eliminating redundancies, as presented below.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Stutterer Digitizer\",\n    \"output\": \"\\t\\t\\t\\tYour program must generate (from the original text typed by Francisco) a text without the repetitions above mentioned.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tAs expected, Dabriel is inventing a new game. In this game, he selects a string containing lowercase letters and asterisks and the objective is to change all asterisks in order to transform the string into a palindrome *. However, this game is very easy for Dabriel and he is proposing a simple modification.\\n\\nYou will receive the string with lowercase letters and asterisks and a set of index pairs. With this, you must inform how many different ways there are to transform this string into a palindrome, if possible, being able to replace only the asterisks and leaving all pairs of indexes with the same letter.\\n\\nFor the string a**a and containing only one index pair = {1, 3}, there is only one way to\\n\\tgenerate the palindrome respecting all the rules, being:  aaaa.\\n\\t\\t\\t\",\n    \"id\": 2816,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers  N, C (1 \\u2264 N \\u2264 100000, 0 \\u2264 C \\u2264 min(30000, N*(N-1)/2)),\\n\\t\\t\\t\\t\\trepresenting the string size and index set size. The next line contains the string  S as described in the text. Each oh the next\\n\\t\\t\\t\\t\\tC lines contain a pair of indexes  (i, j) (1 \\u2264 i, j \\u2264 N),\\n\\t\\t\\t\\t\\t indicating that the i-th letter must be equal to the  j-th.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Dabriel's Palindrome\",\n    \"output\": \"\\t\\t\\t\\tPrint the total number of ways to generate the palindrome as described in the text. Since this value can be very large, print only the rest of the division by 109+7\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy D\\u00e2mi Henrique, INATEL  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tOne of the consequences of the truck drivers strike was the lack of gasoline across the country. In Santa Rita do Sapuca\\u00ed, a city in the south of Minas Gerais, it was no different. Hundreds of cars and motorcycles lined up at the last station with gasoline available to fill their tanks before it drained, it looked like a zombie apocalypse movie scene.\\n\\nThe station has N bombs and in each of them there is a row in a straight line with M ve\\u00edculos (carros ou motos). vehicles (cars or motorcycles). Bellow, there's an illustration of a station with 4 bombs and a row of 2 vehicles per bomb.\\n\\n\\n\\t\\n\\n\\nDarlan, owner of the station, limited the amount of gasoline that each car could fuel in 25 liters and each bike in 12 liters. Since all vehicles owners in queues were afraid they would never be able to refuel, they would certainly put the maximum gasoline allowed by Darlan.\\n\\nThe local TV station team was live with their drone filming the long lines of vehicles around Darlan\\u2019s station when a viewer asked a somewhat random question: \\\"If we take into account that the rows of cars feature a matrix of N lines by M columns, what is the largest amount of gasoline that vehicles in a square of size L will put? Given that in this square there must be at least one vehicle of each type (car and motorcycle).\\\"\\n\\nThe TV crew has no idea how to answer this question and needs your help!\\n\\t\\t\\t\",\n    \"id\": 2817,\n    \"input\": \"\\t\\t\\t\\tThe first line of the input has two integers N, M\\u00a0(1\\u00a0\\u2264\\u00a0N, M\\u00a0\\u2264 1000), representing the number of pumps and the number of vehicles queued in each pump. They follow N lines, each containing M characters 'C' or 'M' representing a car or a motorcycle, respectively. After this there will be an integer L (1\\u00a0\\u2264\\u00a0L\\u00a0\\u2264 1000), representing the size of the square side that the viewer wishes to know\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Darlan's Gas Station\",\n    \"output\": \"\\t\\t\\t\\tDisplay a single integer, the largest possible amount of gasoline that vehicles in a square L will fuel , given that there must be at least one vehicle of each type. If there is no square that characterizes the viewer's doubt, print -1.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Thalyson Nepomuceno, IFCE  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\tBino and Cino are joking to remove digits from a number to make it a multiple of 6. To perform this game, they draw a number, so they try to remove the fewest number of digits from that number so that it becomes a multiple of 6 without leading zeros.\\n\\nBino and Cino are very good at this game, and they can always turn the number into a multiple of 6 using as few removals as possible.\\n\\nFor example:\\n\\u2022 132: It is not necessary to remove digits because 132 is a multiple of 6.\\n\\u2022 106: It is necessary to remove the 1 and 0 of the number so that the rest is multiple of 6. It is not possible to remove only the 1, because the result has leading zeros.\\n\\t\\t\\t\",\n    \"id\": 2818,\n    \"input\": \"\\t\\t\\t\\tThe input consists of multiple lines. The first line contains an integer X ( 1 \\u2264 X \\u2264 100) indicating the number of test cases. Each of the next X lines contains an integer Y ( 0 \\u2264 Y \\u2264 10100000 ) indicating a number drawn by Bino and Cino.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Funny Game\",\n    \"output\": \"\\t\\t\\t\\tFor each number drawn by Bino and Cino, print the smallest amount of number removal required so that the number is a multiple of 6. If the number can not be a multiple of 6, print the message: \\\"Cilada\\\" .\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tGiovana is a very smart girl and wants to earn a good Christmas present this year. For this she wants to send a good letter to Santa.\\n\\n\\t\\t\\t\\tAs she is very intelligent, Giovana discovered that those who receive Santa's letters are the Leprechauns, and they can tell if a child is a good boy or a good girl by analyzing the use of digraphs! That's right, by analyzing the number of forbidden digraphs in a letter, the leprechauns can tell whether or not the child deserves a good gift.\\n\\n\\t\\t\\t\\tNot to take risks Giovana wants to send a letter that does not contain any prohibited digraph. Although very smart, Giovana is still very young and does not master the whole grammar. One of your strategies for avoiding mistakes is to use only the first few letters of the alphabet.\\n\\n\\t\\t\\t\\tBesides that, the Leprechauns are very strict! Even though the first character of a digraph is at the end of a word and the second is at the beginning of the next word, the Leprechaun still consider it as a digraph. This made the girl make the dubious decision not to write any space characters in the letter.\\n\\n\\t\\t\\t\\tGiovana is still insecure and has asked for your help. Given the number of characters the letter will have and which letters of the alphabet it will use, your task is to determine how many forms this letter can be written without containing any forbidden digraphs.\\n\\n\\n\\t\\t\\t\",\n    \"id\": 2819,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the entry contains an integer T that represents the number of test cases. The first line of a test case contains the integers C (1 &leq; C &leq; 109), N (1 &leq; N &leq; 26) and Q (0 &leq; Q &leq; 103) representing respectively the number of characters in the letter, the number of letters from the beginning of the alphabet that can be used and number of prohibited digraphs. The next Q lines of a test case contain two lowercase characters of the English alphabet each, representing the prohibited digraphs.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Letters To Santa\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of one line per test case containing the number of ways to write the letter module 109+7.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Giovanna Kobus Conrado, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tBruna is learning to count. She already knows d digits. Her brother, Carlos, told her that she can't even form n distinct numbers using those digits only. Bruna, to prove that he is wrong, will write the n smallest numbers that she can make using only the digits she knows in a sheet of paper, but she doesn't know when to stop. Can you help her wit that task?\\n\\t\\t\\t\",\n    \"id\": 2820,\n    \"input\": \"\\t\\t\\t\\tThe first line of input consists of a number\\u00a0t\\u00a0(t=100) , the number of\\u00a0test cases.\\n\\nEach case starts with an integer\\u00a0d\\u00a0(2<=d<=9): the number of digits Bruna has already learned.\\n\\nThe following line will contain d integers\\u00a0vi\\u00a0(1<=vi<=9): the digits Bruna knows.\\n\\nThe last line of each case will be the number\\u00a0n\\u00a0(1<=n<=1018).\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Bruna's Digits\",\n    \"output\": \"\\t\\t\\t\\tFor each case, print the nth\\u00a0smallest number that can be made using the digits Bruna knows.\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tAlan Parina loves to create new games with playing cards. Now he created a new game to play with his friends and wants your help to build a program to do a distribution of the cards based on their values \\u200b\\u200b(A is worth 1, J is worth 11, Q is worth 12 and K is worth 13) and in some small rules that are presented below. \\n\\t\\t\\t\\tAlan selects a number of cards that are in a stack and distributes them sequentially to his friends, from first to last. He can see the value of each card and must ensure that the division is as balanced as possible between all players, considering just the sum of the value of their cards. To make it clear, if for example Alan had 4 cards (3, 6, 2 and 10) to distribute between two players, he would have to give cards 3, 6 and 2 to the first player (sum = 11) and the card 10 to the second player. The division 9 and 12 would be discard because the first rule of the game is that the maximum sum must be as small as possible (11 is less than 12). \\n\\n\\t\\t\\t\\tThere is a second rule that must be respected in this game: once the maximum sum value is established, each player, starting with the first one, should try to keep a sum as close as possible to this value. This can be seen in the first test case (below). By distributing A, 7, 3, 2, 9, 5, 6, J, K, 10, 4 and A cards between 3 players, the first player would get the first 6 cards (A, 7, 3, 2, 9 and 5) whose sum would be 27. The second player would have the next two cards (6 and J) that would sum 17 and the last player would have four cards (K, 10, 4 and A) that would result in 28. The division 22, 22 and 28 wont be accetable because the first player could still take the value card 5 to get 27 (less than limit 28 in this case). Nor could divide into 21, 30, and 15, because we would be surpassing the smallest possible maximum value (which is 28). So we have that the maximum of cards for one of the players would be 6 and the maximum value obtained from the sum of these cards would be 28, which is the answer for the first test case presented below.\\n\\n\\t\\t\\t\\t Obviously we have others rules to play this game, but this can wait for another history. \\n\\t\\t\\t\",\n    \"id\": 2821,\n    \"input\": \"\\t\\t\\t\\tThe input contains two lines. The first line have an integer nCards (1 < nCards  < 60 ) and an integer nPlayers (1 \\u2264 nPlayers \\u2264 10) that means the number of cards and the number of players, separated by a blank space. The second line contains each one of the nCards, separated by a blank space (there is no blank space after the last card).\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Cards Distribution\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, your program must print two values \\u200b\\u200bseparated by a space and followed by endline. The first number is the highest number of cards received by one of the players (it can be any player). The number is the highest possible value considering the sum of all cards (this sum can refer to any of the players).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Giovanna Kobus Conrado, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tHappy Birthday! As a birthday gift, your mother made your biggest dream come true and gave you a little pet graph. It's breed is very rare: it has n vertices and each one of them has a value. Initially the vertice i has value i ( 1<= i <= n) and for each pair of vertices the is an edge connecting them with weight equal to the magnitude\\u00a0of the\\u00a0difference of their values.\\n\\nYou little graph is in its development stage, that means that the value of vertice i can change to k at any time! Besides that, graphs eat a lot and you must feed them daily with an amount of food equal to the weight of their maximum spanning tree.\\n\\nWrite a program to take good care of your graph, or your mother might take it from you!\\n\\nNote:\\u00a0The maximum spanning tree of a graph is the tree which vertices are vertices of the original graph and edges are edges of the original graph that has the maximum sum of weight of it's edges.\\n\\t\\t\\t\",\n    \"id\": 2822,\n    \"input\": \"\\t\\t\\t\\tThe first line of input is an integer t\\u00a0(t<=10): the number of test cases.\\n\\nEach case starts with an integer\\u00a0\\u00a0N\\u00a0(0<=N<=2*105): the number of vertices of the graph.\\n\\nThe next line will be an integer\\u00a0Q\\u00a0(1<=Q<=2*105) : the number of instructions to be followed.\\n\\nAn instruction can be of the following types:\\n\\n1 i k\\u00a0: the value of vertice\\u00a0i (1 <= i , k <= n) changes to\\u00a0k ( the edges connected to it must change accordingly).\\n\\n2\\u00a0: the weight\\u00a0of the maximum spanning tree of your graph.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"My First Little Graph\",\n    \"output\": \"\\t\\t\\t\\tFor each instruction of the type 2, print the weight of the maximum spanning tree of the graph.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tYour job for this problem is to check if it is possible to schedule a set of periodic tasks under real-time constraints.\\n\\nA real-time task is defined by two numbers. The first number is the computational cost of the task. It is the computational cost of each complete run of the task. The second number is the period of the process. In other words, the process restarts again after each period.\\n\\nThe task set will be scheduled using the EDF algorithm (Earliest Deadline First). It is known that EDF is optimal. This means that if a set of tasks cannot be scheduled by EDF, there isn't another algorithm that can schedule it.\\n\\nThe operating system that will run these tasks runs on a single core machine. The tasks are preemptable. That is, a task can take the place of another task during its run, if required.\\n\\nConsider that the cost of switching tasks is 0.\\n\\t\\t\\t\",\n    \"id\": 2823,\n    \"input\": \"\\t\\t\\t\\tThe first line of the input has a value\\u00a0 \\\\(1 \\\\leq N \\\\leq 10\\\\), which states the number of processes under schedule.\\n\\nEvery N following line represents a process, and has 2 values \\\\(1 \\\\leq C \\\\leq 5\\\\) and \\\\(C \\\\leq P \\\\leq 100\\\\), that represent the computational cost and the period of each process, respectively.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Eearliest Deadline First\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a single line, with the string OK or the string FAIL, if the scheduling is possible or not, respectively.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tThe worldly famous website pudim.com.br will soon launch its search engine.\\n        The main thing about this search engine is that it will rank articles according to user searches.\\n        It is almost done. The only thing missing is the ranking algorithm.\\n        After a lot of thought, it was decided that articles will be graded using the size of the largest common substring between the search and article strings.\\n        In other words, the size of the largest string that can be formed using only characters that are in both the search and article strings, in the same order.\\n        \\n\\t\\t\\t\",\n    \"id\": 2824,\n    \"input\": \"The input consists of two lines, each one with a string. The first line has the search string and the second line has the article.\\n        Both strings only have characters from a to z, without spaces.\\n        The size of the strings, be it the search string or the article string, is at most \\\\(5 \\\\times 10^3\\\\) characters.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Pudim\",\n    \"output\": \"The output contains only a single line with an integer: the grade for the article.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Batista Galli, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tIn the recently launched and highly acclaimed God of War game, Kratos is now in the realm of Norse mythology trying to leave the past behind. There he met Faye, a woman as mysterious as himself, with whom he had a child: Atreus. But upon the arrival of a stranger, Kratos and his son embark on a journey with unexpected consequences.\\n\\nThroughout their path, they find many writings on walls, panels, rocks... These writings tell interesting stories about the Norse world and their personalities, but can also advise an unsuspecting traveller. Sadly, Kratos cannot read them, for he is from Sparta and has not bothered learning the various languages of his new home. So Atreus must translate every written message they come across. And Atreus is very knowledgeable about Linguistics, impressing even Mimir, the wisest man alive!\\n\\nIt is not uncommon, though, that they find messages with missing or damaged runes (Norse letters), making it impossible for Atreus to know what they are trying to say. So you, as a clever and enthusiastic player, were chosen to help them out. Your task is to fix those errors so Atreus can read the sayings and both of them will be better prepared for the dangers of this journey.\\n\\nBut how can one accomplish that? Well, Mimir suggests the following: the Poetic Edda and the Prose Edda, two Medieval Icelandic literary works composed mostly of poems, are the two main sources of knowledge about the Norse mythology*. As such, find the words in these collections of poems that are most similar to those Atreus cannot read and use them to correct the sayings. A word w1 is considered more similar to w2 than to w3 if there are fewer letter insertions, deletions and substitutions to do in order to get from w1 to w2 than from w1 to w3.\\n\\t\\t\\t\",\n    \"id\": 2825,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of multiple lines. The first one contains an integer a (1 \\u2264 a \\u2264 103) representing the amount of unique words you have found in an Edda. Then, each of the following a lines contain one such word. The next line contains another integer, l (1 \\u2264 l \\u2264 102), which is the length in words of the writing you must fix. And the last line is the writing itself. Every word in it is separated by a single space.\\n\\nAll words in the input are ASCII-only and have a length \\u2264 102. There are no diacritics or punctuation.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"L as in Atreus!?\",\n    \"output\": \"\\t\\t\\t\\tThe output is a single line containing the corrected message for Atreus to read. It follows the same rules as the input and must end with a line feed ('\\\\n'). Additionally, in the case of a tie between two words, choose the one that first appears among those in the input.\\n\\t\\t\\t\",\n    \"timelimit\": 8.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tAs we know, the lexicon is the set of words in a language. In western languages, it is usual to write using the Latin alphabet, with 26 letters from a to z.\\n\\nIt is usual to enumerate the Latin letters in the following order: a, b, c, d, e f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z.\\n\\nIf a list of words is sorted using this order, it is much easier to find them. Your job in this problem is to sort 2 words using this ordering.\\n\\nGiven 2 words A and B. If the first character of A comes before the first character of B, place A before B. If it is the same character, we use the following character to break the tie. If the second is also the same, we use the following, an so on. When all characters from A are equal to the beginning of B, or if all characters of B are equal to the beginning of A, we place the shorter word first.\\n\\t\\t\\t\",\n    \"id\": 2826,\n    \"input\": \"\\t\\t\\t\\tThe input contains 2 words using lowercase characters from a to z. The length of the words is not larger than 20 characters.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Lexical\",\n    \"output\": \"\\t\\t\\t\\tThe output contains the same 2 words in lexicographical order.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Guilherme Dal Bianco, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tA hospital aims at migrating the patient system to a new one. However, it is observed that the client table has a problem with the duplicate register. The same patient can be stored in the database in two different ways, i.e., \\u201cKetlyn da Silva\\u201d or \\u201cKetlin da Silva\\u201d.\\n\\nTo mitigate it,  the number of common tokens can be computed by splitting the string into segments (tokens) with defined size. For example, the tokens with size three for the string \\u201cKetlyn\\u201d are represented as: \\u201cket\\u201d,\\u201detl\\u201d, \\u201dtly\\u201d e \\u201clyn\\u201d; already the string \\u201cKetlin\\u201d  produces the tokens: \\u201cket\\u201d, \\u201cetl\\u201d, \\u201ctli\\u201d,\\u201dlin\\u201d. Observe that the token generation is produced by sliding windows approach, sliding one character at each time. Note that there is no distinction between lowercase and uppercase\\ncharacters. In the end, the number of common tokens is computed.\\n\\nThe task here is to produce and identify the token with size two (2) more frequent in a given string. When to token frequency is equal, the first token in alphabetic order should be outputted.\\n\\n\\n\\n\\n\\t\\t\\t\",\n    \"id\": 2827,\n    \"input\": \"One input line composed of a string S representing the text, composed of printable characters and possibly ended by a EOL. The maximum length of the input line is \\\\(10^5\\\\) characters. \\n\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Tokens Frequency\",\n    \"output\": \"The more frequent token in the string S defining a token size of two (2) followed by the frequency number is printed. The token must be printed as lowercase.\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tAn anagram is a permutation of the letters in a word.\\nFor instance, the strings ananab and anbana are anagrams of the word banana.\\n\\nYour task, in this problem, is to compute how many distinct anagrams exist for a given word.\\n\\nSince this number can be very large, compute the remainder of the division of the number of anagrams by our favorite prime number: \\\\(10^9+7\\\\).\\n\\t\\t\\t\",\n    \"id\": 2828,\n    \"input\": \"\\t\\t\\t\\tThe input has a single line, with a single word, with at most \\\\(10^5\\\\) characters. The word only has lowercase characters from a to z.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Anagrams\",\n    \"output\": \"\\t\\t\\t\\tThe output contains only a single line with a single integer, the result.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe lexicon problem taught us how to sort 2 words. However, when the list of words was being built, the intern in charge made the mistake of including Uppercase characters!\\n\\nNow we have a huge list of words, with both lowercase, from a to z, and uppercase characters, from A to Z!\\n\\nWe need to sort them, obeying the same order as before, regardless if the character is lowercase or uppercase.\\nHowever, the uppercase characters will be used to break ties, once all letters have been compared. In this case we consider that the uppercase character comes first.\\n\\t\\t\\t\",\n    \"id\": 2829,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer \\\\(1 \\\\leq N \\\\leq 5 \\\\times 10^4\\\\).\\n\\nEach of the following N lines contain a single word. Every word has at most 20 characters.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Uppercase, Why?\",\n    \"output\": \"\\t\\t\\t\\tThe output must contain the list of words, sorted.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gerson Groth, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\tSanta Claus loves mobile games, especially if they have a Christmas theme. Santa has just installed a new game for his smartphone. The game is basically a character running endlessly on a track consisting of three lanes, having to change lanes to deflect obstacles (Christmas trees) appearing on the way. The character always starts a game on the middle lane. Santa needs tapping once on the left side of the smartphone screen so the character moves a lane to the left, or a touch on the right side to move a lane to the right. That is, if the character is on the leftmost lane, he needs 2 touches on the right side of the screen to get to the rightmost lane.\\nAlthough it sounds easy, Santa is having a hard time staying alive for a long time. One thing he noticed during the game is that whenever there are obstacles, only one track is free to cross, while the other two have Christmas trees blocking paths. As you guys are great friends, he asked you to write a program that minimizes the number of touches on the smartphone, so that he can walk M meters through the game.\\t\\n\\t\\t\\t\",\n    \"id\": 2830,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test cases. The first line of a test case contains an integer M (0 \\u2264 M < 10000), representing the distance, in meters, that Santa wants to play. The next M lines contain 3 integers L, C, R each, representing the left, center and right lane, respectively where 0 \\u2264 L,C,R \\u2264 1. The lanes contain only the number 0, if there is no obstacle, and the number 1, if there is a Christmas tree on the lane. It is guaranteed at least one lane will be free for crossing. Assume Santa can always play fast enough to go left to right, or right to left from one entrance to the next. The end of the input is indicated by a line containing only one zero.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Deflecting from Christmas Trees\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, your program should print a single line containing the fewest touches on the smartphone Santa must make to travel the desired distance by deflecting all obstacles.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                By Francisco Elio Parente Arcos Filho, UEA  Brazil\\r\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n                Every Christmas the good old man can go to every house in the world and leave gifts for the children who have been good throughout the year, but this is only possible because of his magic gift bag. It would be impossible for Santa to carry all the presents in his bag, the volume and weight of them all makes this obviously unfeasible. What actually happens is that your bag is a kind of magical portal to your gift factory at the North Pole. Where the presents are stacked by their elves and Noel always takes the gift from the top of that pile when he accesses his magical bag.\\r\\n\\r\\n                Gifts have a numerical measure of the degree of fun they can provide children, and Santa is always concerned with the least fun gift he will deliver throughout the night because he does not want any child to feel bad about it. you receive. However, this can not be done in advance because throughout the night as the good old man takes gifts from the pile to deliver, others are still being made and placed on the pile. So the most he can know is the value of the least fun present on the stack up to that point.\\r\\n\\r\\n                Your task is, given the sequence of operations done on the stack of gifts, answer Santa's queries about the value of the least entertaining gift on the stack thus far.\\r\",\n    \"id\": 2831,\n    \"input\": \"\\r\\n                The first line of the input contains an integer N (1 &leq; N &leq; 106) corresponding to the number of operations performed on the present stack. The operations can be of three types: \\\"PUSH V\\\" where V (1 &leq; V &leq; 109) is an integer representing the degree of fun of the present being placed on the stack; \\\"POP\\\" which represents that Santa Claus is taking a gift from the cell to deliver and \\\"MIN\\\" representing a Noel query to know the smallest gift value in the stack.\\r\\n\\r\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Smallest on the Stack\",\n    \"output\": \"\\r\\n                The output consists of a line containing an integer with the smallest present value in the stack for queries of type \\\"MIN\\\" or \\\"EMPTY\\\" for \\\"MIN\\\" and \\\"POP\\\" operations when the stack is empty.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gerson Groth, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tMrs. Claus is suspecting that Santa has several children scattered around the world. She has noticed some patterns between the gifts requested by the kids and those received. Even if she is not sure, she would like to check in detail all the kids who present those patterns in the gifts received. As there are many kids around the world, you have volunteered to help her with this task.\\n\\t\\t\\t\\tMrs. Claus will provide the patterns she wants to investigate. That way, for each gift, she will provide a list of suspicious gifts that can be received. After providing the suspicious combinations, she will inform the desired/received gifts for each kid. To do this, write a program that says whether or not Mrs. Claus should check the kid.\\n\\t\\t\\t\\tNOTE: Gift names may contain spaces or hyphens.\\n\\t\\t\\t\",\n    \"id\": 2833,\n    \"input\": \"\\t\\t\\t\\tThe input contains several test cases. Each test case starts with the number of combinations C (1 \\u2264 C \\u2264 50) and the number of Kids K (1 \\u2264 K \\u2264 1000). For each combination there will be a line containing the desired gift, followed by the number of suspicious gifts S (0 \\u2264 S \\u2264 C). Each of the following S lines will contain the name of one suspected gift.\\n\\t\\t\\t\\tAfterwards, we will have K lines each containing the desired gift followed by the received gift by the kid, separated by a semicolon (;).\\n\\t\\t\\t\\tThe end of the input is determined by EOF.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Suspicious Gifts\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print Y if Mrs. Claus should investigate or N, otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAn disease has attacked the reindeers and made them unable to fly to deliver Christmas gifts.\\n\\nThe reindeer elves have managed to identify a rather curious fact about this disease, which is contagious only if two or more diseased reindeer are in the same stable.\\n\\nEach reindeer is in a room that is connected to another room by a corridor with \\\\(W\\\\)\\u00a0meters, where these connected rooms form a stable. The solution, proposed by the elves experts, was that old Santa removed some corridors for the disease to be controlled. To remove a corridor of \\\\(W\\\\) meters is necessary \\\\(W\\\\) hours and as it is very close to Christmas, Santa asked for his help to minimize the time.\\n\\nHelp Santa determine the minimum time as possible so the disease does not\\n\\nSanta's Tip: Initially there is only one stable, meaning all rooms are connected and there is no circular path.\\n\\n\\t\\t\\t\",\n    \"id\": 2834,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers N\\u00a0\\\\((1 \\\\leq N \\\\leq 2 \\\\times 10^{5})\\\\) the number of reindeers and M\\u00a0\\\\((0 \\\\leq M \\\\leq N)\\\\)\\u00a0the number of reindeer that were diagnosed with the disease. Then follow \\\\(M\\n\\\\) integers, where the whole \\\\(M_{i}\\\\) is the index of the sick reindeer's room. Then follow \\\\(N-1\\n\\\\) lines each with three integers U, V, W, where \\\\((U \\\\neq V)\\\\)\\u00a0e \\\\( (0 \\\\leq U, V < N)\\\\) and \\\\((1 \\\\leq W \\\\leq 1 \\\\times 10^{6})\\\\) there is a \\\\(W\\\\)-sized corridor that connects rooms \\\\(U\\\\) and \\\\(V\\\\) (the corridor can be used in either direction).\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Santa's Reindeers\",\n    \"output\": \"\\t\\t\\t\\tThe minimum time for the disease to not spread.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tSo it's Christmas! And Santa Claus needs to perform a series of deliveries of gifts in different locations around the world.\\n\\nFor those who do not know, the reindeers are sick and he will need to use the gas-powered thunder to deliver the presents.\\n\\nA curious fact is that the roads between cities are perfectly straight and there is a gas station in each city. Santa Claus is a very smart guy and, to avoid problems, he fills the tank with a specific value \\\\(X\\\\)  is the value of the largest road between the cities that Santa is traveling, so he knows that he will never run out of gas between the two cities and the gifts will not be stolen. In addition, it always selects the path where the largest road is as minimum as possible.\\n\\nCan you help the Santa Claus determine what \\\\(X\\\\) value of gas he should use?\\n\\t\\t\\t\",\n    \"id\": 2835,\n    \"input\": \"\\t\\t\\t\\tThe first line is composed of two integers N \\\\((1 \\\\leq N \\\\leq 1\\\\times 10^{5})\\\\) and\\u00a0M\\u00a0\\\\((N-1 \\\\leq M \\\\leq min(2 \\\\times 10^{5}, \\\\frac{N \\\\times (N-1)}{2}))\\\\)is the number of cities and the number of roads. Next come\\u00a0\\\\(M\\n\\\\)\\u00a0lines with three integers\\u00a0u, v, w \\\\((u\\\\neq v) (0 \\\\leq u, v < N) (1 \\\\leq w \\\\leq 1 \\\\times 10^{6})\\\\), that there is a road connecting it with weight (you can use the road in any direction). After \\\\(M\\n\\\\)\\u00a0lines, has an integer \\\\(Q\\\\)\\u00a0\\\\((1 \\\\leq Q \\\\leq 1 \\\\times 10^{5})\\\\)\\u00a0 is the number of queries that Santa Claus will perform. Each of \\\\(Q\\\\)\\u00a0lines is composed of two integers\\u00a0 x and\\u00a0y\\u00a0\\\\((0 \\\\leq x, y, < N)\\\\)\\u00a0corresponds to the query: how much\\u00a0\\\\(X\\\\)\\u00a0 gasoline that Santa Claus will need to supply in every city between the cities\\u00a0 \\\\(x\\\\)\\u00a0and\\u00a0\\\\(y\\\\).\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Earth Sled Tour\",\n    \"output\": \"\\t\\t\\t\\t\\nPrint \\\\(Q\\\\) lines each with an integer \\\\(X\\\\)\\u00a0is the answer of the dilemma what Santa Claus is passed.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tThe gems of the infinite are a set of six gems that give the bearer domain over some aspect of the universe: Power, Time, Mind, Space, Reality and Soul.\\nThanos needs to get all the gems to win back his beloved, Mrs. Death.\\nIn order to prevent the terrible tyrant from getting all the gems, Stephen Strange, the Strange Doctor, built a magical labyrinth and hid inside all 5 gems that are not yet under the control of Thanos and challenged the titan to walk by labyrinth and try to get the gems.\\nTo make the challenge even more interesting, some doors and keys were placed inside the labyrinth . For example, the key a opens any door A, the key b opens any door B, and so on.\\nThanos as a good player will not use the powers of the gems until he has all of them, moves one house per second and does not walk diagonally.\\nGiven the labyrinth, determine, if possible, the minimum time spent by Thanos to get all the gems.\\n\\t\\t\\t\",\n    \"id\": 2838,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers N and M (N, M \\u2264 50) that represent the dimensions of the labyrinth. The next N lines contains M characters that describe the labyrinth, the characters are of type:\\n\\n\\n\\t# - wall;\\u00a0\\n\\ta, b, c, d - the types of keys that may exist in the labyrinth;\\u00a0\\n\\tA, B, C, D - the types of doors that may exist in the labyrinth;\\u00a0\\n\\tT - the initial position of Thanos;\\u00a0\\n\\tp, t, m, e, r- the jewels of power, time, mind, space, and reality.\\u00a0\\n\\t. - free space.\\n\\t\\u00a0\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"The Infinity Gems\",\n    \"output\": \"\\t\\t\\t\\tYou should \\u00a0print the minimum time if Thanos can get all the gems, or the message \\\"Gamora\\\" without quotes if he can not get the gems.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tFor some unknown reason Rangel only has a pair of socks of each color.\\nToday he's late to go to college and still needs to get a pair of socks, but the socks are all mess.\\nGiven the number of pairs of socks in Rangel's drawer, he wants to know how many socks he needs to get to have at least one pair of the same color.\\n\\t\\t\\t\",\n    \"id\": 2839,\n    \"input\": \"\\t\\t\\t\\t\\nEach case is composed of the only integer N (1 \\u2264 N \\u2264 105) corresponding to amounts of pairs of socks in the drawer.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"The Rangel Stockings\",\n    \"output\": \"\\t\\t\\t\\tYou should print a line with a single integer that matches the minimum amount of socks that Rangel needs to pick up.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tI hope you are enjoying the competition\\n\\t\\t\\t\\t We the authors (Diego Rangel, Francisco Arcos, Gabriel Duarte and Gustavo Policarpo), we are happy to be trying to solve our problems. For you who are beginner and do not leave the room without any balloon here is a challenge for you:\\n\\n\\n\\tThis year the balloons have a spherical shape, according to the company that produces the balloons: \\\"... for complex engineering reasons, this format is better (...)\\\" will understand ...\\n\\tHowever this format makes the balloon use more helium gas and this caused a problem because the organizer had already bought a tank with L liters of gas before this novelty in the balloon market.\\n\\n\\nKnowing the radius of the balloon model and the amount of helium gas available, could you help the team by saying how many balloons can be filled completely?\\n\\t\\t\\t\",\n    \"id\": 2840,\n    \"input\": \"\\t\\t\\t\\t\\nThe input is composed of two integers R and L (1 \\u2264 R, L \\u2264 109) the radius and the amount of gas available respectively. Consider PI = 3.1415\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Balloon++\",\n    \"output\": \"You must print a single integer representing the amount of balloons that can be filled with the amount of helium gas available.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tDabriel is planning for a party at your company. But one thing he did is that people are not physically satisfied in the same environment as their boss. As a Dabriel company still works in an archaic way, using hierarchies, with the exception of the director, everyone has exactly one boss.\\n\\nWith that in mind, Dabriel has assigned a value to each person who represents how much excitement this will bring to your party. As he wishes this event to be a success, he knows which is the target of animation that he is able to drive the inertia that manifests as a person strategically where the boss is always present.\\n\\nCan you tell what is the maximum value of animation as the most famous guests in a great way?\\n\\t\\t\\t\",\n    \"id\": 2841,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 10\\u2075), representing the number of people in the Dabriel company. The next line will have N integers Xi (1 \\u2264 Xi \\u2264 100, 1 \\u2264 i \\u2264 N), which is the value assigned to person i. The next line will have N-1 integers Pi (1 \\u2264 Pi \\u2264 N, 2 \\u2264 i \\u2264 N), which represents who is the leader of person i. The director of the company is represented with number 1 and, as described in the text, has no boss.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Dabriel and Your Party\",\n    \"output\": \"\\t\\t\\t\\tPrint how much excitement the party can have.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tDabriel is playing with her two wonderful strings, and when doing some operations with them, she realized one thing:\\nthere is always a third string that contains its other two strings as a subsequence.\\n\\nA subsequence is formed by removing some characters, and the remainder remains in the same relative position. For example: The string 'casa' contains as a substring the string 'cs', but does not contain the string 'ac'.\\n\\nAfter some time analyzing these properties, Dabriel realized that to generate the third string it was enough to concatenate the other two, a very trivial thing. Therefore, he asked for his help to determine the size of the smallest string that has both as a substring.\\n\\t\\t\\t\",\n    \"id\": 2842,\n    \"input\": \"\\t\\t\\t\\tThe first line contains the string A (1 \\u2264 |A| \\u2264 1000), and the second line contains the string B (1 \\u2264 |B| \\u2264 1000). They are formed by only the small letters of the alphabet.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Dabriel and Your Strings\",\n    \"output\": \"\\t\\t\\t\\tPrint the size of the smallest string that has strings A and B as subsequences.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gustavo Policarpo, INATEL  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tMatheus and his twin brother Vinicius have decided to expand their tying duel to a major competition in which key players from many parts of the world take part.\\nThe competition takes place in several phases and in each one the participants are placed in a row ordered by their respective indexes and the ith participant will duel with the ith + 1, and the winner advances to the next phase. In case of a tie, the lowest index participant passes. He is declared winner of a duel, the one that can enter a certain phrase faster, that is, the one that obtains the less time resulting from its reaction time added to the time necessary to enter the phrase of that round. In each phase also, the text used will be the previous one concatenated with itself.\\nGiven each competitor's information, please tell us which stage each will reach.\\n\\t\\t\\t\",\n    \"id\": 2843,\n    \"input\": \"\\t\\t\\t\\tThe first line of the entry consists of an integer N representing the number of participants. The next N lines consist of two integers Ri and Ei representing the reaction time and the writing time, that is, the time it takes to type each character regardless of which is, in milliseconds of the i-th participant. The last line consists of the text S used in the first phase of the competition. It is guaranteed that following the rules of the competition all phases will be an even number of participants, except for the last, and that the text S contains only alphanumeric characters, punctuation marks and spaces.\\n\\n1 \\u2264 N \\u2264 65536\\n\\n1 \\u2264 Ri, Ei \\u2264 1000\\n\\n1 \\u2264 |S| \\u2264 100000\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Fast Writing, the Competition\",\n    \"output\": \"\\t\\t\\t\\tThe output should be a line containing the phase number in which each participant arrives.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gustavo Policarpo, INATEL  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tMatheus and his twin brother Vinicius love to fight to see who is typing the fastest. After many years of mourning, they came to the conclusion that the duel is not always won by the one who only types faster, as other factors influence the winner. As each participates in their own home, they have a certain delay to receive and send data from the server. They also have a different reaction time, which can cause some of them to type in later. And of course, each one has its typing speed.\\nGiven the delay regarding the connection of each one, its reaction time, and the speed of writing, who will be the winner?\\n\\t\\t\\t\",\n    \"id\": 2844,\n    \"input\": \"\\t\\t\\t\\tThe input consists of 3 lines. In the first one will be provided three integers Am, Rm, Em, representing respectively the delay time of the Matheus connection, its reaction time and the writing time, that is, the time it takes to type each character regardless of which one , in milliseconds. In the second line will be provided three integers Av, Rv, Ev, with the information of Vinicius. The third and last line consists of a S phrase, containing only alphanumeric characters, punctuation marks and spaces used in the duel.\\n\\n1 \\u2264 Am, Rm, Em, Av, Rv, Ev \\u2264 1000\\n\\n1 \\u2264 | S | \\u2264 100000\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Fast Writing, the Duel\",\n    \"output\": \"\\t\\t\\t\\tYou must inform who will be the winner of the duel, or \\\"Empate\\\" without the quotes if it ends tied.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tGiovana was very happy to be able to send her letter to Santa and receive great gifts. The joy was so great that she resolved to invite all the leprechauns of the good old man to his birthday party that is shortly after Christmas in January. However, she does not want the Grinch to show up at her party to ruin everything so she made a plan.\\n\\n\\t\\t\\t\\tTo hide from the evil Grinch where the party will be, she decided to use the leprechauns' meeting system that works like this: Each leprechauns has a unique numeric identifier and when there is going to be a meeting the house of one of the leprechauns is chosen to host the meeting, but Instead of writing the number of the host leprechaun on the mural of Santa's factory, where everyone can see, it is written the identifier of exactly all the leprechauns with numbers smaller than his and that are coprime to his. This method is also a way of saying that these mural leprechauns must bring food and drinks to the meeting.\\n\\n\\t\\t\\t\\tSince the Grinch is so bad with numbers to the point of not knowing that two numbers are only called coprimes if the GCD (greatest common divisor) between them is 1, Giovana simply sends a letter to the north pole with the numbers of the leprechauns that must take the food and with that the leprechauns can already figure out where the birthday party will be but the Grinch do not.\\n\\n\\t\\t\\t\\tGiven the letter that the leprechauns received, determine in the house of which leprechaun will be Giovana's birthday party.\\n\\n\\t\\t\\t\",\n    \"id\": 2845,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the entry contains an integer N (1 &leq; N &leq; 104) which represents the number of numbers written in Giovana's letter. The second line of the entry has N integers Ai (1 &leq; Ai \\u2264 105) representing the identifiers of the leprechauns written in the letter.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Party at the North Pole\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of a single line containing the number of the leprechaun that will host the party of Giovana in his house.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tThe Fibonacci sequence is one of the most famous sequences in the world. The Fibonacci terms are always equal to the sum of the two terms preceding them in the sequence and the first two terms are 1. That is:\\n\\n\\t\\t\\t\\t1 , 1, 2, 3, 5, 8, 13, 21, 34 ...\\n\\n\\t\\t\\t\\tHowever, we are not interested in finding the terms of the Fibonacci sequence, but the terms of the Fibonot sequence!\\n\\n\\t\\t\\t\\tThe Fibonot sequence is composed of numbers that do not belong to the Fibonacci sequence. More specifically, non-zero positive integers. In ascending order!\\n\\n\\t\\t\\t\\tHere are the first terms of Fibonot:\\n\\n\\t\\t\\t\\t4, 6, 7, 9, 10, 11, 12, 14, 15 ...\\n\\n\\t\\t\\t\\tYour task is to find the K-th Fibonot number.\\n\\n\\t\\t\\t\",\n    \"id\": 2846,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry consists of a single integer K (1 &leq; K &leq; 105) specifying the index of the element of the desired Fibonot sequence.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Fibonot\",\n    \"output\": \"\\t\\t\\t\\tA single integer representing the K-th term of the Fibonot sequence.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gustavo Policarpo, INATEL  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAs you know, or not, Valentine's Day is over. It is very common on that date that couples exchange gifts, in order to show how much they like each other.\\n\\nSuppose you date, and have forgotten to buy such a gift, but have a page of an old magazine and scissors in hand. How many phrases \\\"I love you!\\\" Will you be able to form? Remember the more the better: D\\n\\t\\t\\t\",\n    \"id\": 2847,\n    \"input\": \"\\t\\t\\t\\tThe entry consists of a line describing the page of the magazine you own. Because it is an old magazine, up to 10 ^ 5 characters will be present, being alpha numeric, punctuation marks and spaces.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Paper, Scissors, I Love You!\",\n    \"output\": \"\\t\\t\\t\\tYou should print the number of times you can form the phrase \\\"I love you!\\\" Without the quotation marks.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tAlways after the programming competitions the participants usually interact. Thinking about it, Rangel is developing an interesting game for the participants to play after a competition. This game will be known as the Array\\u00a0 Game.\\nThe Array Game works as follows:\\n\\n\\n\\tA array with\\u00a0N\\u00a0integers is generated randomly and shown for 10 seconds for the challengers.\\n\\tThen follows\\u00a0Q\\u00a0rounds where players must say how many times the\\u00a0Kth smaller\\u00a0element appears in a given range.\\n\\tWin the round closest to the result.\\n\\n\\nThis year Rangel called his friends Gugu and Dabriel to test the new game and asked you to design the judge to say who Kth is their frequency in the break and who wins the ith round.\\n\\t\\t\\t\",\n    \"id\": 2848,\n    \"input\": \"\\t\\t\\t\\tIn the first line consists of two integers\\u00a0N\\u00a0and\\u00a0Q\\u00a0(1 \\u2264\\u00a0N,\\u00a0Q\\u00a0\\u2264 1000) representing the size of the array. The next line contains\\u00a0N\\u00a0integers\\u00a0Xi\\u00a0(1 \\u2264\\u00a0Xi\\u00a0\\u2264\\u00a0232-1) which are the elements of the array. The next\\u00a0Q\\u00a0lines contain five integers\\u00a0L\\u00a0and\\u00a0R(1 \\u2264\\u00a0L\\u00a0\\u2264\\u00a0R\\u00a0\\u2264 N) representing the extremes of the round interval,\\u00a0K\\u00a0which is the smaller\\u00a0Kth element drawn (Kth will always exist),\\u00a0G\\u00a0and\\u00a0D\\u00a0(1 \\u2264\\u00a0G,\\u00a0D\\u00a0\\u2264 232-1) the guess of Gugu and Dabriel respectively.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Rangel and the Array Game I\",\n    \"output\": \"\\t\\t\\t\\tFor each round you should print an integer X that is the smallest Kth, an integer Y that indicates how many times the smallest Kth appears in the range and a character C that should be:\\n\\n\\n\\tG\\u00a0case Gugu wins;\\n\\tD\\u00a0case Dabriel wins;\\n\\tE\\u00a0case of a draw.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tAlways after the programming competitions the participants usually interact. Thinking about it, Rangel is developing an interesting game for the participants to play after a competition. This game will be known as the Array\\u00a0 Game.\\nThe Array Game works as follows:\\n\\n\\n\\tA array with\\u00a0N\\u00a0integers is generated randomly and shown for 10 seconds for the challengers.\\n\\tThen follows\\u00a0Q\\u00a0rounds where players must say how many times the\\u00a0Kth smaller\\u00a0element appears in a given range.\\n\\tWin the round closest to the result.\\n\\n\\nThis year Rangel called his friends Gugu and Dabriel to test the new game and asked you to design the judge to say who Kth is their frequency in the break and who wins the ith round.\\n\\t\\t\\t\",\n    \"id\": 2849,\n    \"input\": \"\\t\\t\\t\\tIn the first line consists of two integers\\u00a0N\\u00a0and\\u00a0Q\\u00a0(1 \\u2264\\u00a0N,\\u00a0Q\\u00a0\\u2264 105) representing the size of the array. The next line contains\\u00a0N\\u00a0integers\\u00a0Xi\\u00a0(-232+1 \\u2264\\u00a0Xi\\u00a0\\u2264\\u00a0232-1) which are the elements of the array. The next\\u00a0Q\\u00a0lines contain five integers\\u00a0L\\u00a0and\\u00a0R (1 \\u2264\\u00a0L\\u00a0\\u2264\\u00a0R\\u00a0\\u2264 N) representing the extremes of the round interval,\\u00a0K\\u00a0which is the smaller\\u00a0Kth element drawn (Kth will always exist),\\u00a0G\\u00a0and\\u00a0D\\u00a0(1 \\u2264\\u00a0G,\\u00a0D\\u00a0\\u2264 232-1) the guess of Gugu and Dabriel respectively.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Rangel and the Array Game II\",\n    \"output\": \"\\t\\t\\t\\tFor each round you should print an integer X that is the smallest Kth, an integer Y that indicates how many times the smallest Kth appears in the range and a character C that should be:\\n\\n\\n\\n\\tG\\u00a0case Gugu wins;\\n\\tD\\u00a0case Dabriel wins;\\n\\tE\\u00a0case of a draw.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Felipe C. Ochial, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tHumberto has a smart parrot. When he has both legs on the ground, the parrot speaks Portuguese. When he lifts his left leg, he speaks in English. Finally, when he raises his right, he speaks French. Nico, Humberto's friend, was fascinated by the animal. In his excitement he asked, \\\"And when he lift both of them?\\\" Before Humberto could respond, the parrot shouted, \\\"Oh, I'll fall, you idiot!\\\"\\n\\t\\t\\t\",\n    \"id\": 2850,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test cases. Each test case consists of a string informing the parrot's leg raising situation. \\u201cdireita\\u201d means his right leg is raised, \\u201cesquerda\\u201d means his left leg is raised, \\u201cnenhuma\\u201d means none of his leg are raised and \\u201cas duas\\u201d means both his legs are raised.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Polyglot Parrot\",\n    \"output\": \"\\t\\t\\t\\tFor each parrot's leg raising condition, print out the language he will use. For English, print \\u201cingles\\u201d, for French print \\u201cfrances\\u201d and for Portuguese print \\u201cportugues\\u201d. If he lifts both legs, print \\\"caiu.\\\" Break a line for each test case.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tRangel is a computer engineer who, in his spare time, loves to create fun games to entertain his friends.\\n\\nOne day, a teacher asked him to create a game that involved data structures so that the freshmen of his university would lose the fear of AEDs (Algorithms and Data Structures).\\n\\nDue to the great difficulty of students with AEDs, Rangel created a game based on the indices of a array and gave the name \\\"Rangel\\u2019s Challenge\\\" (a very interesting game that can be played on any platform).\\n\\nThe Rangel\\u2019s Challenge game works as follows:\\n\\n\\n\\tA array V with n elements is generated;\\n\\tFor every ai  \\u00a0V of the array you need to find an element aj  \\u00a0V that is larger than ai and should appear then ai, that is aj > ai and j > i, and it must be as close as possible to ai. It is possible that there is no aj that satisfy the condition, so the answer is \\u201c*\\u201d;\\n\\tThe player must enter a array M such that | M | = | V | and the game says whether he hit or not.\\n\\n\\nFor example the array V = [1, 4, 7, 5], for a1 = 1 the answer will be 4 which is in position a2, since a2 > a1 and the index 2 > 1 and a2 is closest to a1, a2 = 4 the answer will be 7 which is in the position a3, since a3 > a2 and the index 3 > 2, already for a3 = 7 the answer will be \\u201c*\\u201d since there is no aj (j > 3 and j \\u2264 | V | which satisfies the conditions of the game, the same happens for a4 = 5. Thus the response to be typed in the console is the array M = [4, 7, *, *].\\n\\nRangel has no time to feed the database with the correct answers as he is preparing for a competition and asks you to create the answers for him, because the semester is almost starting and the teacher is waiting for the game.\\n\\nGiven array V, you must create an algorithm that generates the sequence M following the rules of the game.\\n\\t\\t\\t\",\n    \"id\": 2851,\n    \"input\": \"The first line consists of single integer n (1 \\u2264 n \\u2264 100000) which indicates the size of the array.\\n\\nThe next line contains n integers ai (1 \\u2264 i \\u2264 n) which is the ith element of the array (1 \\u2264 ai \\u2264 100).\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Rangel's Challenge\",\n    \"output\": \"\\t\\t\\t\\tPrint n values \\u200b\\u200bseparated by a space following the problem's specifications, if there is no response for the ith element of V, print \\u201c*\\u201d without the quotation marks.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Jessica Dagostini, URI Online Judge  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tJo\\u00e3o and Enzo love encrypt their messages. To do this encrypt, they use the Vig\\u00e8nere cipher. This technique is really similar to the Cesar cipher, however its use a specific key for each letter in a word to be encrypted. The below table shows the ciphering pattern, that consists of the repetition of the alphabet 26 times, one time per row of this table, and in each row, the letters are displaced one space left. This 26 rows correspond to the 26 Cesar ciphers.\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tA random word is chosen as the keyword and each letter of this word indicates a line of the table to use to cipher or decipher the encrypted message. For example:\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tThe text to be ciphered is \\\"computer science\\\";\\n\\t\\t\\t\\t\\tThe key-word is \\\"obi\\\";\\n\\t\\t\\t\\t\\tNow, we should repeat the keyword many times as necessary to compose all the text to be ciphered:\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tcomputer science\\n\\t\\t\\t\\t\\t\\t\\tobiobiob obiobio\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tTo do the encryption of the first letter, we should find the line of the letter \\\"o\\\" in the table, and look for the column of the first letter of the text to encrypt, \\\"c\\\". To the second letter, we should find the line of the letter \\\"b\\\" on the column \\\"i\\\", and so on, up to we find as result:\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tqpudvbss aqjmbdm\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tOnce that do the encryption of all words in a message is a hard work, Jo\\u00e3o and Enzo chosen to encrypt only words that initiate with a consonant letter. For this reason, they just apply the keyword on the words that they want to encrypt.\\n\\t\\t\\t\\tGiven a keyword and a text message, your task is to encrypt this message with Vig\\u00e8nere cipher according to the Jo\\u00e3o and Enzo added rule.\\n\\t\\t\\t\",\n    \"id\": 2852,\n    \"input\": \"\\t\\t\\t\\tThe first line of the input consists of a keyword K (3 \\u2264 K \\u2264 45), that represents the key to the cipher. This word is just composed by the alphabet (a-z) in lowercase, without spaces. The next line contains an integer N (1 \\u2264 N \\u2264 150) that indicates how many messages we need to encrypt. The next N lines are the messages. These messages do not pass 105 characters and they are composed by the alphabet (a-z) in lowercase and by spaces.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Messaging\",\n    \"output\": \"\\t\\t\\t\\tThe output should display the encrypted message according to the friends rule.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tBibika, a nice mineira, was expelled from Brazil because she was bothering Brazilian politicians with her miraculous inventions. His last invention was the VDH (Honesty Virus) which, when in contact with a human, would make him an honest person forever (it would even work with politicians!).\\n\\nAfter a few months wandering from country to country, she got a fixed home in China. One fine day, while taking photos at the Wall of China, she had an idea of how to spread the VDH in Brazil. Her idea was to spread some invisible robots (yes, she invented invisible robots) in the cities of Brazil and these robots would launch the VDH gradually (so it would not call so much attention) until all of Brazil was infected.\\n\\nWe will see Brazil as a\\u00a0NxM grid, where in some cells of this grid there will be a robot equipped with the VDH.\\n\\nA robot is able to launch the virus to the four directions (North, South, East and West) and initially has a release power of 1. This means that on the first day it will infect 1 cell in each direction. With each new day its power increases by one unit, causing the robot on the third day, for example, to infect up to 12 cells, 3 in each direction.\\n\\nHere is an example of the positions infected by a robot, represented by the character @, in a total of four days:\\n\\n\\n\\nEven after inventing the virus of honesty and invisible robots, Bibika does not know how many days it will take to infect the entire Brazilian territory, given a robot configuration. It is worth mentioning that cells that have robots are already automatically infected.\\n\\nYour task is to help her in this mission or to say that it is not possible to infect all Brazil given the configuration of robots of Bibika.\\n\\t\\t\\t\",\n    \"id\": 2853,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers N and M (1 \\u2264 N, M \\u2264 1000), representing the size of the map of Brazil.\\nEach of the next  N lines will contain  M characters '#' or '@', where '#' represents any area of Brazilian territory and '@' represents an area with an invisible robot from Bibika.\\n\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Bibika's Inventions\",\n    \"output\": \"\\t\\t\\t\\tDisplay a single integer, the number of days that will be needed to infect the entire Brazil. If this is impossible, print -1.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Neilor Tonin, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tAmindo needs your help. He is working on a project based in some old documents (scattered and not organized, of course) in which he wants to identify and draw genealogic trees of different families.\\n\\n\\t\\t\\t\\tSee the image below: Pedro is Maria's Husband and they have three children: Josias, Mangojata and Samuel. Obviously Maria is mother of Mangojata and Samuel. Josias is Mangojata's brother and Mangojata is the mother of Ivane. Samuel is his uncle. There is also another different family with 2 persons, in which Paulo is Marcos's son.\\n\\n\\t\\t\\t\\t  \\n\\n\\t\\t\\t\\tYour help is very important in this work in order to identify how many different families exist based on existent documentation and relations provided by Armindo. In the image you can see 2 differents families: Pedro Family's and Marcos Family's.\\n\\t\\t\\t\",\n    \"id\": 2854,\n    \"input\": \"\\t\\t\\t\\tThe input consists of a single test case that contains many rows (can have up to a thousand rows). The first line contains two integers M  (1 < M \\u2264 300) and N  (1 < N \\u2264 200) that indicates respectively the amount of different people and the existent relationships between them. Each of the next N relationships (listed below), contains three words: a person's name followed by a relation and another name, all separated with space (there is no space after the last name).\\n\\n\\t\\t\\t\\tNote: there will never be a name representing two different people. If there are 2 Pedros, for example, they will be identified by Pedro_1 and Pedro_2 and so on,\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Family Tree\",\n    \"output\": \"\\t\\t\\t\\tThe output consist of a single integer representing the number of different families encountered, based on the documents provided by Armindo.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Felipe C. Ochial, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tA lucky number is a number in a given sequence that survives the following exclusion process: Initially every second element is deleted. After that, every third element is deleted and so on until the number in question is in a lower position than the next index to be deleted.\\n\\nFor example, in the sequence [1,2,3,4,5,6,7,8,9,10,11,12,13 ...] we would like to know if the numbers 7 and 9 are lucky. After the first pass we will have [1,3,5,7,9,11,13 ...], after the second pass we will have [1,3,7,9,13 ...]. After the fourth pass [1,3,7,13...]. Thus we can conclude that the number 7 is lucky and that the number 9 is an unlucky number in this sequence.\\n\\nAlfredo enjoyed the game but is tired of erasing and rewriting each sequence to find out what the lucky numbers are. Can you write a program to determine if given number in a sequence is a lucky number?\\n\\t\\t\\t\",\n    \"id\": 2855,\n    \"input\": \"\\t\\t\\t\\tThe input is composed by several test cases. Each test case is composed by an integer N(0<N<305000) that determines how many numbers there are in the sequence. After this follows N integers Ni(0<Ni<305000) in ascending order. Finally, an integer M(0<M<305000) which represents the sequence digit to be tested.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Lucky Numbers\",\n    \"output\": \"\\t\\t\\t\\tPrint \\\"N\\\" if the tested number is not a lucky number and \\\"Y\\\" otherwise. Break a line after each test case.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tAdson, tired of staying at home, decided to take a motorcycle trip through Brazil. He prepared himself for weeks by writing down all the cities he would visit and all the points he would stop to eat on the road. Adson decided he would stop only at the cheese bread stalls of the famous company  ScB (Stuffed Cheese Breads).\\u00a0\\n\\nConcerned not to spend too much on the cheese rolls, he noted only the places where they sold with the famous \\\"Take X Cheese Breads and Pay  Y Reais\\\".\\n\\nAdson defined R reais to spend on the cheese breads. Since gasoline is already too expensive, he needs your help to choose which stalls to stop to buy stuffed cheese breads so that you can buy as much as possible with a maximum of R reais.\\n\\nThe company ScB sells cheese bread with three different types of fillings: \\\"Bacon, Cheddar or Guava\\\". Adson thinks it is not a good idea to mix all three types on his trip and decided that he will buy cheese breads from at most two different types of filling.\\n\\nGiven the information on the number of N stalls along the trip, the amount of R reais that Adson owns, and the type of promotion each stall sells  \\\"Take X Cheese Breads and Pay Y Reais\\\", your task is to help him by saying how much cheese bread can he buy without breaking the rule of buying a maximum of two different types. Consider that he can not buy more than once in the same tent.\\n\\t\\t\\t\",\n    \"id\": 2856,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers N and R,\\u00a0(1 \\u2264\\u00a0N, R\\u00a0\\u2264 1000),  representing the quantity of stuffed cheese bread stalls and the amount of money(reais) Adson has for this purpose. Each of the next N lines will contain three integers X Z Y representing the information of the promotion of a tent: X cheese breads with stuffing Z for only Y reais.\\u00a0(1 \\u2264\\u00a0X, Y\\u00a0\\u2264 100) and Z = 'B', 'C', ou 'G', representing Bacon, Cheddar and Guava, respectively.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cheese Bread Trip\",\n    \"output\": \"\\t\\t\\t\\tDisplay a single integer, the largest quantity of cheese breads, of at most two different types, that Adson can buy without exceeding his budget. \\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy D\\u00e2mi Henrique, Inatel  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tEmployees of the AHDCW (Association of Human Density Control in Wagons) are working to generate some statistics on how many people use trains as a means of transportation and how they choose which wagon to enter.\\n\\nThey noted, from time to time, how many people got into certain wagons. To generate satisfactory data, employees need to know at certain times how many different people are within two ranges of wagons.\\n\\nThey need your help and all they gave you was a spreadsheet with the number N of wagons (from 1 to  N from left to right), and the M activities that occurred on the day. The activities can be type 1 or type 2:\\n\\n1 X Y\\u00a0- Means that  Y people got into the X wagon.\\n2 A B C D\\u00a0- It means that they want to know the number of different people in the wagons of the intervals  [A, B] and [C, D].\\n\\nConsider that initially all wagons are empty.\\n\\nFollows an illustration of the wagons at one point:\\n\\n\\n\\nIf there is an activity of type 2 with (A=2, B=4, C=3, D=5),  the answer will be 8, since there are 8 distinct people in these two intervals.\\n\\t\\t\\t\",\n    \"id\": 2857,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers N and M\\u00a0(1 \\u2264\\u00a0N\\u00a0\\u2264 105) and\\u00a0(1 \\u2264\\u00a0M\\u00a0\\u2264 N).\\u00a0 Each of the next  M ines will contain an activity of type \\\"1 X Y\\\"\\u00a0 (1 \\u2264\\u00a0X\\u00a0\\u2264 N and\\u00a01 \\u2264\\u00a0Y\\u00a0\\u2264 100) or type 2 \\\"2 A B C D\\\" (1 \\u2264\\u00a0A, B, C, D\\u00a0\\u2264 N and\\u00a0A \\u2264 B and\\u00a0C \\u2264 D),  both described above.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"SpeedWagon Flow\",\n    \"output\": \"\\t\\t\\t\\tFor each type 2 activity, display the total number of different people in the given intervals.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\t\\tLevi and William have always enjoyed playing chess so they play whenever they can. But over time they invented their own variations. Just to challenge each other in new ways. One of the most interesting is the \\\"infinity row\\\".\\n\\n\\t\\t\\t\\t\\t\\n\\n\\t\\t\\t\\t\\tIn this version of chess, each player only has a single piece and his goal is to place it in a house adjacent to the initial, either to the left or to the right. The one who manages to do this in fewer moves wins.\\n\\n\\t\\t\\t\\t\\tThe difficulty lies in the movement restrictions of the piece. It can only move in a single line, that is, horizontally, and with each move a player can only move his or her D houses to the right or  E  houses to the left. It's a tricky game, though, to lighten up things a little, they made a program to simulate the board since they would like it to be infinite. Hence the name of the game.\\n\\n\\t\\t\\t\\t\\tOf course, after a few games, the question began to arise: What is the minimum amount of movement to achieve the goal of the game?\\n\\n\\t\\t\\t\\t\\tAs William and Levi, despite curious about the answer, are busy playing, your task is, given the number of houses of a movement to the right and the number of houses of a movement to the left, calculate the minimum number of moves to put the piece in a house adjacent to the initial or inform you that it is not possible to do so.\\n\\t\\t\\t\\t\",\n    \"id\": 2858,\n    \"input\": \"\\t\\t\\t\\t\\tThe input is compose of two integers D and E (1 \\u2264 D,E \\u2264 106) in accordance as described in the text\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Infinite Board\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output consist of one line containing the minimum number of moves if it's possible or the the message \\\"IMPOSSIVEL\\\" if it's not.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\t\\tA Digit Root is a feature of numbers used in mathematical recreation, but can also be used to check the results of simple operations such as sum and multiplication. One of its main properties is that the Digit Root of a number is always equal to Digit Root of the sum of its digits.\\n\\n\\t\\t\\t\\t\\tFor example, the Digit Root dofe 18446744073709551615 is the same as 87 because 1+8+4+4+6+7+4+4+0+7+3+7+0+9+5+5+1+6+1+5=87 is the same of 15 because 8+7=15, which in turn is the same as 6, since 1+5=6. Therefore the Digit Root of all these numbers is 6 since 6 is its own  Digit Root.\\n\\n\\t\\t\\t\\t\\tYour task is, given the two integers, B and E, calculate the Digit Root of BE (B raised to th E-th power).\\n\\t\\t\\t\\t\",\n    \"id\": 2859,\n    \"input\": \"\\t\\t\\t\\t\\tThe input consists of two lines. The first contains the number B (1 \\u2264 B \\u2264 10105). The second contains the number E (1 \\u2264 E \\u2264 10105).\\n\\t\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Digit Root\",\n    \"output\": \"\\t\\t\\t\\t\\tThe output consists of a single line containing theDigit Root.\\n\\t\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Giovanna Kobus Conrado, Universidade de S\\u00e3o Paulo  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tThe kingdom of Spar-Ta has grown a lot in the last few years. The king, not being able to oversee all the cities anymore, is going to send representatives to some of them.\\n\\nThe kingdom is composed of n cities connected by bidirectional road in such a way that there is a unique path between every pair of them. The king will build a new road connecting two currently unconnected cities and choose the cities he is going to send his representatives to.\\n\\nFor\\u00a0bureaucratic reasons, the representatives must be in constant communication, so the king demands that each one of them can contact two others at neighbouring cities. Of course, money is finite, so no city can have more than one representative and the number of cities with representatives must be as low as possible.\\n\\nIf there happens to be any issues in any city of the kingdom, the representative\\u00a0that lives the nearest from it must go there to check on the situation. The king fears, though, that if he takes too long the citizens of that city will get mad and might challenge peace in the kingdom. Your work is to determine, for every road the king considers building, what is the largest distance between a city and it's nearest representative.\\n\\t\\t\\t\",\n    \"id\": 2860,\n    \"input\": \"\\t\\t\\t\\tThe fist line of input consist of a number t (t <= 10): the number of test cases.\\n\\nEach case starts with a line that contains the number n\\u00a0(2<=n<=100000): the number of cities in the kingdom.\\n\\nThe following n-1 lines cointain two integers a and b\\u00a0(0<=a,b<n), which means that cities a and b are connected by a road.\\n\\nThe next line contains a number q\\u00a0(0<=q<=100000), the number of roads the king considers building.\\n\\nThe following q lines contain two integers i and j\\u00a0(0<=i,j<n), which means the king considers building a bidirectional road from city i to city j. It's guaranteed there is currently no road connecting i and j\\u00a0and this road should not be taken into account in the following queries.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Peace in Spar-Ta\",\n    \"output\": \"\\t\\t\\t\\tFor each road the king considers building, output the maximum distance from a city to it's representative.\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tCacunda, Bizz and Massacote are inseparable friends. In college, in a few days, they did not go to class to play tricks. One day a teacher was passing by. At the same time, the three of them shouted the word \\\"gzuz\\\" loudly. After this cry, they became invisible, and the teacher did not see them. Again, their class was answering questions from the teacher. When it was the turn of one of them, they would respond with the word \\\"gzuz\\\", and the teacher would accept the answer and give the maximum mark of the question. Make the simulation of the output they found to get out of the most diverse problems.\\n\\t\\t\\t\",\n    \"id\": 2861,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line contains an integer C (2 <= C <= 99) relative to the number of questions the teacher has asked. The following C lines come with a question asked by the teacher.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"The Output\",\n    \"output\": \"For each question, print the answer that was said by the three friends.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tDevita is the prince of the Calsadins. Together with Pana, they go after Tataroko, the birth name of Kogu, to try to dominate the world. It has a tracker that measures the energy level of any living being. All beings with the level less than or equal to 8000, it considers as if it were an insect (\\\"Inseto\\\"). When he passes this value, which was the case of Kogu, he is astonished and shouts \\\"Mais de 8000\\\", that means\\u00a0\\\"It's over 8000\\\". Based on this, use the same technology and analyze the energy level of living things.\\n\\t\\t\\t\",\n    \"id\": 2862,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line contains an integer C relative to the number of test cases. Then there will be C rows, with an integer N (100 <= N <= 100000) relative to the energy level of a living being.\\n\\n\\t\\t\\tOutput\\n\\n\\t\\t\\t\\n\\t\\t\\t\\tFor each value read, print the corresponding text.\\n\\t\\t\\t\\n\\n\\t\\t\\t\\n\\n\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tInput Sample\\n\\t\\t\\t\\t\\t\\tOutput Sample\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t3\\n8001\\n100\\n200\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tMais de 8000!\\nInseto!\\nInseto!\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\n\\n\\t\\t\\t\\n\\t\\t\\t\\tVIII Olimp\\u00edada Interna de Programa\\u00e7\\u00e3o do IFSULDEMINAS - OLIP 2018\\n\\t\\t\\t\\n\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Insect!\",\n    \"output\": \"\\t\\t\\t\\tFor each value read, print the corresponding text.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tUmil Bolt is an excellent runner. His specialty is the 100-meter race. Every day, he makes a battery of attempts to run this test in an ever faster time. It can be seen that, depending on the number of attempts, its performance improves or worsens. About this, he asks for your help to calculate the fastest attempt of each daily battery.\\n\\t\\t\\t\",\n    \"id\": 2863,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line of each test case contains an integer T (2 <= T <= 99) relative to the number of trials of a day. The following T lines contain a real number Ti (9 <= Ti <= 11) relative to the time, in seconds, of the ith battery attempt. The entry ends with end of file.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Umil Bolt\",\n    \"output\": \"\\t\\t\\t\\tFor each test case of your program entry, you must print a real number containing the time of the fastest attempt of each battery.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tNick is a scientist who travels through several parallel universes along with his grandson, Mory. In one of these universes, there was a television program, which rewarded those who guessed the maximum heights of fruit pitches. At this location, the fruit mass did not influence the maximum height of the pitch. Nick calculated the angle of the pitch, which always formed a parabola, and extracted a second-degree function from the trajectory. Help Nick and Mory win many awards in this program.\\n\\t\\t\\t\",\n    \"id\": 2864,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line contains an integer T (2 <= T <= 99) relative to the number of test cases. The following T lines have three integer values \\u200b\\u200bA (A < 0), B and C (-100 <= B, C <= 100), representing the coefficients of a second degree function, in the form ax2 + bx + c.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"How Tall is It?\",\n    \"output\": \"For each entry test case in your program, you should print a real number, to the nearest two decimal places, the maximum pitch height of a fruit.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tSheldon is a scientist who loves numbers. His preferred number is number 73. One of the many reasons for this preference is that this number, in binary form, forms a palindrome (1001001), that is, the number written backwards is the same as the original form . Not every number forms a palindrome in binary form, but with a minimal calculation, that number can be transformed into a binary palindrome. For example, the number 6 does not form a binary palindrome (110), but simply add 1, that is, by making 7, form (111). Thus, given a given integer, what is the minimum operation required to make the number a binary palindrome(operation with as smaller number possible).\\n\\t\\t\\t\",\n    \"id\": 2865,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line contains an integer C relative to the number of test cases. The next C lines have an integer N (1 <= N <= 10000)\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Binary Palindrome\",\n    \"output\": \"\\t\\t\\t\\tFor each test case of your program input, print an asterisk, - if the number is already a binary palindrome, - or the symbol of the calculation to be made, followed by a space, accompanied by the number of the respective calculation, so that make it a binary palindrome. If there is more than one calculation with the same number, follow the order of priority: +, -, x, /.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Strings\",\n    \"description\": \"\\t\\t\\t\\tCesar is a detective who investigates a series of robberies that happen in his city. Everywhere a crime happens, the person who committed such a crime leaves a written message, consisting of uppercase and lowercase letters. Cesar was able to find a pattern in these messages and now extracts hidden text from each message and asks for his help in trying to find out who is committing such crimes.\\n\\t\\t\\t\",\n    \"id\": 2866,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line contains an integer C (2 <= C <= 99) relative to the number of test cases. In the following C lines, there will be coded messages, all with the same pattern with respect to the example below.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Cryptotext\",\n    \"output\": \"\\t\\t\\t\\tFor each test case in your program, you must print the extracted text from the original message.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tGiven two integers, n and m, how many digits have nm?\\n\\nExamples:\\n\\n2 and 10 - 210 = 1024 - 4 digits\\n\\n3 and 9 - 39 = 19683 - 5 digits\\n\\t\\t\\t\",\n    \"id\": 2867,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line has an integer C, representing the number of test cases. The following C lines contain two integers N and M (1 <= N, M <= 100).\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Digits\",\n    \"output\": \"For each input test case of your program, you must print an integer containing the number of digits of the result of the calculated power in the respective test case.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tBig Tausfo presents a television program which gives prizes to participants who respond correctly to mathematical calculations. When participants fail, it highlights how far the response is expected. Taking into account only the wrong answers, help the Tausf\\u00e3o by informing how the participant's error should be pronounced.\\n\\t\\t\\t\",\n    \"id\": 2868,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line contains an integer C, representing the number of test cases. The next C lines will consist of an integer, followed by a space, an operation character (addition, subtraction, or multiplication), another integer, plus a space, an equal sign, another space, and finally a number integer, representing the result said by the participant in relation to said calculation of the test case.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Wrrrong!\",\n    \"output\": \"\\t\\t\\t\\tFor each entry test case of your program, print the phrase \\\"Errou\\\", that means \\\"Wrong!\\\" based on the distance of the participant's answer to the correct answer.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Martins, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\t1 is a divisor of 6. In addition to 1, it has 3 more divisors of 6: 2, 3 and 6. In total, 6 has 4 divisors, and it is the smallest number that has 4 divisors. Talking about divisor, given a number n, what is the smallest number that has n divisors?\\n\\t\\t\\t\",\n    \"id\": 2869,\n    \"input\": \"The input is composed of several test cases. The first line contains an integer C, with the total of test cases. The following C lines have an integer N (1 <= N <= 100).\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Talking about Divisor ...\",\n    \"output\": \"\\t\\t\\t\\tFor each input test case in your program, you must print an integer containing the smallest number that has N divisors. Some values \\u200b\\u200bwill have relatively large numbers. In this way, print in the form of MOD 1000000007\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Jos\\u00e9 Wagner de Andrade Junior, UNIFEI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tJ\\u00fanior and Thiago always got bored after the twelfth hour of travel to one of the several competitions that participate. In one of their trips to one of these several competitions, they decided to create a game. Any game would be boring. Until J\\u00fanior came with the following game idea: J\\u00fanior had on his cell phone a map with some cities and connections between them. Since Junior has a certain type of OCD, he ensures that for the map to look beautiful, all circuits in that graph are even.\\r\\n\\r\\nInitially Junior will put a mark on some city. After the first movement, Thiago and J\\u00fanior will alternate their movements respectively. At each round, a player will place a mark on a city immediately adjacent to a mark of the other player. As the map has a finite number of cities, at some point it will no longer be allowed to mark any city. The player who can no longer perform moves is declared a loser, and must bring a cheese loaf sometime during the next marathon.\\r\\n\\r\\nJ\\u00fanior created the game, and now he wants to know. Given the map, can you tell who will win the game when both play optimally?\\n\\t\\t\\t\",\n    \"id\": 2870,\n    \"input\": \"\\t\\t\\t\\tThe first line will contain two integers N (1 \\u2264 N \\u2264 105) and M (1 \\u2264 M \\u2264 2 x 105) which are the number of cities and the number of roads linking two cities. The paths are two-way. The next M lines contain xi and yi (1 \\u2264 xi; yi \\u2264 N), which are the ends of a path connecting the vertices xi and yi\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Map Game\",\n    \"output\": \"\\t\\t\\t\\tShow a line containing the name of the winning player (\\\"Junior\\\" or \\\"Thiago\\\"). Remembering that the first player to make a move is Junior, and he can put a mark on the city he wants initially.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Daniel Correia, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tJhin owns several farms. Each farm, besides having many livestock creations, also has large coffee plantations. In the midst of profits, expenditures, and crop yields each year, Jhin found it necessary to predict the productivity of each crop in coffee bags based on approximate values \\u200b\\u200bof the production of each stand of coffee. Jhin hired a programmer to solve the problem. The programmer proposed that each crop is represented by a matrix in which the coffee grounds are represented by each cell. Each cell (coffee plant) of the matrix (crop) is filled with the values \\u200b\\u200bof how many liters (in grains) of coffee the foot will produce in that year.\\n\\nAssuming that each bag is equivalent to 60 liters of coffee, Jhin needs to know how many sacks and how many liters each crop will produce that year. However, the programmer is a beginner and now needs your help to implement the logic that he developed to solve the problem.\\n\\t\\t\\t\",\n    \"id\": 2871,\n    \"input\": \"The input is composed of several test cases. The first line contains two integers M (2 <= M <= 99) relative to the number of rows and N (2 <= N <= 99) related to the number of columns the array has. The matrix is \\u200b\\u200bcomposed of integers (0 <= matrix [M] [N] <= 60). The input ends with end of file.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Coffee Harvest\",\n    \"output\": \"\\t\\t\\t\\tFor each incoming test case of your program, print an integer containing the number of bags of coffee concatenated with the string \\\"saca(s) e \\\" concatenated with an integer containing the leftover coffee in liters concatenated with the string \\\" litro(s) \\\".\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Daniel Correia, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tThe Transmission Control Protocol (TCP / IP) is a set of communication protocols in a network of computers for transmission of packets on the network. TCP is a \\\"trusted\\\" transport mechanism for providing a byte from the destination host (computer or device with network access) to the source host confirming that the packet was successfully received. The transfer is done by dividing the data into packets and sending one packet at a time. Another important feature of the TCP protocol is that since packets can be sent by different paths, packets can reach the target host out of order. Therefore, TCP orders the packets on the destination host so that the application is viewed on the monitor.\\n\\nAssuming you are creating the TCP protocol, develop the algorithm that from the arrival of the sent packets, the same packets will appear in the destination host monitor, but in an orderly manner. Assume that bit \\\"1\\\" is sent to initiate the transfer and bit \\\"0\\\" to finalize the transfer of the packets.\\n\\t\\t\\t\",\n    \"id\": 2872,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line contains an integer \\\"1\\\" (without quotation marks) indicating the start of the transfer. The second and next lines contain the word \\\"Package\\\" concatenated with a 3-digit integer P (001 <= P <= 999), which identifies the packet. There are packages with equals identifiers! The reading of the test case packets is terminated with the last line of the test case containing an integer \\\"0\\\".\\u00a0The input\\u00a0ends with end of file.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"TCP/IP Protocol\",\n    \"output\": \"\\t\\t\\t\\tFor each test case of your program inpuy, you must print all packets sent in an orderly fashion followed by a empty\\u00a0line.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Daniel Correia, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"According to some historians, Tales probably spent a period of his life in Egypt and Babylon, devoting himself to research in contact with astronomers and mathematicians. In the period in which it passed in Egypt, it was realized that the Egyptians could not calculate the height of a great pyramid of Cheops and presented a solution to the problem. Tales supposed that the rays of the Sun are parallel when they reach the Earth, because of the distance that separates it from the Sun. (A.J. Philippi .; M.A. Romero; G.C. Bruna (editors)). Let us consider that Tales has chosen a position of illumination of the Sun, such that it is possible to calculate the height of the pyramid given the value of A in meters (width of the pyramid), the value of B in meters (length of the leftover pyramid), of C in meters (the height of any rod) and the value of D in meters (rod length), as shown in the figure.\\n\\n\\n\\nSuppose we go back in time and that Tales has now been hired by the Egyptians to calculate the height of all the pyramids in Egypt. However, he does not understand much of programming and asked for his help to develop a system that allows him, through his Tablet, to enter with the data that is provided and the system generate the height of the pyramid.\\n\\t\\t\\t\",\n    \"id\": 2873,\n    \"input\": \"The input is composed of several test cases. Each test case has a single line containing a real value A (2 <= A <= 10000), a value B (2 <= B <= 20000), a value C (1 <= C <= 100) and a value D (1 <= D <= 200). The data entry is finalized when the values \\u200b\\u200bA = 0, B = 0, C = 0 and D = 0 are read.\\n\\t\\t\\t\",\n    \"level\": \"Level 4 / 10\",\n    \"name\": \"Pyramid\",\n    \"output\": \"For each test case in your program, you must print a single line containing a real number with five decimal digits.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Daniel Correia, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"Jhin is a young man born in the generation where computers were already part of people's lives. Like many of his friends, he knows how to use current technologies very well. But he did not just want to know how to use it, he wanted to know how computing worked. After studying a little of the origin of the computer, Jhin realized that the computer system is not as simple as it seems to be. In the midst of some of his research, he realized that the computer uses a binary or two base system, represented by zeros and ones (0 and 1). Jhin has discovered that we can convert binary numbers to decimal numbers and that we can use a decimal value to match a character according to the ASCII table.\\n\\nJhin found interesting the idea of \\u200b\\u200bhow the computer understands what we typed and decided to develop a translator in which it would enter with values \\u200b\\u200bin binary and the program would return the phrase equivalent to the binary code typed. Jhin was able to develop the program, however, he challenged you programmer to solve the same problem.\\n\\t\\t\\t\",\n    \"id\": 2874,\n    \"input\": \"The input is composed of several test cases. The first line of the test case contains an integer N (1 <= N <= 100000), the next N lines contain a String B (00000001 <= B <= 11111111). The entry is terminated with the end of the file.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Binary Phrase\",\n    \"output\": \"\\t\\t\\t\\nFor each test case of your program, print a single line where you will see a sentence containing all the characters related to your test case.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Daniel Correia, IFSULDEMINAS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tJhin loves to play with 2D games. One of his favorites is the game Tunnel, which by the way was created by himself. The game works as follows: A random array is given by 0s and 1s. The cells filled by 0s indicate the path that the object X must pass until there is no more 0s to be walked. Cells filled by 1s indicate obstacles in which object X can not pass.\\r\\n\\r\\nAs Jhin is still learning to program, he asked for his help to implement the game, and the goal is to declare that object X always be the start, directed to front, printing the necessary instructions the instructions necessary for X to reach the last cell 0.\\r\\n\\r\\nAssume that the instructions are: F (Front), L (Left) and R (Right).\\n\\t\\t\\t\",\n    \"id\": 2875,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. Each case starts with a line containing an integer M (2 <= M <= 100) and an integer N (2 <= N <= 100) representing M rows and N matrix columns of 0s and 1s. Next, we give the matrix M x N that represents the path and obstacles.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Tunnel Game\",\n    \"output\": \"\\t\\t\\t\\tThe output should be composed of a line for each test case, containing all instructions generated by the game, separated by a space. After the last, you must put the letter E (end)\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fabiano S. Oliveira, UERJ  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tIt is well known the provocation that Tasco, one of the best soccer teams in Brazil, is always runner-up of the competitions in which it participates. While this is a compliment (being in such a high position with regularity is indeed a merit!), the Brazilian's inclination to value only the winner leads to the provocative effect to this statement. Of course, this is just another of the countless jokes that are part of the soccer folklore, but Eurico, a Tasco fan, decided to check whether there is any basis in it once and for all, analyzing the historical record of all the competitions in which Tasco participated.\\n\\t\\t\\t\",\n    \"id\": 2889,\n    \"input\": \"\\t\\t\\t\\tThe first line of the input consists of the integer 2 \\u2264 N \\u2264 106 which is the number of teams. Each team is labeled by a distinct number from 1 to N, number 1 being reserved for Tasco. In the sequence, there are data from several championships. The first row of each championship is formed by the integer 1 \\u2264 M \\u2264 105 which represents the number of matches occurred in such a championship. Each of the following M lines has the data of a match, in the format \\\"Team1 Score1 Team2 Score2\\\", where 1 \\u2264 Team1, Team2 \\u2264 N are the codes of the teams that disputed the match and 0 \\u2264 Score1, Score2 \\u2264 100 are their respective numbers of goals. The score of each team in a championship is the sum of the points obtained in each match of the championship. In a match, the score for the team that gets the victory is 3 points, the tie is 1 point and the defeat is 0 points. A team is ahead of another in the championship if they have more points or, in the case of the same number of points, if they have a higher number of goals or, in case of the same amount of goals, if its code is smaller than the other. The end of the championship entry is characterized by reading the value 0 as value of M.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Tasco Is Always Runner-up!\",\n    \"output\": \"\\t\\t\\t\\tIn a single line, one should write \\\"Y\\\" if Tasco is indeed one of the teams that were more times runners-up considering all the championships, or \\\"N\\\" otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Paulo E. D. Pinto, UERJ-Universidade do Estado do Rio de Janeiro  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tA designer invented a brand for a company in tetrahedron form. He has several colors available to paint and want to know how many different ways a tetrahedron\\u00a0can be colored using any combination of\\u00a0\\u00a0colors\\u00a0\\u00a0on\\u00a0\\u00a0the\\u00a0\\u00a0faces\\u00a0\\u00a0of\\u00a0\\u00a0the same. Note that, if by convenient rotations, the coloring of two tetrahedra match, then it is the\\u00a0same coloration.\\n\\nHelp this designer do this calculation.\\n\\u00a0\\n\\t\\t\\t\",\n    \"id\": 2890,\n    \"input\": \"\\t\\t\\t\\tEach input line contains an integer N, 1 \\u2264\\u00a0\\u00a0N\\u00a0\\u00a0\\u2264\\u00a0\\u00a0104\\u00a0, the number of colors available.\\u00a0The input ends with a value of 0, which should not be processed.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Coloring Tetrahedrons\",\n    \"output\": \"\\t\\t\\t\\tFor each input, print the number of distinct colorings of the tetrahedron\\u00a0\\u00a0with the\\u00a0given number of colors. As the result can be very large, present it as the rest of\\u00a0the division by 1000007.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Paulo E. D. Pinto, UERJ- Universidade do Estado do Rio de Janeiro  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Computational Geometry\",\n    \"description\": \"\\t\\t\\t\\tPaul Erd\\u0151s was a noted Hungarian mathematician who published 1475 articles\\u00a0in several areas. He gave the name of \\\"Theorem of the Happy End\\\" to the following theorem proved\\u00a0\\u00a0by him and some friends:\\n\\n\\\"Given 5 points in the plan, not collinear three to three, four of them always\\u00a0form a convex quadrilateral. \\\"\\n\\nThe name of the theorem is due to the fact that one couple of friends who worked on it ended up\\u00a0getting married. Many mathematicians worked on the generalization of this problem, which still\\u00a0was not achieved.\\u00a0In this problem you will prove the theorem and, hopefully, with total happiness! Are given\\u00a05 points, not collinear three to three, and you should find the area of the largest convex quadrilateral\\u00a0involving 4 of the given points.\\n\\t\\t\\t\",\n    \"id\": 2891,\n    \"input\": \"\\t\\t\\t\\tEach input line contain 10 even integers\\u00a0X1, Y1, X2, Y2, X3, Y3, X4, Y4, X5, Y5, 0\\u00a0 \\u2264\\u00a0\\u00a0Xi, Yi\\u00a0 \\u00a0\\u2264 \\u00a0103, 1\\u00a0 \\u2264\\u00a0 i\\u00a0 \\u2264\\u00a0 5, where each pair Xi, Yi\\u00a0\\u00a0represents the coordinates of each one of the five points. The input ends with 10 values 0 that should not be processed.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"A Problem With A Happy Ending\",\n    \"output\": \"\\t\\t\\t\\tFor each input, print the area of the biggest convex quadrilateral that can be formed with 4 of the 5 points given.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Paulo E. D. Pinto, UERJ-Universidade do Estado do Rio de Janeiro  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Mathematics\",\n    \"description\": \"\\t\\t\\t\\tThree cyclists are training on the velodrome for the next Olympics.\\u00a0\\u00a0They start up together and make thousands of\\u00a0 laps every day, on a regular basis.\\u00a0\\u00a0Each takes a certain time to complete the lap and always runs at the same speed.\\u00a0The coach scored the time of one lap for the first two cyclists and only knows,\\u00a0\\u00a0in relation to the third, the time it takes for the three to line up again on the line\\u00a0of departure.\\n\\nYou will help the technician by calculating all the possible times the\\u00a0third rider takes a lap.\\n\\t\\t\\t\",\n    \"id\": 2892,\n    \"input\": \"\\t\\t\\t\\tEach input line contains three integers: T,\\u00a0 1\\u00a0\\u2264\\u00a0 T\\u00a0\\u2264\\u00a0 106,\\u00a0 the time that the cyclists take to meet again in the departure line,\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0A, B,\\u00a0 1\\u00a0\\u2264\\u00a0 A, B\\u00a0\\u2264\\u00a0 102,\\u00a0 the respective times that cyclists 1 and 2 take to complete one lap.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Training On The Velodrome\",\n    \"output\": \"\\t\\t\\t\\tFor each input line, print, in an orderly way, the possible times that the third rider takes to complete a lap, so that the mentioned coincidence occurs.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Fabiano S. Oliveira, UERJ  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tN\\u00e9chi is a very smart guy. He soon realized in the early years of his academic life that it is a good idea to look for patterns contained in the description of problems to memorize them. It is curious to observe the way he memorized the Fibonacci sequence; he thought as follows: let k be the number of letters \\\"c\\\" contained in \\\"Fibonacci\\\". Start the sequence by 0,1, ..., k-1 and obtain the next element of the sequence by the sum of the immediately preceding k elements. Develop a program to compute an arbitrary element of the Fibonacki sequence, as N\\u00e9chi likes to call the problem.\\n\\t\\t\\t\",\n    \"id\": 2893,\n    \"input\": \"\\t\\t\\t\\tThe first line of the input is composed of the integer 1 \\u2264 T \\u2264 10 which constitutes the number of test cases. The following\\u00a0T lines consist\\u00a0of the test cases, one per line. A test case consists of an integer 2 \\u2264 k \\u2264 105 followed by an integer 1 \\u2264 N \\u2264 2\\u00d7105.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Fibonac^{k}i\",\n    \"output\": \"\\t\\t\\t\\tOne line per test case should be written with the remainder of the division of the N-th element of the Fibonacki sequence by 1000007.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Paulo E. D. Pinto, UERJ- Universidade do Estado do Rio de Janeiro  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"We are in an African country, where a dangerous virus has just arrived in a big city. The country will have to take extreme measures so that it does not spread. The only way out will be to block roads that arrive in infected cities. But the country only has the money to block a single stretch of road. In this country there is always at least one way between two cities. The Sanitary Surveillance wants to find out if there is a stretch of road that, when blocked, separates the rest of the country from the infected area.\\n\\nYou will help by making a program to identify if there is such an excerpt and indicate the maximum number of cities that can be isolated from the virus. Note that there may be more than one road stretch between two cities.\\n\\t\\t\\t\",\n    \"id\": 2894,\n    \"input\": \"\\t\\t\\t\\tThe first input line is an integer\\u00a0\\u00a0T\\u00a0 (1 \\u2264 T\\u00a0\\u2264 100), the number of test cases. The description of T\\u00a0test cases is given next. The description of each test is made in several lines. The first line contains 3 integers: N (1 \\u2264 N\\u00a0\\u2264 1000), the number of cities of the country, M\\u00a0(N-1 \\u2264 M\\u00a0\\u2264 10000), the number of roads and\\u00a0\\u00a0 \\u00a0C\\u00a0(1 \\u2264 C\\u00a0\\u2264 N), the number of the infected city. The next M lines contains\\u00a02 integers each, describing one road between two cities. The cities are numbered from 1 to\\u00a0N.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Virus\",\n    \"output\": \"\\t\\t\\t\\tFor each test case print the maximum number of cities that can be isolated by blocking a stretch of road. If there is not an excerpt with the characteristics searched for, answer 0.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Paulo E. D. Pinto, UERJ- Universidade do Estado do Rio de Janeiro  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tOld balance scales with two plates can still be found at fairs, laboratories and museums. In one of the plates the object to be weighed is placed and, in the other, the weights, until the balance is leveled. The weight of the object is obtained by the sum of weights in the opposite side. But some weights may also be placed together with the object to be weighed, and in that case those weights must be subtracted from the sum on the opposite side. For example, an object that weights 15 may be weighed by placing \\u00a08, 4, 2, 1, on the other side of the scale, as 8 + 4 + 2 + 1 = 15. But it can also be weighed by placing 16 on the opposite side and 1 together with the object, for 16-1 = 15.\\nIn this problem, the weights are all powers of 2 and there is only one weight of each value. You should find out the scheme that weighs a given object with integer weight, using the smallest number of weights of the type described.\\n\\t\\t\\t\",\n    \"id\": 2895,\n    \"input\": \"\\t\\t\\t\\tThe first input line contains one integer\\u00a0T (1\\u00a0\\u2264 T\\u00a0\\u2264 10000) , the number of test cases. In each of the next T lines there is one integer N (1\\u00a0\\u2264 N\\u00a0\\u2264 2048), the weight of the object to be weighted.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Balance Scales\",\n    \"output\": \"\\t\\t\\t\\tFor each input case, print the minimum number of weights needed to weight the given object.\\u00a0\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Paulo E. D. Pinto, UERJ- Universidade do Estado do Rio de Janeiro  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"A supermarket is doing a sales promotion for soft drinks. If one day you buy soft drinks and bring the empty bottles the next day, they exchange\\u00a0each set of K empty bottles for a full one. A customer wants to make the most of this offer and therefore bought several bottles on the first day of the promotion. Now he wants to know how many bottles he will have at the end of the second day of the promotion if he use it to the fullest.\\n\\nMake a program to calculate this.\\n\\t\\t\\t\",\n    \"id\": 2896,\n    \"input\": \"The first input line contains integer T (1 \\u2264 T \\u2264 10000), which indicates the number of test cases. In each of the following T lines come two integers N and K (1 \\u2264 K, N \\u2264 10000), respectively the number of soft drinks bought and the number of empty bottles to gain a full.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Enjoy the Offer\",\n    \"output\": \"\\t\\t\\t\\tFor each test case print the number of bottles that the customer will have on the second day, if he makes the most of the offer.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy   Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tA command-line interface (CLI) is one of the oldest human-computer interface types in existence. A CLI allows interaction with the software through a command interpreter and is usually accessible in a text terminal (or window). The advantage of a command interpreter is that it allows the user to operate the system using only the keyboard. Even today, where we are accustomed to sophisticated graphical interfaces, many applications and operating systems include some kind of command-line interface, and many users still prefer to use it for most tasks. One of the most useful features of a command interpreter is the command history. When a command is entered and executed, it is placed in the command history of the terminal.\\n\\t\\t\\t\\tThe command can be displayed again in the terminal by pressing the '\\u2191' key; the Enter key executes the command again when the command is being displayed on the terminal. All the commands executed are stored in the history: pressing the '\\u2191' key twice shows the penultimate command executed, pressing it three times displays the third-last command, and so on. For example, if the initial history is (A, B, C, D), to repeat the C command simply press the '\\u2191' key twice. The history will then be updated to (A, B, C, D, C). At this point, to repeat command A, it is necessary to press the '\\u2191' key five times; the history will be updated to (A, B, C, D, C, A). At this point, to repeat command A once more, press the '\\u2191' key once; the history will be updated to (A, B, C, D, C, A, A). Leandro is a systems administrator and often uses the command interpreter to remotely manage the servers that he manages. In general, he just needs to repeat commands that he had typed before. While working on a server, he had a curiosity: how many times does he need to press the '\\u2191' key to execute a given sequence of commands? He knows what position in the command history he needs to execute, but he doesn't know how to solve this problem. So he asked you to do a program that would answer his question.\\n\\t\\t\\t\",\n    \"id\": 2897,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases. The first line of each test case contains an integer N, indicating the number of commands Leandro wants to execute (1 \\u2264 N \\u2264 1,000). The second line of a test case contains N integers P1, P2,. . . , PN, which indicate the positions of the commands in the history (1 \\u2264 Pi \\u2264 1,000,000) at the initial moment, in the order in which the commands are to be executed. That is, the first command to be executed is initially in position P1 of the history; then the command that is initially in position P2 in the history, and so on, until PN, which is the starting position of the last command to be executed, must be executed. Note that there may be Pi = Pj. The positions are given as a function of the number of times the '\\u2191' key must be pressed: a command in position 5 requires the '\\u2191' key to be pressed five times before it appears on the terminal (note that as commands are executed, the position of a given command in the history may change). The end of the entry is indicated by N = 0.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Command History\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, your program must print a single line containing the number of times Leandro need to press the '\\u2191' key to execute all commands.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor   Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tTumbolia is a small country in eastern South America (or southern South America) that will participate in the Olympic Games for the first time in its history. Although its delegation is very small compared to the total number of athletes who will be in Beijing (official estimates are more than 10,000 athletes), participation will be key to the image and tourism of Tumbolia. After selecting the athletes, the Tumbol Olympic Committee (TOC) must buy tickets for them. In order to save money, TOC decided to buy only Air Rock tickets. However, many of Air Rock's tickets have already been sold, as many of the fans of the game want to watch the Games. Therefore, the TOC must buy tickets according to the vacant seats on each flight. All Air Rock flights depart daily before noon and arrive after noon; so an athlete can only take one plane per day. Air Rock has provided a list containing all the flights operated by it and the number of seats vacant in each one (curiously, the number of free seats in the same stretch is the same every day). The TOC has verified that it is really possible to go from Tumbolia to Beijing using only Air Rock flights, but even so, TOC is having difficulty planning the trip for its athletes. That's why the TOC has asked you to write a program that, given Air Rock's list of flights, determines the least amount of days it takes for all athletes to arrive in Beijing.\\n\\t\\t\\t\",\n    \"id\": 2898,\n    \"input\": \"\\t\\t\\t\\tThe input contains many test cases. The first line of each test case contains three integers N, M, and A, respectively indicating the number of airports in which Air Rock operates (2 \\u2264 N \\u2264 50), the number of flights where there are vacant seats (1 \\u2264 M \\u2264 2.450) and how many athletes the delegation of Tumbolia has (1 \\u2264 A \\u2264 50). Eahch of the M next lines contains a description of fly with three integers O, D and S which indicate respectively the airport of origin (1 \\u2264 O \\u2264 N), the destination airport (1 \\u2264 D \\u2264 N and O 6= D) and the number of vacant seats that fly (1 \\u2264 S \\u2264 50). The airports are numbereds from 1 to N; The intenational airport of Tumbolia is the airport 1, and de international airport of Beijing is the airport N. The existence of a flight from A to B does not \\n\\t\\t\\t\\timplies the existence of a flight of B to A (but there is always a maximum of one flight from one airport to another in each direction). The final of input is indicated to N = M = A = 0.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Olympiads\",\n    \"output\": \"\\t\\t\\t\\tFor each entrance test case your program should produce an output line containing an integer, indicating the minimum number of days required for all Tumbolian athletes to arrive in Beijing (some athletes may arrive after others, and they do not need to arrive at same order in which they left).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor   Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThe year is 2010. The spectacular result of an ultra-secret project, begun three years earlier by a group of researchers from SBC (Brazilian Solutions in Cabling) is about to be released: SBC achieved the prowess of transporting matter through cables optical fiber! The poll runs counter to the famous and controversial phrase of the former US senator and current president who, at the time of the start of the research three years ago, said that \\\"the internet is not like a cargo truck, where you dump what do you want. The internet is actually a series of tubes \\\". As a result, the SBC, which currently leases its cable network to a pay-TV operator, is thinking about changing its business and starting the freight transport business - although the technology developed also serves to transport living things , there are political difficulties in the homologation of this means of transportation for human beings. SBC's fiber-optic network covers all the capitals of the country. The network is composed of fiber optic branches and concentrators. There is one concentrator in each capital, and one branch of fiber optic connects directly to a pair of hubs. Not every hub is connected directly by one branch of fiber to all other hubs, but the network is connected. That is, from a given concentrator there is a sequence of branches and concentrators that allows information generated in any of the concentrators can be sent to any other hub in the network. For data communication, it is normal for a fiber optic branch to be used to send messages in both directions. The developed technology, however, has a peculiarity: after a branch of optical fiber is used to transport matter in one direction, the optical fiber keeps a memory of that fact, and from then on this branch can only be used to transport matter in that direction. Hubs are not affected by this steering memory. SBC's research group is very good in physics, but very weak in computing. Therefore, you were hired to determine if the existing fiber optic network could be used by SBC to carry load between any pair of capitals, even considering the sense memory constraint of fiber optic branches.\\n\\t\\t\\t\",\n    \"id\": 2899,\n    \"input\": \"\\t\\t\\t\\tThe first line of each test case contains two integers N and M separated by a blank space, that represent, respectively, the amount of capital (2 \\u2264 N \\u2264 1.000) and the number of existing fiber optic branches (1 \\u2264 M \\u2264 50.000). The capitals are numbered from 1 to N. Each one of M following lines of a test case contains two integers A and B (1 \\u2264 A, B \\u2264 N, A 6= B) separated by a blank space, indicating that there is a branch of fiber linking capital A to capital B. \\n\\t\\t\\t\\tNote that for data communication the described branch can be used to send messages from both of A to B and that of B to A, but for material transfer it can be used in only one direction. There is at most a single branch of fiber linking a couple of capitals. The end of the entry is indicated by N = M = 0.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Series of Tubes\",\n    \"output\": \"\\t\\t\\t\\tFor each input test case your program should print a single line containing the letter 'S' if it is possible to use the existing network as specified, or the letter 'N' otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy   Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThere are many fun games that use small colored sticks. The variant used in this problem involves the construction of rectangles. The game consists of, given a set of rods of varied lengths, to draw rectangles on the ground, using the rods as sides of the rectangles, each rod being used in only one rectangle, and each rectangle side is formed by a single rod. In this game, two children receive two equal sets of rods. The child who draws the largest number of rectangles with the set of rods win the game. Given a set of sticks of integer lengths, you must write a program to determine the largest number of rectangles that can be drawn.\\n\\t\\t\\t\",\n    \"id\": 2900,\n    \"input\": \"\\t\\t\\t\\tThe input contains several test cases. The first line of a a test case contains a integer N which indicates the number of different lengths of rods (1 \\u2264 N \\u2264 1.000) in the set. Each one of N following lines contains two integers Ci and Vi, representing respectively a length (1 \\u2264 Ci \\u2264 10.000) and the number of rods with this lenght (1 \\u2264 Vi \\u2264 1.000). Each rod length appears at most once in a test set (that is, the values Ci are distincts). The end of input is indicated by N = 0.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Game of Rods\",\n    \"output\": \"\\t\\t\\t\\tTo each test case of input your program should to produce a single line at the output, containing an integer, indicating the maximum number of rectangles that can be formed with the set of rods given.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy   Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tJust like on Earth, volleyball is a very popular sport on Mars; the rules there are the same as those of earthly volleyball - teams should not let the ball touch in their part of the court - but there is one important difference: unlike earthly volleyball, the courts are not necessarily rectangular; they can be any polygons as long as their sides are parallel to the coordinate axes. Just like in terrestrial volleyball, polemical throws are those where the ball falls too close to the court line. To avoid arguments, all Martian volleyball games are accompanied by line judges. Their function is to watch the ball as it falls next to one of the lines and tell whether it fell on or off the court. When a judge is in line with several lines of court, he can observe all of them at the same time (in the set of lines under the responsibility of the same judge there may even be lines perpendicular to each other). However, in order to avoid accidents, the Intergalactic Federation of Martian Volleyball decreed the following safety standards:\\n\\n\\u2022 the judges should stand still during the game;\\n\\n\\u2022 the judges can not stay inside the court, not even on their line. The image below illustrates three possible block formats, showing a minimum allocation of judges for each of them; the court (a) needs four judges, the court (b) needs seven judges, and the court (c) needs six judges.\\n\\n\\n\\nYou should write a program that, given the format of the court, determines the minimum number of line judges necessary for all lines on the court to be accompanied by at least one judge.\\n\\t\\t\\t\",\n    \"id\": 2901,\n    \"input\": \"\\t\\t\\t\\tThe input contains several test cases. The first line of a test case contain an even integerN, which indicates the number of sides of the volleyball court (4 \\u2264 N \\u2264 100). Each one of N following lines contain two integers Xi and Yi, representing the coordinates of one of the vertices of the court (\\u22121.000.000.000 \\u2264 Xi , Yi \\u2264 1.000.000.000). The coordinates are given in order, so that (Xi, Yi) form a side of the court with (Xi+1, Yi+1), to 1 \\u2264 i < N, and (XN , YN ) form a side with (X1, Y1). Consecutive court sides are always perpendicular, and the polygon described at the entrance is always a simple polygon. The end of the entry is indicated by N = 0.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Martian Volleyball\",\n    \"output\": \"\\t\\t\\t\\tFor each input test case your program must produce a single line in the output, containing an integer, indicating the least number of line judges required.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor   Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tOne of the funniest card games for toddlers, for the simplicity, is Rouba Monte. The game uses one or more standard decks and has very simple rules. Letters are distinguished only by value (ace, two, three, ...), ie card suits are not considered (eg ace of clubs and gold ace have the same value). Initially the cards are shuffled and placed in a stack at the game table, called purchase stack, face down. During the game, each player keeps a the pile of cards face up; at any given time a player's pile may contain zero or more cards. At the beginning of the game, all the piles of the players have zero cards. Next to the shopping stack is a designated area of \\u200b\\u200bdiscard area, initially empty, and all cards placed in the discard area are placed side-by-side with the face up (ie they are not stacked). Players, arranged in a circle around the game table, play sequentially, clockwise. The plays proceed as follows:\\n\\n\\u2022 The player who has the turn to play removes the card from the top of the purchase stack and shows it to the other players; Let's call this card of card of turn.\\n\\n\\u2022 If the card of turn is equal to any card present in the discard area, the player removes that card from the discarding area by placing it, along with the card of turn, at the top of pile, face up, and continues the move (ie, removes another card from the purchase stack and repeats the process).\\n\\n\\u2022 If the card of turn is equal to the top card of a pile of another player, the player \\\"steals\\\" that pile, stacking it in its own pile, places the turn card on top of its pile face up, and continues the move.\\n\\n\\u2022 If the card of turn is equal to the card at the top of its own pile, the player places the turn card at the top of its own mound, face up, and continues the move.\\n\\n\\u2022 If the card of turn is different from the cards from the discard area and the cards at the tops of the piles, the player places it in the discard area, face up, and the play ends (ie the next player makes his move ). Note that this is the only case where the player does not continue the move. The game ends when there are no more cards in the purchase stack. The player with the highest pile (the pile containing the highest number of cards) wins the game. If there is a tie, all the players with the mound containing the highest number of cards win the game.\\n\\t\\t\\t\",\n    \"id\": 2902,\n    \"input\": \"\\t\\t\\t\\tA entrada \\u00e9 composta de v\\u00e1rios casos de teste. A primeira linha de um caso de teste cont\\u00e9m dois inteiros N and J, representing respectively the number of cards in the deck (2 \\u2264 N \\u2264 10.000) and the number of players (2 \\u2264 J \\u2264 20 and J \\u2264 N). The cards in the deck are represented by integers from 1 to 13 and players are identified by integers from 1 to J. The first player to play is the player 1, followed by palyer 2, . . ., followed by player J, followed by player 1, followed by player 2, and so on as long while there are cards in the purchase stack. The second line of a test case contains N integers between 1 and 13, separated by a blank space, representing the cards in the stack. The cards are taken from the purchase stack in the order they appear in the entry. The end of the entry is indicated by a line with N = J = 0.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Rouba Monte\",\n    \"output\": \"\\t\\t\\t\\tFor each test case your program should print a line containing the number of cards from the player's pile or players who won the match followed by a blank followed by the identifier (s) of the players who won the match. If there is more than one winning player, print the player identifiers in ascending order, separated by a space.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Mario Silva  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tBob has a symmetry craze. Everything in his life must be symmetric: his house, his clothes, his car, even his food. And pizza is no exception. For him to eat a pizza, all the toppings, like tomatoes, olives, pepperoni or basil, must be arranged with some degree of rotational symmetry. This evening Bob ordered some pizza. As usual, when it arrived, he asked the delivery driver to demonstrate that the pizza met his demands for rotational symmetry. The driver demonstrated the symmetry then, as they are trained to do, using the following procedure:\\n\\n\\n\\ttake a picture of the pizza with a cellphone;\\n\\trotate the pizza by R degrees around its center;\\n\\ttake another picture;\\n\\tshow Bob the two pictures side by side, so that he sees that the pizza appears identical in both.\\n\\n\\nSatisfied, Bob paid for the pizza and took it to the kitchen. In order to test his brand new laser pizza cutter, he decided to cut the pizza in as many slices as possible. Of course, Bob wants to cut the slices in a way that all of them look exactly the same, in accordance with another of his crazes. Now given the angle R of the symmetry demonstration, Bob wants to know the maximum amount of equal slices he can cut the pizza in.\\n\\t\\t\\t\",\n    \"id\": 2903,\n    \"input\": \"\\t\\t\\t\\tThe input consists of a single line that contains a rational number R (0 < R < 360) indicating the angle of the rotational symmetry demonstration. This number has exactly two digits after the decimal point.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"A Symmetrical Pizza\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer representing the maximum amount of equal slices Bob can cut the pizza in, based on the provided information\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor SBC  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tJohn is a meticulous person. In his farm he built a circular field with some trees planted right at the circumference of the field. Figure (a) below shows the field with the trees. Now John wants to use a long rope and four of the field trees to demarcate a rectangle using the trees as vertices and the rope as edges. Figure (b) below shows two rectangles that can be demarcated using the trees of the field in figure (a).\\n\\n\\n\\nGiven the description of the positions of the trees in John\\u2019s circular field, you must determine whether it is possible to demarcate a rectangle using four of the trees as vertices and the rope as edges.\\n\\t\\t\\t\",\n    \"id\": 2904,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer N (4 \\u2264 N \\u2264 105 ) indicating the number of trees in the field. Trees are represented as points on a circumference. The second line contains N integers L1, L2, . . . , LN (1 \\u2264 Li \\u2264 106 for i = 1, 2, . . . , N) indicating the arc lengths between each pair of consecutive trees. The arcs are given in counter-clockwise order. The total length of the circumference does not exceed 109 .\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Building a Field\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with the uppercase letter \\u201cY\\u201d if it is possible to demarcate a rectangle using the given trees, and the uppercase letter \\u201cN\\u201d otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Alejandro Strejilevich de Loma  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tNlogonia has a new scheme for public transportation. When the first trip of a passenger starts, it also starts a 120 minutes interval such that discounts are applied to some of the trips that the passenger starts before the end of the interval. The discount for the second trip is 50% of the regular cost, while the discount for each of the remaining trips up to the sixth trip (that is, four more trips) is 75% of the regular cost. Once the 120 minutes interval ends, a new trip starts a new interval having the same kind of discounts.\\r\\n\\r\\nAstor is an exchange student that has just arrived to Nlogonia. He wants to spend as little money \\u00a0as possible for making a sequence of trips. The first trip in the sequence can be started at any time. Each trip but the first one cannot be started before the previous trip in the sequence ends, although it can be delayed as much as needed. Given the duration and the regular cost of each trip in the sequence, can you tell Astor the minimum cost he must afford so as to complete all the trips in the sequence?\\n\\t\\t\\t\",\n    \"id\": 2905,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 104 ) representing the number of trips in the sequence. Each of the next N lines describes a trip with two integers D and C (1 \\u2264 D, C \\u2264 1000), indicating respectively the duration (in minutes) and the regular cost of the trip.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Cheap Trips\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with a number representing the minimum cost needed to complete all the trips in the order they appear in the input. The result must be output as a rational number with exactly two digits after the decimal point, rounded if necessary.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Paulo Cezar Pereira Costa  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tNowadays there are billions of email users. A little-known fact is that some email providers offer way more than the usual username@provider.com email address.\\r\\n\\r\\nSome providers simply ignore dots in usernames. Thus, if John owns the username johnsmith, he could tell people that his email address is johnsmith@provider.com, john.smith@provider.com or john.s.mith@provider.com, among others. Emails sent to any of these addresses would end up on his mailbox.\\r\\n\\r\\nOther providers allow appending the character \\u201c+\\u201d followed by any combination of letters and/or digits after the username. With this feature, by registering the username johnsmith, John would also be able to use johnsmith+friends@provider.com and johnsmith+2x3is6@provider.com.\\r\\n\\r\\nSometimes both features are available at once and in those cases john.smith+icpc@provider.com and john.smith+wants.2.eat.lemon.3.14@provider.com are valid addresses that John could use.\\r\\n\\r\\nThis is quite useful for users, who can manage different addresses to help organize their mailboxes and easily filter the newsletters eventually sent after registering on a new website. Unfortunately, this also opens up space for abuse. Some websites rely upon the fact that each email address identifies a single user. However, a misbehaving user might easily create multiple accounts by taking advantage of the multiple addresses allowed by the email provider.\\r\\n\\r\\nAfter learning all of this your boss got really worried. What if the number of unique users that has been reported to the shareholders is not accurate, bloated by duplicate accounts instead? That brings you to the task at hand: given the list of all email addresses from the users database of the company, you must determine the real number of unique users, assuming that all email providers have both described features available.\\n\\t\\t\\t\",\n    \"id\": 2906,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 1000) representing the number of email addresses in the database. Each of the next N lines contains a string of at most 100 characters representing an email address in the database. Each email address has the form localpart@provider where localpart is a non-empty list of labels with a \\u201c.\\u201d (dot) or a \\u201c+\\u201d (plus sign) between each pair of consecutive labels, and provider is a non-empty list of labels always with a \\u201c.\\u201d (dot) between each pair of consecutive labels. A label is a non-empty sequence of lowercase letters and/or digits. The character \\u201c+\\u201d (plus sign) appears at most once in each email address.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Database of Clients\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer indicating the number of unique users in the database.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\tBy Guilherme A. Pinto  Brazil\\r\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\t\\t\\t\\tA suspicious-looking convex polygon wants to escape its current position by translating itself along some straight-line direction. Three very diligent straight lines want to lock it up by placing themselves along three distinct sides of the polygon. Then, if the triple of lines de\\ufb01nes a triangle and the polygon lies inside this triangle, it will be locked up. Otherwise, it will escape.\\r\\n\\r\\n\\r\\n\\r\\nFigure (a) above illustrates a triple that will lock the polygon up. For (b), the lines do not de\\ufb01ne a triangle since two of them are parallel, and so the polygon will escape. In (c), the polygon lies outside the triangle de\\ufb01ned by the triple and it will easily escape.\\r\\n\\r\\nGiven a polygon, you must compute the number of distinct triples of lines that can lock the polygon up.\\r\\n\\u00a0\\r\\n\\t\\t\\t\",\n    \"id\": 2907,\n    \"input\": \"\\r\\n\\t\\t\\t\\tThe \\ufb01rst line contains an integer N (3 \\u2264 N \\u2264 105) representing the number of vertices of the polygon. Each of the next N lines describes a vertex with two integers X and Y (\\u2212108 \\u2264 X,Y \\u2264 108) indicating the coordinates of the vertex in the XY plane. The vertices are given in counter-clockwise order and they de\\ufb01ne a simple convex polygon. No three vertices are collinear.\\r\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Escape, Polygon!\",\n    \"output\": \"\\r\\n\\t\\t\\t\\tOutput a single line with an integer indicating the number of distinct triples of lines that can lock the given polygon up.\\r\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n\\t\\t\\t\\tBy Paulo Cezar Pereira Costa  Brazil\\r\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\r\\n\\t\\t\\t\\tThe eccentric magizoologist Newt Scamander recently came to Nlogonia to study the fantastic creatures that inhabit this prosperous kingdom. But before he could begin to explore the area an accident disrupted his plans: his suitcase sprang open and his collection of fantastic beasts escaped from the magical object.\\r\\n\\r\\nThe inhabitants of Nlogonia love zoos, and so there are many of them in the kingdom. It turns out that the beasts share Nlogonians\\u2019 passion for zoos and since the accident they have been visiting the various zoos.\\r\\n\\r\\nBeasts breaking free and causing trouble is nothing new for Newt so he had trackers put on the beasts since the previous incident. Thus, at any moment he knows the exact position of each of the beasts. After watching the beasts movements for some time he noticed that they follow a peculiar pattern: if a beast is currently in a given zoo, after a unit of time it will either stay in that zoo or it will move to another zoo that depends on the current zoo. All beasts that move to another zoo do this instantly and simultaneously.\\r\\n\\r\\nWith this information Newt conjectured that perhaps it\\u2019s not so di\\ufb03cult to recover the creatures. He believes that eventually all of them may meet in the same zoo at the same time so he only needs to wait at the right place and capture all the fantastic beasts at once. Given the information Newt has so far, can you help him determine where and when to wait for the beasts? If there are several possibilities, he wants to catch the beasts as early as possible.\\r\\n\\t\\t\\t\",\n    \"id\": 2908,\n    \"input\": \"\\r\\n\\t\\t\\t\\tThe \\ufb01rst line contains two integers B (1 \\u2264 B \\u2264 10) and Z (1 \\u2264 Z \\u2264 100), indicating respectively the number of fantastic beasts and the number of zoos. Zoos are identi\\ufb01ed by distinct integers from 1 to Z. Each of the next B lines describes Newt\\u2019s \\ufb01ndings on a di\\ufb00erent beast with Z + 1 integers P0,\\u00a0P1,...,PZ (1 \\u2264 Pi \\u2264 Z for i = 0,1,...,Z); the value P0 is the zoo where the beast initially is, while for i = 1,2,...,Z the value Pi is the zoo where the beast would be after a unit of time if it is currently in the zoo i.\\r\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Fantastic Beasts\",\n    \"output\": \"\\r\\n\\t\\t\\t\\tOutput a single line with two integers, P and T, indicating that all the beasts will meet for the \\ufb01rst time at zoo P after T units of time, or the character \\u201c*\\u201d (asterisk) if the beasts will never be all at the same zoo.\\r\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Mario Silva  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tIt\\u2019s harvest time at Farmer Fred\\u2019s orchard of red-black trees! But since he\\u2019s too old to climb trees, Fred brought all his grandchildren to the orchard for a competition of fruit gathering: those who collect the most fruits will be awarded red-black jam jars!\\n\\nRed-black trees are special, because the same tree gives two di\\ufb00erent kinds of fruit: the red fruit and the black fruit. That gives Farmer Fred a problem: how to rank children who collected the same amounts of di\\ufb00erent fruits? For instance, if Abby picked two red and three black fruits, and Bruce picked three red and two black fruits, who should rank higher in the competition? How much should each fruit be worth?\\n\\nTo solve this problem, Farmer Fred decided that each red fruit would be worth r points, and each black fruit would be worth b points, both r and b positive integers. Then he would rank the kids according to the total number of points each one has, ties broken arbitrarily.\\n\\nAll that\\u2019s left to do now is choose the values of r and b. But Farmer Fred got curious, and now he wants to know in how many di\\ufb00erent ways he can rank his grandchildren according to the described criteria. Two rankings are considered di\\ufb00erent if, and only if, there is any child who has di\\ufb00erent positions in them.\\n\\t\\t\\t\",\n    \"id\": 2909,\n    \"input\": \"\\t\\t\\t\\tThe \\ufb01rst line contains an integer N (2 \\u2264 N \\u2264 1000) representing the number of Farmer Fred\\u2019s grandchildren. Each of the next N lines describes the fruits gathered by a grandchild with two integers R and B (0 \\u2264 R,B \\u2264 104), indicating respectively the amounts of red and black fruits the child gathered.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Gathering Red-Black Fruits\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer indicating the number of di\\ufb00erent possible rankings. Print the answer modulo 109 + 7.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Arthur Nascimento  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tNlogonia\\u2019s government is eager to cut down public debt. One of the measures about to take place is the decommission of some highways as most of them incur a high maintenance cost. Each highway connects two di\\ufb00erent cities and can be traveled in both directions. Using the existing highways it is possible to reach any city from any other city.\\r\\n\\r\\nGovernment promises that the impact of the decommission will be minimal in the lives of Nlogonians. In particular they guarantee that after the decommission, for each city the minimum distance needed to travel from that city to the capital of the country will remain the same as it is now, when all the highways can be used.\\u00a0\\r\\n\\r\\nThe Department of Roads of Nlogonia believes that interns are not there just to get co\\ufb00ees or run errands but should do meaningful work instead and that\\u2019s why you are assigned the following task. Given the length and maintenance cost of each highway, you must decide which highways will be kept active and which will be decommissioned. As you might guess, the sum of maintenance costs for the remaining highways must be minimum.\\n\\t\\t\\t\",\n    \"id\": 2910,\n    \"input\": \"\\t\\t\\t\\tThe \\ufb01rst line contains two integers N (2 \\u2264 N \\u2264 104) and M (1 \\u2264 M \\u2264 105), indicating respectively the number of cities and the number of highways. Cities are identi\\ufb01ed by distinct integers from 1 to N, where city 1 is the capital of Nlogonia. Each of the following M lines describes a highway with four integers A, B, L and C (1 \\u2264 A,B \\u2264 N, A != B and 1 \\u2264 L,C \\u2264 109), indicating that there is a highway between cities A and B that has length L and maintenance cost C. Using the existing highways it is possible to reach any city from any other city.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Highway Decommission\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer indicating the minimum possible sum of maintenance costs for a set of highways to be kept active. This set of highways must ensure that for each city the minimum distance needed to travel from that city to the capital of Nlogonia remains the same using only those highways.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Paulo Cezar Pereira Costa  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tStick Man left the family tree and went out for adventures. On his journey he found a strange tree with the root on the air and branches directed towards the ground. He decided to paint some of the tree branches to remind himself of home. To do so he wants that branches painted with the same color are all connected and form a stick man. A stick man is a group of six branches (p, q) (q, r) (q, s) (q, t) (s, u) and (s, v), as show in figure (a) below. Figure (b) shows a tree with one stick man painted and figure (c) shows the same tree with two stick men painted.\\n\\n\\n\\nStick Man would like to paint as many stick men on the tree as possible, such that each branch is part of at most a single stick man. Can you help him figure out how many ink colors he needs to buy?\\n\\t\\t\\t\",\n    \"id\": 2911,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 105 ) indicating the number of nodes in the tree. Nodes are identified by distinct integers from 1 to N, where node 1 is the root of the tree. The second line contains N \\u2212 1 integers P2, P3, . . . , PN (1 \\u2264 Pi \\u2264 N for i = 2, 3, . . . , N), where the value Pi represents that there is a branch (Pi , i), that is, from node Pi to node i.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Ink Colors\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer indicating the maximum number of stick men that might be simultaneously painted on the tree.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Edwin Ni\\u00f1o Velasquez  Colombia\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tNlogonian elections are coming up soon and there are many candidates running for President of one of the greatest nations on Earth.\\n\\nThe voting system used in Nlogonia is quite out of the ordinary. Each person votes by making a list of all candidates, in order of preferences of the voter. This means that the first candidate in the list is the one whose proposals please the voter most, and the last candidate in the list is the one whose proposals please the voter least.\\n\\nSuppose that there are exactly five voters 1, 2, 3, 4 and 5, exactly five candidates A, B, C, D and E, and the voters voted as shown in the following table:\\n\\n\\n\\nTo determine the winner, the Electoral Commission first makes a draw, called Election Ordering, which contains all the candidates in a certain order. Then each candidate is evaluated following the Election Ordering, until one of them is elected as President. For this to happen, the current evaluated candidate must be the preferred still-running candidate for more than half of the voters.\\n\\nTo make the election system clearer, continuing the example above, suppose that the result of the Election Ordering is C, D, A, E and B. To determine the winner the Electoral Commission would perform the following steps:\\n\\n\\u2022 The first candidate evaluated is C. As this candidate is the preferred candidate for just two of the five voters (1 and 3), then C is eliminated.\\n\\n\\u2022 Next candidate evaluated is D, who is the preferred still-running candidate for only two voters (1 and 5). Thus, candidate D is also eliminated.\\n\\n\\u2022 Candidate A is evaluated next. Since this candidate is the preferred still-running candidate for three of the five voters (1, 4 and 5), candidate A is elected as President and the voting ends.\\n\\nOne of the candidates has managed to corrupt some members of the Electoral Commission, and can now decide what the result of the Election Ordering will be. Also, thanks to various social networks analysis, the candidate knows the list that each voter will vote. The only thing the candidate needs to win the election now is to figure out a proper Election Ordering. As this is not an easy task, someone from the candidate staff anonymously hired you to find an ordering that makes the candidate win. Hurry up, because the draw will occur within the next few hours.\\n\\t\\t\\t\",\n    \"id\": 2912,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers C and V (1 \\u2264 C, V \\u2264 100, with V odd), representing respectively the number of candidates and the number of voters. Candidates are identified by distinct non-empty strings of at most 10 uppercase letters. Each of the next V lines describes the vote of a voter, that is, the line contains the list of candidates in order of preference of the voter. All lists contain the same candidates, although candidates may appear in different order. After the votes there is a last line that contains a string W, indicating the candidate that must win\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"Jeopardized Election\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with the Election Ordering that makes candidate W win the election, or the character \\u201c*\\u201d (asterisk) if it is not possible for W to win. If more than one possible Election Ordering exists, output the lexicographically smallest one.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Arthur Nascimento  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tYour friend\\u2019s computer was infected by KryptoLocker last night. KryptoLocker is a ransomware that encrypts user\\u2019s data making it unusable until a ransom is paid to the person behind the attack.\\r\\n\\r\\nLuckily your friend noticed there was something weird happening and was able to stop the malicious process before all data was lost. Unfortunately it didn\\u2019t happen in time to save the homework he had just finished.\\r\\n\\r\\n\\u201cThe dog ate my homework\\u201d never really worked as an excuse for most teachers and probably things won\\u2019t be different with \\u201cKryptoLocker encrypted my homework\\u201d.\\r\\n\\r\\nBut not all hope is lost. For this homework each student was assigned an array of integer numbers v1 \\u2264 v2 \\u2264 \\u00b7 \\u00b7 \\u00b7 \\u2264 vN . Then, each student had to generate a list of 2N numbers, containing the sums of the elements in each possible subsequence of the array. KryptoLocker only corrupted the first line of the file containing your friend\\u2019s answer and this was the line where the array was written. So, all sums are still known and that should be enough to recover the array.\\r\\n\\r\\nCan you help your friend save his homework?\\n\\t\\t\\t\",\n    \"id\": 2913,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 18) indicating the number of elements in the array assigned to your friend. Each of the next 2N lines contains an integer S (\\u2212109 \\u2264 S \\u2264 109 ) representing the sum of the elements in a subsequence of the array. The sums of all possible subsequences appear in the input, in no particular order. There is at least one array whose sums are the values given.\\n\\t\\t\\t\",\n    \"level\": \"Level 10 / 10\",\n    \"name\": \"KryptoLocker Ate my Homework\",\n    \"output\": \"\\t\\t\\t\\tOutput each different array that may have been assigned to your friend, one array per line, with the lines lexicographically sorted. Two arrays are considered different if, and only if, they contain different elements in at least one position.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Juan Pablo Mar\\u00edn Rosas  Mexico\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tFor testing a new cryptographic algorithm, engineers working for a large investment bank need to compute a value they named the Risk Factor of the algorithm. Informally, the Risk Factor is the amount of numbers less than or equal to a certain value N, that aren\\u2019t multiples of prime numbers greater than a certain value K.\\r\\n\\r\\nMore formally, given the values N and K, the Risk Factor is the number of elements of the following set:\\r\\n\\r\\n{x such that 2 \\u2264 x \\u2264 N and for every prime divisor p of x, p \\u2264 K}\\r\\n\\r\\nThe engineers need to compute the Risk Factor for different values of N and K and have prepared a set of queries for you to answer. Can you help them?\\n\\t\\t\\t\",\n    \"id\": 2914,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer Q (1 \\u2264 Q \\u2264 5 \\u00d7 104 ) representing the number of queries that the engineers prepared for you. Each of the following Q lines describes a query with two integers N and K (2 \\u2264 N, K \\u2264 105 ).\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Looking for the Risk Factor\",\n    \"output\": \"\\t\\t\\t\\tOutput Q lines, each line with an integer indicating the Risk Factor for the corresponding query of the input.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor In\\u00e9s Kereki  Uruguay\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tMount Marathon is a solitaire game that is played using a regular deck of 52 cards. To start the game the player shuffles the deck and lays N cards face up on the table, forming a straight line of N piles, each pile having a single card. No other cards are used during the rest of the play. Then the player repeatedly moves a pile on top of another pile until no more movements are available. The goal of the game is to end up with the minimum number of piles. When moving a pile p on top of another pile q, the following conditions must hold:\\n\\n\\u2022 Pile p must be a single-card pile.\\n\\n\\u2022 The value of the only card in pile p must be greater than or equal the value of the card that is on top of pile q.\\n\\n\\u2022 Pile q must be the next pile remaining immediately on the right of pile p.\\n\\nFigure (a) below shows a configuration with six cards at the beginning of the game. The player may move the fifth pile on top of the sixth pile, and then the second pile on top of the third pile; since no more movements are available, this would conclude the game with four piles remaining, as it can be seen in figure (b). However, in this case it is possible to end up the game with just the three piles that appear in figure (c).\\n\\n\\n\\nGiven the initial piles, you must determine the minimum number of piles that it is possible to obtain at the end of the game.\\n\\t\\t\\t\",\n    \"id\": 2915,\n    \"input\": \"\\t\\t\\t\\tThe first line contains an integer N (1 \\u2264 N \\u2264 52) representing the number of cards in the game. The second line contains N integers C1, C2, . . . , CN (1 \\u2264 Ci \\u2264 13 for i = 1, 2, . . . , N) indicating the values of the cards in the initial piles, from left to right. Each card value appears at most four times.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Mount Marathon\",\n    \"output\": \"\\t\\t\\t\\tOutput a single line with an integer indicating the minimum number of piles that it is possible to obtain at the end of the game.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Anderson Franz, UNOCHAPEC\\u00d3  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\t\\t\\t\\tRafael is preparing for the college entrance exam but he does not know what the minimum grade he will have to take to be selected for the Computer Science course, so he asked for his help, since he assumes that you already have experience with programming. You will be given an integer N representing the number of notes and a value of K. Next you will have a set of N notes. Your task is to determine the sum of all K-th major notes in this set. This value will match the note Rafael needs.\\n\\t\\t\\t\",\n    \"id\": 2916,\n    \"input\": \"\\t\\t\\t\\tThe input consists of several test cases and ends with EOF, the first line of the input has two integers N and K, N <= 106, K\\u00a0> 0, K <= N. In the next line there will be N values \\u200b\\u200brepresenting the notes NI , NI <= 105.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"The Note\",\n    \"output\": \"\\t\\t\\t\\tThe output will be composed of a number representing the note that Rafael needs to pass the entrance exam,print response as 109 + 7 module.\\n\\t\\t\\t\",\n    \"timelimit\": 3.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Anderson Franz, UNOCHAPEC\\u00d3  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tJoao and Cleobaldo cut a white string with M meters and traced a line from left to right int it. For every 10 centimeters of the string was pasted a number and the two would like to know what would be the largest continuous sum between the numbers pasted on the string. This answer could be greater if instead of a straight was a circle, they agreed that they will pick up the end of the string on the right side and make a knot with the left end of the string, now this string is no longer a straight line, and now they want to know what is the maximum continuous sum between the elements. All that is known is that you can use maximum numbers (M * 10) continuous numbers written on the string and get the maximum sum, can you help them.\\nAfter they joined the ends of the string the leftmost element is now a continuous element of the element that was to the right.\\n\\t\\t\\t\",\n    \"id\": 2917,\n    \"input\": \"\\t\\t\\t\\tThe input has several test cases and ends with EOF. In the first line there is an integer M which represents respectively the number of meters of the string, M <= 105, followed by M * 10 integers MI, which will be glued to the string, following the order from left to right.-105 < MI <= 105.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"String\",\n    \"output\": \"\\t\\t\\t\\tThe output represents respectively the maximum continuous sum as described above. The sum will always be greater than 0 and less than 107.\\n\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Anderson Franz, UNOCHAPEC\\u00d3  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tSmart digits are the new types of digits created by Chapec\\u00f3 researchers, they realized that the sum of the digits in the range of 1 to 5 (1,2,3,4,5) was 15, for small numbers they can solve, but for large numbers they can not come up with an efficient solution and so have asked for their help. Can you help them, given two integers L and R, which is the sum of all the digits in this range. To vary print the response as a 10\\u2079 + 7 module.\\n\\t\\t\\t\",\n    \"id\": 2918,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of several test cases and ends with EOF, each test case has two integers L and R, L, R <= 10\\u00b9\\u2070.\\u00a0L <= R. L,R > 0.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Smart Digits\",\n    \"output\": \"\\t\\t\\t\\tThe output represents respectively the sum of the digits in the interval L, R.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Anderson Franz, UNOCHAPEC\\u00d3  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tThe college of Nlogn\\u00f4nia discovered that you will participate in a programming marathon so they asked for your help in the new game they invented. You will be given a list with N integers and distinct, you will have to choose NI values \\u200b\\u200band insert into a new list. There are some restrictions, you will have to scroll from left to right and each time you want to insert a new element into the list the element you are entering has to be larger than all elements you have entered so far. The size of this list should be maximized. You can scroll through this list once and it must be in ascending order.\\n\\t\\t\\t\",\n    \"id\": 2919,\n    \"input\": \"\\t\\t\\t\\tThe input has several test cases and ends with EOF. The first line of each test case has an integer N representing the number of elements in the list, next, there will be N integers separated by space, represented by NI. N <= 5 * 10\\u2075, NI <= 10\\u2079.\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Best Order\",\n    \"output\": \"\\t\\t\\t\\tThe output represents respectively the largest list size in ascending order.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Anderson Franz, UNOCHAPEC\\u00d3  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tCarlos usually solves problems with large numbers, he is very good at math, but recently he came across a very difficult problem. He gained an N number from his mother and a K number from his father and his task is to make that number as small as possible, following the restrictions imposed by them. Remove K digits of the number N in order to make it as small as possible, not changing the order of the digits of the starting number N.\\n\\t\\t\\t\",\n    \"id\": 2920,\n    \"input\": \"\\t\\t\\t\\tThe input contains several test cases and ends with EOF, each line has an integer K and N, N <= 10100, K < 100, K, N > 0.\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Small Number\",\n    \"output\": \"\\t\\t\\t\\tThe output is composed of a number representing the smallest number that can be formed, as described above.If you have leading zeros they should also be printed\\n.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Anderson Franz, UNOCHAPEC\\u00d3  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"Alien charts are one of the smartest ways to express the amount of hatred they feel for humans. Each day they note a value in that chart, which expresses respectively the hatred they felt that day and they just stop writing in that chart when the programmer dies, as a way of expressing their love for all the programs he has done for them. The aliens want to know if given a two-dimensional arrangement of positive and negative integers, find the sub-rectangle with the largest sum.\\n\\n\\n\\nAs we can see the sub-rectangle of greater sum is the highlighted in blue, 140. The maximum sum will never exceed 1010.\\n\\t\\t\\t\",\n    \"id\": 2921,\n    \"input\": \"\\t\\t\\t\\tThe input contains several test cases and ends with EOF input consists of an arrangement of integers of size N x N. The input begins with a single positive integer N, indicating the size (width and height) of the two-dimensional square array. lines on each line are N integers each separated by a space called by NI. N <= 1000, -105 < NI <= 105.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Alien Charts\",\n    \"output\": \"The output is the sum of the maximum sub-rectangle.\\n\\t\\t\\t\",\n    \"timelimit\": 13.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Ricardo Ramos Ribeiro, Senai Cimatec  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThe programming teacher Barroquinha loves to pass URI questions to his students, but Professor Umbujahyba changed the network password and forgot to move to Barroquinha.\\n\\nAs Barroquinha does not see the room numbers very well, he asked you to develop an algorithm that calculates how many doors he must pass to arrive in the Umbujahyba room.\\n\\t\\t\\t\",\n    \"id\": 2922,\n    \"input\": \"\\t\\t\\t\\t\\tThe entry contains 2 integers B (0 <= B <= 150) and U (1 <= U <= 150), with the room of Barroquinha and Umbujahyba. The input ends in EOF\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"Classrooms\",\n    \"output\": \"\\t\\t\\t\\tPrint the number of rooms that Barroquinha must pass to reach the Umbujahyba room.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Erianderson Oliveira, IFPI - Instituto federal do Piau\\u00ed  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tBirinho works in a company that provides monitoring for the servers of its clients, its function is to monitor such servers, such as disk space, memory, cpu, etc.\\r\\n\\r\\nThe company system works with threshold, where, for example, when a 100 Gb hard drive reaches a 70% mark used (30% free) a \\\"Warning\\\" alarm is generated, and when the disk reaches 90 % of use (10% free) generates a \\\"Critical\\\" alarm. But Birinho ended up unconfiguring the threshold of the system, and his function now is to help him reconfigure this threshold for the company to continue its activities.\\n\\t\\t\\t\",\n    \"id\": 2923,\n    \"input\": \"\\t\\t\\t\\tEach test case consists of four integers T (>= 1 T <= 104), A (>= 1 A <= T), W (>= 1 W <= 80) e C (>= 1 C <= 99), representing respectively the total disk size (in GB), the disk storage used (in GB), the percentage of the threshold for warning and the percentage of the threshold for critical.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"Birinho\",\n    \"output\": \"\\t\\t\\t\\tThe output should display a \\\"warning\\\" message (without quotes) if the disk space is within the threshold for warning, \\\"critical\\\" (without quotes) if the disk space is within the threshold for critical, and finally message \\\"OK\\\" (without quotes and in upper case) if the disk space is not within the established limits.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Emilio Wuerges, UFFS  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tFind the number C, such that C = A + B, knowing that \\\\(0 \\\\leq A, B, C \\\\leq 2^{512}\\\\) and that A and B are integers.\\n\\t\\t\\t\",\n    \"id\": 2924,\n    \"input\": \"\\t\\t\\t\\tTHe input consist of two lines, with the numbers A and B.\\n\\t\\t\\t\",\n    \"level\": \"Level 3 / 10\",\n    \"name\": \"BigInt\",\n    \"output\": \"\\t\\t\\t\\tThe output consist of a single line with C.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Alexandre Gadelha, Rede de Ensino Doctum  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tAfter solving the IccanobiF case1, Fabiano decided to explore the Internet and find whether exists a real IccanobiF Sequence or not.\\n\\t\\t\\t\\tDuring the exploration over Internet, he discovered the sequence but it's a little different: the result of each term suffers some kind of \\\"mirror effect\\\" if it has two or more digits. As long as the result would have the digits inverted, this would affect the sequence completed as long as it continues.\\n\\t\\t\\t\\tFabiano noticed that IccanobiF Sequence can grow even more than the ordinary Fibonacci Sequence and the number 1 doesn't repeat as expected. As long as this is a complex task for him, he decided to hire you to solve this case! It's up to you!\\n\\t\\t\\t\",\n    \"id\": 2925,\n    \"input\": \"\\t\\t\\t\\tThis is one of End of File (EOF) cases. So many test cases, such wow.\\n\\t\\t\\t\\tInput will have only one value X (X \\u2208 \\u2115 | X \\u2264 60) which is the term of IccanobiF Sequence to be search.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"IccanobiF Sequence\",\n    \"output\": \"\\t\\t\\t\\t For each input, one output with the element of the term X informed of IccanobiF Sequence. After the exhibition of the value, a new line should be printed (as always).\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Jessica Dagostini, URI Online Judge  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tYou always are so excited at this time of the year that you love to talk about it all the time! In this year, you have been screaming: \\\"So this is Christmas!!\\\". To share all this happiness out, you've written a new program that, given an index I of happiness, you scream of \\\"Ent\\u00e3o \\u00e9 Natal!\\\" (\\\"So this is Christmas\\\", in Portuguese) louder.\\n\\t\\t\\t\",\n    \"id\": 2926,\n    \"input\": \"\\t\\t\\t\\tThe input consists of an integer\\u00a0I\\u00a0(1 <\\u00a0I\\u00a0\\u2264 104) that represents that happiness index.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"So This is Christmas!\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of the phrase \\\"Entao eh Natal!\\\" (\\\"So this is Christmas\\\" in Portuguese), and all \\\"a\\\" of the sentence is repeated I times. A line break is necessary after printing the sentence.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Igor Gomes, UVA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tIgor is a programming teacher, and with the arrival of Christmas, times of holidays and trips, in his room is occurring many unforeseen, both in number of students and with problems in the computers due to the vacation of the IT trainee. Jazon is a very dedicated student and wants to help his teacher, but he is still an aspiring programmer, so he asked for his help in counting the number of computers that will be working on a specific day of that Christmas month, and if it is enough for the total number of students. If the number of functional computers is insufficient for the total number of students, there will be no class.\\n\\nThe student also spoke some details:\\n\\nIgor, the teacher, always uses one of the computers.\\n\\nCaius is very clumsy and burned an X number of computers.\\n\\nThere is a Y number of computers that have no compiler installed.\\n\\t\\t\\t\",\n    \"id\": 2927,\n    \"input\": \"\\t\\t\\t\\tThe input is made by a number A (0 <C <= 1000) of students and C (A <= C <= 1000) corresponding to the number of computers. In addition, it must be an X number (X <= C <= 100) of computers burned by a Y (Y <= C <= 1000) number of computers that do not have a compiler.\\n\\t\\t\\t\",\n    \"level\": \"Level 2 / 10\",\n    \"name\": \"Unforeseen at Christmas\",\n    \"output\": \"\\t\\t\\t\\tIf you do not have a class, print \\\"Igor bolado!\\\", But if, on that same condition, the number of computers burned by Caio is greater than half of the computers that do not work, print only: \\\"Caio, a culpa eh sua!\\\" . If you have a class, print \\\"Igor feliz!\\\".\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tPor Felipe C. Ochial, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tThe north pole has been facing a logistics problem due to global warming. This is due to the fact that the factory and the toy store are on opposite sides of a lake that used to be frozen all year round. However, with the increase in temperature in the last years the ice that covers the lake has become less and less thick. To get around the problem Balladug, a very clever Elvish gnome, has created a radar that can map the thickness of the ice. So Balladug delivered the map to the elven gnomes in charge of transport. These gnomes can jump up to a maximum distance of 2 meters. With the map in hand, the gnomes wonder if it is possible to cross the ice lake with their jumps and if possible they would like to know how many jumps they have to give for such.\\n\\t\\t\\t\",\n    \"id\": 2928,\n    \"input\": \"\\t\\t\\t\\t\\u00a0\\n\\nThe input consists of an integer N (0 <N<101) representing the number of rows in the map. The next N lines contain up to 10 characters where the character \\\"-\\\" represents a region of firm ice and the character \\\".\\\" represents a region of thin ice that will break if it is stepped on. Each line is one meter wide on the map. Consider that the gnomes start in the upper left corner and must cross the entire lake until they reach any position on the opposite shore that lies behind the last line of the map.A line will always consist entirely of the same character.\\n\\t\\t\\t\",\n    \"level\": \"Level 1 / 10\",\n    \"name\": \"Crossing Lakes\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of an integer indicating the number of jumps to go through the lake or the \\\"N\\\" character if it is impossible to cross the lake. Do not forget to leave a blank line after the answer.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\r\\n                By Francisco Elio Parente Arcos Filho, UEA  Brazil\\r\",\n    \"category\": \"Data Structures and Libraries\",\n    \"description\": \"\\r\\n                Every Christmas the good old man can go to every house in the world and leave gifts for the children who have been good throughout the year, but this is only possible because of his magic gift bag. It would be impossible for Santa to carry all the presents in his bag, the volume and weight of them all makes this obviously unfeasible. What actually happens is that your bag is a kind of magical portal to your gift factory at the North Pole. Where the presents are stacked by their elves and Noel always takes the gift from the top of that pile when he accesses his magical bag.\\r\\n\\r\\n                Gifts have a numerical measure of the degree of fun they can provide children, and Santa is always concerned with the least fun gift he will deliver throughout the night because he does not want any child to feel bad about it. you receive. However, this can not be done in advance because throughout the night as the good old man takes gifts from the pile to deliver, others are still being made and placed on the pile. So the most he can know is the value of the least fun present on the stack up to that point.\\r\\n\\r\\n                Your task is, given the sequence of operations done on the stack of gifts, answer Santa's queries about the value of the least entertaining gift on the stack thus far.\\r\",\n    \"id\": 2929,\n    \"input\": \"\\r\\n                The first line of the input contains an integer N (1 &leq; N &leq; 106) corresponding to the number of operations performed on the present stack. The operations can be of three types: \\\"PUSH V\\\" where V (1 &leq; V &leq; 109) is an integer representing the degree of fun of the present being placed on the stack; \\\"POP\\\" which represents that Santa Claus is taking a gift from the cell to deliver and \\\"MIN\\\" representing a Noel query to know the smallest gift value in the stack.\\r\\n\\r\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Smallest on the Stack\",\n    \"output\": \"\\r\\n                The output consists of a line containing an integer with the smallest present value in the stack for queries of type \\\"MIN\\\" or \\\"EMPTY\\\" for \\\"MIN\\\" and \\\"POP\\\" operations when the stack is empty.\\r\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Igor Gomes, UVA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Beginner\",\n    \"description\": \"\\t\\t\\t\\tLarissa is a very intelligent and studious scholar, so she is engaged in various activities. The end of the year, the month of hers final presentation, has arrived. She, very busy, needs to know if she can perform her presentation before Christmas! But prior to her presentation she must undergo a check with her oriental counselor, Prof. Takanada\\n\\t\\t\\t\",\n    \"id\": 2930,\n    \"input\": \"\\t\\t\\t\\tThe input is composed of an \\u00a0E (0 < E <\\u00a025)\\u00a0value representing the day the final thesis was delivered for verification. A value \\u00a0D (0 < D <\\u00a025)\\u00a0 representing the end date to be submitted for verification.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Final Thesis of Christmas Depression\",\n    \"output\": \"\\t\\t\\t\\tShow, for each test case, whether the scholar will make the presentation or not. The only possibility of delivery not to be performed on the date is due to lack of guidance from Takanada. If it is not possible, print \\\"Eu odeio a professora!\\\". If it is delivered within 3 days before the deadline, print \\\"Muito bem! Apresenta antes do Natal!\\\", Otherwise, being very close to the deadline, print \\\"Parece o trabalho do meu filho!\\\", In the latter case, it is added plus two days for corrections, and if the end date is shorter than the day before Christmas (24), it can be presented, and \\\"TCC Apresentado!\\\"\\\" should be printed, otherwise print \\\"Fail! Entao eh nataaaaal!\\\".\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gerson Groth, URI  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tMrs. Claus is suspecting that Santa has several children scattered around the world. She has noticed some patterns between the gifts requested by the kids and those received. Even if she is not sure, she would like to check in detail all the kids who present those patterns in the gifts received. As there are many kids around the world, you have volunteered to help her with this task.\\n\\t\\t\\t\\tMrs. Claus will provide the patterns she wants to investigate. That way, for each gift, she will provide a list of suspicious gifts that can be received. After providing the suspicious combinations, she will inform the desired/received gifts for each kid. To do this, write a program that says whether or not Mrs. Claus should check the kid.\\n\\t\\t\\t\\tNOTE: Gift names may contain spaces or hyphens.\\n\\t\\t\\t\",\n    \"id\": 2931,\n    \"input\": \"\\t\\t\\t\\tThe input contains several test cases. Each test case starts with the number of combinations C (1 \\u2264 C \\u2264 50) and the number of Kids K (1 \\u2264 K \\u2264 1000). For each combination there will be a line containing the desired gift, followed by the number of suspicious gifts S (0 \\u2264 S \\u2264 C). Each of the following S lines will contain the name of one suspected gift.\\n\\t\\t\\t\\tAfterwards, we will have K lines each containing the desired gift followed by the received gift by the kid, separated by a semicolon (;).\\n\\t\\t\\t\\tThe end of the input is determined by EOF.\\n\\t\\t\\t\",\n    \"level\": \"Level 5 / 10\",\n    \"name\": \"Suspicious Gifts\",\n    \"output\": \"\\t\\t\\t\\tFor each test case, print Y if Mrs. Claus should investigate or N, otherwise.\\n\\t\\t\\t\",\n    \"timelimit\": 2.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tAn disease has attacked the reindeers and made them unable to fly to deliver Christmas gifts.\\n\\nThe reindeer elves have managed to identify a rather curious fact about this disease, which is contagious only if two or more diseased reindeer are in the same stable.\\n\\nEach reindeer is in a room that is connected to another room by a corridor with \\\\(W\\\\)\\u00a0meters, where these connected rooms form a stable. The solution, proposed by the elves experts, was that old Santa removed some corridors for the disease to be controlled. To remove a corridor of \\\\(W\\\\) meters is necessary \\\\(W\\\\) hours and as it is very close to Christmas, Santa asked for his help to minimize the time.\\n\\nHelp Santa determine the minimum time as possible so the disease does not\\n\\nSanta's Tip: Initially there is only one stable, meaning all rooms are connected and there is no circular path.\\n\\n\\t\\t\\t\",\n    \"id\": 2932,\n    \"input\": \"\\t\\t\\t\\tThe first line contains two integers N\\u00a0\\\\((1 \\\\leq N \\\\leq 2 \\\\times 10^{5})\\\\) the number of reindeers and M\\u00a0\\\\((0 \\\\leq M \\\\leq N)\\\\)\\u00a0the number of reindeer that were diagnosed with the disease. Then follow \\\\(M\\n\\\\) integers, where the whole \\\\(M_{i}\\\\) is the index of the sick reindeer's room. Then follow \\\\(N-1\\n\\\\) lines each with three integers U, V, W, where \\\\((U \\\\neq V)\\\\)\\u00a0e \\\\( (0 \\\\leq U, V < N)\\\\) and \\\\((1 \\\\leq W \\\\leq 1 \\\\times 10^{6})\\\\) there is a \\\\(W\\\\)-sized corridor that connects rooms \\\\(U\\\\) and \\\\(V\\\\) (the corridor can be used in either direction).\\n\\t\\t\\t\",\n    \"level\": \"Level 9 / 10\",\n    \"name\": \"Santa's Reindeers\",\n    \"output\": \"\\t\\t\\t\\tThe minimum time for the disease to not spread.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Diego Rangel, FACIT  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Graph\",\n    \"description\": \"\\t\\t\\t\\tSo it's Christmas! And Santa Claus needs to perform a series of deliveries of gifts in different locations around the world.\\n\\nFor those who do not know, the reindeers are sick and he will need to use the gas-powered thunder to deliver the presents.\\n\\nA curious fact is that the roads between cities are perfectly straight and there is a gas station in each city. Santa Claus is a very smart guy and, to avoid problems, he fills the tank with a specific value \\\\(X\\\\)  is the value of the largest road between the cities that Santa is traveling, so he knows that he will never run out of gas between the two cities and the gifts will not be stolen. In addition, it always selects the path where the largest road is as minimum as possible.\\n\\nCan you help the Santa Claus determine what \\\\(X\\\\) value of gas he should use?\\n\\t\\t\\t\",\n    \"id\": 2933,\n    \"input\": \"\\t\\t\\t\\tThe first line is composed of two integers N \\\\((1 \\\\leq N \\\\leq 1\\\\times 10^{5})\\\\) and\\u00a0M\\u00a0\\\\((N-1 \\\\leq M \\\\leq min(2 \\\\times 10^{5}, \\\\frac{N \\\\times (N-1)}{2}))\\\\)is the number of cities and the number of roads. Next come\\u00a0\\\\(M\\n\\\\)\\u00a0lines with three integers\\u00a0u, v, w \\\\((u\\\\neq v) (0 \\\\leq u, v < N) (1 \\\\leq w \\\\leq 1 \\\\times 10^{6})\\\\), that there is a road connecting it with weight (you can use the road in any direction). After \\\\(M\\n\\\\)\\u00a0lines, has an integer \\\\(Q\\\\)\\u00a0\\\\((1 \\\\leq Q \\\\leq 1 \\\\times 10^{5})\\\\)\\u00a0 is the number of queries that Santa Claus will perform. Each of \\\\(Q\\\\)\\u00a0lines is composed of two integers\\u00a0 x and\\u00a0y\\u00a0\\\\((0 \\\\leq x, y, < N)\\\\)\\u00a0corresponds to the query: how much\\u00a0\\\\(X\\\\)\\u00a0 gasoline that Santa Claus will need to supply in every city between the cities\\u00a0 \\\\(x\\\\)\\u00a0and\\u00a0\\\\(y\\\\).\\n\\t\\t\\t\",\n    \"level\": \"Level 7 / 10\",\n    \"name\": \"Earth Sled Tour\",\n    \"output\": \"\\t\\t\\t\\t\\nPrint \\\\(Q\\\\) lines each with an integer \\\\(X\\\\)\\u00a0is the answer of the dilemma what Santa Claus is passed.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Gabriel Duarte, UFF  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Paradigms\",\n    \"description\": \"\\t\\t\\t\\tThe big Noel is a guy full of habits. This year he put all of his reindeer in a row and decided to select the most of them, following a few rules.\\n\\u00a0\\u00a0 \\u00a0- Reindeer can not be changed in order, ie a reindeer that is in position i in the original row should appear before the reindeer j in the chosen list, where i < j.\\n\\u00a0\\u00a0 \\u00a0- Reindeer of two adjacent positions in the final sequence must differ exactly by 1 unit in their heights.\\n\\nIf that was not enough, Noel realized that this sequence had few reindeer. So she decided to include a new reindeer in the original row. Taking into account that this new reindeer can be inserted in any position and he will always choose a reindeer with the best possible height.\\n\\nAfter making the task a little difficult, Noel ended up getting confused and is asking for your help to find out how many reindeer can be selected taking into account the rules imposed.\\n\\t\\t\\t\",\n    \"id\": 2934,\n    \"input\": \"\\t\\t\\t\\tThe first line of the entry contains an integer N (1 \\u2264 N \\u2264 105) corresponding to the number of reindeer. In the second line contains N integers Xi (1 \\u2264 Xi \\u2264 106) which represents the height of the ith reindeer.\\n\\t\\t\\t\",\n    \"level\": \"Level 8 / 10\",\n    \"name\": \"Noel and His Reindeer\",\n    \"output\": \"\\t\\t\\t\\tPrint as many reindeer as Noel can select.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}""{\n    \"author\": \"\\t\\t\\t\\tBy Francisco Elio Parente Arcos Filho, UEA  Brazil\\n\\t\\t\\t\",\n    \"category\": \"Ad-Hoc\",\n    \"description\": \"\\t\\t\\t\\tEveryone knows that Santa's Elfs are non-gendered and reproduce by magic. Every time a new Elf is needed, two other Elfs come together, build a snowman, put a hair of each of them on him and then use their magical powers to give life to the snowman who becomes an Elf. This Elf always inherits the magical powers of its creators, unless both creators possess the same type of power, so the new Elf does not inherit such power because there is a magical overhead. Elfs, too, never create other elves without magical powers.\\n\\n\\t\\t\\t\\tBecause it was so easy to create new Elfs, Santa realized that his subordinates were creating many new helpers, not thinking about the consequences. Simply to lessen your workloads. So he decided to forbid the creation of new Elfs who already had the same set of powers as any existing Elf, as this would be redundant given that a single Elf with that set of powers is more than enough for the function that is designated. In addition there may already be more than one Elf of that type because it was created before Good Old Man vetoed the creations.\\n\\n\\t\\t\\t\\tNow the little magical beings live a dilemma: Given the information of all types of powers that each Elf has, what is the maximum number of new Elfs that can still be created?\\n\\n\\n\\t\\t\\t\",\n    \"id\": 2935,\n    \"input\": \"\\t\\t\\t\\t\\tThe first line of the entry contains an integer T corresponding to the number of test cases that follow. The first line of a test case contains an integer N (1 &leq; N &leq; 105) representing the number of Elfs currently in the Santa factory. The following are N lines each containing a sequence of max. 64 characters Ci. Ci is always a lowercase or uppercase letter of the English alphabet or a digit from 0 to 9 and represents a type of magic power. Lowercase letters represent types of magic power distint than uppercase letters.\\n\\t\\t\\t\",\n    \"level\": \"Level 6 / 10\",\n    \"name\": \"DNA of Elf\",\n    \"output\": \"\\t\\t\\t\\tThe output consists of one line per test case containing the maximum number of Elfs that can still be created without contradicting Santa's ban.\\n\\t\\t\\t\",\n    \"timelimit\": 1.0\n}"